

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Nov  3 17:44:02 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	intentry,global,class=CODE,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,delta=2
    74                           	psect	text57,local,class=CODE,merge=1,delta=2
    75                           	psect	text58,local,class=CODE,merge=1,delta=2
    76                           	psect	text59,local,class=CODE,merge=1,delta=2
    77                           	psect	text60,local,class=CODE,merge=1,delta=2
    78                           	psect	text61,local,class=CODE,merge=1,delta=2
    79                           	psect	text62,local,class=CODE,merge=1,delta=2
    80                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    81                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    82                           	psect	text65,local,class=CODE,merge=1,inline,delta=2
    83                           	psect	text66,local,class=CODE,merge=1,inline,delta=2
    84                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
    85                           	psect	text68,local,class=CODE,merge=1,inline,delta=2
    86                           	psect	text69,local,class=CODE,merge=1,inline,delta=2
    87                           	psect	text70,local,class=CODE,merge=1,delta=2
    88                           	psect	text71,local,class=CODE,merge=1,delta=2
    89                           	psect	text72,local,class=CODE,merge=1,delta=2
    90                           	psect	text73,local,class=CODE,merge=1,delta=2
    91                           	psect	text74,local,class=CODE,merge=1,delta=2
    92                           	psect	text75,local,class=CODE,merge=1,delta=2
    93                           	psect	text76,local,class=CODE,merge=1,delta=2
    94                           	psect	text77,local,class=CODE,merge=1,delta=2
    95                           	psect	text78,local,class=CODE,merge=1,delta=2
    96                           	psect	text79,local,class=CODE,merge=1,delta=2
    97                           	psect	text80,local,class=CODE,merge=1,delta=2
    98                           	psect	text81,local,class=CODE,merge=1,inline,delta=2
    99                           	psect	text82,local,class=CODE,merge=1,inline,delta=2
   100                           	psect	text83,local,class=CODE,merge=1,inline,delta=2
   101                           	psect	text84,local,class=CODE,merge=1,delta=2
   102                           	psect	text85,local,class=CODE,merge=1,delta=2
   103                           	psect	text86,local,class=CODE,merge=1,delta=2
   104                           	psect	text87,local,class=CODE,merge=1,delta=2
   105                           	psect	text88,local,class=CODE,merge=1,delta=2
   106                           	psect	text89,local,class=CODE,merge=1,delta=2
   107                           	psect	text90,local,class=CODE,merge=1,delta=2
   108                           	psect	text91,local,class=CODE,merge=1,delta=2
   109                           	psect	text92,local,class=CODE,merge=1,delta=2
   110                           	psect	text93,local,class=CODE,merge=1,delta=2
   111                           	psect	text94,local,class=CODE,merge=1,delta=2
   112                           	psect	text95,local,class=CODE,merge=1,delta=2
   113                           	psect	text96,local,class=CODE,merge=1,delta=2
   114                           	psect	text97,local,class=CODE,merge=1,delta=2
   115                           	psect	text98,local,class=CODE,merge=1,delta=2
   116                           	psect	text99,local,class=CODE,merge=1,delta=2
   117                           	psect	text100,local,class=CODE,merge=1,delta=2
   118                           	dabs	1,0x7E,2
   119  0000                     
   120                           ; Version 2.10
   121                           ; Generated 31/07/2019 GMT
   122                           ; 
   123                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   124                           ; All rights reserved.
   125                           ; 
   126                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   127                           ; 
   128                           ; Redistribution and use in source and binary forms, with or without modification, are
   129                           ; permitted provided that the following conditions are met:
   130                           ; 
   131                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   132                           ;        conditions and the following disclaimer.
   133                           ; 
   134                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   135                           ;        of conditions and the following disclaimer in the documentation and/or other
   136                           ;        materials provided with the distribution.
   137                           ; 
   138                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   139                           ;        software without specific prior written permission.
   140                           ; 
   141                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   142                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   143                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   144                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   145                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   146                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   147                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   148                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   149                           ; 
   150                           ; 
   151                           ; Code-generator required, PIC16F18875 Definitions
   152                           ; 
   153                           ; SFR Addresses
   154  0000                     	;# 
   155  0001                     	;# 
   156  0002                     	;# 
   157  0003                     	;# 
   158  0004                     	;# 
   159  0005                     	;# 
   160  0006                     	;# 
   161  0007                     	;# 
   162  0008                     	;# 
   163  0009                     	;# 
   164  000A                     	;# 
   165  000B                     	;# 
   166  000C                     	;# 
   167  000D                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001C                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001D                     	;# 
   185  001E                     	;# 
   186  001F                     	;# 
   187  008C                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0093                     	;# 
   197  0094                     	;# 
   198  0095                     	;# 
   199  0096                     	;# 
   200  0097                     	;# 
   201  0098                     	;# 
   202  0099                     	;# 
   203  009A                     	;# 
   204  009B                     	;# 
   205  009C                     	;# 
   206  009D                     	;# 
   207  009E                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0110                     	;# 
   214  0110                     	;# 
   215  0111                     	;# 
   216  0112                     	;# 
   217  0112                     	;# 
   218  0113                     	;# 
   219  0114                     	;# 
   220  0114                     	;# 
   221  0115                     	;# 
   222  0116                     	;# 
   223  0116                     	;# 
   224  0117                     	;# 
   225  0119                     	;# 
   226  0119                     	;# 
   227  0119                     	;# 
   228  011A                     	;# 
   229  011A                     	;# 
   230  011A                     	;# 
   231  011B                     	;# 
   232  011B                     	;# 
   233  011B                     	;# 
   234  011B                     	;# 
   235  011B                     	;# 
   236  011C                     	;# 
   237  011C                     	;# 
   238  011C                     	;# 
   239  011D                     	;# 
   240  011D                     	;# 
   241  011D                     	;# 
   242  011E                     	;# 
   243  011E                     	;# 
   244  011E                     	;# 
   245  011F                     	;# 
   246  011F                     	;# 
   247  011F                     	;# 
   248  011F                     	;# 
   249  011F                     	;# 
   250  018C                     	;# 
   251  018D                     	;# 
   252  018E                     	;# 
   253  018F                     	;# 
   254  0190                     	;# 
   255  0191                     	;# 
   256  0192                     	;# 
   257  0196                     	;# 
   258  0197                     	;# 
   259  0198                     	;# 
   260  0199                     	;# 
   261  019A                     	;# 
   262  019B                     	;# 
   263  019C                     	;# 
   264  020C                     	;# 
   265  020C                     	;# 
   266  020D                     	;# 
   267  020E                     	;# 
   268  020F                     	;# 
   269  020F                     	;# 
   270  0210                     	;# 
   271  0210                     	;# 
   272  0211                     	;# 
   273  0211                     	;# 
   274  0212                     	;# 
   275  0212                     	;# 
   276  0213                     	;# 
   277  0214                     	;# 
   278  0215                     	;# 
   279  0215                     	;# 
   280  0216                     	;# 
   281  0216                     	;# 
   282  0217                     	;# 
   283  0217                     	;# 
   284  0218                     	;# 
   285  0218                     	;# 
   286  0219                     	;# 
   287  021A                     	;# 
   288  021B                     	;# 
   289  021B                     	;# 
   290  021C                     	;# 
   291  021C                     	;# 
   292  021D                     	;# 
   293  021D                     	;# 
   294  021E                     	;# 
   295  021F                     	;# 
   296  028C                     	;# 
   297  028C                     	;# 
   298  028D                     	;# 
   299  028D                     	;# 
   300  028E                     	;# 
   301  028F                     	;# 
   302  0290                     	;# 
   303  0290                     	;# 
   304  0291                     	;# 
   305  0292                     	;# 
   306  0292                     	;# 
   307  0293                     	;# 
   308  0293                     	;# 
   309  0294                     	;# 
   310  0295                     	;# 
   311  0296                     	;# 
   312  0296                     	;# 
   313  0297                     	;# 
   314  0298                     	;# 
   315  0298                     	;# 
   316  0299                     	;# 
   317  0299                     	;# 
   318  029A                     	;# 
   319  029B                     	;# 
   320  029C                     	;# 
   321  029C                     	;# 
   322  029D                     	;# 
   323  030C                     	;# 
   324  030C                     	;# 
   325  030D                     	;# 
   326  030E                     	;# 
   327  030F                     	;# 
   328  0310                     	;# 
   329  0310                     	;# 
   330  0311                     	;# 
   331  0312                     	;# 
   332  0313                     	;# 
   333  0314                     	;# 
   334  0314                     	;# 
   335  0315                     	;# 
   336  0316                     	;# 
   337  0317                     	;# 
   338  0318                     	;# 
   339  0318                     	;# 
   340  0319                     	;# 
   341  031A                     	;# 
   342  031B                     	;# 
   343  031C                     	;# 
   344  031C                     	;# 
   345  031D                     	;# 
   346  031E                     	;# 
   347  031F                     	;# 
   348  038C                     	;# 
   349  038C                     	;# 
   350  038D                     	;# 
   351  038E                     	;# 
   352  0390                     	;# 
   353  0390                     	;# 
   354  0391                     	;# 
   355  0392                     	;# 
   356  040C                     	;# 
   357  040D                     	;# 
   358  040E                     	;# 
   359  040F                     	;# 
   360  0410                     	;# 
   361  0411                     	;# 
   362  0416                     	;# 
   363  0416                     	;# 
   364  0417                     	;# 
   365  0418                     	;# 
   366  0418                     	;# 
   367  0419                     	;# 
   368  041A                     	;# 
   369  041A                     	;# 
   370  041B                     	;# 
   371  041C                     	;# 
   372  041C                     	;# 
   373  041D                     	;# 
   374  041E                     	;# 
   375  041F                     	;# 
   376  048C                     	;# 
   377  048C                     	;# 
   378  048D                     	;# 
   379  048E                     	;# 
   380  048F                     	;# 
   381  048F                     	;# 
   382  0490                     	;# 
   383  0491                     	;# 
   384  0492                     	;# 
   385  0492                     	;# 
   386  0493                     	;# 
   387  0494                     	;# 
   388  0495                     	;# 
   389  0495                     	;# 
   390  0496                     	;# 
   391  0497                     	;# 
   392  0498                     	;# 
   393  0499                     	;# 
   394  049A                     	;# 
   395  049B                     	;# 
   396  049C                     	;# 
   397  049D                     	;# 
   398  050C                     	;# 
   399  050C                     	;# 
   400  050D                     	;# 
   401  050E                     	;# 
   402  050F                     	;# 
   403  050F                     	;# 
   404  0510                     	;# 
   405  0511                     	;# 
   406  0512                     	;# 
   407  0512                     	;# 
   408  0513                     	;# 
   409  0514                     	;# 
   410  0515                     	;# 
   411  0515                     	;# 
   412  0516                     	;# 
   413  0517                     	;# 
   414  0518                     	;# 
   415  0519                     	;# 
   416  051A                     	;# 
   417  051B                     	;# 
   418  051C                     	;# 
   419  051D                     	;# 
   420  058C                     	;# 
   421  058C                     	;# 
   422  058D                     	;# 
   423  058E                     	;# 
   424  058F                     	;# 
   425  058F                     	;# 
   426  0590                     	;# 
   427  0591                     	;# 
   428  0592                     	;# 
   429  0593                     	;# 
   430  060C                     	;# 
   431  060D                     	;# 
   432  060E                     	;# 
   433  060F                     	;# 
   434  0610                     	;# 
   435  0611                     	;# 
   436  0612                     	;# 
   437  0613                     	;# 
   438  0614                     	;# 
   439  0616                     	;# 
   440  0617                     	;# 
   441  0618                     	;# 
   442  0619                     	;# 
   443  061A                     	;# 
   444  061B                     	;# 
   445  061C                     	;# 
   446  061D                     	;# 
   447  061E                     	;# 
   448  068C                     	;# 
   449  068D                     	;# 
   450  068E                     	;# 
   451  068F                     	;# 
   452  0690                     	;# 
   453  0691                     	;# 
   454  0692                     	;# 
   455  0693                     	;# 
   456  0694                     	;# 
   457  070C                     	;# 
   458  070D                     	;# 
   459  070E                     	;# 
   460  070F                     	;# 
   461  0710                     	;# 
   462  0711                     	;# 
   463  0712                     	;# 
   464  0713                     	;# 
   465  0714                     	;# 
   466  0716                     	;# 
   467  0717                     	;# 
   468  0718                     	;# 
   469  0719                     	;# 
   470  071A                     	;# 
   471  071B                     	;# 
   472  071C                     	;# 
   473  071D                     	;# 
   474  071E                     	;# 
   475  0796                     	;# 
   476  0797                     	;# 
   477  0798                     	;# 
   478  0799                     	;# 
   479  079A                     	;# 
   480  079B                     	;# 
   481  080C                     	;# 
   482  080D                     	;# 
   483  080E                     	;# 
   484  080F                     	;# 
   485  0810                     	;# 
   486  0811                     	;# 
   487  0812                     	;# 
   488  0813                     	;# 
   489  0814                     	;# 
   490  081A                     	;# 
   491  081B                     	;# 
   492  081C                     	;# 
   493  081D                     	;# 
   494  081E                     	;# 
   495  081F                     	;# 
   496  088C                     	;# 
   497  088D                     	;# 
   498  088E                     	;# 
   499  088F                     	;# 
   500  0890                     	;# 
   501  0891                     	;# 
   502  0892                     	;# 
   503  0893                     	;# 
   504  0895                     	;# 
   505  0896                     	;# 
   506  0897                     	;# 
   507  0898                     	;# 
   508  0899                     	;# 
   509  089A                     	;# 
   510  089B                     	;# 
   511  090C                     	;# 
   512  090E                     	;# 
   513  090F                     	;# 
   514  091F                     	;# 
   515  091F                     	;# 
   516  098F                     	;# 
   517  098F                     	;# 
   518  0990                     	;# 
   519  0991                     	;# 
   520  0992                     	;# 
   521  0993                     	;# 
   522  0994                     	;# 
   523  0995                     	;# 
   524  0996                     	;# 
   525  0997                     	;# 
   526  0E0F                     	;# 
   527  0E10                     	;# 
   528  0E11                     	;# 
   529  0E12                     	;# 
   530  0E13                     	;# 
   531  0E14                     	;# 
   532  0E15                     	;# 
   533  0E16                     	;# 
   534  0E17                     	;# 
   535  0E18                     	;# 
   536  0E19                     	;# 
   537  0E1A                     	;# 
   538  0E1B                     	;# 
   539  0E1C                     	;# 
   540  0E1D                     	;# 
   541  0E1E                     	;# 
   542  0E1F                     	;# 
   543  0E20                     	;# 
   544  0E21                     	;# 
   545  0E22                     	;# 
   546  0E23                     	;# 
   547  0E24                     	;# 
   548  0E25                     	;# 
   549  0E26                     	;# 
   550  0E27                     	;# 
   551  0E28                     	;# 
   552  0E29                     	;# 
   553  0E2A                     	;# 
   554  0E2B                     	;# 
   555  0E2C                     	;# 
   556  0E2D                     	;# 
   557  0E2E                     	;# 
   558  0E2F                     	;# 
   559  0E30                     	;# 
   560  0E31                     	;# 
   561  0E32                     	;# 
   562  0E33                     	;# 
   563  0E34                     	;# 
   564  0E35                     	;# 
   565  0E36                     	;# 
   566  0E37                     	;# 
   567  0E8F                     	;# 
   568  0E90                     	;# 
   569  0E91                     	;# 
   570  0E92                     	;# 
   571  0E93                     	;# 
   572  0E94                     	;# 
   573  0E95                     	;# 
   574  0E96                     	;# 
   575  0E97                     	;# 
   576  0E9C                     	;# 
   577  0E9D                     	;# 
   578  0E9E                     	;# 
   579  0EA1                     	;# 
   580  0EA2                     	;# 
   581  0EA3                     	;# 
   582  0EA4                     	;# 
   583  0EA5                     	;# 
   584  0EA9                     	;# 
   585  0EAA                     	;# 
   586  0EAB                     	;# 
   587  0EAC                     	;# 
   588  0EB1                     	;# 
   589  0EB2                     	;# 
   590  0EB3                     	;# 
   591  0EB8                     	;# 
   592  0EB9                     	;# 
   593  0EBA                     	;# 
   594  0EBB                     	;# 
   595  0EBC                     	;# 
   596  0EBD                     	;# 
   597  0EBE                     	;# 
   598  0EC3                     	;# 
   599  0EC5                     	;# 
   600  0EC6                     	;# 
   601  0EC7                     	;# 
   602  0EC8                     	;# 
   603  0EC9                     	;# 
   604  0ECA                     	;# 
   605  0ECB                     	;# 
   606  0ECC                     	;# 
   607  0F10                     	;# 
   608  0F11                     	;# 
   609  0F12                     	;# 
   610  0F13                     	;# 
   611  0F14                     	;# 
   612  0F15                     	;# 
   613  0F16                     	;# 
   614  0F17                     	;# 
   615  0F18                     	;# 
   616  0F19                     	;# 
   617  0F1A                     	;# 
   618  0F1B                     	;# 
   619  0F1C                     	;# 
   620  0F1D                     	;# 
   621  0F1E                     	;# 
   622  0F1F                     	;# 
   623  0F20                     	;# 
   624  0F21                     	;# 
   625  0F22                     	;# 
   626  0F23                     	;# 
   627  0F24                     	;# 
   628  0F25                     	;# 
   629  0F26                     	;# 
   630  0F27                     	;# 
   631  0F28                     	;# 
   632  0F29                     	;# 
   633  0F2A                     	;# 
   634  0F2B                     	;# 
   635  0F2C                     	;# 
   636  0F2D                     	;# 
   637  0F2E                     	;# 
   638  0F2F                     	;# 
   639  0F30                     	;# 
   640  0F31                     	;# 
   641  0F32                     	;# 
   642  0F38                     	;# 
   643  0F39                     	;# 
   644  0F3A                     	;# 
   645  0F3B                     	;# 
   646  0F3C                     	;# 
   647  0F3D                     	;# 
   648  0F3E                     	;# 
   649  0F3F                     	;# 
   650  0F40                     	;# 
   651  0F41                     	;# 
   652  0F43                     	;# 
   653  0F44                     	;# 
   654  0F45                     	;# 
   655  0F46                     	;# 
   656  0F47                     	;# 
   657  0F48                     	;# 
   658  0F49                     	;# 
   659  0F4A                     	;# 
   660  0F4B                     	;# 
   661  0F4C                     	;# 
   662  0F4E                     	;# 
   663  0F4F                     	;# 
   664  0F50                     	;# 
   665  0F51                     	;# 
   666  0F52                     	;# 
   667  0F53                     	;# 
   668  0F54                     	;# 
   669  0F55                     	;# 
   670  0F56                     	;# 
   671  0F57                     	;# 
   672  0F59                     	;# 
   673  0F5A                     	;# 
   674  0F5B                     	;# 
   675  0F5C                     	;# 
   676  0F5D                     	;# 
   677  0F61                     	;# 
   678  0F62                     	;# 
   679  0F64                     	;# 
   680  0F65                     	;# 
   681  0F66                     	;# 
   682  0F67                     	;# 
   683  0F68                     	;# 
   684  0F69                     	;# 
   685  0F6A                     	;# 
   686  0F6B                     	;# 
   687  0F6C                     	;# 
   688  0F6D                     	;# 
   689  0FE4                     	;# 
   690  0FE5                     	;# 
   691  0FE6                     	;# 
   692  0FE7                     	;# 
   693  0FE8                     	;# 
   694  0FE9                     	;# 
   695  0FEA                     	;# 
   696  0FEB                     	;# 
   697  0FED                     	;# 
   698  0FEE                     	;# 
   699  0FEF                     	;# 
   700  0000                     	;# 
   701  0001                     	;# 
   702  0002                     	;# 
   703  0003                     	;# 
   704  0004                     	;# 
   705  0005                     	;# 
   706  0006                     	;# 
   707  0007                     	;# 
   708  0008                     	;# 
   709  0009                     	;# 
   710  000A                     	;# 
   711  000B                     	;# 
   712  000C                     	;# 
   713  000D                     	;# 
   714  000E                     	;# 
   715  000F                     	;# 
   716  0010                     	;# 
   717  0011                     	;# 
   718  0012                     	;# 
   719  0013                     	;# 
   720  0014                     	;# 
   721  0015                     	;# 
   722  0016                     	;# 
   723  0017                     	;# 
   724  0018                     	;# 
   725  0019                     	;# 
   726  001A                     	;# 
   727  001C                     	;# 
   728  001C                     	;# 
   729  001D                     	;# 
   730  001D                     	;# 
   731  001E                     	;# 
   732  001F                     	;# 
   733  008C                     	;# 
   734  008C                     	;# 
   735  008D                     	;# 
   736  008E                     	;# 
   737  008E                     	;# 
   738  008F                     	;# 
   739  0090                     	;# 
   740  0090                     	;# 
   741  0091                     	;# 
   742  0093                     	;# 
   743  0094                     	;# 
   744  0095                     	;# 
   745  0096                     	;# 
   746  0097                     	;# 
   747  0098                     	;# 
   748  0099                     	;# 
   749  009A                     	;# 
   750  009B                     	;# 
   751  009C                     	;# 
   752  009D                     	;# 
   753  009E                     	;# 
   754  010C                     	;# 
   755  010D                     	;# 
   756  010E                     	;# 
   757  010E                     	;# 
   758  010F                     	;# 
   759  0110                     	;# 
   760  0110                     	;# 
   761  0111                     	;# 
   762  0112                     	;# 
   763  0112                     	;# 
   764  0113                     	;# 
   765  0114                     	;# 
   766  0114                     	;# 
   767  0115                     	;# 
   768  0116                     	;# 
   769  0116                     	;# 
   770  0117                     	;# 
   771  0119                     	;# 
   772  0119                     	;# 
   773  0119                     	;# 
   774  011A                     	;# 
   775  011A                     	;# 
   776  011A                     	;# 
   777  011B                     	;# 
   778  011B                     	;# 
   779  011B                     	;# 
   780  011B                     	;# 
   781  011B                     	;# 
   782  011C                     	;# 
   783  011C                     	;# 
   784  011C                     	;# 
   785  011D                     	;# 
   786  011D                     	;# 
   787  011D                     	;# 
   788  011E                     	;# 
   789  011E                     	;# 
   790  011E                     	;# 
   791  011F                     	;# 
   792  011F                     	;# 
   793  011F                     	;# 
   794  011F                     	;# 
   795  011F                     	;# 
   796  018C                     	;# 
   797  018D                     	;# 
   798  018E                     	;# 
   799  018F                     	;# 
   800  0190                     	;# 
   801  0191                     	;# 
   802  0192                     	;# 
   803  0196                     	;# 
   804  0197                     	;# 
   805  0198                     	;# 
   806  0199                     	;# 
   807  019A                     	;# 
   808  019B                     	;# 
   809  019C                     	;# 
   810  020C                     	;# 
   811  020C                     	;# 
   812  020D                     	;# 
   813  020E                     	;# 
   814  020F                     	;# 
   815  020F                     	;# 
   816  0210                     	;# 
   817  0210                     	;# 
   818  0211                     	;# 
   819  0211                     	;# 
   820  0212                     	;# 
   821  0212                     	;# 
   822  0213                     	;# 
   823  0214                     	;# 
   824  0215                     	;# 
   825  0215                     	;# 
   826  0216                     	;# 
   827  0216                     	;# 
   828  0217                     	;# 
   829  0217                     	;# 
   830  0218                     	;# 
   831  0218                     	;# 
   832  0219                     	;# 
   833  021A                     	;# 
   834  021B                     	;# 
   835  021B                     	;# 
   836  021C                     	;# 
   837  021C                     	;# 
   838  021D                     	;# 
   839  021D                     	;# 
   840  021E                     	;# 
   841  021F                     	;# 
   842  028C                     	;# 
   843  028C                     	;# 
   844  028D                     	;# 
   845  028D                     	;# 
   846  028E                     	;# 
   847  028F                     	;# 
   848  0290                     	;# 
   849  0290                     	;# 
   850  0291                     	;# 
   851  0292                     	;# 
   852  0292                     	;# 
   853  0293                     	;# 
   854  0293                     	;# 
   855  0294                     	;# 
   856  0295                     	;# 
   857  0296                     	;# 
   858  0296                     	;# 
   859  0297                     	;# 
   860  0298                     	;# 
   861  0298                     	;# 
   862  0299                     	;# 
   863  0299                     	;# 
   864  029A                     	;# 
   865  029B                     	;# 
   866  029C                     	;# 
   867  029C                     	;# 
   868  029D                     	;# 
   869  030C                     	;# 
   870  030C                     	;# 
   871  030D                     	;# 
   872  030E                     	;# 
   873  030F                     	;# 
   874  0310                     	;# 
   875  0310                     	;# 
   876  0311                     	;# 
   877  0312                     	;# 
   878  0313                     	;# 
   879  0314                     	;# 
   880  0314                     	;# 
   881  0315                     	;# 
   882  0316                     	;# 
   883  0317                     	;# 
   884  0318                     	;# 
   885  0318                     	;# 
   886  0319                     	;# 
   887  031A                     	;# 
   888  031B                     	;# 
   889  031C                     	;# 
   890  031C                     	;# 
   891  031D                     	;# 
   892  031E                     	;# 
   893  031F                     	;# 
   894  038C                     	;# 
   895  038C                     	;# 
   896  038D                     	;# 
   897  038E                     	;# 
   898  0390                     	;# 
   899  0390                     	;# 
   900  0391                     	;# 
   901  0392                     	;# 
   902  040C                     	;# 
   903  040D                     	;# 
   904  040E                     	;# 
   905  040F                     	;# 
   906  0410                     	;# 
   907  0411                     	;# 
   908  0416                     	;# 
   909  0416                     	;# 
   910  0417                     	;# 
   911  0418                     	;# 
   912  0418                     	;# 
   913  0419                     	;# 
   914  041A                     	;# 
   915  041A                     	;# 
   916  041B                     	;# 
   917  041C                     	;# 
   918  041C                     	;# 
   919  041D                     	;# 
   920  041E                     	;# 
   921  041F                     	;# 
   922  048C                     	;# 
   923  048C                     	;# 
   924  048D                     	;# 
   925  048E                     	;# 
   926  048F                     	;# 
   927  048F                     	;# 
   928  0490                     	;# 
   929  0491                     	;# 
   930  0492                     	;# 
   931  0492                     	;# 
   932  0493                     	;# 
   933  0494                     	;# 
   934  0495                     	;# 
   935  0495                     	;# 
   936  0496                     	;# 
   937  0497                     	;# 
   938  0498                     	;# 
   939  0499                     	;# 
   940  049A                     	;# 
   941  049B                     	;# 
   942  049C                     	;# 
   943  049D                     	;# 
   944  050C                     	;# 
   945  050C                     	;# 
   946  050D                     	;# 
   947  050E                     	;# 
   948  050F                     	;# 
   949  050F                     	;# 
   950  0510                     	;# 
   951  0511                     	;# 
   952  0512                     	;# 
   953  0512                     	;# 
   954  0513                     	;# 
   955  0514                     	;# 
   956  0515                     	;# 
   957  0515                     	;# 
   958  0516                     	;# 
   959  0517                     	;# 
   960  0518                     	;# 
   961  0519                     	;# 
   962  051A                     	;# 
   963  051B                     	;# 
   964  051C                     	;# 
   965  051D                     	;# 
   966  058C                     	;# 
   967  058C                     	;# 
   968  058D                     	;# 
   969  058E                     	;# 
   970  058F                     	;# 
   971  058F                     	;# 
   972  0590                     	;# 
   973  0591                     	;# 
   974  0592                     	;# 
   975  0593                     	;# 
   976  060C                     	;# 
   977  060D                     	;# 
   978  060E                     	;# 
   979  060F                     	;# 
   980  0610                     	;# 
   981  0611                     	;# 
   982  0612                     	;# 
   983  0613                     	;# 
   984  0614                     	;# 
   985  0616                     	;# 
   986  0617                     	;# 
   987  0618                     	;# 
   988  0619                     	;# 
   989  061A                     	;# 
   990  061B                     	;# 
   991  061C                     	;# 
   992  061D                     	;# 
   993  061E                     	;# 
   994  068C                     	;# 
   995  068D                     	;# 
   996  068E                     	;# 
   997  068F                     	;# 
   998  0690                     	;# 
   999  0691                     	;# 
  1000  0692                     	;# 
  1001  0693                     	;# 
  1002  0694                     	;# 
  1003  070C                     	;# 
  1004  070D                     	;# 
  1005  070E                     	;# 
  1006  070F                     	;# 
  1007  0710                     	;# 
  1008  0711                     	;# 
  1009  0712                     	;# 
  1010  0713                     	;# 
  1011  0714                     	;# 
  1012  0716                     	;# 
  1013  0717                     	;# 
  1014  0718                     	;# 
  1015  0719                     	;# 
  1016  071A                     	;# 
  1017  071B                     	;# 
  1018  071C                     	;# 
  1019  071D                     	;# 
  1020  071E                     	;# 
  1021  0796                     	;# 
  1022  0797                     	;# 
  1023  0798                     	;# 
  1024  0799                     	;# 
  1025  079A                     	;# 
  1026  079B                     	;# 
  1027  080C                     	;# 
  1028  080D                     	;# 
  1029  080E                     	;# 
  1030  080F                     	;# 
  1031  0810                     	;# 
  1032  0811                     	;# 
  1033  0812                     	;# 
  1034  0813                     	;# 
  1035  0814                     	;# 
  1036  081A                     	;# 
  1037  081B                     	;# 
  1038  081C                     	;# 
  1039  081D                     	;# 
  1040  081E                     	;# 
  1041  081F                     	;# 
  1042  088C                     	;# 
  1043  088D                     	;# 
  1044  088E                     	;# 
  1045  088F                     	;# 
  1046  0890                     	;# 
  1047  0891                     	;# 
  1048  0892                     	;# 
  1049  0893                     	;# 
  1050  0895                     	;# 
  1051  0896                     	;# 
  1052  0897                     	;# 
  1053  0898                     	;# 
  1054  0899                     	;# 
  1055  089A                     	;# 
  1056  089B                     	;# 
  1057  090C                     	;# 
  1058  090E                     	;# 
  1059  090F                     	;# 
  1060  091F                     	;# 
  1061  091F                     	;# 
  1062  098F                     	;# 
  1063  098F                     	;# 
  1064  0990                     	;# 
  1065  0991                     	;# 
  1066  0992                     	;# 
  1067  0993                     	;# 
  1068  0994                     	;# 
  1069  0995                     	;# 
  1070  0996                     	;# 
  1071  0997                     	;# 
  1072  0E0F                     	;# 
  1073  0E10                     	;# 
  1074  0E11                     	;# 
  1075  0E12                     	;# 
  1076  0E13                     	;# 
  1077  0E14                     	;# 
  1078  0E15                     	;# 
  1079  0E16                     	;# 
  1080  0E17                     	;# 
  1081  0E18                     	;# 
  1082  0E19                     	;# 
  1083  0E1A                     	;# 
  1084  0E1B                     	;# 
  1085  0E1C                     	;# 
  1086  0E1D                     	;# 
  1087  0E1E                     	;# 
  1088  0E1F                     	;# 
  1089  0E20                     	;# 
  1090  0E21                     	;# 
  1091  0E22                     	;# 
  1092  0E23                     	;# 
  1093  0E24                     	;# 
  1094  0E25                     	;# 
  1095  0E26                     	;# 
  1096  0E27                     	;# 
  1097  0E28                     	;# 
  1098  0E29                     	;# 
  1099  0E2A                     	;# 
  1100  0E2B                     	;# 
  1101  0E2C                     	;# 
  1102  0E2D                     	;# 
  1103  0E2E                     	;# 
  1104  0E2F                     	;# 
  1105  0E30                     	;# 
  1106  0E31                     	;# 
  1107  0E32                     	;# 
  1108  0E33                     	;# 
  1109  0E34                     	;# 
  1110  0E35                     	;# 
  1111  0E36                     	;# 
  1112  0E37                     	;# 
  1113  0E8F                     	;# 
  1114  0E90                     	;# 
  1115  0E91                     	;# 
  1116  0E92                     	;# 
  1117  0E93                     	;# 
  1118  0E94                     	;# 
  1119  0E95                     	;# 
  1120  0E96                     	;# 
  1121  0E97                     	;# 
  1122  0E9C                     	;# 
  1123  0E9D                     	;# 
  1124  0E9E                     	;# 
  1125  0EA1                     	;# 
  1126  0EA2                     	;# 
  1127  0EA3                     	;# 
  1128  0EA4                     	;# 
  1129  0EA5                     	;# 
  1130  0EA9                     	;# 
  1131  0EAA                     	;# 
  1132  0EAB                     	;# 
  1133  0EAC                     	;# 
  1134  0EB1                     	;# 
  1135  0EB2                     	;# 
  1136  0EB3                     	;# 
  1137  0EB8                     	;# 
  1138  0EB9                     	;# 
  1139  0EBA                     	;# 
  1140  0EBB                     	;# 
  1141  0EBC                     	;# 
  1142  0EBD                     	;# 
  1143  0EBE                     	;# 
  1144  0EC3                     	;# 
  1145  0EC5                     	;# 
  1146  0EC6                     	;# 
  1147  0EC7                     	;# 
  1148  0EC8                     	;# 
  1149  0EC9                     	;# 
  1150  0ECA                     	;# 
  1151  0ECB                     	;# 
  1152  0ECC                     	;# 
  1153  0F10                     	;# 
  1154  0F11                     	;# 
  1155  0F12                     	;# 
  1156  0F13                     	;# 
  1157  0F14                     	;# 
  1158  0F15                     	;# 
  1159  0F16                     	;# 
  1160  0F17                     	;# 
  1161  0F18                     	;# 
  1162  0F19                     	;# 
  1163  0F1A                     	;# 
  1164  0F1B                     	;# 
  1165  0F1C                     	;# 
  1166  0F1D                     	;# 
  1167  0F1E                     	;# 
  1168  0F1F                     	;# 
  1169  0F20                     	;# 
  1170  0F21                     	;# 
  1171  0F22                     	;# 
  1172  0F23                     	;# 
  1173  0F24                     	;# 
  1174  0F25                     	;# 
  1175  0F26                     	;# 
  1176  0F27                     	;# 
  1177  0F28                     	;# 
  1178  0F29                     	;# 
  1179  0F2A                     	;# 
  1180  0F2B                     	;# 
  1181  0F2C                     	;# 
  1182  0F2D                     	;# 
  1183  0F2E                     	;# 
  1184  0F2F                     	;# 
  1185  0F30                     	;# 
  1186  0F31                     	;# 
  1187  0F32                     	;# 
  1188  0F38                     	;# 
  1189  0F39                     	;# 
  1190  0F3A                     	;# 
  1191  0F3B                     	;# 
  1192  0F3C                     	;# 
  1193  0F3D                     	;# 
  1194  0F3E                     	;# 
  1195  0F3F                     	;# 
  1196  0F40                     	;# 
  1197  0F41                     	;# 
  1198  0F43                     	;# 
  1199  0F44                     	;# 
  1200  0F45                     	;# 
  1201  0F46                     	;# 
  1202  0F47                     	;# 
  1203  0F48                     	;# 
  1204  0F49                     	;# 
  1205  0F4A                     	;# 
  1206  0F4B                     	;# 
  1207  0F4C                     	;# 
  1208  0F4E                     	;# 
  1209  0F4F                     	;# 
  1210  0F50                     	;# 
  1211  0F51                     	;# 
  1212  0F52                     	;# 
  1213  0F53                     	;# 
  1214  0F54                     	;# 
  1215  0F55                     	;# 
  1216  0F56                     	;# 
  1217  0F57                     	;# 
  1218  0F59                     	;# 
  1219  0F5A                     	;# 
  1220  0F5B                     	;# 
  1221  0F5C                     	;# 
  1222  0F5D                     	;# 
  1223  0F61                     	;# 
  1224  0F62                     	;# 
  1225  0F64                     	;# 
  1226  0F65                     	;# 
  1227  0F66                     	;# 
  1228  0F67                     	;# 
  1229  0F68                     	;# 
  1230  0F69                     	;# 
  1231  0F6A                     	;# 
  1232  0F6B                     	;# 
  1233  0F6C                     	;# 
  1234  0F6D                     	;# 
  1235  0FE4                     	;# 
  1236  0FE5                     	;# 
  1237  0FE6                     	;# 
  1238  0FE7                     	;# 
  1239  0FE8                     	;# 
  1240  0FE9                     	;# 
  1241  0FEA                     	;# 
  1242  0FEB                     	;# 
  1243  0FED                     	;# 
  1244  0FEE                     	;# 
  1245  0FEF                     	;# 
  1246  0000                     	;# 
  1247  0001                     	;# 
  1248  0002                     	;# 
  1249  0003                     	;# 
  1250  0004                     	;# 
  1251  0005                     	;# 
  1252  0006                     	;# 
  1253  0007                     	;# 
  1254  0008                     	;# 
  1255  0009                     	;# 
  1256  000A                     	;# 
  1257  000B                     	;# 
  1258  000C                     	;# 
  1259  000D                     	;# 
  1260  000E                     	;# 
  1261  000F                     	;# 
  1262  0010                     	;# 
  1263  0011                     	;# 
  1264  0012                     	;# 
  1265  0013                     	;# 
  1266  0014                     	;# 
  1267  0015                     	;# 
  1268  0016                     	;# 
  1269  0017                     	;# 
  1270  0018                     	;# 
  1271  0019                     	;# 
  1272  001A                     	;# 
  1273  001C                     	;# 
  1274  001C                     	;# 
  1275  001D                     	;# 
  1276  001D                     	;# 
  1277  001E                     	;# 
  1278  001F                     	;# 
  1279  008C                     	;# 
  1280  008C                     	;# 
  1281  008D                     	;# 
  1282  008E                     	;# 
  1283  008E                     	;# 
  1284  008F                     	;# 
  1285  0090                     	;# 
  1286  0090                     	;# 
  1287  0091                     	;# 
  1288  0093                     	;# 
  1289  0094                     	;# 
  1290  0095                     	;# 
  1291  0096                     	;# 
  1292  0097                     	;# 
  1293  0098                     	;# 
  1294  0099                     	;# 
  1295  009A                     	;# 
  1296  009B                     	;# 
  1297  009C                     	;# 
  1298  009D                     	;# 
  1299  009E                     	;# 
  1300  010C                     	;# 
  1301  010D                     	;# 
  1302  010E                     	;# 
  1303  010E                     	;# 
  1304  010F                     	;# 
  1305  0110                     	;# 
  1306  0110                     	;# 
  1307  0111                     	;# 
  1308  0112                     	;# 
  1309  0112                     	;# 
  1310  0113                     	;# 
  1311  0114                     	;# 
  1312  0114                     	;# 
  1313  0115                     	;# 
  1314  0116                     	;# 
  1315  0116                     	;# 
  1316  0117                     	;# 
  1317  0119                     	;# 
  1318  0119                     	;# 
  1319  0119                     	;# 
  1320  011A                     	;# 
  1321  011A                     	;# 
  1322  011A                     	;# 
  1323  011B                     	;# 
  1324  011B                     	;# 
  1325  011B                     	;# 
  1326  011B                     	;# 
  1327  011B                     	;# 
  1328  011C                     	;# 
  1329  011C                     	;# 
  1330  011C                     	;# 
  1331  011D                     	;# 
  1332  011D                     	;# 
  1333  011D                     	;# 
  1334  011E                     	;# 
  1335  011E                     	;# 
  1336  011E                     	;# 
  1337  011F                     	;# 
  1338  011F                     	;# 
  1339  011F                     	;# 
  1340  011F                     	;# 
  1341  011F                     	;# 
  1342  018C                     	;# 
  1343  018D                     	;# 
  1344  018E                     	;# 
  1345  018F                     	;# 
  1346  0190                     	;# 
  1347  0191                     	;# 
  1348  0192                     	;# 
  1349  0196                     	;# 
  1350  0197                     	;# 
  1351  0198                     	;# 
  1352  0199                     	;# 
  1353  019A                     	;# 
  1354  019B                     	;# 
  1355  019C                     	;# 
  1356  020C                     	;# 
  1357  020C                     	;# 
  1358  020D                     	;# 
  1359  020E                     	;# 
  1360  020F                     	;# 
  1361  020F                     	;# 
  1362  0210                     	;# 
  1363  0210                     	;# 
  1364  0211                     	;# 
  1365  0211                     	;# 
  1366  0212                     	;# 
  1367  0212                     	;# 
  1368  0213                     	;# 
  1369  0214                     	;# 
  1370  0215                     	;# 
  1371  0215                     	;# 
  1372  0216                     	;# 
  1373  0216                     	;# 
  1374  0217                     	;# 
  1375  0217                     	;# 
  1376  0218                     	;# 
  1377  0218                     	;# 
  1378  0219                     	;# 
  1379  021A                     	;# 
  1380  021B                     	;# 
  1381  021B                     	;# 
  1382  021C                     	;# 
  1383  021C                     	;# 
  1384  021D                     	;# 
  1385  021D                     	;# 
  1386  021E                     	;# 
  1387  021F                     	;# 
  1388  028C                     	;# 
  1389  028C                     	;# 
  1390  028D                     	;# 
  1391  028D                     	;# 
  1392  028E                     	;# 
  1393  028F                     	;# 
  1394  0290                     	;# 
  1395  0290                     	;# 
  1396  0291                     	;# 
  1397  0292                     	;# 
  1398  0292                     	;# 
  1399  0293                     	;# 
  1400  0293                     	;# 
  1401  0294                     	;# 
  1402  0295                     	;# 
  1403  0296                     	;# 
  1404  0296                     	;# 
  1405  0297                     	;# 
  1406  0298                     	;# 
  1407  0298                     	;# 
  1408  0299                     	;# 
  1409  0299                     	;# 
  1410  029A                     	;# 
  1411  029B                     	;# 
  1412  029C                     	;# 
  1413  029C                     	;# 
  1414  029D                     	;# 
  1415  030C                     	;# 
  1416  030C                     	;# 
  1417  030D                     	;# 
  1418  030E                     	;# 
  1419  030F                     	;# 
  1420  0310                     	;# 
  1421  0310                     	;# 
  1422  0311                     	;# 
  1423  0312                     	;# 
  1424  0313                     	;# 
  1425  0314                     	;# 
  1426  0314                     	;# 
  1427  0315                     	;# 
  1428  0316                     	;# 
  1429  0317                     	;# 
  1430  0318                     	;# 
  1431  0318                     	;# 
  1432  0319                     	;# 
  1433  031A                     	;# 
  1434  031B                     	;# 
  1435  031C                     	;# 
  1436  031C                     	;# 
  1437  031D                     	;# 
  1438  031E                     	;# 
  1439  031F                     	;# 
  1440  038C                     	;# 
  1441  038C                     	;# 
  1442  038D                     	;# 
  1443  038E                     	;# 
  1444  0390                     	;# 
  1445  0390                     	;# 
  1446  0391                     	;# 
  1447  0392                     	;# 
  1448  040C                     	;# 
  1449  040D                     	;# 
  1450  040E                     	;# 
  1451  040F                     	;# 
  1452  0410                     	;# 
  1453  0411                     	;# 
  1454  0416                     	;# 
  1455  0416                     	;# 
  1456  0417                     	;# 
  1457  0418                     	;# 
  1458  0418                     	;# 
  1459  0419                     	;# 
  1460  041A                     	;# 
  1461  041A                     	;# 
  1462  041B                     	;# 
  1463  041C                     	;# 
  1464  041C                     	;# 
  1465  041D                     	;# 
  1466  041E                     	;# 
  1467  041F                     	;# 
  1468  048C                     	;# 
  1469  048C                     	;# 
  1470  048D                     	;# 
  1471  048E                     	;# 
  1472  048F                     	;# 
  1473  048F                     	;# 
  1474  0490                     	;# 
  1475  0491                     	;# 
  1476  0492                     	;# 
  1477  0492                     	;# 
  1478  0493                     	;# 
  1479  0494                     	;# 
  1480  0495                     	;# 
  1481  0495                     	;# 
  1482  0496                     	;# 
  1483  0497                     	;# 
  1484  0498                     	;# 
  1485  0499                     	;# 
  1486  049A                     	;# 
  1487  049B                     	;# 
  1488  049C                     	;# 
  1489  049D                     	;# 
  1490  050C                     	;# 
  1491  050C                     	;# 
  1492  050D                     	;# 
  1493  050E                     	;# 
  1494  050F                     	;# 
  1495  050F                     	;# 
  1496  0510                     	;# 
  1497  0511                     	;# 
  1498  0512                     	;# 
  1499  0512                     	;# 
  1500  0513                     	;# 
  1501  0514                     	;# 
  1502  0515                     	;# 
  1503  0515                     	;# 
  1504  0516                     	;# 
  1505  0517                     	;# 
  1506  0518                     	;# 
  1507  0519                     	;# 
  1508  051A                     	;# 
  1509  051B                     	;# 
  1510  051C                     	;# 
  1511  051D                     	;# 
  1512  058C                     	;# 
  1513  058C                     	;# 
  1514  058D                     	;# 
  1515  058E                     	;# 
  1516  058F                     	;# 
  1517  058F                     	;# 
  1518  0590                     	;# 
  1519  0591                     	;# 
  1520  0592                     	;# 
  1521  0593                     	;# 
  1522  060C                     	;# 
  1523  060D                     	;# 
  1524  060E                     	;# 
  1525  060F                     	;# 
  1526  0610                     	;# 
  1527  0611                     	;# 
  1528  0612                     	;# 
  1529  0613                     	;# 
  1530  0614                     	;# 
  1531  0616                     	;# 
  1532  0617                     	;# 
  1533  0618                     	;# 
  1534  0619                     	;# 
  1535  061A                     	;# 
  1536  061B                     	;# 
  1537  061C                     	;# 
  1538  061D                     	;# 
  1539  061E                     	;# 
  1540  068C                     	;# 
  1541  068D                     	;# 
  1542  068E                     	;# 
  1543  068F                     	;# 
  1544  0690                     	;# 
  1545  0691                     	;# 
  1546  0692                     	;# 
  1547  0693                     	;# 
  1548  0694                     	;# 
  1549  070C                     	;# 
  1550  070D                     	;# 
  1551  070E                     	;# 
  1552  070F                     	;# 
  1553  0710                     	;# 
  1554  0711                     	;# 
  1555  0712                     	;# 
  1556  0713                     	;# 
  1557  0714                     	;# 
  1558  0716                     	;# 
  1559  0717                     	;# 
  1560  0718                     	;# 
  1561  0719                     	;# 
  1562  071A                     	;# 
  1563  071B                     	;# 
  1564  071C                     	;# 
  1565  071D                     	;# 
  1566  071E                     	;# 
  1567  0796                     	;# 
  1568  0797                     	;# 
  1569  0798                     	;# 
  1570  0799                     	;# 
  1571  079A                     	;# 
  1572  079B                     	;# 
  1573  080C                     	;# 
  1574  080D                     	;# 
  1575  080E                     	;# 
  1576  080F                     	;# 
  1577  0810                     	;# 
  1578  0811                     	;# 
  1579  0812                     	;# 
  1580  0813                     	;# 
  1581  0814                     	;# 
  1582  081A                     	;# 
  1583  081B                     	;# 
  1584  081C                     	;# 
  1585  081D                     	;# 
  1586  081E                     	;# 
  1587  081F                     	;# 
  1588  088C                     	;# 
  1589  088D                     	;# 
  1590  088E                     	;# 
  1591  088F                     	;# 
  1592  0890                     	;# 
  1593  0891                     	;# 
  1594  0892                     	;# 
  1595  0893                     	;# 
  1596  0895                     	;# 
  1597  0896                     	;# 
  1598  0897                     	;# 
  1599  0898                     	;# 
  1600  0899                     	;# 
  1601  089A                     	;# 
  1602  089B                     	;# 
  1603  090C                     	;# 
  1604  090E                     	;# 
  1605  090F                     	;# 
  1606  091F                     	;# 
  1607  091F                     	;# 
  1608  098F                     	;# 
  1609  098F                     	;# 
  1610  0990                     	;# 
  1611  0991                     	;# 
  1612  0992                     	;# 
  1613  0993                     	;# 
  1614  0994                     	;# 
  1615  0995                     	;# 
  1616  0996                     	;# 
  1617  0997                     	;# 
  1618  0E0F                     	;# 
  1619  0E10                     	;# 
  1620  0E11                     	;# 
  1621  0E12                     	;# 
  1622  0E13                     	;# 
  1623  0E14                     	;# 
  1624  0E15                     	;# 
  1625  0E16                     	;# 
  1626  0E17                     	;# 
  1627  0E18                     	;# 
  1628  0E19                     	;# 
  1629  0E1A                     	;# 
  1630  0E1B                     	;# 
  1631  0E1C                     	;# 
  1632  0E1D                     	;# 
  1633  0E1E                     	;# 
  1634  0E1F                     	;# 
  1635  0E20                     	;# 
  1636  0E21                     	;# 
  1637  0E22                     	;# 
  1638  0E23                     	;# 
  1639  0E24                     	;# 
  1640  0E25                     	;# 
  1641  0E26                     	;# 
  1642  0E27                     	;# 
  1643  0E28                     	;# 
  1644  0E29                     	;# 
  1645  0E2A                     	;# 
  1646  0E2B                     	;# 
  1647  0E2C                     	;# 
  1648  0E2D                     	;# 
  1649  0E2E                     	;# 
  1650  0E2F                     	;# 
  1651  0E30                     	;# 
  1652  0E31                     	;# 
  1653  0E32                     	;# 
  1654  0E33                     	;# 
  1655  0E34                     	;# 
  1656  0E35                     	;# 
  1657  0E36                     	;# 
  1658  0E37                     	;# 
  1659  0E8F                     	;# 
  1660  0E90                     	;# 
  1661  0E91                     	;# 
  1662  0E92                     	;# 
  1663  0E93                     	;# 
  1664  0E94                     	;# 
  1665  0E95                     	;# 
  1666  0E96                     	;# 
  1667  0E97                     	;# 
  1668  0E9C                     	;# 
  1669  0E9D                     	;# 
  1670  0E9E                     	;# 
  1671  0EA1                     	;# 
  1672  0EA2                     	;# 
  1673  0EA3                     	;# 
  1674  0EA4                     	;# 
  1675  0EA5                     	;# 
  1676  0EA9                     	;# 
  1677  0EAA                     	;# 
  1678  0EAB                     	;# 
  1679  0EAC                     	;# 
  1680  0EB1                     	;# 
  1681  0EB2                     	;# 
  1682  0EB3                     	;# 
  1683  0EB8                     	;# 
  1684  0EB9                     	;# 
  1685  0EBA                     	;# 
  1686  0EBB                     	;# 
  1687  0EBC                     	;# 
  1688  0EBD                     	;# 
  1689  0EBE                     	;# 
  1690  0EC3                     	;# 
  1691  0EC5                     	;# 
  1692  0EC6                     	;# 
  1693  0EC7                     	;# 
  1694  0EC8                     	;# 
  1695  0EC9                     	;# 
  1696  0ECA                     	;# 
  1697  0ECB                     	;# 
  1698  0ECC                     	;# 
  1699  0F10                     	;# 
  1700  0F11                     	;# 
  1701  0F12                     	;# 
  1702  0F13                     	;# 
  1703  0F14                     	;# 
  1704  0F15                     	;# 
  1705  0F16                     	;# 
  1706  0F17                     	;# 
  1707  0F18                     	;# 
  1708  0F19                     	;# 
  1709  0F1A                     	;# 
  1710  0F1B                     	;# 
  1711  0F1C                     	;# 
  1712  0F1D                     	;# 
  1713  0F1E                     	;# 
  1714  0F1F                     	;# 
  1715  0F20                     	;# 
  1716  0F21                     	;# 
  1717  0F22                     	;# 
  1718  0F23                     	;# 
  1719  0F24                     	;# 
  1720  0F25                     	;# 
  1721  0F26                     	;# 
  1722  0F27                     	;# 
  1723  0F28                     	;# 
  1724  0F29                     	;# 
  1725  0F2A                     	;# 
  1726  0F2B                     	;# 
  1727  0F2C                     	;# 
  1728  0F2D                     	;# 
  1729  0F2E                     	;# 
  1730  0F2F                     	;# 
  1731  0F30                     	;# 
  1732  0F31                     	;# 
  1733  0F32                     	;# 
  1734  0F38                     	;# 
  1735  0F39                     	;# 
  1736  0F3A                     	;# 
  1737  0F3B                     	;# 
  1738  0F3C                     	;# 
  1739  0F3D                     	;# 
  1740  0F3E                     	;# 
  1741  0F3F                     	;# 
  1742  0F40                     	;# 
  1743  0F41                     	;# 
  1744  0F43                     	;# 
  1745  0F44                     	;# 
  1746  0F45                     	;# 
  1747  0F46                     	;# 
  1748  0F47                     	;# 
  1749  0F48                     	;# 
  1750  0F49                     	;# 
  1751  0F4A                     	;# 
  1752  0F4B                     	;# 
  1753  0F4C                     	;# 
  1754  0F4E                     	;# 
  1755  0F4F                     	;# 
  1756  0F50                     	;# 
  1757  0F51                     	;# 
  1758  0F52                     	;# 
  1759  0F53                     	;# 
  1760  0F54                     	;# 
  1761  0F55                     	;# 
  1762  0F56                     	;# 
  1763  0F57                     	;# 
  1764  0F59                     	;# 
  1765  0F5A                     	;# 
  1766  0F5B                     	;# 
  1767  0F5C                     	;# 
  1768  0F5D                     	;# 
  1769  0F61                     	;# 
  1770  0F62                     	;# 
  1771  0F64                     	;# 
  1772  0F65                     	;# 
  1773  0F66                     	;# 
  1774  0F67                     	;# 
  1775  0F68                     	;# 
  1776  0F69                     	;# 
  1777  0F6A                     	;# 
  1778  0F6B                     	;# 
  1779  0F6C                     	;# 
  1780  0F6D                     	;# 
  1781  0FE4                     	;# 
  1782  0FE5                     	;# 
  1783  0FE6                     	;# 
  1784  0FE7                     	;# 
  1785  0FE8                     	;# 
  1786  0FE9                     	;# 
  1787  0FEA                     	;# 
  1788  0FEB                     	;# 
  1789  0FED                     	;# 
  1790  0FEE                     	;# 
  1791  0FEF                     	;# 
  1792  0000                     	;# 
  1793  0001                     	;# 
  1794  0002                     	;# 
  1795  0003                     	;# 
  1796  0004                     	;# 
  1797  0005                     	;# 
  1798  0006                     	;# 
  1799  0007                     	;# 
  1800  0008                     	;# 
  1801  0009                     	;# 
  1802  000A                     	;# 
  1803  000B                     	;# 
  1804  000C                     	;# 
  1805  000D                     	;# 
  1806  000E                     	;# 
  1807  000F                     	;# 
  1808  0010                     	;# 
  1809  0011                     	;# 
  1810  0012                     	;# 
  1811  0013                     	;# 
  1812  0014                     	;# 
  1813  0015                     	;# 
  1814  0016                     	;# 
  1815  0017                     	;# 
  1816  0018                     	;# 
  1817  0019                     	;# 
  1818  001A                     	;# 
  1819  001C                     	;# 
  1820  001C                     	;# 
  1821  001D                     	;# 
  1822  001D                     	;# 
  1823  001E                     	;# 
  1824  001F                     	;# 
  1825  008C                     	;# 
  1826  008C                     	;# 
  1827  008D                     	;# 
  1828  008E                     	;# 
  1829  008E                     	;# 
  1830  008F                     	;# 
  1831  0090                     	;# 
  1832  0090                     	;# 
  1833  0091                     	;# 
  1834  0093                     	;# 
  1835  0094                     	;# 
  1836  0095                     	;# 
  1837  0096                     	;# 
  1838  0097                     	;# 
  1839  0098                     	;# 
  1840  0099                     	;# 
  1841  009A                     	;# 
  1842  009B                     	;# 
  1843  009C                     	;# 
  1844  009D                     	;# 
  1845  009E                     	;# 
  1846  010C                     	;# 
  1847  010D                     	;# 
  1848  010E                     	;# 
  1849  010E                     	;# 
  1850  010F                     	;# 
  1851  0110                     	;# 
  1852  0110                     	;# 
  1853  0111                     	;# 
  1854  0112                     	;# 
  1855  0112                     	;# 
  1856  0113                     	;# 
  1857  0114                     	;# 
  1858  0114                     	;# 
  1859  0115                     	;# 
  1860  0116                     	;# 
  1861  0116                     	;# 
  1862  0117                     	;# 
  1863  0119                     	;# 
  1864  0119                     	;# 
  1865  0119                     	;# 
  1866  011A                     	;# 
  1867  011A                     	;# 
  1868  011A                     	;# 
  1869  011B                     	;# 
  1870  011B                     	;# 
  1871  011B                     	;# 
  1872  011B                     	;# 
  1873  011B                     	;# 
  1874  011C                     	;# 
  1875  011C                     	;# 
  1876  011C                     	;# 
  1877  011D                     	;# 
  1878  011D                     	;# 
  1879  011D                     	;# 
  1880  011E                     	;# 
  1881  011E                     	;# 
  1882  011E                     	;# 
  1883  011F                     	;# 
  1884  011F                     	;# 
  1885  011F                     	;# 
  1886  011F                     	;# 
  1887  011F                     	;# 
  1888  018C                     	;# 
  1889  018D                     	;# 
  1890  018E                     	;# 
  1891  018F                     	;# 
  1892  0190                     	;# 
  1893  0191                     	;# 
  1894  0192                     	;# 
  1895  0196                     	;# 
  1896  0197                     	;# 
  1897  0198                     	;# 
  1898  0199                     	;# 
  1899  019A                     	;# 
  1900  019B                     	;# 
  1901  019C                     	;# 
  1902  020C                     	;# 
  1903  020C                     	;# 
  1904  020D                     	;# 
  1905  020E                     	;# 
  1906  020F                     	;# 
  1907  020F                     	;# 
  1908  0210                     	;# 
  1909  0210                     	;# 
  1910  0211                     	;# 
  1911  0211                     	;# 
  1912  0212                     	;# 
  1913  0212                     	;# 
  1914  0213                     	;# 
  1915  0214                     	;# 
  1916  0215                     	;# 
  1917  0215                     	;# 
  1918  0216                     	;# 
  1919  0216                     	;# 
  1920  0217                     	;# 
  1921  0217                     	;# 
  1922  0218                     	;# 
  1923  0218                     	;# 
  1924  0219                     	;# 
  1925  021A                     	;# 
  1926  021B                     	;# 
  1927  021B                     	;# 
  1928  021C                     	;# 
  1929  021C                     	;# 
  1930  021D                     	;# 
  1931  021D                     	;# 
  1932  021E                     	;# 
  1933  021F                     	;# 
  1934  028C                     	;# 
  1935  028C                     	;# 
  1936  028D                     	;# 
  1937  028D                     	;# 
  1938  028E                     	;# 
  1939  028F                     	;# 
  1940  0290                     	;# 
  1941  0290                     	;# 
  1942  0291                     	;# 
  1943  0292                     	;# 
  1944  0292                     	;# 
  1945  0293                     	;# 
  1946  0293                     	;# 
  1947  0294                     	;# 
  1948  0295                     	;# 
  1949  0296                     	;# 
  1950  0296                     	;# 
  1951  0297                     	;# 
  1952  0298                     	;# 
  1953  0298                     	;# 
  1954  0299                     	;# 
  1955  0299                     	;# 
  1956  029A                     	;# 
  1957  029B                     	;# 
  1958  029C                     	;# 
  1959  029C                     	;# 
  1960  029D                     	;# 
  1961  030C                     	;# 
  1962  030C                     	;# 
  1963  030D                     	;# 
  1964  030E                     	;# 
  1965  030F                     	;# 
  1966  0310                     	;# 
  1967  0310                     	;# 
  1968  0311                     	;# 
  1969  0312                     	;# 
  1970  0313                     	;# 
  1971  0314                     	;# 
  1972  0314                     	;# 
  1973  0315                     	;# 
  1974  0316                     	;# 
  1975  0317                     	;# 
  1976  0318                     	;# 
  1977  0318                     	;# 
  1978  0319                     	;# 
  1979  031A                     	;# 
  1980  031B                     	;# 
  1981  031C                     	;# 
  1982  031C                     	;# 
  1983  031D                     	;# 
  1984  031E                     	;# 
  1985  031F                     	;# 
  1986  038C                     	;# 
  1987  038C                     	;# 
  1988  038D                     	;# 
  1989  038E                     	;# 
  1990  0390                     	;# 
  1991  0390                     	;# 
  1992  0391                     	;# 
  1993  0392                     	;# 
  1994  040C                     	;# 
  1995  040D                     	;# 
  1996  040E                     	;# 
  1997  040F                     	;# 
  1998  0410                     	;# 
  1999  0411                     	;# 
  2000  0416                     	;# 
  2001  0416                     	;# 
  2002  0417                     	;# 
  2003  0418                     	;# 
  2004  0418                     	;# 
  2005  0419                     	;# 
  2006  041A                     	;# 
  2007  041A                     	;# 
  2008  041B                     	;# 
  2009  041C                     	;# 
  2010  041C                     	;# 
  2011  041D                     	;# 
  2012  041E                     	;# 
  2013  041F                     	;# 
  2014  048C                     	;# 
  2015  048C                     	;# 
  2016  048D                     	;# 
  2017  048E                     	;# 
  2018  048F                     	;# 
  2019  048F                     	;# 
  2020  0490                     	;# 
  2021  0491                     	;# 
  2022  0492                     	;# 
  2023  0492                     	;# 
  2024  0493                     	;# 
  2025  0494                     	;# 
  2026  0495                     	;# 
  2027  0495                     	;# 
  2028  0496                     	;# 
  2029  0497                     	;# 
  2030  0498                     	;# 
  2031  0499                     	;# 
  2032  049A                     	;# 
  2033  049B                     	;# 
  2034  049C                     	;# 
  2035  049D                     	;# 
  2036  050C                     	;# 
  2037  050C                     	;# 
  2038  050D                     	;# 
  2039  050E                     	;# 
  2040  050F                     	;# 
  2041  050F                     	;# 
  2042  0510                     	;# 
  2043  0511                     	;# 
  2044  0512                     	;# 
  2045  0512                     	;# 
  2046  0513                     	;# 
  2047  0514                     	;# 
  2048  0515                     	;# 
  2049  0515                     	;# 
  2050  0516                     	;# 
  2051  0517                     	;# 
  2052  0518                     	;# 
  2053  0519                     	;# 
  2054  051A                     	;# 
  2055  051B                     	;# 
  2056  051C                     	;# 
  2057  051D                     	;# 
  2058  058C                     	;# 
  2059  058C                     	;# 
  2060  058D                     	;# 
  2061  058E                     	;# 
  2062  058F                     	;# 
  2063  058F                     	;# 
  2064  0590                     	;# 
  2065  0591                     	;# 
  2066  0592                     	;# 
  2067  0593                     	;# 
  2068  060C                     	;# 
  2069  060D                     	;# 
  2070  060E                     	;# 
  2071  060F                     	;# 
  2072  0610                     	;# 
  2073  0611                     	;# 
  2074  0612                     	;# 
  2075  0613                     	;# 
  2076  0614                     	;# 
  2077  0616                     	;# 
  2078  0617                     	;# 
  2079  0618                     	;# 
  2080  0619                     	;# 
  2081  061A                     	;# 
  2082  061B                     	;# 
  2083  061C                     	;# 
  2084  061D                     	;# 
  2085  061E                     	;# 
  2086  068C                     	;# 
  2087  068D                     	;# 
  2088  068E                     	;# 
  2089  068F                     	;# 
  2090  0690                     	;# 
  2091  0691                     	;# 
  2092  0692                     	;# 
  2093  0693                     	;# 
  2094  0694                     	;# 
  2095  070C                     	;# 
  2096  070D                     	;# 
  2097  070E                     	;# 
  2098  070F                     	;# 
  2099  0710                     	;# 
  2100  0711                     	;# 
  2101  0712                     	;# 
  2102  0713                     	;# 
  2103  0714                     	;# 
  2104  0716                     	;# 
  2105  0717                     	;# 
  2106  0718                     	;# 
  2107  0719                     	;# 
  2108  071A                     	;# 
  2109  071B                     	;# 
  2110  071C                     	;# 
  2111  071D                     	;# 
  2112  071E                     	;# 
  2113  0796                     	;# 
  2114  0797                     	;# 
  2115  0798                     	;# 
  2116  0799                     	;# 
  2117  079A                     	;# 
  2118  079B                     	;# 
  2119  080C                     	;# 
  2120  080D                     	;# 
  2121  080E                     	;# 
  2122  080F                     	;# 
  2123  0810                     	;# 
  2124  0811                     	;# 
  2125  0812                     	;# 
  2126  0813                     	;# 
  2127  0814                     	;# 
  2128  081A                     	;# 
  2129  081B                     	;# 
  2130  081C                     	;# 
  2131  081D                     	;# 
  2132  081E                     	;# 
  2133  081F                     	;# 
  2134  088C                     	;# 
  2135  088D                     	;# 
  2136  088E                     	;# 
  2137  088F                     	;# 
  2138  0890                     	;# 
  2139  0891                     	;# 
  2140  0892                     	;# 
  2141  0893                     	;# 
  2142  0895                     	;# 
  2143  0896                     	;# 
  2144  0897                     	;# 
  2145  0898                     	;# 
  2146  0899                     	;# 
  2147  089A                     	;# 
  2148  089B                     	;# 
  2149  090C                     	;# 
  2150  090E                     	;# 
  2151  090F                     	;# 
  2152  091F                     	;# 
  2153  091F                     	;# 
  2154  098F                     	;# 
  2155  098F                     	;# 
  2156  0990                     	;# 
  2157  0991                     	;# 
  2158  0992                     	;# 
  2159  0993                     	;# 
  2160  0994                     	;# 
  2161  0995                     	;# 
  2162  0996                     	;# 
  2163  0997                     	;# 
  2164  0E0F                     	;# 
  2165  0E10                     	;# 
  2166  0E11                     	;# 
  2167  0E12                     	;# 
  2168  0E13                     	;# 
  2169  0E14                     	;# 
  2170  0E15                     	;# 
  2171  0E16                     	;# 
  2172  0E17                     	;# 
  2173  0E18                     	;# 
  2174  0E19                     	;# 
  2175  0E1A                     	;# 
  2176  0E1B                     	;# 
  2177  0E1C                     	;# 
  2178  0E1D                     	;# 
  2179  0E1E                     	;# 
  2180  0E1F                     	;# 
  2181  0E20                     	;# 
  2182  0E21                     	;# 
  2183  0E22                     	;# 
  2184  0E23                     	;# 
  2185  0E24                     	;# 
  2186  0E25                     	;# 
  2187  0E26                     	;# 
  2188  0E27                     	;# 
  2189  0E28                     	;# 
  2190  0E29                     	;# 
  2191  0E2A                     	;# 
  2192  0E2B                     	;# 
  2193  0E2C                     	;# 
  2194  0E2D                     	;# 
  2195  0E2E                     	;# 
  2196  0E2F                     	;# 
  2197  0E30                     	;# 
  2198  0E31                     	;# 
  2199  0E32                     	;# 
  2200  0E33                     	;# 
  2201  0E34                     	;# 
  2202  0E35                     	;# 
  2203  0E36                     	;# 
  2204  0E37                     	;# 
  2205  0E8F                     	;# 
  2206  0E90                     	;# 
  2207  0E91                     	;# 
  2208  0E92                     	;# 
  2209  0E93                     	;# 
  2210  0E94                     	;# 
  2211  0E95                     	;# 
  2212  0E96                     	;# 
  2213  0E97                     	;# 
  2214  0E9C                     	;# 
  2215  0E9D                     	;# 
  2216  0E9E                     	;# 
  2217  0EA1                     	;# 
  2218  0EA2                     	;# 
  2219  0EA3                     	;# 
  2220  0EA4                     	;# 
  2221  0EA5                     	;# 
  2222  0EA9                     	;# 
  2223  0EAA                     	;# 
  2224  0EAB                     	;# 
  2225  0EAC                     	;# 
  2226  0EB1                     	;# 
  2227  0EB2                     	;# 
  2228  0EB3                     	;# 
  2229  0EB8                     	;# 
  2230  0EB9                     	;# 
  2231  0EBA                     	;# 
  2232  0EBB                     	;# 
  2233  0EBC                     	;# 
  2234  0EBD                     	;# 
  2235  0EBE                     	;# 
  2236  0EC3                     	;# 
  2237  0EC5                     	;# 
  2238  0EC6                     	;# 
  2239  0EC7                     	;# 
  2240  0EC8                     	;# 
  2241  0EC9                     	;# 
  2242  0ECA                     	;# 
  2243  0ECB                     	;# 
  2244  0ECC                     	;# 
  2245  0F10                     	;# 
  2246  0F11                     	;# 
  2247  0F12                     	;# 
  2248  0F13                     	;# 
  2249  0F14                     	;# 
  2250  0F15                     	;# 
  2251  0F16                     	;# 
  2252  0F17                     	;# 
  2253  0F18                     	;# 
  2254  0F19                     	;# 
  2255  0F1A                     	;# 
  2256  0F1B                     	;# 
  2257  0F1C                     	;# 
  2258  0F1D                     	;# 
  2259  0F1E                     	;# 
  2260  0F1F                     	;# 
  2261  0F20                     	;# 
  2262  0F21                     	;# 
  2263  0F22                     	;# 
  2264  0F23                     	;# 
  2265  0F24                     	;# 
  2266  0F25                     	;# 
  2267  0F26                     	;# 
  2268  0F27                     	;# 
  2269  0F28                     	;# 
  2270  0F29                     	;# 
  2271  0F2A                     	;# 
  2272  0F2B                     	;# 
  2273  0F2C                     	;# 
  2274  0F2D                     	;# 
  2275  0F2E                     	;# 
  2276  0F2F                     	;# 
  2277  0F30                     	;# 
  2278  0F31                     	;# 
  2279  0F32                     	;# 
  2280  0F38                     	;# 
  2281  0F39                     	;# 
  2282  0F3A                     	;# 
  2283  0F3B                     	;# 
  2284  0F3C                     	;# 
  2285  0F3D                     	;# 
  2286  0F3E                     	;# 
  2287  0F3F                     	;# 
  2288  0F40                     	;# 
  2289  0F41                     	;# 
  2290  0F43                     	;# 
  2291  0F44                     	;# 
  2292  0F45                     	;# 
  2293  0F46                     	;# 
  2294  0F47                     	;# 
  2295  0F48                     	;# 
  2296  0F49                     	;# 
  2297  0F4A                     	;# 
  2298  0F4B                     	;# 
  2299  0F4C                     	;# 
  2300  0F4E                     	;# 
  2301  0F4F                     	;# 
  2302  0F50                     	;# 
  2303  0F51                     	;# 
  2304  0F52                     	;# 
  2305  0F53                     	;# 
  2306  0F54                     	;# 
  2307  0F55                     	;# 
  2308  0F56                     	;# 
  2309  0F57                     	;# 
  2310  0F59                     	;# 
  2311  0F5A                     	;# 
  2312  0F5B                     	;# 
  2313  0F5C                     	;# 
  2314  0F5D                     	;# 
  2315  0F61                     	;# 
  2316  0F62                     	;# 
  2317  0F64                     	;# 
  2318  0F65                     	;# 
  2319  0F66                     	;# 
  2320  0F67                     	;# 
  2321  0F68                     	;# 
  2322  0F69                     	;# 
  2323  0F6A                     	;# 
  2324  0F6B                     	;# 
  2325  0F6C                     	;# 
  2326  0F6D                     	;# 
  2327  0FE4                     	;# 
  2328  0FE5                     	;# 
  2329  0FE6                     	;# 
  2330  0FE7                     	;# 
  2331  0FE8                     	;# 
  2332  0FE9                     	;# 
  2333  0FEA                     	;# 
  2334  0FEB                     	;# 
  2335  0FED                     	;# 
  2336  0FEE                     	;# 
  2337  0FEF                     	;# 
  2338  0000                     	;# 
  2339  0001                     	;# 
  2340  0002                     	;# 
  2341  0003                     	;# 
  2342  0004                     	;# 
  2343  0005                     	;# 
  2344  0006                     	;# 
  2345  0007                     	;# 
  2346  0008                     	;# 
  2347  0009                     	;# 
  2348  000A                     	;# 
  2349  000B                     	;# 
  2350  000C                     	;# 
  2351  000D                     	;# 
  2352  000E                     	;# 
  2353  000F                     	;# 
  2354  0010                     	;# 
  2355  0011                     	;# 
  2356  0012                     	;# 
  2357  0013                     	;# 
  2358  0014                     	;# 
  2359  0015                     	;# 
  2360  0016                     	;# 
  2361  0017                     	;# 
  2362  0018                     	;# 
  2363  0019                     	;# 
  2364  001A                     	;# 
  2365  001C                     	;# 
  2366  001C                     	;# 
  2367  001D                     	;# 
  2368  001D                     	;# 
  2369  001E                     	;# 
  2370  001F                     	;# 
  2371  008C                     	;# 
  2372  008C                     	;# 
  2373  008D                     	;# 
  2374  008E                     	;# 
  2375  008E                     	;# 
  2376  008F                     	;# 
  2377  0090                     	;# 
  2378  0090                     	;# 
  2379  0091                     	;# 
  2380  0093                     	;# 
  2381  0094                     	;# 
  2382  0095                     	;# 
  2383  0096                     	;# 
  2384  0097                     	;# 
  2385  0098                     	;# 
  2386  0099                     	;# 
  2387  009A                     	;# 
  2388  009B                     	;# 
  2389  009C                     	;# 
  2390  009D                     	;# 
  2391  009E                     	;# 
  2392  010C                     	;# 
  2393  010D                     	;# 
  2394  010E                     	;# 
  2395  010E                     	;# 
  2396  010F                     	;# 
  2397  0110                     	;# 
  2398  0110                     	;# 
  2399  0111                     	;# 
  2400  0112                     	;# 
  2401  0112                     	;# 
  2402  0113                     	;# 
  2403  0114                     	;# 
  2404  0114                     	;# 
  2405  0115                     	;# 
  2406  0116                     	;# 
  2407  0116                     	;# 
  2408  0117                     	;# 
  2409  0119                     	;# 
  2410  0119                     	;# 
  2411  0119                     	;# 
  2412  011A                     	;# 
  2413  011A                     	;# 
  2414  011A                     	;# 
  2415  011B                     	;# 
  2416  011B                     	;# 
  2417  011B                     	;# 
  2418  011B                     	;# 
  2419  011B                     	;# 
  2420  011C                     	;# 
  2421  011C                     	;# 
  2422  011C                     	;# 
  2423  011D                     	;# 
  2424  011D                     	;# 
  2425  011D                     	;# 
  2426  011E                     	;# 
  2427  011E                     	;# 
  2428  011E                     	;# 
  2429  011F                     	;# 
  2430  011F                     	;# 
  2431  011F                     	;# 
  2432  011F                     	;# 
  2433  011F                     	;# 
  2434  018C                     	;# 
  2435  018D                     	;# 
  2436  018E                     	;# 
  2437  018F                     	;# 
  2438  0190                     	;# 
  2439  0191                     	;# 
  2440  0192                     	;# 
  2441  0196                     	;# 
  2442  0197                     	;# 
  2443  0198                     	;# 
  2444  0199                     	;# 
  2445  019A                     	;# 
  2446  019B                     	;# 
  2447  019C                     	;# 
  2448  020C                     	;# 
  2449  020C                     	;# 
  2450  020D                     	;# 
  2451  020E                     	;# 
  2452  020F                     	;# 
  2453  020F                     	;# 
  2454  0210                     	;# 
  2455  0210                     	;# 
  2456  0211                     	;# 
  2457  0211                     	;# 
  2458  0212                     	;# 
  2459  0212                     	;# 
  2460  0213                     	;# 
  2461  0214                     	;# 
  2462  0215                     	;# 
  2463  0215                     	;# 
  2464  0216                     	;# 
  2465  0216                     	;# 
  2466  0217                     	;# 
  2467  0217                     	;# 
  2468  0218                     	;# 
  2469  0218                     	;# 
  2470  0219                     	;# 
  2471  021A                     	;# 
  2472  021B                     	;# 
  2473  021B                     	;# 
  2474  021C                     	;# 
  2475  021C                     	;# 
  2476  021D                     	;# 
  2477  021D                     	;# 
  2478  021E                     	;# 
  2479  021F                     	;# 
  2480  028C                     	;# 
  2481  028C                     	;# 
  2482  028D                     	;# 
  2483  028D                     	;# 
  2484  028E                     	;# 
  2485  028F                     	;# 
  2486  0290                     	;# 
  2487  0290                     	;# 
  2488  0291                     	;# 
  2489  0292                     	;# 
  2490  0292                     	;# 
  2491  0293                     	;# 
  2492  0293                     	;# 
  2493  0294                     	;# 
  2494  0295                     	;# 
  2495  0296                     	;# 
  2496  0296                     	;# 
  2497  0297                     	;# 
  2498  0298                     	;# 
  2499  0298                     	;# 
  2500  0299                     	;# 
  2501  0299                     	;# 
  2502  029A                     	;# 
  2503  029B                     	;# 
  2504  029C                     	;# 
  2505  029C                     	;# 
  2506  029D                     	;# 
  2507  030C                     	;# 
  2508  030C                     	;# 
  2509  030D                     	;# 
  2510  030E                     	;# 
  2511  030F                     	;# 
  2512  0310                     	;# 
  2513  0310                     	;# 
  2514  0311                     	;# 
  2515  0312                     	;# 
  2516  0313                     	;# 
  2517  0314                     	;# 
  2518  0314                     	;# 
  2519  0315                     	;# 
  2520  0316                     	;# 
  2521  0317                     	;# 
  2522  0318                     	;# 
  2523  0318                     	;# 
  2524  0319                     	;# 
  2525  031A                     	;# 
  2526  031B                     	;# 
  2527  031C                     	;# 
  2528  031C                     	;# 
  2529  031D                     	;# 
  2530  031E                     	;# 
  2531  031F                     	;# 
  2532  038C                     	;# 
  2533  038C                     	;# 
  2534  038D                     	;# 
  2535  038E                     	;# 
  2536  0390                     	;# 
  2537  0390                     	;# 
  2538  0391                     	;# 
  2539  0392                     	;# 
  2540  040C                     	;# 
  2541  040D                     	;# 
  2542  040E                     	;# 
  2543  040F                     	;# 
  2544  0410                     	;# 
  2545  0411                     	;# 
  2546  0416                     	;# 
  2547  0416                     	;# 
  2548  0417                     	;# 
  2549  0418                     	;# 
  2550  0418                     	;# 
  2551  0419                     	;# 
  2552  041A                     	;# 
  2553  041A                     	;# 
  2554  041B                     	;# 
  2555  041C                     	;# 
  2556  041C                     	;# 
  2557  041D                     	;# 
  2558  041E                     	;# 
  2559  041F                     	;# 
  2560  048C                     	;# 
  2561  048C                     	;# 
  2562  048D                     	;# 
  2563  048E                     	;# 
  2564  048F                     	;# 
  2565  048F                     	;# 
  2566  0490                     	;# 
  2567  0491                     	;# 
  2568  0492                     	;# 
  2569  0492                     	;# 
  2570  0493                     	;# 
  2571  0494                     	;# 
  2572  0495                     	;# 
  2573  0495                     	;# 
  2574  0496                     	;# 
  2575  0497                     	;# 
  2576  0498                     	;# 
  2577  0499                     	;# 
  2578  049A                     	;# 
  2579  049B                     	;# 
  2580  049C                     	;# 
  2581  049D                     	;# 
  2582  050C                     	;# 
  2583  050C                     	;# 
  2584  050D                     	;# 
  2585  050E                     	;# 
  2586  050F                     	;# 
  2587  050F                     	;# 
  2588  0510                     	;# 
  2589  0511                     	;# 
  2590  0512                     	;# 
  2591  0512                     	;# 
  2592  0513                     	;# 
  2593  0514                     	;# 
  2594  0515                     	;# 
  2595  0515                     	;# 
  2596  0516                     	;# 
  2597  0517                     	;# 
  2598  0518                     	;# 
  2599  0519                     	;# 
  2600  051A                     	;# 
  2601  051B                     	;# 
  2602  051C                     	;# 
  2603  051D                     	;# 
  2604  058C                     	;# 
  2605  058C                     	;# 
  2606  058D                     	;# 
  2607  058E                     	;# 
  2608  058F                     	;# 
  2609  058F                     	;# 
  2610  0590                     	;# 
  2611  0591                     	;# 
  2612  0592                     	;# 
  2613  0593                     	;# 
  2614  060C                     	;# 
  2615  060D                     	;# 
  2616  060E                     	;# 
  2617  060F                     	;# 
  2618  0610                     	;# 
  2619  0611                     	;# 
  2620  0612                     	;# 
  2621  0613                     	;# 
  2622  0614                     	;# 
  2623  0616                     	;# 
  2624  0617                     	;# 
  2625  0618                     	;# 
  2626  0619                     	;# 
  2627  061A                     	;# 
  2628  061B                     	;# 
  2629  061C                     	;# 
  2630  061D                     	;# 
  2631  061E                     	;# 
  2632  068C                     	;# 
  2633  068D                     	;# 
  2634  068E                     	;# 
  2635  068F                     	;# 
  2636  0690                     	;# 
  2637  0691                     	;# 
  2638  0692                     	;# 
  2639  0693                     	;# 
  2640  0694                     	;# 
  2641  070C                     	;# 
  2642  070D                     	;# 
  2643  070E                     	;# 
  2644  070F                     	;# 
  2645  0710                     	;# 
  2646  0711                     	;# 
  2647  0712                     	;# 
  2648  0713                     	;# 
  2649  0714                     	;# 
  2650  0716                     	;# 
  2651  0717                     	;# 
  2652  0718                     	;# 
  2653  0719                     	;# 
  2654  071A                     	;# 
  2655  071B                     	;# 
  2656  071C                     	;# 
  2657  071D                     	;# 
  2658  071E                     	;# 
  2659  0796                     	;# 
  2660  0797                     	;# 
  2661  0798                     	;# 
  2662  0799                     	;# 
  2663  079A                     	;# 
  2664  079B                     	;# 
  2665  080C                     	;# 
  2666  080D                     	;# 
  2667  080E                     	;# 
  2668  080F                     	;# 
  2669  0810                     	;# 
  2670  0811                     	;# 
  2671  0812                     	;# 
  2672  0813                     	;# 
  2673  0814                     	;# 
  2674  081A                     	;# 
  2675  081B                     	;# 
  2676  081C                     	;# 
  2677  081D                     	;# 
  2678  081E                     	;# 
  2679  081F                     	;# 
  2680  088C                     	;# 
  2681  088D                     	;# 
  2682  088E                     	;# 
  2683  088F                     	;# 
  2684  0890                     	;# 
  2685  0891                     	;# 
  2686  0892                     	;# 
  2687  0893                     	;# 
  2688  0895                     	;# 
  2689  0896                     	;# 
  2690  0897                     	;# 
  2691  0898                     	;# 
  2692  0899                     	;# 
  2693  089A                     	;# 
  2694  089B                     	;# 
  2695  090C                     	;# 
  2696  090E                     	;# 
  2697  090F                     	;# 
  2698  091F                     	;# 
  2699  091F                     	;# 
  2700  098F                     	;# 
  2701  098F                     	;# 
  2702  0990                     	;# 
  2703  0991                     	;# 
  2704  0992                     	;# 
  2705  0993                     	;# 
  2706  0994                     	;# 
  2707  0995                     	;# 
  2708  0996                     	;# 
  2709  0997                     	;# 
  2710  0E0F                     	;# 
  2711  0E10                     	;# 
  2712  0E11                     	;# 
  2713  0E12                     	;# 
  2714  0E13                     	;# 
  2715  0E14                     	;# 
  2716  0E15                     	;# 
  2717  0E16                     	;# 
  2718  0E17                     	;# 
  2719  0E18                     	;# 
  2720  0E19                     	;# 
  2721  0E1A                     	;# 
  2722  0E1B                     	;# 
  2723  0E1C                     	;# 
  2724  0E1D                     	;# 
  2725  0E1E                     	;# 
  2726  0E1F                     	;# 
  2727  0E20                     	;# 
  2728  0E21                     	;# 
  2729  0E22                     	;# 
  2730  0E23                     	;# 
  2731  0E24                     	;# 
  2732  0E25                     	;# 
  2733  0E26                     	;# 
  2734  0E27                     	;# 
  2735  0E28                     	;# 
  2736  0E29                     	;# 
  2737  0E2A                     	;# 
  2738  0E2B                     	;# 
  2739  0E2C                     	;# 
  2740  0E2D                     	;# 
  2741  0E2E                     	;# 
  2742  0E2F                     	;# 
  2743  0E30                     	;# 
  2744  0E31                     	;# 
  2745  0E32                     	;# 
  2746  0E33                     	;# 
  2747  0E34                     	;# 
  2748  0E35                     	;# 
  2749  0E36                     	;# 
  2750  0E37                     	;# 
  2751  0E8F                     	;# 
  2752  0E90                     	;# 
  2753  0E91                     	;# 
  2754  0E92                     	;# 
  2755  0E93                     	;# 
  2756  0E94                     	;# 
  2757  0E95                     	;# 
  2758  0E96                     	;# 
  2759  0E97                     	;# 
  2760  0E9C                     	;# 
  2761  0E9D                     	;# 
  2762  0E9E                     	;# 
  2763  0EA1                     	;# 
  2764  0EA2                     	;# 
  2765  0EA3                     	;# 
  2766  0EA4                     	;# 
  2767  0EA5                     	;# 
  2768  0EA9                     	;# 
  2769  0EAA                     	;# 
  2770  0EAB                     	;# 
  2771  0EAC                     	;# 
  2772  0EB1                     	;# 
  2773  0EB2                     	;# 
  2774  0EB3                     	;# 
  2775  0EB8                     	;# 
  2776  0EB9                     	;# 
  2777  0EBA                     	;# 
  2778  0EBB                     	;# 
  2779  0EBC                     	;# 
  2780  0EBD                     	;# 
  2781  0EBE                     	;# 
  2782  0EC3                     	;# 
  2783  0EC5                     	;# 
  2784  0EC6                     	;# 
  2785  0EC7                     	;# 
  2786  0EC8                     	;# 
  2787  0EC9                     	;# 
  2788  0ECA                     	;# 
  2789  0ECB                     	;# 
  2790  0ECC                     	;# 
  2791  0F10                     	;# 
  2792  0F11                     	;# 
  2793  0F12                     	;# 
  2794  0F13                     	;# 
  2795  0F14                     	;# 
  2796  0F15                     	;# 
  2797  0F16                     	;# 
  2798  0F17                     	;# 
  2799  0F18                     	;# 
  2800  0F19                     	;# 
  2801  0F1A                     	;# 
  2802  0F1B                     	;# 
  2803  0F1C                     	;# 
  2804  0F1D                     	;# 
  2805  0F1E                     	;# 
  2806  0F1F                     	;# 
  2807  0F20                     	;# 
  2808  0F21                     	;# 
  2809  0F22                     	;# 
  2810  0F23                     	;# 
  2811  0F24                     	;# 
  2812  0F25                     	;# 
  2813  0F26                     	;# 
  2814  0F27                     	;# 
  2815  0F28                     	;# 
  2816  0F29                     	;# 
  2817  0F2A                     	;# 
  2818  0F2B                     	;# 
  2819  0F2C                     	;# 
  2820  0F2D                     	;# 
  2821  0F2E                     	;# 
  2822  0F2F                     	;# 
  2823  0F30                     	;# 
  2824  0F31                     	;# 
  2825  0F32                     	;# 
  2826  0F38                     	;# 
  2827  0F39                     	;# 
  2828  0F3A                     	;# 
  2829  0F3B                     	;# 
  2830  0F3C                     	;# 
  2831  0F3D                     	;# 
  2832  0F3E                     	;# 
  2833  0F3F                     	;# 
  2834  0F40                     	;# 
  2835  0F41                     	;# 
  2836  0F43                     	;# 
  2837  0F44                     	;# 
  2838  0F45                     	;# 
  2839  0F46                     	;# 
  2840  0F47                     	;# 
  2841  0F48                     	;# 
  2842  0F49                     	;# 
  2843  0F4A                     	;# 
  2844  0F4B                     	;# 
  2845  0F4C                     	;# 
  2846  0F4E                     	;# 
  2847  0F4F                     	;# 
  2848  0F50                     	;# 
  2849  0F51                     	;# 
  2850  0F52                     	;# 
  2851  0F53                     	;# 
  2852  0F54                     	;# 
  2853  0F55                     	;# 
  2854  0F56                     	;# 
  2855  0F57                     	;# 
  2856  0F59                     	;# 
  2857  0F5A                     	;# 
  2858  0F5B                     	;# 
  2859  0F5C                     	;# 
  2860  0F5D                     	;# 
  2861  0F61                     	;# 
  2862  0F62                     	;# 
  2863  0F64                     	;# 
  2864  0F65                     	;# 
  2865  0F66                     	;# 
  2866  0F67                     	;# 
  2867  0F68                     	;# 
  2868  0F69                     	;# 
  2869  0F6A                     	;# 
  2870  0F6B                     	;# 
  2871  0F6C                     	;# 
  2872  0F6D                     	;# 
  2873  0FE4                     	;# 
  2874  0FE5                     	;# 
  2875  0FE6                     	;# 
  2876  0FE7                     	;# 
  2877  0FE8                     	;# 
  2878  0FE9                     	;# 
  2879  0FEA                     	;# 
  2880  0FEB                     	;# 
  2881  0FED                     	;# 
  2882  0FEE                     	;# 
  2883  0FEF                     	;# 
  2884  0000                     	;# 
  2885  0001                     	;# 
  2886  0002                     	;# 
  2887  0003                     	;# 
  2888  0004                     	;# 
  2889  0005                     	;# 
  2890  0006                     	;# 
  2891  0007                     	;# 
  2892  0008                     	;# 
  2893  0009                     	;# 
  2894  000A                     	;# 
  2895  000B                     	;# 
  2896  000C                     	;# 
  2897  000D                     	;# 
  2898  000E                     	;# 
  2899  000F                     	;# 
  2900  0010                     	;# 
  2901  0011                     	;# 
  2902  0012                     	;# 
  2903  0013                     	;# 
  2904  0014                     	;# 
  2905  0015                     	;# 
  2906  0016                     	;# 
  2907  0017                     	;# 
  2908  0018                     	;# 
  2909  0019                     	;# 
  2910  001A                     	;# 
  2911  001C                     	;# 
  2912  001C                     	;# 
  2913  001D                     	;# 
  2914  001D                     	;# 
  2915  001E                     	;# 
  2916  001F                     	;# 
  2917  008C                     	;# 
  2918  008C                     	;# 
  2919  008D                     	;# 
  2920  008E                     	;# 
  2921  008E                     	;# 
  2922  008F                     	;# 
  2923  0090                     	;# 
  2924  0090                     	;# 
  2925  0091                     	;# 
  2926  0093                     	;# 
  2927  0094                     	;# 
  2928  0095                     	;# 
  2929  0096                     	;# 
  2930  0097                     	;# 
  2931  0098                     	;# 
  2932  0099                     	;# 
  2933  009A                     	;# 
  2934  009B                     	;# 
  2935  009C                     	;# 
  2936  009D                     	;# 
  2937  009E                     	;# 
  2938  010C                     	;# 
  2939  010D                     	;# 
  2940  010E                     	;# 
  2941  010E                     	;# 
  2942  010F                     	;# 
  2943  0110                     	;# 
  2944  0110                     	;# 
  2945  0111                     	;# 
  2946  0112                     	;# 
  2947  0112                     	;# 
  2948  0113                     	;# 
  2949  0114                     	;# 
  2950  0114                     	;# 
  2951  0115                     	;# 
  2952  0116                     	;# 
  2953  0116                     	;# 
  2954  0117                     	;# 
  2955  0119                     	;# 
  2956  0119                     	;# 
  2957  0119                     	;# 
  2958  011A                     	;# 
  2959  011A                     	;# 
  2960  011A                     	;# 
  2961  011B                     	;# 
  2962  011B                     	;# 
  2963  011B                     	;# 
  2964  011B                     	;# 
  2965  011B                     	;# 
  2966  011C                     	;# 
  2967  011C                     	;# 
  2968  011C                     	;# 
  2969  011D                     	;# 
  2970  011D                     	;# 
  2971  011D                     	;# 
  2972  011E                     	;# 
  2973  011E                     	;# 
  2974  011E                     	;# 
  2975  011F                     	;# 
  2976  011F                     	;# 
  2977  011F                     	;# 
  2978  011F                     	;# 
  2979  011F                     	;# 
  2980  018C                     	;# 
  2981  018D                     	;# 
  2982  018E                     	;# 
  2983  018F                     	;# 
  2984  0190                     	;# 
  2985  0191                     	;# 
  2986  0192                     	;# 
  2987  0196                     	;# 
  2988  0197                     	;# 
  2989  0198                     	;# 
  2990  0199                     	;# 
  2991  019A                     	;# 
  2992  019B                     	;# 
  2993  019C                     	;# 
  2994  020C                     	;# 
  2995  020C                     	;# 
  2996  020D                     	;# 
  2997  020E                     	;# 
  2998  020F                     	;# 
  2999  020F                     	;# 
  3000  0210                     	;# 
  3001  0210                     	;# 
  3002  0211                     	;# 
  3003  0211                     	;# 
  3004  0212                     	;# 
  3005  0212                     	;# 
  3006  0213                     	;# 
  3007  0214                     	;# 
  3008  0215                     	;# 
  3009  0215                     	;# 
  3010  0216                     	;# 
  3011  0216                     	;# 
  3012  0217                     	;# 
  3013  0217                     	;# 
  3014  0218                     	;# 
  3015  0218                     	;# 
  3016  0219                     	;# 
  3017  021A                     	;# 
  3018  021B                     	;# 
  3019  021B                     	;# 
  3020  021C                     	;# 
  3021  021C                     	;# 
  3022  021D                     	;# 
  3023  021D                     	;# 
  3024  021E                     	;# 
  3025  021F                     	;# 
  3026  028C                     	;# 
  3027  028C                     	;# 
  3028  028D                     	;# 
  3029  028D                     	;# 
  3030  028E                     	;# 
  3031  028F                     	;# 
  3032  0290                     	;# 
  3033  0290                     	;# 
  3034  0291                     	;# 
  3035  0292                     	;# 
  3036  0292                     	;# 
  3037  0293                     	;# 
  3038  0293                     	;# 
  3039  0294                     	;# 
  3040  0295                     	;# 
  3041  0296                     	;# 
  3042  0296                     	;# 
  3043  0297                     	;# 
  3044  0298                     	;# 
  3045  0298                     	;# 
  3046  0299                     	;# 
  3047  0299                     	;# 
  3048  029A                     	;# 
  3049  029B                     	;# 
  3050  029C                     	;# 
  3051  029C                     	;# 
  3052  029D                     	;# 
  3053  030C                     	;# 
  3054  030C                     	;# 
  3055  030D                     	;# 
  3056  030E                     	;# 
  3057  030F                     	;# 
  3058  0310                     	;# 
  3059  0310                     	;# 
  3060  0311                     	;# 
  3061  0312                     	;# 
  3062  0313                     	;# 
  3063  0314                     	;# 
  3064  0314                     	;# 
  3065  0315                     	;# 
  3066  0316                     	;# 
  3067  0317                     	;# 
  3068  0318                     	;# 
  3069  0318                     	;# 
  3070  0319                     	;# 
  3071  031A                     	;# 
  3072  031B                     	;# 
  3073  031C                     	;# 
  3074  031C                     	;# 
  3075  031D                     	;# 
  3076  031E                     	;# 
  3077  031F                     	;# 
  3078  038C                     	;# 
  3079  038C                     	;# 
  3080  038D                     	;# 
  3081  038E                     	;# 
  3082  0390                     	;# 
  3083  0390                     	;# 
  3084  0391                     	;# 
  3085  0392                     	;# 
  3086  040C                     	;# 
  3087  040D                     	;# 
  3088  040E                     	;# 
  3089  040F                     	;# 
  3090  0410                     	;# 
  3091  0411                     	;# 
  3092  0416                     	;# 
  3093  0416                     	;# 
  3094  0417                     	;# 
  3095  0418                     	;# 
  3096  0418                     	;# 
  3097  0419                     	;# 
  3098  041A                     	;# 
  3099  041A                     	;# 
  3100  041B                     	;# 
  3101  041C                     	;# 
  3102  041C                     	;# 
  3103  041D                     	;# 
  3104  041E                     	;# 
  3105  041F                     	;# 
  3106  048C                     	;# 
  3107  048C                     	;# 
  3108  048D                     	;# 
  3109  048E                     	;# 
  3110  048F                     	;# 
  3111  048F                     	;# 
  3112  0490                     	;# 
  3113  0491                     	;# 
  3114  0492                     	;# 
  3115  0492                     	;# 
  3116  0493                     	;# 
  3117  0494                     	;# 
  3118  0495                     	;# 
  3119  0495                     	;# 
  3120  0496                     	;# 
  3121  0497                     	;# 
  3122  0498                     	;# 
  3123  0499                     	;# 
  3124  049A                     	;# 
  3125  049B                     	;# 
  3126  049C                     	;# 
  3127  049D                     	;# 
  3128  050C                     	;# 
  3129  050C                     	;# 
  3130  050D                     	;# 
  3131  050E                     	;# 
  3132  050F                     	;# 
  3133  050F                     	;# 
  3134  0510                     	;# 
  3135  0511                     	;# 
  3136  0512                     	;# 
  3137  0512                     	;# 
  3138  0513                     	;# 
  3139  0514                     	;# 
  3140  0515                     	;# 
  3141  0515                     	;# 
  3142  0516                     	;# 
  3143  0517                     	;# 
  3144  0518                     	;# 
  3145  0519                     	;# 
  3146  051A                     	;# 
  3147  051B                     	;# 
  3148  051C                     	;# 
  3149  051D                     	;# 
  3150  058C                     	;# 
  3151  058C                     	;# 
  3152  058D                     	;# 
  3153  058E                     	;# 
  3154  058F                     	;# 
  3155  058F                     	;# 
  3156  0590                     	;# 
  3157  0591                     	;# 
  3158  0592                     	;# 
  3159  0593                     	;# 
  3160  060C                     	;# 
  3161  060D                     	;# 
  3162  060E                     	;# 
  3163  060F                     	;# 
  3164  0610                     	;# 
  3165  0611                     	;# 
  3166  0612                     	;# 
  3167  0613                     	;# 
  3168  0614                     	;# 
  3169  0616                     	;# 
  3170  0617                     	;# 
  3171  0618                     	;# 
  3172  0619                     	;# 
  3173  061A                     	;# 
  3174  061B                     	;# 
  3175  061C                     	;# 
  3176  061D                     	;# 
  3177  061E                     	;# 
  3178  068C                     	;# 
  3179  068D                     	;# 
  3180  068E                     	;# 
  3181  068F                     	;# 
  3182  0690                     	;# 
  3183  0691                     	;# 
  3184  0692                     	;# 
  3185  0693                     	;# 
  3186  0694                     	;# 
  3187  070C                     	;# 
  3188  070D                     	;# 
  3189  070E                     	;# 
  3190  070F                     	;# 
  3191  0710                     	;# 
  3192  0711                     	;# 
  3193  0712                     	;# 
  3194  0713                     	;# 
  3195  0714                     	;# 
  3196  0716                     	;# 
  3197  0717                     	;# 
  3198  0718                     	;# 
  3199  0719                     	;# 
  3200  071A                     	;# 
  3201  071B                     	;# 
  3202  071C                     	;# 
  3203  071D                     	;# 
  3204  071E                     	;# 
  3205  0796                     	;# 
  3206  0797                     	;# 
  3207  0798                     	;# 
  3208  0799                     	;# 
  3209  079A                     	;# 
  3210  079B                     	;# 
  3211  080C                     	;# 
  3212  080D                     	;# 
  3213  080E                     	;# 
  3214  080F                     	;# 
  3215  0810                     	;# 
  3216  0811                     	;# 
  3217  0812                     	;# 
  3218  0813                     	;# 
  3219  0814                     	;# 
  3220  081A                     	;# 
  3221  081B                     	;# 
  3222  081C                     	;# 
  3223  081D                     	;# 
  3224  081E                     	;# 
  3225  081F                     	;# 
  3226  088C                     	;# 
  3227  088D                     	;# 
  3228  088E                     	;# 
  3229  088F                     	;# 
  3230  0890                     	;# 
  3231  0891                     	;# 
  3232  0892                     	;# 
  3233  0893                     	;# 
  3234  0895                     	;# 
  3235  0896                     	;# 
  3236  0897                     	;# 
  3237  0898                     	;# 
  3238  0899                     	;# 
  3239  089A                     	;# 
  3240  089B                     	;# 
  3241  090C                     	;# 
  3242  090E                     	;# 
  3243  090F                     	;# 
  3244  091F                     	;# 
  3245  091F                     	;# 
  3246  098F                     	;# 
  3247  098F                     	;# 
  3248  0990                     	;# 
  3249  0991                     	;# 
  3250  0992                     	;# 
  3251  0993                     	;# 
  3252  0994                     	;# 
  3253  0995                     	;# 
  3254  0996                     	;# 
  3255  0997                     	;# 
  3256  0E0F                     	;# 
  3257  0E10                     	;# 
  3258  0E11                     	;# 
  3259  0E12                     	;# 
  3260  0E13                     	;# 
  3261  0E14                     	;# 
  3262  0E15                     	;# 
  3263  0E16                     	;# 
  3264  0E17                     	;# 
  3265  0E18                     	;# 
  3266  0E19                     	;# 
  3267  0E1A                     	;# 
  3268  0E1B                     	;# 
  3269  0E1C                     	;# 
  3270  0E1D                     	;# 
  3271  0E1E                     	;# 
  3272  0E1F                     	;# 
  3273  0E20                     	;# 
  3274  0E21                     	;# 
  3275  0E22                     	;# 
  3276  0E23                     	;# 
  3277  0E24                     	;# 
  3278  0E25                     	;# 
  3279  0E26                     	;# 
  3280  0E27                     	;# 
  3281  0E28                     	;# 
  3282  0E29                     	;# 
  3283  0E2A                     	;# 
  3284  0E2B                     	;# 
  3285  0E2C                     	;# 
  3286  0E2D                     	;# 
  3287  0E2E                     	;# 
  3288  0E2F                     	;# 
  3289  0E30                     	;# 
  3290  0E31                     	;# 
  3291  0E32                     	;# 
  3292  0E33                     	;# 
  3293  0E34                     	;# 
  3294  0E35                     	;# 
  3295  0E36                     	;# 
  3296  0E37                     	;# 
  3297  0E8F                     	;# 
  3298  0E90                     	;# 
  3299  0E91                     	;# 
  3300  0E92                     	;# 
  3301  0E93                     	;# 
  3302  0E94                     	;# 
  3303  0E95                     	;# 
  3304  0E96                     	;# 
  3305  0E97                     	;# 
  3306  0E9C                     	;# 
  3307  0E9D                     	;# 
  3308  0E9E                     	;# 
  3309  0EA1                     	;# 
  3310  0EA2                     	;# 
  3311  0EA3                     	;# 
  3312  0EA4                     	;# 
  3313  0EA5                     	;# 
  3314  0EA9                     	;# 
  3315  0EAA                     	;# 
  3316  0EAB                     	;# 
  3317  0EAC                     	;# 
  3318  0EB1                     	;# 
  3319  0EB2                     	;# 
  3320  0EB3                     	;# 
  3321  0EB8                     	;# 
  3322  0EB9                     	;# 
  3323  0EBA                     	;# 
  3324  0EBB                     	;# 
  3325  0EBC                     	;# 
  3326  0EBD                     	;# 
  3327  0EBE                     	;# 
  3328  0EC3                     	;# 
  3329  0EC5                     	;# 
  3330  0EC6                     	;# 
  3331  0EC7                     	;# 
  3332  0EC8                     	;# 
  3333  0EC9                     	;# 
  3334  0ECA                     	;# 
  3335  0ECB                     	;# 
  3336  0ECC                     	;# 
  3337  0F10                     	;# 
  3338  0F11                     	;# 
  3339  0F12                     	;# 
  3340  0F13                     	;# 
  3341  0F14                     	;# 
  3342  0F15                     	;# 
  3343  0F16                     	;# 
  3344  0F17                     	;# 
  3345  0F18                     	;# 
  3346  0F19                     	;# 
  3347  0F1A                     	;# 
  3348  0F1B                     	;# 
  3349  0F1C                     	;# 
  3350  0F1D                     	;# 
  3351  0F1E                     	;# 
  3352  0F1F                     	;# 
  3353  0F20                     	;# 
  3354  0F21                     	;# 
  3355  0F22                     	;# 
  3356  0F23                     	;# 
  3357  0F24                     	;# 
  3358  0F25                     	;# 
  3359  0F26                     	;# 
  3360  0F27                     	;# 
  3361  0F28                     	;# 
  3362  0F29                     	;# 
  3363  0F2A                     	;# 
  3364  0F2B                     	;# 
  3365  0F2C                     	;# 
  3366  0F2D                     	;# 
  3367  0F2E                     	;# 
  3368  0F2F                     	;# 
  3369  0F30                     	;# 
  3370  0F31                     	;# 
  3371  0F32                     	;# 
  3372  0F38                     	;# 
  3373  0F39                     	;# 
  3374  0F3A                     	;# 
  3375  0F3B                     	;# 
  3376  0F3C                     	;# 
  3377  0F3D                     	;# 
  3378  0F3E                     	;# 
  3379  0F3F                     	;# 
  3380  0F40                     	;# 
  3381  0F41                     	;# 
  3382  0F43                     	;# 
  3383  0F44                     	;# 
  3384  0F45                     	;# 
  3385  0F46                     	;# 
  3386  0F47                     	;# 
  3387  0F48                     	;# 
  3388  0F49                     	;# 
  3389  0F4A                     	;# 
  3390  0F4B                     	;# 
  3391  0F4C                     	;# 
  3392  0F4E                     	;# 
  3393  0F4F                     	;# 
  3394  0F50                     	;# 
  3395  0F51                     	;# 
  3396  0F52                     	;# 
  3397  0F53                     	;# 
  3398  0F54                     	;# 
  3399  0F55                     	;# 
  3400  0F56                     	;# 
  3401  0F57                     	;# 
  3402  0F59                     	;# 
  3403  0F5A                     	;# 
  3404  0F5B                     	;# 
  3405  0F5C                     	;# 
  3406  0F5D                     	;# 
  3407  0F61                     	;# 
  3408  0F62                     	;# 
  3409  0F64                     	;# 
  3410  0F65                     	;# 
  3411  0F66                     	;# 
  3412  0F67                     	;# 
  3413  0F68                     	;# 
  3414  0F69                     	;# 
  3415  0F6A                     	;# 
  3416  0F6B                     	;# 
  3417  0F6C                     	;# 
  3418  0F6D                     	;# 
  3419  0FE4                     	;# 
  3420  0FE5                     	;# 
  3421  0FE6                     	;# 
  3422  0FE7                     	;# 
  3423  0FE8                     	;# 
  3424  0FE9                     	;# 
  3425  0FEA                     	;# 
  3426  0FEB                     	;# 
  3427  0FED                     	;# 
  3428  0FEE                     	;# 
  3429  0FEF                     	;# 
  3430  0000                     	;# 
  3431  0001                     	;# 
  3432  0002                     	;# 
  3433  0003                     	;# 
  3434  0004                     	;# 
  3435  0005                     	;# 
  3436  0006                     	;# 
  3437  0007                     	;# 
  3438  0008                     	;# 
  3439  0009                     	;# 
  3440  000A                     	;# 
  3441  000B                     	;# 
  3442  000C                     	;# 
  3443  000D                     	;# 
  3444  000E                     	;# 
  3445  000F                     	;# 
  3446  0010                     	;# 
  3447  0011                     	;# 
  3448  0012                     	;# 
  3449  0013                     	;# 
  3450  0014                     	;# 
  3451  0015                     	;# 
  3452  0016                     	;# 
  3453  0017                     	;# 
  3454  0018                     	;# 
  3455  0019                     	;# 
  3456  001A                     	;# 
  3457  001C                     	;# 
  3458  001C                     	;# 
  3459  001D                     	;# 
  3460  001D                     	;# 
  3461  001E                     	;# 
  3462  001F                     	;# 
  3463  008C                     	;# 
  3464  008C                     	;# 
  3465  008D                     	;# 
  3466  008E                     	;# 
  3467  008E                     	;# 
  3468  008F                     	;# 
  3469  0090                     	;# 
  3470  0090                     	;# 
  3471  0091                     	;# 
  3472  0093                     	;# 
  3473  0094                     	;# 
  3474  0095                     	;# 
  3475  0096                     	;# 
  3476  0097                     	;# 
  3477  0098                     	;# 
  3478  0099                     	;# 
  3479  009A                     	;# 
  3480  009B                     	;# 
  3481  009C                     	;# 
  3482  009D                     	;# 
  3483  009E                     	;# 
  3484  010C                     	;# 
  3485  010D                     	;# 
  3486  010E                     	;# 
  3487  010E                     	;# 
  3488  010F                     	;# 
  3489  0110                     	;# 
  3490  0110                     	;# 
  3491  0111                     	;# 
  3492  0112                     	;# 
  3493  0112                     	;# 
  3494  0113                     	;# 
  3495  0114                     	;# 
  3496  0114                     	;# 
  3497  0115                     	;# 
  3498  0116                     	;# 
  3499  0116                     	;# 
  3500  0117                     	;# 
  3501  0119                     	;# 
  3502  0119                     	;# 
  3503  0119                     	;# 
  3504  011A                     	;# 
  3505  011A                     	;# 
  3506  011A                     	;# 
  3507  011B                     	;# 
  3508  011B                     	;# 
  3509  011B                     	;# 
  3510  011B                     	;# 
  3511  011B                     	;# 
  3512  011C                     	;# 
  3513  011C                     	;# 
  3514  011C                     	;# 
  3515  011D                     	;# 
  3516  011D                     	;# 
  3517  011D                     	;# 
  3518  011E                     	;# 
  3519  011E                     	;# 
  3520  011E                     	;# 
  3521  011F                     	;# 
  3522  011F                     	;# 
  3523  011F                     	;# 
  3524  011F                     	;# 
  3525  011F                     	;# 
  3526  018C                     	;# 
  3527  018D                     	;# 
  3528  018E                     	;# 
  3529  018F                     	;# 
  3530  0190                     	;# 
  3531  0191                     	;# 
  3532  0192                     	;# 
  3533  0196                     	;# 
  3534  0197                     	;# 
  3535  0198                     	;# 
  3536  0199                     	;# 
  3537  019A                     	;# 
  3538  019B                     	;# 
  3539  019C                     	;# 
  3540  020C                     	;# 
  3541  020C                     	;# 
  3542  020D                     	;# 
  3543  020E                     	;# 
  3544  020F                     	;# 
  3545  020F                     	;# 
  3546  0210                     	;# 
  3547  0210                     	;# 
  3548  0211                     	;# 
  3549  0211                     	;# 
  3550  0212                     	;# 
  3551  0212                     	;# 
  3552  0213                     	;# 
  3553  0214                     	;# 
  3554  0215                     	;# 
  3555  0215                     	;# 
  3556  0216                     	;# 
  3557  0216                     	;# 
  3558  0217                     	;# 
  3559  0217                     	;# 
  3560  0218                     	;# 
  3561  0218                     	;# 
  3562  0219                     	;# 
  3563  021A                     	;# 
  3564  021B                     	;# 
  3565  021B                     	;# 
  3566  021C                     	;# 
  3567  021C                     	;# 
  3568  021D                     	;# 
  3569  021D                     	;# 
  3570  021E                     	;# 
  3571  021F                     	;# 
  3572  028C                     	;# 
  3573  028C                     	;# 
  3574  028D                     	;# 
  3575  028D                     	;# 
  3576  028E                     	;# 
  3577  028F                     	;# 
  3578  0290                     	;# 
  3579  0290                     	;# 
  3580  0291                     	;# 
  3581  0292                     	;# 
  3582  0292                     	;# 
  3583  0293                     	;# 
  3584  0293                     	;# 
  3585  0294                     	;# 
  3586  0295                     	;# 
  3587  0296                     	;# 
  3588  0296                     	;# 
  3589  0297                     	;# 
  3590  0298                     	;# 
  3591  0298                     	;# 
  3592  0299                     	;# 
  3593  0299                     	;# 
  3594  029A                     	;# 
  3595  029B                     	;# 
  3596  029C                     	;# 
  3597  029C                     	;# 
  3598  029D                     	;# 
  3599  030C                     	;# 
  3600  030C                     	;# 
  3601  030D                     	;# 
  3602  030E                     	;# 
  3603  030F                     	;# 
  3604  0310                     	;# 
  3605  0310                     	;# 
  3606  0311                     	;# 
  3607  0312                     	;# 
  3608  0313                     	;# 
  3609  0314                     	;# 
  3610  0314                     	;# 
  3611  0315                     	;# 
  3612  0316                     	;# 
  3613  0317                     	;# 
  3614  0318                     	;# 
  3615  0318                     	;# 
  3616  0319                     	;# 
  3617  031A                     	;# 
  3618  031B                     	;# 
  3619  031C                     	;# 
  3620  031C                     	;# 
  3621  031D                     	;# 
  3622  031E                     	;# 
  3623  031F                     	;# 
  3624  038C                     	;# 
  3625  038C                     	;# 
  3626  038D                     	;# 
  3627  038E                     	;# 
  3628  0390                     	;# 
  3629  0390                     	;# 
  3630  0391                     	;# 
  3631  0392                     	;# 
  3632  040C                     	;# 
  3633  040D                     	;# 
  3634  040E                     	;# 
  3635  040F                     	;# 
  3636  0410                     	;# 
  3637  0411                     	;# 
  3638  0416                     	;# 
  3639  0416                     	;# 
  3640  0417                     	;# 
  3641  0418                     	;# 
  3642  0418                     	;# 
  3643  0419                     	;# 
  3644  041A                     	;# 
  3645  041A                     	;# 
  3646  041B                     	;# 
  3647  041C                     	;# 
  3648  041C                     	;# 
  3649  041D                     	;# 
  3650  041E                     	;# 
  3651  041F                     	;# 
  3652  048C                     	;# 
  3653  048C                     	;# 
  3654  048D                     	;# 
  3655  048E                     	;# 
  3656  048F                     	;# 
  3657  048F                     	;# 
  3658  0490                     	;# 
  3659  0491                     	;# 
  3660  0492                     	;# 
  3661  0492                     	;# 
  3662  0493                     	;# 
  3663  0494                     	;# 
  3664  0495                     	;# 
  3665  0495                     	;# 
  3666  0496                     	;# 
  3667  0497                     	;# 
  3668  0498                     	;# 
  3669  0499                     	;# 
  3670  049A                     	;# 
  3671  049B                     	;# 
  3672  049C                     	;# 
  3673  049D                     	;# 
  3674  050C                     	;# 
  3675  050C                     	;# 
  3676  050D                     	;# 
  3677  050E                     	;# 
  3678  050F                     	;# 
  3679  050F                     	;# 
  3680  0510                     	;# 
  3681  0511                     	;# 
  3682  0512                     	;# 
  3683  0512                     	;# 
  3684  0513                     	;# 
  3685  0514                     	;# 
  3686  0515                     	;# 
  3687  0515                     	;# 
  3688  0516                     	;# 
  3689  0517                     	;# 
  3690  0518                     	;# 
  3691  0519                     	;# 
  3692  051A                     	;# 
  3693  051B                     	;# 
  3694  051C                     	;# 
  3695  051D                     	;# 
  3696  058C                     	;# 
  3697  058C                     	;# 
  3698  058D                     	;# 
  3699  058E                     	;# 
  3700  058F                     	;# 
  3701  058F                     	;# 
  3702  0590                     	;# 
  3703  0591                     	;# 
  3704  0592                     	;# 
  3705  0593                     	;# 
  3706  060C                     	;# 
  3707  060D                     	;# 
  3708  060E                     	;# 
  3709  060F                     	;# 
  3710  0610                     	;# 
  3711  0611                     	;# 
  3712  0612                     	;# 
  3713  0613                     	;# 
  3714  0614                     	;# 
  3715  0616                     	;# 
  3716  0617                     	;# 
  3717  0618                     	;# 
  3718  0619                     	;# 
  3719  061A                     	;# 
  3720  061B                     	;# 
  3721  061C                     	;# 
  3722  061D                     	;# 
  3723  061E                     	;# 
  3724  068C                     	;# 
  3725  068D                     	;# 
  3726  068E                     	;# 
  3727  068F                     	;# 
  3728  0690                     	;# 
  3729  0691                     	;# 
  3730  0692                     	;# 
  3731  0693                     	;# 
  3732  0694                     	;# 
  3733  070C                     	;# 
  3734  070D                     	;# 
  3735  070E                     	;# 
  3736  070F                     	;# 
  3737  0710                     	;# 
  3738  0711                     	;# 
  3739  0712                     	;# 
  3740  0713                     	;# 
  3741  0714                     	;# 
  3742  0716                     	;# 
  3743  0717                     	;# 
  3744  0718                     	;# 
  3745  0719                     	;# 
  3746  071A                     	;# 
  3747  071B                     	;# 
  3748  071C                     	;# 
  3749  071D                     	;# 
  3750  071E                     	;# 
  3751  0796                     	;# 
  3752  0797                     	;# 
  3753  0798                     	;# 
  3754  0799                     	;# 
  3755  079A                     	;# 
  3756  079B                     	;# 
  3757  080C                     	;# 
  3758  080D                     	;# 
  3759  080E                     	;# 
  3760  080F                     	;# 
  3761  0810                     	;# 
  3762  0811                     	;# 
  3763  0812                     	;# 
  3764  0813                     	;# 
  3765  0814                     	;# 
  3766  081A                     	;# 
  3767  081B                     	;# 
  3768  081C                     	;# 
  3769  081D                     	;# 
  3770  081E                     	;# 
  3771  081F                     	;# 
  3772  088C                     	;# 
  3773  088D                     	;# 
  3774  088E                     	;# 
  3775  088F                     	;# 
  3776  0890                     	;# 
  3777  0891                     	;# 
  3778  0892                     	;# 
  3779  0893                     	;# 
  3780  0895                     	;# 
  3781  0896                     	;# 
  3782  0897                     	;# 
  3783  0898                     	;# 
  3784  0899                     	;# 
  3785  089A                     	;# 
  3786  089B                     	;# 
  3787  090C                     	;# 
  3788  090E                     	;# 
  3789  090F                     	;# 
  3790  091F                     	;# 
  3791  091F                     	;# 
  3792  098F                     	;# 
  3793  098F                     	;# 
  3794  0990                     	;# 
  3795  0991                     	;# 
  3796  0992                     	;# 
  3797  0993                     	;# 
  3798  0994                     	;# 
  3799  0995                     	;# 
  3800  0996                     	;# 
  3801  0997                     	;# 
  3802  0E0F                     	;# 
  3803  0E10                     	;# 
  3804  0E11                     	;# 
  3805  0E12                     	;# 
  3806  0E13                     	;# 
  3807  0E14                     	;# 
  3808  0E15                     	;# 
  3809  0E16                     	;# 
  3810  0E17                     	;# 
  3811  0E18                     	;# 
  3812  0E19                     	;# 
  3813  0E1A                     	;# 
  3814  0E1B                     	;# 
  3815  0E1C                     	;# 
  3816  0E1D                     	;# 
  3817  0E1E                     	;# 
  3818  0E1F                     	;# 
  3819  0E20                     	;# 
  3820  0E21                     	;# 
  3821  0E22                     	;# 
  3822  0E23                     	;# 
  3823  0E24                     	;# 
  3824  0E25                     	;# 
  3825  0E26                     	;# 
  3826  0E27                     	;# 
  3827  0E28                     	;# 
  3828  0E29                     	;# 
  3829  0E2A                     	;# 
  3830  0E2B                     	;# 
  3831  0E2C                     	;# 
  3832  0E2D                     	;# 
  3833  0E2E                     	;# 
  3834  0E2F                     	;# 
  3835  0E30                     	;# 
  3836  0E31                     	;# 
  3837  0E32                     	;# 
  3838  0E33                     	;# 
  3839  0E34                     	;# 
  3840  0E35                     	;# 
  3841  0E36                     	;# 
  3842  0E37                     	;# 
  3843  0E8F                     	;# 
  3844  0E90                     	;# 
  3845  0E91                     	;# 
  3846  0E92                     	;# 
  3847  0E93                     	;# 
  3848  0E94                     	;# 
  3849  0E95                     	;# 
  3850  0E96                     	;# 
  3851  0E97                     	;# 
  3852  0E9C                     	;# 
  3853  0E9D                     	;# 
  3854  0E9E                     	;# 
  3855  0EA1                     	;# 
  3856  0EA2                     	;# 
  3857  0EA3                     	;# 
  3858  0EA4                     	;# 
  3859  0EA5                     	;# 
  3860  0EA9                     	;# 
  3861  0EAA                     	;# 
  3862  0EAB                     	;# 
  3863  0EAC                     	;# 
  3864  0EB1                     	;# 
  3865  0EB2                     	;# 
  3866  0EB3                     	;# 
  3867  0EB8                     	;# 
  3868  0EB9                     	;# 
  3869  0EBA                     	;# 
  3870  0EBB                     	;# 
  3871  0EBC                     	;# 
  3872  0EBD                     	;# 
  3873  0EBE                     	;# 
  3874  0EC3                     	;# 
  3875  0EC5                     	;# 
  3876  0EC6                     	;# 
  3877  0EC7                     	;# 
  3878  0EC8                     	;# 
  3879  0EC9                     	;# 
  3880  0ECA                     	;# 
  3881  0ECB                     	;# 
  3882  0ECC                     	;# 
  3883  0F10                     	;# 
  3884  0F11                     	;# 
  3885  0F12                     	;# 
  3886  0F13                     	;# 
  3887  0F14                     	;# 
  3888  0F15                     	;# 
  3889  0F16                     	;# 
  3890  0F17                     	;# 
  3891  0F18                     	;# 
  3892  0F19                     	;# 
  3893  0F1A                     	;# 
  3894  0F1B                     	;# 
  3895  0F1C                     	;# 
  3896  0F1D                     	;# 
  3897  0F1E                     	;# 
  3898  0F1F                     	;# 
  3899  0F20                     	;# 
  3900  0F21                     	;# 
  3901  0F22                     	;# 
  3902  0F23                     	;# 
  3903  0F24                     	;# 
  3904  0F25                     	;# 
  3905  0F26                     	;# 
  3906  0F27                     	;# 
  3907  0F28                     	;# 
  3908  0F29                     	;# 
  3909  0F2A                     	;# 
  3910  0F2B                     	;# 
  3911  0F2C                     	;# 
  3912  0F2D                     	;# 
  3913  0F2E                     	;# 
  3914  0F2F                     	;# 
  3915  0F30                     	;# 
  3916  0F31                     	;# 
  3917  0F32                     	;# 
  3918  0F38                     	;# 
  3919  0F39                     	;# 
  3920  0F3A                     	;# 
  3921  0F3B                     	;# 
  3922  0F3C                     	;# 
  3923  0F3D                     	;# 
  3924  0F3E                     	;# 
  3925  0F3F                     	;# 
  3926  0F40                     	;# 
  3927  0F41                     	;# 
  3928  0F43                     	;# 
  3929  0F44                     	;# 
  3930  0F45                     	;# 
  3931  0F46                     	;# 
  3932  0F47                     	;# 
  3933  0F48                     	;# 
  3934  0F49                     	;# 
  3935  0F4A                     	;# 
  3936  0F4B                     	;# 
  3937  0F4C                     	;# 
  3938  0F4E                     	;# 
  3939  0F4F                     	;# 
  3940  0F50                     	;# 
  3941  0F51                     	;# 
  3942  0F52                     	;# 
  3943  0F53                     	;# 
  3944  0F54                     	;# 
  3945  0F55                     	;# 
  3946  0F56                     	;# 
  3947  0F57                     	;# 
  3948  0F59                     	;# 
  3949  0F5A                     	;# 
  3950  0F5B                     	;# 
  3951  0F5C                     	;# 
  3952  0F5D                     	;# 
  3953  0F61                     	;# 
  3954  0F62                     	;# 
  3955  0F64                     	;# 
  3956  0F65                     	;# 
  3957  0F66                     	;# 
  3958  0F67                     	;# 
  3959  0F68                     	;# 
  3960  0F69                     	;# 
  3961  0F6A                     	;# 
  3962  0F6B                     	;# 
  3963  0F6C                     	;# 
  3964  0F6D                     	;# 
  3965  0FE4                     	;# 
  3966  0FE5                     	;# 
  3967  0FE6                     	;# 
  3968  0FE7                     	;# 
  3969  0FE8                     	;# 
  3970  0FE9                     	;# 
  3971  0FEA                     	;# 
  3972  0FEB                     	;# 
  3973  0FED                     	;# 
  3974  0FEE                     	;# 
  3975  0FEF                     	;# 
  3976  0000                     	;# 
  3977  0001                     	;# 
  3978  0002                     	;# 
  3979  0003                     	;# 
  3980  0004                     	;# 
  3981  0005                     	;# 
  3982  0006                     	;# 
  3983  0007                     	;# 
  3984  0008                     	;# 
  3985  0009                     	;# 
  3986  000A                     	;# 
  3987  000B                     	;# 
  3988  000C                     	;# 
  3989  000D                     	;# 
  3990  000E                     	;# 
  3991  000F                     	;# 
  3992  0010                     	;# 
  3993  0011                     	;# 
  3994  0012                     	;# 
  3995  0013                     	;# 
  3996  0014                     	;# 
  3997  0015                     	;# 
  3998  0016                     	;# 
  3999  0017                     	;# 
  4000  0018                     	;# 
  4001  0019                     	;# 
  4002  001A                     	;# 
  4003  001C                     	;# 
  4004  001C                     	;# 
  4005  001D                     	;# 
  4006  001D                     	;# 
  4007  001E                     	;# 
  4008  001F                     	;# 
  4009  008C                     	;# 
  4010  008C                     	;# 
  4011  008D                     	;# 
  4012  008E                     	;# 
  4013  008E                     	;# 
  4014  008F                     	;# 
  4015  0090                     	;# 
  4016  0090                     	;# 
  4017  0091                     	;# 
  4018  0093                     	;# 
  4019  0094                     	;# 
  4020  0095                     	;# 
  4021  0096                     	;# 
  4022  0097                     	;# 
  4023  0098                     	;# 
  4024  0099                     	;# 
  4025  009A                     	;# 
  4026  009B                     	;# 
  4027  009C                     	;# 
  4028  009D                     	;# 
  4029  009E                     	;# 
  4030  010C                     	;# 
  4031  010D                     	;# 
  4032  010E                     	;# 
  4033  010E                     	;# 
  4034  010F                     	;# 
  4035  0110                     	;# 
  4036  0110                     	;# 
  4037  0111                     	;# 
  4038  0112                     	;# 
  4039  0112                     	;# 
  4040  0113                     	;# 
  4041  0114                     	;# 
  4042  0114                     	;# 
  4043  0115                     	;# 
  4044  0116                     	;# 
  4045  0116                     	;# 
  4046  0117                     	;# 
  4047  0119                     	;# 
  4048  0119                     	;# 
  4049  0119                     	;# 
  4050  011A                     	;# 
  4051  011A                     	;# 
  4052  011A                     	;# 
  4053  011B                     	;# 
  4054  011B                     	;# 
  4055  011B                     	;# 
  4056  011B                     	;# 
  4057  011B                     	;# 
  4058  011C                     	;# 
  4059  011C                     	;# 
  4060  011C                     	;# 
  4061  011D                     	;# 
  4062  011D                     	;# 
  4063  011D                     	;# 
  4064  011E                     	;# 
  4065  011E                     	;# 
  4066  011E                     	;# 
  4067  011F                     	;# 
  4068  011F                     	;# 
  4069  011F                     	;# 
  4070  011F                     	;# 
  4071  011F                     	;# 
  4072  018C                     	;# 
  4073  018D                     	;# 
  4074  018E                     	;# 
  4075  018F                     	;# 
  4076  0190                     	;# 
  4077  0191                     	;# 
  4078  0192                     	;# 
  4079  0196                     	;# 
  4080  0197                     	;# 
  4081  0198                     	;# 
  4082  0199                     	;# 
  4083  019A                     	;# 
  4084  019B                     	;# 
  4085  019C                     	;# 
  4086  020C                     	;# 
  4087  020C                     	;# 
  4088  020D                     	;# 
  4089  020E                     	;# 
  4090  020F                     	;# 
  4091  020F                     	;# 
  4092  0210                     	;# 
  4093  0210                     	;# 
  4094  0211                     	;# 
  4095  0211                     	;# 
  4096  0212                     	;# 
  4097  0212                     	;# 
  4098  0213                     	;# 
  4099  0214                     	;# 
  4100  0215                     	;# 
  4101  0215                     	;# 
  4102  0216                     	;# 
  4103  0216                     	;# 
  4104  0217                     	;# 
  4105  0217                     	;# 
  4106  0218                     	;# 
  4107  0218                     	;# 
  4108  0219                     	;# 
  4109  021A                     	;# 
  4110  021B                     	;# 
  4111  021B                     	;# 
  4112  021C                     	;# 
  4113  021C                     	;# 
  4114  021D                     	;# 
  4115  021D                     	;# 
  4116  021E                     	;# 
  4117  021F                     	;# 
  4118  028C                     	;# 
  4119  028C                     	;# 
  4120  028D                     	;# 
  4121  028D                     	;# 
  4122  028E                     	;# 
  4123  028F                     	;# 
  4124  0290                     	;# 
  4125  0290                     	;# 
  4126  0291                     	;# 
  4127  0292                     	;# 
  4128  0292                     	;# 
  4129  0293                     	;# 
  4130  0293                     	;# 
  4131  0294                     	;# 
  4132  0295                     	;# 
  4133  0296                     	;# 
  4134  0296                     	;# 
  4135  0297                     	;# 
  4136  0298                     	;# 
  4137  0298                     	;# 
  4138  0299                     	;# 
  4139  0299                     	;# 
  4140  029A                     	;# 
  4141  029B                     	;# 
  4142  029C                     	;# 
  4143  029C                     	;# 
  4144  029D                     	;# 
  4145  030C                     	;# 
  4146  030C                     	;# 
  4147  030D                     	;# 
  4148  030E                     	;# 
  4149  030F                     	;# 
  4150  0310                     	;# 
  4151  0310                     	;# 
  4152  0311                     	;# 
  4153  0312                     	;# 
  4154  0313                     	;# 
  4155  0314                     	;# 
  4156  0314                     	;# 
  4157  0315                     	;# 
  4158  0316                     	;# 
  4159  0317                     	;# 
  4160  0318                     	;# 
  4161  0318                     	;# 
  4162  0319                     	;# 
  4163  031A                     	;# 
  4164  031B                     	;# 
  4165  031C                     	;# 
  4166  031C                     	;# 
  4167  031D                     	;# 
  4168  031E                     	;# 
  4169  031F                     	;# 
  4170  038C                     	;# 
  4171  038C                     	;# 
  4172  038D                     	;# 
  4173  038E                     	;# 
  4174  0390                     	;# 
  4175  0390                     	;# 
  4176  0391                     	;# 
  4177  0392                     	;# 
  4178  040C                     	;# 
  4179  040D                     	;# 
  4180  040E                     	;# 
  4181  040F                     	;# 
  4182  0410                     	;# 
  4183  0411                     	;# 
  4184  0416                     	;# 
  4185  0416                     	;# 
  4186  0417                     	;# 
  4187  0418                     	;# 
  4188  0418                     	;# 
  4189  0419                     	;# 
  4190  041A                     	;# 
  4191  041A                     	;# 
  4192  041B                     	;# 
  4193  041C                     	;# 
  4194  041C                     	;# 
  4195  041D                     	;# 
  4196  041E                     	;# 
  4197  041F                     	;# 
  4198  048C                     	;# 
  4199  048C                     	;# 
  4200  048D                     	;# 
  4201  048E                     	;# 
  4202  048F                     	;# 
  4203  048F                     	;# 
  4204  0490                     	;# 
  4205  0491                     	;# 
  4206  0492                     	;# 
  4207  0492                     	;# 
  4208  0493                     	;# 
  4209  0494                     	;# 
  4210  0495                     	;# 
  4211  0495                     	;# 
  4212  0496                     	;# 
  4213  0497                     	;# 
  4214  0498                     	;# 
  4215  0499                     	;# 
  4216  049A                     	;# 
  4217  049B                     	;# 
  4218  049C                     	;# 
  4219  049D                     	;# 
  4220  050C                     	;# 
  4221  050C                     	;# 
  4222  050D                     	;# 
  4223  050E                     	;# 
  4224  050F                     	;# 
  4225  050F                     	;# 
  4226  0510                     	;# 
  4227  0511                     	;# 
  4228  0512                     	;# 
  4229  0512                     	;# 
  4230  0513                     	;# 
  4231  0514                     	;# 
  4232  0515                     	;# 
  4233  0515                     	;# 
  4234  0516                     	;# 
  4235  0517                     	;# 
  4236  0518                     	;# 
  4237  0519                     	;# 
  4238  051A                     	;# 
  4239  051B                     	;# 
  4240  051C                     	;# 
  4241  051D                     	;# 
  4242  058C                     	;# 
  4243  058C                     	;# 
  4244  058D                     	;# 
  4245  058E                     	;# 
  4246  058F                     	;# 
  4247  058F                     	;# 
  4248  0590                     	;# 
  4249  0591                     	;# 
  4250  0592                     	;# 
  4251  0593                     	;# 
  4252  060C                     	;# 
  4253  060D                     	;# 
  4254  060E                     	;# 
  4255  060F                     	;# 
  4256  0610                     	;# 
  4257  0611                     	;# 
  4258  0612                     	;# 
  4259  0613                     	;# 
  4260  0614                     	;# 
  4261  0616                     	;# 
  4262  0617                     	;# 
  4263  0618                     	;# 
  4264  0619                     	;# 
  4265  061A                     	;# 
  4266  061B                     	;# 
  4267  061C                     	;# 
  4268  061D                     	;# 
  4269  061E                     	;# 
  4270  068C                     	;# 
  4271  068D                     	;# 
  4272  068E                     	;# 
  4273  068F                     	;# 
  4274  0690                     	;# 
  4275  0691                     	;# 
  4276  0692                     	;# 
  4277  0693                     	;# 
  4278  0694                     	;# 
  4279  070C                     	;# 
  4280  070D                     	;# 
  4281  070E                     	;# 
  4282  070F                     	;# 
  4283  0710                     	;# 
  4284  0711                     	;# 
  4285  0712                     	;# 
  4286  0713                     	;# 
  4287  0714                     	;# 
  4288  0716                     	;# 
  4289  0717                     	;# 
  4290  0718                     	;# 
  4291  0719                     	;# 
  4292  071A                     	;# 
  4293  071B                     	;# 
  4294  071C                     	;# 
  4295  071D                     	;# 
  4296  071E                     	;# 
  4297  0796                     	;# 
  4298  0797                     	;# 
  4299  0798                     	;# 
  4300  0799                     	;# 
  4301  079A                     	;# 
  4302  079B                     	;# 
  4303  080C                     	;# 
  4304  080D                     	;# 
  4305  080E                     	;# 
  4306  080F                     	;# 
  4307  0810                     	;# 
  4308  0811                     	;# 
  4309  0812                     	;# 
  4310  0813                     	;# 
  4311  0814                     	;# 
  4312  081A                     	;# 
  4313  081B                     	;# 
  4314  081C                     	;# 
  4315  081D                     	;# 
  4316  081E                     	;# 
  4317  081F                     	;# 
  4318  088C                     	;# 
  4319  088D                     	;# 
  4320  088E                     	;# 
  4321  088F                     	;# 
  4322  0890                     	;# 
  4323  0891                     	;# 
  4324  0892                     	;# 
  4325  0893                     	;# 
  4326  0895                     	;# 
  4327  0896                     	;# 
  4328  0897                     	;# 
  4329  0898                     	;# 
  4330  0899                     	;# 
  4331  089A                     	;# 
  4332  089B                     	;# 
  4333  090C                     	;# 
  4334  090E                     	;# 
  4335  090F                     	;# 
  4336  091F                     	;# 
  4337  091F                     	;# 
  4338  098F                     	;# 
  4339  098F                     	;# 
  4340  0990                     	;# 
  4341  0991                     	;# 
  4342  0992                     	;# 
  4343  0993                     	;# 
  4344  0994                     	;# 
  4345  0995                     	;# 
  4346  0996                     	;# 
  4347  0997                     	;# 
  4348  0E0F                     	;# 
  4349  0E10                     	;# 
  4350  0E11                     	;# 
  4351  0E12                     	;# 
  4352  0E13                     	;# 
  4353  0E14                     	;# 
  4354  0E15                     	;# 
  4355  0E16                     	;# 
  4356  0E17                     	;# 
  4357  0E18                     	;# 
  4358  0E19                     	;# 
  4359  0E1A                     	;# 
  4360  0E1B                     	;# 
  4361  0E1C                     	;# 
  4362  0E1D                     	;# 
  4363  0E1E                     	;# 
  4364  0E1F                     	;# 
  4365  0E20                     	;# 
  4366  0E21                     	;# 
  4367  0E22                     	;# 
  4368  0E23                     	;# 
  4369  0E24                     	;# 
  4370  0E25                     	;# 
  4371  0E26                     	;# 
  4372  0E27                     	;# 
  4373  0E28                     	;# 
  4374  0E29                     	;# 
  4375  0E2A                     	;# 
  4376  0E2B                     	;# 
  4377  0E2C                     	;# 
  4378  0E2D                     	;# 
  4379  0E2E                     	;# 
  4380  0E2F                     	;# 
  4381  0E30                     	;# 
  4382  0E31                     	;# 
  4383  0E32                     	;# 
  4384  0E33                     	;# 
  4385  0E34                     	;# 
  4386  0E35                     	;# 
  4387  0E36                     	;# 
  4388  0E37                     	;# 
  4389  0E8F                     	;# 
  4390  0E90                     	;# 
  4391  0E91                     	;# 
  4392  0E92                     	;# 
  4393  0E93                     	;# 
  4394  0E94                     	;# 
  4395  0E95                     	;# 
  4396  0E96                     	;# 
  4397  0E97                     	;# 
  4398  0E9C                     	;# 
  4399  0E9D                     	;# 
  4400  0E9E                     	;# 
  4401  0EA1                     	;# 
  4402  0EA2                     	;# 
  4403  0EA3                     	;# 
  4404  0EA4                     	;# 
  4405  0EA5                     	;# 
  4406  0EA9                     	;# 
  4407  0EAA                     	;# 
  4408  0EAB                     	;# 
  4409  0EAC                     	;# 
  4410  0EB1                     	;# 
  4411  0EB2                     	;# 
  4412  0EB3                     	;# 
  4413  0EB8                     	;# 
  4414  0EB9                     	;# 
  4415  0EBA                     	;# 
  4416  0EBB                     	;# 
  4417  0EBC                     	;# 
  4418  0EBD                     	;# 
  4419  0EBE                     	;# 
  4420  0EC3                     	;# 
  4421  0EC5                     	;# 
  4422  0EC6                     	;# 
  4423  0EC7                     	;# 
  4424  0EC8                     	;# 
  4425  0EC9                     	;# 
  4426  0ECA                     	;# 
  4427  0ECB                     	;# 
  4428  0ECC                     	;# 
  4429  0F10                     	;# 
  4430  0F11                     	;# 
  4431  0F12                     	;# 
  4432  0F13                     	;# 
  4433  0F14                     	;# 
  4434  0F15                     	;# 
  4435  0F16                     	;# 
  4436  0F17                     	;# 
  4437  0F18                     	;# 
  4438  0F19                     	;# 
  4439  0F1A                     	;# 
  4440  0F1B                     	;# 
  4441  0F1C                     	;# 
  4442  0F1D                     	;# 
  4443  0F1E                     	;# 
  4444  0F1F                     	;# 
  4445  0F20                     	;# 
  4446  0F21                     	;# 
  4447  0F22                     	;# 
  4448  0F23                     	;# 
  4449  0F24                     	;# 
  4450  0F25                     	;# 
  4451  0F26                     	;# 
  4452  0F27                     	;# 
  4453  0F28                     	;# 
  4454  0F29                     	;# 
  4455  0F2A                     	;# 
  4456  0F2B                     	;# 
  4457  0F2C                     	;# 
  4458  0F2D                     	;# 
  4459  0F2E                     	;# 
  4460  0F2F                     	;# 
  4461  0F30                     	;# 
  4462  0F31                     	;# 
  4463  0F32                     	;# 
  4464  0F38                     	;# 
  4465  0F39                     	;# 
  4466  0F3A                     	;# 
  4467  0F3B                     	;# 
  4468  0F3C                     	;# 
  4469  0F3D                     	;# 
  4470  0F3E                     	;# 
  4471  0F3F                     	;# 
  4472  0F40                     	;# 
  4473  0F41                     	;# 
  4474  0F43                     	;# 
  4475  0F44                     	;# 
  4476  0F45                     	;# 
  4477  0F46                     	;# 
  4478  0F47                     	;# 
  4479  0F48                     	;# 
  4480  0F49                     	;# 
  4481  0F4A                     	;# 
  4482  0F4B                     	;# 
  4483  0F4C                     	;# 
  4484  0F4E                     	;# 
  4485  0F4F                     	;# 
  4486  0F50                     	;# 
  4487  0F51                     	;# 
  4488  0F52                     	;# 
  4489  0F53                     	;# 
  4490  0F54                     	;# 
  4491  0F55                     	;# 
  4492  0F56                     	;# 
  4493  0F57                     	;# 
  4494  0F59                     	;# 
  4495  0F5A                     	;# 
  4496  0F5B                     	;# 
  4497  0F5C                     	;# 
  4498  0F5D                     	;# 
  4499  0F61                     	;# 
  4500  0F62                     	;# 
  4501  0F64                     	;# 
  4502  0F65                     	;# 
  4503  0F66                     	;# 
  4504  0F67                     	;# 
  4505  0F68                     	;# 
  4506  0F69                     	;# 
  4507  0F6A                     	;# 
  4508  0F6B                     	;# 
  4509  0F6C                     	;# 
  4510  0F6D                     	;# 
  4511  0FE4                     	;# 
  4512  0FE5                     	;# 
  4513  0FE6                     	;# 
  4514  0FE7                     	;# 
  4515  0FE8                     	;# 
  4516  0FE9                     	;# 
  4517  0FEA                     	;# 
  4518  0FEB                     	;# 
  4519  0FED                     	;# 
  4520  0FEE                     	;# 
  4521  0FEF                     	;# 
  4522  0000                     	;# 
  4523  0001                     	;# 
  4524  0002                     	;# 
  4525  0003                     	;# 
  4526  0004                     	;# 
  4527  0005                     	;# 
  4528  0006                     	;# 
  4529  0007                     	;# 
  4530  0008                     	;# 
  4531  0009                     	;# 
  4532  000A                     	;# 
  4533  000B                     	;# 
  4534  000C                     	;# 
  4535  000D                     	;# 
  4536  000E                     	;# 
  4537  000F                     	;# 
  4538  0010                     	;# 
  4539  0011                     	;# 
  4540  0012                     	;# 
  4541  0013                     	;# 
  4542  0014                     	;# 
  4543  0015                     	;# 
  4544  0016                     	;# 
  4545  0017                     	;# 
  4546  0018                     	;# 
  4547  0019                     	;# 
  4548  001A                     	;# 
  4549  001C                     	;# 
  4550  001C                     	;# 
  4551  001D                     	;# 
  4552  001D                     	;# 
  4553  001E                     	;# 
  4554  001F                     	;# 
  4555  008C                     	;# 
  4556  008C                     	;# 
  4557  008D                     	;# 
  4558  008E                     	;# 
  4559  008E                     	;# 
  4560  008F                     	;# 
  4561  0090                     	;# 
  4562  0090                     	;# 
  4563  0091                     	;# 
  4564  0093                     	;# 
  4565  0094                     	;# 
  4566  0095                     	;# 
  4567  0096                     	;# 
  4568  0097                     	;# 
  4569  0098                     	;# 
  4570  0099                     	;# 
  4571  009A                     	;# 
  4572  009B                     	;# 
  4573  009C                     	;# 
  4574  009D                     	;# 
  4575  009E                     	;# 
  4576  010C                     	;# 
  4577  010D                     	;# 
  4578  010E                     	;# 
  4579  010E                     	;# 
  4580  010F                     	;# 
  4581  0110                     	;# 
  4582  0110                     	;# 
  4583  0111                     	;# 
  4584  0112                     	;# 
  4585  0112                     	;# 
  4586  0113                     	;# 
  4587  0114                     	;# 
  4588  0114                     	;# 
  4589  0115                     	;# 
  4590  0116                     	;# 
  4591  0116                     	;# 
  4592  0117                     	;# 
  4593  0119                     	;# 
  4594  0119                     	;# 
  4595  0119                     	;# 
  4596  011A                     	;# 
  4597  011A                     	;# 
  4598  011A                     	;# 
  4599  011B                     	;# 
  4600  011B                     	;# 
  4601  011B                     	;# 
  4602  011B                     	;# 
  4603  011B                     	;# 
  4604  011C                     	;# 
  4605  011C                     	;# 
  4606  011C                     	;# 
  4607  011D                     	;# 
  4608  011D                     	;# 
  4609  011D                     	;# 
  4610  011E                     	;# 
  4611  011E                     	;# 
  4612  011E                     	;# 
  4613  011F                     	;# 
  4614  011F                     	;# 
  4615  011F                     	;# 
  4616  011F                     	;# 
  4617  011F                     	;# 
  4618  018C                     	;# 
  4619  018D                     	;# 
  4620  018E                     	;# 
  4621  018F                     	;# 
  4622  0190                     	;# 
  4623  0191                     	;# 
  4624  0192                     	;# 
  4625  0196                     	;# 
  4626  0197                     	;# 
  4627  0198                     	;# 
  4628  0199                     	;# 
  4629  019A                     	;# 
  4630  019B                     	;# 
  4631  019C                     	;# 
  4632  020C                     	;# 
  4633  020C                     	;# 
  4634  020D                     	;# 
  4635  020E                     	;# 
  4636  020F                     	;# 
  4637  020F                     	;# 
  4638  0210                     	;# 
  4639  0210                     	;# 
  4640  0211                     	;# 
  4641  0211                     	;# 
  4642  0212                     	;# 
  4643  0212                     	;# 
  4644  0213                     	;# 
  4645  0214                     	;# 
  4646  0215                     	;# 
  4647  0215                     	;# 
  4648  0216                     	;# 
  4649  0216                     	;# 
  4650  0217                     	;# 
  4651  0217                     	;# 
  4652  0218                     	;# 
  4653  0218                     	;# 
  4654  0219                     	;# 
  4655  021A                     	;# 
  4656  021B                     	;# 
  4657  021B                     	;# 
  4658  021C                     	;# 
  4659  021C                     	;# 
  4660  021D                     	;# 
  4661  021D                     	;# 
  4662  021E                     	;# 
  4663  021F                     	;# 
  4664  028C                     	;# 
  4665  028C                     	;# 
  4666  028D                     	;# 
  4667  028D                     	;# 
  4668  028E                     	;# 
  4669  028F                     	;# 
  4670  0290                     	;# 
  4671  0290                     	;# 
  4672  0291                     	;# 
  4673  0292                     	;# 
  4674  0292                     	;# 
  4675  0293                     	;# 
  4676  0293                     	;# 
  4677  0294                     	;# 
  4678  0295                     	;# 
  4679  0296                     	;# 
  4680  0296                     	;# 
  4681  0297                     	;# 
  4682  0298                     	;# 
  4683  0298                     	;# 
  4684  0299                     	;# 
  4685  0299                     	;# 
  4686  029A                     	;# 
  4687  029B                     	;# 
  4688  029C                     	;# 
  4689  029C                     	;# 
  4690  029D                     	;# 
  4691  030C                     	;# 
  4692  030C                     	;# 
  4693  030D                     	;# 
  4694  030E                     	;# 
  4695  030F                     	;# 
  4696  0310                     	;# 
  4697  0310                     	;# 
  4698  0311                     	;# 
  4699  0312                     	;# 
  4700  0313                     	;# 
  4701  0314                     	;# 
  4702  0314                     	;# 
  4703  0315                     	;# 
  4704  0316                     	;# 
  4705  0317                     	;# 
  4706  0318                     	;# 
  4707  0318                     	;# 
  4708  0319                     	;# 
  4709  031A                     	;# 
  4710  031B                     	;# 
  4711  031C                     	;# 
  4712  031C                     	;# 
  4713  031D                     	;# 
  4714  031E                     	;# 
  4715  031F                     	;# 
  4716  038C                     	;# 
  4717  038C                     	;# 
  4718  038D                     	;# 
  4719  038E                     	;# 
  4720  0390                     	;# 
  4721  0390                     	;# 
  4722  0391                     	;# 
  4723  0392                     	;# 
  4724  040C                     	;# 
  4725  040D                     	;# 
  4726  040E                     	;# 
  4727  040F                     	;# 
  4728  0410                     	;# 
  4729  0411                     	;# 
  4730  0416                     	;# 
  4731  0416                     	;# 
  4732  0417                     	;# 
  4733  0418                     	;# 
  4734  0418                     	;# 
  4735  0419                     	;# 
  4736  041A                     	;# 
  4737  041A                     	;# 
  4738  041B                     	;# 
  4739  041C                     	;# 
  4740  041C                     	;# 
  4741  041D                     	;# 
  4742  041E                     	;# 
  4743  041F                     	;# 
  4744  048C                     	;# 
  4745  048C                     	;# 
  4746  048D                     	;# 
  4747  048E                     	;# 
  4748  048F                     	;# 
  4749  048F                     	;# 
  4750  0490                     	;# 
  4751  0491                     	;# 
  4752  0492                     	;# 
  4753  0492                     	;# 
  4754  0493                     	;# 
  4755  0494                     	;# 
  4756  0495                     	;# 
  4757  0495                     	;# 
  4758  0496                     	;# 
  4759  0497                     	;# 
  4760  0498                     	;# 
  4761  0499                     	;# 
  4762  049A                     	;# 
  4763  049B                     	;# 
  4764  049C                     	;# 
  4765  049D                     	;# 
  4766  050C                     	;# 
  4767  050C                     	;# 
  4768  050D                     	;# 
  4769  050E                     	;# 
  4770  050F                     	;# 
  4771  050F                     	;# 
  4772  0510                     	;# 
  4773  0511                     	;# 
  4774  0512                     	;# 
  4775  0512                     	;# 
  4776  0513                     	;# 
  4777  0514                     	;# 
  4778  0515                     	;# 
  4779  0515                     	;# 
  4780  0516                     	;# 
  4781  0517                     	;# 
  4782  0518                     	;# 
  4783  0519                     	;# 
  4784  051A                     	;# 
  4785  051B                     	;# 
  4786  051C                     	;# 
  4787  051D                     	;# 
  4788  058C                     	;# 
  4789  058C                     	;# 
  4790  058D                     	;# 
  4791  058E                     	;# 
  4792  058F                     	;# 
  4793  058F                     	;# 
  4794  0590                     	;# 
  4795  0591                     	;# 
  4796  0592                     	;# 
  4797  0593                     	;# 
  4798  060C                     	;# 
  4799  060D                     	;# 
  4800  060E                     	;# 
  4801  060F                     	;# 
  4802  0610                     	;# 
  4803  0611                     	;# 
  4804  0612                     	;# 
  4805  0613                     	;# 
  4806  0614                     	;# 
  4807  0616                     	;# 
  4808  0617                     	;# 
  4809  0618                     	;# 
  4810  0619                     	;# 
  4811  061A                     	;# 
  4812  061B                     	;# 
  4813  061C                     	;# 
  4814  061D                     	;# 
  4815  061E                     	;# 
  4816  068C                     	;# 
  4817  068D                     	;# 
  4818  068E                     	;# 
  4819  068F                     	;# 
  4820  0690                     	;# 
  4821  0691                     	;# 
  4822  0692                     	;# 
  4823  0693                     	;# 
  4824  0694                     	;# 
  4825  070C                     	;# 
  4826  070D                     	;# 
  4827  070E                     	;# 
  4828  070F                     	;# 
  4829  0710                     	;# 
  4830  0711                     	;# 
  4831  0712                     	;# 
  4832  0713                     	;# 
  4833  0714                     	;# 
  4834  0716                     	;# 
  4835  0717                     	;# 
  4836  0718                     	;# 
  4837  0719                     	;# 
  4838  071A                     	;# 
  4839  071B                     	;# 
  4840  071C                     	;# 
  4841  071D                     	;# 
  4842  071E                     	;# 
  4843  0796                     	;# 
  4844  0797                     	;# 
  4845  0798                     	;# 
  4846  0799                     	;# 
  4847  079A                     	;# 
  4848  079B                     	;# 
  4849  080C                     	;# 
  4850  080D                     	;# 
  4851  080E                     	;# 
  4852  080F                     	;# 
  4853  0810                     	;# 
  4854  0811                     	;# 
  4855  0812                     	;# 
  4856  0813                     	;# 
  4857  0814                     	;# 
  4858  081A                     	;# 
  4859  081B                     	;# 
  4860  081C                     	;# 
  4861  081D                     	;# 
  4862  081E                     	;# 
  4863  081F                     	;# 
  4864  088C                     	;# 
  4865  088D                     	;# 
  4866  088E                     	;# 
  4867  088F                     	;# 
  4868  0890                     	;# 
  4869  0891                     	;# 
  4870  0892                     	;# 
  4871  0893                     	;# 
  4872  0895                     	;# 
  4873  0896                     	;# 
  4874  0897                     	;# 
  4875  0898                     	;# 
  4876  0899                     	;# 
  4877  089A                     	;# 
  4878  089B                     	;# 
  4879  090C                     	;# 
  4880  090E                     	;# 
  4881  090F                     	;# 
  4882  091F                     	;# 
  4883  091F                     	;# 
  4884  098F                     	;# 
  4885  098F                     	;# 
  4886  0990                     	;# 
  4887  0991                     	;# 
  4888  0992                     	;# 
  4889  0993                     	;# 
  4890  0994                     	;# 
  4891  0995                     	;# 
  4892  0996                     	;# 
  4893  0997                     	;# 
  4894  0E0F                     	;# 
  4895  0E10                     	;# 
  4896  0E11                     	;# 
  4897  0E12                     	;# 
  4898  0E13                     	;# 
  4899  0E14                     	;# 
  4900  0E15                     	;# 
  4901  0E16                     	;# 
  4902  0E17                     	;# 
  4903  0E18                     	;# 
  4904  0E19                     	;# 
  4905  0E1A                     	;# 
  4906  0E1B                     	;# 
  4907  0E1C                     	;# 
  4908  0E1D                     	;# 
  4909  0E1E                     	;# 
  4910  0E1F                     	;# 
  4911  0E20                     	;# 
  4912  0E21                     	;# 
  4913  0E22                     	;# 
  4914  0E23                     	;# 
  4915  0E24                     	;# 
  4916  0E25                     	;# 
  4917  0E26                     	;# 
  4918  0E27                     	;# 
  4919  0E28                     	;# 
  4920  0E29                     	;# 
  4921  0E2A                     	;# 
  4922  0E2B                     	;# 
  4923  0E2C                     	;# 
  4924  0E2D                     	;# 
  4925  0E2E                     	;# 
  4926  0E2F                     	;# 
  4927  0E30                     	;# 
  4928  0E31                     	;# 
  4929  0E32                     	;# 
  4930  0E33                     	;# 
  4931  0E34                     	;# 
  4932  0E35                     	;# 
  4933  0E36                     	;# 
  4934  0E37                     	;# 
  4935  0E8F                     	;# 
  4936  0E90                     	;# 
  4937  0E91                     	;# 
  4938  0E92                     	;# 
  4939  0E93                     	;# 
  4940  0E94                     	;# 
  4941  0E95                     	;# 
  4942  0E96                     	;# 
  4943  0E97                     	;# 
  4944  0E9C                     	;# 
  4945  0E9D                     	;# 
  4946  0E9E                     	;# 
  4947  0EA1                     	;# 
  4948  0EA2                     	;# 
  4949  0EA3                     	;# 
  4950  0EA4                     	;# 
  4951  0EA5                     	;# 
  4952  0EA9                     	;# 
  4953  0EAA                     	;# 
  4954  0EAB                     	;# 
  4955  0EAC                     	;# 
  4956  0EB1                     	;# 
  4957  0EB2                     	;# 
  4958  0EB3                     	;# 
  4959  0EB8                     	;# 
  4960  0EB9                     	;# 
  4961  0EBA                     	;# 
  4962  0EBB                     	;# 
  4963  0EBC                     	;# 
  4964  0EBD                     	;# 
  4965  0EBE                     	;# 
  4966  0EC3                     	;# 
  4967  0EC5                     	;# 
  4968  0EC6                     	;# 
  4969  0EC7                     	;# 
  4970  0EC8                     	;# 
  4971  0EC9                     	;# 
  4972  0ECA                     	;# 
  4973  0ECB                     	;# 
  4974  0ECC                     	;# 
  4975  0F10                     	;# 
  4976  0F11                     	;# 
  4977  0F12                     	;# 
  4978  0F13                     	;# 
  4979  0F14                     	;# 
  4980  0F15                     	;# 
  4981  0F16                     	;# 
  4982  0F17                     	;# 
  4983  0F18                     	;# 
  4984  0F19                     	;# 
  4985  0F1A                     	;# 
  4986  0F1B                     	;# 
  4987  0F1C                     	;# 
  4988  0F1D                     	;# 
  4989  0F1E                     	;# 
  4990  0F1F                     	;# 
  4991  0F20                     	;# 
  4992  0F21                     	;# 
  4993  0F22                     	;# 
  4994  0F23                     	;# 
  4995  0F24                     	;# 
  4996  0F25                     	;# 
  4997  0F26                     	;# 
  4998  0F27                     	;# 
  4999  0F28                     	;# 
  5000  0F29                     	;# 
  5001  0F2A                     	;# 
  5002  0F2B                     	;# 
  5003  0F2C                     	;# 
  5004  0F2D                     	;# 
  5005  0F2E                     	;# 
  5006  0F2F                     	;# 
  5007  0F30                     	;# 
  5008  0F31                     	;# 
  5009  0F32                     	;# 
  5010  0F38                     	;# 
  5011  0F39                     	;# 
  5012  0F3A                     	;# 
  5013  0F3B                     	;# 
  5014  0F3C                     	;# 
  5015  0F3D                     	;# 
  5016  0F3E                     	;# 
  5017  0F3F                     	;# 
  5018  0F40                     	;# 
  5019  0F41                     	;# 
  5020  0F43                     	;# 
  5021  0F44                     	;# 
  5022  0F45                     	;# 
  5023  0F46                     	;# 
  5024  0F47                     	;# 
  5025  0F48                     	;# 
  5026  0F49                     	;# 
  5027  0F4A                     	;# 
  5028  0F4B                     	;# 
  5029  0F4C                     	;# 
  5030  0F4E                     	;# 
  5031  0F4F                     	;# 
  5032  0F50                     	;# 
  5033  0F51                     	;# 
  5034  0F52                     	;# 
  5035  0F53                     	;# 
  5036  0F54                     	;# 
  5037  0F55                     	;# 
  5038  0F56                     	;# 
  5039  0F57                     	;# 
  5040  0F59                     	;# 
  5041  0F5A                     	;# 
  5042  0F5B                     	;# 
  5043  0F5C                     	;# 
  5044  0F5D                     	;# 
  5045  0F61                     	;# 
  5046  0F62                     	;# 
  5047  0F64                     	;# 
  5048  0F65                     	;# 
  5049  0F66                     	;# 
  5050  0F67                     	;# 
  5051  0F68                     	;# 
  5052  0F69                     	;# 
  5053  0F6A                     	;# 
  5054  0F6B                     	;# 
  5055  0F6C                     	;# 
  5056  0F6D                     	;# 
  5057  0FE4                     	;# 
  5058  0FE5                     	;# 
  5059  0FE6                     	;# 
  5060  0FE7                     	;# 
  5061  0FE8                     	;# 
  5062  0FE9                     	;# 
  5063  0FEA                     	;# 
  5064  0FEB                     	;# 
  5065  0FED                     	;# 
  5066  0FEE                     	;# 
  5067  0FEF                     	;# 
  5068  0000                     	;# 
  5069  0001                     	;# 
  5070  0002                     	;# 
  5071  0003                     	;# 
  5072  0004                     	;# 
  5073  0005                     	;# 
  5074  0006                     	;# 
  5075  0007                     	;# 
  5076  0008                     	;# 
  5077  0009                     	;# 
  5078  000A                     	;# 
  5079  000B                     	;# 
  5080  000C                     	;# 
  5081  000D                     	;# 
  5082  000E                     	;# 
  5083  000F                     	;# 
  5084  0010                     	;# 
  5085  0011                     	;# 
  5086  0012                     	;# 
  5087  0013                     	;# 
  5088  0014                     	;# 
  5089  0015                     	;# 
  5090  0016                     	;# 
  5091  0017                     	;# 
  5092  0018                     	;# 
  5093  0019                     	;# 
  5094  001A                     	;# 
  5095  001C                     	;# 
  5096  001C                     	;# 
  5097  001D                     	;# 
  5098  001D                     	;# 
  5099  001E                     	;# 
  5100  001F                     	;# 
  5101  008C                     	;# 
  5102  008C                     	;# 
  5103  008D                     	;# 
  5104  008E                     	;# 
  5105  008E                     	;# 
  5106  008F                     	;# 
  5107  0090                     	;# 
  5108  0090                     	;# 
  5109  0091                     	;# 
  5110  0093                     	;# 
  5111  0094                     	;# 
  5112  0095                     	;# 
  5113  0096                     	;# 
  5114  0097                     	;# 
  5115  0098                     	;# 
  5116  0099                     	;# 
  5117  009A                     	;# 
  5118  009B                     	;# 
  5119  009C                     	;# 
  5120  009D                     	;# 
  5121  009E                     	;# 
  5122  010C                     	;# 
  5123  010D                     	;# 
  5124  010E                     	;# 
  5125  010E                     	;# 
  5126  010F                     	;# 
  5127  0110                     	;# 
  5128  0110                     	;# 
  5129  0111                     	;# 
  5130  0112                     	;# 
  5131  0112                     	;# 
  5132  0113                     	;# 
  5133  0114                     	;# 
  5134  0114                     	;# 
  5135  0115                     	;# 
  5136  0116                     	;# 
  5137  0116                     	;# 
  5138  0117                     	;# 
  5139  0119                     	;# 
  5140  0119                     	;# 
  5141  0119                     	;# 
  5142  011A                     	;# 
  5143  011A                     	;# 
  5144  011A                     	;# 
  5145  011B                     	;# 
  5146  011B                     	;# 
  5147  011B                     	;# 
  5148  011B                     	;# 
  5149  011B                     	;# 
  5150  011C                     	;# 
  5151  011C                     	;# 
  5152  011C                     	;# 
  5153  011D                     	;# 
  5154  011D                     	;# 
  5155  011D                     	;# 
  5156  011E                     	;# 
  5157  011E                     	;# 
  5158  011E                     	;# 
  5159  011F                     	;# 
  5160  011F                     	;# 
  5161  011F                     	;# 
  5162  011F                     	;# 
  5163  011F                     	;# 
  5164  018C                     	;# 
  5165  018D                     	;# 
  5166  018E                     	;# 
  5167  018F                     	;# 
  5168  0190                     	;# 
  5169  0191                     	;# 
  5170  0192                     	;# 
  5171  0196                     	;# 
  5172  0197                     	;# 
  5173  0198                     	;# 
  5174  0199                     	;# 
  5175  019A                     	;# 
  5176  019B                     	;# 
  5177  019C                     	;# 
  5178  020C                     	;# 
  5179  020C                     	;# 
  5180  020D                     	;# 
  5181  020E                     	;# 
  5182  020F                     	;# 
  5183  020F                     	;# 
  5184  0210                     	;# 
  5185  0210                     	;# 
  5186  0211                     	;# 
  5187  0211                     	;# 
  5188  0212                     	;# 
  5189  0212                     	;# 
  5190  0213                     	;# 
  5191  0214                     	;# 
  5192  0215                     	;# 
  5193  0215                     	;# 
  5194  0216                     	;# 
  5195  0216                     	;# 
  5196  0217                     	;# 
  5197  0217                     	;# 
  5198  0218                     	;# 
  5199  0218                     	;# 
  5200  0219                     	;# 
  5201  021A                     	;# 
  5202  021B                     	;# 
  5203  021B                     	;# 
  5204  021C                     	;# 
  5205  021C                     	;# 
  5206  021D                     	;# 
  5207  021D                     	;# 
  5208  021E                     	;# 
  5209  021F                     	;# 
  5210  028C                     	;# 
  5211  028C                     	;# 
  5212  028D                     	;# 
  5213  028D                     	;# 
  5214  028E                     	;# 
  5215  028F                     	;# 
  5216  0290                     	;# 
  5217  0290                     	;# 
  5218  0291                     	;# 
  5219  0292                     	;# 
  5220  0292                     	;# 
  5221  0293                     	;# 
  5222  0293                     	;# 
  5223  0294                     	;# 
  5224  0295                     	;# 
  5225  0296                     	;# 
  5226  0296                     	;# 
  5227  0297                     	;# 
  5228  0298                     	;# 
  5229  0298                     	;# 
  5230  0299                     	;# 
  5231  0299                     	;# 
  5232  029A                     	;# 
  5233  029B                     	;# 
  5234  029C                     	;# 
  5235  029C                     	;# 
  5236  029D                     	;# 
  5237  030C                     	;# 
  5238  030C                     	;# 
  5239  030D                     	;# 
  5240  030E                     	;# 
  5241  030F                     	;# 
  5242  0310                     	;# 
  5243  0310                     	;# 
  5244  0311                     	;# 
  5245  0312                     	;# 
  5246  0313                     	;# 
  5247  0314                     	;# 
  5248  0314                     	;# 
  5249  0315                     	;# 
  5250  0316                     	;# 
  5251  0317                     	;# 
  5252  0318                     	;# 
  5253  0318                     	;# 
  5254  0319                     	;# 
  5255  031A                     	;# 
  5256  031B                     	;# 
  5257  031C                     	;# 
  5258  031C                     	;# 
  5259  031D                     	;# 
  5260  031E                     	;# 
  5261  031F                     	;# 
  5262  038C                     	;# 
  5263  038C                     	;# 
  5264  038D                     	;# 
  5265  038E                     	;# 
  5266  0390                     	;# 
  5267  0390                     	;# 
  5268  0391                     	;# 
  5269  0392                     	;# 
  5270  040C                     	;# 
  5271  040D                     	;# 
  5272  040E                     	;# 
  5273  040F                     	;# 
  5274  0410                     	;# 
  5275  0411                     	;# 
  5276  0416                     	;# 
  5277  0416                     	;# 
  5278  0417                     	;# 
  5279  0418                     	;# 
  5280  0418                     	;# 
  5281  0419                     	;# 
  5282  041A                     	;# 
  5283  041A                     	;# 
  5284  041B                     	;# 
  5285  041C                     	;# 
  5286  041C                     	;# 
  5287  041D                     	;# 
  5288  041E                     	;# 
  5289  041F                     	;# 
  5290  048C                     	;# 
  5291  048C                     	;# 
  5292  048D                     	;# 
  5293  048E                     	;# 
  5294  048F                     	;# 
  5295  048F                     	;# 
  5296  0490                     	;# 
  5297  0491                     	;# 
  5298  0492                     	;# 
  5299  0492                     	;# 
  5300  0493                     	;# 
  5301  0494                     	;# 
  5302  0495                     	;# 
  5303  0495                     	;# 
  5304  0496                     	;# 
  5305  0497                     	;# 
  5306  0498                     	;# 
  5307  0499                     	;# 
  5308  049A                     	;# 
  5309  049B                     	;# 
  5310  049C                     	;# 
  5311  049D                     	;# 
  5312  050C                     	;# 
  5313  050C                     	;# 
  5314  050D                     	;# 
  5315  050E                     	;# 
  5316  050F                     	;# 
  5317  050F                     	;# 
  5318  0510                     	;# 
  5319  0511                     	;# 
  5320  0512                     	;# 
  5321  0512                     	;# 
  5322  0513                     	;# 
  5323  0514                     	;# 
  5324  0515                     	;# 
  5325  0515                     	;# 
  5326  0516                     	;# 
  5327  0517                     	;# 
  5328  0518                     	;# 
  5329  0519                     	;# 
  5330  051A                     	;# 
  5331  051B                     	;# 
  5332  051C                     	;# 
  5333  051D                     	;# 
  5334  058C                     	;# 
  5335  058C                     	;# 
  5336  058D                     	;# 
  5337  058E                     	;# 
  5338  058F                     	;# 
  5339  058F                     	;# 
  5340  0590                     	;# 
  5341  0591                     	;# 
  5342  0592                     	;# 
  5343  0593                     	;# 
  5344  060C                     	;# 
  5345  060D                     	;# 
  5346  060E                     	;# 
  5347  060F                     	;# 
  5348  0610                     	;# 
  5349  0611                     	;# 
  5350  0612                     	;# 
  5351  0613                     	;# 
  5352  0614                     	;# 
  5353  0616                     	;# 
  5354  0617                     	;# 
  5355  0618                     	;# 
  5356  0619                     	;# 
  5357  061A                     	;# 
  5358  061B                     	;# 
  5359  061C                     	;# 
  5360  061D                     	;# 
  5361  061E                     	;# 
  5362  068C                     	;# 
  5363  068D                     	;# 
  5364  068E                     	;# 
  5365  068F                     	;# 
  5366  0690                     	;# 
  5367  0691                     	;# 
  5368  0692                     	;# 
  5369  0693                     	;# 
  5370  0694                     	;# 
  5371  070C                     	;# 
  5372  070D                     	;# 
  5373  070E                     	;# 
  5374  070F                     	;# 
  5375  0710                     	;# 
  5376  0711                     	;# 
  5377  0712                     	;# 
  5378  0713                     	;# 
  5379  0714                     	;# 
  5380  0716                     	;# 
  5381  0717                     	;# 
  5382  0718                     	;# 
  5383  0719                     	;# 
  5384  071A                     	;# 
  5385  071B                     	;# 
  5386  071C                     	;# 
  5387  071D                     	;# 
  5388  071E                     	;# 
  5389  0796                     	;# 
  5390  0797                     	;# 
  5391  0798                     	;# 
  5392  0799                     	;# 
  5393  079A                     	;# 
  5394  079B                     	;# 
  5395  080C                     	;# 
  5396  080D                     	;# 
  5397  080E                     	;# 
  5398  080F                     	;# 
  5399  0810                     	;# 
  5400  0811                     	;# 
  5401  0812                     	;# 
  5402  0813                     	;# 
  5403  0814                     	;# 
  5404  081A                     	;# 
  5405  081B                     	;# 
  5406  081C                     	;# 
  5407  081D                     	;# 
  5408  081E                     	;# 
  5409  081F                     	;# 
  5410  088C                     	;# 
  5411  088D                     	;# 
  5412  088E                     	;# 
  5413  088F                     	;# 
  5414  0890                     	;# 
  5415  0891                     	;# 
  5416  0892                     	;# 
  5417  0893                     	;# 
  5418  0895                     	;# 
  5419  0896                     	;# 
  5420  0897                     	;# 
  5421  0898                     	;# 
  5422  0899                     	;# 
  5423  089A                     	;# 
  5424  089B                     	;# 
  5425  090C                     	;# 
  5426  090E                     	;# 
  5427  090F                     	;# 
  5428  091F                     	;# 
  5429  091F                     	;# 
  5430  098F                     	;# 
  5431  098F                     	;# 
  5432  0990                     	;# 
  5433  0991                     	;# 
  5434  0992                     	;# 
  5435  0993                     	;# 
  5436  0994                     	;# 
  5437  0995                     	;# 
  5438  0996                     	;# 
  5439  0997                     	;# 
  5440  0E0F                     	;# 
  5441  0E10                     	;# 
  5442  0E11                     	;# 
  5443  0E12                     	;# 
  5444  0E13                     	;# 
  5445  0E14                     	;# 
  5446  0E15                     	;# 
  5447  0E16                     	;# 
  5448  0E17                     	;# 
  5449  0E18                     	;# 
  5450  0E19                     	;# 
  5451  0E1A                     	;# 
  5452  0E1B                     	;# 
  5453  0E1C                     	;# 
  5454  0E1D                     	;# 
  5455  0E1E                     	;# 
  5456  0E1F                     	;# 
  5457  0E20                     	;# 
  5458  0E21                     	;# 
  5459  0E22                     	;# 
  5460  0E23                     	;# 
  5461  0E24                     	;# 
  5462  0E25                     	;# 
  5463  0E26                     	;# 
  5464  0E27                     	;# 
  5465  0E28                     	;# 
  5466  0E29                     	;# 
  5467  0E2A                     	;# 
  5468  0E2B                     	;# 
  5469  0E2C                     	;# 
  5470  0E2D                     	;# 
  5471  0E2E                     	;# 
  5472  0E2F                     	;# 
  5473  0E30                     	;# 
  5474  0E31                     	;# 
  5475  0E32                     	;# 
  5476  0E33                     	;# 
  5477  0E34                     	;# 
  5478  0E35                     	;# 
  5479  0E36                     	;# 
  5480  0E37                     	;# 
  5481  0E8F                     	;# 
  5482  0E90                     	;# 
  5483  0E91                     	;# 
  5484  0E92                     	;# 
  5485  0E93                     	;# 
  5486  0E94                     	;# 
  5487  0E95                     	;# 
  5488  0E96                     	;# 
  5489  0E97                     	;# 
  5490  0E9C                     	;# 
  5491  0E9D                     	;# 
  5492  0E9E                     	;# 
  5493  0EA1                     	;# 
  5494  0EA2                     	;# 
  5495  0EA3                     	;# 
  5496  0EA4                     	;# 
  5497  0EA5                     	;# 
  5498  0EA9                     	;# 
  5499  0EAA                     	;# 
  5500  0EAB                     	;# 
  5501  0EAC                     	;# 
  5502  0EB1                     	;# 
  5503  0EB2                     	;# 
  5504  0EB3                     	;# 
  5505  0EB8                     	;# 
  5506  0EB9                     	;# 
  5507  0EBA                     	;# 
  5508  0EBB                     	;# 
  5509  0EBC                     	;# 
  5510  0EBD                     	;# 
  5511  0EBE                     	;# 
  5512  0EC3                     	;# 
  5513  0EC5                     	;# 
  5514  0EC6                     	;# 
  5515  0EC7                     	;# 
  5516  0EC8                     	;# 
  5517  0EC9                     	;# 
  5518  0ECA                     	;# 
  5519  0ECB                     	;# 
  5520  0ECC                     	;# 
  5521  0F10                     	;# 
  5522  0F11                     	;# 
  5523  0F12                     	;# 
  5524  0F13                     	;# 
  5525  0F14                     	;# 
  5526  0F15                     	;# 
  5527  0F16                     	;# 
  5528  0F17                     	;# 
  5529  0F18                     	;# 
  5530  0F19                     	;# 
  5531  0F1A                     	;# 
  5532  0F1B                     	;# 
  5533  0F1C                     	;# 
  5534  0F1D                     	;# 
  5535  0F1E                     	;# 
  5536  0F1F                     	;# 
  5537  0F20                     	;# 
  5538  0F21                     	;# 
  5539  0F22                     	;# 
  5540  0F23                     	;# 
  5541  0F24                     	;# 
  5542  0F25                     	;# 
  5543  0F26                     	;# 
  5544  0F27                     	;# 
  5545  0F28                     	;# 
  5546  0F29                     	;# 
  5547  0F2A                     	;# 
  5548  0F2B                     	;# 
  5549  0F2C                     	;# 
  5550  0F2D                     	;# 
  5551  0F2E                     	;# 
  5552  0F2F                     	;# 
  5553  0F30                     	;# 
  5554  0F31                     	;# 
  5555  0F32                     	;# 
  5556  0F38                     	;# 
  5557  0F39                     	;# 
  5558  0F3A                     	;# 
  5559  0F3B                     	;# 
  5560  0F3C                     	;# 
  5561  0F3D                     	;# 
  5562  0F3E                     	;# 
  5563  0F3F                     	;# 
  5564  0F40                     	;# 
  5565  0F41                     	;# 
  5566  0F43                     	;# 
  5567  0F44                     	;# 
  5568  0F45                     	;# 
  5569  0F46                     	;# 
  5570  0F47                     	;# 
  5571  0F48                     	;# 
  5572  0F49                     	;# 
  5573  0F4A                     	;# 
  5574  0F4B                     	;# 
  5575  0F4C                     	;# 
  5576  0F4E                     	;# 
  5577  0F4F                     	;# 
  5578  0F50                     	;# 
  5579  0F51                     	;# 
  5580  0F52                     	;# 
  5581  0F53                     	;# 
  5582  0F54                     	;# 
  5583  0F55                     	;# 
  5584  0F56                     	;# 
  5585  0F57                     	;# 
  5586  0F59                     	;# 
  5587  0F5A                     	;# 
  5588  0F5B                     	;# 
  5589  0F5C                     	;# 
  5590  0F5D                     	;# 
  5591  0F61                     	;# 
  5592  0F62                     	;# 
  5593  0F64                     	;# 
  5594  0F65                     	;# 
  5595  0F66                     	;# 
  5596  0F67                     	;# 
  5597  0F68                     	;# 
  5598  0F69                     	;# 
  5599  0F6A                     	;# 
  5600  0F6B                     	;# 
  5601  0F6C                     	;# 
  5602  0F6D                     	;# 
  5603  0FE4                     	;# 
  5604  0FE5                     	;# 
  5605  0FE6                     	;# 
  5606  0FE7                     	;# 
  5607  0FE8                     	;# 
  5608  0FE9                     	;# 
  5609  0FEA                     	;# 
  5610  0FEB                     	;# 
  5611  0FED                     	;# 
  5612  0FEE                     	;# 
  5613  0FEF                     	;# 
  5614  0000                     	;# 
  5615  0001                     	;# 
  5616  0002                     	;# 
  5617  0003                     	;# 
  5618  0004                     	;# 
  5619  0005                     	;# 
  5620  0006                     	;# 
  5621  0007                     	;# 
  5622  0008                     	;# 
  5623  0009                     	;# 
  5624  000A                     	;# 
  5625  000B                     	;# 
  5626  000C                     	;# 
  5627  000D                     	;# 
  5628  000E                     	;# 
  5629  000F                     	;# 
  5630  0010                     	;# 
  5631  0011                     	;# 
  5632  0012                     	;# 
  5633  0013                     	;# 
  5634  0014                     	;# 
  5635  0015                     	;# 
  5636  0016                     	;# 
  5637  0017                     	;# 
  5638  0018                     	;# 
  5639  0019                     	;# 
  5640  001A                     	;# 
  5641  001C                     	;# 
  5642  001C                     	;# 
  5643  001D                     	;# 
  5644  001D                     	;# 
  5645  001E                     	;# 
  5646  001F                     	;# 
  5647  008C                     	;# 
  5648  008C                     	;# 
  5649  008D                     	;# 
  5650  008E                     	;# 
  5651  008E                     	;# 
  5652  008F                     	;# 
  5653  0090                     	;# 
  5654  0090                     	;# 
  5655  0091                     	;# 
  5656  0093                     	;# 
  5657  0094                     	;# 
  5658  0095                     	;# 
  5659  0096                     	;# 
  5660  0097                     	;# 
  5661  0098                     	;# 
  5662  0099                     	;# 
  5663  009A                     	;# 
  5664  009B                     	;# 
  5665  009C                     	;# 
  5666  009D                     	;# 
  5667  009E                     	;# 
  5668  010C                     	;# 
  5669  010D                     	;# 
  5670  010E                     	;# 
  5671  010E                     	;# 
  5672  010F                     	;# 
  5673  0110                     	;# 
  5674  0110                     	;# 
  5675  0111                     	;# 
  5676  0112                     	;# 
  5677  0112                     	;# 
  5678  0113                     	;# 
  5679  0114                     	;# 
  5680  0114                     	;# 
  5681  0115                     	;# 
  5682  0116                     	;# 
  5683  0116                     	;# 
  5684  0117                     	;# 
  5685  0119                     	;# 
  5686  0119                     	;# 
  5687  0119                     	;# 
  5688  011A                     	;# 
  5689  011A                     	;# 
  5690  011A                     	;# 
  5691  011B                     	;# 
  5692  011B                     	;# 
  5693  011B                     	;# 
  5694  011B                     	;# 
  5695  011B                     	;# 
  5696  011C                     	;# 
  5697  011C                     	;# 
  5698  011C                     	;# 
  5699  011D                     	;# 
  5700  011D                     	;# 
  5701  011D                     	;# 
  5702  011E                     	;# 
  5703  011E                     	;# 
  5704  011E                     	;# 
  5705  011F                     	;# 
  5706  011F                     	;# 
  5707  011F                     	;# 
  5708  011F                     	;# 
  5709  011F                     	;# 
  5710  018C                     	;# 
  5711  018D                     	;# 
  5712  018E                     	;# 
  5713  018F                     	;# 
  5714  0190                     	;# 
  5715  0191                     	;# 
  5716  0192                     	;# 
  5717  0196                     	;# 
  5718  0197                     	;# 
  5719  0198                     	;# 
  5720  0199                     	;# 
  5721  019A                     	;# 
  5722  019B                     	;# 
  5723  019C                     	;# 
  5724  020C                     	;# 
  5725  020C                     	;# 
  5726  020D                     	;# 
  5727  020E                     	;# 
  5728  020F                     	;# 
  5729  020F                     	;# 
  5730  0210                     	;# 
  5731  0210                     	;# 
  5732  0211                     	;# 
  5733  0211                     	;# 
  5734  0212                     	;# 
  5735  0212                     	;# 
  5736  0213                     	;# 
  5737  0214                     	;# 
  5738  0215                     	;# 
  5739  0215                     	;# 
  5740  0216                     	;# 
  5741  0216                     	;# 
  5742  0217                     	;# 
  5743  0217                     	;# 
  5744  0218                     	;# 
  5745  0218                     	;# 
  5746  0219                     	;# 
  5747  021A                     	;# 
  5748  021B                     	;# 
  5749  021B                     	;# 
  5750  021C                     	;# 
  5751  021C                     	;# 
  5752  021D                     	;# 
  5753  021D                     	;# 
  5754  021E                     	;# 
  5755  021F                     	;# 
  5756  028C                     	;# 
  5757  028C                     	;# 
  5758  028D                     	;# 
  5759  028D                     	;# 
  5760  028E                     	;# 
  5761  028F                     	;# 
  5762  0290                     	;# 
  5763  0290                     	;# 
  5764  0291                     	;# 
  5765  0292                     	;# 
  5766  0292                     	;# 
  5767  0293                     	;# 
  5768  0293                     	;# 
  5769  0294                     	;# 
  5770  0295                     	;# 
  5771  0296                     	;# 
  5772  0296                     	;# 
  5773  0297                     	;# 
  5774  0298                     	;# 
  5775  0298                     	;# 
  5776  0299                     	;# 
  5777  0299                     	;# 
  5778  029A                     	;# 
  5779  029B                     	;# 
  5780  029C                     	;# 
  5781  029C                     	;# 
  5782  029D                     	;# 
  5783  030C                     	;# 
  5784  030C                     	;# 
  5785  030D                     	;# 
  5786  030E                     	;# 
  5787  030F                     	;# 
  5788  0310                     	;# 
  5789  0310                     	;# 
  5790  0311                     	;# 
  5791  0312                     	;# 
  5792  0313                     	;# 
  5793  0314                     	;# 
  5794  0314                     	;# 
  5795  0315                     	;# 
  5796  0316                     	;# 
  5797  0317                     	;# 
  5798  0318                     	;# 
  5799  0318                     	;# 
  5800  0319                     	;# 
  5801  031A                     	;# 
  5802  031B                     	;# 
  5803  031C                     	;# 
  5804  031C                     	;# 
  5805  031D                     	;# 
  5806  031E                     	;# 
  5807  031F                     	;# 
  5808  038C                     	;# 
  5809  038C                     	;# 
  5810  038D                     	;# 
  5811  038E                     	;# 
  5812  0390                     	;# 
  5813  0390                     	;# 
  5814  0391                     	;# 
  5815  0392                     	;# 
  5816  040C                     	;# 
  5817  040D                     	;# 
  5818  040E                     	;# 
  5819  040F                     	;# 
  5820  0410                     	;# 
  5821  0411                     	;# 
  5822  0416                     	;# 
  5823  0416                     	;# 
  5824  0417                     	;# 
  5825  0418                     	;# 
  5826  0418                     	;# 
  5827  0419                     	;# 
  5828  041A                     	;# 
  5829  041A                     	;# 
  5830  041B                     	;# 
  5831  041C                     	;# 
  5832  041C                     	;# 
  5833  041D                     	;# 
  5834  041E                     	;# 
  5835  041F                     	;# 
  5836  048C                     	;# 
  5837  048C                     	;# 
  5838  048D                     	;# 
  5839  048E                     	;# 
  5840  048F                     	;# 
  5841  048F                     	;# 
  5842  0490                     	;# 
  5843  0491                     	;# 
  5844  0492                     	;# 
  5845  0492                     	;# 
  5846  0493                     	;# 
  5847  0494                     	;# 
  5848  0495                     	;# 
  5849  0495                     	;# 
  5850  0496                     	;# 
  5851  0497                     	;# 
  5852  0498                     	;# 
  5853  0499                     	;# 
  5854  049A                     	;# 
  5855  049B                     	;# 
  5856  049C                     	;# 
  5857  049D                     	;# 
  5858  050C                     	;# 
  5859  050C                     	;# 
  5860  050D                     	;# 
  5861  050E                     	;# 
  5862  050F                     	;# 
  5863  050F                     	;# 
  5864  0510                     	;# 
  5865  0511                     	;# 
  5866  0512                     	;# 
  5867  0512                     	;# 
  5868  0513                     	;# 
  5869  0514                     	;# 
  5870  0515                     	;# 
  5871  0515                     	;# 
  5872  0516                     	;# 
  5873  0517                     	;# 
  5874  0518                     	;# 
  5875  0519                     	;# 
  5876  051A                     	;# 
  5877  051B                     	;# 
  5878  051C                     	;# 
  5879  051D                     	;# 
  5880  058C                     	;# 
  5881  058C                     	;# 
  5882  058D                     	;# 
  5883  058E                     	;# 
  5884  058F                     	;# 
  5885  058F                     	;# 
  5886  0590                     	;# 
  5887  0591                     	;# 
  5888  0592                     	;# 
  5889  0593                     	;# 
  5890  060C                     	;# 
  5891  060D                     	;# 
  5892  060E                     	;# 
  5893  060F                     	;# 
  5894  0610                     	;# 
  5895  0611                     	;# 
  5896  0612                     	;# 
  5897  0613                     	;# 
  5898  0614                     	;# 
  5899  0616                     	;# 
  5900  0617                     	;# 
  5901  0618                     	;# 
  5902  0619                     	;# 
  5903  061A                     	;# 
  5904  061B                     	;# 
  5905  061C                     	;# 
  5906  061D                     	;# 
  5907  061E                     	;# 
  5908  068C                     	;# 
  5909  068D                     	;# 
  5910  068E                     	;# 
  5911  068F                     	;# 
  5912  0690                     	;# 
  5913  0691                     	;# 
  5914  0692                     	;# 
  5915  0693                     	;# 
  5916  0694                     	;# 
  5917  070C                     	;# 
  5918  070D                     	;# 
  5919  070E                     	;# 
  5920  070F                     	;# 
  5921  0710                     	;# 
  5922  0711                     	;# 
  5923  0712                     	;# 
  5924  0713                     	;# 
  5925  0714                     	;# 
  5926  0716                     	;# 
  5927  0717                     	;# 
  5928  0718                     	;# 
  5929  0719                     	;# 
  5930  071A                     	;# 
  5931  071B                     	;# 
  5932  071C                     	;# 
  5933  071D                     	;# 
  5934  071E                     	;# 
  5935  0796                     	;# 
  5936  0797                     	;# 
  5937  0798                     	;# 
  5938  0799                     	;# 
  5939  079A                     	;# 
  5940  079B                     	;# 
  5941  080C                     	;# 
  5942  080D                     	;# 
  5943  080E                     	;# 
  5944  080F                     	;# 
  5945  0810                     	;# 
  5946  0811                     	;# 
  5947  0812                     	;# 
  5948  0813                     	;# 
  5949  0814                     	;# 
  5950  081A                     	;# 
  5951  081B                     	;# 
  5952  081C                     	;# 
  5953  081D                     	;# 
  5954  081E                     	;# 
  5955  081F                     	;# 
  5956  088C                     	;# 
  5957  088D                     	;# 
  5958  088E                     	;# 
  5959  088F                     	;# 
  5960  0890                     	;# 
  5961  0891                     	;# 
  5962  0892                     	;# 
  5963  0893                     	;# 
  5964  0895                     	;# 
  5965  0896                     	;# 
  5966  0897                     	;# 
  5967  0898                     	;# 
  5968  0899                     	;# 
  5969  089A                     	;# 
  5970  089B                     	;# 
  5971  090C                     	;# 
  5972  090E                     	;# 
  5973  090F                     	;# 
  5974  091F                     	;# 
  5975  091F                     	;# 
  5976  098F                     	;# 
  5977  098F                     	;# 
  5978  0990                     	;# 
  5979  0991                     	;# 
  5980  0992                     	;# 
  5981  0993                     	;# 
  5982  0994                     	;# 
  5983  0995                     	;# 
  5984  0996                     	;# 
  5985  0997                     	;# 
  5986  0E0F                     	;# 
  5987  0E10                     	;# 
  5988  0E11                     	;# 
  5989  0E12                     	;# 
  5990  0E13                     	;# 
  5991  0E14                     	;# 
  5992  0E15                     	;# 
  5993  0E16                     	;# 
  5994  0E17                     	;# 
  5995  0E18                     	;# 
  5996  0E19                     	;# 
  5997  0E1A                     	;# 
  5998  0E1B                     	;# 
  5999  0E1C                     	;# 
  6000  0E1D                     	;# 
  6001  0E1E                     	;# 
  6002  0E1F                     	;# 
  6003  0E20                     	;# 
  6004  0E21                     	;# 
  6005  0E22                     	;# 
  6006  0E23                     	;# 
  6007  0E24                     	;# 
  6008  0E25                     	;# 
  6009  0E26                     	;# 
  6010  0E27                     	;# 
  6011  0E28                     	;# 
  6012  0E29                     	;# 
  6013  0E2A                     	;# 
  6014  0E2B                     	;# 
  6015  0E2C                     	;# 
  6016  0E2D                     	;# 
  6017  0E2E                     	;# 
  6018  0E2F                     	;# 
  6019  0E30                     	;# 
  6020  0E31                     	;# 
  6021  0E32                     	;# 
  6022  0E33                     	;# 
  6023  0E34                     	;# 
  6024  0E35                     	;# 
  6025  0E36                     	;# 
  6026  0E37                     	;# 
  6027  0E8F                     	;# 
  6028  0E90                     	;# 
  6029  0E91                     	;# 
  6030  0E92                     	;# 
  6031  0E93                     	;# 
  6032  0E94                     	;# 
  6033  0E95                     	;# 
  6034  0E96                     	;# 
  6035  0E97                     	;# 
  6036  0E9C                     	;# 
  6037  0E9D                     	;# 
  6038  0E9E                     	;# 
  6039  0EA1                     	;# 
  6040  0EA2                     	;# 
  6041  0EA3                     	;# 
  6042  0EA4                     	;# 
  6043  0EA5                     	;# 
  6044  0EA9                     	;# 
  6045  0EAA                     	;# 
  6046  0EAB                     	;# 
  6047  0EAC                     	;# 
  6048  0EB1                     	;# 
  6049  0EB2                     	;# 
  6050  0EB3                     	;# 
  6051  0EB8                     	;# 
  6052  0EB9                     	;# 
  6053  0EBA                     	;# 
  6054  0EBB                     	;# 
  6055  0EBC                     	;# 
  6056  0EBD                     	;# 
  6057  0EBE                     	;# 
  6058  0EC3                     	;# 
  6059  0EC5                     	;# 
  6060  0EC6                     	;# 
  6061  0EC7                     	;# 
  6062  0EC8                     	;# 
  6063  0EC9                     	;# 
  6064  0ECA                     	;# 
  6065  0ECB                     	;# 
  6066  0ECC                     	;# 
  6067  0F10                     	;# 
  6068  0F11                     	;# 
  6069  0F12                     	;# 
  6070  0F13                     	;# 
  6071  0F14                     	;# 
  6072  0F15                     	;# 
  6073  0F16                     	;# 
  6074  0F17                     	;# 
  6075  0F18                     	;# 
  6076  0F19                     	;# 
  6077  0F1A                     	;# 
  6078  0F1B                     	;# 
  6079  0F1C                     	;# 
  6080  0F1D                     	;# 
  6081  0F1E                     	;# 
  6082  0F1F                     	;# 
  6083  0F20                     	;# 
  6084  0F21                     	;# 
  6085  0F22                     	;# 
  6086  0F23                     	;# 
  6087  0F24                     	;# 
  6088  0F25                     	;# 
  6089  0F26                     	;# 
  6090  0F27                     	;# 
  6091  0F28                     	;# 
  6092  0F29                     	;# 
  6093  0F2A                     	;# 
  6094  0F2B                     	;# 
  6095  0F2C                     	;# 
  6096  0F2D                     	;# 
  6097  0F2E                     	;# 
  6098  0F2F                     	;# 
  6099  0F30                     	;# 
  6100  0F31                     	;# 
  6101  0F32                     	;# 
  6102  0F38                     	;# 
  6103  0F39                     	;# 
  6104  0F3A                     	;# 
  6105  0F3B                     	;# 
  6106  0F3C                     	;# 
  6107  0F3D                     	;# 
  6108  0F3E                     	;# 
  6109  0F3F                     	;# 
  6110  0F40                     	;# 
  6111  0F41                     	;# 
  6112  0F43                     	;# 
  6113  0F44                     	;# 
  6114  0F45                     	;# 
  6115  0F46                     	;# 
  6116  0F47                     	;# 
  6117  0F48                     	;# 
  6118  0F49                     	;# 
  6119  0F4A                     	;# 
  6120  0F4B                     	;# 
  6121  0F4C                     	;# 
  6122  0F4E                     	;# 
  6123  0F4F                     	;# 
  6124  0F50                     	;# 
  6125  0F51                     	;# 
  6126  0F52                     	;# 
  6127  0F53                     	;# 
  6128  0F54                     	;# 
  6129  0F55                     	;# 
  6130  0F56                     	;# 
  6131  0F57                     	;# 
  6132  0F59                     	;# 
  6133  0F5A                     	;# 
  6134  0F5B                     	;# 
  6135  0F5C                     	;# 
  6136  0F5D                     	;# 
  6137  0F61                     	;# 
  6138  0F62                     	;# 
  6139  0F64                     	;# 
  6140  0F65                     	;# 
  6141  0F66                     	;# 
  6142  0F67                     	;# 
  6143  0F68                     	;# 
  6144  0F69                     	;# 
  6145  0F6A                     	;# 
  6146  0F6B                     	;# 
  6147  0F6C                     	;# 
  6148  0F6D                     	;# 
  6149  0FE4                     	;# 
  6150  0FE5                     	;# 
  6151  0FE6                     	;# 
  6152  0FE7                     	;# 
  6153  0FE8                     	;# 
  6154  0FE9                     	;# 
  6155  0FEA                     	;# 
  6156  0FEB                     	;# 
  6157  0FED                     	;# 
  6158  0FEE                     	;# 
  6159  0FEF                     	;# 
  6160  0000                     	;# 
  6161  0001                     	;# 
  6162  0002                     	;# 
  6163  0003                     	;# 
  6164  0004                     	;# 
  6165  0005                     	;# 
  6166  0006                     	;# 
  6167  0007                     	;# 
  6168  0008                     	;# 
  6169  0009                     	;# 
  6170  000A                     	;# 
  6171  000B                     	;# 
  6172  000C                     	;# 
  6173  000D                     	;# 
  6174  000E                     	;# 
  6175  000F                     	;# 
  6176  0010                     	;# 
  6177  0011                     	;# 
  6178  0012                     	;# 
  6179  0013                     	;# 
  6180  0014                     	;# 
  6181  0015                     	;# 
  6182  0016                     	;# 
  6183  0017                     	;# 
  6184  0018                     	;# 
  6185  0019                     	;# 
  6186  001A                     	;# 
  6187  001C                     	;# 
  6188  001C                     	;# 
  6189  001D                     	;# 
  6190  001D                     	;# 
  6191  001E                     	;# 
  6192  001F                     	;# 
  6193  008C                     	;# 
  6194  008C                     	;# 
  6195  008D                     	;# 
  6196  008E                     	;# 
  6197  008E                     	;# 
  6198  008F                     	;# 
  6199  0090                     	;# 
  6200  0090                     	;# 
  6201  0091                     	;# 
  6202  0093                     	;# 
  6203  0094                     	;# 
  6204  0095                     	;# 
  6205  0096                     	;# 
  6206  0097                     	;# 
  6207  0098                     	;# 
  6208  0099                     	;# 
  6209  009A                     	;# 
  6210  009B                     	;# 
  6211  009C                     	;# 
  6212  009D                     	;# 
  6213  009E                     	;# 
  6214  010C                     	;# 
  6215  010D                     	;# 
  6216  010E                     	;# 
  6217  010E                     	;# 
  6218  010F                     	;# 
  6219  0110                     	;# 
  6220  0110                     	;# 
  6221  0111                     	;# 
  6222  0112                     	;# 
  6223  0112                     	;# 
  6224  0113                     	;# 
  6225  0114                     	;# 
  6226  0114                     	;# 
  6227  0115                     	;# 
  6228  0116                     	;# 
  6229  0116                     	;# 
  6230  0117                     	;# 
  6231  0119                     	;# 
  6232  0119                     	;# 
  6233  0119                     	;# 
  6234  011A                     	;# 
  6235  011A                     	;# 
  6236  011A                     	;# 
  6237  011B                     	;# 
  6238  011B                     	;# 
  6239  011B                     	;# 
  6240  011B                     	;# 
  6241  011B                     	;# 
  6242  011C                     	;# 
  6243  011C                     	;# 
  6244  011C                     	;# 
  6245  011D                     	;# 
  6246  011D                     	;# 
  6247  011D                     	;# 
  6248  011E                     	;# 
  6249  011E                     	;# 
  6250  011E                     	;# 
  6251  011F                     	;# 
  6252  011F                     	;# 
  6253  011F                     	;# 
  6254  011F                     	;# 
  6255  011F                     	;# 
  6256  018C                     	;# 
  6257  018D                     	;# 
  6258  018E                     	;# 
  6259  018F                     	;# 
  6260  0190                     	;# 
  6261  0191                     	;# 
  6262  0192                     	;# 
  6263  0196                     	;# 
  6264  0197                     	;# 
  6265  0198                     	;# 
  6266  0199                     	;# 
  6267  019A                     	;# 
  6268  019B                     	;# 
  6269  019C                     	;# 
  6270  020C                     	;# 
  6271  020C                     	;# 
  6272  020D                     	;# 
  6273  020E                     	;# 
  6274  020F                     	;# 
  6275  020F                     	;# 
  6276  0210                     	;# 
  6277  0210                     	;# 
  6278  0211                     	;# 
  6279  0211                     	;# 
  6280  0212                     	;# 
  6281  0212                     	;# 
  6282  0213                     	;# 
  6283  0214                     	;# 
  6284  0215                     	;# 
  6285  0215                     	;# 
  6286  0216                     	;# 
  6287  0216                     	;# 
  6288  0217                     	;# 
  6289  0217                     	;# 
  6290  0218                     	;# 
  6291  0218                     	;# 
  6292  0219                     	;# 
  6293  021A                     	;# 
  6294  021B                     	;# 
  6295  021B                     	;# 
  6296  021C                     	;# 
  6297  021C                     	;# 
  6298  021D                     	;# 
  6299  021D                     	;# 
  6300  021E                     	;# 
  6301  021F                     	;# 
  6302  028C                     	;# 
  6303  028C                     	;# 
  6304  028D                     	;# 
  6305  028D                     	;# 
  6306  028E                     	;# 
  6307  028F                     	;# 
  6308  0290                     	;# 
  6309  0290                     	;# 
  6310  0291                     	;# 
  6311  0292                     	;# 
  6312  0292                     	;# 
  6313  0293                     	;# 
  6314  0293                     	;# 
  6315  0294                     	;# 
  6316  0295                     	;# 
  6317  0296                     	;# 
  6318  0296                     	;# 
  6319  0297                     	;# 
  6320  0298                     	;# 
  6321  0298                     	;# 
  6322  0299                     	;# 
  6323  0299                     	;# 
  6324  029A                     	;# 
  6325  029B                     	;# 
  6326  029C                     	;# 
  6327  029C                     	;# 
  6328  029D                     	;# 
  6329  030C                     	;# 
  6330  030C                     	;# 
  6331  030D                     	;# 
  6332  030E                     	;# 
  6333  030F                     	;# 
  6334  0310                     	;# 
  6335  0310                     	;# 
  6336  0311                     	;# 
  6337  0312                     	;# 
  6338  0313                     	;# 
  6339  0314                     	;# 
  6340  0314                     	;# 
  6341  0315                     	;# 
  6342  0316                     	;# 
  6343  0317                     	;# 
  6344  0318                     	;# 
  6345  0318                     	;# 
  6346  0319                     	;# 
  6347  031A                     	;# 
  6348  031B                     	;# 
  6349  031C                     	;# 
  6350  031C                     	;# 
  6351  031D                     	;# 
  6352  031E                     	;# 
  6353  031F                     	;# 
  6354  038C                     	;# 
  6355  038C                     	;# 
  6356  038D                     	;# 
  6357  038E                     	;# 
  6358  0390                     	;# 
  6359  0390                     	;# 
  6360  0391                     	;# 
  6361  0392                     	;# 
  6362  040C                     	;# 
  6363  040D                     	;# 
  6364  040E                     	;# 
  6365  040F                     	;# 
  6366  0410                     	;# 
  6367  0411                     	;# 
  6368  0416                     	;# 
  6369  0416                     	;# 
  6370  0417                     	;# 
  6371  0418                     	;# 
  6372  0418                     	;# 
  6373  0419                     	;# 
  6374  041A                     	;# 
  6375  041A                     	;# 
  6376  041B                     	;# 
  6377  041C                     	;# 
  6378  041C                     	;# 
  6379  041D                     	;# 
  6380  041E                     	;# 
  6381  041F                     	;# 
  6382  048C                     	;# 
  6383  048C                     	;# 
  6384  048D                     	;# 
  6385  048E                     	;# 
  6386  048F                     	;# 
  6387  048F                     	;# 
  6388  0490                     	;# 
  6389  0491                     	;# 
  6390  0492                     	;# 
  6391  0492                     	;# 
  6392  0493                     	;# 
  6393  0494                     	;# 
  6394  0495                     	;# 
  6395  0495                     	;# 
  6396  0496                     	;# 
  6397  0497                     	;# 
  6398  0498                     	;# 
  6399  0499                     	;# 
  6400  049A                     	;# 
  6401  049B                     	;# 
  6402  049C                     	;# 
  6403  049D                     	;# 
  6404  050C                     	;# 
  6405  050C                     	;# 
  6406  050D                     	;# 
  6407  050E                     	;# 
  6408  050F                     	;# 
  6409  050F                     	;# 
  6410  0510                     	;# 
  6411  0511                     	;# 
  6412  0512                     	;# 
  6413  0512                     	;# 
  6414  0513                     	;# 
  6415  0514                     	;# 
  6416  0515                     	;# 
  6417  0515                     	;# 
  6418  0516                     	;# 
  6419  0517                     	;# 
  6420  0518                     	;# 
  6421  0519                     	;# 
  6422  051A                     	;# 
  6423  051B                     	;# 
  6424  051C                     	;# 
  6425  051D                     	;# 
  6426  058C                     	;# 
  6427  058C                     	;# 
  6428  058D                     	;# 
  6429  058E                     	;# 
  6430  058F                     	;# 
  6431  058F                     	;# 
  6432  0590                     	;# 
  6433  0591                     	;# 
  6434  0592                     	;# 
  6435  0593                     	;# 
  6436  060C                     	;# 
  6437  060D                     	;# 
  6438  060E                     	;# 
  6439  060F                     	;# 
  6440  0610                     	;# 
  6441  0611                     	;# 
  6442  0612                     	;# 
  6443  0613                     	;# 
  6444  0614                     	;# 
  6445  0616                     	;# 
  6446  0617                     	;# 
  6447  0618                     	;# 
  6448  0619                     	;# 
  6449  061A                     	;# 
  6450  061B                     	;# 
  6451  061C                     	;# 
  6452  061D                     	;# 
  6453  061E                     	;# 
  6454  068C                     	;# 
  6455  068D                     	;# 
  6456  068E                     	;# 
  6457  068F                     	;# 
  6458  0690                     	;# 
  6459  0691                     	;# 
  6460  0692                     	;# 
  6461  0693                     	;# 
  6462  0694                     	;# 
  6463  070C                     	;# 
  6464  070D                     	;# 
  6465  070E                     	;# 
  6466  070F                     	;# 
  6467  0710                     	;# 
  6468  0711                     	;# 
  6469  0712                     	;# 
  6470  0713                     	;# 
  6471  0714                     	;# 
  6472  0716                     	;# 
  6473  0717                     	;# 
  6474  0718                     	;# 
  6475  0719                     	;# 
  6476  071A                     	;# 
  6477  071B                     	;# 
  6478  071C                     	;# 
  6479  071D                     	;# 
  6480  071E                     	;# 
  6481  0796                     	;# 
  6482  0797                     	;# 
  6483  0798                     	;# 
  6484  0799                     	;# 
  6485  079A                     	;# 
  6486  079B                     	;# 
  6487  080C                     	;# 
  6488  080D                     	;# 
  6489  080E                     	;# 
  6490  080F                     	;# 
  6491  0810                     	;# 
  6492  0811                     	;# 
  6493  0812                     	;# 
  6494  0813                     	;# 
  6495  0814                     	;# 
  6496  081A                     	;# 
  6497  081B                     	;# 
  6498  081C                     	;# 
  6499  081D                     	;# 
  6500  081E                     	;# 
  6501  081F                     	;# 
  6502  088C                     	;# 
  6503  088D                     	;# 
  6504  088E                     	;# 
  6505  088F                     	;# 
  6506  0890                     	;# 
  6507  0891                     	;# 
  6508  0892                     	;# 
  6509  0893                     	;# 
  6510  0895                     	;# 
  6511  0896                     	;# 
  6512  0897                     	;# 
  6513  0898                     	;# 
  6514  0899                     	;# 
  6515  089A                     	;# 
  6516  089B                     	;# 
  6517  090C                     	;# 
  6518  090E                     	;# 
  6519  090F                     	;# 
  6520  091F                     	;# 
  6521  091F                     	;# 
  6522  098F                     	;# 
  6523  098F                     	;# 
  6524  0990                     	;# 
  6525  0991                     	;# 
  6526  0992                     	;# 
  6527  0993                     	;# 
  6528  0994                     	;# 
  6529  0995                     	;# 
  6530  0996                     	;# 
  6531  0997                     	;# 
  6532  0E0F                     	;# 
  6533  0E10                     	;# 
  6534  0E11                     	;# 
  6535  0E12                     	;# 
  6536  0E13                     	;# 
  6537  0E14                     	;# 
  6538  0E15                     	;# 
  6539  0E16                     	;# 
  6540  0E17                     	;# 
  6541  0E18                     	;# 
  6542  0E19                     	;# 
  6543  0E1A                     	;# 
  6544  0E1B                     	;# 
  6545  0E1C                     	;# 
  6546  0E1D                     	;# 
  6547  0E1E                     	;# 
  6548  0E1F                     	;# 
  6549  0E20                     	;# 
  6550  0E21                     	;# 
  6551  0E22                     	;# 
  6552  0E23                     	;# 
  6553  0E24                     	;# 
  6554  0E25                     	;# 
  6555  0E26                     	;# 
  6556  0E27                     	;# 
  6557  0E28                     	;# 
  6558  0E29                     	;# 
  6559  0E2A                     	;# 
  6560  0E2B                     	;# 
  6561  0E2C                     	;# 
  6562  0E2D                     	;# 
  6563  0E2E                     	;# 
  6564  0E2F                     	;# 
  6565  0E30                     	;# 
  6566  0E31                     	;# 
  6567  0E32                     	;# 
  6568  0E33                     	;# 
  6569  0E34                     	;# 
  6570  0E35                     	;# 
  6571  0E36                     	;# 
  6572  0E37                     	;# 
  6573  0E8F                     	;# 
  6574  0E90                     	;# 
  6575  0E91                     	;# 
  6576  0E92                     	;# 
  6577  0E93                     	;# 
  6578  0E94                     	;# 
  6579  0E95                     	;# 
  6580  0E96                     	;# 
  6581  0E97                     	;# 
  6582  0E9C                     	;# 
  6583  0E9D                     	;# 
  6584  0E9E                     	;# 
  6585  0EA1                     	;# 
  6586  0EA2                     	;# 
  6587  0EA3                     	;# 
  6588  0EA4                     	;# 
  6589  0EA5                     	;# 
  6590  0EA9                     	;# 
  6591  0EAA                     	;# 
  6592  0EAB                     	;# 
  6593  0EAC                     	;# 
  6594  0EB1                     	;# 
  6595  0EB2                     	;# 
  6596  0EB3                     	;# 
  6597  0EB8                     	;# 
  6598  0EB9                     	;# 
  6599  0EBA                     	;# 
  6600  0EBB                     	;# 
  6601  0EBC                     	;# 
  6602  0EBD                     	;# 
  6603  0EBE                     	;# 
  6604  0EC3                     	;# 
  6605  0EC5                     	;# 
  6606  0EC6                     	;# 
  6607  0EC7                     	;# 
  6608  0EC8                     	;# 
  6609  0EC9                     	;# 
  6610  0ECA                     	;# 
  6611  0ECB                     	;# 
  6612  0ECC                     	;# 
  6613  0F10                     	;# 
  6614  0F11                     	;# 
  6615  0F12                     	;# 
  6616  0F13                     	;# 
  6617  0F14                     	;# 
  6618  0F15                     	;# 
  6619  0F16                     	;# 
  6620  0F17                     	;# 
  6621  0F18                     	;# 
  6622  0F19                     	;# 
  6623  0F1A                     	;# 
  6624  0F1B                     	;# 
  6625  0F1C                     	;# 
  6626  0F1D                     	;# 
  6627  0F1E                     	;# 
  6628  0F1F                     	;# 
  6629  0F20                     	;# 
  6630  0F21                     	;# 
  6631  0F22                     	;# 
  6632  0F23                     	;# 
  6633  0F24                     	;# 
  6634  0F25                     	;# 
  6635  0F26                     	;# 
  6636  0F27                     	;# 
  6637  0F28                     	;# 
  6638  0F29                     	;# 
  6639  0F2A                     	;# 
  6640  0F2B                     	;# 
  6641  0F2C                     	;# 
  6642  0F2D                     	;# 
  6643  0F2E                     	;# 
  6644  0F2F                     	;# 
  6645  0F30                     	;# 
  6646  0F31                     	;# 
  6647  0F32                     	;# 
  6648  0F38                     	;# 
  6649  0F39                     	;# 
  6650  0F3A                     	;# 
  6651  0F3B                     	;# 
  6652  0F3C                     	;# 
  6653  0F3D                     	;# 
  6654  0F3E                     	;# 
  6655  0F3F                     	;# 
  6656  0F40                     	;# 
  6657  0F41                     	;# 
  6658  0F43                     	;# 
  6659  0F44                     	;# 
  6660  0F45                     	;# 
  6661  0F46                     	;# 
  6662  0F47                     	;# 
  6663  0F48                     	;# 
  6664  0F49                     	;# 
  6665  0F4A                     	;# 
  6666  0F4B                     	;# 
  6667  0F4C                     	;# 
  6668  0F4E                     	;# 
  6669  0F4F                     	;# 
  6670  0F50                     	;# 
  6671  0F51                     	;# 
  6672  0F52                     	;# 
  6673  0F53                     	;# 
  6674  0F54                     	;# 
  6675  0F55                     	;# 
  6676  0F56                     	;# 
  6677  0F57                     	;# 
  6678  0F59                     	;# 
  6679  0F5A                     	;# 
  6680  0F5B                     	;# 
  6681  0F5C                     	;# 
  6682  0F5D                     	;# 
  6683  0F61                     	;# 
  6684  0F62                     	;# 
  6685  0F64                     	;# 
  6686  0F65                     	;# 
  6687  0F66                     	;# 
  6688  0F67                     	;# 
  6689  0F68                     	;# 
  6690  0F69                     	;# 
  6691  0F6A                     	;# 
  6692  0F6B                     	;# 
  6693  0F6C                     	;# 
  6694  0F6D                     	;# 
  6695  0FE4                     	;# 
  6696  0FE5                     	;# 
  6697  0FE6                     	;# 
  6698  0FE7                     	;# 
  6699  0FE8                     	;# 
  6700  0FE9                     	;# 
  6701  0FEA                     	;# 
  6702  0FEB                     	;# 
  6703  0FED                     	;# 
  6704  0FEE                     	;# 
  6705  0FEF                     	;# 
  6706  0000                     	;# 
  6707  0001                     	;# 
  6708  0002                     	;# 
  6709  0003                     	;# 
  6710  0004                     	;# 
  6711  0005                     	;# 
  6712  0006                     	;# 
  6713  0007                     	;# 
  6714  0008                     	;# 
  6715  0009                     	;# 
  6716  000A                     	;# 
  6717  000B                     	;# 
  6718  000C                     	;# 
  6719  000D                     	;# 
  6720  000E                     	;# 
  6721  000F                     	;# 
  6722  0010                     	;# 
  6723  0011                     	;# 
  6724  0012                     	;# 
  6725  0013                     	;# 
  6726  0014                     	;# 
  6727  0015                     	;# 
  6728  0016                     	;# 
  6729  0017                     	;# 
  6730  0018                     	;# 
  6731  0019                     	;# 
  6732  001A                     	;# 
  6733  001C                     	;# 
  6734  001C                     	;# 
  6735  001D                     	;# 
  6736  001D                     	;# 
  6737  001E                     	;# 
  6738  001F                     	;# 
  6739  008C                     	;# 
  6740  008C                     	;# 
  6741  008D                     	;# 
  6742  008E                     	;# 
  6743  008E                     	;# 
  6744  008F                     	;# 
  6745  0090                     	;# 
  6746  0090                     	;# 
  6747  0091                     	;# 
  6748  0093                     	;# 
  6749  0094                     	;# 
  6750  0095                     	;# 
  6751  0096                     	;# 
  6752  0097                     	;# 
  6753  0098                     	;# 
  6754  0099                     	;# 
  6755  009A                     	;# 
  6756  009B                     	;# 
  6757  009C                     	;# 
  6758  009D                     	;# 
  6759  009E                     	;# 
  6760  010C                     	;# 
  6761  010D                     	;# 
  6762  010E                     	;# 
  6763  010E                     	;# 
  6764  010F                     	;# 
  6765  0110                     	;# 
  6766  0110                     	;# 
  6767  0111                     	;# 
  6768  0112                     	;# 
  6769  0112                     	;# 
  6770  0113                     	;# 
  6771  0114                     	;# 
  6772  0114                     	;# 
  6773  0115                     	;# 
  6774  0116                     	;# 
  6775  0116                     	;# 
  6776  0117                     	;# 
  6777  0119                     	;# 
  6778  0119                     	;# 
  6779  0119                     	;# 
  6780  011A                     	;# 
  6781  011A                     	;# 
  6782  011A                     	;# 
  6783  011B                     	;# 
  6784  011B                     	;# 
  6785  011B                     	;# 
  6786  011B                     	;# 
  6787  011B                     	;# 
  6788  011C                     	;# 
  6789  011C                     	;# 
  6790  011C                     	;# 
  6791  011D                     	;# 
  6792  011D                     	;# 
  6793  011D                     	;# 
  6794  011E                     	;# 
  6795  011E                     	;# 
  6796  011E                     	;# 
  6797  011F                     	;# 
  6798  011F                     	;# 
  6799  011F                     	;# 
  6800  011F                     	;# 
  6801  011F                     	;# 
  6802  018C                     	;# 
  6803  018D                     	;# 
  6804  018E                     	;# 
  6805  018F                     	;# 
  6806  0190                     	;# 
  6807  0191                     	;# 
  6808  0192                     	;# 
  6809  0196                     	;# 
  6810  0197                     	;# 
  6811  0198                     	;# 
  6812  0199                     	;# 
  6813  019A                     	;# 
  6814  019B                     	;# 
  6815  019C                     	;# 
  6816  020C                     	;# 
  6817  020C                     	;# 
  6818  020D                     	;# 
  6819  020E                     	;# 
  6820  020F                     	;# 
  6821  020F                     	;# 
  6822  0210                     	;# 
  6823  0210                     	;# 
  6824  0211                     	;# 
  6825  0211                     	;# 
  6826  0212                     	;# 
  6827  0212                     	;# 
  6828  0213                     	;# 
  6829  0214                     	;# 
  6830  0215                     	;# 
  6831  0215                     	;# 
  6832  0216                     	;# 
  6833  0216                     	;# 
  6834  0217                     	;# 
  6835  0217                     	;# 
  6836  0218                     	;# 
  6837  0218                     	;# 
  6838  0219                     	;# 
  6839  021A                     	;# 
  6840  021B                     	;# 
  6841  021B                     	;# 
  6842  021C                     	;# 
  6843  021C                     	;# 
  6844  021D                     	;# 
  6845  021D                     	;# 
  6846  021E                     	;# 
  6847  021F                     	;# 
  6848  028C                     	;# 
  6849  028C                     	;# 
  6850  028D                     	;# 
  6851  028D                     	;# 
  6852  028E                     	;# 
  6853  028F                     	;# 
  6854  0290                     	;# 
  6855  0290                     	;# 
  6856  0291                     	;# 
  6857  0292                     	;# 
  6858  0292                     	;# 
  6859  0293                     	;# 
  6860  0293                     	;# 
  6861  0294                     	;# 
  6862  0295                     	;# 
  6863  0296                     	;# 
  6864  0296                     	;# 
  6865  0297                     	;# 
  6866  0298                     	;# 
  6867  0298                     	;# 
  6868  0299                     	;# 
  6869  0299                     	;# 
  6870  029A                     	;# 
  6871  029B                     	;# 
  6872  029C                     	;# 
  6873  029C                     	;# 
  6874  029D                     	;# 
  6875  030C                     	;# 
  6876  030C                     	;# 
  6877  030D                     	;# 
  6878  030E                     	;# 
  6879  030F                     	;# 
  6880  0310                     	;# 
  6881  0310                     	;# 
  6882  0311                     	;# 
  6883  0312                     	;# 
  6884  0313                     	;# 
  6885  0314                     	;# 
  6886  0314                     	;# 
  6887  0315                     	;# 
  6888  0316                     	;# 
  6889  0317                     	;# 
  6890  0318                     	;# 
  6891  0318                     	;# 
  6892  0319                     	;# 
  6893  031A                     	;# 
  6894  031B                     	;# 
  6895  031C                     	;# 
  6896  031C                     	;# 
  6897  031D                     	;# 
  6898  031E                     	;# 
  6899  031F                     	;# 
  6900  038C                     	;# 
  6901  038C                     	;# 
  6902  038D                     	;# 
  6903  038E                     	;# 
  6904  0390                     	;# 
  6905  0390                     	;# 
  6906  0391                     	;# 
  6907  0392                     	;# 
  6908  040C                     	;# 
  6909  040D                     	;# 
  6910  040E                     	;# 
  6911  040F                     	;# 
  6912  0410                     	;# 
  6913  0411                     	;# 
  6914  0416                     	;# 
  6915  0416                     	;# 
  6916  0417                     	;# 
  6917  0418                     	;# 
  6918  0418                     	;# 
  6919  0419                     	;# 
  6920  041A                     	;# 
  6921  041A                     	;# 
  6922  041B                     	;# 
  6923  041C                     	;# 
  6924  041C                     	;# 
  6925  041D                     	;# 
  6926  041E                     	;# 
  6927  041F                     	;# 
  6928  048C                     	;# 
  6929  048C                     	;# 
  6930  048D                     	;# 
  6931  048E                     	;# 
  6932  048F                     	;# 
  6933  048F                     	;# 
  6934  0490                     	;# 
  6935  0491                     	;# 
  6936  0492                     	;# 
  6937  0492                     	;# 
  6938  0493                     	;# 
  6939  0494                     	;# 
  6940  0495                     	;# 
  6941  0495                     	;# 
  6942  0496                     	;# 
  6943  0497                     	;# 
  6944  0498                     	;# 
  6945  0499                     	;# 
  6946  049A                     	;# 
  6947  049B                     	;# 
  6948  049C                     	;# 
  6949  049D                     	;# 
  6950  050C                     	;# 
  6951  050C                     	;# 
  6952  050D                     	;# 
  6953  050E                     	;# 
  6954  050F                     	;# 
  6955  050F                     	;# 
  6956  0510                     	;# 
  6957  0511                     	;# 
  6958  0512                     	;# 
  6959  0512                     	;# 
  6960  0513                     	;# 
  6961  0514                     	;# 
  6962  0515                     	;# 
  6963  0515                     	;# 
  6964  0516                     	;# 
  6965  0517                     	;# 
  6966  0518                     	;# 
  6967  0519                     	;# 
  6968  051A                     	;# 
  6969  051B                     	;# 
  6970  051C                     	;# 
  6971  051D                     	;# 
  6972  058C                     	;# 
  6973  058C                     	;# 
  6974  058D                     	;# 
  6975  058E                     	;# 
  6976  058F                     	;# 
  6977  058F                     	;# 
  6978  0590                     	;# 
  6979  0591                     	;# 
  6980  0592                     	;# 
  6981  0593                     	;# 
  6982  060C                     	;# 
  6983  060D                     	;# 
  6984  060E                     	;# 
  6985  060F                     	;# 
  6986  0610                     	;# 
  6987  0611                     	;# 
  6988  0612                     	;# 
  6989  0613                     	;# 
  6990  0614                     	;# 
  6991  0616                     	;# 
  6992  0617                     	;# 
  6993  0618                     	;# 
  6994  0619                     	;# 
  6995  061A                     	;# 
  6996  061B                     	;# 
  6997  061C                     	;# 
  6998  061D                     	;# 
  6999  061E                     	;# 
  7000  068C                     	;# 
  7001  068D                     	;# 
  7002  068E                     	;# 
  7003  068F                     	;# 
  7004  0690                     	;# 
  7005  0691                     	;# 
  7006  0692                     	;# 
  7007  0693                     	;# 
  7008  0694                     	;# 
  7009  070C                     	;# 
  7010  070D                     	;# 
  7011  070E                     	;# 
  7012  070F                     	;# 
  7013  0710                     	;# 
  7014  0711                     	;# 
  7015  0712                     	;# 
  7016  0713                     	;# 
  7017  0714                     	;# 
  7018  0716                     	;# 
  7019  0717                     	;# 
  7020  0718                     	;# 
  7021  0719                     	;# 
  7022  071A                     	;# 
  7023  071B                     	;# 
  7024  071C                     	;# 
  7025  071D                     	;# 
  7026  071E                     	;# 
  7027  0796                     	;# 
  7028  0797                     	;# 
  7029  0798                     	;# 
  7030  0799                     	;# 
  7031  079A                     	;# 
  7032  079B                     	;# 
  7033  080C                     	;# 
  7034  080D                     	;# 
  7035  080E                     	;# 
  7036  080F                     	;# 
  7037  0810                     	;# 
  7038  0811                     	;# 
  7039  0812                     	;# 
  7040  0813                     	;# 
  7041  0814                     	;# 
  7042  081A                     	;# 
  7043  081B                     	;# 
  7044  081C                     	;# 
  7045  081D                     	;# 
  7046  081E                     	;# 
  7047  081F                     	;# 
  7048  088C                     	;# 
  7049  088D                     	;# 
  7050  088E                     	;# 
  7051  088F                     	;# 
  7052  0890                     	;# 
  7053  0891                     	;# 
  7054  0892                     	;# 
  7055  0893                     	;# 
  7056  0895                     	;# 
  7057  0896                     	;# 
  7058  0897                     	;# 
  7059  0898                     	;# 
  7060  0899                     	;# 
  7061  089A                     	;# 
  7062  089B                     	;# 
  7063  090C                     	;# 
  7064  090E                     	;# 
  7065  090F                     	;# 
  7066  091F                     	;# 
  7067  091F                     	;# 
  7068  098F                     	;# 
  7069  098F                     	;# 
  7070  0990                     	;# 
  7071  0991                     	;# 
  7072  0992                     	;# 
  7073  0993                     	;# 
  7074  0994                     	;# 
  7075  0995                     	;# 
  7076  0996                     	;# 
  7077  0997                     	;# 
  7078  0E0F                     	;# 
  7079  0E10                     	;# 
  7080  0E11                     	;# 
  7081  0E12                     	;# 
  7082  0E13                     	;# 
  7083  0E14                     	;# 
  7084  0E15                     	;# 
  7085  0E16                     	;# 
  7086  0E17                     	;# 
  7087  0E18                     	;# 
  7088  0E19                     	;# 
  7089  0E1A                     	;# 
  7090  0E1B                     	;# 
  7091  0E1C                     	;# 
  7092  0E1D                     	;# 
  7093  0E1E                     	;# 
  7094  0E1F                     	;# 
  7095  0E20                     	;# 
  7096  0E21                     	;# 
  7097  0E22                     	;# 
  7098  0E23                     	;# 
  7099  0E24                     	;# 
  7100  0E25                     	;# 
  7101  0E26                     	;# 
  7102  0E27                     	;# 
  7103  0E28                     	;# 
  7104  0E29                     	;# 
  7105  0E2A                     	;# 
  7106  0E2B                     	;# 
  7107  0E2C                     	;# 
  7108  0E2D                     	;# 
  7109  0E2E                     	;# 
  7110  0E2F                     	;# 
  7111  0E30                     	;# 
  7112  0E31                     	;# 
  7113  0E32                     	;# 
  7114  0E33                     	;# 
  7115  0E34                     	;# 
  7116  0E35                     	;# 
  7117  0E36                     	;# 
  7118  0E37                     	;# 
  7119  0E8F                     	;# 
  7120  0E90                     	;# 
  7121  0E91                     	;# 
  7122  0E92                     	;# 
  7123  0E93                     	;# 
  7124  0E94                     	;# 
  7125  0E95                     	;# 
  7126  0E96                     	;# 
  7127  0E97                     	;# 
  7128  0E9C                     	;# 
  7129  0E9D                     	;# 
  7130  0E9E                     	;# 
  7131  0EA1                     	;# 
  7132  0EA2                     	;# 
  7133  0EA3                     	;# 
  7134  0EA4                     	;# 
  7135  0EA5                     	;# 
  7136  0EA9                     	;# 
  7137  0EAA                     	;# 
  7138  0EAB                     	;# 
  7139  0EAC                     	;# 
  7140  0EB1                     	;# 
  7141  0EB2                     	;# 
  7142  0EB3                     	;# 
  7143  0EB8                     	;# 
  7144  0EB9                     	;# 
  7145  0EBA                     	;# 
  7146  0EBB                     	;# 
  7147  0EBC                     	;# 
  7148  0EBD                     	;# 
  7149  0EBE                     	;# 
  7150  0EC3                     	;# 
  7151  0EC5                     	;# 
  7152  0EC6                     	;# 
  7153  0EC7                     	;# 
  7154  0EC8                     	;# 
  7155  0EC9                     	;# 
  7156  0ECA                     	;# 
  7157  0ECB                     	;# 
  7158  0ECC                     	;# 
  7159  0F10                     	;# 
  7160  0F11                     	;# 
  7161  0F12                     	;# 
  7162  0F13                     	;# 
  7163  0F14                     	;# 
  7164  0F15                     	;# 
  7165  0F16                     	;# 
  7166  0F17                     	;# 
  7167  0F18                     	;# 
  7168  0F19                     	;# 
  7169  0F1A                     	;# 
  7170  0F1B                     	;# 
  7171  0F1C                     	;# 
  7172  0F1D                     	;# 
  7173  0F1E                     	;# 
  7174  0F1F                     	;# 
  7175  0F20                     	;# 
  7176  0F21                     	;# 
  7177  0F22                     	;# 
  7178  0F23                     	;# 
  7179  0F24                     	;# 
  7180  0F25                     	;# 
  7181  0F26                     	;# 
  7182  0F27                     	;# 
  7183  0F28                     	;# 
  7184  0F29                     	;# 
  7185  0F2A                     	;# 
  7186  0F2B                     	;# 
  7187  0F2C                     	;# 
  7188  0F2D                     	;# 
  7189  0F2E                     	;# 
  7190  0F2F                     	;# 
  7191  0F30                     	;# 
  7192  0F31                     	;# 
  7193  0F32                     	;# 
  7194  0F38                     	;# 
  7195  0F39                     	;# 
  7196  0F3A                     	;# 
  7197  0F3B                     	;# 
  7198  0F3C                     	;# 
  7199  0F3D                     	;# 
  7200  0F3E                     	;# 
  7201  0F3F                     	;# 
  7202  0F40                     	;# 
  7203  0F41                     	;# 
  7204  0F43                     	;# 
  7205  0F44                     	;# 
  7206  0F45                     	;# 
  7207  0F46                     	;# 
  7208  0F47                     	;# 
  7209  0F48                     	;# 
  7210  0F49                     	;# 
  7211  0F4A                     	;# 
  7212  0F4B                     	;# 
  7213  0F4C                     	;# 
  7214  0F4E                     	;# 
  7215  0F4F                     	;# 
  7216  0F50                     	;# 
  7217  0F51                     	;# 
  7218  0F52                     	;# 
  7219  0F53                     	;# 
  7220  0F54                     	;# 
  7221  0F55                     	;# 
  7222  0F56                     	;# 
  7223  0F57                     	;# 
  7224  0F59                     	;# 
  7225  0F5A                     	;# 
  7226  0F5B                     	;# 
  7227  0F5C                     	;# 
  7228  0F5D                     	;# 
  7229  0F61                     	;# 
  7230  0F62                     	;# 
  7231  0F64                     	;# 
  7232  0F65                     	;# 
  7233  0F66                     	;# 
  7234  0F67                     	;# 
  7235  0F68                     	;# 
  7236  0F69                     	;# 
  7237  0F6A                     	;# 
  7238  0F6B                     	;# 
  7239  0F6C                     	;# 
  7240  0F6D                     	;# 
  7241  0FE4                     	;# 
  7242  0FE5                     	;# 
  7243  0FE6                     	;# 
  7244  0FE7                     	;# 
  7245  0FE8                     	;# 
  7246  0FE9                     	;# 
  7247  0FEA                     	;# 
  7248  0FEB                     	;# 
  7249  0FED                     	;# 
  7250  0FEE                     	;# 
  7251  0FEF                     	;# 
  7252  0000                     	;# 
  7253  0001                     	;# 
  7254  0002                     	;# 
  7255  0003                     	;# 
  7256  0004                     	;# 
  7257  0005                     	;# 
  7258  0006                     	;# 
  7259  0007                     	;# 
  7260  0008                     	;# 
  7261  0009                     	;# 
  7262  000A                     	;# 
  7263  000B                     	;# 
  7264  000C                     	;# 
  7265  000D                     	;# 
  7266  000E                     	;# 
  7267  000F                     	;# 
  7268  0010                     	;# 
  7269  0011                     	;# 
  7270  0012                     	;# 
  7271  0013                     	;# 
  7272  0014                     	;# 
  7273  0015                     	;# 
  7274  0016                     	;# 
  7275  0017                     	;# 
  7276  0018                     	;# 
  7277  0019                     	;# 
  7278  001A                     	;# 
  7279  001C                     	;# 
  7280  001C                     	;# 
  7281  001D                     	;# 
  7282  001D                     	;# 
  7283  001E                     	;# 
  7284  001F                     	;# 
  7285  008C                     	;# 
  7286  008C                     	;# 
  7287  008D                     	;# 
  7288  008E                     	;# 
  7289  008E                     	;# 
  7290  008F                     	;# 
  7291  0090                     	;# 
  7292  0090                     	;# 
  7293  0091                     	;# 
  7294  0093                     	;# 
  7295  0094                     	;# 
  7296  0095                     	;# 
  7297  0096                     	;# 
  7298  0097                     	;# 
  7299  0098                     	;# 
  7300  0099                     	;# 
  7301  009A                     	;# 
  7302  009B                     	;# 
  7303  009C                     	;# 
  7304  009D                     	;# 
  7305  009E                     	;# 
  7306  010C                     	;# 
  7307  010D                     	;# 
  7308  010E                     	;# 
  7309  010E                     	;# 
  7310  010F                     	;# 
  7311  0110                     	;# 
  7312  0110                     	;# 
  7313  0111                     	;# 
  7314  0112                     	;# 
  7315  0112                     	;# 
  7316  0113                     	;# 
  7317  0114                     	;# 
  7318  0114                     	;# 
  7319  0115                     	;# 
  7320  0116                     	;# 
  7321  0116                     	;# 
  7322  0117                     	;# 
  7323  0119                     	;# 
  7324  0119                     	;# 
  7325  0119                     	;# 
  7326  011A                     	;# 
  7327  011A                     	;# 
  7328  011A                     	;# 
  7329  011B                     	;# 
  7330  011B                     	;# 
  7331  011B                     	;# 
  7332  011B                     	;# 
  7333  011B                     	;# 
  7334  011C                     	;# 
  7335  011C                     	;# 
  7336  011C                     	;# 
  7337  011D                     	;# 
  7338  011D                     	;# 
  7339  011D                     	;# 
  7340  011E                     	;# 
  7341  011E                     	;# 
  7342  011E                     	;# 
  7343  011F                     	;# 
  7344  011F                     	;# 
  7345  011F                     	;# 
  7346  011F                     	;# 
  7347  011F                     	;# 
  7348  018C                     	;# 
  7349  018D                     	;# 
  7350  018E                     	;# 
  7351  018F                     	;# 
  7352  0190                     	;# 
  7353  0191                     	;# 
  7354  0192                     	;# 
  7355  0196                     	;# 
  7356  0197                     	;# 
  7357  0198                     	;# 
  7358  0199                     	;# 
  7359  019A                     	;# 
  7360  019B                     	;# 
  7361  019C                     	;# 
  7362  020C                     	;# 
  7363  020C                     	;# 
  7364  020D                     	;# 
  7365  020E                     	;# 
  7366  020F                     	;# 
  7367  020F                     	;# 
  7368  0210                     	;# 
  7369  0210                     	;# 
  7370  0211                     	;# 
  7371  0211                     	;# 
  7372  0212                     	;# 
  7373  0212                     	;# 
  7374  0213                     	;# 
  7375  0214                     	;# 
  7376  0215                     	;# 
  7377  0215                     	;# 
  7378  0216                     	;# 
  7379  0216                     	;# 
  7380  0217                     	;# 
  7381  0217                     	;# 
  7382  0218                     	;# 
  7383  0218                     	;# 
  7384  0219                     	;# 
  7385  021A                     	;# 
  7386  021B                     	;# 
  7387  021B                     	;# 
  7388  021C                     	;# 
  7389  021C                     	;# 
  7390  021D                     	;# 
  7391  021D                     	;# 
  7392  021E                     	;# 
  7393  021F                     	;# 
  7394  028C                     	;# 
  7395  028C                     	;# 
  7396  028D                     	;# 
  7397  028D                     	;# 
  7398  028E                     	;# 
  7399  028F                     	;# 
  7400  0290                     	;# 
  7401  0290                     	;# 
  7402  0291                     	;# 
  7403  0292                     	;# 
  7404  0292                     	;# 
  7405  0293                     	;# 
  7406  0293                     	;# 
  7407  0294                     	;# 
  7408  0295                     	;# 
  7409  0296                     	;# 
  7410  0296                     	;# 
  7411  0297                     	;# 
  7412  0298                     	;# 
  7413  0298                     	;# 
  7414  0299                     	;# 
  7415  0299                     	;# 
  7416  029A                     	;# 
  7417  029B                     	;# 
  7418  029C                     	;# 
  7419  029C                     	;# 
  7420  029D                     	;# 
  7421  030C                     	;# 
  7422  030C                     	;# 
  7423  030D                     	;# 
  7424  030E                     	;# 
  7425  030F                     	;# 
  7426  0310                     	;# 
  7427  0310                     	;# 
  7428  0311                     	;# 
  7429  0312                     	;# 
  7430  0313                     	;# 
  7431  0314                     	;# 
  7432  0314                     	;# 
  7433  0315                     	;# 
  7434  0316                     	;# 
  7435  0317                     	;# 
  7436  0318                     	;# 
  7437  0318                     	;# 
  7438  0319                     	;# 
  7439  031A                     	;# 
  7440  031B                     	;# 
  7441  031C                     	;# 
  7442  031C                     	;# 
  7443  031D                     	;# 
  7444  031E                     	;# 
  7445  031F                     	;# 
  7446  038C                     	;# 
  7447  038C                     	;# 
  7448  038D                     	;# 
  7449  038E                     	;# 
  7450  0390                     	;# 
  7451  0390                     	;# 
  7452  0391                     	;# 
  7453  0392                     	;# 
  7454  040C                     	;# 
  7455  040D                     	;# 
  7456  040E                     	;# 
  7457  040F                     	;# 
  7458  0410                     	;# 
  7459  0411                     	;# 
  7460  0416                     	;# 
  7461  0416                     	;# 
  7462  0417                     	;# 
  7463  0418                     	;# 
  7464  0418                     	;# 
  7465  0419                     	;# 
  7466  041A                     	;# 
  7467  041A                     	;# 
  7468  041B                     	;# 
  7469  041C                     	;# 
  7470  041C                     	;# 
  7471  041D                     	;# 
  7472  041E                     	;# 
  7473  041F                     	;# 
  7474  048C                     	;# 
  7475  048C                     	;# 
  7476  048D                     	;# 
  7477  048E                     	;# 
  7478  048F                     	;# 
  7479  048F                     	;# 
  7480  0490                     	;# 
  7481  0491                     	;# 
  7482  0492                     	;# 
  7483  0492                     	;# 
  7484  0493                     	;# 
  7485  0494                     	;# 
  7486  0495                     	;# 
  7487  0495                     	;# 
  7488  0496                     	;# 
  7489  0497                     	;# 
  7490  0498                     	;# 
  7491  0499                     	;# 
  7492  049A                     	;# 
  7493  049B                     	;# 
  7494  049C                     	;# 
  7495  049D                     	;# 
  7496  050C                     	;# 
  7497  050C                     	;# 
  7498  050D                     	;# 
  7499  050E                     	;# 
  7500  050F                     	;# 
  7501  050F                     	;# 
  7502  0510                     	;# 
  7503  0511                     	;# 
  7504  0512                     	;# 
  7505  0512                     	;# 
  7506  0513                     	;# 
  7507  0514                     	;# 
  7508  0515                     	;# 
  7509  0515                     	;# 
  7510  0516                     	;# 
  7511  0517                     	;# 
  7512  0518                     	;# 
  7513  0519                     	;# 
  7514  051A                     	;# 
  7515  051B                     	;# 
  7516  051C                     	;# 
  7517  051D                     	;# 
  7518  058C                     	;# 
  7519  058C                     	;# 
  7520  058D                     	;# 
  7521  058E                     	;# 
  7522  058F                     	;# 
  7523  058F                     	;# 
  7524  0590                     	;# 
  7525  0591                     	;# 
  7526  0592                     	;# 
  7527  0593                     	;# 
  7528  060C                     	;# 
  7529  060D                     	;# 
  7530  060E                     	;# 
  7531  060F                     	;# 
  7532  0610                     	;# 
  7533  0611                     	;# 
  7534  0612                     	;# 
  7535  0613                     	;# 
  7536  0614                     	;# 
  7537  0616                     	;# 
  7538  0617                     	;# 
  7539  0618                     	;# 
  7540  0619                     	;# 
  7541  061A                     	;# 
  7542  061B                     	;# 
  7543  061C                     	;# 
  7544  061D                     	;# 
  7545  061E                     	;# 
  7546  068C                     	;# 
  7547  068D                     	;# 
  7548  068E                     	;# 
  7549  068F                     	;# 
  7550  0690                     	;# 
  7551  0691                     	;# 
  7552  0692                     	;# 
  7553  0693                     	;# 
  7554  0694                     	;# 
  7555  070C                     	;# 
  7556  070D                     	;# 
  7557  070E                     	;# 
  7558  070F                     	;# 
  7559  0710                     	;# 
  7560  0711                     	;# 
  7561  0712                     	;# 
  7562  0713                     	;# 
  7563  0714                     	;# 
  7564  0716                     	;# 
  7565  0717                     	;# 
  7566  0718                     	;# 
  7567  0719                     	;# 
  7568  071A                     	;# 
  7569  071B                     	;# 
  7570  071C                     	;# 
  7571  071D                     	;# 
  7572  071E                     	;# 
  7573  0796                     	;# 
  7574  0797                     	;# 
  7575  0798                     	;# 
  7576  0799                     	;# 
  7577  079A                     	;# 
  7578  079B                     	;# 
  7579  080C                     	;# 
  7580  080D                     	;# 
  7581  080E                     	;# 
  7582  080F                     	;# 
  7583  0810                     	;# 
  7584  0811                     	;# 
  7585  0812                     	;# 
  7586  0813                     	;# 
  7587  0814                     	;# 
  7588  081A                     	;# 
  7589  081B                     	;# 
  7590  081C                     	;# 
  7591  081D                     	;# 
  7592  081E                     	;# 
  7593  081F                     	;# 
  7594  088C                     	;# 
  7595  088D                     	;# 
  7596  088E                     	;# 
  7597  088F                     	;# 
  7598  0890                     	;# 
  7599  0891                     	;# 
  7600  0892                     	;# 
  7601  0893                     	;# 
  7602  0895                     	;# 
  7603  0896                     	;# 
  7604  0897                     	;# 
  7605  0898                     	;# 
  7606  0899                     	;# 
  7607  089A                     	;# 
  7608  089B                     	;# 
  7609  090C                     	;# 
  7610  090E                     	;# 
  7611  090F                     	;# 
  7612  091F                     	;# 
  7613  091F                     	;# 
  7614  098F                     	;# 
  7615  098F                     	;# 
  7616  0990                     	;# 
  7617  0991                     	;# 
  7618  0992                     	;# 
  7619  0993                     	;# 
  7620  0994                     	;# 
  7621  0995                     	;# 
  7622  0996                     	;# 
  7623  0997                     	;# 
  7624  0E0F                     	;# 
  7625  0E10                     	;# 
  7626  0E11                     	;# 
  7627  0E12                     	;# 
  7628  0E13                     	;# 
  7629  0E14                     	;# 
  7630  0E15                     	;# 
  7631  0E16                     	;# 
  7632  0E17                     	;# 
  7633  0E18                     	;# 
  7634  0E19                     	;# 
  7635  0E1A                     	;# 
  7636  0E1B                     	;# 
  7637  0E1C                     	;# 
  7638  0E1D                     	;# 
  7639  0E1E                     	;# 
  7640  0E1F                     	;# 
  7641  0E20                     	;# 
  7642  0E21                     	;# 
  7643  0E22                     	;# 
  7644  0E23                     	;# 
  7645  0E24                     	;# 
  7646  0E25                     	;# 
  7647  0E26                     	;# 
  7648  0E27                     	;# 
  7649  0E28                     	;# 
  7650  0E29                     	;# 
  7651  0E2A                     	;# 
  7652  0E2B                     	;# 
  7653  0E2C                     	;# 
  7654  0E2D                     	;# 
  7655  0E2E                     	;# 
  7656  0E2F                     	;# 
  7657  0E30                     	;# 
  7658  0E31                     	;# 
  7659  0E32                     	;# 
  7660  0E33                     	;# 
  7661  0E34                     	;# 
  7662  0E35                     	;# 
  7663  0E36                     	;# 
  7664  0E37                     	;# 
  7665  0E8F                     	;# 
  7666  0E90                     	;# 
  7667  0E91                     	;# 
  7668  0E92                     	;# 
  7669  0E93                     	;# 
  7670  0E94                     	;# 
  7671  0E95                     	;# 
  7672  0E96                     	;# 
  7673  0E97                     	;# 
  7674  0E9C                     	;# 
  7675  0E9D                     	;# 
  7676  0E9E                     	;# 
  7677  0EA1                     	;# 
  7678  0EA2                     	;# 
  7679  0EA3                     	;# 
  7680  0EA4                     	;# 
  7681  0EA5                     	;# 
  7682  0EA9                     	;# 
  7683  0EAA                     	;# 
  7684  0EAB                     	;# 
  7685  0EAC                     	;# 
  7686  0EB1                     	;# 
  7687  0EB2                     	;# 
  7688  0EB3                     	;# 
  7689  0EB8                     	;# 
  7690  0EB9                     	;# 
  7691  0EBA                     	;# 
  7692  0EBB                     	;# 
  7693  0EBC                     	;# 
  7694  0EBD                     	;# 
  7695  0EBE                     	;# 
  7696  0EC3                     	;# 
  7697  0EC5                     	;# 
  7698  0EC6                     	;# 
  7699  0EC7                     	;# 
  7700  0EC8                     	;# 
  7701  0EC9                     	;# 
  7702  0ECA                     	;# 
  7703  0ECB                     	;# 
  7704  0ECC                     	;# 
  7705  0F10                     	;# 
  7706  0F11                     	;# 
  7707  0F12                     	;# 
  7708  0F13                     	;# 
  7709  0F14                     	;# 
  7710  0F15                     	;# 
  7711  0F16                     	;# 
  7712  0F17                     	;# 
  7713  0F18                     	;# 
  7714  0F19                     	;# 
  7715  0F1A                     	;# 
  7716  0F1B                     	;# 
  7717  0F1C                     	;# 
  7718  0F1D                     	;# 
  7719  0F1E                     	;# 
  7720  0F1F                     	;# 
  7721  0F20                     	;# 
  7722  0F21                     	;# 
  7723  0F22                     	;# 
  7724  0F23                     	;# 
  7725  0F24                     	;# 
  7726  0F25                     	;# 
  7727  0F26                     	;# 
  7728  0F27                     	;# 
  7729  0F28                     	;# 
  7730  0F29                     	;# 
  7731  0F2A                     	;# 
  7732  0F2B                     	;# 
  7733  0F2C                     	;# 
  7734  0F2D                     	;# 
  7735  0F2E                     	;# 
  7736  0F2F                     	;# 
  7737  0F30                     	;# 
  7738  0F31                     	;# 
  7739  0F32                     	;# 
  7740  0F38                     	;# 
  7741  0F39                     	;# 
  7742  0F3A                     	;# 
  7743  0F3B                     	;# 
  7744  0F3C                     	;# 
  7745  0F3D                     	;# 
  7746  0F3E                     	;# 
  7747  0F3F                     	;# 
  7748  0F40                     	;# 
  7749  0F41                     	;# 
  7750  0F43                     	;# 
  7751  0F44                     	;# 
  7752  0F45                     	;# 
  7753  0F46                     	;# 
  7754  0F47                     	;# 
  7755  0F48                     	;# 
  7756  0F49                     	;# 
  7757  0F4A                     	;# 
  7758  0F4B                     	;# 
  7759  0F4C                     	;# 
  7760  0F4E                     	;# 
  7761  0F4F                     	;# 
  7762  0F50                     	;# 
  7763  0F51                     	;# 
  7764  0F52                     	;# 
  7765  0F53                     	;# 
  7766  0F54                     	;# 
  7767  0F55                     	;# 
  7768  0F56                     	;# 
  7769  0F57                     	;# 
  7770  0F59                     	;# 
  7771  0F5A                     	;# 
  7772  0F5B                     	;# 
  7773  0F5C                     	;# 
  7774  0F5D                     	;# 
  7775  0F61                     	;# 
  7776  0F62                     	;# 
  7777  0F64                     	;# 
  7778  0F65                     	;# 
  7779  0F66                     	;# 
  7780  0F67                     	;# 
  7781  0F68                     	;# 
  7782  0F69                     	;# 
  7783  0F6A                     	;# 
  7784  0F6B                     	;# 
  7785  0F6C                     	;# 
  7786  0F6D                     	;# 
  7787  0FE4                     	;# 
  7788  0FE5                     	;# 
  7789  0FE6                     	;# 
  7790  0FE7                     	;# 
  7791  0FE8                     	;# 
  7792  0FE9                     	;# 
  7793  0FEA                     	;# 
  7794  0FEB                     	;# 
  7795  0FED                     	;# 
  7796  0FEE                     	;# 
  7797  0FEF                     	;# 
  7798  0000                     	;# 
  7799  0001                     	;# 
  7800  0002                     	;# 
  7801  0003                     	;# 
  7802  0004                     	;# 
  7803  0005                     	;# 
  7804  0006                     	;# 
  7805  0007                     	;# 
  7806  0008                     	;# 
  7807  0009                     	;# 
  7808  000A                     	;# 
  7809  000B                     	;# 
  7810  000C                     	;# 
  7811  000D                     	;# 
  7812  000E                     	;# 
  7813  000F                     	;# 
  7814  0010                     	;# 
  7815  0011                     	;# 
  7816  0012                     	;# 
  7817  0013                     	;# 
  7818  0014                     	;# 
  7819  0015                     	;# 
  7820  0016                     	;# 
  7821  0017                     	;# 
  7822  0018                     	;# 
  7823  0019                     	;# 
  7824  001A                     	;# 
  7825  001C                     	;# 
  7826  001C                     	;# 
  7827  001D                     	;# 
  7828  001D                     	;# 
  7829  001E                     	;# 
  7830  001F                     	;# 
  7831  008C                     	;# 
  7832  008C                     	;# 
  7833  008D                     	;# 
  7834  008E                     	;# 
  7835  008E                     	;# 
  7836  008F                     	;# 
  7837  0090                     	;# 
  7838  0090                     	;# 
  7839  0091                     	;# 
  7840  0093                     	;# 
  7841  0094                     	;# 
  7842  0095                     	;# 
  7843  0096                     	;# 
  7844  0097                     	;# 
  7845  0098                     	;# 
  7846  0099                     	;# 
  7847  009A                     	;# 
  7848  009B                     	;# 
  7849  009C                     	;# 
  7850  009D                     	;# 
  7851  009E                     	;# 
  7852  010C                     	;# 
  7853  010D                     	;# 
  7854  010E                     	;# 
  7855  010E                     	;# 
  7856  010F                     	;# 
  7857  0110                     	;# 
  7858  0110                     	;# 
  7859  0111                     	;# 
  7860  0112                     	;# 
  7861  0112                     	;# 
  7862  0113                     	;# 
  7863  0114                     	;# 
  7864  0114                     	;# 
  7865  0115                     	;# 
  7866  0116                     	;# 
  7867  0116                     	;# 
  7868  0117                     	;# 
  7869  0119                     	;# 
  7870  0119                     	;# 
  7871  0119                     	;# 
  7872  011A                     	;# 
  7873  011A                     	;# 
  7874  011A                     	;# 
  7875  011B                     	;# 
  7876  011B                     	;# 
  7877  011B                     	;# 
  7878  011B                     	;# 
  7879  011B                     	;# 
  7880  011C                     	;# 
  7881  011C                     	;# 
  7882  011C                     	;# 
  7883  011D                     	;# 
  7884  011D                     	;# 
  7885  011D                     	;# 
  7886  011E                     	;# 
  7887  011E                     	;# 
  7888  011E                     	;# 
  7889  011F                     	;# 
  7890  011F                     	;# 
  7891  011F                     	;# 
  7892  011F                     	;# 
  7893  011F                     	;# 
  7894  018C                     	;# 
  7895  018D                     	;# 
  7896  018E                     	;# 
  7897  018F                     	;# 
  7898  0190                     	;# 
  7899  0191                     	;# 
  7900  0192                     	;# 
  7901  0196                     	;# 
  7902  0197                     	;# 
  7903  0198                     	;# 
  7904  0199                     	;# 
  7905  019A                     	;# 
  7906  019B                     	;# 
  7907  019C                     	;# 
  7908  020C                     	;# 
  7909  020C                     	;# 
  7910  020D                     	;# 
  7911  020E                     	;# 
  7912  020F                     	;# 
  7913  020F                     	;# 
  7914  0210                     	;# 
  7915  0210                     	;# 
  7916  0211                     	;# 
  7917  0211                     	;# 
  7918  0212                     	;# 
  7919  0212                     	;# 
  7920  0213                     	;# 
  7921  0214                     	;# 
  7922  0215                     	;# 
  7923  0215                     	;# 
  7924  0216                     	;# 
  7925  0216                     	;# 
  7926  0217                     	;# 
  7927  0217                     	;# 
  7928  0218                     	;# 
  7929  0218                     	;# 
  7930  0219                     	;# 
  7931  021A                     	;# 
  7932  021B                     	;# 
  7933  021B                     	;# 
  7934  021C                     	;# 
  7935  021C                     	;# 
  7936  021D                     	;# 
  7937  021D                     	;# 
  7938  021E                     	;# 
  7939  021F                     	;# 
  7940  028C                     	;# 
  7941  028C                     	;# 
  7942  028D                     	;# 
  7943  028D                     	;# 
  7944  028E                     	;# 
  7945  028F                     	;# 
  7946  0290                     	;# 
  7947  0290                     	;# 
  7948  0291                     	;# 
  7949  0292                     	;# 
  7950  0292                     	;# 
  7951  0293                     	;# 
  7952  0293                     	;# 
  7953  0294                     	;# 
  7954  0295                     	;# 
  7955  0296                     	;# 
  7956  0296                     	;# 
  7957  0297                     	;# 
  7958  0298                     	;# 
  7959  0298                     	;# 
  7960  0299                     	;# 
  7961  0299                     	;# 
  7962  029A                     	;# 
  7963  029B                     	;# 
  7964  029C                     	;# 
  7965  029C                     	;# 
  7966  029D                     	;# 
  7967  030C                     	;# 
  7968  030C                     	;# 
  7969  030D                     	;# 
  7970  030E                     	;# 
  7971  030F                     	;# 
  7972  0310                     	;# 
  7973  0310                     	;# 
  7974  0311                     	;# 
  7975  0312                     	;# 
  7976  0313                     	;# 
  7977  0314                     	;# 
  7978  0314                     	;# 
  7979  0315                     	;# 
  7980  0316                     	;# 
  7981  0317                     	;# 
  7982  0318                     	;# 
  7983  0318                     	;# 
  7984  0319                     	;# 
  7985  031A                     	;# 
  7986  031B                     	;# 
  7987  031C                     	;# 
  7988  031C                     	;# 
  7989  031D                     	;# 
  7990  031E                     	;# 
  7991  031F                     	;# 
  7992  038C                     	;# 
  7993  038C                     	;# 
  7994  038D                     	;# 
  7995  038E                     	;# 
  7996  0390                     	;# 
  7997  0390                     	;# 
  7998  0391                     	;# 
  7999  0392                     	;# 
  8000  040C                     	;# 
  8001  040D                     	;# 
  8002  040E                     	;# 
  8003  040F                     	;# 
  8004  0410                     	;# 
  8005  0411                     	;# 
  8006  0416                     	;# 
  8007  0416                     	;# 
  8008  0417                     	;# 
  8009  0418                     	;# 
  8010  0418                     	;# 
  8011  0419                     	;# 
  8012  041A                     	;# 
  8013  041A                     	;# 
  8014  041B                     	;# 
  8015  041C                     	;# 
  8016  041C                     	;# 
  8017  041D                     	;# 
  8018  041E                     	;# 
  8019  041F                     	;# 
  8020  048C                     	;# 
  8021  048C                     	;# 
  8022  048D                     	;# 
  8023  048E                     	;# 
  8024  048F                     	;# 
  8025  048F                     	;# 
  8026  0490                     	;# 
  8027  0491                     	;# 
  8028  0492                     	;# 
  8029  0492                     	;# 
  8030  0493                     	;# 
  8031  0494                     	;# 
  8032  0495                     	;# 
  8033  0495                     	;# 
  8034  0496                     	;# 
  8035  0497                     	;# 
  8036  0498                     	;# 
  8037  0499                     	;# 
  8038  049A                     	;# 
  8039  049B                     	;# 
  8040  049C                     	;# 
  8041  049D                     	;# 
  8042  050C                     	;# 
  8043  050C                     	;# 
  8044  050D                     	;# 
  8045  050E                     	;# 
  8046  050F                     	;# 
  8047  050F                     	;# 
  8048  0510                     	;# 
  8049  0511                     	;# 
  8050  0512                     	;# 
  8051  0512                     	;# 
  8052  0513                     	;# 
  8053  0514                     	;# 
  8054  0515                     	;# 
  8055  0515                     	;# 
  8056  0516                     	;# 
  8057  0517                     	;# 
  8058  0518                     	;# 
  8059  0519                     	;# 
  8060  051A                     	;# 
  8061  051B                     	;# 
  8062  051C                     	;# 
  8063  051D                     	;# 
  8064  058C                     	;# 
  8065  058C                     	;# 
  8066  058D                     	;# 
  8067  058E                     	;# 
  8068  058F                     	;# 
  8069  058F                     	;# 
  8070  0590                     	;# 
  8071  0591                     	;# 
  8072  0592                     	;# 
  8073  0593                     	;# 
  8074  060C                     	;# 
  8075  060D                     	;# 
  8076  060E                     	;# 
  8077  060F                     	;# 
  8078  0610                     	;# 
  8079  0611                     	;# 
  8080  0612                     	;# 
  8081  0613                     	;# 
  8082  0614                     	;# 
  8083  0616                     	;# 
  8084  0617                     	;# 
  8085  0618                     	;# 
  8086  0619                     	;# 
  8087  061A                     	;# 
  8088  061B                     	;# 
  8089  061C                     	;# 
  8090  061D                     	;# 
  8091  061E                     	;# 
  8092  068C                     	;# 
  8093  068D                     	;# 
  8094  068E                     	;# 
  8095  068F                     	;# 
  8096  0690                     	;# 
  8097  0691                     	;# 
  8098  0692                     	;# 
  8099  0693                     	;# 
  8100  0694                     	;# 
  8101  070C                     	;# 
  8102  070D                     	;# 
  8103  070E                     	;# 
  8104  070F                     	;# 
  8105  0710                     	;# 
  8106  0711                     	;# 
  8107  0712                     	;# 
  8108  0713                     	;# 
  8109  0714                     	;# 
  8110  0716                     	;# 
  8111  0717                     	;# 
  8112  0718                     	;# 
  8113  0719                     	;# 
  8114  071A                     	;# 
  8115  071B                     	;# 
  8116  071C                     	;# 
  8117  071D                     	;# 
  8118  071E                     	;# 
  8119  0796                     	;# 
  8120  0797                     	;# 
  8121  0798                     	;# 
  8122  0799                     	;# 
  8123  079A                     	;# 
  8124  079B                     	;# 
  8125  080C                     	;# 
  8126  080D                     	;# 
  8127  080E                     	;# 
  8128  080F                     	;# 
  8129  0810                     	;# 
  8130  0811                     	;# 
  8131  0812                     	;# 
  8132  0813                     	;# 
  8133  0814                     	;# 
  8134  081A                     	;# 
  8135  081B                     	;# 
  8136  081C                     	;# 
  8137  081D                     	;# 
  8138  081E                     	;# 
  8139  081F                     	;# 
  8140  088C                     	;# 
  8141  088D                     	;# 
  8142  088E                     	;# 
  8143  088F                     	;# 
  8144  0890                     	;# 
  8145  0891                     	;# 
  8146  0892                     	;# 
  8147  0893                     	;# 
  8148  0895                     	;# 
  8149  0896                     	;# 
  8150  0897                     	;# 
  8151  0898                     	;# 
  8152  0899                     	;# 
  8153  089A                     	;# 
  8154  089B                     	;# 
  8155  090C                     	;# 
  8156  090E                     	;# 
  8157  090F                     	;# 
  8158  091F                     	;# 
  8159  091F                     	;# 
  8160  098F                     	;# 
  8161  098F                     	;# 
  8162  0990                     	;# 
  8163  0991                     	;# 
  8164  0992                     	;# 
  8165  0993                     	;# 
  8166  0994                     	;# 
  8167  0995                     	;# 
  8168  0996                     	;# 
  8169  0997                     	;# 
  8170  0E0F                     	;# 
  8171  0E10                     	;# 
  8172  0E11                     	;# 
  8173  0E12                     	;# 
  8174  0E13                     	;# 
  8175  0E14                     	;# 
  8176  0E15                     	;# 
  8177  0E16                     	;# 
  8178  0E17                     	;# 
  8179  0E18                     	;# 
  8180  0E19                     	;# 
  8181  0E1A                     	;# 
  8182  0E1B                     	;# 
  8183  0E1C                     	;# 
  8184  0E1D                     	;# 
  8185  0E1E                     	;# 
  8186  0E1F                     	;# 
  8187  0E20                     	;# 
  8188  0E21                     	;# 
  8189  0E22                     	;# 
  8190  0E23                     	;# 
  8191  0E24                     	;# 
  8192  0E25                     	;# 
  8193  0E26                     	;# 
  8194  0E27                     	;# 
  8195  0E28                     	;# 
  8196  0E29                     	;# 
  8197  0E2A                     	;# 
  8198  0E2B                     	;# 
  8199  0E2C                     	;# 
  8200  0E2D                     	;# 
  8201  0E2E                     	;# 
  8202  0E2F                     	;# 
  8203  0E30                     	;# 
  8204  0E31                     	;# 
  8205  0E32                     	;# 
  8206  0E33                     	;# 
  8207  0E34                     	;# 
  8208  0E35                     	;# 
  8209  0E36                     	;# 
  8210  0E37                     	;# 
  8211  0E8F                     	;# 
  8212  0E90                     	;# 
  8213  0E91                     	;# 
  8214  0E92                     	;# 
  8215  0E93                     	;# 
  8216  0E94                     	;# 
  8217  0E95                     	;# 
  8218  0E96                     	;# 
  8219  0E97                     	;# 
  8220  0E9C                     	;# 
  8221  0E9D                     	;# 
  8222  0E9E                     	;# 
  8223  0EA1                     	;# 
  8224  0EA2                     	;# 
  8225  0EA3                     	;# 
  8226  0EA4                     	;# 
  8227  0EA5                     	;# 
  8228  0EA9                     	;# 
  8229  0EAA                     	;# 
  8230  0EAB                     	;# 
  8231  0EAC                     	;# 
  8232  0EB1                     	;# 
  8233  0EB2                     	;# 
  8234  0EB3                     	;# 
  8235  0EB8                     	;# 
  8236  0EB9                     	;# 
  8237  0EBA                     	;# 
  8238  0EBB                     	;# 
  8239  0EBC                     	;# 
  8240  0EBD                     	;# 
  8241  0EBE                     	;# 
  8242  0EC3                     	;# 
  8243  0EC5                     	;# 
  8244  0EC6                     	;# 
  8245  0EC7                     	;# 
  8246  0EC8                     	;# 
  8247  0EC9                     	;# 
  8248  0ECA                     	;# 
  8249  0ECB                     	;# 
  8250  0ECC                     	;# 
  8251  0F10                     	;# 
  8252  0F11                     	;# 
  8253  0F12                     	;# 
  8254  0F13                     	;# 
  8255  0F14                     	;# 
  8256  0F15                     	;# 
  8257  0F16                     	;# 
  8258  0F17                     	;# 
  8259  0F18                     	;# 
  8260  0F19                     	;# 
  8261  0F1A                     	;# 
  8262  0F1B                     	;# 
  8263  0F1C                     	;# 
  8264  0F1D                     	;# 
  8265  0F1E                     	;# 
  8266  0F1F                     	;# 
  8267  0F20                     	;# 
  8268  0F21                     	;# 
  8269  0F22                     	;# 
  8270  0F23                     	;# 
  8271  0F24                     	;# 
  8272  0F25                     	;# 
  8273  0F26                     	;# 
  8274  0F27                     	;# 
  8275  0F28                     	;# 
  8276  0F29                     	;# 
  8277  0F2A                     	;# 
  8278  0F2B                     	;# 
  8279  0F2C                     	;# 
  8280  0F2D                     	;# 
  8281  0F2E                     	;# 
  8282  0F2F                     	;# 
  8283  0F30                     	;# 
  8284  0F31                     	;# 
  8285  0F32                     	;# 
  8286  0F38                     	;# 
  8287  0F39                     	;# 
  8288  0F3A                     	;# 
  8289  0F3B                     	;# 
  8290  0F3C                     	;# 
  8291  0F3D                     	;# 
  8292  0F3E                     	;# 
  8293  0F3F                     	;# 
  8294  0F40                     	;# 
  8295  0F41                     	;# 
  8296  0F43                     	;# 
  8297  0F44                     	;# 
  8298  0F45                     	;# 
  8299  0F46                     	;# 
  8300  0F47                     	;# 
  8301  0F48                     	;# 
  8302  0F49                     	;# 
  8303  0F4A                     	;# 
  8304  0F4B                     	;# 
  8305  0F4C                     	;# 
  8306  0F4E                     	;# 
  8307  0F4F                     	;# 
  8308  0F50                     	;# 
  8309  0F51                     	;# 
  8310  0F52                     	;# 
  8311  0F53                     	;# 
  8312  0F54                     	;# 
  8313  0F55                     	;# 
  8314  0F56                     	;# 
  8315  0F57                     	;# 
  8316  0F59                     	;# 
  8317  0F5A                     	;# 
  8318  0F5B                     	;# 
  8319  0F5C                     	;# 
  8320  0F5D                     	;# 
  8321  0F61                     	;# 
  8322  0F62                     	;# 
  8323  0F64                     	;# 
  8324  0F65                     	;# 
  8325  0F66                     	;# 
  8326  0F67                     	;# 
  8327  0F68                     	;# 
  8328  0F69                     	;# 
  8329  0F6A                     	;# 
  8330  0F6B                     	;# 
  8331  0F6C                     	;# 
  8332  0F6D                     	;# 
  8333  0FE4                     	;# 
  8334  0FE5                     	;# 
  8335  0FE6                     	;# 
  8336  0FE7                     	;# 
  8337  0FE8                     	;# 
  8338  0FE9                     	;# 
  8339  0FEA                     	;# 
  8340  0FEB                     	;# 
  8341  0FED                     	;# 
  8342  0FEE                     	;# 
  8343  0FEF                     	;# 
  8344  0000                     	;# 
  8345  0001                     	;# 
  8346  0002                     	;# 
  8347  0003                     	;# 
  8348  0004                     	;# 
  8349  0005                     	;# 
  8350  0006                     	;# 
  8351  0007                     	;# 
  8352  0008                     	;# 
  8353  0009                     	;# 
  8354  000A                     	;# 
  8355  000B                     	;# 
  8356  000C                     	;# 
  8357  000D                     	;# 
  8358  000E                     	;# 
  8359  000F                     	;# 
  8360  0010                     	;# 
  8361  0011                     	;# 
  8362  0012                     	;# 
  8363  0013                     	;# 
  8364  0014                     	;# 
  8365  0015                     	;# 
  8366  0016                     	;# 
  8367  0017                     	;# 
  8368  0018                     	;# 
  8369  0019                     	;# 
  8370  001A                     	;# 
  8371  001C                     	;# 
  8372  001C                     	;# 
  8373  001D                     	;# 
  8374  001D                     	;# 
  8375  001E                     	;# 
  8376  001F                     	;# 
  8377  008C                     	;# 
  8378  008C                     	;# 
  8379  008D                     	;# 
  8380  008E                     	;# 
  8381  008E                     	;# 
  8382  008F                     	;# 
  8383  0090                     	;# 
  8384  0090                     	;# 
  8385  0091                     	;# 
  8386  0093                     	;# 
  8387  0094                     	;# 
  8388  0095                     	;# 
  8389  0096                     	;# 
  8390  0097                     	;# 
  8391  0098                     	;# 
  8392  0099                     	;# 
  8393  009A                     	;# 
  8394  009B                     	;# 
  8395  009C                     	;# 
  8396  009D                     	;# 
  8397  009E                     	;# 
  8398  010C                     	;# 
  8399  010D                     	;# 
  8400  010E                     	;# 
  8401  010E                     	;# 
  8402  010F                     	;# 
  8403  0110                     	;# 
  8404  0110                     	;# 
  8405  0111                     	;# 
  8406  0112                     	;# 
  8407  0112                     	;# 
  8408  0113                     	;# 
  8409  0114                     	;# 
  8410  0114                     	;# 
  8411  0115                     	;# 
  8412  0116                     	;# 
  8413  0116                     	;# 
  8414  0117                     	;# 
  8415  0119                     	;# 
  8416  0119                     	;# 
  8417  0119                     	;# 
  8418  011A                     	;# 
  8419  011A                     	;# 
  8420  011A                     	;# 
  8421  011B                     	;# 
  8422  011B                     	;# 
  8423  011B                     	;# 
  8424  011B                     	;# 
  8425  011B                     	;# 
  8426  011C                     	;# 
  8427  011C                     	;# 
  8428  011C                     	;# 
  8429  011D                     	;# 
  8430  011D                     	;# 
  8431  011D                     	;# 
  8432  011E                     	;# 
  8433  011E                     	;# 
  8434  011E                     	;# 
  8435  011F                     	;# 
  8436  011F                     	;# 
  8437  011F                     	;# 
  8438  011F                     	;# 
  8439  011F                     	;# 
  8440  018C                     	;# 
  8441  018D                     	;# 
  8442  018E                     	;# 
  8443  018F                     	;# 
  8444  0190                     	;# 
  8445  0191                     	;# 
  8446  0192                     	;# 
  8447  0196                     	;# 
  8448  0197                     	;# 
  8449  0198                     	;# 
  8450  0199                     	;# 
  8451  019A                     	;# 
  8452  019B                     	;# 
  8453  019C                     	;# 
  8454  020C                     	;# 
  8455  020C                     	;# 
  8456  020D                     	;# 
  8457  020E                     	;# 
  8458  020F                     	;# 
  8459  020F                     	;# 
  8460  0210                     	;# 
  8461  0210                     	;# 
  8462  0211                     	;# 
  8463  0211                     	;# 
  8464  0212                     	;# 
  8465  0212                     	;# 
  8466  0213                     	;# 
  8467  0214                     	;# 
  8468  0215                     	;# 
  8469  0215                     	;# 
  8470  0216                     	;# 
  8471  0216                     	;# 
  8472  0217                     	;# 
  8473  0217                     	;# 
  8474  0218                     	;# 
  8475  0218                     	;# 
  8476  0219                     	;# 
  8477  021A                     	;# 
  8478  021B                     	;# 
  8479  021B                     	;# 
  8480  021C                     	;# 
  8481  021C                     	;# 
  8482  021D                     	;# 
  8483  021D                     	;# 
  8484  021E                     	;# 
  8485  021F                     	;# 
  8486  028C                     	;# 
  8487  028C                     	;# 
  8488  028D                     	;# 
  8489  028D                     	;# 
  8490  028E                     	;# 
  8491  028F                     	;# 
  8492  0290                     	;# 
  8493  0290                     	;# 
  8494  0291                     	;# 
  8495  0292                     	;# 
  8496  0292                     	;# 
  8497  0293                     	;# 
  8498  0293                     	;# 
  8499  0294                     	;# 
  8500  0295                     	;# 
  8501  0296                     	;# 
  8502  0296                     	;# 
  8503  0297                     	;# 
  8504  0298                     	;# 
  8505  0298                     	;# 
  8506  0299                     	;# 
  8507  0299                     	;# 
  8508  029A                     	;# 
  8509  029B                     	;# 
  8510  029C                     	;# 
  8511  029C                     	;# 
  8512  029D                     	;# 
  8513  030C                     	;# 
  8514  030C                     	;# 
  8515  030D                     	;# 
  8516  030E                     	;# 
  8517  030F                     	;# 
  8518  0310                     	;# 
  8519  0310                     	;# 
  8520  0311                     	;# 
  8521  0312                     	;# 
  8522  0313                     	;# 
  8523  0314                     	;# 
  8524  0314                     	;# 
  8525  0315                     	;# 
  8526  0316                     	;# 
  8527  0317                     	;# 
  8528  0318                     	;# 
  8529  0318                     	;# 
  8530  0319                     	;# 
  8531  031A                     	;# 
  8532  031B                     	;# 
  8533  031C                     	;# 
  8534  031C                     	;# 
  8535  031D                     	;# 
  8536  031E                     	;# 
  8537  031F                     	;# 
  8538  038C                     	;# 
  8539  038C                     	;# 
  8540  038D                     	;# 
  8541  038E                     	;# 
  8542  0390                     	;# 
  8543  0390                     	;# 
  8544  0391                     	;# 
  8545  0392                     	;# 
  8546  040C                     	;# 
  8547  040D                     	;# 
  8548  040E                     	;# 
  8549  040F                     	;# 
  8550  0410                     	;# 
  8551  0411                     	;# 
  8552  0416                     	;# 
  8553  0416                     	;# 
  8554  0417                     	;# 
  8555  0418                     	;# 
  8556  0418                     	;# 
  8557  0419                     	;# 
  8558  041A                     	;# 
  8559  041A                     	;# 
  8560  041B                     	;# 
  8561  041C                     	;# 
  8562  041C                     	;# 
  8563  041D                     	;# 
  8564  041E                     	;# 
  8565  041F                     	;# 
  8566  048C                     	;# 
  8567  048C                     	;# 
  8568  048D                     	;# 
  8569  048E                     	;# 
  8570  048F                     	;# 
  8571  048F                     	;# 
  8572  0490                     	;# 
  8573  0491                     	;# 
  8574  0492                     	;# 
  8575  0492                     	;# 
  8576  0493                     	;# 
  8577  0494                     	;# 
  8578  0495                     	;# 
  8579  0495                     	;# 
  8580  0496                     	;# 
  8581  0497                     	;# 
  8582  0498                     	;# 
  8583  0499                     	;# 
  8584  049A                     	;# 
  8585  049B                     	;# 
  8586  049C                     	;# 
  8587  049D                     	;# 
  8588  050C                     	;# 
  8589  050C                     	;# 
  8590  050D                     	;# 
  8591  050E                     	;# 
  8592  050F                     	;# 
  8593  050F                     	;# 
  8594  0510                     	;# 
  8595  0511                     	;# 
  8596  0512                     	;# 
  8597  0512                     	;# 
  8598  0513                     	;# 
  8599  0514                     	;# 
  8600  0515                     	;# 
  8601  0515                     	;# 
  8602  0516                     	;# 
  8603  0517                     	;# 
  8604  0518                     	;# 
  8605  0519                     	;# 
  8606  051A                     	;# 
  8607  051B                     	;# 
  8608  051C                     	;# 
  8609  051D                     	;# 
  8610  058C                     	;# 
  8611  058C                     	;# 
  8612  058D                     	;# 
  8613  058E                     	;# 
  8614  058F                     	;# 
  8615  058F                     	;# 
  8616  0590                     	;# 
  8617  0591                     	;# 
  8618  0592                     	;# 
  8619  0593                     	;# 
  8620  060C                     	;# 
  8621  060D                     	;# 
  8622  060E                     	;# 
  8623  060F                     	;# 
  8624  0610                     	;# 
  8625  0611                     	;# 
  8626  0612                     	;# 
  8627  0613                     	;# 
  8628  0614                     	;# 
  8629  0616                     	;# 
  8630  0617                     	;# 
  8631  0618                     	;# 
  8632  0619                     	;# 
  8633  061A                     	;# 
  8634  061B                     	;# 
  8635  061C                     	;# 
  8636  061D                     	;# 
  8637  061E                     	;# 
  8638  068C                     	;# 
  8639  068D                     	;# 
  8640  068E                     	;# 
  8641  068F                     	;# 
  8642  0690                     	;# 
  8643  0691                     	;# 
  8644  0692                     	;# 
  8645  0693                     	;# 
  8646  0694                     	;# 
  8647  070C                     	;# 
  8648  070D                     	;# 
  8649  070E                     	;# 
  8650  070F                     	;# 
  8651  0710                     	;# 
  8652  0711                     	;# 
  8653  0712                     	;# 
  8654  0713                     	;# 
  8655  0714                     	;# 
  8656  0716                     	;# 
  8657  0717                     	;# 
  8658  0718                     	;# 
  8659  0719                     	;# 
  8660  071A                     	;# 
  8661  071B                     	;# 
  8662  071C                     	;# 
  8663  071D                     	;# 
  8664  071E                     	;# 
  8665  0796                     	;# 
  8666  0797                     	;# 
  8667  0798                     	;# 
  8668  0799                     	;# 
  8669  079A                     	;# 
  8670  079B                     	;# 
  8671  080C                     	;# 
  8672  080D                     	;# 
  8673  080E                     	;# 
  8674  080F                     	;# 
  8675  0810                     	;# 
  8676  0811                     	;# 
  8677  0812                     	;# 
  8678  0813                     	;# 
  8679  0814                     	;# 
  8680  081A                     	;# 
  8681  081B                     	;# 
  8682  081C                     	;# 
  8683  081D                     	;# 
  8684  081E                     	;# 
  8685  081F                     	;# 
  8686  088C                     	;# 
  8687  088D                     	;# 
  8688  088E                     	;# 
  8689  088F                     	;# 
  8690  0890                     	;# 
  8691  0891                     	;# 
  8692  0892                     	;# 
  8693  0893                     	;# 
  8694  0895                     	;# 
  8695  0896                     	;# 
  8696  0897                     	;# 
  8697  0898                     	;# 
  8698  0899                     	;# 
  8699  089A                     	;# 
  8700  089B                     	;# 
  8701  090C                     	;# 
  8702  090E                     	;# 
  8703  090F                     	;# 
  8704  091F                     	;# 
  8705  091F                     	;# 
  8706  098F                     	;# 
  8707  098F                     	;# 
  8708  0990                     	;# 
  8709  0991                     	;# 
  8710  0992                     	;# 
  8711  0993                     	;# 
  8712  0994                     	;# 
  8713  0995                     	;# 
  8714  0996                     	;# 
  8715  0997                     	;# 
  8716  0E0F                     	;# 
  8717  0E10                     	;# 
  8718  0E11                     	;# 
  8719  0E12                     	;# 
  8720  0E13                     	;# 
  8721  0E14                     	;# 
  8722  0E15                     	;# 
  8723  0E16                     	;# 
  8724  0E17                     	;# 
  8725  0E18                     	;# 
  8726  0E19                     	;# 
  8727  0E1A                     	;# 
  8728  0E1B                     	;# 
  8729  0E1C                     	;# 
  8730  0E1D                     	;# 
  8731  0E1E                     	;# 
  8732  0E1F                     	;# 
  8733  0E20                     	;# 
  8734  0E21                     	;# 
  8735  0E22                     	;# 
  8736  0E23                     	;# 
  8737  0E24                     	;# 
  8738  0E25                     	;# 
  8739  0E26                     	;# 
  8740  0E27                     	;# 
  8741  0E28                     	;# 
  8742  0E29                     	;# 
  8743  0E2A                     	;# 
  8744  0E2B                     	;# 
  8745  0E2C                     	;# 
  8746  0E2D                     	;# 
  8747  0E2E                     	;# 
  8748  0E2F                     	;# 
  8749  0E30                     	;# 
  8750  0E31                     	;# 
  8751  0E32                     	;# 
  8752  0E33                     	;# 
  8753  0E34                     	;# 
  8754  0E35                     	;# 
  8755  0E36                     	;# 
  8756  0E37                     	;# 
  8757  0E8F                     	;# 
  8758  0E90                     	;# 
  8759  0E91                     	;# 
  8760  0E92                     	;# 
  8761  0E93                     	;# 
  8762  0E94                     	;# 
  8763  0E95                     	;# 
  8764  0E96                     	;# 
  8765  0E97                     	;# 
  8766  0E9C                     	;# 
  8767  0E9D                     	;# 
  8768  0E9E                     	;# 
  8769  0EA1                     	;# 
  8770  0EA2                     	;# 
  8771  0EA3                     	;# 
  8772  0EA4                     	;# 
  8773  0EA5                     	;# 
  8774  0EA9                     	;# 
  8775  0EAA                     	;# 
  8776  0EAB                     	;# 
  8777  0EAC                     	;# 
  8778  0EB1                     	;# 
  8779  0EB2                     	;# 
  8780  0EB3                     	;# 
  8781  0EB8                     	;# 
  8782  0EB9                     	;# 
  8783  0EBA                     	;# 
  8784  0EBB                     	;# 
  8785  0EBC                     	;# 
  8786  0EBD                     	;# 
  8787  0EBE                     	;# 
  8788  0EC3                     	;# 
  8789  0EC5                     	;# 
  8790  0EC6                     	;# 
  8791  0EC7                     	;# 
  8792  0EC8                     	;# 
  8793  0EC9                     	;# 
  8794  0ECA                     	;# 
  8795  0ECB                     	;# 
  8796  0ECC                     	;# 
  8797  0F10                     	;# 
  8798  0F11                     	;# 
  8799  0F12                     	;# 
  8800  0F13                     	;# 
  8801  0F14                     	;# 
  8802  0F15                     	;# 
  8803  0F16                     	;# 
  8804  0F17                     	;# 
  8805  0F18                     	;# 
  8806  0F19                     	;# 
  8807  0F1A                     	;# 
  8808  0F1B                     	;# 
  8809  0F1C                     	;# 
  8810  0F1D                     	;# 
  8811  0F1E                     	;# 
  8812  0F1F                     	;# 
  8813  0F20                     	;# 
  8814  0F21                     	;# 
  8815  0F22                     	;# 
  8816  0F23                     	;# 
  8817  0F24                     	;# 
  8818  0F25                     	;# 
  8819  0F26                     	;# 
  8820  0F27                     	;# 
  8821  0F28                     	;# 
  8822  0F29                     	;# 
  8823  0F2A                     	;# 
  8824  0F2B                     	;# 
  8825  0F2C                     	;# 
  8826  0F2D                     	;# 
  8827  0F2E                     	;# 
  8828  0F2F                     	;# 
  8829  0F30                     	;# 
  8830  0F31                     	;# 
  8831  0F32                     	;# 
  8832  0F38                     	;# 
  8833  0F39                     	;# 
  8834  0F3A                     	;# 
  8835  0F3B                     	;# 
  8836  0F3C                     	;# 
  8837  0F3D                     	;# 
  8838  0F3E                     	;# 
  8839  0F3F                     	;# 
  8840  0F40                     	;# 
  8841  0F41                     	;# 
  8842  0F43                     	;# 
  8843  0F44                     	;# 
  8844  0F45                     	;# 
  8845  0F46                     	;# 
  8846  0F47                     	;# 
  8847  0F48                     	;# 
  8848  0F49                     	;# 
  8849  0F4A                     	;# 
  8850  0F4B                     	;# 
  8851  0F4C                     	;# 
  8852  0F4E                     	;# 
  8853  0F4F                     	;# 
  8854  0F50                     	;# 
  8855  0F51                     	;# 
  8856  0F52                     	;# 
  8857  0F53                     	;# 
  8858  0F54                     	;# 
  8859  0F55                     	;# 
  8860  0F56                     	;# 
  8861  0F57                     	;# 
  8862  0F59                     	;# 
  8863  0F5A                     	;# 
  8864  0F5B                     	;# 
  8865  0F5C                     	;# 
  8866  0F5D                     	;# 
  8867  0F61                     	;# 
  8868  0F62                     	;# 
  8869  0F64                     	;# 
  8870  0F65                     	;# 
  8871  0F66                     	;# 
  8872  0F67                     	;# 
  8873  0F68                     	;# 
  8874  0F69                     	;# 
  8875  0F6A                     	;# 
  8876  0F6B                     	;# 
  8877  0F6C                     	;# 
  8878  0F6D                     	;# 
  8879  0FE4                     	;# 
  8880  0FE5                     	;# 
  8881  0FE6                     	;# 
  8882  0FE7                     	;# 
  8883  0FE8                     	;# 
  8884  0FE9                     	;# 
  8885  0FEA                     	;# 
  8886  0FEB                     	;# 
  8887  0FED                     	;# 
  8888  0FEE                     	;# 
  8889  0FEF                     	;# 
  8890                           
  8891                           	psect	idataBANK0
  8892  0D90                     __pidataBANK0:	
  8893                           
  8894                           ;initializer for _mode_field_subfield
  8895  0D90  34FF               	retlw	255
  8896  0D91  34FF               	retlw	255
  8897  0D92  34FF               	retlw	255
  8898  0D93  34FF               	retlw	255
  8899                           
  8900                           ;initializer for _tala
  8901  0D94  3403               	retlw	3
  8902                           
  8903                           ;initializer for _pmon
  8904  0D95  3405               	retlw	5
  8905                           
  8906                           ;initializer for _nreg
  8907  0D96  341E               	retlw	30
  8908                           
  8909                           	psect	stringtext1
  8910  075C                     __pstringtext1:	
  8911  075C                     _fsmStateTable:	
  8912  075C  3430               	retlw	low _do_I2C_IDLE
  8913  075D  340D               	retlw	high _do_I2C_IDLE
  8914  075E  34BF               	retlw	low _do_I2C_SEND_ADR_READ
  8915  075F  340D               	retlw	high _do_I2C_SEND_ADR_READ
  8916  0760  34A7               	retlw	low _do_I2C_SEND_ADR_WRITE
  8917  0761  340D               	retlw	high _do_I2C_SEND_ADR_WRITE
  8918  0762  349D               	retlw	low _do_I2C_TX
  8919  0763  3403               	retlw	high _do_I2C_TX
  8920  0764  34D8               	retlw	low _do_I2C_RX
  8921  0765  3404               	retlw	high _do_I2C_RX
  8922  0766  3482               	retlw	low _do_I2C_RCEN
  8923  0767  340D               	retlw	high _do_I2C_RCEN
  8924  0768  3431               	retlw	low _do_I2C_TX_EMPTY
  8925  0769  3406               	retlw	high _do_I2C_TX_EMPTY
  8926  076A  3435               	retlw	low _do_I2C_SEND_RESTART_READ
  8927  076B  340D               	retlw	high _do_I2C_SEND_RESTART_READ
  8928  076C  343A               	retlw	low _do_I2C_SEND_RESTART_WRITE
  8929  076D  340D               	retlw	high _do_I2C_SEND_RESTART_WRITE
  8930  076E  343F               	retlw	low _do_I2C_SEND_RESTART
  8931  076F  340D               	retlw	high _do_I2C_SEND_RESTART
  8932  0770  3444               	retlw	low _do_I2C_SEND_STOP
  8933  0771  340D               	retlw	high _do_I2C_SEND_STOP
  8934  0772  3449               	retlw	low _do_I2C_DO_ACK
  8935  0773  340D               	retlw	high _do_I2C_DO_ACK
  8936  0774  344E               	retlw	low _do_I2C_DO_NACK_STOP
  8937  0775  340D               	retlw	high _do_I2C_DO_NACK_STOP
  8938  0776  3453               	retlw	low _do_I2C_DO_NACK_RESTART
  8939  0777  340D               	retlw	high _do_I2C_DO_NACK_RESTART
  8940  0778  349F               	retlw	low _do_I2C_RESET
  8941  0779  340D               	retlw	high _do_I2C_RESET
  8942  077A  34BE               	retlw	low _do_I2C_DO_ADDRESS_NACK
  8943  077B  3406               	retlw	high _do_I2C_DO_ADDRESS_NACK
  8944  077C                     __end_of_fsmStateTable:	
  8945                           
  8946                           	psect	nvBANK0
  8947  005B                     __pnvBANK0:	
  8948  005B                     _TMR0_InterruptHandler:	
  8949  005B                     	ds	2
  8950  005D                     _TMR2_InterruptHandler:	
  8951  005D                     	ds	2
  8952  005F                     _TMR1_InterruptHandler:	
  8953  005F                     	ds	2
  8954  0061                     _timer1ReloadVal:	
  8955  0061                     	ds	2
  8956  0063                     _INT_InterruptHandler:	
  8957  0063                     	ds	2
  8958  001E                     _T0CON0bits	set	30
  8959  001E                     _T0CON0	set	30
  8960  001C                     _TMR0L	set	28
  8961  001D                     _TMR0H	set	29
  8962  001F                     _T0CON1	set	31
  8963  0013                     _TRISCbits	set	19
  8964  000E                     _PORTCbits	set	14
  8965  000D                     _PORTBbits	set	13
  8966  0016                     _LATAbits	set	22
  8967  0014                     _TRISD	set	20
  8968  0013                     _TRISC	set	19
  8969  0012                     _TRISB	set	18
  8970  0011                     _TRISA	set	17
  8971  0015                     _TRISE	set	21
  8972  0018                     _LATC	set	24
  8973  0017                     _LATB	set	23
  8974  0016                     _LATA	set	22
  8975  0019                     _LATD	set	25
  8976  001A                     _LATE	set	26
  8977  000B                     _INTCONbits	set	11
  8978  0094                     _ADCON1bits	set	148
  8979  008E                     _ADPREVL	set	142
  8980  008F                     _ADPREVH	set	143
  8981  0097                     _ADSTATbits	set	151
  8982  0090                     _ADACCL	set	144
  8983  0091                     _ADACCH	set	145
  8984  0095                     _ADCON2bits	set	149
  8985  009C                     _ADPRE	set	156
  8986  0096                     _ADCON3bits	set	150
  8987  008C                     _ADRESL	set	140
  8988  008D                     _ADRESH	set	141
  8989  0093                     _ADCON0bits	set	147
  8990  009D                     _ADACQ	set	157
  8991  0093                     _ADCON0	set	147
  8992  0098                     _ADCLK	set	152
  8993  0099                     _ADACT	set	153
  8994  009A                     _ADREF	set	154
  8995  0097                     _ADSTAT	set	151
  8996  0096                     _ADCON3	set	150
  8997  0095                     _ADCON2	set	149
  8998  0094                     _ADCON1	set	148
  8999  009B                     _ADCAP	set	155
  9000  009E                     _ADPCH	set	158
  9001  0116                     _ADERRL	set	278
  9002  0117                     _ADERRH	set	279
  9003  0114                     _ADFLTRL	set	276
  9004  0115                     _ADFLTRH	set	277
  9005  010C                     _ADCNT	set	268
  9006  010D                     _ADRPT	set	269
  9007  0113                     _ADSTPTH	set	275
  9008  0112                     _ADSTPTL	set	274
  9009  0111                     _ADUTHH	set	273
  9010  0110                     _ADUTHL	set	272
  9011  010F                     _ADLTHH	set	271
  9012  010E                     _ADLTHL	set	270
  9013  018F                     _SSP1STATbits	set	399
  9014  018E                     _SSP1MSK	set	398
  9015  018C                     _SSP1BUF	set	396
  9016  0191                     _SSP1CON2bits	set	401
  9017  018D                     _SSP1ADD	set	397
  9018  0191                     _SSP1CON2	set	401
  9019  0190                     _SSP1CON1	set	400
  9020  018F                     _SSP1STAT	set	399
  9021  0190                     _SSP1CON1bits	set	400
  9022  021F                     _CCPTMRS1bits	set	543
  9023  020F                     _T1GCONbits	set	527
  9024  020E                     _T1CONbits	set	526
  9025  020E                     _T1CON	set	526
  9026  020C                     _TMR1L	set	524
  9027  020D                     _TMR1H	set	525
  9028  0211                     _T1CLK	set	529
  9029  0210                     _T1GATE	set	528
  9030  020F                     _T1GCON	set	527
  9031  028D                     _PR2	set	653
  9032  028C                     _TMR2	set	652
  9033  028E                     _T2CONbits	set	654
  9034  0291                     _T2RSTbits	set	657
  9035  028F                     _T2HLTbits	set	655
  9036  028E                     _T2CON	set	654
  9037  028C                     _T2TMR	set	652
  9038  028D                     _T2PR	set	653
  9039  0291                     _T2RST	set	657
  9040  028F                     _T2HLT	set	655
  9041  0290                     _T2CLKCON	set	656
  9042  038C                     _PWM6DCL	set	908
  9043  038D                     _PWM6DCH	set	909
  9044  038E                     _PWM6CON	set	910
  9045  0710                     _PIR4bits	set	1808
  9046  071A                     _PIE4bits	set	1818
  9047  070F                     _PIR3bits	set	1807
  9048  0719                     _PIE3bits	set	1817
  9049  0716                     _PIE0bits	set	1814
  9050  070C                     _PIR0bits	set	1804
  9051  079B                     _PMD5	set	1947
  9052  079A                     _PMD4	set	1946
  9053  0799                     _PMD3	set	1945
  9054  0798                     _PMD2	set	1944
  9055  0797                     _PMD1	set	1943
  9056  0796                     _PMD0	set	1942
  9057  081F                     _NVMCON2	set	2079
  9058  081C                     _NVMDATL	set	2076
  9059  081D                     _NVMDATH	set	2077
  9060  081E                     _NVMCON1bits	set	2078
  9061  081B                     _NVMADRH	set	2075
  9062  081A                     _NVMADRL	set	2074
  9063  0892                     _OSCTUNE	set	2194
  9064  0893                     _OSCFRQ	set	2195
  9065  0891                     _OSCEN	set	2193
  9066  088F                     _OSCCON3	set	2191
  9067  088D                     _OSCCON1	set	2189
  9068  0EC6                     _SSP1DATPPS	set	3782
  9069  0EC5                     _SSP1CLKPPS	set	3781
  9070  0E90                     _INTPPS	set	3728
  9071  0F44                     _WPUBbits	set	3908
  9072  0F16                     _RA6PPS	set	3862
  9073  0F24                     _RC4PPS	set	3876
  9074  0F23                     _RC3PPS	set	3875
  9075  0F68                     _INLVLE	set	3944
  9076  0F5D                     _INLVLD	set	3933
  9077  0F52                     _INLVLC	set	3922
  9078  0F47                     _INLVLB	set	3911
  9079  0F3C                     _INLVLA	set	3900
  9080  0F67                     _SLRCONE	set	3943
  9081  0F5C                     _SLRCOND	set	3932
  9082  0F51                     _SLRCONC	set	3921
  9083  0F46                     _SLRCONB	set	3910
  9084  0F3B                     _SLRCONA	set	3899
  9085  0F5B                     _ODCOND	set	3931
  9086  0F50                     _ODCONC	set	3920
  9087  0F45                     _ODCONB	set	3909
  9088  0F3A                     _ODCONA	set	3898
  9089  0F66                     _ODCONE	set	3942
  9090  0F4F                     _WPUC	set	3919
  9091  0F39                     _WPUA	set	3897
  9092  0F44                     _WPUB	set	3908
  9093  0F65                     _WPUE	set	3941
  9094  0F5A                     _WPUD	set	3930
  9095  0F38                     _ANSELA	set	3896
  9096  0F64                     _ANSELE	set	3940
  9097  0F43                     _ANSELB	set	3907
  9098  0F4E                     _ANSELC	set	3918
  9099  0F59                     _ANSELD	set	3929
  9100  7A7C                     _WPUC4	set	31356
  9101  7A7B                     _WPUC3	set	31355
  9102                           
  9103                           ; #config settings
  9104  0000                     
  9105                           	psect	cinit
  9106  005D                     start_initialization:	
  9107  005D                     __initialization:	
  9108                           
  9109                           ; Initialize objects allocated to BANK0
  9110  005D  3090               	movlw	low __pidataBANK0
  9111  005E  0084               	movwf	4
  9112  005F  308D               	movlw	(high __pidataBANK0)| (0+128)
  9113  0060  0085               	movwf	5
  9114  0061  3065               	movlw	low __pdataBANK0
  9115  0062  0086               	movwf	6
  9116  0063  3000               	movlw	high __pdataBANK0
  9117  0064  0087               	movwf	7
  9118  0065  3007               	movlw	7
  9119  0066  318D  257C  3180   	fcall	init_ram
  9120                           
  9121                           ; Clear objects allocated to COMMON
  9122  0069  01FD               	clrf	__pbssCOMMON& (0+127)
  9123                           
  9124                           ; Clear objects allocated to BANK0
  9125  006A  3020               	movlw	low __pbssBANK0
  9126  006B  0084               	movwf	4
  9127  006C  3000               	movlw	high __pbssBANK0
  9128  006D  0085               	movwf	5
  9129  006E  3022               	movlw	34
  9130  006F  318D  2576  3180   	fcall	clear_ram0
  9131                           
  9132                           ; Clear objects allocated to BANK1
  9133  0072  30A0               	movlw	low __pbssBANK1
  9134  0073  0084               	movwf	4
  9135  0074  3000               	movlw	high __pbssBANK1
  9136  0075  0085               	movwf	5
  9137  0076  3022               	movlw	34
  9138  0077  318D  2576  3180   	fcall	clear_ram0
  9139  007A                     end_of_initialization:	
  9140                           ;End of C runtime variable initialization code
  9141                           
  9142  007A                     __end_of__initialization:	
  9143  007A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9144  007B  0020               	movlb	0
  9145  007C  3180  287E         	ljmp	_main	;jump to C main() function
  9146                           
  9147                           	psect	bssCOMMON
  9148  007D                     __pbssCOMMON:	
  9149  007D                     _config_mode:	
  9150  007D                     	ds	1
  9151                           
  9152                           	psect	bssBANK0
  9153  0020                     __pbssBANK0:	
  9154  0020                     _lum_threshold:	
  9155  0020                     	ds	2
  9156  0022                     _lum_bin:	
  9157  0022                     	ds	2
  9158  0024                     _duty_cycle:	
  9159  0024                     	ds	2
  9160  0026                     _convertedValue:	
  9161  0026                     	ds	2
  9162  0028                     _min_units:	
  9163  0028                     	ds	2
  9164  002A                     _min_tens:	
  9165  002A                     	ds	2
  9166  002C                     _hours_units:	
  9167  002C                     	ds	2
  9168  002E                     _hours_tens:	
  9169  002E                     	ds	2
  9170  0030                     _value:	
  9171  0030                     	ds	2
  9172  0032                     _i2c1_driver_i2cISR:	
  9173  0032                     	ds	2
  9174  0034                     _i2c1_driver_busCollisionISR:	
  9175  0034                     	ds	2
  9176  0036                     _alaf:	
  9177  0036                     	ds	1
  9178  0037                     _temp:	
  9179  0037                     	ds	1
  9180  0038                     _alarm:	
  9181  0038                     	ds	1
  9182  0039                     _set_mode:	
  9183  0039                     	ds	1
  9184  003A                     _last_ms2:	
  9185  003A                     	ds	1
  9186  003B                     _last_ms:	
  9187  003B                     	ds	1
  9188  003C                     _clkms:	
  9189  003C                     	ds	1
  9190  003D                     _seg:	
  9191  003D                     	ds	1
  9192  003E                     _clkm:	
  9193  003E                     	ds	1
  9194  003F                     _clkh:	
  9195  003F                     	ds	1
  9196  0040                     _nreg_pt:	
  9197  0040                     	ds	1
  9198  0041                     _nreg_init:	
  9199  0041                     	ds	1
  9200                           
  9201                           	psect	dataBANK0
  9202  0065                     __pdataBANK0:	
  9203  0065                     _mode_field_subfield:	
  9204  0065                     	ds	4
  9205  0069                     _tala:	
  9206  0069                     	ds	1
  9207  006A                     _pmon:	
  9208  006A                     	ds	1
  9209  006B                     _nreg:	
  9210  006B                     	ds	1
  9211                           
  9212                           	psect	bssBANK1
  9213  00A0                     __pbssBANK1:	
  9214  00A0                     _i2c_status:	
  9215  00A0                     	ds	29
  9216  00BD                     _ring_byte:	
  9217  00BD                     	ds	5
  9218                           
  9219                           	psect	inittext
  9220  0D7C                     init_ram:	
  9221  0D7C  00FE               	movwf	btemp
  9222  0D7D                     initloop:	
  9223  0D7D  0012               	moviw fsr0++
  9224  0D7E  001E               	movwi fsr1++
  9225  0D7F  0BFE               	decfsz	btemp,f
  9226  0D80  2D7D               	goto	initloop
  9227  0D81  3400               	retlw	0
  9228                           
  9229                           	psect	clrtext
  9230  0D76                     clear_ram0:	
  9231                           ;	Called with FSR0 containing the base address, and
  9232                           ;	WREG with the size to clear
  9233                           
  9234  0D76  0064               	clrwdt	;clear the watchdog before getting into this loop
  9235  0D77                     clrloop0:	
  9236  0D77  0180               	clrf	0	;clear RAM location pointed to by FSR
  9237  0D78  3101               	addfsr 0,1
  9238  0D79  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  9239  0D7A  2D77               	goto	clrloop0	;have we reached the end yet?
  9240  0D7B  3400               	retlw	0	;all done for this memory range, return
  9241                           
  9242                           	psect	cstackBANK1
  9243  00C2                     __pcstackBANK1:	
  9244  00C2                     	ds	2
  9245  00C4                     _main$2289:	
  9246                           
  9247                           ; 1 bytes @ 0x2
  9248  00C4                     	ds	1
  9249                           
  9250                           	psect	cstackCOMMON
  9251  0070                     __pcstackCOMMON:	
  9252  0070                     ?_i2c1_driver_isNACK:	
  9253  0070                     ?_setCallBack:	
  9254                           ; 1 bit 
  9255                           
  9256  0070                     ?_mssp1_clearIRQ:	
  9257                           ; 1 bytes @ 0x0
  9258                           
  9259  0070                     ??_mssp1_clearIRQ:	
  9260                           ; 1 bytes @ 0x0
  9261                           
  9262  0070                     ?_i2c_busCollisionISR:	
  9263                           ; 1 bytes @ 0x0
  9264                           
  9265  0070                     ??_i2c_busCollisionISR:	
  9266                           ; 1 bytes @ 0x0
  9267                           
  9268  0070                     ?_i2c_ISR:	
  9269                           ; 1 bytes @ 0x0
  9270                           
  9271  0070                     ?_i2c1_driver_resetBus:	
  9272                           ; 1 bytes @ 0x0
  9273                           
  9274  0070                     ??_i2c1_driver_resetBus:	
  9275                           ; 1 bytes @ 0x0
  9276                           
  9277  0070                     ?_i2c1_driver_restart:	
  9278                           ; 1 bytes @ 0x0
  9279                           
  9280  0070                     ??_i2c1_driver_restart:	
  9281                           ; 1 bytes @ 0x0
  9282                           
  9283  0070                     ?_i2c1_driver_stop:	
  9284                           ; 1 bytes @ 0x0
  9285                           
  9286  0070                     ??_i2c1_driver_stop:	
  9287                           ; 1 bytes @ 0x0
  9288                           
  9289  0070                     ?_i2c1_driver_TXData:	
  9290                           ; 1 bytes @ 0x0
  9291                           
  9292  0070                     ??_i2c1_driver_TXData:	
  9293                           ; 1 bytes @ 0x0
  9294                           
  9295  0070                     ?_i2c1_driver_startRX:	
  9296                           ; 1 bytes @ 0x0
  9297                           
  9298  0070                     ??_i2c1_driver_startRX:	
  9299                           ; 1 bytes @ 0x0
  9300                           
  9301  0070                     ?_i2c1_driver_sendACK:	
  9302                           ; 1 bytes @ 0x0
  9303                           
  9304  0070                     ??_i2c1_driver_sendACK:	
  9305                           ; 1 bytes @ 0x0
  9306                           
  9307  0070                     ?_i2c1_driver_sendNACK:	
  9308                           ; 1 bytes @ 0x0
  9309                           
  9310  0070                     ??_i2c1_driver_sendNACK:	
  9311                           ; 1 bytes @ 0x0
  9312                           
  9313  0070                     ??_i2c1_driver_isNACK:	
  9314                           ; 1 bytes @ 0x0
  9315                           
  9316  0070                     ?_i2c1_driver_getRXData:	
  9317                           ; 1 bytes @ 0x0
  9318                           
  9319  0070                     ??_i2c1_driver_getRXData:	
  9320                           ; 1 bytes @ 0x0
  9321                           
  9322  0070                     ?_mssp1_setIRQ:	
  9323                           ; 1 bytes @ 0x0
  9324                           
  9325  0070                     ??_mssp1_setIRQ:	
  9326                           ; 1 bytes @ 0x0
  9327                           
  9328  0070                     ?_i2c1_driver_clearBusCollision:	
  9329                           ; 1 bytes @ 0x0
  9330                           
  9331  0070                     ??_i2c1_driver_clearBusCollision:	
  9332                           ; 1 bytes @ 0x0
  9333                           
  9334  0070                     ?_INT_CallBack:	
  9335                           ; 1 bytes @ 0x0
  9336                           
  9337  0070                     ?_TMR0_ISR:	
  9338                           ; 1 bytes @ 0x0
  9339                           
  9340  0070                     ?_TMR1_ISR:	
  9341                           ; 1 bytes @ 0x0
  9342                           
  9343  0070                     ?_TMR2_ISR:	
  9344                           ; 1 bytes @ 0x0
  9345                           
  9346  0070                     ?_PMD_Initialize:	
  9347                           ; 1 bytes @ 0x0
  9348                           
  9349  0070                     ?_PIN_MANAGER_Initialize:	
  9350                           ; 1 bytes @ 0x0
  9351                           
  9352  0070                     ?_OSCILLATOR_Initialize:	
  9353                           ; 1 bytes @ 0x0
  9354                           
  9355  0070                     ?_PWM6_Initialize:	
  9356                           ; 1 bytes @ 0x0
  9357                           
  9358  0070                     ?_ADCC_Initialize:	
  9359                           ; 1 bytes @ 0x0
  9360                           
  9361  0070                     ?_TMR2_Initialize:	
  9362                           ; 1 bytes @ 0x0
  9363                           
  9364  0070                     ?_TMR1_Initialize:	
  9365                           ; 1 bytes @ 0x0
  9366                           
  9367  0070                     ?_TMR0_Initialize:	
  9368                           ; 1 bytes @ 0x0
  9369                           
  9370  0070                     ?_TMR1_DefaultInterruptHandler:	
  9371                           ; 1 bytes @ 0x0
  9372                           
  9373  0070                     ??_TMR1_DefaultInterruptHandler:	
  9374                           ; 1 bytes @ 0x0
  9375                           
  9376  0070                     ?_TMR2_DefaultInterruptHandler:	
  9377                           ; 1 bytes @ 0x0
  9378                           
  9379  0070                     ??_TMR2_DefaultInterruptHandler:	
  9380                           ; 1 bytes @ 0x0
  9381                           
  9382  0070                     ?_checkDebounceSW1:	
  9383                           ; 1 bytes @ 0x0
  9384                           
  9385  0070                     ?_TMR0_StopTimer:	
  9386                           ; 1 bytes @ 0x0
  9387                           
  9388  0070                     ??_TMR0_StopTimer:	
  9389                           ; 1 bytes @ 0x0
  9390                           
  9391  0070                     ?_handler_clock_hms:	
  9392                           ; 1 bytes @ 0x0
  9393                           
  9394  0070                     ??_handler_clock_hms:	
  9395                           ; 1 bytes @ 0x0
  9396                           
  9397  0070                     ?_handler_clock_ms:	
  9398                           ; 1 bytes @ 0x0
  9399                           
  9400  0070                     ??_handler_clock_ms:	
  9401                           ; 1 bytes @ 0x0
  9402                           
  9403  0070                     ?_recoverData:	
  9404                           ; 1 bytes @ 0x0
  9405                           
  9406  0070                     ?_cksum_w:	
  9407                           ; 1 bytes @ 0x0
  9408                           
  9409  0070                     ?_TMR0_StartTimer:	
  9410                           ; 1 bytes @ 0x0
  9411                           
  9412  0070                     ?_config_routine:	
  9413                           ; 1 bytes @ 0x0
  9414                           
  9415  0070                     ?_all_LED:	
  9416                           ; 1 bytes @ 0x0
  9417                           
  9418  0070                     ?_mod1_LED:	
  9419                           ; 1 bytes @ 0x0
  9420                           
  9421  0070                     ?_mod2_LED:	
  9422                           ; 1 bytes @ 0x0
  9423                           
  9424  0070                     ?_mod3_LED:	
  9425                           ; 1 bytes @ 0x0
  9426                           
  9427  0070                     ?_mod4_LED:	
  9428                           ; 1 bytes @ 0x0
  9429                           
  9430  0070                     ?_checkDebounceSW2:	
  9431                           ; 1 bytes @ 0x0
  9432                           
  9433  0070                     ?_mode_select_LED:	
  9434                           ; 1 bytes @ 0x0
  9435                           
  9436  0070                     ?_clock_subfields:	
  9437                           ; 1 bytes @ 0x0
  9438                           
  9439  0070                     ?_cksum:	
  9440                           ; 1 bytes @ 0x0
  9441                           
  9442  0070                     ?_reset_recv:	
  9443                           ; 1 bytes @ 0x0
  9444                           
  9445  0070                     ?_TMR0_DefaultInterruptHandler:	
  9446                           ; 1 bytes @ 0x0
  9447                           
  9448  0070                     ??_TMR0_DefaultInterruptHandler:	
  9449                           ; 1 bytes @ 0x0
  9450                           
  9451  0070                     ?_i2c_setBuffer:	
  9452                           ; 1 bytes @ 0x0
  9453                           
  9454  0070                     ?_do_I2C_RESET:	
  9455                           ; 1 bytes @ 0x0
  9456                           
  9457  0070                     ??_do_I2C_RESET:	
  9458                           ; 1 bytes @ 0x0
  9459                           
  9460  0070                     ?_do_I2C_IDLE:	
  9461                           ; 1 bytes @ 0x0
  9462                           
  9463  0070                     ??_do_I2C_IDLE:	
  9464                           ; 1 bytes @ 0x0
  9465                           
  9466  0070                     ?_do_I2C_SEND_RESTART_READ:	
  9467                           ; 1 bytes @ 0x0
  9468                           
  9469  0070                     ??_do_I2C_SEND_RESTART_READ:	
  9470                           ; 1 bytes @ 0x0
  9471                           
  9472  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  9473                           ; 1 bytes @ 0x0
  9474                           
  9475  0070                     ??_do_I2C_SEND_RESTART_WRITE:	
  9476                           ; 1 bytes @ 0x0
  9477                           
  9478  0070                     ?_do_I2C_SEND_RESTART:	
  9479                           ; 1 bytes @ 0x0
  9480                           
  9481  0070                     ??_do_I2C_SEND_RESTART:	
  9482                           ; 1 bytes @ 0x0
  9483                           
  9484  0070                     ?_do_I2C_SEND_STOP:	
  9485                           ; 1 bytes @ 0x0
  9486                           
  9487  0070                     ??_do_I2C_SEND_STOP:	
  9488                           ; 1 bytes @ 0x0
  9489                           
  9490  0070                     ?_do_I2C_SEND_ADR_READ:	
  9491                           ; 1 bytes @ 0x0
  9492                           
  9493  0070                     ??_do_I2C_SEND_ADR_READ:	
  9494                           ; 1 bytes @ 0x0
  9495                           
  9496  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  9497                           ; 1 bytes @ 0x0
  9498                           
  9499  0070                     ?_do_I2C_RCEN:	
  9500                           ; 1 bytes @ 0x0
  9501                           
  9502  0070                     ??_do_I2C_RCEN:	
  9503                           ; 1 bytes @ 0x0
  9504                           
  9505  0070                     ?_do_I2C_DO_ACK:	
  9506                           ; 1 bytes @ 0x0
  9507                           
  9508  0070                     ??_do_I2C_DO_ACK:	
  9509                           ; 1 bytes @ 0x0
  9510                           
  9511  0070                     ?_do_I2C_DO_NACK_STOP:	
  9512                           ; 1 bytes @ 0x0
  9513                           
  9514  0070                     ??_do_I2C_DO_NACK_STOP:	
  9515                           ; 1 bytes @ 0x0
  9516                           
  9517  0070                     ?_do_I2C_DO_NACK_RESTART:	
  9518                           ; 1 bytes @ 0x0
  9519                           
  9520  0070                     ??_do_I2C_DO_NACK_RESTART:	
  9521                           ; 1 bytes @ 0x0
  9522                           
  9523  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  9524                           ; 1 bytes @ 0x0
  9525                           
  9526  0070                     ?_do_I2C_TX:	
  9527                           ; 1 bytes @ 0x0
  9528                           
  9529  0070                     ?_do_I2C_RX:	
  9530                           ; 1 bytes @ 0x0
  9531                           
  9532  0070                     ?_do_I2C_TX_EMPTY:	
  9533                           ; 1 bytes @ 0x0
  9534                           
  9535  0070                     ?_INT_ISR:	
  9536                           ; 1 bytes @ 0x0
  9537                           
  9538  0070                     ?_INT_DefaultInterruptHandler:	
  9539                           ; 1 bytes @ 0x0
  9540                           
  9541  0070                     ??_INT_DefaultInterruptHandler:	
  9542                           ; 1 bytes @ 0x0
  9543                           
  9544  0070                     ?_EXT_INT_Initialize:	
  9545                           ; 1 bytes @ 0x0
  9546                           
  9547  0070                     ?_INTERRUPT_InterruptManager:	
  9548                           ; 1 bytes @ 0x0
  9549                           
  9550  0070                     ?_SYSTEM_Initialize:	
  9551                           ; 1 bytes @ 0x0
  9552                           
  9553  0070                     ?_ADCC_StartConversion:	
  9554                           ; 1 bytes @ 0x0
  9555                           
  9556  0070                     ?_ADCC_IsConversionDone:	
  9557                           ; 1 bytes @ 0x0
  9558                           
  9559  0070                     ?_TMR1_WriteTimer:	
  9560                           ; 1 bytes @ 0x0
  9561                           
  9562  0070                     ?_sw1_EXT:	
  9563                           ; 1 bytes @ 0x0
  9564                           
  9565  0070                     ?_ISR_3s:	
  9566                           ; 1 bytes @ 0x0
  9567                           
  9568  0070                     ?_main:	
  9569                           ; 1 bytes @ 0x0
  9570                           
  9571  0070                     ?_increment_subfield:	
  9572                           ; 1 bytes @ 0x0
  9573                           
  9574  0070                     ?i1_PWM6_LoadDutyValue:	
  9575                           ; 1 bytes @ 0x0
  9576                           
  9577  0070                     ?i1_checkDebounceSW1:	
  9578                           ; 1 bytes @ 0x0
  9579                           
  9580  0070                     ??i1_checkDebounceSW1:	
  9581                           ; 1 bytes @ 0x0
  9582                           
  9583  0070                     i2c1_driver_TXData@d:	
  9584                           ; 1 bytes @ 0x0
  9585                           
  9586  0070                     i2c_setBuffer@bufferSize:	
  9587                           ; 1 bytes @ 0x0
  9588                           
  9589  0070                     setCallBack@cb:	
  9590                           ; 2 bytes @ 0x0
  9591                           
  9592  0070                     TMR1_WriteTimer@timerVal:	
  9593                           ; 2 bytes @ 0x0
  9594                           
  9595  0070                     i1PWM6_LoadDutyValue@dutyValue:	
  9596                           ; 2 bytes @ 0x0
  9597                           
  9598                           
  9599                           ; 2 bytes @ 0x0
  9600  0070                     	ds	1
  9601  0071                     ??_TMR2_ISR:	
  9602  0071                     ??_do_I2C_SEND_ADR_WRITE:	
  9603                           ; 1 bytes @ 0x1
  9604                           
  9605                           
  9606                           ; 1 bytes @ 0x1
  9607  0071                     	ds	1
  9608  0072                     ??_TMR1_ISR:	
  9609  0072                     ??_i2c_setBuffer:	
  9610                           ; 1 bytes @ 0x2
  9611                           
  9612  0072                     ??_TMR1_WriteTimer:	
  9613                           ; 1 bytes @ 0x2
  9614                           
  9615  0072                     ??i1_PWM6_LoadDutyValue:	
  9616                           ; 1 bytes @ 0x2
  9617                           
  9618  0072                     setCallBack@p:	
  9619                           ; 1 bytes @ 0x2
  9620                           
  9621                           
  9622                           ; 1 bytes @ 0x2
  9623  0072                     	ds	1
  9624  0073                     ??_setCallBack:	
  9625  0073                     i2c_setBuffer@buffer:	
  9626                           ; 1 bytes @ 0x3
  9627                           
  9628                           
  9629                           ; 1 bytes @ 0x3
  9630  0073                     	ds	1
  9631  0074                     ??_ISR_3s:	
  9632  0074                     setCallBack@idx:	
  9633                           ; 1 bytes @ 0x4
  9634                           
  9635                           
  9636                           ; 1 bytes @ 0x4
  9637  0074                     	ds	1
  9638  0075                     ??_TMR0_ISR:	
  9639  0075                     ?_i2c_setDataCompleteCallback:	
  9640                           ; 1 bytes @ 0x5
  9641                           
  9642  0075                     i2c_setDataCompleteCallback@cb:	
  9643                           ; 1 bytes @ 0x5
  9644                           
  9645                           
  9646                           ; 2 bytes @ 0x5
  9647  0075                     	ds	2
  9648  0077                     ??_sw1_EXT:	
  9649  0077                     i2c_setDataCompleteCallback@p:	
  9650                           ; 1 bytes @ 0x7
  9651                           
  9652                           
  9653                           ; 1 bytes @ 0x7
  9654  0077                     	ds	1
  9655  0078                     ??_INT_CallBack:	
  9656  0078                     ??_i2c_setDataCompleteCallback:	
  9657                           ; 1 bytes @ 0x8
  9658                           
  9659  0078                     ??_INT_ISR:	
  9660                           ; 1 bytes @ 0x8
  9661                           
  9662                           
  9663                           ; 1 bytes @ 0x8
  9664  0078                     	ds	1
  9665  0079                     ?_returnStop:	
  9666  0079                     ?_returnReset:	
  9667                           ; 1 bytes @ 0x9
  9668                           
  9669  0079                     ?_i2c_restartWrite:	
  9670                           ; 1 bytes @ 0x9
  9671                           
  9672  0079                     ?_wr1RegCompleteHandler:	
  9673                           ; 1 bytes @ 0x9
  9674                           
  9675  0079                     ?_rd1RegCompleteHandler:	
  9676                           ; 1 bytes @ 0x9
  9677                           
  9678  0079                     ?_rd2RegCompleteHandler:	
  9679                           ; 1 bytes @ 0x9
  9680                           
  9681  0079                     ?_wr2RegCompleteHandler:	
  9682                           ; 1 bytes @ 0x9
  9683                           
  9684  0079                     ?_rdBlkRegCompleteHandler:	
  9685                           ; 1 bytes @ 0x9
  9686                           
  9687  0079                     i2c_restartWrite@p:	
  9688                           ; 1 bytes @ 0x9
  9689                           
  9690  0079                     returnStop@p:	
  9691                           ; 1 bytes @ 0x9
  9692                           
  9693  0079                     returnReset@p:	
  9694                           ; 1 bytes @ 0x9
  9695                           
  9696  0079                     wr1RegCompleteHandler@p:	
  9697                           ; 1 bytes @ 0x9
  9698                           
  9699  0079                     rd1RegCompleteHandler@p:	
  9700                           ; 1 bytes @ 0x9
  9701                           
  9702  0079                     rd2RegCompleteHandler@p:	
  9703                           ; 1 bytes @ 0x9
  9704                           
  9705  0079                     wr2RegCompleteHandler@p:	
  9706                           ; 1 bytes @ 0x9
  9707                           
  9708  0079                     rdBlkRegCompleteHandler@p:	
  9709                           ; 1 bytes @ 0x9
  9710                           
  9711                           
  9712                           ; 1 bytes @ 0x9
  9713  0079                     	ds	1
  9714  007A                     ??_returnStop:	
  9715  007A                     ??_returnReset:	
  9716                           ; 1 bytes @ 0xA
  9717                           
  9718  007A                     ??_i2c_restartWrite:	
  9719                           ; 1 bytes @ 0xA
  9720                           
  9721  007A                     ??_do_I2C_DO_ADDRESS_NACK:	
  9722                           ; 1 bytes @ 0xA
  9723                           
  9724  007A                     ??_do_I2C_TX:	
  9725                           ; 1 bytes @ 0xA
  9726                           
  9727  007A                     ??_do_I2C_RX:	
  9728                           ; 1 bytes @ 0xA
  9729                           
  9730  007A                     ??_do_I2C_TX_EMPTY:	
  9731                           ; 1 bytes @ 0xA
  9732                           
  9733  007A                     ??_wr1RegCompleteHandler:	
  9734                           ; 1 bytes @ 0xA
  9735                           
  9736  007A                     ??_rd1RegCompleteHandler:	
  9737                           ; 1 bytes @ 0xA
  9738                           
  9739  007A                     ??_rd2RegCompleteHandler:	
  9740                           ; 1 bytes @ 0xA
  9741                           
  9742  007A                     ??_wr2RegCompleteHandler:	
  9743                           ; 1 bytes @ 0xA
  9744                           
  9745  007A                     ??_rdBlkRegCompleteHandler:	
  9746                           ; 1 bytes @ 0xA
  9747                           
  9748                           
  9749                           ; 1 bytes @ 0xA
  9750  007A                     	ds	3
  9751  007D                     ??_INTERRUPT_InterruptManager:	
  9752                           
  9753                           	psect	cstackBANK0
  9754  0042                     __pcstackBANK0:	
  9755                           ; 1 bytes @ 0xD
  9756                           
  9757  0042                     ??_i2c_ISR:	
  9758                           
  9759                           ; 1 bytes @ 0x0
  9760  0042                     	ds	3
  9761  0045                     ??_PMD_Initialize:	
  9762  0045                     ??_PIN_MANAGER_Initialize:	
  9763                           ; 1 bytes @ 0x3
  9764                           
  9765  0045                     ??_OSCILLATOR_Initialize:	
  9766                           ; 1 bytes @ 0x3
  9767                           
  9768  0045                     ??_PWM6_Initialize:	
  9769                           ; 1 bytes @ 0x3
  9770                           
  9771  0045                     ??_ADCC_Initialize:	
  9772                           ; 1 bytes @ 0x3
  9773                           
  9774  0045                     ?_TMR1_SetInterruptHandler:	
  9775                           ; 1 bytes @ 0x3
  9776                           
  9777  0045                     ?_TMR2_SetInterruptHandler:	
  9778                           ; 1 bytes @ 0x3
  9779                           
  9780  0045                     ??_checkDebounceSW1:	
  9781                           ; 1 bytes @ 0x3
  9782                           
  9783  0045                     ?_TMR0_SetInterruptHandler:	
  9784                           ; 1 bytes @ 0x3
  9785                           
  9786  0045                     ?_LED_bin:	
  9787                           ; 1 bytes @ 0x3
  9788                           
  9789  0045                     ??_TMR0_StartTimer:	
  9790                           ; 1 bytes @ 0x3
  9791                           
  9792  0045                     ??_checkDebounceSW2:	
  9793                           ; 1 bytes @ 0x3
  9794                           
  9795  0045                     ?_INT_SetInterruptHandler:	
  9796                           ; 1 bytes @ 0x3
  9797                           
  9798  0045                     ??_ADCC_StartConversion:	
  9799                           ; 1 bytes @ 0x3
  9800                           
  9801  0045                     ??_ADCC_IsConversionDone:	
  9802                           ; 1 bytes @ 0x3
  9803                           
  9804  0045                     ?_PWM6_LoadDutyValue:	
  9805                           ; 1 bytes @ 0x3
  9806                           
  9807  0045                     ?_DATAEE_ReadByte:	
  9808                           ; 1 bytes @ 0x3
  9809                           
  9810  0045                     ?___bmul:	
  9811                           ; 1 bytes @ 0x3
  9812                           
  9813  0045                     ?_ADCC_GetConversionResult:	
  9814                           ; 1 bytes @ 0x3
  9815                           
  9816  0045                     ADCC_StartConversion@channel:	
  9817                           ; 2 bytes @ 0x3
  9818                           
  9819  0045                     ___bmul@multiplicand:	
  9820                           ; 1 bytes @ 0x3
  9821                           
  9822  0045                     INT_SetInterruptHandler@InterruptHandler:	
  9823                           ; 1 bytes @ 0x3
  9824                           
  9825  0045                     TMR1_SetInterruptHandler@InterruptHandler:	
  9826                           ; 2 bytes @ 0x3
  9827                           
  9828  0045                     PWM6_LoadDutyValue@dutyValue:	
  9829                           ; 2 bytes @ 0x3
  9830                           
  9831  0045                     DATAEE_ReadByte@bAdd:	
  9832                           ; 2 bytes @ 0x3
  9833                           
  9834  0045                     TMR2_SetInterruptHandler@InterruptHandler:	
  9835                           ; 2 bytes @ 0x3
  9836                           
  9837  0045                     LED_bin@value:	
  9838                           ; 2 bytes @ 0x3
  9839                           
  9840  0045                     TMR0_SetInterruptHandler@InterruptHandler:	
  9841                           ; 2 bytes @ 0x3
  9842                           
  9843                           
  9844                           ; 2 bytes @ 0x3
  9845  0045                     	ds	1
  9846  0046                     ??___bmul:	
  9847                           
  9848                           ; 1 bytes @ 0x4
  9849  0046                     	ds	1
  9850  0047                     ??_TMR2_Initialize:	
  9851  0047                     ??_TMR1_Initialize:	
  9852                           ; 1 bytes @ 0x5
  9853                           
  9854  0047                     ??_TMR0_Initialize:	
  9855                           ; 1 bytes @ 0x5
  9856                           
  9857  0047                     ??_TMR1_SetInterruptHandler:	
  9858                           ; 1 bytes @ 0x5
  9859                           
  9860  0047                     ??_TMR2_SetInterruptHandler:	
  9861                           ; 1 bytes @ 0x5
  9862                           
  9863  0047                     ??_TMR0_SetInterruptHandler:	
  9864                           ; 1 bytes @ 0x5
  9865                           
  9866  0047                     ??_LED_bin:	
  9867                           ; 1 bytes @ 0x5
  9868                           
  9869  0047                     ??_cksum:	
  9870                           ; 1 bytes @ 0x5
  9871                           
  9872  0047                     ??_INT_SetInterruptHandler:	
  9873                           ; 1 bytes @ 0x5
  9874                           
  9875  0047                     ??_EXT_INT_Initialize:	
  9876                           ; 1 bytes @ 0x5
  9877                           
  9878  0047                     ??_SYSTEM_Initialize:	
  9879                           ; 1 bytes @ 0x5
  9880                           
  9881  0047                     ??_ADCC_GetConversionResult:	
  9882                           ; 1 bytes @ 0x5
  9883                           
  9884  0047                     ??_PWM6_LoadDutyValue:	
  9885                           ; 1 bytes @ 0x5
  9886                           
  9887  0047                     ??_DATAEE_ReadByte:	
  9888                           ; 1 bytes @ 0x5
  9889                           
  9890  0047                     ?_ADC_read:	
  9891                           ; 1 bytes @ 0x5
  9892                           
  9893  0047                     ___bmul@product:	
  9894                           ; 2 bytes @ 0x5
  9895                           
  9896                           
  9897                           ; 1 bytes @ 0x5
  9898  0047                     	ds	1
  9899  0048                     cksum@res:	
  9900  0048                     ___bmul@multiplier:	
  9901                           ; 1 bytes @ 0x6
  9902                           
  9903                           
  9904                           ; 1 bytes @ 0x6
  9905  0048                     	ds	1
  9906  0049                     ??_ADC_read:	
  9907  0049                     ?_read_ring:	
  9908                           ; 1 bytes @ 0x7
  9909                           
  9910  0049                     ??_all_LED:	
  9911                           ; 1 bytes @ 0x7
  9912                           
  9913  0049                     ??_mod1_LED:	
  9914                           ; 1 bytes @ 0x7
  9915                           
  9916  0049                     ??_mod2_LED:	
  9917                           ; 1 bytes @ 0x7
  9918                           
  9919  0049                     ??_mod3_LED:	
  9920                           ; 1 bytes @ 0x7
  9921                           
  9922  0049                     ??_mod4_LED:	
  9923                           ; 1 bytes @ 0x7
  9924                           
  9925  0049                     ??_mode_select_LED:	
  9926                           ; 1 bytes @ 0x7
  9927                           
  9928  0049                     read_ring@nreg:	
  9929                           ; 1 bytes @ 0x7
  9930                           
  9931  0049                     cksum@i:	
  9932                           ; 1 bytes @ 0x7
  9933                           
  9934                           
  9935                           ; 2 bytes @ 0x7
  9936  0049                     	ds	1
  9937  004A                     read_ring@nreg_init:	
  9938                           
  9939                           ; 1 bytes @ 0x8
  9940  004A                     	ds	1
  9941  004B                     ?_DATAEE_WriteByte:	
  9942  004B                     read_ring@index:	
  9943                           ; 1 bytes @ 0x9
  9944                           
  9945  004B                     DATAEE_WriteByte@bAdd:	
  9946                           ; 1 bytes @ 0x9
  9947                           
  9948                           
  9949                           ; 2 bytes @ 0x9
  9950  004B                     	ds	1
  9951  004C                     ??_increment_subfield:	
  9952  004C                     read_ring@subindex:	
  9953                           ; 1 bytes @ 0xA
  9954                           
  9955  004C                     increment_subfield@plus:	
  9956                           ; 1 bytes @ 0xA
  9957                           
  9958                           
  9959                           ; 2 bytes @ 0xA
  9960  004C                     	ds	1
  9961  004D                     ??_read_ring:	
  9962  004D                     DATAEE_WriteByte@bData:	
  9963                           ; 1 bytes @ 0xB
  9964                           
  9965                           
  9966                           ; 1 bytes @ 0xB
  9967  004D                     	ds	1
  9968  004E                     ??_DATAEE_WriteByte:	
  9969  004E                     DATAEE_WriteByte@GIEBitValue:	
  9970                           ; 1 bytes @ 0xC
  9971                           
  9972  004E                     increment_subfield@exit:	
  9973                           ; 1 bytes @ 0xC
  9974                           
  9975                           
  9976                           ; 2 bytes @ 0xC
  9977  004E                     	ds	1
  9978  004F                     ?_push_ring:	
  9979  004F                     ??_cksum_w:	
  9980                           ; 1 bytes @ 0xD
  9981                           
  9982  004F                     ??_reset_recv:	
  9983                           ; 1 bytes @ 0xD
  9984                           
  9985  004F                     push_ring@nreg:	
  9986                           ; 1 bytes @ 0xD
  9987                           
  9988  004F                     read_ring@i:	
  9989                           ; 1 bytes @ 0xD
  9990                           
  9991  004F                     reset_recv@i:	
  9992                           ; 1 bytes @ 0xD
  9993                           
  9994                           
  9995                           ; 2 bytes @ 0xD
  9996  004F                     	ds	1
  9997  0050                     ??_clock_subfields:	
  9998  0050                     push_ring@nreg_init:	
  9999                           ; 1 bytes @ 0xE
 10000                           
 10001  0050                     read_ring@nreg_pt:	
 10002                           ; 1 bytes @ 0xE
 10003                           
 10004                           
 10005                           ; 1 bytes @ 0xE
 10006  0050                     	ds	1
 10007  0051                     ??_recoverData:	
 10008  0051                     push_ring@ring_byte:	
 10009                           ; 1 bytes @ 0xF
 10010                           
 10011  0051                     read_ring@absindex:	
 10012                           ; 1 bytes @ 0xF
 10013                           
 10014  0051                     clock_subfields@subfield:	
 10015                           ; 1 bytes @ 0xF
 10016                           
 10017                           
 10018                           ; 2 bytes @ 0xF
 10019  0051                     	ds	1
 10020  0052                     ??_push_ring:	
 10021                           
 10022                           ; 1 bytes @ 0x10
 10023  0052                     	ds	1
 10024  0053                     ??_config_routine:	
 10025                           
 10026                           ; 1 bytes @ 0x11
 10027  0053                     	ds	1
 10028  0054                     push_ring@i:	
 10029  0054                     config_routine@select_mode:	
 10030                           ; 1 bytes @ 0x12
 10031                           
 10032                           
 10033                           ; 2 bytes @ 0x12
 10034  0054                     	ds	1
 10035  0055                     push_ring@nreg_pt:	
 10036                           
 10037                           ; 1 bytes @ 0x13
 10038  0055                     	ds	1
 10039  0056                     ??_main:	
 10040                           
 10041                           ; 1 bytes @ 0x14
 10042  0056                     	ds	5
 10043                           
 10044                           	psect	maintext
 10045  007E                     __pmaintext:	
 10046 ;;
 10047 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
 10048 ;;
 10049 ;; *************** function _main *****************
 10050 ;; Defined at:
 10051 ;;		line 140 in file "main.c"
 10052 ;; Parameters:    Size  Location     Type
 10053 ;;		None
 10054 ;; Auto vars:     Size  Location     Type
 10055 ;;		None
 10056 ;; Return value:  Size  Location     Type
 10057 ;;                  1    wreg      void 
 10058 ;; Registers used:
 10059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10060 ;; Tracked objects:
 10061 ;;		On entry : B1F/0
 10062 ;;		On exit  : 0/0
 10063 ;;		Unchanged: 0/0
 10064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10066 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10067 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10068 ;;      Totals:         0       5       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10069 ;;Total ram usage:        8 bytes
 10070 ;; Hardware stack levels required when called:   10
 10071 ;; This function calls:
 10072 ;;		_ADC_read
 10073 ;;		_DATAEE_WriteByte
 10074 ;;		_INT_SetInterruptHandler
 10075 ;;		_LED_bin
 10076 ;;		_PWM6_LoadDutyValue
 10077 ;;		_SYSTEM_Initialize
 10078 ;;		_TMR0_SetInterruptHandler
 10079 ;;		_TMR0_StartTimer
 10080 ;;		_TMR1_SetInterruptHandler
 10081 ;;		_TMR2_SetInterruptHandler
 10082 ;;		_cksum_w
 10083 ;;		_config_routine
 10084 ;;		_push_ring
 10085 ;;		_read_ring
 10086 ;;		_recoverData
 10087 ;; This function is called by:
 10088 ;;		Startup code after reset
 10089 ;; This function uses a non-reentrant model
 10090 ;;
 10091                           
 10092                           
 10093                           ;psect for function _main
 10094  007E                     _main:	
 10095  007E                     l6088:	
 10096                           ;incstack = 0
 10097                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10098                           
 10099                           
 10100                           ;main.c: 141:     SYSTEM_Initialize();
 10101  007E  318F  27E4  3180   	fcall	_SYSTEM_Initialize
 10102                           
 10103                           ;main.c: 143:     TMR0_SetInterruptHandler(ISR_3s);
 10104  0081  307E               	movlw	low _ISR_3s
 10105  0082  0020               	movlb	0	; select bank0
 10106  0083  00C5               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 10107  0084  300F               	movlw	high _ISR_3s
 10108  0085  00C6               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 10109  0086  318D  2564  3180   	fcall	_TMR0_SetInterruptHandler
 10110                           
 10111                           ;main.c: 144:     TMR1_SetInterruptHandler(handler_clock_hms);
 10112  0089  3091               	movlw	low _handler_clock_hms
 10113  008A  0020               	movlb	0	; select bank0
 10114  008B  00C5               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 10115  008C  3006               	movlw	high _handler_clock_hms
 10116  008D  00C6               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 10117  008E  318D  256A  3180   	fcall	_TMR1_SetInterruptHandler
 10118                           
 10119                           ;main.c: 145:     INT_SetInterruptHandler(sw1_EXT);
 10120  0091  30EA               	movlw	low _sw1_EXT
 10121  0092  0020               	movlb	0	; select bank0
 10122  0093  00C5               	movwf	INT_SetInterruptHandler@InterruptHandler
 10123  0094  3006               	movlw	high _sw1_EXT
 10124  0095  00C6               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 10125  0096  318D  255E  3180   	fcall	_INT_SetInterruptHandler
 10126                           
 10127                           ;main.c: 150:     nreg = (unsigned char) (0xF000 + 5 * 30 >= 0xF0FF - 10 ? 256 : 5 * 30)
      +                          ;
 10128  0099  3009               	movlw	low _handler_clock_ms
 10129  009A  0020               	movlb	0	; select bank0
 10130  009B  00C5               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 10131  009C  300E               	movlw	high _handler_clock_ms
 10132  009D  00C6               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 10133  009E  318D  2570  3180   	fcall	_TMR2_SetInterruptHandler
 10134  00A1                     l6090:	
 10135  00A1                     l1206:	
 10136  00A1  3096               	movlw	150
 10137  00A2  0020               	movlb	0	; select bank0
 10138  00A3  00D6               	movwf	??_main
 10139  00A4  0856               	movf	??_main,w
 10140  00A5  00EB               	movwf	_nreg
 10141  00A6                     l6094:	
 10142                           
 10143                           ;main.c: 151:     nreg_pt = 0;
 10144  00A6  01C0               	clrf	_nreg_pt
 10145  00A7                     l6096:	
 10146                           
 10147                           ;main.c: 152:     nreg_init = 0;
 10148  00A7  01C1               	clrf	_nreg_init
 10149  00A8                     l6098:	
 10150                           
 10151                           ;main.c: 153:     alaf = 1;
 10152  00A8  01B6               	clrf	_alaf
 10153  00A9  0AB6               	incf	_alaf,f
 10154  00AA                     l6100:	
 10155                           
 10156                           ;main.c: 154:     temp = 0;
 10157  00AA  01B7               	clrf	_temp
 10158  00AB                     l6102:	
 10159                           
 10160                           ;main.c: 156:     recoverData();
 10161  00AB  3181  21B9  3180   	fcall	_recoverData
 10162  00AE                     l6104:	
 10163                           
 10164                           ;main.c: 158:     PWM6_LoadDutyValue(0);
 10165  00AE  3000               	movlw	0
 10166  00AF  0020               	movlb	0	; select bank0
 10167  00B0  00C5               	movwf	PWM6_LoadDutyValue@dutyValue
 10168  00B1  00C6               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10169  00B2  318F  2797  3180   	fcall	_PWM6_LoadDutyValue
 10170  00B5                     l6106:	
 10171                           
 10172                           ;main.c: 159:     alarm = 0 ;
 10173  00B5  0020               	movlb	0	; select bank0
 10174  00B6  01B8               	clrf	_alarm	;volatile
 10175  00B7                     l6108:	
 10176  00B7  003E               	movlb	30	; select bank30
 10177  00B8  1644               	bsf	68,4	;volatile
 10178  00B9                     l6110:	
 10179                           
 10180                           ;main.c: 163:     (INTCONbits.GIE = 1);
 10181  00B9  178B               	bsf	11,7	;volatile
 10182  00BA                     l6112:	
 10183                           
 10184                           ;main.c: 166:     (INTCONbits.PEIE = 1);
 10185  00BA  170B               	bsf	11,6	;volatile
 10186  00BB                     l6114:	
 10187                           
 10188                           ;main.c: 177:                     if(!config_mode){
 10189  00BB  087D               	movf	_config_mode,w	;volatile
 10190  00BC  1D03               	btfss	3,2
 10191  00BD  28BF               	goto	u3171
 10192  00BE  28C0               	goto	u3170
 10193  00BF                     u3171:	
 10194  00BF  29A6               	goto	l6168
 10195  00C0                     u3170:	
 10196  00C0                     l6116:	
 10197                           
 10198                           ;main.c: 179:                         convertedValue = ADC_read();
 10199  00C0  318F  27B0  3180   	fcall	_ADC_read
 10200  00C3  0020               	movlb	0	; select bank0
 10201  00C4  0848               	movf	?_ADC_read+1,w
 10202  00C5  00A7               	movwf	_convertedValue+1
 10203  00C6  0847               	movf	?_ADC_read,w
 10204  00C7  00A6               	movwf	_convertedValue
 10205  00C8                     l6118:	
 10206                           
 10207                           ;main.c: 180:                         lum_bin = (convertedValue >> 8);
 10208  00C8  0827               	movf	_convertedValue+1,w
 10209  00C9  00D7               	movwf	??_main+1
 10210  00CA  0826               	movf	_convertedValue,w
 10211  00CB  00D6               	movwf	??_main
 10212  00CC  0857               	movf	??_main+1,w
 10213  00CD  00D6               	movwf	??_main
 10214  00CE  01D7               	clrf	??_main+1
 10215  00CF  0856               	movf	??_main,w
 10216  00D0  00A2               	movwf	_lum_bin
 10217  00D1  0857               	movf	??_main+1,w
 10218  00D2  00A3               	movwf	_lum_bin+1
 10219  00D3                     l6120:	
 10220                           
 10221                           ;main.c: 181:                         LED_bin(lum_bin);
 10222  00D3  0823               	movf	_lum_bin+1,w
 10223  00D4  00C6               	movwf	LED_bin@value+1
 10224  00D5  0822               	movf	_lum_bin,w
 10225  00D6  00C5               	movwf	LED_bin@value
 10226  00D7  318F  27CA  3180   	fcall	_LED_bin
 10227  00DA                     l6122:	
 10228                           
 10229                           ;main.c: 187:                         lum_threshold = (lum_bin > 2 || temp > 25 ) & alaf
      +                          ;
 10230  00DA  0021               	movlb	1	; select bank1
 10231  00DB  01C4               	clrf	_main$2289^(0+128)
 10232  00DC  0AC4               	incf	_main$2289^(0+128),f
 10233  00DD                     l6124:	
 10234  00DD  3000               	movlw	0
 10235  00DE  0020               	movlb	0	; select bank0
 10236  00DF  0223               	subwf	_lum_bin+1,w
 10237  00E0  3003               	movlw	3
 10238  00E1  1903               	skipnz
 10239  00E2  0222               	subwf	_lum_bin,w
 10240  00E3  1803               	skipnc
 10241  00E4  28E6               	goto	u3181
 10242  00E5  28E7               	goto	u3180
 10243  00E6                     u3181:	
 10244  00E6  28EF               	goto	l6130
 10245  00E7                     u3180:	
 10246  00E7                     l6126:	
 10247  00E7  301A               	movlw	26
 10248  00E8  0237               	subwf	_temp,w
 10249  00E9  1803               	skipnc
 10250  00EA  28EC               	goto	u3191
 10251  00EB  28ED               	goto	u3190
 10252  00EC                     u3191:	
 10253  00EC  28EF               	goto	l6130
 10254  00ED                     u3190:	
 10255  00ED                     l6128:	
 10256  00ED  0021               	movlb	1	; select bank1
 10257  00EE  01C4               	clrf	_main$2289^(0+128)
 10258  00EF                     l6130:	
 10259  00EF  0021               	movlb	1	; select bank1
 10260  00F0  0844               	movf	_main$2289^(0+128),w
 10261  00F1  0020               	movlb	0	; select bank0
 10262  00F2  0536               	andwf	_alaf,w
 10263  00F3  00D6               	movwf	??_main
 10264  00F4  01D7               	clrf	??_main+1
 10265  00F5  0856               	movf	??_main,w
 10266  00F6  00A0               	movwf	_lum_threshold
 10267  00F7  0857               	movf	??_main+1,w
 10268  00F8  00A1               	movwf	_lum_threshold+1
 10269  00F9                     l6132:	
 10270                           
 10271                           ;main.c: 189:                       if (temp != read_ring(nreg_pt, nreg, nreg_init, 0, 3
      +                          ) || lum_bin != read_ring(nreg_pt, nreg, nreg_init, 0, 4)) {
 10272  00F9  086B               	movf	_nreg,w
 10273  00FA  00D6               	movwf	??_main
 10274  00FB  0856               	movf	??_main,w
 10275  00FC  00C9               	movwf	read_ring@nreg
 10276  00FD  0841               	movf	_nreg_init,w
 10277  00FE  00D7               	movwf	??_main+1
 10278  00FF  0857               	movf	??_main+1,w
 10279  0100  00CA               	movwf	read_ring@nreg_init
 10280  0101  01CB               	clrf	read_ring@index
 10281  0102  3003               	movlw	3
 10282  0103  00D8               	movwf	??_main+2
 10283  0104  0858               	movf	??_main+2,w
 10284  0105  00CC               	movwf	read_ring@subindex
 10285  0106  0840               	movf	_nreg_pt,w
 10286  0107  3185  25F2  3180   	fcall	_read_ring
 10287  010A  0020               	movlb	0	; select bank0
 10288  010B  0637               	xorwf	_temp,w
 10289  010C  1D03               	skipz
 10290  010D  290F               	goto	u3201
 10291  010E  2910               	goto	u3200
 10292  010F                     u3201:	
 10293  010F  292E               	goto	l1216
 10294  0110                     u3200:	
 10295  0110                     l6134:	
 10296  0110  086B               	movf	_nreg,w
 10297  0111  00D6               	movwf	??_main
 10298  0112  0856               	movf	??_main,w
 10299  0113  00C9               	movwf	read_ring@nreg
 10300  0114  0841               	movf	_nreg_init,w
 10301  0115  00D7               	movwf	??_main+1
 10302  0116  0857               	movf	??_main+1,w
 10303  0117  00CA               	movwf	read_ring@nreg_init
 10304  0118  01CB               	clrf	read_ring@index
 10305  0119  3004               	movlw	4
 10306  011A  00D8               	movwf	??_main+2
 10307  011B  0858               	movf	??_main+2,w
 10308  011C  00CC               	movwf	read_ring@subindex
 10309  011D  0840               	movf	_nreg_pt,w
 10310  011E  3185  25F2  3180   	fcall	_read_ring
 10311  0121  0020               	movlb	0	; select bank0
 10312  0122  00D9               	movwf	??_main+3
 10313  0123  01DA               	clrf	??_main+4
 10314  0124  0823               	movf	_lum_bin+1,w
 10315  0125  065A               	xorwf	??_main+4,w
 10316  0126  1D03               	skipz
 10317  0127  292A               	goto	u3215
 10318  0128  0822               	movf	_lum_bin,w
 10319  0129  0659               	xorwf	??_main+3,w
 10320  012A                     u3215:	
 10321  012A  1903               	skipnz
 10322  012B  292D               	goto	u3211
 10323  012C  292E               	goto	u3210
 10324  012D                     u3211:	
 10325  012D  296D               	goto	l6146
 10326  012E                     u3210:	
 10327  012E                     l1216:	
 10328                           
 10329                           ;main.c: 191:                             (INTCONbits.GIE = 0);
 10330  012E  138B               	bcf	11,7	;volatile
 10331  012F                     l6136:	
 10332                           
 10333                           ;main.c: 192:                             ring_byte[0] = clkh;
 10334  012F  083F               	movf	_clkh,w	;volatile
 10335  0130  00D6               	movwf	??_main
 10336  0131  0856               	movf	??_main,w
 10337  0132  0021               	movlb	1	; select bank1
 10338  0133  00BD               	movwf	_ring_byte^(0+128)
 10339                           
 10340                           ;main.c: 193:                             ring_byte[1] = clkm;
 10341  0134  0020               	movlb	0	; select bank0
 10342  0135  083E               	movf	_clkm,w	;volatile
 10343  0136  00D6               	movwf	??_main
 10344  0137  0856               	movf	??_main,w
 10345  0138  0021               	movlb	1	; select bank1
 10346  0139  00BE               	movwf	(_ring_byte^(0+128)+1)
 10347                           
 10348                           ;main.c: 194:                             ring_byte[2] = seg;
 10349  013A  0020               	movlb	0	; select bank0
 10350  013B  083D               	movf	_seg,w	;volatile
 10351  013C  00D6               	movwf	??_main
 10352  013D  0856               	movf	??_main,w
 10353  013E  0021               	movlb	1	; select bank1
 10354  013F  00BF               	movwf	(_ring_byte^(0+128)+2)
 10355  0140                     l6138:	
 10356                           
 10357                           ;main.c: 195:                             (INTCONbits.GIE = 1);
 10358  0140  178B               	bsf	11,7	;volatile
 10359                           
 10360                           ;main.c: 196:                             ring_byte[3] = temp;
 10361  0141  0020               	movlb	0	; select bank0
 10362  0142  0837               	movf	_temp,w
 10363  0143  00D6               	movwf	??_main
 10364  0144  0856               	movf	??_main,w
 10365  0145  0021               	movlb	1	; select bank1
 10366  0146  00C0               	movwf	(_ring_byte^(0+128)+3)
 10367                           
 10368                           ;main.c: 197:                             ring_byte[4] = lum_bin;
 10369  0147  0020               	movlb	0	; select bank0
 10370  0148  0822               	movf	_lum_bin,w
 10371  0149  00D6               	movwf	??_main
 10372  014A  0856               	movf	??_main,w
 10373  014B  0021               	movlb	1	; select bank1
 10374  014C  00C1               	movwf	(_ring_byte^(0+128)+4)
 10375  014D                     l6140:	
 10376                           
 10377                           ;main.c: 198:                             push_ring(&nreg_pt, nreg, &nreg_init, ring_byt
      +                          e);
 10378  014D  0020               	movlb	0	; select bank0
 10379  014E  086B               	movf	_nreg,w
 10380  014F  00D6               	movwf	??_main
 10381  0150  0856               	movf	??_main,w
 10382  0151  00CF               	movwf	push_ring@nreg
 10383  0152  3041               	movlw	(low (_nreg_init| 0))& (0+255)
 10384  0153  00D7               	movwf	??_main+1
 10385  0154  0857               	movf	??_main+1,w
 10386  0155  00D0               	movwf	push_ring@nreg_init
 10387  0156  30BD               	movlw	(low (_ring_byte| 0))& (0+255)
 10388  0157  00D8               	movwf	??_main+2
 10389  0158  0858               	movf	??_main+2,w
 10390  0159  00D1               	movwf	push_ring@ring_byte
 10391  015A  3040               	movlw	(low (_nreg_pt| 0))& (0+255)
 10392  015B  3185  256B  3180   	fcall	_push_ring
 10393  015E                     l6142:	
 10394                           
 10395                           ;main.c: 200:                             DATAEE_WriteByte(0xF0FF - 10 + 4, nreg_pt);
 10396  015E  30F9               	movlw	249
 10397  015F  0020               	movlb	0	; select bank0
 10398  0160  00CB               	movwf	DATAEE_WriteByte@bAdd
 10399  0161  30F0               	movlw	240
 10400  0162  00CC               	movwf	DATAEE_WriteByte@bAdd+1
 10401  0163  0840               	movf	_nreg_pt,w
 10402  0164  00D6               	movwf	??_main
 10403  0165  0856               	movf	??_main,w
 10404  0166  00CD               	movwf	DATAEE_WriteByte@bData
 10405  0167  3187  2738  3180   	fcall	_DATAEE_WriteByte
 10406  016A                     l6144:	
 10407                           
 10408                           ;main.c: 201:                             cksum_w();
 10409  016A  318E  267B  3180   	fcall	_cksum_w
 10410  016D                     l6146:	
 10411                           
 10412                           ;main.c: 206:                         if(lum_threshold){
 10413  016D  0020               	movlb	0	; select bank0
 10414  016E  0820               	movf	_lum_threshold,w
 10415  016F  0421               	iorwf	_lum_threshold+1,w
 10416  0170  1903               	btfsc	3,2
 10417  0171  2973               	goto	u3221
 10418  0172  2974               	goto	u3220
 10419  0173                     u3221:	
 10420  0173  2996               	goto	l6162
 10421  0174                     u3220:	
 10422  0174                     l6148:	
 10423                           
 10424                           ;main.c: 207:                             if(alarm == 2){
 10425  0174  3002               	movlw	2
 10426  0175  0638               	xorwf	_alarm,w	;volatile
 10427  0176  1D03               	btfss	3,2
 10428  0177  2979               	goto	u3231
 10429  0178  297A               	goto	u3230
 10430  0179                     u3231:	
 10431  0179  2986               	goto	l6154
 10432  017A                     u3230:	
 10433  017A                     l6150:	
 10434                           
 10435                           ;main.c: 208:                                 duty_cycle +=1 ;
 10436  017A  3001               	movlw	1
 10437  017B  07A4               	addwf	_duty_cycle,f
 10438  017C  3000               	movlw	0
 10439  017D  3DA5               	addwfc	_duty_cycle+1,f
 10440  017E                     l6152:	
 10441                           
 10442                           ;main.c: 209:                                 PWM6_LoadDutyValue(duty_cycle);
 10443  017E  0825               	movf	_duty_cycle+1,w
 10444  017F  00C6               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10445  0180  0824               	movf	_duty_cycle,w
 10446  0181  00C5               	movwf	PWM6_LoadDutyValue@dutyValue
 10447  0182  318F  2797  3180   	fcall	_PWM6_LoadDutyValue
 10448                           
 10449                           ;main.c: 210:                             }
 10450  0185  29B2               	goto	l6176
 10451  0186                     l6154:	
 10452  0186  0838               	movf	_alarm,w	;volatile
 10453  0187  1D03               	btfss	3,2
 10454  0188  298A               	goto	u3241
 10455  0189  298B               	goto	u3240
 10456  018A                     u3241:	
 10457  018A  29A5               	goto	l1221
 10458  018B                     u3240:	
 10459  018B                     l6156:	
 10460                           
 10461                           ;main.c: 212:                                 PIE0bits.TMR0IE = 1;
 10462  018B  002E               	movlb	14	; select bank14
 10463  018C  1696               	bsf	22,5	;volatile
 10464  018D                     l6158:	
 10465                           
 10466                           ;main.c: 213:                                 TMR0_StartTimer();
 10467  018D  318D  251C  3180   	fcall	_TMR0_StartTimer
 10468  0190                     l6160:	
 10469                           
 10470                           ;main.c: 214:                                 alarm = 2 ;
 10471  0190  3002               	movlw	2
 10472  0191  0020               	movlb	0	; select bank0
 10473  0192  00D6               	movwf	??_main
 10474  0193  0856               	movf	??_main,w
 10475  0194  00B8               	movwf	_alarm	;volatile
 10476  0195  29B2               	goto	l6176
 10477  0196                     l6162:	
 10478                           
 10479                           ;main.c: 218:                             if(alarm == 2){
 10480  0196  3002               	movlw	2
 10481  0197  0638               	xorwf	_alarm,w	;volatile
 10482  0198  1D03               	btfss	3,2
 10483  0199  299B               	goto	u3251
 10484  019A  299C               	goto	u3250
 10485  019B                     u3251:	
 10486  019B  29B2               	goto	l6176
 10487  019C                     u3250:	
 10488  019C                     l6164:	
 10489                           
 10490                           ;main.c: 219:                                 PWM6_LoadDutyValue(0);
 10491  019C  3000               	movlw	0
 10492  019D  00C5               	movwf	PWM6_LoadDutyValue@dutyValue
 10493  019E  00C6               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10494  019F  318F  2797  3180   	fcall	_PWM6_LoadDutyValue
 10495  01A2                     l6166:	
 10496                           
 10497                           ;main.c: 220:                                 alarm = 0 ;
 10498  01A2  0020               	movlb	0	; select bank0
 10499  01A3  01B8               	clrf	_alarm	;volatile
 10500  01A4  29B2               	goto	l6176
 10501  01A5                     l1221:	
 10502                           ;main.c: 222:                         }
 10503                           
 10504                           
 10505                           ;main.c: 224:                      }
 10506  01A5  29B2               	goto	l6176
 10507  01A6                     l6168:	
 10508  01A6  037D               	decf	_config_mode,w	;volatile
 10509  01A7  1D03               	btfss	3,2
 10510  01A8  29AA               	goto	u3261
 10511  01A9  29AB               	goto	u3260
 10512  01AA                     u3261:	
 10513  01AA  29B2               	goto	l6176
 10514  01AB                     u3260:	
 10515  01AB                     l6170:	
 10516                           
 10517                           ;main.c: 228:                       (PIE0bits.INTE = 0);
 10518  01AB  002E               	movlb	14	; select bank14
 10519  01AC  1016               	bcf	22,0	;volatile
 10520  01AD                     l6172:	
 10521                           
 10522                           ;main.c: 229:                       config_routine();
 10523  01AD  3182  2251  3180   	fcall	_config_routine
 10524  01B0                     l6174:	
 10525                           
 10526                           ;main.c: 230:                       (PIE0bits.INTE = 1);
 10527  01B0  002E               	movlb	14	; select bank14
 10528  01B1  1416               	bsf	22,0	;volatile
 10529  01B2                     l6176:	
 10530                           
 10531                           ;main.c: 233:                 _delay((unsigned long)((1)*(1000000/4000.0)));
 10532  01B2  3053               	movlw	83
 10533  01B3                     u3297:	
 10534  01B3  0B89               	decfsz	9,f
 10535  01B4  29B3               	goto	u3297
 10536  01B5  0000               	nop
 10537                           
 10538                           ;main.c: 236:                 }while(1);
 10539  01B6  28BB               	goto	l6114
 10540  01B7  3180  285B         	ljmp	start
 10541  01B9                     __end_of_main:	
 10542                           
 10543                           	psect	text1
 10544  01B9                     __ptext1:	
 10545 ;; *************** function _recoverData *****************
 10546 ;; Defined at:
 10547 ;;		line 11 in file "eeprom_rw.c"
 10548 ;; Parameters:    Size  Location     Type
 10549 ;;		None
 10550 ;; Auto vars:     Size  Location     Type
 10551 ;;		None
 10552 ;; Return value:  Size  Location     Type
 10553 ;;                  1    wreg      void 
 10554 ;; Registers used:
 10555 ;;		wreg, status,2, status,0, pclath, cstack
 10556 ;; Tracked objects:
 10557 ;;		On entry : 0/0
 10558 ;;		On exit  : 0/0
 10559 ;;		Unchanged: 0/0
 10560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10563 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10564 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10565 ;;Total ram usage:        1 bytes
 10566 ;; Hardware stack levels used:    1
 10567 ;; Hardware stack levels required when called:    9
 10568 ;; This function calls:
 10569 ;;		_DATAEE_ReadByte
 10570 ;;		_DATAEE_WriteByte
 10571 ;;		_cksum
 10572 ;;		_cksum_w
 10573 ;;		_reset_recv
 10574 ;; This function is called by:
 10575 ;;		_main
 10576 ;; This function uses a non-reentrant model
 10577 ;;
 10578                           
 10579                           
 10580                           ;psect for function _recoverData
 10581  01B9                     _recoverData:	
 10582  01B9                     l5956:	
 10583                           ;incstack = 0
 10584                           ; Regs used in _recoverData: [wreg+status,2+status,0+pclath+cstack]
 10585                           
 10586                           
 10587                           ;eeprom_rw.c: 13:     if(DATAEE_ReadByte(0xF0FF - 10) == 0xAB){
 10588  01B9  30F5               	movlw	245
 10589  01BA  0020               	movlb	0	; select bank0
 10590  01BB  00C5               	movwf	DATAEE_ReadByte@bAdd
 10591  01BC  30F0               	movlw	240
 10592  01BD  00C6               	movwf	DATAEE_ReadByte@bAdd+1
 10593  01BE  318E  265C  3181   	fcall	_DATAEE_ReadByte
 10594  01C1  3AAB               	xorlw	171
 10595  01C2  1D03               	skipz
 10596  01C3  29C5               	goto	u3001
 10597  01C4  29C6               	goto	u3000
 10598  01C5                     u3001:	
 10599  01C5  2A1A               	goto	l5962
 10600  01C6                     u3000:	
 10601  01C6                     l5958:	
 10602                           
 10603                           ;eeprom_rw.c: 14:         if(DATAEE_ReadByte(0xF0FF) == cksum()){
 10604  01C6  3187  277C  3181   	fcall	_cksum
 10605  01C9  0020               	movlb	0	; select bank0
 10606  01CA  00D1               	movwf	??_recoverData
 10607  01CB  30FF               	movlw	255
 10608  01CC  00C5               	movwf	DATAEE_ReadByte@bAdd
 10609  01CD  30F0               	movlw	240
 10610  01CE  00C6               	movwf	DATAEE_ReadByte@bAdd+1
 10611  01CF  318E  265C  3181   	fcall	_DATAEE_ReadByte
 10612  01D2  0020               	movlb	0	; select bank0
 10613  01D3  0651               	xorwf	??_recoverData,w
 10614  01D4  1D03               	skipz
 10615  01D5  29D7               	goto	u3011
 10616  01D6  29D8               	goto	u3010
 10617  01D7                     u3011:	
 10618  01D7  2A1A               	goto	l5962
 10619  01D8                     u3010:	
 10620  01D8                     l5960:	
 10621                           
 10622                           ;eeprom_rw.c: 15:             clkh = DATAEE_ReadByte(0xF0FF - 10 + 1);
 10623  01D8  30F6               	movlw	246
 10624  01D9  00C5               	movwf	DATAEE_ReadByte@bAdd
 10625  01DA  30F0               	movlw	240
 10626  01DB  00C6               	movwf	DATAEE_ReadByte@bAdd+1
 10627  01DC  318E  265C  3181   	fcall	_DATAEE_ReadByte
 10628  01DF  0020               	movlb	0	; select bank0
 10629  01E0  00D1               	movwf	??_recoverData
 10630  01E1  0851               	movf	??_recoverData,w
 10631  01E2  00BF               	movwf	_clkh	;volatile
 10632                           
 10633                           ;eeprom_rw.c: 16:             clkm = DATAEE_ReadByte(0xF0FF - 10 + 2);
 10634  01E3  30F7               	movlw	247
 10635  01E4  00C5               	movwf	DATAEE_ReadByte@bAdd
 10636  01E5  30F0               	movlw	240
 10637  01E6  00C6               	movwf	DATAEE_ReadByte@bAdd+1
 10638  01E7  318E  265C  3181   	fcall	_DATAEE_ReadByte
 10639  01EA  0020               	movlb	0	; select bank0
 10640  01EB  00D1               	movwf	??_recoverData
 10641  01EC  0851               	movf	??_recoverData,w
 10642  01ED  00BE               	movwf	_clkm	;volatile
 10643                           
 10644                           ;eeprom_rw.c: 17:             nreg = DATAEE_ReadByte(0xF0FF - 10 + 3);
 10645  01EE  30F8               	movlw	248
 10646  01EF  00C5               	movwf	DATAEE_ReadByte@bAdd
 10647  01F0  30F0               	movlw	240
 10648  01F1  00C6               	movwf	DATAEE_ReadByte@bAdd+1
 10649  01F2  318E  265C  3181   	fcall	_DATAEE_ReadByte
 10650  01F5  0020               	movlb	0	; select bank0
 10651  01F6  00D1               	movwf	??_recoverData
 10652  01F7  0851               	movf	??_recoverData,w
 10653  01F8  00EB               	movwf	_nreg
 10654                           
 10655                           ;eeprom_rw.c: 18:             nreg_pt = DATAEE_ReadByte(0xF0FF - 10 + 4);
 10656  01F9  30F9               	movlw	249
 10657  01FA  00C5               	movwf	DATAEE_ReadByte@bAdd
 10658  01FB  30F0               	movlw	240
 10659  01FC  00C6               	movwf	DATAEE_ReadByte@bAdd+1
 10660  01FD  318E  265C  3181   	fcall	_DATAEE_ReadByte
 10661  0200  0020               	movlb	0	; select bank0
 10662  0201  00D1               	movwf	??_recoverData
 10663  0202  0851               	movf	??_recoverData,w
 10664  0203  00C0               	movwf	_nreg_pt
 10665                           
 10666                           ;eeprom_rw.c: 19:             pmon = DATAEE_ReadByte(0xF0FF - 10 + 5);
 10667  0204  30FA               	movlw	250
 10668  0205  00C5               	movwf	DATAEE_ReadByte@bAdd
 10669  0206  30F0               	movlw	240
 10670  0207  00C6               	movwf	DATAEE_ReadByte@bAdd+1
 10671  0208  318E  265C  3181   	fcall	_DATAEE_ReadByte
 10672  020B  0020               	movlb	0	; select bank0
 10673  020C  00D1               	movwf	??_recoverData
 10674  020D  0851               	movf	??_recoverData,w
 10675  020E  00EA               	movwf	_pmon
 10676                           
 10677                           ;eeprom_rw.c: 20:             tala = DATAEE_ReadByte(0xF0FF - 10 + 6);
 10678  020F  30FB               	movlw	251
 10679  0210  00C5               	movwf	DATAEE_ReadByte@bAdd
 10680  0211  30F0               	movlw	240
 10681  0212  00C6               	movwf	DATAEE_ReadByte@bAdd+1
 10682  0213  318E  265C  3181   	fcall	_DATAEE_ReadByte
 10683  0216  0020               	movlb	0	; select bank0
 10684  0217  00D1               	movwf	??_recoverData
 10685  0218  0851               	movf	??_recoverData,w
 10686  0219  00E9               	movwf	_tala
 10687  021A                     l5962:	
 10688                           
 10689                           ;eeprom_rw.c: 24:     reset_recv();
 10690  021A  3187  27DB  3181   	fcall	_reset_recv
 10691  021D                     l5964:	
 10692                           
 10693                           ;eeprom_rw.c: 27:     DATAEE_WriteByte(0xF0FF - 10, 0xAB);
 10694  021D  30F5               	movlw	245
 10695  021E  0020               	movlb	0	; select bank0
 10696  021F  00CB               	movwf	DATAEE_WriteByte@bAdd
 10697  0220  30F0               	movlw	240
 10698  0221  00CC               	movwf	DATAEE_WriteByte@bAdd+1
 10699  0222  30AB               	movlw	171
 10700  0223  00D1               	movwf	??_recoverData
 10701  0224  0851               	movf	??_recoverData,w
 10702  0225  00CD               	movwf	DATAEE_WriteByte@bData
 10703  0226  3187  2738  3181   	fcall	_DATAEE_WriteByte
 10704  0229                     l5966:	
 10705                           
 10706                           ;eeprom_rw.c: 28:     DATAEE_WriteByte(0xF0FF - 10 + 3, nreg);
 10707  0229  30F8               	movlw	248
 10708  022A  0020               	movlb	0	; select bank0
 10709  022B  00CB               	movwf	DATAEE_WriteByte@bAdd
 10710  022C  30F0               	movlw	240
 10711  022D  00CC               	movwf	DATAEE_WriteByte@bAdd+1
 10712  022E  086B               	movf	_nreg,w
 10713  022F  00D1               	movwf	??_recoverData
 10714  0230  0851               	movf	??_recoverData,w
 10715  0231  00CD               	movwf	DATAEE_WriteByte@bData
 10716  0232  3187  2738  3181   	fcall	_DATAEE_WriteByte
 10717  0235                     l5968:	
 10718                           
 10719                           ;eeprom_rw.c: 29:     DATAEE_WriteByte(0xF0FF - 10 + 5, pmon);
 10720  0235  30FA               	movlw	250
 10721  0236  0020               	movlb	0	; select bank0
 10722  0237  00CB               	movwf	DATAEE_WriteByte@bAdd
 10723  0238  30F0               	movlw	240
 10724  0239  00CC               	movwf	DATAEE_WriteByte@bAdd+1
 10725  023A  086A               	movf	_pmon,w
 10726  023B  00D1               	movwf	??_recoverData
 10727  023C  0851               	movf	??_recoverData,w
 10728  023D  00CD               	movwf	DATAEE_WriteByte@bData
 10729  023E  3187  2738  3181   	fcall	_DATAEE_WriteByte
 10730  0241                     l5970:	
 10731                           
 10732                           ;eeprom_rw.c: 30:     DATAEE_WriteByte(0xF0FF - 10 + 6, tala);
 10733  0241  30FB               	movlw	251
 10734  0242  0020               	movlb	0	; select bank0
 10735  0243  00CB               	movwf	DATAEE_WriteByte@bAdd
 10736  0244  30F0               	movlw	240
 10737  0245  00CC               	movwf	DATAEE_WriteByte@bAdd+1
 10738  0246  0869               	movf	_tala,w
 10739  0247  00D1               	movwf	??_recoverData
 10740  0248  0851               	movf	??_recoverData,w
 10741  0249  00CD               	movwf	DATAEE_WriteByte@bData
 10742  024A  3187  2738  3181   	fcall	_DATAEE_WriteByte
 10743  024D                     l5972:	
 10744                           
 10745                           ;eeprom_rw.c: 31:     cksum_w();
 10746  024D  318E  267B  3181   	fcall	_cksum_w
 10747  0250                     l1539:	
 10748  0250  0008               	return
 10749  0251                     __end_of_recoverData:	
 10750                           
 10751                           	psect	text2
 10752  07DB                     __ptext2:	
 10753 ;; *************** function _reset_recv *****************
 10754 ;; Defined at:
 10755 ;;		line 75 in file "eeprom_rw.c"
 10756 ;; Parameters:    Size  Location     Type
 10757 ;;		None
 10758 ;; Auto vars:     Size  Location     Type
 10759 ;;  i               2   13[BANK0 ] unsigned int 
 10760 ;; Return value:  Size  Location     Type
 10761 ;;                  1    wreg      void 
 10762 ;; Registers used:
 10763 ;;		wreg, status,2, status,0, pclath, cstack
 10764 ;; Tracked objects:
 10765 ;;		On entry : 0/0
 10766 ;;		On exit  : 0/0
 10767 ;;		Unchanged: 0/0
 10768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10770 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10772 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10773 ;;Total ram usage:        2 bytes
 10774 ;; Hardware stack levels used:    1
 10775 ;; Hardware stack levels required when called:    7
 10776 ;; This function calls:
 10777 ;;		_DATAEE_WriteByte
 10778 ;; This function is called by:
 10779 ;;		_recoverData
 10780 ;;		_recover
 10781 ;; This function uses a non-reentrant model
 10782 ;;
 10783                           
 10784                           
 10785                           ;psect for function _reset_recv
 10786  07DB                     _reset_recv:	
 10787  07DB                     l5914:	
 10788                           ;incstack = 0
 10789                           ; Regs used in _reset_recv: [wreg+status,2+status,0+pclath+cstack]
 10790                           
 10791                           
 10792                           ;eeprom_rw.c: 77:     for(unsigned int i = 0xF0FF - 10; i <= 0xF0FF; i ++)
 10793  07DB  30F5               	movlw	245
 10794  07DC  0020               	movlb	0	; select bank0
 10795  07DD  00CF               	movwf	reset_recv@i
 10796  07DE  30F0               	movlw	240
 10797  07DF  00D0               	movwf	reset_recv@i+1
 10798  07E0                     l5918:	
 10799                           
 10800                           ;eeprom_rw.c: 78:         DATAEE_WriteByte(i, 0);
 10801  07E0  0850               	movf	reset_recv@i+1,w
 10802  07E1  00CC               	movwf	DATAEE_WriteByte@bAdd+1
 10803  07E2  084F               	movf	reset_recv@i,w
 10804  07E3  00CB               	movwf	DATAEE_WriteByte@bAdd
 10805  07E4  01CD               	clrf	DATAEE_WriteByte@bData
 10806  07E5  3187  2738  3187   	fcall	_DATAEE_WriteByte
 10807  07E8                     l5920:	
 10808  07E8  3001               	movlw	1
 10809  07E9  0020               	movlb	0	; select bank0
 10810  07EA  07CF               	addwf	reset_recv@i,f
 10811  07EB  3000               	movlw	0
 10812  07EC  3DD0               	addwfc	reset_recv@i+1,f
 10813  07ED                     l5922:	
 10814  07ED  30F1               	movlw	241
 10815  07EE  0250               	subwf	reset_recv@i+1,w
 10816  07EF  3000               	movlw	0
 10817  07F0  1903               	skipnz
 10818  07F1  024F               	subwf	reset_recv@i,w
 10819  07F2  1C03               	skipc
 10820  07F3  2FF5               	goto	u2971
 10821  07F4  2FF6               	goto	u2970
 10822  07F5                     u2971:	
 10823  07F5  2FE0               	goto	l5918
 10824  07F6                     u2970:	
 10825  07F6                     l1566:	
 10826  07F6  0008               	return
 10827  07F7                     __end_of_reset_recv:	
 10828                           
 10829                           	psect	text3
 10830  0E7B                     __ptext3:	
 10831 ;; *************** function _cksum_w *****************
 10832 ;; Defined at:
 10833 ;;		line 61 in file "eeprom_rw.c"
 10834 ;; Parameters:    Size  Location     Type
 10835 ;;		None
 10836 ;; Auto vars:     Size  Location     Type
 10837 ;;		None
 10838 ;; Return value:  Size  Location     Type
 10839 ;;                  1    wreg      void 
 10840 ;; Registers used:
 10841 ;;		wreg, status,2, status,0, pclath, cstack
 10842 ;; Tracked objects:
 10843 ;;		On entry : 0/0
 10844 ;;		On exit  : 0/0
 10845 ;;		Unchanged: 0/0
 10846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10849 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10850 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10851 ;;Total ram usage:        1 bytes
 10852 ;; Hardware stack levels used:    1
 10853 ;; Hardware stack levels required when called:    8
 10854 ;; This function calls:
 10855 ;;		_DATAEE_WriteByte
 10856 ;;		_cksum
 10857 ;; This function is called by:
 10858 ;;		_main
 10859 ;;		_recoverData
 10860 ;;		_recover
 10861 ;; This function uses a non-reentrant model
 10862 ;;
 10863                           
 10864                           
 10865                           ;psect for function _cksum_w
 10866  0E7B                     _cksum_w:	
 10867  0E7B                     l5840:	
 10868                           ;incstack = 0
 10869                           ; Regs used in _cksum_w: [wreg+status,2+status,0+pclath+cstack]
 10870                           
 10871                           
 10872                           ;eeprom_rw.c: 63:     DATAEE_WriteByte(0xF0FF, cksum());
 10873  0E7B  30FF               	movlw	255
 10874  0E7C  0020               	movlb	0	; select bank0
 10875  0E7D  00CB               	movwf	DATAEE_WriteByte@bAdd
 10876  0E7E  30F0               	movlw	240
 10877  0E7F  00CC               	movwf	DATAEE_WriteByte@bAdd+1
 10878  0E80  3187  277C  318E   	fcall	_cksum
 10879  0E83  0020               	movlb	0	; select bank0
 10880  0E84  00CF               	movwf	??_cksum_w
 10881  0E85  084F               	movf	??_cksum_w,w
 10882  0E86  00CD               	movwf	DATAEE_WriteByte@bData
 10883  0E87  3187  2738  318E   	fcall	_DATAEE_WriteByte
 10884  0E8A                     l1556:	
 10885  0E8A  0008               	return
 10886  0E8B                     __end_of_cksum_w:	
 10887                           
 10888                           	psect	text4
 10889  077C                     __ptext4:	
 10890 ;; *************** function _cksum *****************
 10891 ;; Defined at:
 10892 ;;		line 66 in file "eeprom_rw.c"
 10893 ;; Parameters:    Size  Location     Type
 10894 ;;		None
 10895 ;; Auto vars:     Size  Location     Type
 10896 ;;  i               2    7[BANK0 ] unsigned int 
 10897 ;;  res             1    6[BANK0 ] unsigned char 
 10898 ;; Return value:  Size  Location     Type
 10899 ;;                  1    wreg      unsigned char 
 10900 ;; Registers used:
 10901 ;;		wreg, status,2, status,0, pclath, cstack
 10902 ;; Tracked objects:
 10903 ;;		On entry : 0/0
 10904 ;;		On exit  : 0/0
 10905 ;;		Unchanged: 0/0
 10906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10908 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10909 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10910 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10911 ;;Total ram usage:        4 bytes
 10912 ;; Hardware stack levels used:    1
 10913 ;; Hardware stack levels required when called:    7
 10914 ;; This function calls:
 10915 ;;		_DATAEE_ReadByte
 10916 ;; This function is called by:
 10917 ;;		_recoverData
 10918 ;;		_cksum_w
 10919 ;;		_recover
 10920 ;; This function uses a non-reentrant model
 10921 ;;
 10922                           
 10923                           
 10924                           ;psect for function _cksum
 10925  077C                     _cksum:	
 10926  077C                     l5684:	
 10927                           ;incstack = 0
 10928                           ; Regs used in _cksum: [wreg+status,2+status,0+pclath+cstack]
 10929                           
 10930                           
 10931                           ;eeprom_rw.c: 68:     unsigned char res = 0;
 10932  077C  0020               	movlb	0	; select bank0
 10933  077D  01C8               	clrf	cksum@res
 10934  077E                     l5686:	
 10935                           
 10936                           ;eeprom_rw.c: 69:     for(unsigned int i = 0xF0FF - 10; i < 0xF0FF; i ++) {
 10937  077E  30F5               	movlw	245
 10938  077F  00C9               	movwf	cksum@i
 10939  0780  30F0               	movlw	240
 10940  0781  00CA               	movwf	cksum@i+1
 10941  0782                     l5692:	
 10942                           
 10943                           ;eeprom_rw.c: 70:         res += DATAEE_ReadByte(i);
 10944  0782  084A               	movf	cksum@i+1,w
 10945  0783  00C6               	movwf	DATAEE_ReadByte@bAdd+1
 10946  0784  0849               	movf	cksum@i,w
 10947  0785  00C5               	movwf	DATAEE_ReadByte@bAdd
 10948  0786  318E  265C  3187   	fcall	_DATAEE_ReadByte
 10949  0789  0020               	movlb	0	; select bank0
 10950  078A  00C7               	movwf	??_cksum
 10951  078B  0847               	movf	??_cksum,w
 10952  078C  07C8               	addwf	cksum@res,f
 10953  078D                     l5694:	
 10954                           
 10955                           ;eeprom_rw.c: 71:     }
 10956  078D  3001               	movlw	1
 10957  078E  07C9               	addwf	cksum@i,f
 10958  078F  3000               	movlw	0
 10959  0790  3DCA               	addwfc	cksum@i+1,f
 10960  0791                     l5696:	
 10961  0791  30F0               	movlw	240
 10962  0792  024A               	subwf	cksum@i+1,w
 10963  0793  30FF               	movlw	255
 10964  0794  1903               	skipnz
 10965  0795  0249               	subwf	cksum@i,w
 10966  0796  1C03               	skipc
 10967  0797  2F99               	goto	u2911
 10968  0798  2F9A               	goto	u2910
 10969  0799                     u2911:	
 10970  0799  2F82               	goto	l5692
 10971  079A                     u2910:	
 10972  079A                     l5698:	
 10973                           
 10974                           ;eeprom_rw.c: 72:     return res;
 10975  079A  0848               	movf	cksum@res,w
 10976  079B                     l1561:	
 10977  079B  0008               	return
 10978  079C                     __end_of_cksum:	
 10979                           
 10980                           	psect	text5
 10981  05F2                     __ptext5:	
 10982 ;; *************** function _read_ring *****************
 10983 ;; Defined at:
 10984 ;;		line 43 in file "eeprom_rw.c"
 10985 ;; Parameters:    Size  Location     Type
 10986 ;;  nreg_pt         1    wreg     unsigned char 
 10987 ;;  nreg            1    7[BANK0 ] unsigned char 
 10988 ;;  nreg_init       1    8[BANK0 ] unsigned char 
 10989 ;;  index           1    9[BANK0 ] unsigned char 
 10990 ;;  subindex        1   10[BANK0 ] unsigned char 
 10991 ;; Auto vars:     Size  Location     Type
 10992 ;;  nreg_pt         1   14[BANK0 ] unsigned char 
 10993 ;;  absindex        1   15[BANK0 ] unsigned char 
 10994 ;;  i               1   13[BANK0 ] unsigned char 
 10995 ;; Return value:  Size  Location     Type
 10996 ;;                  1    wreg      unsigned char 
 10997 ;; Registers used:
 10998 ;;		wreg, status,2, status,0, pclath, cstack
 10999 ;; Tracked objects:
 11000 ;;		On entry : 0/0
 11001 ;;		On exit  : 0/0
 11002 ;;		Unchanged: 0/0
 11003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11004 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11005 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11006 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11007 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11008 ;;Total ram usage:        9 bytes
 11009 ;; Hardware stack levels used:    1
 11010 ;; Hardware stack levels required when called:    7
 11011 ;; This function calls:
 11012 ;;		_DATAEE_ReadByte
 11013 ;;		___bmul
 11014 ;; This function is called by:
 11015 ;;		_main
 11016 ;; This function uses a non-reentrant model
 11017 ;;
 11018                           
 11019                           
 11020                           ;psect for function _read_ring
 11021  05F2                     _read_ring:	
 11022                           
 11023                           ;incstack = 0
 11024                           ; Regs used in _read_ring: [wreg+status,2+status,0+pclath+cstack]
 11025                           ;read_ring@nreg_pt stored from wreg
 11026  05F2  0020               	movlb	0	; select bank0
 11027  05F3  00D0               	movwf	read_ring@nreg_pt
 11028  05F4                     l5986:	
 11029  05F4                     l5988:	
 11030                           
 11031                           ;eeprom_rw.c: 48:     if(index <= nreg && nreg_init) {
 11032  05F4  084B               	movf	read_ring@index,w
 11033  05F5  0249               	subwf	read_ring@nreg,w
 11034  05F6  1C03               	skipc
 11035  05F7  2DF9               	goto	u3031
 11036  05F8  2DFA               	goto	u3030
 11037  05F9                     u3031:	
 11038  05F9  2E24               	goto	l6000
 11039  05FA                     u3030:	
 11040  05FA                     l5990:	
 11041  05FA  084A               	movf	read_ring@nreg_init,w
 11042  05FB  1903               	btfsc	3,2
 11043  05FC  2DFE               	goto	u3041
 11044  05FD  2DFF               	goto	u3040
 11045  05FE                     u3041:	
 11046  05FE  2E24               	goto	l6000
 11047  05FF                     u3040:	
 11048  05FF                     l5992:	
 11049                           
 11050                           ;eeprom_rw.c: 49:         absindex = 5 * index + subindex;
 11051  05FF  3005               	movlw	5
 11052  0600  00CD               	movwf	??_read_ring
 11053  0601  084D               	movf	??_read_ring,w
 11054  0602  00C5               	movwf	___bmul@multiplicand
 11055  0603  084B               	movf	read_ring@index,w
 11056  0604  318F  2721  3185   	fcall	___bmul
 11057  0607  0020               	movlb	0	; select bank0
 11058  0608  074C               	addwf	read_ring@subindex,w
 11059  0609  00CE               	movwf	??_read_ring+1
 11060  060A  084E               	movf	??_read_ring+1,w
 11061  060B  00D1               	movwf	read_ring@absindex
 11062  060C                     l5994:	
 11063                           
 11064                           ;eeprom_rw.c: 50:         if(absindex <= nreg_pt)
 11065  060C  0851               	movf	read_ring@absindex,w
 11066  060D  0250               	subwf	read_ring@nreg_pt,w
 11067  060E  1C03               	skipc
 11068  060F  2E11               	goto	u3051
 11069  0610  2E12               	goto	u3050
 11070  0611                     u3051:	
 11071  0611  2E19               	goto	l5998
 11072  0612                     u3050:	
 11073  0612                     l5996:	
 11074                           
 11075                           ;eeprom_rw.c: 51:             i = nreg_pt - 5 + absindex;
 11076  0612  0850               	movf	read_ring@nreg_pt,w
 11077  0613  0751               	addwf	read_ring@absindex,w
 11078  0614  3EFB               	addlw	251
 11079  0615  00CD               	movwf	??_read_ring
 11080  0616  084D               	movf	??_read_ring,w
 11081  0617  00CF               	movwf	read_ring@i
 11082  0618  2E26               	goto	l6004
 11083  0619                     l5998:	
 11084                           
 11085                           ;eeprom_rw.c: 53:             i = nreg - (nreg_pt - 5 + absindex);
 11086  0619  0350               	decf	read_ring@nreg_pt,w
 11087  061A  3AFF               	xorlw	255
 11088  061B  00CD               	movwf	??_read_ring
 11089  061C  0851               	movf	read_ring@absindex,w
 11090  061D  024D               	subwf	??_read_ring,w
 11091  061E  0749               	addwf	read_ring@nreg,w
 11092  061F  3E05               	addlw	5
 11093  0620  00CE               	movwf	??_read_ring+1
 11094  0621  084E               	movf	??_read_ring+1,w
 11095  0622  00CF               	movwf	read_ring@i
 11096  0623  2E26               	goto	l6004
 11097  0624                     l6000:	
 11098                           
 11099                           ;eeprom_rw.c: 56:         return 0;
 11100  0624  3000               	movlw	0
 11101  0625  2E30               	goto	l1553
 11102  0626                     l6004:	
 11103                           
 11104                           ;eeprom_rw.c: 58:     return DATAEE_ReadByte(0xF000 + i);
 11105  0626  084F               	movf	read_ring@i,w
 11106  0627  3E00               	addlw	0
 11107  0628  00C5               	movwf	DATAEE_ReadByte@bAdd
 11108  0629  30F0               	movlw	240
 11109  062A  1803               	skipnc
 11110  062B  30F1               	movlw	241
 11111  062C  00C6               	movwf	DATAEE_ReadByte@bAdd+1
 11112  062D  318E  265C  3185   	fcall	_DATAEE_ReadByte
 11113  0630                     l1553:	
 11114  0630  0008               	return
 11115  0631                     __end_of_read_ring:	
 11116                           
 11117                           	psect	text6
 11118  0F21                     __ptext6:	
 11119 ;; *************** function ___bmul *****************
 11120 ;; Defined at:
 11121 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul8.c"
 11122 ;; Parameters:    Size  Location     Type
 11123 ;;  multiplier      1    wreg     unsigned char 
 11124 ;;  multiplicand    1    3[BANK0 ] unsigned char 
 11125 ;; Auto vars:     Size  Location     Type
 11126 ;;  multiplier      1    6[BANK0 ] unsigned char 
 11127 ;;  product         1    5[BANK0 ] unsigned char 
 11128 ;; Return value:  Size  Location     Type
 11129 ;;                  1    wreg      unsigned char 
 11130 ;; Registers used:
 11131 ;;		wreg, status,2, status,0
 11132 ;; Tracked objects:
 11133 ;;		On entry : 0/0
 11134 ;;		On exit  : 0/0
 11135 ;;		Unchanged: 0/0
 11136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11137 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11138 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11139 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11140 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11141 ;;Total ram usage:        4 bytes
 11142 ;; Hardware stack levels used:    1
 11143 ;; Hardware stack levels required when called:    6
 11144 ;; This function calls:
 11145 ;;		Nothing
 11146 ;; This function is called by:
 11147 ;;		_read_ring
 11148 ;; This function uses a non-reentrant model
 11149 ;;
 11150                           
 11151                           
 11152                           ;psect for function ___bmul
 11153  0F21                     ___bmul:	
 11154                           
 11155                           ;incstack = 0
 11156                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 11157                           ;___bmul@multiplier stored from wreg
 11158  0F21  0020               	movlb	0	; select bank0
 11159  0F22  00C8               	movwf	___bmul@multiplier
 11160  0F23                     l5924:	
 11161  0F23  01C7               	clrf	___bmul@product
 11162  0F24                     l5926:	
 11163  0F24  1C48               	btfss	___bmul@multiplier,0
 11164  0F25  2F27               	goto	u2981
 11165  0F26  2F28               	goto	u2980
 11166  0F27                     u2981:	
 11167  0F27  2F2C               	goto	l5930
 11168  0F28                     u2980:	
 11169  0F28                     l5928:	
 11170  0F28  0845               	movf	___bmul@multiplicand,w
 11171  0F29  00C6               	movwf	??___bmul
 11172  0F2A  0846               	movf	??___bmul,w
 11173  0F2B  07C7               	addwf	___bmul@product,f
 11174  0F2C                     l5930:	
 11175  0F2C  1003               	clrc
 11176  0F2D  0DC5               	rlf	___bmul@multiplicand,f
 11177  0F2E                     l5932:	
 11178  0F2E  1003               	clrc
 11179  0F2F  0CC8               	rrf	___bmul@multiplier,f
 11180  0F30  0848               	movf	___bmul@multiplier,w
 11181  0F31  1D03               	btfss	3,2
 11182  0F32  2F34               	goto	u2991
 11183  0F33  2F35               	goto	u2990
 11184  0F34                     u2991:	
 11185  0F34  2F24               	goto	l5926
 11186  0F35                     u2990:	
 11187  0F35                     l5934:	
 11188  0F35  0847               	movf	___bmul@product,w
 11189  0F36                     l1792:	
 11190  0F36  0008               	return
 11191  0F37                     __end_of___bmul:	
 11192                           
 11193                           	psect	text7
 11194  0E5C                     __ptext7:	
 11195 ;; *************** function _DATAEE_ReadByte *****************
 11196 ;; Defined at:
 11197 ;;		line 202 in file "mcc_generated_files/memory.c"
 11198 ;; Parameters:    Size  Location     Type
 11199 ;;  bAdd            2    3[BANK0 ] unsigned short 
 11200 ;; Auto vars:     Size  Location     Type
 11201 ;;		None
 11202 ;; Return value:  Size  Location     Type
 11203 ;;                  1    wreg      unsigned char 
 11204 ;; Registers used:
 11205 ;;		wreg, status,2
 11206 ;; Tracked objects:
 11207 ;;		On entry : 0/0
 11208 ;;		On exit  : 0/0
 11209 ;;		Unchanged: 0/0
 11210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11211 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11214 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11215 ;;Total ram usage:        2 bytes
 11216 ;; Hardware stack levels used:    1
 11217 ;; Hardware stack levels required when called:    6
 11218 ;; This function calls:
 11219 ;;		Nothing
 11220 ;; This function is called by:
 11221 ;;		_recoverData
 11222 ;;		_read_ring
 11223 ;;		_cksum
 11224 ;;		_recover
 11225 ;; This function uses a non-reentrant model
 11226 ;;
 11227                           
 11228                           
 11229                           ;psect for function _DATAEE_ReadByte
 11230  0E5C                     _DATAEE_ReadByte:	
 11231  0E5C                     l5558:	
 11232                           ;incstack = 0
 11233                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 11234                           
 11235                           
 11236                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 11237  0E5C  0020               	movlb	0	; select bank0
 11238  0E5D  0846               	movf	DATAEE_ReadByte@bAdd+1,w
 11239  0E5E  0030               	movlb	16	; select bank16
 11240  0E5F  009B               	movwf	27	;volatile
 11241  0E60                     l5560:	
 11242                           
 11243                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 11244  0E60  0020               	movlb	0	; select bank0
 11245  0E61  0845               	movf	DATAEE_ReadByte@bAdd,w
 11246  0E62  0030               	movlb	16	; select bank16
 11247  0E63  009A               	movwf	26	;volatile
 11248  0E64                     l5562:	
 11249                           
 11250                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 11251  0E64  171E               	bsf	30,6	;volsfr
 11252  0E65                     l5564:	
 11253                           
 11254                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 11255  0E65  141E               	bsf	30,0	;volsfr
 11256  0E66                     l5566:	
 11257                           
 11258                           ;mcc_generated_files/memory.c: 208:     __nop();
 11259  0E66  0000               	nop
 11260  0E67                     l5568:	
 11261                           
 11262                           ;mcc_generated_files/memory.c: 209:     __nop();
 11263  0E67  0000               	nop
 11264  0E68                     l5570:	
 11265                           
 11266                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 11267  0E68  0030               	movlb	16	; select bank16
 11268  0E69  081C               	movf	28,w	;volatile
 11269  0E6A                     l963:	
 11270  0E6A  0008               	return
 11271  0E6B                     __end_of_DATAEE_ReadByte:	
 11272                           
 11273                           	psect	text8
 11274  056B                     __ptext8:	
 11275 ;; *************** function _push_ring *****************
 11276 ;; Defined at:
 11277 ;;		line 34 in file "eeprom_rw.c"
 11278 ;; Parameters:    Size  Location     Type
 11279 ;;  nreg_pt         1    wreg     PTR unsigned char 
 11280 ;;		 -> nreg_pt(1), 
 11281 ;;  nreg            1   13[BANK0 ] unsigned char 
 11282 ;;  nreg_init       1   14[BANK0 ] PTR unsigned char 
 11283 ;;		 -> nreg_init(1), 
 11284 ;;  ring_byte       1   15[BANK0 ] PTR unsigned char 
 11285 ;;		 -> ring_byte(5), 
 11286 ;; Auto vars:     Size  Location     Type
 11287 ;;  nreg_pt         1   19[BANK0 ] PTR unsigned char 
 11288 ;;		 -> nreg_pt(1), 
 11289 ;;  i               1   18[BANK0 ] unsigned char 
 11290 ;; Return value:  Size  Location     Type
 11291 ;;                  1    wreg      void 
 11292 ;; Registers used:
 11293 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11294 ;; Tracked objects:
 11295 ;;		On entry : 0/0
 11296 ;;		On exit  : 0/0
 11297 ;;		Unchanged: 0/0
 11298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11299 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11300 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11301 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11302 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11303 ;;Total ram usage:        7 bytes
 11304 ;; Hardware stack levels used:    1
 11305 ;; Hardware stack levels required when called:    7
 11306 ;; This function calls:
 11307 ;;		_DATAEE_WriteByte
 11308 ;; This function is called by:
 11309 ;;		_main
 11310 ;; This function uses a non-reentrant model
 11311 ;;
 11312                           
 11313                           
 11314                           ;psect for function _push_ring
 11315  056B                     _push_ring:	
 11316                           
 11317                           ;incstack = 0
 11318                           ; Regs used in _push_ring: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11319                           ;push_ring@nreg_pt stored from wreg
 11320  056B  0020               	movlb	0	; select bank0
 11321  056C  00D5               	movwf	push_ring@nreg_pt
 11322  056D                     l6008:	
 11323                           
 11324                           ;eeprom_rw.c: 34: void push_ring(unsigned char* nreg_pt, unsigned char nreg, unsigned ch
      +                          ar* nreg_init, unsigned char* ring_byte);eeprom_rw.c: 35: { if(!(*nreg_init)) (*nreg_ini
      +                          t) = 1;
 11325  056D  0850               	movf	push_ring@nreg_init,w
 11326  056E  0086               	movwf	6
 11327  056F  0187               	clrf	7
 11328  0570  0801               	movf	1,w
 11329  0571  1D03               	btfss	3,2
 11330  0572  2D74               	goto	u3061
 11331  0573  2D75               	goto	u3060
 11332  0574                     u3061:	
 11333  0574  2D7A               	goto	l6012
 11334  0575                     u3060:	
 11335  0575                     l6010:	
 11336  0575  0850               	movf	push_ring@nreg_init,w
 11337  0576  0086               	movwf	6
 11338  0577  0187               	clrf	7
 11339  0578  0181               	clrf	1
 11340  0579  0A81               	incf	1,f
 11341  057A                     l6012:	
 11342                           
 11343                           ;eeprom_rw.c: 36:     for(unsigned char i = 0; i < 5; i++) {
 11344  057A  01D4               	clrf	push_ring@i
 11345  057B                     l6018:	
 11346                           
 11347                           ;eeprom_rw.c: 37:         if((*nreg_pt) >= nreg) (*nreg_pt) = 0;
 11348  057B  0855               	movf	push_ring@nreg_pt,w
 11349  057C  0086               	movwf	6
 11350  057D  0187               	clrf	7
 11351  057E  084F               	movf	push_ring@nreg,w
 11352  057F  0201               	subwf	1,w
 11353  0580  1C03               	skipc
 11354  0581  2D83               	goto	u3071
 11355  0582  2D84               	goto	u3070
 11356  0583                     u3071:	
 11357  0583  2D88               	goto	l6022
 11358  0584                     u3070:	
 11359  0584                     l6020:	
 11360  0584  0855               	movf	push_ring@nreg_pt,w
 11361  0585  0086               	movwf	6
 11362  0586  0187               	clrf	7
 11363  0587  0181               	clrf	1
 11364  0588                     l6022:	
 11365                           
 11366                           ;eeprom_rw.c: 38:         DATAEE_WriteByte(0xF000 + (*nreg_pt), ring_byte[i]);
 11367  0588  0855               	movf	push_ring@nreg_pt,w
 11368  0589  0086               	movwf	6
 11369  058A  0187               	clrf	7
 11370  058B  0801               	movf	1,w
 11371  058C  3E00               	addlw	0
 11372  058D  00CB               	movwf	DATAEE_WriteByte@bAdd
 11373  058E  30F0               	movlw	240
 11374  058F  1803               	skipnc
 11375  0590  30F1               	movlw	241
 11376  0591  00CC               	movwf	DATAEE_WriteByte@bAdd+1
 11377  0592  0854               	movf	push_ring@i,w
 11378  0593  0751               	addwf	push_ring@ring_byte,w
 11379  0594  00D2               	movwf	??_push_ring
 11380  0595  0852               	movf	??_push_ring,w
 11381  0596  0086               	movwf	6
 11382  0597  0187               	clrf	7
 11383  0598  0801               	movf	1,w
 11384  0599  00D3               	movwf	??_push_ring+1
 11385  059A  0853               	movf	??_push_ring+1,w
 11386  059B  00CD               	movwf	DATAEE_WriteByte@bData
 11387  059C  3187  2738  3185   	fcall	_DATAEE_WriteByte
 11388  059F                     l6024:	
 11389                           
 11390                           ;eeprom_rw.c: 39:         (*nreg_pt)++;
 11391  059F  3001               	movlw	1
 11392  05A0  0020               	movlb	0	; select bank0
 11393  05A1  00D2               	movwf	??_push_ring
 11394  05A2  0855               	movf	push_ring@nreg_pt,w
 11395  05A3  0086               	movwf	6
 11396  05A4  0187               	clrf	7
 11397  05A5  0852               	movf	??_push_ring,w
 11398  05A6  0781               	addwf	1,f
 11399  05A7                     l6026:	
 11400                           
 11401                           ;eeprom_rw.c: 40:     }
 11402  05A7  3001               	movlw	1
 11403  05A8  00D2               	movwf	??_push_ring
 11404  05A9  0852               	movf	??_push_ring,w
 11405  05AA  07D4               	addwf	push_ring@i,f
 11406  05AB                     l6028:	
 11407  05AB  3005               	movlw	5
 11408  05AC  0254               	subwf	push_ring@i,w
 11409  05AD  1C03               	skipc
 11410  05AE  2DB0               	goto	u3081
 11411  05AF  2DB1               	goto	u3080
 11412  05B0                     u3081:	
 11413  05B0  2D7B               	goto	l6018
 11414  05B1                     u3080:	
 11415  05B1                     l1546:	
 11416  05B1  0008               	return
 11417  05B2                     __end_of_push_ring:	
 11418                           
 11419                           	psect	text9
 11420  0738                     __ptext9:	
 11421 ;; *************** function _DATAEE_WriteByte *****************
 11422 ;; Defined at:
 11423 ;;		line 180 in file "mcc_generated_files/memory.c"
 11424 ;; Parameters:    Size  Location     Type
 11425 ;;  bAdd            2    9[BANK0 ] unsigned short 
 11426 ;;  bData           1   11[BANK0 ] unsigned char 
 11427 ;; Auto vars:     Size  Location     Type
 11428 ;;  GIEBitValue     1   12[BANK0 ] unsigned char 
 11429 ;; Return value:  Size  Location     Type
 11430 ;;                  1    wreg      void 
 11431 ;; Registers used:
 11432 ;;		wreg, status,2, status,0
 11433 ;; Tracked objects:
 11434 ;;		On entry : 0/0
 11435 ;;		On exit  : 0/0
 11436 ;;		Unchanged: 0/0
 11437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11438 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11439 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11441 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11442 ;;Total ram usage:        4 bytes
 11443 ;; Hardware stack levels used:    1
 11444 ;; Hardware stack levels required when called:    6
 11445 ;; This function calls:
 11446 ;;		Nothing
 11447 ;; This function is called by:
 11448 ;;		_main
 11449 ;;		_recoverData
 11450 ;;		_push_ring
 11451 ;;		_cksum_w
 11452 ;;		_reset_recv
 11453 ;;		_recover
 11454 ;; This function uses a non-reentrant model
 11455 ;;
 11456                           
 11457                           
 11458                           ;psect for function _DATAEE_WriteByte
 11459  0738                     _DATAEE_WriteByte:	
 11460  0738                     l5618:	
 11461                           ;incstack = 0
 11462                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 11463                           
 11464                           
 11465                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 11466  0738  3000               	movlw	0
 11467  0739  1B8B               	btfsc	11,7	;volatile
 11468  073A  3001               	movlw	1
 11469  073B  0020               	movlb	0	; select bank0
 11470  073C  00CE               	movwf	DATAEE_WriteByte@GIEBitValue
 11471                           
 11472                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 11473  073D  084C               	movf	DATAEE_WriteByte@bAdd+1,w
 11474  073E  0030               	movlb	16	; select bank16
 11475  073F  009B               	movwf	27	;volatile
 11476  0740                     l5620:	
 11477                           
 11478                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 11479  0740  0020               	movlb	0	; select bank0
 11480  0741  084B               	movf	DATAEE_WriteByte@bAdd,w
 11481  0742  0030               	movlb	16	; select bank16
 11482  0743  009A               	movwf	26	;volatile
 11483  0744                     l5622:	
 11484                           
 11485                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 11486  0744  0020               	movlb	0	; select bank0
 11487  0745  084D               	movf	DATAEE_WriteByte@bData,w
 11488  0746  0030               	movlb	16	; select bank16
 11489  0747  009C               	movwf	28	;volatile
 11490  0748                     l5624:	
 11491                           
 11492                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 11493  0748  171E               	bsf	30,6	;volsfr
 11494  0749                     l5626:	
 11495                           
 11496                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 11497  0749  151E               	bsf	30,2	;volsfr
 11498  074A                     l5628:	
 11499                           
 11500                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 11501  074A  138B               	bcf	11,7	;volatile
 11502  074B                     l5630:	
 11503                           
 11504                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 11505  074B  3055               	movlw	85
 11506  074C  009F               	movwf	31	;volsfr
 11507  074D                     l5632:	
 11508                           
 11509                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 11510  074D  30AA               	movlw	170
 11511  074E  009F               	movwf	31	;volsfr
 11512  074F                     l5634:	
 11513                           
 11514                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 11515  074F  149E               	bsf	30,1	;volsfr
 11516  0750                     l957:	
 11517                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 11518                           
 11519                           
 11520                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 11521  0750  189E               	btfsc	30,1	;volsfr
 11522  0751  2F53               	goto	u2851
 11523  0752  2F54               	goto	u2850
 11524  0753                     u2851:	
 11525  0753  2F50               	goto	l957
 11526  0754                     u2850:	
 11527  0754                     l959:	
 11528                           
 11529                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 11530  0754  111E               	bcf	30,2	;volsfr
 11531  0755                     l5636:	
 11532                           
 11533                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 11534  0755  0020               	movlb	0	; select bank0
 11535  0756  0C4E               	rrf	DATAEE_WriteByte@GIEBitValue,w
 11536  0757  1C03               	skipc
 11537  0758  138B               	bcf	11,7	;volatile
 11538  0759  1803               	skipnc
 11539  075A  178B               	bsf	11,7	;volatile
 11540  075B                     l960:	
 11541  075B  0008               	return
 11542  075C                     __end_of_DATAEE_WriteByte:	
 11543                           
 11544                           	psect	text10
 11545  0251                     __ptext10:	
 11546 ;; *************** function _config_routine *****************
 11547 ;; Defined at:
 11548 ;;		line 247 in file "main.c"
 11549 ;; Parameters:    Size  Location     Type
 11550 ;;		None
 11551 ;; Auto vars:     Size  Location     Type
 11552 ;;  select_mode     2   18[BANK0 ] unsigned int 
 11553 ;; Return value:  Size  Location     Type
 11554 ;;                  1    wreg      void 
 11555 ;; Registers used:
 11556 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11557 ;; Tracked objects:
 11558 ;;		On entry : 0/0
 11559 ;;		On exit  : 0/0
 11560 ;;		Unchanged: 0/0
 11561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11563 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11564 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11565 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11566 ;;Total ram usage:        3 bytes
 11567 ;; Hardware stack levels used:    1
 11568 ;; Hardware stack levels required when called:    9
 11569 ;; This function calls:
 11570 ;;		_all_LED
 11571 ;;		_checkDebounceSW1
 11572 ;;		_checkDebounceSW2
 11573 ;;		_clock_subfields
 11574 ;;		_mod1_LED
 11575 ;;		_mod2_LED
 11576 ;;		_mod3_LED
 11577 ;;		_mod4_LED
 11578 ;;		_mode_select_LED
 11579 ;; This function is called by:
 11580 ;;		_main
 11581 ;; This function uses a non-reentrant model
 11582 ;;
 11583                           
 11584                           
 11585                           ;psect for function _config_routine
 11586  0251                     _config_routine:	
 11587  0251                     l6032:	
 11588                           ;incstack = 0
 11589                           ; Regs used in _config_routine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11590                           
 11591                           
 11592                           ;main.c: 249:     unsigned int select_mode =0;
 11593  0251  0020               	movlb	0	; select bank0
 11594  0252  01D4               	clrf	config_routine@select_mode
 11595  0253  01D5               	clrf	config_routine@select_mode+1
 11596  0254                     l6034:	
 11597                           
 11598                           ;main.c: 250:       last_ms = clkms;
 11599  0254  083C               	movf	_clkms,w	;volatile
 11600  0255  00D3               	movwf	??_config_routine
 11601  0256  0853               	movf	??_config_routine,w
 11602  0257  00BB               	movwf	_last_ms
 11603  0258                     l6036:	
 11604                           
 11605                           ;main.c: 251:       last_ms2 = clkms;
 11606  0258  083C               	movf	_clkms,w	;volatile
 11607  0259  00D3               	movwf	??_config_routine
 11608  025A  0853               	movf	??_config_routine,w
 11609  025B  00BA               	movwf	_last_ms2
 11610  025C                     l6038:	
 11611                           
 11612                           ;main.c: 255:                 if(mode_field_subfield[0] == -1 && select_mode == 0){
 11613  025C  0020               	movlb	0	; select bank0
 11614  025D  0A65               	incf	_mode_field_subfield,w
 11615  025E  1D03               	skipz
 11616  025F  2A64               	goto	u3091
 11617  0260  0A66               	incf	_mode_field_subfield+1,w
 11618  0261  1D03               	btfss	3,2
 11619  0262  2A64               	goto	u3091
 11620  0263  2A65               	goto	u3090
 11621  0264                     u3091:	
 11622  0264  2A6E               	goto	l6044
 11623  0265                     u3090:	
 11624  0265                     l6040:	
 11625  0265  0854               	movf	config_routine@select_mode,w
 11626  0266  0455               	iorwf	config_routine@select_mode+1,w
 11627  0267  1D03               	btfss	3,2
 11628  0268  2A6A               	goto	u3101
 11629  0269  2A6B               	goto	u3100
 11630  026A                     u3101:	
 11631  026A  2A6E               	goto	l6044
 11632  026B                     u3100:	
 11633  026B                     l6042:	
 11634                           
 11635                           ;main.c: 256:                         all_LED();}
 11636  026B  3183  2342  3182   	fcall	_all_LED
 11637  026E                     l6044:	
 11638                           
 11639                           ;main.c: 258:                 if(!PORTBbits.RB4){
 11640  026E  0020               	movlb	0	; select bank0
 11641  026F  1A0D               	btfsc	13,4	;volatile
 11642  0270  2A72               	goto	u3111
 11643  0271  2A73               	goto	u3110
 11644  0272                     u3111:	
 11645  0272  2AAE               	goto	l6066
 11646  0273                     u3110:	
 11647  0273                     l6046:	
 11648                           
 11649                           ;main.c: 259:                     if(checkDebounceSW1()){
 11650  0273  3184  243E  3182   	fcall	_checkDebounceSW1
 11651  0276  3A00               	xorlw	0
 11652  0277  1903               	skipnz
 11653  0278  2A7A               	goto	u3121
 11654  0279  2A7B               	goto	u3120
 11655  027A                     u3121:	
 11656  027A  2AA9               	goto	l6064
 11657  027B                     u3120:	
 11658  027B                     l6048:	
 11659                           
 11660                           ;main.c: 261:                             select_mode +=1;
 11661  027B  3001               	movlw	1
 11662  027C  0020               	movlb	0	; select bank0
 11663  027D  07D4               	addwf	config_routine@select_mode,f
 11664  027E  3000               	movlw	0
 11665  027F  3DD5               	addwfc	config_routine@select_mode+1,f
 11666                           
 11667                           ;main.c: 263:                         switch(select_mode){
 11668  0280  2A96               	goto	l6062
 11669  0281                     l6050:	
 11670  0281  318D  25DB  3182   	fcall	_mod1_LED
 11671  0284  2AA9               	goto	l6064
 11672  0285                     l6052:	
 11673  0285  318D  25D1  3182   	fcall	_mod2_LED
 11674  0288  2AA9               	goto	l6064
 11675  0289                     l6054:	
 11676  0289  318D  25E6  3182   	fcall	_mod3_LED
 11677  028C  2AA9               	goto	l6064
 11678  028D                     l6056:	
 11679  028D  318D  25F1  3182   	fcall	_mod4_LED
 11680  0290  2AA9               	goto	l6064
 11681  0291                     l6058:	
 11682  0291  01D4               	clrf	config_routine@select_mode
 11683  0292  01D5               	clrf	config_routine@select_mode+1
 11684  0293  01FD               	clrf	_config_mode	;volatile
 11685  0294  01B8               	clrf	_alarm	;volatile
 11686                           
 11687                           ;main.c: 269:                             break;
 11688  0295  2AA9               	goto	l6064
 11689  0296                     l6062:	
 11690                           
 11691                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11692                           ; Switch size 1, requested type "simple"
 11693                           ; Number of cases is 1, Range of values is 0 to 0
 11694                           ; switch strategies available:
 11695                           ; Name         Instructions Cycles
 11696                           ; simple_byte            4     3 (average)
 11697                           ; direct_byte            8     6 (fixed)
 11698                           ; jumptable            260     6 (fixed)
 11699                           ;	Chosen strategy is simple_byte
 11700  0296  0855               	movf	config_routine@select_mode+1,w
 11701  0297  3A00               	xorlw	0	; case 0
 11702  0298  1903               	skipnz
 11703  0299  2A9B               	goto	l6346
 11704  029A  2A91               	goto	l6058
 11705  029B                     l6346:	
 11706                           
 11707                           ; Switch size 1, requested type "simple"
 11708                           ; Number of cases is 4, Range of values is 1 to 4
 11709                           ; switch strategies available:
 11710                           ; Name         Instructions Cycles
 11711                           ; simple_byte           13     7 (average)
 11712                           ; direct_byte           17     9 (fixed)
 11713                           ; jumptable            263     9 (fixed)
 11714                           ;	Chosen strategy is simple_byte
 11715  029B  0854               	movf	config_routine@select_mode,w
 11716  029C  3A01               	xorlw	1	; case 1
 11717  029D  1903               	skipnz
 11718  029E  2A81               	goto	l6050
 11719  029F  3A03               	xorlw	3	; case 2
 11720  02A0  1903               	skipnz
 11721  02A1  2A85               	goto	l6052
 11722  02A2  3A01               	xorlw	1	; case 3
 11723  02A3  1903               	skipnz
 11724  02A4  2A89               	goto	l6054
 11725  02A5  3A07               	xorlw	7	; case 4
 11726  02A6  1903               	skipnz
 11727  02A7  2A8D               	goto	l6056
 11728  02A8  2A91               	goto	l6058
 11729  02A9                     l6064:	
 11730                           
 11731                           ;main.c: 274:                         last_ms = clkms;
 11732  02A9  0020               	movlb	0	; select bank0
 11733  02AA  083C               	movf	_clkms,w	;volatile
 11734  02AB  00D3               	movwf	??_config_routine
 11735  02AC  0853               	movf	??_config_routine,w
 11736  02AD  00BB               	movwf	_last_ms
 11737  02AE                     l6066:	
 11738                           
 11739                           ;main.c: 278:                 if(!PORTCbits.RC5){
 11740  02AE  1A8E               	btfsc	14,5	;volatile
 11741  02AF  2AB1               	goto	u3131
 11742  02B0  2AB2               	goto	u3130
 11743  02B1                     u3131:	
 11744  02B1  2ACC               	goto	l6078
 11745  02B2                     u3130:	
 11746  02B2                     l6068:	
 11747                           
 11748                           ;main.c: 279:                     if(checkDebounceSW2()){
 11749  02B2  3183  23F1  3182   	fcall	_checkDebounceSW2
 11750  02B5  3A00               	xorlw	0
 11751  02B6  1903               	skipnz
 11752  02B7  2AB9               	goto	u3141
 11753  02B8  2ABA               	goto	u3140
 11754  02B9                     u3141:	
 11755  02B9  2ACC               	goto	l6078
 11756  02BA                     u3140:	
 11757  02BA                     l6070:	
 11758                           
 11759                           ;main.c: 280:                         mode_field_subfield[0] = select_mode;
 11760  02BA  0020               	movlb	0	; select bank0
 11761  02BB  0855               	movf	config_routine@select_mode+1,w
 11762  02BC  00E6               	movwf	_mode_field_subfield+1
 11763  02BD  0854               	movf	config_routine@select_mode,w
 11764  02BE  00E5               	movwf	_mode_field_subfield
 11765  02BF                     l6072:	
 11766                           
 11767                           ;main.c: 281:                         mode_select_LED();
 11768  02BF  3187  279C  3182   	fcall	_mode_select_LED
 11769  02C2                     l6074:	
 11770                           
 11771                           ;main.c: 283:                         if(select_mode== 1){
 11772  02C2  0020               	movlb	0	; select bank0
 11773  02C3  0354               	decf	config_routine@select_mode,w
 11774  02C4  0455               	iorwf	config_routine@select_mode+1,w
 11775  02C5  1D03               	btfss	3,2
 11776  02C6  2AC8               	goto	u3151
 11777  02C7  2AC9               	goto	u3150
 11778  02C8                     u3151:	
 11779  02C8  2ACC               	goto	l6078
 11780  02C9                     u3150:	
 11781  02C9                     l6076:	
 11782                           
 11783                           ;main.c: 284:                             clock_subfields();
 11784  02C9  3182  22DF  3182   	fcall	_clock_subfields
 11785  02CC                     l6078:	
 11786                           
 11787                           ;main.c: 290:                    _delay((unsigned long)((2)*(1000000/4000.0)));
 11788  02CC  30A6               	movlw	166
 11789  02CD                     u3307:	
 11790  02CD  0B89               	decfsz	9,f
 11791  02CE  2ACD               	goto	u3307
 11792  02CF  3200               	nop2
 11793  02D0                     l6080:	
 11794                           
 11795                           ;main.c: 292:             }while(config_mode == 1);
 11796  02D0  037D               	decf	_config_mode,w	;volatile
 11797  02D1  1903               	btfsc	3,2
 11798  02D2  2AD4               	goto	u3161
 11799  02D3  2AD5               	goto	u3160
 11800  02D4                     u3161:	
 11801  02D4  2A5C               	goto	l6038
 11802  02D5                     u3160:	
 11803  02D5                     l6082:	
 11804                           
 11805                           ;main.c: 294:     mode_field_subfield[0] = -1;
 11806  02D5  30FF               	movlw	255
 11807  02D6  0020               	movlb	0	; select bank0
 11808  02D7  00E5               	movwf	_mode_field_subfield
 11809  02D8  30FF               	movlw	255
 11810  02D9  00E6               	movwf	_mode_field_subfield+1
 11811                           
 11812                           ;main.c: 295:     mode_field_subfield[1] = -1;
 11813  02DA  30FF               	movlw	255
 11814  02DB  00E7               	movwf	_mode_field_subfield+2
 11815  02DC  30FF               	movlw	255
 11816  02DD  00E8               	movwf	_mode_field_subfield+3
 11817  02DE                     l1246:	
 11818  02DE  0008               	return
 11819  02DF                     __end_of_config_routine:	
 11820                           
 11821                           	psect	text11
 11822  079C                     __ptext11:	
 11823 ;; *************** function _mode_select_LED *****************
 11824 ;; Defined at:
 11825 ;;		line 519 in file "main.c"
 11826 ;; Parameters:    Size  Location     Type
 11827 ;;		None
 11828 ;; Auto vars:     Size  Location     Type
 11829 ;;		None
 11830 ;; Return value:  Size  Location     Type
 11831 ;;                  1    wreg      void 
 11832 ;; Registers used:
 11833 ;;		wreg, status,2, status,0, pclath, cstack
 11834 ;; Tracked objects:
 11835 ;;		On entry : 0/0
 11836 ;;		On exit  : 0/0
 11837 ;;		Unchanged: 0/0
 11838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11841 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11842 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11843 ;;Total ram usage:        1 bytes
 11844 ;; Hardware stack levels used:    1
 11845 ;; Hardware stack levels required when called:    7
 11846 ;; This function calls:
 11847 ;;		_PWM6_LoadDutyValue
 11848 ;; This function is called by:
 11849 ;;		_config_routine
 11850 ;; This function uses a non-reentrant model
 11851 ;;
 11852                           
 11853                           
 11854                           ;psect for function _mode_select_LED
 11855  079C                     _mode_select_LED:	
 11856  079C                     l5866:	
 11857                           ;incstack = 0
 11858                           ; Regs used in _mode_select_LED: [wreg+status,2+status,0+pclath+cstack]
 11859                           
 11860                           
 11861                           ;main.c: 522:                         PWM6_LoadDutyValue(1023);
 11862  079C  30FF               	movlw	255
 11863  079D  0020               	movlb	0	; select bank0
 11864  079E  00C5               	movwf	PWM6_LoadDutyValue@dutyValue
 11865  079F  3003               	movlw	3
 11866  07A0  00C6               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11867  07A1  318F  2797  3187   	fcall	_PWM6_LoadDutyValue
 11868  07A4                     l5868:	
 11869  07A4  0020               	movlb	0	; select bank0
 11870  07A5  1616               	bsf	22,4	;volatile
 11871  07A6                     l5870:	
 11872                           
 11873                           ;main.c: 524:                         _delay((unsigned long)((500)*(1000000/4000.0)));
 11874  07A6  30A3               	movlw	163
 11875  07A7  0020               	movlb	0	; select bank0
 11876  07A8  00C9               	movwf	??_mode_select_LED
 11877  07A9  3055               	movlw	85
 11878  07AA                     u3317:	
 11879  07AA  0B89               	decfsz	9,f
 11880  07AB  2FAA               	goto	u3317
 11881  07AC  0BC9               	decfsz	??_mode_select_LED,f
 11882  07AD  2FAA               	goto	u3317
 11883  07AE                     l5872:	
 11884  07AE  0020               	movlb	0	; select bank0
 11885  07AF  1696               	bsf	22,5	;volatile
 11886  07B0                     l5874:	
 11887                           
 11888                           ;main.c: 526:                         _delay((unsigned long)((500)*(1000000/4000.0)));
 11889  07B0  30A3               	movlw	163
 11890  07B1  0020               	movlb	0	; select bank0
 11891  07B2  00C9               	movwf	??_mode_select_LED
 11892  07B3  3055               	movlw	85
 11893  07B4                     u3327:	
 11894  07B4  0B89               	decfsz	9,f
 11895  07B5  2FB4               	goto	u3327
 11896  07B6  0BC9               	decfsz	??_mode_select_LED,f
 11897  07B7  2FB4               	goto	u3327
 11898  07B8                     l5876:	
 11899  07B8  0020               	movlb	0	; select bank0
 11900  07B9  1216               	bcf	22,4	;volatile
 11901  07BA                     l5878:	
 11902  07BA  1296               	bcf	22,5	;volatile
 11903  07BB                     l1354:	
 11904  07BB  0008               	return
 11905  07BC                     __end_of_mode_select_LED:	
 11906                           
 11907                           	psect	text12
 11908  02DF                     __ptext12:	
 11909 ;; *************** function _clock_subfields *****************
 11910 ;; Defined at:
 11911 ;;		line 322 in file "main.c"
 11912 ;; Parameters:    Size  Location     Type
 11913 ;;		None
 11914 ;; Auto vars:     Size  Location     Type
 11915 ;;  subfield        2   15[BANK0 ] unsigned int 
 11916 ;; Return value:  Size  Location     Type
 11917 ;;                  1    wreg      void 
 11918 ;; Registers used:
 11919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11920 ;; Tracked objects:
 11921 ;;		On entry : 0/0
 11922 ;;		On exit  : 0/0
 11923 ;;		Unchanged: 0/0
 11924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11926 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11927 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11928 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11929 ;;Total ram usage:        3 bytes
 11930 ;; Hardware stack levels used:    1
 11931 ;; Hardware stack levels required when called:    8
 11932 ;; This function calls:
 11933 ;;		_checkDebounceSW1
 11934 ;;		_checkDebounceSW2
 11935 ;;		_increment_subfield
 11936 ;;		_mod1_LED
 11937 ;;		_mod2_LED
 11938 ;;		_mod3_LED
 11939 ;;		_mod4_LED
 11940 ;; This function is called by:
 11941 ;;		_config_routine
 11942 ;; This function uses a non-reentrant model
 11943 ;;
 11944                           
 11945                           
 11946                           ;psect for function _clock_subfields
 11947  02DF                     _clock_subfields:	
 11948  02DF                     l5880:	
 11949                           ;incstack = 0
 11950                           ; Regs used in _clock_subfields: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11951                           
 11952                           
 11953                           ;main.c: 324:     unsigned int subfield = 1;
 11954  02DF  3001               	movlw	1
 11955  02E0  0020               	movlb	0	; select bank0
 11956  02E1  00D1               	movwf	clock_subfields@subfield
 11957  02E2  3000               	movlw	0
 11958  02E3  00D2               	movwf	clock_subfields@subfield+1
 11959  02E4                     l5882:	
 11960                           
 11961                           ;main.c: 328:                 if(!PORTBbits.RB4){
 11962  02E4  1A0D               	btfsc	13,4	;volatile
 11963  02E5  2AE7               	goto	u2921
 11964  02E6  2AE8               	goto	u2920
 11965  02E7                     u2921:	
 11966  02E7  2B0B               	goto	l5898
 11967  02E8                     u2920:	
 11968  02E8                     l5884:	
 11969                           
 11970                           ;main.c: 329:                     if(checkDebounceSW1()){
 11971  02E8  3184  243E  3182   	fcall	_checkDebounceSW1
 11972  02EB  3A00               	xorlw	0
 11973  02EC  1903               	skipnz
 11974  02ED  2AEF               	goto	u2931
 11975  02EE  2AF0               	goto	u2930
 11976  02EF                     u2931:	
 11977  02EF  2AF5               	goto	l1261
 11978  02F0                     u2930:	
 11979  02F0                     l5886:	
 11980                           
 11981                           ;main.c: 330:                             subfield +=1;
 11982  02F0  3001               	movlw	1
 11983  02F1  0020               	movlb	0	; select bank0
 11984  02F2  07D1               	addwf	clock_subfields@subfield,f
 11985  02F3  3000               	movlw	0
 11986  02F4  3DD2               	addwfc	clock_subfields@subfield+1,f
 11987  02F5                     l1261:	
 11988                           ;main.c: 331:                         }
 11989                           
 11990                           
 11991                           ;main.c: 332:                         last_ms = clkms;
 11992  02F5  0020               	movlb	0	; select bank0
 11993  02F6  083C               	movf	_clkms,w	;volatile
 11994  02F7  00D0               	movwf	??_clock_subfields
 11995  02F8  0850               	movf	??_clock_subfields,w
 11996  02F9  00BB               	movwf	_last_ms
 11997  02FA  2B0B               	goto	l5898
 11998  02FB                     l5888:	
 11999  02FB  318D  25DB  3182   	fcall	_mod1_LED
 12000  02FE  2B1E               	goto	l1264
 12001  02FF                     l5890:	
 12002  02FF  318D  25D1  3182   	fcall	_mod2_LED
 12003  0302  2B1E               	goto	l1264
 12004  0303                     l5892:	
 12005  0303  318D  25E6  3182   	fcall	_mod3_LED
 12006  0306  2B1E               	goto	l1264
 12007  0307                     l5894:	
 12008  0307  318D  25F1  3182   	fcall	_mod4_LED
 12009  030A  2B1E               	goto	l1264
 12010  030B                     l5898:	
 12011                           
 12012                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12013                           ; Switch size 1, requested type "simple"
 12014                           ; Number of cases is 1, Range of values is 0 to 0
 12015                           ; switch strategies available:
 12016                           ; Name         Instructions Cycles
 12017                           ; simple_byte            4     3 (average)
 12018                           ; direct_byte            8     6 (fixed)
 12019                           ; jumptable            260     6 (fixed)
 12020                           ;	Chosen strategy is simple_byte
 12021  030B  0852               	movf	clock_subfields@subfield+1,w
 12022  030C  3A00               	xorlw	0	; case 0
 12023  030D  1903               	skipnz
 12024  030E  2B10               	goto	l6348
 12025  030F  2B1E               	goto	l1264
 12026  0310                     l6348:	
 12027                           
 12028                           ; Switch size 1, requested type "simple"
 12029                           ; Number of cases is 4, Range of values is 1 to 4
 12030                           ; switch strategies available:
 12031                           ; Name         Instructions Cycles
 12032                           ; simple_byte           13     7 (average)
 12033                           ; direct_byte           17     9 (fixed)
 12034                           ; jumptable            263     9 (fixed)
 12035                           ;	Chosen strategy is simple_byte
 12036  0310  0851               	movf	clock_subfields@subfield,w
 12037  0311  3A01               	xorlw	1	; case 1
 12038  0312  1903               	skipnz
 12039  0313  2AFB               	goto	l5888
 12040  0314  3A03               	xorlw	3	; case 2
 12041  0315  1903               	skipnz
 12042  0316  2AFF               	goto	l5890
 12043  0317  3A01               	xorlw	1	; case 3
 12044  0318  1903               	skipnz
 12045  0319  2B03               	goto	l5892
 12046  031A  3A07               	xorlw	7	; case 4
 12047  031B  1903               	skipnz
 12048  031C  2B07               	goto	l5894
 12049  031D  2B1E               	goto	l1264
 12050  031E                     l1264:	
 12051                           
 12052                           ;main.c: 346:                 if(!PORTCbits.RC5){
 12053  031E  0020               	movlb	0	; select bank0
 12054  031F  1A8E               	btfsc	14,5	;volatile
 12055  0320  2B22               	goto	u2941
 12056  0321  2B23               	goto	u2940
 12057  0322                     u2941:	
 12058  0322  2B33               	goto	l5906
 12059  0323                     u2940:	
 12060  0323                     l5900:	
 12061                           
 12062                           ;main.c: 347:                     if(checkDebounceSW2()){
 12063  0323  3183  23F1  3182   	fcall	_checkDebounceSW2
 12064  0326  3A00               	xorlw	0
 12065  0327  1903               	skipnz
 12066  0328  2B2A               	goto	u2951
 12067  0329  2B2B               	goto	u2950
 12068  032A                     u2951:	
 12069  032A  2B33               	goto	l5906
 12070  032B                     u2950:	
 12071  032B                     l5902:	
 12072                           
 12073                           ;main.c: 349:                         mode_field_subfield[1] = subfield;
 12074  032B  0020               	movlb	0	; select bank0
 12075  032C  0852               	movf	clock_subfields@subfield+1,w
 12076  032D  00E8               	movwf	_mode_field_subfield+3
 12077  032E  0851               	movf	clock_subfields@subfield,w
 12078  032F  00E7               	movwf	_mode_field_subfield+2
 12079  0330                     l5904:	
 12080                           
 12081                           ;main.c: 350:                         increment_subfield();
 12082  0330  3185  25B2  3182   	fcall	_increment_subfield
 12083  0333                     l5906:	
 12084                           
 12085                           ;main.c: 354:                    _delay((unsigned long)((2)*(1000000/4000.0)));
 12086  0333  30A6               	movlw	166
 12087  0334                     u3337:	
 12088  0334  0B89               	decfsz	9,f
 12089  0335  2B34               	goto	u3337
 12090  0336  3200               	nop2
 12091  0337                     l5908:	
 12092                           
 12093                           ;main.c: 356:             }while(subfield <= 4 );
 12094  0337  3000               	movlw	0
 12095  0338  0020               	movlb	0	; select bank0
 12096  0339  0252               	subwf	clock_subfields@subfield+1,w
 12097  033A  3005               	movlw	5
 12098  033B  1903               	skipnz
 12099  033C  0251               	subwf	clock_subfields@subfield,w
 12100  033D  1C03               	skipc
 12101  033E  2B40               	goto	u2961
 12102  033F  2B41               	goto	u2960
 12103  0340                     u2961:	
 12104  0340  2AE4               	goto	l5882
 12105  0341                     u2960:	
 12106  0341                     l1272:	
 12107  0341  0008               	return
 12108  0342                     __end_of_clock_subfields:	
 12109                           
 12110                           	psect	text13
 12111  0DF1                     __ptext13:	
 12112 ;; *************** function _mod4_LED *****************
 12113 ;; Defined at:
 12114 ;;		line 473 in file "main.c"
 12115 ;; Parameters:    Size  Location     Type
 12116 ;;		None
 12117 ;; Auto vars:     Size  Location     Type
 12118 ;;		None
 12119 ;; Return value:  Size  Location     Type
 12120 ;;                  1    wreg      void 
 12121 ;; Registers used:
 12122 ;;		wreg, status,2, status,0, pclath, cstack
 12123 ;; Tracked objects:
 12124 ;;		On entry : 0/0
 12125 ;;		On exit  : 0/0
 12126 ;;		Unchanged: 0/0
 12127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12132 ;;Total ram usage:        0 bytes
 12133 ;; Hardware stack levels used:    1
 12134 ;; Hardware stack levels required when called:    7
 12135 ;; This function calls:
 12136 ;;		_PWM6_LoadDutyValue
 12137 ;; This function is called by:
 12138 ;;		_config_routine
 12139 ;;		_clock_subfields
 12140 ;; This function uses a non-reentrant model
 12141 ;;
 12142                           
 12143                           
 12144                           ;psect for function _mod4_LED
 12145  0DF1                     _mod4_LED:	
 12146  0DF1                     l5658:	
 12147                           ;incstack = 0
 12148                           ; Regs used in _mod4_LED: [wreg+status,2+status,0+pclath+cstack]
 12149                           
 12150                           
 12151                           ;main.c: 474:     LATA = 0;
 12152  0DF1  0020               	movlb	0	; select bank0
 12153  0DF2  0196               	clrf	22	;volatile
 12154  0DF3                     l5660:	
 12155                           
 12156                           ;main.c: 475:     PWM6_LoadDutyValue(0);
 12157  0DF3  3000               	movlw	0
 12158  0DF4  00C5               	movwf	PWM6_LoadDutyValue@dutyValue
 12159  0DF5  00C6               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12160  0DF6  318F  2797  318D   	fcall	_PWM6_LoadDutyValue
 12161  0DF9                     l5662:	
 12162  0DF9  0020               	movlb	0	; select bank0
 12163  0DFA  1616               	bsf	22,4	;volatile
 12164  0DFB                     l1329:	
 12165  0DFB  0008               	return
 12166  0DFC                     __end_of_mod4_LED:	
 12167                           
 12168                           	psect	text14
 12169  0DE6                     __ptext14:	
 12170 ;; *************** function _mod3_LED *****************
 12171 ;; Defined at:
 12172 ;;		line 466 in file "main.c"
 12173 ;; Parameters:    Size  Location     Type
 12174 ;;		None
 12175 ;; Auto vars:     Size  Location     Type
 12176 ;;		None
 12177 ;; Return value:  Size  Location     Type
 12178 ;;                  1    wreg      void 
 12179 ;; Registers used:
 12180 ;;		wreg, status,2, status,0, pclath, cstack
 12181 ;; Tracked objects:
 12182 ;;		On entry : 0/0
 12183 ;;		On exit  : 0/0
 12184 ;;		Unchanged: 0/0
 12185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12190 ;;Total ram usage:        0 bytes
 12191 ;; Hardware stack levels used:    1
 12192 ;; Hardware stack levels required when called:    7
 12193 ;; This function calls:
 12194 ;;		_PWM6_LoadDutyValue
 12195 ;; This function is called by:
 12196 ;;		_config_routine
 12197 ;;		_clock_subfields
 12198 ;; This function uses a non-reentrant model
 12199 ;;
 12200                           
 12201                           
 12202                           ;psect for function _mod3_LED
 12203  0DE6                     _mod3_LED:	
 12204  0DE6                     l5652:	
 12205                           ;incstack = 0
 12206                           ; Regs used in _mod3_LED: [wreg+status,2+status,0+pclath+cstack]
 12207                           
 12208                           
 12209                           ;main.c: 467:     LATA = 0;
 12210  0DE6  0020               	movlb	0	; select bank0
 12211  0DE7  0196               	clrf	22	;volatile
 12212  0DE8                     l5654:	
 12213                           
 12214                           ;main.c: 468:     PWM6_LoadDutyValue(0);
 12215  0DE8  3000               	movlw	0
 12216  0DE9  00C5               	movwf	PWM6_LoadDutyValue@dutyValue
 12217  0DEA  00C6               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12218  0DEB  318F  2797  318D   	fcall	_PWM6_LoadDutyValue
 12219  0DEE                     l5656:	
 12220  0DEE  0020               	movlb	0	; select bank0
 12221  0DEF  1696               	bsf	22,5	;volatile
 12222  0DF0                     l1324:	
 12223  0DF0  0008               	return
 12224  0DF1                     __end_of_mod3_LED:	
 12225                           
 12226                           	psect	text15
 12227  0DD1                     __ptext15:	
 12228 ;; *************** function _mod2_LED *****************
 12229 ;; Defined at:
 12230 ;;		line 461 in file "main.c"
 12231 ;; Parameters:    Size  Location     Type
 12232 ;;		None
 12233 ;; Auto vars:     Size  Location     Type
 12234 ;;		None
 12235 ;; Return value:  Size  Location     Type
 12236 ;;                  1    wreg      void 
 12237 ;; Registers used:
 12238 ;;		wreg, status,2, status,0, pclath, cstack
 12239 ;; Tracked objects:
 12240 ;;		On entry : 0/0
 12241 ;;		On exit  : 0/0
 12242 ;;		Unchanged: 0/0
 12243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12248 ;;Total ram usage:        0 bytes
 12249 ;; Hardware stack levels used:    1
 12250 ;; Hardware stack levels required when called:    7
 12251 ;; This function calls:
 12252 ;;		_PWM6_LoadDutyValue
 12253 ;; This function is called by:
 12254 ;;		_config_routine
 12255 ;;		_clock_subfields
 12256 ;; This function uses a non-reentrant model
 12257 ;;
 12258                           
 12259                           
 12260                           ;psect for function _mod2_LED
 12261  0DD1                     _mod2_LED:	
 12262  0DD1                     l5648:	
 12263                           ;incstack = 0
 12264                           ; Regs used in _mod2_LED: [wreg+status,2+status,0+pclath+cstack]
 12265                           
 12266                           
 12267                           ;main.c: 462:     LATA = 0;
 12268  0DD1  0020               	movlb	0	; select bank0
 12269  0DD2  0196               	clrf	22	;volatile
 12270  0DD3                     l5650:	
 12271                           
 12272                           ;main.c: 463:     PWM6_LoadDutyValue(1023);
 12273  0DD3  30FF               	movlw	255
 12274  0DD4  00C5               	movwf	PWM6_LoadDutyValue@dutyValue
 12275  0DD5  3003               	movlw	3
 12276  0DD6  00C6               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12277  0DD7  318F  2797  318D   	fcall	_PWM6_LoadDutyValue
 12278  0DDA                     l1319:	
 12279  0DDA  0008               	return
 12280  0DDB                     __end_of_mod2_LED:	
 12281                           
 12282                           	psect	text16
 12283  0DDB                     __ptext16:	
 12284 ;; *************** function _mod1_LED *****************
 12285 ;; Defined at:
 12286 ;;		line 454 in file "main.c"
 12287 ;; Parameters:    Size  Location     Type
 12288 ;;		None
 12289 ;; Auto vars:     Size  Location     Type
 12290 ;;		None
 12291 ;; Return value:  Size  Location     Type
 12292 ;;                  1    wreg      void 
 12293 ;; Registers used:
 12294 ;;		wreg, status,2, status,0, pclath, cstack
 12295 ;; Tracked objects:
 12296 ;;		On entry : 0/0
 12297 ;;		On exit  : 0/0
 12298 ;;		Unchanged: 0/0
 12299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12304 ;;Total ram usage:        0 bytes
 12305 ;; Hardware stack levels used:    1
 12306 ;; Hardware stack levels required when called:    7
 12307 ;; This function calls:
 12308 ;;		_PWM6_LoadDutyValue
 12309 ;; This function is called by:
 12310 ;;		_config_routine
 12311 ;;		_clock_subfields
 12312 ;; This function uses a non-reentrant model
 12313 ;;
 12314                           
 12315                           
 12316                           ;psect for function _mod1_LED
 12317  0DDB                     _mod1_LED:	
 12318  0DDB                     l5642:	
 12319                           ;incstack = 0
 12320                           ; Regs used in _mod1_LED: [wreg+status,2+status,0+pclath+cstack]
 12321                           
 12322                           
 12323                           ;main.c: 455:     LATA = 0;
 12324  0DDB  0020               	movlb	0	; select bank0
 12325  0DDC  0196               	clrf	22	;volatile
 12326  0DDD                     l5644:	
 12327                           
 12328                           ;main.c: 456:     PWM6_LoadDutyValue(0);
 12329  0DDD  3000               	movlw	0
 12330  0DDE  00C5               	movwf	PWM6_LoadDutyValue@dutyValue
 12331  0DDF  00C6               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12332  0DE0  318F  2797  318D   	fcall	_PWM6_LoadDutyValue
 12333  0DE3                     l5646:	
 12334  0DE3  0020               	movlb	0	; select bank0
 12335  0DE4  1796               	bsf	22,7	;volatile
 12336  0DE5                     l1316:	
 12337  0DE5  0008               	return
 12338  0DE6                     __end_of_mod1_LED:	
 12339                           
 12340                           	psect	text17
 12341  05B2                     __ptext17:	
 12342 ;; *************** function _increment_subfield *****************
 12343 ;; Defined at:
 12344 ;;		line 298 in file "main.c"
 12345 ;; Parameters:    Size  Location     Type
 12346 ;;		None
 12347 ;; Auto vars:     Size  Location     Type
 12348 ;;  exit            2   12[BANK0 ] int 
 12349 ;;  plus            2   10[BANK0 ] int 
 12350 ;; Return value:  Size  Location     Type
 12351 ;;                  1    wreg      void 
 12352 ;; Registers used:
 12353 ;;		wreg, status,2, status,0, pclath, cstack
 12354 ;; Tracked objects:
 12355 ;;		On entry : 0/0
 12356 ;;		On exit  : 0/0
 12357 ;;		Unchanged: 0/0
 12358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12360 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12362 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12363 ;;Total ram usage:        4 bytes
 12364 ;; Hardware stack levels used:    1
 12365 ;; Hardware stack levels required when called:    7
 12366 ;; This function calls:
 12367 ;;		_PWM6_LoadDutyValue
 12368 ;;		_checkDebounceSW1
 12369 ;;		_checkDebounceSW2
 12370 ;; This function is called by:
 12371 ;;		_clock_subfields
 12372 ;; This function uses a non-reentrant model
 12373 ;;
 12374                           
 12375                           
 12376                           ;psect for function _increment_subfield
 12377  05B2                     _increment_subfield:	
 12378  05B2                     l5664:	
 12379                           ;incstack = 0
 12380                           ; Regs used in _increment_subfield: [wreg+status,2+status,0+pclath+cstack]
 12381                           
 12382                           
 12383                           ;main.c: 300:     int plus = 10;
 12384  05B2  300A               	movlw	10
 12385  05B3  0020               	movlb	0	; select bank0
 12386  05B4  00CC               	movwf	increment_subfield@plus
 12387  05B5  3000               	movlw	0
 12388  05B6  00CD               	movwf	increment_subfield@plus+1
 12389  05B7                     l5666:	
 12390                           
 12391                           ;main.c: 301:     int exit = 0;
 12392  05B7  01CE               	clrf	increment_subfield@exit
 12393  05B8  01CF               	clrf	increment_subfield@exit+1
 12394  05B9                     l5668:	
 12395                           
 12396                           ;main.c: 303:     PWM6_LoadDutyValue(0);
 12397  05B9  3000               	movlw	0
 12398  05BA  00C5               	movwf	PWM6_LoadDutyValue@dutyValue
 12399  05BB  00C6               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12400  05BC  318F  2797  3185   	fcall	_PWM6_LoadDutyValue
 12401                           
 12402                           ;main.c: 305:            while(exit == 0) {
 12403  05BF  2DEA               	goto	l5682
 12404  05C0                     l1250:	
 12405                           
 12406                           ;main.c: 307:                if(!PORTCbits.RC5){
 12407  05C0  1A8E               	btfsc	14,5	;volatile
 12408  05C1  2DC3               	goto	u2861
 12409  05C2  2DC4               	goto	u2860
 12410  05C3                     u2861:	
 12411  05C3  2DD8               	goto	l5676
 12412  05C4                     u2860:	
 12413  05C4                     l5670:	
 12414                           
 12415                           ;main.c: 308:                     if(checkDebounceSW2()){
 12416  05C4  3183  23F1  3185   	fcall	_checkDebounceSW2
 12417  05C7  3A00               	xorlw	0
 12418  05C8  1903               	skipnz
 12419  05C9  2DCB               	goto	u2871
 12420  05CA  2DCC               	goto	u2870
 12421  05CB                     u2871:	
 12422  05CB  2DD8               	goto	l5676
 12423  05CC                     u2870:	
 12424  05CC                     l5672:	
 12425                           
 12426                           ;main.c: 309:                          plus += 100;
 12427  05CC  3064               	movlw	100
 12428  05CD  0020               	movlb	0	; select bank0
 12429  05CE  07CC               	addwf	increment_subfield@plus,f
 12430  05CF  3000               	movlw	0
 12431  05D0  3DCD               	addwfc	increment_subfield@plus+1,f
 12432  05D1                     l5674:	
 12433                           
 12434                           ;main.c: 310:                          PWM6_LoadDutyValue(plus);
 12435  05D1  084D               	movf	increment_subfield@plus+1,w
 12436  05D2  00C6               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12437  05D3  084C               	movf	increment_subfield@plus,w
 12438  05D4  00C5               	movwf	PWM6_LoadDutyValue@dutyValue
 12439  05D5  318F  2797  3185   	fcall	_PWM6_LoadDutyValue
 12440  05D8                     l5676:	
 12441                           
 12442                           ;main.c: 313:                if(!PORTBbits.RB4){
 12443  05D8  0020               	movlb	0	; select bank0
 12444  05D9  1A0D               	btfsc	13,4	;volatile
 12445  05DA  2DDC               	goto	u2881
 12446  05DB  2DDD               	goto	u2880
 12447  05DC                     u2881:	
 12448  05DC  2DEA               	goto	l5682
 12449  05DD                     u2880:	
 12450  05DD                     l5678:	
 12451                           
 12452                           ;main.c: 314:                     if(checkDebounceSW1()){
 12453  05DD  3184  243E  3185   	fcall	_checkDebounceSW1
 12454  05E0  3A00               	xorlw	0
 12455  05E1  1903               	skipnz
 12456  05E2  2DE4               	goto	u2891
 12457  05E3  2DE5               	goto	u2890
 12458  05E4                     u2891:	
 12459  05E4  2DEA               	goto	l5682
 12460  05E5                     u2890:	
 12461  05E5                     l5680:	
 12462                           
 12463                           ;main.c: 315:                         exit = 1;
 12464  05E5  3001               	movlw	1
 12465  05E6  0020               	movlb	0	; select bank0
 12466  05E7  00CE               	movwf	increment_subfield@exit
 12467  05E8  3000               	movlw	0
 12468  05E9  00CF               	movwf	increment_subfield@exit+1
 12469  05EA                     l5682:	
 12470                           
 12471                           ;main.c: 305:            while(exit == 0) {
 12472  05EA  0020               	movlb	0	; select bank0
 12473  05EB  084E               	movf	increment_subfield@exit,w
 12474  05EC  044F               	iorwf	increment_subfield@exit+1,w
 12475  05ED  1903               	btfsc	3,2
 12476  05EE  2DF0               	goto	u2901
 12477  05EF  2DF1               	goto	u2900
 12478  05F0                     u2901:	
 12479  05F0  2DC0               	goto	l1250
 12480  05F1                     u2900:	
 12481  05F1                     l1256:	
 12482  05F1  0008               	return
 12483  05F2                     __end_of_increment_subfield:	
 12484                           
 12485                           	psect	text18
 12486  03F1                     __ptext18:	
 12487 ;; *************** function _checkDebounceSW2 *****************
 12488 ;; Defined at:
 12489 ;;		line 499 in file "main.c"
 12490 ;; Parameters:    Size  Location     Type
 12491 ;;		None
 12492 ;; Auto vars:     Size  Location     Type
 12493 ;;		None
 12494 ;; Return value:  Size  Location     Type
 12495 ;;                  1    wreg      unsigned char 
 12496 ;; Registers used:
 12497 ;;		wreg, status,2, status,0
 12498 ;; Tracked objects:
 12499 ;;		On entry : 0/0
 12500 ;;		On exit  : 0/0
 12501 ;;		Unchanged: 0/0
 12502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12505 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12506 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12507 ;;Total ram usage:        7 bytes
 12508 ;; Hardware stack levels used:    1
 12509 ;; Hardware stack levels required when called:    6
 12510 ;; This function calls:
 12511 ;;		Nothing
 12512 ;; This function is called by:
 12513 ;;		_config_routine
 12514 ;;		_increment_subfield
 12515 ;;		_clock_subfields
 12516 ;; This function uses a non-reentrant model
 12517 ;;
 12518                           
 12519                           
 12520                           ;psect for function _checkDebounceSW2
 12521  03F1                     _checkDebounceSW2:	
 12522  03F1                     l5594:	
 12523                           ;incstack = 0
 12524                           ; Regs used in _checkDebounceSW2: [wreg+status,2+status,0]
 12525                           
 12526                           
 12527                           ;main.c: 502:     if(clkms - last_ms2 < 0){
 12528  03F1  0020               	movlb	0	; select bank0
 12529  03F2  083C               	movf	_clkms,w	;volatile
 12530  03F3  00C5               	movwf	??_checkDebounceSW2
 12531  03F4  01C6               	clrf	??_checkDebounceSW2+1
 12532  03F5  0846               	movf	??_checkDebounceSW2+1,w
 12533  03F6  00C8               	movwf	??_checkDebounceSW2+3
 12534  03F7  083A               	movf	_last_ms2,w
 12535  03F8  0245               	subwf	??_checkDebounceSW2,w
 12536  03F9  00C7               	movwf	??_checkDebounceSW2+2
 12537  03FA  1C03               	skipc
 12538  03FB  03C8               	decf	??_checkDebounceSW2+3,f
 12539  03FC  1FC8               	btfss	??_checkDebounceSW2+3,7
 12540  03FD  2BFF               	goto	u2821
 12541  03FE  2C00               	goto	u2820
 12542  03FF                     u2821:	
 12543  03FF  2C24               	goto	l5602
 12544  0400                     u2820:	
 12545  0400                     l5596:	
 12546                           
 12547                           ;main.c: 504:         if ((200 - last_ms2)+ clkms > 10 ){
 12548  0400  083C               	movf	_clkms,w	;volatile
 12549  0401  00C5               	movwf	??_checkDebounceSW2
 12550  0402  01C6               	clrf	??_checkDebounceSW2+1
 12551  0403  0846               	movf	??_checkDebounceSW2+1,w
 12552  0404  00C8               	movwf	??_checkDebounceSW2+3
 12553  0405  083A               	movf	_last_ms2,w
 12554  0406  0245               	subwf	??_checkDebounceSW2,w
 12555  0407  00C7               	movwf	??_checkDebounceSW2+2
 12556  0408  1C03               	skipc
 12557  0409  03C8               	decf	??_checkDebounceSW2+3,f
 12558  040A  0847               	movf	??_checkDebounceSW2+2,w
 12559  040B  3EC8               	addlw	200
 12560  040C  00C9               	movwf	??_checkDebounceSW2+4
 12561  040D  3000               	movlw	0
 12562  040E  3D48               	addwfc	??_checkDebounceSW2+3,w
 12563  040F  00CA               	movwf	??_checkDebounceSW2+5
 12564  0410  084A               	movf	??_checkDebounceSW2+5,w
 12565  0411  3A80               	xorlw	128
 12566  0412  00CB               	movwf	??_checkDebounceSW2+6
 12567  0413  3080               	movlw	128
 12568  0414  024B               	subwf	??_checkDebounceSW2+6,w
 12569  0415  1D03               	skipz
 12570  0416  2C19               	goto	u2835
 12571  0417  300B               	movlw	11
 12572  0418  0249               	subwf	??_checkDebounceSW2+4,w
 12573  0419                     u2835:	
 12574  0419  1C03               	skipc
 12575  041A  2C1C               	goto	u2831
 12576  041B  2C1D               	goto	u2830
 12577  041C                     u2831:	
 12578  041C  2C24               	goto	l5602
 12579  041D                     u2830:	
 12580  041D                     l5598:	
 12581                           
 12582                           ;main.c: 505:             last_ms2 = clkms;
 12583  041D  0020               	movlb	0	; select bank0
 12584  041E  083C               	movf	_clkms,w	;volatile
 12585  041F  00C5               	movwf	??_checkDebounceSW2
 12586  0420  0845               	movf	??_checkDebounceSW2,w
 12587  0421  00BA               	movwf	_last_ms2
 12588                           
 12589                           ;main.c: 506:             return 1;
 12590  0422  3001               	movlw	1
 12591  0423  2C3D               	goto	l1341
 12592  0424                     l5602:	
 12593                           
 12594                           ;main.c: 510:     if(clkms - last_ms2 < 10){
 12595  0424  0020               	movlb	0	; select bank0
 12596  0425  083C               	movf	_clkms,w	;volatile
 12597  0426  00C5               	movwf	??_checkDebounceSW2
 12598  0427  01C6               	clrf	??_checkDebounceSW2+1
 12599  0428  0846               	movf	??_checkDebounceSW2+1,w
 12600  0429  00C8               	movwf	??_checkDebounceSW2+3
 12601  042A  083A               	movf	_last_ms2,w
 12602  042B  0245               	subwf	??_checkDebounceSW2,w
 12603  042C  00C7               	movwf	??_checkDebounceSW2+2
 12604  042D  1C03               	skipc
 12605  042E  03C8               	decf	??_checkDebounceSW2+3,f
 12606  042F  0848               	movf	??_checkDebounceSW2+3,w
 12607  0430  3A80               	xorlw	128
 12608  0431  00C9               	movwf	??_checkDebounceSW2+4
 12609  0432  3080               	movlw	128
 12610  0433  0249               	subwf	??_checkDebounceSW2+4,w
 12611  0434  1D03               	skipz
 12612  0435  2C38               	goto	u2845
 12613  0436  300A               	movlw	10
 12614  0437  0247               	subwf	??_checkDebounceSW2+2,w
 12615  0438                     u2845:	
 12616  0438  1803               	skipnc
 12617  0439  2C3B               	goto	u2841
 12618  043A  2C3C               	goto	u2840
 12619  043B                     u2841:	
 12620  043B  2C1D               	goto	l5598
 12621  043C                     u2840:	
 12622  043C                     l5604:	
 12623                           
 12624                           ;main.c: 511:         return 0;
 12625  043C  3000               	movlw	0
 12626  043D                     l1341:	
 12627  043D  0008               	return
 12628  043E                     __end_of_checkDebounceSW2:	
 12629                           
 12630                           	psect	text19
 12631  043E                     __ptext19:	
 12632 ;; *************** function _checkDebounceSW1 *****************
 12633 ;; Defined at:
 12634 ;;		line 479 in file "main.c"
 12635 ;; Parameters:    Size  Location     Type
 12636 ;;		None
 12637 ;; Auto vars:     Size  Location     Type
 12638 ;;		None
 12639 ;; Return value:  Size  Location     Type
 12640 ;;                  1    wreg      unsigned char 
 12641 ;; Registers used:
 12642 ;;		wreg, status,2, status,0
 12643 ;; Tracked objects:
 12644 ;;		On entry : 0/0
 12645 ;;		On exit  : 0/0
 12646 ;;		Unchanged: 0/0
 12647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12650 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12651 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12652 ;;Total ram usage:        7 bytes
 12653 ;; Hardware stack levels used:    1
 12654 ;; Hardware stack levels required when called:    6
 12655 ;; This function calls:
 12656 ;;		Nothing
 12657 ;; This function is called by:
 12658 ;;		_config_routine
 12659 ;;		_increment_subfield
 12660 ;;		_clock_subfields
 12661 ;; This function uses a non-reentrant model
 12662 ;;
 12663                           
 12664                           
 12665                           ;psect for function _checkDebounceSW1
 12666  043E                     _checkDebounceSW1:	
 12667  043E                     l5574:	
 12668                           ;incstack = 0
 12669                           ; Regs used in _checkDebounceSW1: [wreg+status,2+status,0]
 12670                           
 12671                           
 12672                           ;main.c: 482:     if(clkms - last_ms < 0){
 12673  043E  0020               	movlb	0	; select bank0
 12674  043F  083C               	movf	_clkms,w	;volatile
 12675  0440  00C5               	movwf	??_checkDebounceSW1
 12676  0441  01C6               	clrf	??_checkDebounceSW1+1
 12677  0442  0846               	movf	??_checkDebounceSW1+1,w
 12678  0443  00C8               	movwf	??_checkDebounceSW1+3
 12679  0444  083B               	movf	_last_ms,w
 12680  0445  0245               	subwf	??_checkDebounceSW1,w
 12681  0446  00C7               	movwf	??_checkDebounceSW1+2
 12682  0447  1C03               	skipc
 12683  0448  03C8               	decf	??_checkDebounceSW1+3,f
 12684  0449  1FC8               	btfss	??_checkDebounceSW1+3,7
 12685  044A  2C4C               	goto	u2791
 12686  044B  2C4D               	goto	u2790
 12687  044C                     u2791:	
 12688  044C  2C71               	goto	l5582
 12689  044D                     u2790:	
 12690  044D                     l5576:	
 12691                           
 12692                           ;main.c: 484:         if ((200 - last_ms)+ clkms > 10 ){
 12693  044D  083C               	movf	_clkms,w	;volatile
 12694  044E  00C5               	movwf	??_checkDebounceSW1
 12695  044F  01C6               	clrf	??_checkDebounceSW1+1
 12696  0450  0846               	movf	??_checkDebounceSW1+1,w
 12697  0451  00C8               	movwf	??_checkDebounceSW1+3
 12698  0452  083B               	movf	_last_ms,w
 12699  0453  0245               	subwf	??_checkDebounceSW1,w
 12700  0454  00C7               	movwf	??_checkDebounceSW1+2
 12701  0455  1C03               	skipc
 12702  0456  03C8               	decf	??_checkDebounceSW1+3,f
 12703  0457  0847               	movf	??_checkDebounceSW1+2,w
 12704  0458  3EC8               	addlw	200
 12705  0459  00C9               	movwf	??_checkDebounceSW1+4
 12706  045A  3000               	movlw	0
 12707  045B  3D48               	addwfc	??_checkDebounceSW1+3,w
 12708  045C  00CA               	movwf	??_checkDebounceSW1+5
 12709  045D  084A               	movf	??_checkDebounceSW1+5,w
 12710  045E  3A80               	xorlw	128
 12711  045F  00CB               	movwf	??_checkDebounceSW1+6
 12712  0460  3080               	movlw	128
 12713  0461  024B               	subwf	??_checkDebounceSW1+6,w
 12714  0462  1D03               	skipz
 12715  0463  2C66               	goto	u2805
 12716  0464  300B               	movlw	11
 12717  0465  0249               	subwf	??_checkDebounceSW1+4,w
 12718  0466                     u2805:	
 12719  0466  1C03               	skipc
 12720  0467  2C69               	goto	u2801
 12721  0468  2C6A               	goto	u2800
 12722  0469                     u2801:	
 12723  0469  2C71               	goto	l5582
 12724  046A                     u2800:	
 12725  046A                     l5578:	
 12726                           
 12727                           ;main.c: 485:             last_ms = clkms;
 12728  046A  0020               	movlb	0	; select bank0
 12729  046B  083C               	movf	_clkms,w	;volatile
 12730  046C  00C5               	movwf	??_checkDebounceSW1
 12731  046D  0845               	movf	??_checkDebounceSW1,w
 12732  046E  00BB               	movwf	_last_ms
 12733                           
 12734                           ;main.c: 486:             return 1;
 12735  046F  3001               	movlw	1
 12736  0470  2C8A               	goto	l1334
 12737  0471                     l5582:	
 12738                           
 12739                           ;main.c: 490:     if(clkms - last_ms < 10){
 12740  0471  0020               	movlb	0	; select bank0
 12741  0472  083C               	movf	_clkms,w	;volatile
 12742  0473  00C5               	movwf	??_checkDebounceSW1
 12743  0474  01C6               	clrf	??_checkDebounceSW1+1
 12744  0475  0846               	movf	??_checkDebounceSW1+1,w
 12745  0476  00C8               	movwf	??_checkDebounceSW1+3
 12746  0477  083B               	movf	_last_ms,w
 12747  0478  0245               	subwf	??_checkDebounceSW1,w
 12748  0479  00C7               	movwf	??_checkDebounceSW1+2
 12749  047A  1C03               	skipc
 12750  047B  03C8               	decf	??_checkDebounceSW1+3,f
 12751  047C  0848               	movf	??_checkDebounceSW1+3,w
 12752  047D  3A80               	xorlw	128
 12753  047E  00C9               	movwf	??_checkDebounceSW1+4
 12754  047F  3080               	movlw	128
 12755  0480  0249               	subwf	??_checkDebounceSW1+4,w
 12756  0481  1D03               	skipz
 12757  0482  2C85               	goto	u2815
 12758  0483  300A               	movlw	10
 12759  0484  0247               	subwf	??_checkDebounceSW1+2,w
 12760  0485                     u2815:	
 12761  0485  1803               	skipnc
 12762  0486  2C88               	goto	u2811
 12763  0487  2C89               	goto	u2810
 12764  0488                     u2811:	
 12765  0488  2C6A               	goto	l5578
 12766  0489                     u2810:	
 12767  0489                     l5584:	
 12768                           
 12769                           ;main.c: 491:         return 0;
 12770  0489  3000               	movlw	0
 12771  048A                     l1334:	
 12772  048A  0008               	return
 12773  048B                     __end_of_checkDebounceSW1:	
 12774                           
 12775                           	psect	text20
 12776  0342                     __ptext20:	
 12777 ;; *************** function _all_LED *****************
 12778 ;; Defined at:
 12779 ;;		line 371 in file "main.c"
 12780 ;; Parameters:    Size  Location     Type
 12781 ;;		None
 12782 ;; Auto vars:     Size  Location     Type
 12783 ;;		None
 12784 ;; Return value:  Size  Location     Type
 12785 ;;                  1    wreg      void 
 12786 ;; Registers used:
 12787 ;;		wreg, status,2, status,0, pclath, cstack
 12788 ;; Tracked objects:
 12789 ;;		On entry : 0/0
 12790 ;;		On exit  : 0/0
 12791 ;;		Unchanged: 0/0
 12792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12795 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12796 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12797 ;;Total ram usage:        1 bytes
 12798 ;; Hardware stack levels used:    1
 12799 ;; Hardware stack levels required when called:    7
 12800 ;; This function calls:
 12801 ;;		_PWM6_LoadDutyValue
 12802 ;; This function is called by:
 12803 ;;		_config_routine
 12804 ;; This function uses a non-reentrant model
 12805 ;;
 12806                           
 12807                           
 12808                           ;psect for function _all_LED
 12809  0342                     _all_LED:	
 12810  0342                     l1275:	
 12811                           ;incstack = 0
 12812                           ; Regs used in _all_LED: [wreg+status,2+status,0+pclath+cstack]
 12813                           ;main.c: 373:        do { LATAbits.LATA7 = 1; } while(0);
 12814                           
 12815  0342  0020               	movlb	0	; select bank0
 12816  0343  1796               	bsf	22,7	;volatile
 12817  0344                     l5842:	
 12818                           
 12819                           ;main.c: 374:         _delay((unsigned long)((100)*(1000000/4000.0)));
 12820  0344  3021               	movlw	33
 12821  0345  0020               	movlb	0	; select bank0
 12822  0346  00C9               	movwf	??_all_LED
 12823  0347  3076               	movlw	118
 12824  0348                     u3347:	
 12825  0348  0B89               	decfsz	9,f
 12826  0349  2B48               	goto	u3347
 12827  034A  0BC9               	decfsz	??_all_LED,f
 12828  034B  2B48               	goto	u3347
 12829  034C  0000               	nop
 12830  034D                     l5844:	
 12831  034D  0020               	movlb	0	; select bank0
 12832  034E  1396               	bcf	22,7	;volatile
 12833  034F                     l1278:	
 12834                           
 12835                           ;main.c: 376:        _delay((unsigned long)((100)*(1000000/4000.0)));
 12836  034F  3021               	movlw	33
 12837  0350  0020               	movlb	0	; select bank0
 12838  0351  00C9               	movwf	??_all_LED
 12839  0352  3076               	movlw	118
 12840  0353                     u3357:	
 12841  0353  0B89               	decfsz	9,f
 12842  0354  2B53               	goto	u3357
 12843  0355  0BC9               	decfsz	??_all_LED,f
 12844  0356  2B53               	goto	u3357
 12845  0357  0000               	nop
 12846  0358                     l5846:	
 12847                           
 12848                           ;main.c: 378:        PWM6_LoadDutyValue(1023);
 12849  0358  30FF               	movlw	255
 12850  0359  0020               	movlb	0	; select bank0
 12851  035A  00C5               	movwf	PWM6_LoadDutyValue@dutyValue
 12852  035B  3003               	movlw	3
 12853  035C  00C6               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12854  035D  318F  2797  3183   	fcall	_PWM6_LoadDutyValue
 12855  0360                     l5848:	
 12856                           
 12857                           ;main.c: 379:         _delay((unsigned long)((100)*(1000000/4000.0)));
 12858  0360  3021               	movlw	33
 12859  0361  0020               	movlb	0	; select bank0
 12860  0362  00C9               	movwf	??_all_LED
 12861  0363  3076               	movlw	118
 12862  0364                     u3367:	
 12863  0364  0B89               	decfsz	9,f
 12864  0365  2B64               	goto	u3367
 12865  0366  0BC9               	decfsz	??_all_LED,f
 12866  0367  2B64               	goto	u3367
 12867  0368  0000               	nop
 12868                           
 12869                           ;main.c: 381:         PWM6_LoadDutyValue(0);
 12870  0369  3000               	movlw	0
 12871  036A  0020               	movlb	0	; select bank0
 12872  036B  00C5               	movwf	PWM6_LoadDutyValue@dutyValue
 12873  036C  00C6               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12874  036D  318F  2797  3183   	fcall	_PWM6_LoadDutyValue
 12875  0370                     l5850:	
 12876                           
 12877                           ;main.c: 382:         _delay((unsigned long)((100)*(1000000/4000.0)));
 12878  0370  3021               	movlw	33
 12879  0371  0020               	movlb	0	; select bank0
 12880  0372  00C9               	movwf	??_all_LED
 12881  0373  3076               	movlw	118
 12882  0374                     u3377:	
 12883  0374  0B89               	decfsz	9,f
 12884  0375  2B74               	goto	u3377
 12885  0376  0BC9               	decfsz	??_all_LED,f
 12886  0377  2B74               	goto	u3377
 12887  0378  0000               	nop
 12888  0379                     l5852:	
 12889  0379  0020               	movlb	0	; select bank0
 12890  037A  1696               	bsf	22,5	;volatile
 12891  037B                     l5854:	
 12892                           
 12893                           ;main.c: 384:          _delay((unsigned long)((100)*(1000000/4000.0)));
 12894  037B  3021               	movlw	33
 12895  037C  0020               	movlb	0	; select bank0
 12896  037D  00C9               	movwf	??_all_LED
 12897  037E  3076               	movlw	118
 12898  037F                     u3387:	
 12899  037F  0B89               	decfsz	9,f
 12900  0380  2B7F               	goto	u3387
 12901  0381  0BC9               	decfsz	??_all_LED,f
 12902  0382  2B7F               	goto	u3387
 12903  0383  0000               	nop
 12904  0384                     l5856:	
 12905  0384  0020               	movlb	0	; select bank0
 12906  0385  1296               	bcf	22,5	;volatile
 12907  0386                     l5858:	
 12908                           
 12909                           ;main.c: 386:        _delay((unsigned long)((100)*(1000000/4000.0)));
 12910  0386  3021               	movlw	33
 12911  0387  0020               	movlb	0	; select bank0
 12912  0388  00C9               	movwf	??_all_LED
 12913  0389  3076               	movlw	118
 12914  038A                     u3397:	
 12915  038A  0B89               	decfsz	9,f
 12916  038B  2B8A               	goto	u3397
 12917  038C  0BC9               	decfsz	??_all_LED,f
 12918  038D  2B8A               	goto	u3397
 12919  038E  0000               	nop
 12920  038F                     l5860:	
 12921  038F  0020               	movlb	0	; select bank0
 12922  0390  1616               	bsf	22,4	;volatile
 12923  0391                     l5862:	
 12924                           
 12925                           ;main.c: 388:         _delay((unsigned long)((100)*(1000000/4000.0)));
 12926  0391  3021               	movlw	33
 12927  0392  0020               	movlb	0	; select bank0
 12928  0393  00C9               	movwf	??_all_LED
 12929  0394  3076               	movlw	118
 12930  0395                     u3407:	
 12931  0395  0B89               	decfsz	9,f
 12932  0396  2B95               	goto	u3407
 12933  0397  0BC9               	decfsz	??_all_LED,f
 12934  0398  2B95               	goto	u3407
 12935  0399  0000               	nop
 12936  039A                     l5864:	
 12937  039A  0020               	movlb	0	; select bank0
 12938  039B  1216               	bcf	22,4	;volatile
 12939  039C                     l1287:	
 12940  039C  0008               	return
 12941  039D                     __end_of_all_LED:	
 12942                           
 12943                           	psect	text21
 12944  0F97                     __ptext21:	
 12945 ;; *************** function _PWM6_LoadDutyValue *****************
 12946 ;; Defined at:
 12947 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 12948 ;; Parameters:    Size  Location     Type
 12949 ;;  dutyValue       2    3[BANK0 ] unsigned short 
 12950 ;; Auto vars:     Size  Location     Type
 12951 ;;		None
 12952 ;; Return value:  Size  Location     Type
 12953 ;;                  1    wreg      void 
 12954 ;; Registers used:
 12955 ;;		wreg, status,2, status,0
 12956 ;; Tracked objects:
 12957 ;;		On entry : 0/0
 12958 ;;		On exit  : 0/0
 12959 ;;		Unchanged: 0/0
 12960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12961 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12963 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12964 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12965 ;;Total ram usage:        4 bytes
 12966 ;; Hardware stack levels used:    1
 12967 ;; Hardware stack levels required when called:    6
 12968 ;; This function calls:
 12969 ;;		Nothing
 12970 ;; This function is called by:
 12971 ;;		_main
 12972 ;;		_increment_subfield
 12973 ;;		_all_LED
 12974 ;;		_mod1_LED
 12975 ;;		_mod2_LED
 12976 ;;		_mod3_LED
 12977 ;;		_mod4_LED
 12978 ;;		_mode_select_LED
 12979 ;; This function uses a non-reentrant model
 12980 ;;
 12981                           
 12982                           
 12983                           ;psect for function _PWM6_LoadDutyValue
 12984  0F97                     _PWM6_LoadDutyValue:	
 12985  0F97                     l5556:	
 12986                           ;incstack = 0
 12987                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 12988                           
 12989                           
 12990                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 12991  0F97  0020               	movlb	0	; select bank0
 12992  0F98  0846               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 12993  0F99  00C8               	movwf	??_PWM6_LoadDutyValue+1
 12994  0F9A  0845               	movf	PWM6_LoadDutyValue@dutyValue,w
 12995  0F9B  00C7               	movwf	??_PWM6_LoadDutyValue
 12996  0F9C  36C8               	lsrf	??_PWM6_LoadDutyValue+1,f
 12997  0F9D  0CC7               	rrf	??_PWM6_LoadDutyValue,f
 12998  0F9E  36C8               	lsrf	??_PWM6_LoadDutyValue+1,f
 12999  0F9F  0CC7               	rrf	??_PWM6_LoadDutyValue,f
 13000  0FA0  0847               	movf	??_PWM6_LoadDutyValue,w
 13001  0FA1  0027               	movlb	7	; select bank7
 13002  0FA2  008D               	movwf	13	;volatile
 13003                           
 13004                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 13005  0FA3  0020               	movlb	0	; select bank0
 13006  0FA4  0845               	movf	PWM6_LoadDutyValue@dutyValue,w
 13007  0FA5  3903               	andlw	3
 13008  0FA6  00C7               	movwf	??_PWM6_LoadDutyValue
 13009  0FA7  3005               	movlw	5
 13010  0FA8                     u2785:	
 13011  0FA8  35C7               	lslf	??_PWM6_LoadDutyValue,f
 13012  0FA9  3EFF               	addlw	-1
 13013  0FAA  1D03               	skipz
 13014  0FAB  2FA8               	goto	u2785
 13015  0FAC  3547               	lslf	??_PWM6_LoadDutyValue,w
 13016  0FAD  0027               	movlb	7	; select bank7
 13017  0FAE  008C               	movwf	12	;volatile
 13018  0FAF                     l916:	
 13019  0FAF  0008               	return
 13020  0FB0                     __end_of_PWM6_LoadDutyValue:	
 13021                           
 13022                           	psect	text22
 13023  0D1C                     __ptext22:	
 13024 ;; *************** function _TMR0_StartTimer *****************
 13025 ;; Defined at:
 13026 ;;		line 89 in file "mcc_generated_files/tmr0.c"
 13027 ;; Parameters:    Size  Location     Type
 13028 ;;		None
 13029 ;; Auto vars:     Size  Location     Type
 13030 ;;		None
 13031 ;; Return value:  Size  Location     Type
 13032 ;;                  1    wreg      void 
 13033 ;; Registers used:
 13034 ;;		None
 13035 ;; Tracked objects:
 13036 ;;		On entry : 0/0
 13037 ;;		On exit  : 0/0
 13038 ;;		Unchanged: 0/0
 13039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13044 ;;Total ram usage:        0 bytes
 13045 ;; Hardware stack levels used:    1
 13046 ;; Hardware stack levels required when called:    6
 13047 ;; This function calls:
 13048 ;;		Nothing
 13049 ;; This function is called by:
 13050 ;;		_main
 13051 ;; This function uses a non-reentrant model
 13052 ;;
 13053                           
 13054                           
 13055                           ;psect for function _TMR0_StartTimer
 13056  0D1C                     _TMR0_StartTimer:	
 13057  0D1C                     l6030:	
 13058                           ;incstack = 0
 13059                           ; Regs used in _TMR0_StartTimer: []
 13060                           
 13061                           
 13062                           ;mcc_generated_files/tmr0.c: 92:     T0CON0bits.T0EN = 1;
 13063  0D1C  0020               	movlb	0	; select bank0
 13064  0D1D  179E               	bsf	30,7	;volatile
 13065  0D1E                     l1592:	
 13066  0D1E  0008               	return
 13067  0D1F                     __end_of_TMR0_StartTimer:	
 13068                           
 13069                           	psect	text23
 13070  0FE4                     __ptext23:	
 13071 ;; *************** function _SYSTEM_Initialize *****************
 13072 ;; Defined at:
 13073 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13074 ;; Parameters:    Size  Location     Type
 13075 ;;		None
 13076 ;; Auto vars:     Size  Location     Type
 13077 ;;		None
 13078 ;; Return value:  Size  Location     Type
 13079 ;;                  1    wreg      void 
 13080 ;; Registers used:
 13081 ;;		wreg, status,2, status,0, pclath, cstack
 13082 ;; Tracked objects:
 13083 ;;		On entry : 0/0
 13084 ;;		On exit  : 0/0
 13085 ;;		Unchanged: 0/0
 13086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13091 ;;Total ram usage:        0 bytes
 13092 ;; Hardware stack levels used:    1
 13093 ;; Hardware stack levels required when called:    8
 13094 ;; This function calls:
 13095 ;;		_ADCC_Initialize
 13096 ;;		_EXT_INT_Initialize
 13097 ;;		_OSCILLATOR_Initialize
 13098 ;;		_PIN_MANAGER_Initialize
 13099 ;;		_PMD_Initialize
 13100 ;;		_PWM6_Initialize
 13101 ;;		_TMR0_Initialize
 13102 ;;		_TMR1_Initialize
 13103 ;;		_TMR2_Initialize
 13104 ;; This function is called by:
 13105 ;;		_main
 13106 ;; This function uses a non-reentrant model
 13107 ;;
 13108                           
 13109                           
 13110                           ;psect for function _SYSTEM_Initialize
 13111  0FE4                     _SYSTEM_Initialize:	
 13112  0FE4                     l5938:	
 13113                           ;incstack = 0
 13114                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13115                           
 13116                           
 13117                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 13118  0FE4  318D  25B7  318F   	fcall	_PMD_Initialize
 13119  0FE7                     l5940:	
 13120                           
 13121                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 13122  0FE7  3185  2522  318F   	fcall	_PIN_MANAGER_Initialize
 13123  0FEA                     l5942:	
 13124                           
 13125                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 13126  0FEA  3187  27F7  318F   	fcall	_OSCILLATOR_Initialize
 13127  0FED                     l5944:	
 13128                           
 13129                           ;mcc_generated_files/mcc.c: 55:     PWM6_Initialize();
 13130  0FED  318E  2623  318F   	fcall	_PWM6_Initialize
 13131  0FF0                     l5946:	
 13132                           
 13133                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 13134  0FF0  318F  270B  318F   	fcall	_ADCC_Initialize
 13135  0FF3                     l5948:	
 13136                           
 13137                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
 13138  0FF3  318F  2766  318F   	fcall	_TMR2_Initialize
 13139  0FF6                     l5950:	
 13140                           
 13141                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 13142  0FF6  318E  2630  318F   	fcall	_EXT_INT_Initialize
 13143  0FF9                     l5952:	
 13144                           
 13145                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
 13146  0FF9  3187  27BC  318F   	fcall	_TMR1_Initialize
 13147  0FFC                     l5954:	
 13148                           
 13149                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
 13150  0FFC  318E  26E0  318F   	fcall	_TMR0_Initialize
 13151  0FFF                     l439:	
 13152  0FFF  0008               	return
 13153  1000                     __end_of_SYSTEM_Initialize:	
 13154                           
 13155                           	psect	text24
 13156  0F66                     __ptext24:	
 13157 ;; *************** function _TMR2_Initialize *****************
 13158 ;; Defined at:
 13159 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 13160 ;; Parameters:    Size  Location     Type
 13161 ;;		None
 13162 ;; Auto vars:     Size  Location     Type
 13163 ;;		None
 13164 ;; Return value:  Size  Location     Type
 13165 ;;                  1    wreg      void 
 13166 ;; Registers used:
 13167 ;;		wreg, status,2, status,0, pclath, cstack
 13168 ;; Tracked objects:
 13169 ;;		On entry : 0/0
 13170 ;;		On exit  : 0/0
 13171 ;;		Unchanged: 0/0
 13172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13177 ;;Total ram usage:        0 bytes
 13178 ;; Hardware stack levels used:    1
 13179 ;; Hardware stack levels required when called:    7
 13180 ;; This function calls:
 13181 ;;		_TMR2_SetInterruptHandler
 13182 ;; This function is called by:
 13183 ;;		_SYSTEM_Initialize
 13184 ;; This function uses a non-reentrant model
 13185 ;;
 13186                           
 13187                           
 13188                           ;psect for function _TMR2_Initialize
 13189  0F66                     _TMR2_Initialize:	
 13190  0F66                     l5782:	
 13191                           ;incstack = 0
 13192                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13193                           
 13194                           
 13195                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
 13196  0F66  3001               	movlw	1
 13197  0F67  0025               	movlb	5	; select bank5
 13198  0F68  0090               	movwf	16	;volatile
 13199                           
 13200                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x20;
 13201  0F69  3020               	movlw	32
 13202  0F6A  008F               	movwf	15	;volatile
 13203  0F6B                     l5784:	
 13204                           
 13205                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
 13206  0F6B  0191               	clrf	17	;volatile
 13207  0F6C                     l5786:	
 13208                           
 13209                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x9B;
 13210  0F6C  309B               	movlw	155
 13211  0F6D  008D               	movwf	13	;volatile
 13212                           
 13213                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
 13214  0F6E  018C               	clrf	12	;volatile
 13215  0F6F                     l5788:	
 13216                           
 13217                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
 13218  0F6F  002E               	movlb	14	; select bank14
 13219  0F70  1090               	bcf	16,1	;volatile
 13220  0F71                     l5790:	
 13221                           
 13222                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
 13223  0F71  149A               	bsf	26,1	;volatile
 13224  0F72                     l5792:	
 13225                           
 13226                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 13227  0F72  30FE               	movlw	low _TMR2_DefaultInterruptHandler
 13228  0F73  0020               	movlb	0	; select bank0
 13229  0F74  00C5               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 13230  0F75  300C               	movlw	high _TMR2_DefaultInterruptHandler
 13231  0F76  00C6               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 13232  0F77  318D  2570  318F   	fcall	_TMR2_SetInterruptHandler
 13233  0F7A                     l5794:	
 13234                           
 13235                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xB1;
 13236  0F7A  30B1               	movlw	177
 13237  0F7B  0025               	movlb	5	; select bank5
 13238  0F7C  008E               	movwf	14	;volatile
 13239  0F7D                     l998:	
 13240  0F7D  0008               	return
 13241  0F7E                     __end_of_TMR2_Initialize:	
 13242                           
 13243                           	psect	text25
 13244  0D70                     __ptext25:	
 13245 ;; *************** function _TMR2_SetInterruptHandler *****************
 13246 ;; Defined at:
 13247 ;;		line 178 in file "mcc_generated_files/tmr2.c"
 13248 ;; Parameters:    Size  Location     Type
 13249 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 13250 ;;		 -> handler_clock_ms(1), TMR2_DefaultInterruptHandler(1), 
 13251 ;; Auto vars:     Size  Location     Type
 13252 ;;		None
 13253 ;; Return value:  Size  Location     Type
 13254 ;;                  1    wreg      void 
 13255 ;; Registers used:
 13256 ;;		wreg
 13257 ;; Tracked objects:
 13258 ;;		On entry : 0/0
 13259 ;;		On exit  : 0/0
 13260 ;;		Unchanged: 0/0
 13261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13262 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13265 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13266 ;;Total ram usage:        2 bytes
 13267 ;; Hardware stack levels used:    1
 13268 ;; Hardware stack levels required when called:    6
 13269 ;; This function calls:
 13270 ;;		Nothing
 13271 ;; This function is called by:
 13272 ;;		_TMR2_Initialize
 13273 ;;		_main
 13274 ;; This function uses a non-reentrant model
 13275 ;;
 13276                           
 13277                           
 13278                           ;psect for function _TMR2_SetInterruptHandler
 13279  0D70                     _TMR2_SetInterruptHandler:	
 13280  0D70                     l5638:	
 13281                           ;incstack = 0
 13282                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 13283                           
 13284                           
 13285                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
 13286  0D70  0020               	movlb	0	; select bank0
 13287  0D71  0846               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 13288  0D72  00DE               	movwf	_TMR2_InterruptHandler+1
 13289  0D73  0845               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 13290  0D74  00DD               	movwf	_TMR2_InterruptHandler
 13291  0D75                     l1041:	
 13292  0D75  0008               	return
 13293  0D76                     __end_of_TMR2_SetInterruptHandler:	
 13294                           
 13295                           	psect	text26
 13296  07BC                     __ptext26:	
 13297 ;; *************** function _TMR1_Initialize *****************
 13298 ;; Defined at:
 13299 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 13300 ;; Parameters:    Size  Location     Type
 13301 ;;		None
 13302 ;; Auto vars:     Size  Location     Type
 13303 ;;		None
 13304 ;; Return value:  Size  Location     Type
 13305 ;;                  1    wreg      void 
 13306 ;; Registers used:
 13307 ;;		wreg, status,2, status,0, pclath, cstack
 13308 ;; Tracked objects:
 13309 ;;		On entry : 0/0
 13310 ;;		On exit  : 0/0
 13311 ;;		Unchanged: 0/0
 13312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13317 ;;Total ram usage:        0 bytes
 13318 ;; Hardware stack levels used:    1
 13319 ;; Hardware stack levels required when called:    7
 13320 ;; This function calls:
 13321 ;;		_TMR1_SetInterruptHandler
 13322 ;; This function is called by:
 13323 ;;		_SYSTEM_Initialize
 13324 ;; This function uses a non-reentrant model
 13325 ;;
 13326                           
 13327                           
 13328                           ;psect for function _TMR1_Initialize
 13329  07BC                     _TMR1_Initialize:	
 13330  07BC                     l5796:	
 13331                           ;incstack = 0
 13332                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13333                           
 13334                           
 13335                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 13336  07BC  0024               	movlb	4	; select bank4
 13337  07BD  018F               	clrf	15	;volatile
 13338                           
 13339                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 13340  07BE  0190               	clrf	16	;volatile
 13341  07BF                     l5798:	
 13342                           
 13343                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
 13344  07BF  3004               	movlw	4
 13345  07C0  0091               	movwf	17	;volatile
 13346  07C1                     l5800:	
 13347                           
 13348                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xE1;
 13349  07C1  30E1               	movlw	225
 13350  07C2  008D               	movwf	13	;volatile
 13351  07C3                     l5802:	
 13352                           
 13353                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xBA;
 13354  07C3  30BA               	movlw	186
 13355  07C4  008C               	movwf	12	;volatile
 13356  07C5                     l5804:	
 13357                           
 13358                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 13359  07C5  080D               	movf	13,w	;volatile
 13360  07C6  0020               	movlb	0	; select bank0
 13361  07C7  00E2               	movwf	_timer1ReloadVal+1	;volatile
 13362  07C8  0024               	movlb	4	; select bank4
 13363  07C9  080C               	movf	12,w	;volatile
 13364  07CA  0020               	movlb	0	; select bank0
 13365  07CB  00E1               	movwf	_timer1ReloadVal	;volatile
 13366  07CC                     l5806:	
 13367                           
 13368                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
 13369  07CC  002E               	movlb	14	; select bank14
 13370  07CD  1010               	bcf	16,0	;volatile
 13371  07CE                     l5808:	
 13372                           
 13373                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 13374  07CE  141A               	bsf	26,0	;volatile
 13375  07CF                     l5810:	
 13376                           
 13377                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 13378  07CF  30FD               	movlw	low _TMR1_DefaultInterruptHandler
 13379  07D0  0020               	movlb	0	; select bank0
 13380  07D1  00C5               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 13381  07D2  300C               	movlw	high _TMR1_DefaultInterruptHandler
 13382  07D3  00C6               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 13383  07D4  318D  256A  3187   	fcall	_TMR1_SetInterruptHandler
 13384  07D7                     l5812:	
 13385                           
 13386                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x15;
 13387  07D7  3015               	movlw	21
 13388  07D8  0024               	movlb	4	; select bank4
 13389  07D9  008E               	movwf	14	;volatile
 13390  07DA                     l869:	
 13391  07DA  0008               	return
 13392  07DB                     __end_of_TMR1_Initialize:	
 13393                           
 13394                           	psect	text27
 13395  0D6A                     __ptext27:	
 13396 ;; *************** function _TMR1_SetInterruptHandler *****************
 13397 ;; Defined at:
 13398 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 13399 ;; Parameters:    Size  Location     Type
 13400 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 13401 ;;		 -> handler_clock_hms(1), TMR1_DefaultInterruptHandler(1), 
 13402 ;; Auto vars:     Size  Location     Type
 13403 ;;		None
 13404 ;; Return value:  Size  Location     Type
 13405 ;;                  1    wreg      void 
 13406 ;; Registers used:
 13407 ;;		wreg
 13408 ;; Tracked objects:
 13409 ;;		On entry : 0/0
 13410 ;;		On exit  : 0/0
 13411 ;;		Unchanged: 0/0
 13412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13413 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13416 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13417 ;;Total ram usage:        2 bytes
 13418 ;; Hardware stack levels used:    1
 13419 ;; Hardware stack levels required when called:    6
 13420 ;; This function calls:
 13421 ;;		Nothing
 13422 ;; This function is called by:
 13423 ;;		_TMR1_Initialize
 13424 ;;		_main
 13425 ;; This function uses a non-reentrant model
 13426 ;;
 13427                           
 13428                           
 13429                           ;psect for function _TMR1_SetInterruptHandler
 13430  0D6A                     _TMR1_SetInterruptHandler:	
 13431  0D6A                     l5616:	
 13432                           ;incstack = 0
 13433                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 13434                           
 13435                           
 13436                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
 13437  0D6A  0020               	movlb	0	; select bank0
 13438  0D6B  0846               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 13439  0D6C  00E0               	movwf	_TMR1_InterruptHandler+1
 13440  0D6D  0845               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 13441  0D6E  00DF               	movwf	_TMR1_InterruptHandler
 13442  0D6F                     l899:	
 13443  0D6F  0008               	return
 13444  0D70                     __end_of_TMR1_SetInterruptHandler:	
 13445                           
 13446                           	psect	text28
 13447  0EE0                     __ptext28:	
 13448 ;; *************** function _TMR0_Initialize *****************
 13449 ;; Defined at:
 13450 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 13451 ;; Parameters:    Size  Location     Type
 13452 ;;		None
 13453 ;; Auto vars:     Size  Location     Type
 13454 ;;		None
 13455 ;; Return value:  Size  Location     Type
 13456 ;;                  1    wreg      void 
 13457 ;; Registers used:
 13458 ;;		wreg, status,2, status,0, pclath, cstack
 13459 ;; Tracked objects:
 13460 ;;		On entry : 0/0
 13461 ;;		On exit  : 0/0
 13462 ;;		Unchanged: 0/0
 13463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13468 ;;Total ram usage:        0 bytes
 13469 ;; Hardware stack levels used:    1
 13470 ;; Hardware stack levels required when called:    7
 13471 ;; This function calls:
 13472 ;;		_TMR0_SetInterruptHandler
 13473 ;; This function is called by:
 13474 ;;		_SYSTEM_Initialize
 13475 ;; This function uses a non-reentrant model
 13476 ;;
 13477                           
 13478                           
 13479                           ;psect for function _TMR0_Initialize
 13480  0EE0                     _TMR0_Initialize:	
 13481  0EE0                     l5814:	
 13482                           ;incstack = 0
 13483                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13484                           
 13485                           
 13486                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x95;
 13487  0EE0  3095               	movlw	149
 13488  0EE1  0020               	movlb	0	; select bank0
 13489  0EE2  009F               	movwf	31	;volatile
 13490                           
 13491                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF1;
 13492  0EE3  30F1               	movlw	241
 13493  0EE4  009D               	movwf	29	;volatile
 13494  0EE5                     l5816:	
 13495                           
 13496                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 13497  0EE5  019C               	clrf	28	;volatile
 13498  0EE6                     l5818:	
 13499                           
 13500                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 13501  0EE6  002E               	movlb	14	; select bank14
 13502  0EE7  128C               	bcf	12,5	;volatile
 13503  0EE8                     l5820:	
 13504                           
 13505                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 13506  0EE8  1696               	bsf	22,5	;volatile
 13507  0EE9                     l5822:	
 13508                           
 13509                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 13510  0EE9  30FC               	movlw	low _TMR0_DefaultInterruptHandler
 13511  0EEA  0020               	movlb	0	; select bank0
 13512  0EEB  00C5               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 13513  0EEC  300C               	movlw	high _TMR0_DefaultInterruptHandler
 13514  0EED  00C6               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 13515  0EEE  318D  2564  318E   	fcall	_TMR0_SetInterruptHandler
 13516  0EF1                     l5824:	
 13517                           
 13518                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x0B;
 13519  0EF1  300B               	movlw	11
 13520  0EF2  0020               	movlb	0	; select bank0
 13521  0EF3  009E               	movwf	30	;volatile
 13522  0EF4                     l1589:	
 13523  0EF4  0008               	return
 13524  0EF5                     __end_of_TMR0_Initialize:	
 13525                           
 13526                           	psect	text29
 13527  0D64                     __ptext29:	
 13528 ;; *************** function _TMR0_SetInterruptHandler *****************
 13529 ;; Defined at:
 13530 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 13531 ;; Parameters:    Size  Location     Type
 13532 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 13533 ;;		 -> TMR0_DefaultInterruptHandler(1), ISR_3s(1), 
 13534 ;; Auto vars:     Size  Location     Type
 13535 ;;		None
 13536 ;; Return value:  Size  Location     Type
 13537 ;;                  1    wreg      void 
 13538 ;; Registers used:
 13539 ;;		wreg
 13540 ;; Tracked objects:
 13541 ;;		On entry : 0/0
 13542 ;;		On exit  : 0/0
 13543 ;;		Unchanged: 0/0
 13544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13545 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13548 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13549 ;;Total ram usage:        2 bytes
 13550 ;; Hardware stack levels used:    1
 13551 ;; Hardware stack levels required when called:    6
 13552 ;; This function calls:
 13553 ;;		Nothing
 13554 ;; This function is called by:
 13555 ;;		_main
 13556 ;;		_TMR0_Initialize
 13557 ;; This function uses a non-reentrant model
 13558 ;;
 13559                           
 13560                           
 13561                           ;psect for function _TMR0_SetInterruptHandler
 13562  0D64                     _TMR0_SetInterruptHandler:	
 13563  0D64                     l5640:	
 13564                           ;incstack = 0
 13565                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 13566                           
 13567                           
 13568                           ;mcc_generated_files/tmr0.c: 137:     TMR0_InterruptHandler = InterruptHandler;
 13569  0D64  0020               	movlb	0	; select bank0
 13570  0D65  0846               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 13571  0D66  00DC               	movwf	_TMR0_InterruptHandler+1
 13572  0D67  0845               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 13573  0D68  00DB               	movwf	_TMR0_InterruptHandler
 13574  0D69                     l1611:	
 13575  0D69  0008               	return
 13576  0D6A                     __end_of_TMR0_SetInterruptHandler:	
 13577                           
 13578                           	psect	text30
 13579  0E23                     __ptext30:	
 13580 ;; *************** function _PWM6_Initialize *****************
 13581 ;; Defined at:
 13582 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 13583 ;; Parameters:    Size  Location     Type
 13584 ;;		None
 13585 ;; Auto vars:     Size  Location     Type
 13586 ;;		None
 13587 ;; Return value:  Size  Location     Type
 13588 ;;                  1    wreg      void 
 13589 ;; Registers used:
 13590 ;;		wreg, status,2, status,0
 13591 ;; Tracked objects:
 13592 ;;		On entry : 0/0
 13593 ;;		On exit  : 0/0
 13594 ;;		Unchanged: 0/0
 13595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13600 ;;Total ram usage:        0 bytes
 13601 ;; Hardware stack levels used:    1
 13602 ;; Hardware stack levels required when called:    6
 13603 ;; This function calls:
 13604 ;;		Nothing
 13605 ;; This function is called by:
 13606 ;;		_SYSTEM_Initialize
 13607 ;; This function uses a non-reentrant model
 13608 ;;
 13609                           
 13610                           
 13611                           ;psect for function _PWM6_Initialize
 13612  0E23                     _PWM6_Initialize:	
 13613  0E23                     l5772:	
 13614                           ;incstack = 0
 13615                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 13616                           
 13617                           
 13618                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 13619  0E23  3080               	movlw	128
 13620  0E24  0027               	movlb	7	; select bank7
 13621  0E25  008E               	movwf	14	;volatile
 13622                           
 13623                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x3E;
 13624  0E26  303E               	movlw	62
 13625  0E27  008D               	movwf	13	;volatile
 13626                           
 13627                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 13628  0E28  3040               	movlw	64
 13629  0E29  008C               	movwf	12	;volatile
 13630  0E2A                     l5774:	
 13631                           
 13632                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 13633  0E2A  0024               	movlb	4	; select bank4
 13634  0E2B  081F               	movf	31,w	;volatile
 13635  0E2C  39F3               	andlw	-13
 13636  0E2D  3804               	iorlw	4
 13637  0E2E  009F               	movwf	31	;volatile
 13638  0E2F                     l913:	
 13639  0E2F  0008               	return
 13640  0E30                     __end_of_PWM6_Initialize:	
 13641                           
 13642                           	psect	text31
 13643  0DB7                     __ptext31:	
 13644 ;; *************** function _PMD_Initialize *****************
 13645 ;; Defined at:
 13646 ;;		line 77 in file "mcc_generated_files/mcc.c"
 13647 ;; Parameters:    Size  Location     Type
 13648 ;;		None
 13649 ;; Auto vars:     Size  Location     Type
 13650 ;;		None
 13651 ;; Return value:  Size  Location     Type
 13652 ;;                  1    wreg      void 
 13653 ;; Registers used:
 13654 ;;		status,2
 13655 ;; Tracked objects:
 13656 ;;		On entry : 0/0
 13657 ;;		On exit  : 0/0
 13658 ;;		Unchanged: 0/0
 13659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13664 ;;Total ram usage:        0 bytes
 13665 ;; Hardware stack levels used:    1
 13666 ;; Hardware stack levels required when called:    6
 13667 ;; This function calls:
 13668 ;;		Nothing
 13669 ;; This function is called by:
 13670 ;;		_SYSTEM_Initialize
 13671 ;; This function uses a non-reentrant model
 13672 ;;
 13673                           
 13674                           
 13675                           ;psect for function _PMD_Initialize
 13676  0DB7                     _PMD_Initialize:	
 13677  0DB7                     l5708:	
 13678                           ;incstack = 0
 13679                           ; Regs used in _PMD_Initialize: [status,2]
 13680                           
 13681                           
 13682                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 13683  0DB7  002F               	movlb	15	; select bank15
 13684  0DB8  0196               	clrf	22	;volatile
 13685                           
 13686                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 13687  0DB9  0197               	clrf	23	;volatile
 13688                           
 13689                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 13690  0DBA  0198               	clrf	24	;volatile
 13691                           
 13692                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 13693  0DBB  0199               	clrf	25	;volatile
 13694                           
 13695                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 13696  0DBC  019A               	clrf	26	;volatile
 13697                           
 13698                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 13699  0DBD  019B               	clrf	27	;volatile
 13700  0DBE                     l445:	
 13701  0DBE  0008               	return
 13702  0DBF                     __end_of_PMD_Initialize:	
 13703                           
 13704                           	psect	text32
 13705  0522                     __ptext32:	
 13706 ;; *************** function _PIN_MANAGER_Initialize *****************
 13707 ;; Defined at:
 13708 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 13709 ;; Parameters:    Size  Location     Type
 13710 ;;		None
 13711 ;; Auto vars:     Size  Location     Type
 13712 ;;		None
 13713 ;; Return value:  Size  Location     Type
 13714 ;;                  1    wreg      void 
 13715 ;; Registers used:
 13716 ;;		wreg, status,2
 13717 ;; Tracked objects:
 13718 ;;		On entry : 0/0
 13719 ;;		On exit  : 0/0
 13720 ;;		Unchanged: 0/0
 13721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13726 ;;Total ram usage:        0 bytes
 13727 ;; Hardware stack levels used:    1
 13728 ;; Hardware stack levels required when called:    6
 13729 ;; This function calls:
 13730 ;;		Nothing
 13731 ;; This function is called by:
 13732 ;;		_SYSTEM_Initialize
 13733 ;; This function uses a non-reentrant model
 13734 ;;
 13735                           
 13736                           
 13737                           ;psect for function _PIN_MANAGER_Initialize
 13738  0522                     _PIN_MANAGER_Initialize:	
 13739  0522                     l5710:	
 13740                           ;incstack = 0
 13741                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 13742                           
 13743                           
 13744                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 13745  0522  0020               	movlb	0	; select bank0
 13746  0523  019A               	clrf	26	;volatile
 13747                           
 13748                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 13749  0524  0199               	clrf	25	;volatile
 13750                           
 13751                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 13752  0525  0196               	clrf	22	;volatile
 13753                           
 13754                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 13755  0526  0197               	clrf	23	;volatile
 13756                           
 13757                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 13758  0527  0198               	clrf	24	;volatile
 13759  0528                     l5712:	
 13760                           
 13761                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 13762  0528  3007               	movlw	7
 13763  0529  0095               	movwf	21	;volatile
 13764  052A                     l5714:	
 13765                           
 13766                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
 13767  052A  300F               	movlw	15
 13768  052B  0091               	movwf	17	;volatile
 13769  052C                     l5716:	
 13770                           
 13771                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 13772  052C  30FF               	movlw	255
 13773  052D  0092               	movwf	18	;volatile
 13774  052E                     l5718:	
 13775                           
 13776                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 13777  052E  30FF               	movlw	255
 13778  052F  0093               	movwf	19	;volatile
 13779  0530                     l5720:	
 13780                           
 13781                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 13782  0530  30FF               	movlw	255
 13783  0531  0094               	movwf	20	;volatile
 13784  0532                     l5722:	
 13785                           
 13786                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 13787  0532  30FF               	movlw	255
 13788  0533  003E               	movlb	30	; select bank30
 13789  0534  00D9               	movwf	89	;volatile
 13790  0535                     l5724:	
 13791                           
 13792                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC7;
 13793  0535  30C7               	movlw	199
 13794  0536  00CE               	movwf	78	;volatile
 13795  0537                     l5726:	
 13796                           
 13797                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
 13798  0537  30EF               	movlw	239
 13799  0538  00C3               	movwf	67	;volatile
 13800  0539                     l5728:	
 13801                           
 13802                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 13803  0539  3007               	movlw	7
 13804  053A  00E4               	movwf	100	;volatile
 13805  053B                     l5730:	
 13806                           
 13807                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
 13808  053B  30FF               	movlw	255
 13809  053C  00B8               	movwf	56	;volatile
 13810                           
 13811                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 13812  053D  01DA               	clrf	90	;volatile
 13813                           
 13814                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 13815  053E  01E5               	clrf	101	;volatile
 13816                           
 13817                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 13818  053F  01C4               	clrf	68	;volatile
 13819                           
 13820                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 13821  0540  01B9               	clrf	57	;volatile
 13822                           
 13823                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 13824  0541  01CF               	clrf	79	;volatile
 13825                           
 13826                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 13827  0542  01E6               	clrf	102	;volatile
 13828                           
 13829                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 13830  0543  01BA               	clrf	58	;volatile
 13831                           
 13832                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 13833  0544  01C5               	clrf	69	;volatile
 13834                           
 13835                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 13836  0545  01D0               	clrf	80	;volatile
 13837                           
 13838                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 13839  0546  01DB               	clrf	91	;volatile
 13840  0547                     l5732:	
 13841                           
 13842                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 13843  0547  30FF               	movlw	255
 13844  0548  00BB               	movwf	59	;volatile
 13845  0549                     l5734:	
 13846                           
 13847                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 13848  0549  30FF               	movlw	255
 13849  054A  00C6               	movwf	70	;volatile
 13850  054B                     l5736:	
 13851                           
 13852                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 13853  054B  30FF               	movlw	255
 13854  054C  00D1               	movwf	81	;volatile
 13855  054D                     l5738:	
 13856                           
 13857                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 13858  054D  30FF               	movlw	255
 13859  054E  00DC               	movwf	92	;volatile
 13860  054F                     l5740:	
 13861                           
 13862                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 13863  054F  3007               	movlw	7
 13864  0550  00E7               	movwf	103	;volatile
 13865  0551                     l5742:	
 13866                           
 13867                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 13868  0551  30FF               	movlw	255
 13869  0552  00BC               	movwf	60	;volatile
 13870  0553                     l5744:	
 13871                           
 13872                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 13873  0553  30FF               	movlw	255
 13874  0554  00C7               	movwf	71	;volatile
 13875  0555                     l5746:	
 13876                           
 13877                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 13878  0555  30FF               	movlw	255
 13879  0556  00D2               	movwf	82	;volatile
 13880  0557                     l5748:	
 13881                           
 13882                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 13883  0557  30FF               	movlw	255
 13884  0558  00DD               	movwf	93	;volatile
 13885  0559                     l5750:	
 13886                           
 13887                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 13888  0559  3007               	movlw	7
 13889  055A  00E8               	movwf	104	;volatile
 13890  055B                     l5752:	
 13891                           
 13892                           ;mcc_generated_files/pin_manager.c: 127:     INTPPS = 0x0C;
 13893  055B  300C               	movlw	12
 13894  055C  003D               	movlb	29	; select bank29
 13895  055D  0090               	movwf	16	;volatile
 13896  055E                     l5754:	
 13897                           
 13898                           ;mcc_generated_files/pin_manager.c: 128:     SSP1CLKPPS = 0x13;
 13899  055E  3013               	movlw	19
 13900  055F  00C5               	movwf	69	;volatile
 13901  0560                     l5756:	
 13902                           
 13903                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x14;
 13904  0560  3014               	movlw	20
 13905  0561  003E               	movlb	30	; select bank30
 13906  0562  00A3               	movwf	35	;volatile
 13907  0563                     l5758:	
 13908                           
 13909                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x15;
 13910  0563  3015               	movlw	21
 13911  0564  00A4               	movwf	36	;volatile
 13912  0565                     l5760:	
 13913                           
 13914                           ;mcc_generated_files/pin_manager.c: 131:     RA6PPS = 0x0E;
 13915  0565  300E               	movlw	14
 13916  0566  0096               	movwf	22	;volatile
 13917  0567                     l5762:	
 13918                           
 13919                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 13920  0567  3014               	movlw	20
 13921  0568  003D               	movlb	29	; select bank29
 13922  0569  00C6               	movwf	70	;volatile
 13923  056A                     l530:	
 13924  056A  0008               	return
 13925  056B                     __end_of_PIN_MANAGER_Initialize:	
 13926                           
 13927                           	psect	text33
 13928  07F7                     __ptext33:	
 13929 ;; *************** function _OSCILLATOR_Initialize *****************
 13930 ;; Defined at:
 13931 ;;		line 63 in file "mcc_generated_files/mcc.c"
 13932 ;; Parameters:    Size  Location     Type
 13933 ;;		None
 13934 ;; Auto vars:     Size  Location     Type
 13935 ;;		None
 13936 ;; Return value:  Size  Location     Type
 13937 ;;                  1    wreg      void 
 13938 ;; Registers used:
 13939 ;;		wreg, status,2
 13940 ;; Tracked objects:
 13941 ;;		On entry : 0/0
 13942 ;;		On exit  : 0/0
 13943 ;;		Unchanged: 0/0
 13944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13949 ;;Total ram usage:        0 bytes
 13950 ;; Hardware stack levels used:    1
 13951 ;; Hardware stack levels required when called:    6
 13952 ;; This function calls:
 13953 ;;		Nothing
 13954 ;; This function is called by:
 13955 ;;		_SYSTEM_Initialize
 13956 ;; This function uses a non-reentrant model
 13957 ;;
 13958                           
 13959                           
 13960                           ;psect for function _OSCILLATOR_Initialize
 13961  07F7                     _OSCILLATOR_Initialize:	
 13962  07F7                     l5764:	
 13963                           ;incstack = 0
 13964                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 13965                           
 13966                           
 13967                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x62;
 13968  07F7  3062               	movlw	98
 13969  07F8  0031               	movlb	17	; select bank17
 13970  07F9  008D               	movwf	13	;volatile
 13971  07FA                     l5766:	
 13972                           
 13973                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
 13974  07FA  018F               	clrf	15	;volatile
 13975  07FB                     l5768:	
 13976                           
 13977                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
 13978  07FB  0191               	clrf	17	;volatile
 13979                           
 13980                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x02;
 13981  07FC  3002               	movlw	2
 13982  07FD  0093               	movwf	19	;volatile
 13983  07FE                     l5770:	
 13984                           
 13985                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 13986  07FE  0192               	clrf	18	;volatile
 13987  07FF                     l442:	
 13988  07FF  0008               	return
 13989  0800                     __end_of_OSCILLATOR_Initialize:	
 13990                           
 13991                           	psect	text34
 13992  0E30                     __ptext34:	
 13993 ;; *************** function _EXT_INT_Initialize *****************
 13994 ;; Defined at:
 13995 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 13996 ;; Parameters:    Size  Location     Type
 13997 ;;		None
 13998 ;; Auto vars:     Size  Location     Type
 13999 ;;		None
 14000 ;; Return value:  Size  Location     Type
 14001 ;;                  1    wreg      void 
 14002 ;; Registers used:
 14003 ;;		wreg, status,2, status,0, pclath, cstack
 14004 ;; Tracked objects:
 14005 ;;		On entry : 0/0
 14006 ;;		On exit  : 0/0
 14007 ;;		Unchanged: 0/0
 14008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14013 ;;Total ram usage:        0 bytes
 14014 ;; Hardware stack levels used:    1
 14015 ;; Hardware stack levels required when called:    7
 14016 ;; This function calls:
 14017 ;;		_INT_SetInterruptHandler
 14018 ;; This function is called by:
 14019 ;;		_SYSTEM_Initialize
 14020 ;; This function uses a non-reentrant model
 14021 ;;
 14022                           
 14023                           
 14024                           ;psect for function _EXT_INT_Initialize
 14025  0E30                     _EXT_INT_Initialize:	
 14026  0E30                     l5702:	
 14027                           ;incstack = 0
 14028                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14029                           
 14030                           
 14031                           ;mcc_generated_files/ext_int.c: 64:     (PIR0bits.INTF = 0);
 14032  0E30  002E               	movlb	14	; select bank14
 14033  0E31  100C               	bcf	12,0	;volatile
 14034                           
 14035                           ;mcc_generated_files/ext_int.c: 65:     (INTCONbits.INTEDG = 1);
 14036  0E32  140B               	bsf	11,0	;volatile
 14037  0E33                     l5704:	
 14038                           
 14039                           ;mcc_generated_files/ext_int.c: 67:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
 14040  0E33  30FB               	movlw	low _INT_DefaultInterruptHandler
 14041  0E34  0020               	movlb	0	; select bank0
 14042  0E35  00C5               	movwf	INT_SetInterruptHandler@InterruptHandler
 14043  0E36  300C               	movlw	high _INT_DefaultInterruptHandler
 14044  0E37  00C6               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 14045  0E38  318D  255E  318E   	fcall	_INT_SetInterruptHandler
 14046  0E3B                     l5706:	
 14047                           
 14048                           ;mcc_generated_files/ext_int.c: 68:     (PIE0bits.INTE = 1);
 14049  0E3B  002E               	movlb	14	; select bank14
 14050  0E3C  1416               	bsf	22,0	;volatile
 14051  0E3D                     l347:	
 14052  0E3D  0008               	return
 14053  0E3E                     __end_of_EXT_INT_Initialize:	
 14054                           
 14055                           	psect	text35
 14056  0D5E                     __ptext35:	
 14057 ;; *************** function _INT_SetInterruptHandler *****************
 14058 ;; Defined at:
 14059 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 14060 ;; Parameters:    Size  Location     Type
 14061 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 14062 ;;		 -> sw1_EXT(1), INT_DefaultInterruptHandler(1), 
 14063 ;; Auto vars:     Size  Location     Type
 14064 ;;		None
 14065 ;; Return value:  Size  Location     Type
 14066 ;;                  1    wreg      void 
 14067 ;; Registers used:
 14068 ;;		wreg
 14069 ;; Tracked objects:
 14070 ;;		On entry : 0/0
 14071 ;;		On exit  : 0/0
 14072 ;;		Unchanged: 0/0
 14073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14074 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14077 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14078 ;;Total ram usage:        2 bytes
 14079 ;; Hardware stack levels used:    1
 14080 ;; Hardware stack levels required when called:    6
 14081 ;; This function calls:
 14082 ;;		Nothing
 14083 ;; This function is called by:
 14084 ;;		_EXT_INT_Initialize
 14085 ;;		_main
 14086 ;; This function uses a non-reentrant model
 14087 ;;
 14088                           
 14089                           
 14090                           ;psect for function _INT_SetInterruptHandler
 14091  0D5E                     _INT_SetInterruptHandler:	
 14092  0D5E                     l5614:	
 14093                           ;incstack = 0
 14094                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 14095                           
 14096                           
 14097                           ;mcc_generated_files/ext_int.c: 51:     INT_InterruptHandler = InterruptHandler;
 14098  0D5E  0020               	movlb	0	; select bank0
 14099  0D5F  0846               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
 14100  0D60  00E4               	movwf	_INT_InterruptHandler+1
 14101  0D61  0845               	movf	INT_SetInterruptHandler@InterruptHandler,w
 14102  0D62  00E3               	movwf	_INT_InterruptHandler
 14103  0D63                     l341:	
 14104  0D63  0008               	return
 14105  0D64                     __end_of_INT_SetInterruptHandler:	
 14106                           
 14107                           	psect	text36
 14108  0F0B                     __ptext36:	
 14109 ;; *************** function _ADCC_Initialize *****************
 14110 ;; Defined at:
 14111 ;;		line 63 in file "mcc_generated_files/adcc.c"
 14112 ;; Parameters:    Size  Location     Type
 14113 ;;		None
 14114 ;; Auto vars:     Size  Location     Type
 14115 ;;		None
 14116 ;; Return value:  Size  Location     Type
 14117 ;;                  1    wreg      void 
 14118 ;; Registers used:
 14119 ;;		wreg, status,2
 14120 ;; Tracked objects:
 14121 ;;		On entry : 0/0
 14122 ;;		On exit  : 0/0
 14123 ;;		Unchanged: 0/0
 14124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14129 ;;Total ram usage:        0 bytes
 14130 ;; Hardware stack levels used:    1
 14131 ;; Hardware stack levels required when called:    6
 14132 ;; This function calls:
 14133 ;;		Nothing
 14134 ;; This function is called by:
 14135 ;;		_SYSTEM_Initialize
 14136 ;; This function uses a non-reentrant model
 14137 ;;
 14138                           
 14139                           
 14140                           ;psect for function _ADCC_Initialize
 14141  0F0B                     _ADCC_Initialize:	
 14142  0F0B                     l5776:	
 14143                           ;incstack = 0
 14144                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 14145                           
 14146                           
 14147                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 14148  0F0B  0022               	movlb	2	; select bank2
 14149  0F0C  018E               	clrf	14	;volatile
 14150                           
 14151                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 14152  0F0D  018F               	clrf	15	;volatile
 14153                           
 14154                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 14155  0F0E  0190               	clrf	16	;volatile
 14156                           
 14157                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 14158  0F0F  0191               	clrf	17	;volatile
 14159                           
 14160                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 14161  0F10  0192               	clrf	18	;volatile
 14162                           
 14163                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 14164  0F11  0193               	clrf	19	;volatile
 14165                           
 14166                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 14167  0F12  018D               	clrf	13	;volatile
 14168                           
 14169                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 14170  0F13  0021               	movlb	1	; select bank1
 14171  0F14  019E               	clrf	30	;volatile
 14172                           
 14173                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 14174  0F15  019B               	clrf	27	;volatile
 14175                           
 14176                           ;mcc_generated_files/adcc.c: 85:     ADCON1 = 0x00;
 14177  0F16  0194               	clrf	20	;volatile
 14178                           
 14179                           ;mcc_generated_files/adcc.c: 87:     ADCON2 = 0x00;
 14180  0F17  0195               	clrf	21	;volatile
 14181                           
 14182                           ;mcc_generated_files/adcc.c: 89:     ADCON3 = 0x00;
 14183  0F18  0196               	clrf	22	;volatile
 14184                           
 14185                           ;mcc_generated_files/adcc.c: 91:     ADSTAT = 0x00;
 14186  0F19  0197               	clrf	23	;volatile
 14187                           
 14188                           ;mcc_generated_files/adcc.c: 93:     ADREF = 0x00;
 14189  0F1A  019A               	clrf	26	;volatile
 14190                           
 14191                           ;mcc_generated_files/adcc.c: 95:     ADACT = 0x00;
 14192  0F1B  0199               	clrf	25	;volatile
 14193                           
 14194                           ;mcc_generated_files/adcc.c: 97:     ADCLK = 0x00;
 14195  0F1C  0198               	clrf	24	;volatile
 14196  0F1D                     l5778:	
 14197                           
 14198                           ;mcc_generated_files/adcc.c: 99:     ADCON0 = 0x84;
 14199  0F1D  3084               	movlw	132
 14200  0F1E  0093               	movwf	19	;volatile
 14201  0F1F                     l5780:	
 14202                           
 14203                           ;mcc_generated_files/adcc.c: 101:     ADACQ = 0x00;
 14204  0F1F  019D               	clrf	29	;volatile
 14205  0F20                     l757:	
 14206  0F20  0008               	return
 14207  0F21                     __end_of_ADCC_Initialize:	
 14208                           
 14209                           	psect	text37
 14210  0FCA                     __ptext37:	
 14211 ;; *************** function _LED_bin *****************
 14212 ;; Defined at:
 14213 ;;		line 401 in file "main.c"
 14214 ;; Parameters:    Size  Location     Type
 14215 ;;  value           2    3[BANK0 ] unsigned int 
 14216 ;; Auto vars:     Size  Location     Type
 14217 ;;		None
 14218 ;; Return value:  Size  Location     Type
 14219 ;;                  1    wreg      void 
 14220 ;; Registers used:
 14221 ;;		wreg, status,2, status,0
 14222 ;; Tracked objects:
 14223 ;;		On entry : 0/0
 14224 ;;		On exit  : 0/0
 14225 ;;		Unchanged: 0/0
 14226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14227 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14229 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14230 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14231 ;;Total ram usage:        5 bytes
 14232 ;; Hardware stack levels used:    1
 14233 ;; Hardware stack levels required when called:    6
 14234 ;; This function calls:
 14235 ;;		Nothing
 14236 ;; This function is called by:
 14237 ;;		_main
 14238 ;; This function uses a non-reentrant model
 14239 ;;
 14240                           
 14241                           
 14242                           ;psect for function _LED_bin
 14243  0FCA                     _LED_bin:	
 14244  0FCA                     l5984:	
 14245                           ;incstack = 0
 14246                           ; Regs used in _LED_bin: [wreg+status,2+status,0]
 14247                           
 14248                           
 14249                           ;main.c: 403:     LATAbits.LATA4 = (value & 1);
 14250  0FCA  0020               	movlb	0	; select bank0
 14251  0FCB  0845               	movf	LED_bin@value,w
 14252  0FCC  3901               	andlw	1
 14253  0FCD  00C7               	movwf	??_LED_bin
 14254  0FCE  0EC7               	swapf	??_LED_bin,f
 14255  0FCF  0816               	movf	22,w	;volatile
 14256  0FD0  0647               	xorwf	??_LED_bin,w
 14257  0FD1  39EF               	andlw	-17
 14258  0FD2  0647               	xorwf	??_LED_bin,w
 14259  0FD3  0096               	movwf	22	;volatile
 14260                           
 14261                           ;main.c: 404:     LATAbits.LATA5 = (value >>1);
 14262  0FD4  0846               	movf	LED_bin@value+1,w
 14263  0FD5  00C8               	movwf	??_LED_bin+1
 14264  0FD6  0845               	movf	LED_bin@value,w
 14265  0FD7  00C7               	movwf	??_LED_bin
 14266  0FD8  36C8               	lsrf	??_LED_bin+1,f
 14267  0FD9  0CC7               	rrf	??_LED_bin,f
 14268  0FDA  0847               	movf	??_LED_bin,w
 14269  0FDB  00C9               	movwf	??_LED_bin+2
 14270  0FDC  0EC9               	swapf	??_LED_bin+2,f
 14271  0FDD  0DC9               	rlf	??_LED_bin+2,f
 14272  0FDE  0816               	movf	22,w	;volatile
 14273  0FDF  0649               	xorwf	??_LED_bin+2,w
 14274  0FE0  39DF               	andlw	-33
 14275  0FE1  0649               	xorwf	??_LED_bin+2,w
 14276  0FE2  0096               	movwf	22	;volatile
 14277  0FE3                     l1290:	
 14278  0FE3  0008               	return
 14279  0FE4                     __end_of_LED_bin:	
 14280                           
 14281                           	psect	text38
 14282  0FB0                     __ptext38:	
 14283 ;; *************** function _ADC_read *****************
 14284 ;; Defined at:
 14285 ;;		line 414 in file "main.c"
 14286 ;; Parameters:    Size  Location     Type
 14287 ;;		None
 14288 ;; Auto vars:     Size  Location     Type
 14289 ;;		None
 14290 ;; Return value:  Size  Location     Type
 14291 ;;                  2    5[BANK0 ] unsigned int 
 14292 ;; Registers used:
 14293 ;;		wreg, status,2, status,0, pclath, cstack
 14294 ;; Tracked objects:
 14295 ;;		On entry : 0/0
 14296 ;;		On exit  : 0/0
 14297 ;;		Unchanged: 0/0
 14298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14299 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14302 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14303 ;;Total ram usage:        2 bytes
 14304 ;; Hardware stack levels used:    1
 14305 ;; Hardware stack levels required when called:    7
 14306 ;; This function calls:
 14307 ;;		_ADCC_GetConversionResult
 14308 ;;		_ADCC_IsConversionDone
 14309 ;;		_ADCC_StartConversion
 14310 ;; This function is called by:
 14311 ;;		_main
 14312 ;; This function uses a non-reentrant model
 14313 ;;
 14314                           
 14315                           
 14316                           ;psect for function _ADC_read
 14317  0FB0                     _ADC_read:	
 14318  0FB0                     l5974:	
 14319                           ;incstack = 0
 14320                           ; Regs used in _ADC_read: [wreg+status,2+status,0+pclath+cstack]
 14321                           
 14322                           
 14323                           ;main.c: 416:     ADCC_StartConversion(channel_ANA0);
 14324  0FB0  3000               	movlw	0
 14325  0FB1  318D  25AF  318F   	fcall	_ADCC_StartConversion
 14326                           
 14327                           ;main.c: 417:     while(!ADCC_IsConversionDone()){
 14328  0FB4  2FB9               	goto	l5978
 14329  0FB5                     l5976:	
 14330                           
 14331                           ;main.c: 418:         _delay((unsigned long)((1)*(1000000/4000.0)));
 14332  0FB5  3053               	movlw	83
 14333  0FB6                     u3417:	
 14334  0FB6  0B89               	decfsz	9,f
 14335  0FB7  2FB6               	goto	u3417
 14336  0FB8  0000               	nop
 14337  0FB9                     l5978:	
 14338                           
 14339                           ;main.c: 417:     while(!ADCC_IsConversionDone()){
 14340  0FB9  318D  2589  318F   	fcall	_ADCC_IsConversionDone
 14341  0FBC  3A00               	xorlw	0
 14342  0FBD  1903               	skipnz
 14343  0FBE  2FC0               	goto	u3021
 14344  0FBF  2FC1               	goto	u3020
 14345  0FC0                     u3021:	
 14346  0FC0  2FB5               	goto	l5976
 14347  0FC1                     u3020:	
 14348  0FC1                     l5980:	
 14349                           
 14350                           ;main.c: 421:     return ADCC_GetConversionResult();
 14351  0FC1  318D  25C8  318F   	fcall	_ADCC_GetConversionResult
 14352  0FC4  0020               	movlb	0	; select bank0
 14353  0FC5  0846               	movf	?_ADCC_GetConversionResult+1,w
 14354  0FC6  00C8               	movwf	?_ADC_read+1
 14355  0FC7  0845               	movf	?_ADCC_GetConversionResult,w
 14356  0FC8  00C7               	movwf	?_ADC_read
 14357  0FC9                     l1296:	
 14358  0FC9  0008               	return
 14359  0FCA                     __end_of_ADC_read:	
 14360                           
 14361                           	psect	text39
 14362  0DAF                     __ptext39:	
 14363 ;; *************** function _ADCC_StartConversion *****************
 14364 ;; Defined at:
 14365 ;;		line 106 in file "mcc_generated_files/adcc.c"
 14366 ;; Parameters:    Size  Location     Type
 14367 ;;  channel         1    wreg     enum E12246
 14368 ;; Auto vars:     Size  Location     Type
 14369 ;;  channel         1    3[BANK0 ] enum E12246
 14370 ;; Return value:  Size  Location     Type
 14371 ;;                  1    wreg      void 
 14372 ;; Registers used:
 14373 ;;		wreg
 14374 ;; Tracked objects:
 14375 ;;		On entry : 0/0
 14376 ;;		On exit  : 0/0
 14377 ;;		Unchanged: 0/0
 14378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14380 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14382 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14383 ;;Total ram usage:        1 bytes
 14384 ;; Hardware stack levels used:    1
 14385 ;; Hardware stack levels required when called:    6
 14386 ;; This function calls:
 14387 ;;		Nothing
 14388 ;; This function is called by:
 14389 ;;		_ADC_read
 14390 ;; This function uses a non-reentrant model
 14391 ;;
 14392                           
 14393                           
 14394                           ;psect for function _ADCC_StartConversion
 14395  0DAF                     _ADCC_StartConversion:	
 14396                           
 14397                           ;incstack = 0
 14398                           ; Regs used in _ADCC_StartConversion: [wreg]
 14399                           ;ADCC_StartConversion@channel stored from wreg
 14400  0DAF  0020               	movlb	0	; select bank0
 14401  0DB0  00C5               	movwf	ADCC_StartConversion@channel
 14402  0DB1                     l5826:	
 14403                           
 14404                           ;mcc_generated_files/adcc.c: 106: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 107: {;mcc_generated_files/adcc.c: 109:     ADPCH = channel;
 14405  0DB1  0845               	movf	ADCC_StartConversion@channel,w
 14406  0DB2  0021               	movlb	1	; select bank1
 14407  0DB3  009E               	movwf	30	;volatile
 14408  0DB4                     l5828:	
 14409                           
 14410                           ;mcc_generated_files/adcc.c: 112:     ADCON0bits.ADON = 1;
 14411  0DB4  1793               	bsf	19,7	;volatile
 14412  0DB5                     l5830:	
 14413                           
 14414                           ;mcc_generated_files/adcc.c: 115:     ADCON0bits.ADGO = 1;
 14415  0DB5  1413               	bsf	19,0	;volatile
 14416  0DB6                     l760:	
 14417  0DB6  0008               	return
 14418  0DB7                     __end_of_ADCC_StartConversion:	
 14419                           
 14420                           	psect	text40
 14421  0D89                     __ptext40:	
 14422 ;; *************** function _ADCC_IsConversionDone *****************
 14423 ;; Defined at:
 14424 ;;		line 118 in file "mcc_generated_files/adcc.c"
 14425 ;; Parameters:    Size  Location     Type
 14426 ;;		None
 14427 ;; Auto vars:     Size  Location     Type
 14428 ;;		None
 14429 ;; Return value:  Size  Location     Type
 14430 ;;                  1    wreg      _Bool 
 14431 ;; Registers used:
 14432 ;;		wreg, status,0
 14433 ;; Tracked objects:
 14434 ;;		On entry : 0/0
 14435 ;;		On exit  : 0/0
 14436 ;;		Unchanged: 0/0
 14437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14442 ;;Total ram usage:        0 bytes
 14443 ;; Hardware stack levels used:    1
 14444 ;; Hardware stack levels required when called:    6
 14445 ;; This function calls:
 14446 ;;		Nothing
 14447 ;; This function is called by:
 14448 ;;		_ADC_read
 14449 ;; This function uses a non-reentrant model
 14450 ;;
 14451                           
 14452                           
 14453                           ;psect for function _ADCC_IsConversionDone
 14454  0D89                     _ADCC_IsConversionDone:	
 14455  0D89                     l5832:	
 14456                           ;incstack = 0
 14457                           ; Regs used in _ADCC_IsConversionDone: [wreg+status,0]
 14458                           
 14459                           
 14460                           ;mcc_generated_files/adcc.c: 121:     return ((unsigned char)(!ADCON0bits.ADGO));
 14461  0D89  1003               	clrc
 14462  0D8A  0021               	movlb	1	; select bank1
 14463  0D8B  1C13               	btfss	19,0	;volatile
 14464  0D8C  1403               	setc
 14465  0D8D  3000               	movlw	0
 14466  0D8E  3D09               	addwfc	9,w
 14467  0D8F                     l763:	
 14468  0D8F  0008               	return
 14469  0D90                     __end_of_ADCC_IsConversionDone:	
 14470                           
 14471                           	psect	text41
 14472  0DC8                     __ptext41:	
 14473 ;; *************** function _ADCC_GetConversionResult *****************
 14474 ;; Defined at:
 14475 ;;		line 124 in file "mcc_generated_files/adcc.c"
 14476 ;; Parameters:    Size  Location     Type
 14477 ;;		None
 14478 ;; Auto vars:     Size  Location     Type
 14479 ;;		None
 14480 ;; Return value:  Size  Location     Type
 14481 ;;                  2    3[BANK0 ] unsigned short 
 14482 ;; Registers used:
 14483 ;;		wreg
 14484 ;; Tracked objects:
 14485 ;;		On entry : 0/0
 14486 ;;		On exit  : 0/0
 14487 ;;		Unchanged: 0/0
 14488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14489 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14492 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14493 ;;Total ram usage:        2 bytes
 14494 ;; Hardware stack levels used:    1
 14495 ;; Hardware stack levels required when called:    6
 14496 ;; This function calls:
 14497 ;;		Nothing
 14498 ;; This function is called by:
 14499 ;;		_ADC_read
 14500 ;; This function uses a non-reentrant model
 14501 ;;
 14502                           
 14503                           
 14504                           ;psect for function _ADCC_GetConversionResult
 14505  0DC8                     _ADCC_GetConversionResult:	
 14506  0DC8                     l5836:	
 14507                           ;incstack = 0
 14508                           ; Regs used in _ADCC_GetConversionResult: [wreg]
 14509                           
 14510                           
 14511                           ;mcc_generated_files/adcc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 14512  0DC8  0021               	movlb	1	; select bank1
 14513  0DC9  080D               	movf	13,w	;volatile
 14514  0DCA  0020               	movlb	0	; select bank0
 14515  0DCB  00C6               	movwf	?_ADCC_GetConversionResult+1
 14516  0DCC  0021               	movlb	1	; select bank1
 14517  0DCD  080C               	movf	12,w	;volatile
 14518  0DCE  0020               	movlb	0	; select bank0
 14519  0DCF  00C5               	movwf	?_ADCC_GetConversionResult
 14520  0DD0                     l766:	
 14521  0DD0  0008               	return
 14522  0DD1                     __end_of_ADCC_GetConversionResult:	
 14523                           
 14524                           	psect	intentry
 14525  0004                     __pintentry:	
 14526 ;; *************** function _INTERRUPT_InterruptManager *****************
 14527 ;; Defined at:
 14528 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14529 ;; Parameters:    Size  Location     Type
 14530 ;;		None
 14531 ;; Auto vars:     Size  Location     Type
 14532 ;;		None
 14533 ;; Return value:  Size  Location     Type
 14534 ;;                  1    wreg      void 
 14535 ;; Registers used:
 14536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14537 ;; Tracked objects:
 14538 ;;		On entry : 0/0
 14539 ;;		On exit  : 0/0
 14540 ;;		Unchanged: 0/0
 14541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14546 ;;Total ram usage:        0 bytes
 14547 ;; Hardware stack levels used:    1
 14548 ;; Hardware stack levels required when called:    5
 14549 ;; This function calls:
 14550 ;;		Absolute function
 14551 ;;		_INT_ISR
 14552 ;;		_TMR0_ISR
 14553 ;;		_TMR1_ISR
 14554 ;;		_TMR2_ISR
 14555 ;;		_i2c_ISR
 14556 ;;		_i2c_busCollisionISR
 14557 ;; This function is called by:
 14558 ;;		Interrupt level 1
 14559 ;; This function uses a non-reentrant model
 14560 ;;
 14561                           
 14562  0004                     _INTERRUPT_InterruptManager:	
 14563                           
 14564                           ;incstack = 0
 14565  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 14566                           
 14567                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14568  0005  3180               	pagesel	$
 14569  0006                     i1l5258:	
 14570                           
 14571                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.INTE == 1 && PIR0bits.INTF
      +                           == 1)
 14572  0006  002E               	movlb	14	; select bank14
 14573  0007  1C16               	btfss	22,0	;volatile
 14574  0008  280A               	goto	u253_21
 14575  0009  280B               	goto	u253_20
 14576  000A                     u253_21:	
 14577  000A  2813               	goto	i1l378
 14578  000B                     u253_20:	
 14579  000B                     i1l5260:	
 14580  000B  1C0C               	btfss	12,0	;volatile
 14581  000C  280E               	goto	u254_21
 14582  000D  280F               	goto	u254_20
 14583  000E                     u254_21:	
 14584  000E  2813               	goto	i1l378
 14585  000F                     u254_20:	
 14586  000F                     i1l5262:	
 14587                           
 14588                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         INT_ISR();
 14589  000F  318D  2558  3180   	fcall	_INT_ISR
 14590                           
 14591                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 14592  0012  2859               	goto	i1l392
 14593  0013                     i1l378:	
 14594                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.TMR0IE == 1 && PIR0bi
      +                          ts.TMR0IF == 1)
 14595                           
 14596  0013  1E96               	btfss	22,5	;volatile
 14597  0014  2816               	goto	u255_21
 14598  0015  2817               	goto	u255_20
 14599  0016                     u255_21:	
 14600  0016  281F               	goto	i1l380
 14601  0017                     u255_20:	
 14602  0017                     i1l5264:	
 14603  0017  1E8C               	btfss	12,5	;volatile
 14604  0018  281A               	goto	u256_21
 14605  0019  281B               	goto	u256_20
 14606  001A                     u256_21:	
 14607  001A  281F               	goto	i1l380
 14608  001B                     u256_20:	
 14609  001B                     i1l5266:	
 14610                           
 14611                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
 14612  001B  318E  263E  3180   	fcall	_TMR0_ISR
 14613                           
 14614                           ;mcc_generated_files/interrupt_manager.c: 62:     }
 14615  001E  2859               	goto	i1l392
 14616  001F                     i1l380:	
 14617                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
 14618                           
 14619  001F  1F0B               	btfss	11,6	;volatile
 14620  0020  2822               	goto	u257_21
 14621  0021  2823               	goto	u257_20
 14622  0022                     u257_21:	
 14623  0022  2859               	goto	i1l386
 14624  0023                     u257_20:	
 14625  0023                     i1l5268:	
 14626                           
 14627                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 14628  0023  1C99               	btfss	25,1	;volatile
 14629  0024  2826               	goto	u258_21
 14630  0025  2827               	goto	u258_20
 14631  0026                     u258_21:	
 14632  0026  2832               	goto	i1l383
 14633  0027                     u258_20:	
 14634  0027                     i1l5270:	
 14635  0027  1C8F               	btfss	15,1	;volatile
 14636  0028  282A               	goto	u259_21
 14637  0029  282B               	goto	u259_20
 14638  002A                     u259_21:	
 14639  002A  2832               	goto	i1l383
 14640  002B                     u259_20:	
 14641  002B                     i1l5272:	
 14642                           
 14643                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             i2c1_driver_busCollisionISR();
 14644  002B  0020               	movlb	0	; select bank0
 14645  002C  0835               	movf	_i2c1_driver_busCollisionISR+1,w
 14646  002D  008A               	movwf	10
 14647  002E  0834               	movf	_i2c1_driver_busCollisionISR,w
 14648  002F  000A               	callw
 14649  0030  3180               	pagesel	$
 14650                           
 14651                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 14652  0031  2859               	goto	i1l392
 14653  0032                     i1l383:	
 14654                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 14655                           
 14656  0032  1C19               	btfss	25,0	;volatile
 14657  0033  2835               	goto	u260_21
 14658  0034  2836               	goto	u260_20
 14659  0035                     u260_21:	
 14660  0035  2841               	goto	i1l385
 14661  0036                     u260_20:	
 14662  0036                     i1l5274:	
 14663  0036  1C0F               	btfss	15,0	;volatile
 14664  0037  2839               	goto	u261_21
 14665  0038  283A               	goto	u261_20
 14666  0039                     u261_21:	
 14667  0039  2841               	goto	i1l385
 14668  003A                     u261_20:	
 14669  003A                     i1l5276:	
 14670                           
 14671                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             i2c1_driver_i2cISR();
 14672  003A  0020               	movlb	0	; select bank0
 14673  003B  0833               	movf	_i2c1_driver_i2cISR+1,w
 14674  003C  008A               	movwf	10
 14675  003D  0832               	movf	_i2c1_driver_i2cISR,w
 14676  003E  000A               	callw
 14677  003F  3180               	pagesel	$
 14678                           
 14679                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 14680  0040  2859               	goto	i1l392
 14681  0041                     i1l385:	
 14682                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE4bits.TMR1IE == 1 && PI
      +                          R4bits.TMR1IF == 1)
 14683                           
 14684  0041  1C1A               	btfss	26,0	;volatile
 14685  0042  2844               	goto	u262_21
 14686  0043  2845               	goto	u262_20
 14687  0044                     u262_21:	
 14688  0044  284D               	goto	i1l387
 14689  0045                     u262_20:	
 14690  0045                     i1l5278:	
 14691  0045  1C10               	btfss	16,0	;volatile
 14692  0046  2848               	goto	u263_21
 14693  0047  2849               	goto	u263_20
 14694  0048                     u263_21:	
 14695  0048  284D               	goto	i1l387
 14696  0049                     u263_20:	
 14697  0049                     i1l5280:	
 14698                           
 14699                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             TMR1_ISR();
 14700  0049  318F  2737  3180   	fcall	_TMR1_ISR
 14701                           
 14702                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 14703  004C  2859               	goto	i1l392
 14704  004D                     i1l387:	
 14705                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE4bits.TMR2IE == 1 && PI
      +                          R4bits.TMR2IF == 1)
 14706                           
 14707  004D  1C9A               	btfss	26,1	;volatile
 14708  004E  2850               	goto	u264_21
 14709  004F  2851               	goto	u264_20
 14710  0050                     u264_21:	
 14711  0050  2859               	goto	i1l386
 14712  0051                     u264_20:	
 14713  0051                     i1l5282:	
 14714  0051  1C90               	btfss	16,1	;volatile
 14715  0052  2854               	goto	u265_21
 14716  0053  2855               	goto	u265_20
 14717  0054                     u265_21:	
 14718  0054  2859               	goto	i1l386
 14719  0055                     u265_20:	
 14720  0055                     i1l5284:	
 14721                           
 14722                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             TMR2_ISR();
 14723  0055  318E  264D  3180   	fcall	_TMR2_ISR
 14724                           
 14725                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 14726  0058  2859               	goto	i1l392
 14727  0059                     i1l386:	
 14728  0059                     i1l392:	
 14729  0059  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 14730  005A  0009               	retfie
 14731  005B                     __end_of_INTERRUPT_InterruptManager:	
 14732                           
 14733                           	psect	text43
 14734  0D27                     __ptext43:	
 14735 ;; *************** function _i2c_busCollisionISR *****************
 14736 ;; Defined at:
 14737 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 14738 ;; Parameters:    Size  Location     Type
 14739 ;;		None
 14740 ;; Auto vars:     Size  Location     Type
 14741 ;;		None
 14742 ;; Return value:  Size  Location     Type
 14743 ;;                  1    wreg      void 
 14744 ;; Registers used:
 14745 ;;		status,2, status,0, pclath, cstack
 14746 ;; Tracked objects:
 14747 ;;		On entry : 0/0
 14748 ;;		On exit  : 0/0
 14749 ;;		Unchanged: 0/0
 14750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14755 ;;Total ram usage:        0 bytes
 14756 ;; Hardware stack levels used:    1
 14757 ;; Hardware stack levels required when called:    1
 14758 ;; This function calls:
 14759 ;;		_i2c1_driver_clearBusCollision
 14760 ;; This function is called by:
 14761 ;;		_i2c_open
 14762 ;;		_INTERRUPT_InterruptManager
 14763 ;; This function uses a non-reentrant model
 14764 ;;
 14765                           
 14766                           
 14767                           ;psect for function _i2c_busCollisionISR
 14768  0D27                     _i2c_busCollisionISR:	
 14769  0D27                     i1l4944:	
 14770                           ;incstack = 0
 14771                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 14772                           
 14773                           
 14774                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
 14775  0D27  318D  2519  318D   	fcall	_i2c1_driver_clearBusCollision
 14776  0D2A                     i1l213:	
 14777  0D2A  0008               	return
 14778  0D2B                     __end_of_i2c_busCollisionISR:	
 14779                           
 14780                           	psect	text44
 14781  0D19                     __ptext44:	
 14782 ;; *************** function _i2c1_driver_clearBusCollision *****************
 14783 ;; Defined at:
 14784 ;;		line 254 in file "mcc_generated_files/i2c1_driver.c"
 14785 ;; Parameters:    Size  Location     Type
 14786 ;;		None
 14787 ;; Auto vars:     Size  Location     Type
 14788 ;;		None
 14789 ;; Return value:  Size  Location     Type
 14790 ;;                  1    wreg      void 
 14791 ;; Registers used:
 14792 ;;		None
 14793 ;; Tracked objects:
 14794 ;;		On entry : 0/0
 14795 ;;		On exit  : 0/0
 14796 ;;		Unchanged: 0/0
 14797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14802 ;;Total ram usage:        0 bytes
 14803 ;; Hardware stack levels used:    1
 14804 ;; This function calls:
 14805 ;;		Nothing
 14806 ;; This function is called by:
 14807 ;;		_i2c_busCollisionISR
 14808 ;; This function uses a non-reentrant model
 14809 ;;
 14810                           
 14811                           
 14812                           ;psect for function _i2c1_driver_clearBusCollision
 14813  0D19                     _i2c1_driver_clearBusCollision:	
 14814  0D19                     i1l4576:	
 14815                           ;incstack = 0
 14816                           ; Regs used in _i2c1_driver_clearBusCollision: []
 14817                           
 14818                           
 14819                           ;mcc_generated_files/i2c1_driver.c: 256:     PIR3bits.BCL1IF = 0;
 14820  0D19  002E               	movlb	14	; select bank14
 14821  0D1A  108F               	bcf	15,1	;volatile
 14822  0D1B                     i1l672:	
 14823  0D1B  0008               	return
 14824  0D1C                     __end_of_i2c1_driver_clearBusCollision:	
 14825                           
 14826                           	psect	text45
 14827  0664                     __ptext45:	
 14828 ;; *************** function _i2c_ISR *****************
 14829 ;; Defined at:
 14830 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 14831 ;; Parameters:    Size  Location     Type
 14832 ;;		None
 14833 ;; Auto vars:     Size  Location     Type
 14834 ;;		None
 14835 ;; Return value:  Size  Location     Type
 14836 ;;                  1    wreg      void 
 14837 ;; Registers used:
 14838 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14839 ;; Tracked objects:
 14840 ;;		On entry : 0/0
 14841 ;;		On exit  : 0/0
 14842 ;;		Unchanged: 0/0
 14843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14846 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14847 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14848 ;;Total ram usage:        3 bytes
 14849 ;; Hardware stack levels used:    1
 14850 ;; Hardware stack levels required when called:    4
 14851 ;; This function calls:
 14852 ;;		_do_I2C_DO_ACK
 14853 ;;		_do_I2C_DO_ADDRESS_NACK
 14854 ;;		_do_I2C_DO_NACK_RESTART
 14855 ;;		_do_I2C_DO_NACK_STOP
 14856 ;;		_do_I2C_IDLE
 14857 ;;		_do_I2C_RCEN
 14858 ;;		_do_I2C_RESET
 14859 ;;		_do_I2C_RX
 14860 ;;		_do_I2C_SEND_ADR_READ
 14861 ;;		_do_I2C_SEND_ADR_WRITE
 14862 ;;		_do_I2C_SEND_RESTART
 14863 ;;		_do_I2C_SEND_RESTART_READ
 14864 ;;		_do_I2C_SEND_RESTART_WRITE
 14865 ;;		_do_I2C_SEND_STOP
 14866 ;;		_do_I2C_TX
 14867 ;;		_do_I2C_TX_EMPTY
 14868 ;;		_i2c1_driver_isNACK
 14869 ;;		_mssp1_clearIRQ
 14870 ;; This function is called by:
 14871 ;;		_i2c_open
 14872 ;;		_i2c_poller
 14873 ;;		_INTERRUPT_InterruptManager
 14874 ;; This function uses a non-reentrant model
 14875 ;;
 14876                           
 14877                           
 14878                           ;psect for function _i2c_ISR
 14879  0664                     _i2c_ISR:	
 14880  0664                     i1l4934:	
 14881                           ;incstack = 0
 14882                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14883                           
 14884                           
 14885                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
 14886  0664  318D  2516  3186   	fcall	_mssp1_clearIRQ
 14887  0667                     i1l4936:	
 14888                           
 14889                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
 14890  0667  0021               	movlb	1	; select bank1
 14891  0668  1DA0               	btfss	_i2c_status^(0+128),3
 14892  0669  2E6B               	goto	u213_21
 14893  066A  2E6C               	goto	u213_20
 14894  066B                     u213_21:	
 14895  066B  2E79               	goto	i1l4942
 14896  066C                     u213_20:	
 14897  066C                     i1l4938:	
 14898  066C  318D  2597  3186   	fcall	_i2c1_driver_isNACK
 14899  066F  1C03               	btfss	3,0
 14900  0670  2E72               	goto	u214_21
 14901  0671  2E73               	goto	u214_20
 14902  0672                     u214_21:	
 14903  0672  2E79               	goto	i1l4942
 14904  0673                     u214_20:	
 14905  0673                     i1l4940:	
 14906                           
 14907                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
 14908  0673  300F               	movlw	15
 14909  0674  0020               	movlb	0	; select bank0
 14910  0675  00C2               	movwf	??_i2c_ISR
 14911  0676  0842               	movf	??_i2c_ISR,w
 14912  0677  0021               	movlb	1	; select bank1
 14913  0678  00A9               	movwf	(_i2c_status^(0+128)+9)
 14914  0679                     i1l4942:	
 14915                           
 14916                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
 14917  0679  0021               	movlb	1	; select bank1
 14918  067A  0829               	movf	(_i2c_status^(0+128)+9),w
 14919  067B  0020               	movlb	0	; select bank0
 14920  067C  00C2               	movwf	??_i2c_ISR
 14921  067D  01C3               	clrf	??_i2c_ISR+1
 14922  067E  35C2               	lslf	??_i2c_ISR,f
 14923  067F  0DC3               	rlf	??_i2c_ISR+1,f
 14924  0680  305C               	movlw	low (_fsmStateTable| (0+32768))
 14925  0681  0742               	addwf	??_i2c_ISR,w
 14926  0682  0084               	movwf	4
 14927  0683  3087               	movlw	high (_fsmStateTable| (0+32768))
 14928  0684  3D43               	addwfc	??_i2c_ISR+1,w
 14929  0685  0085               	movwf	5
 14930  0686  3F01               	moviw [1]fsr0
 14931  0687  008A               	movwf	10
 14932  0688  3F00               	moviw [0]fsr0
 14933  0689  000A               	callw
 14934  068A  3186               	pagesel	$
 14935  068B  0020               	movlb	0	; select bank0
 14936  068C  00C4               	movwf	??_i2c_ISR+2
 14937  068D  0844               	movf	??_i2c_ISR+2,w
 14938  068E  0021               	movlb	1	; select bank1
 14939  068F  00A9               	movwf	(_i2c_status^(0+128)+9)
 14940  0690                     i1l210:	
 14941  0690  0008               	return
 14942  0691                     __end_of_i2c_ISR:	
 14943                           
 14944                           	psect	text46
 14945  0D16                     __ptext46:	
 14946 ;; *************** function _mssp1_clearIRQ *****************
 14947 ;; Defined at:
 14948 ;;		line 54 in file "mcc_generated_files/i2c1_driver.c"
 14949 ;; Parameters:    Size  Location     Type
 14950 ;;		None
 14951 ;; Auto vars:     Size  Location     Type
 14952 ;;		None
 14953 ;; Return value:  Size  Location     Type
 14954 ;;                  1    wreg      void 
 14955 ;; Registers used:
 14956 ;;		None
 14957 ;; Tracked objects:
 14958 ;;		On entry : 0/0
 14959 ;;		On exit  : 0/0
 14960 ;;		Unchanged: 0/0
 14961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14966 ;;Total ram usage:        0 bytes
 14967 ;; Hardware stack levels used:    1
 14968 ;; This function calls:
 14969 ;;		Nothing
 14970 ;; This function is called by:
 14971 ;;		_i2c_ISR
 14972 ;;		_i2c_open
 14973 ;;		_i2c_close
 14974 ;; This function uses a non-reentrant model
 14975 ;;
 14976                           
 14977                           
 14978                           ;psect for function _mssp1_clearIRQ
 14979  0D16                     _mssp1_clearIRQ:	
 14980  0D16                     i1l4392:	
 14981                           ;incstack = 0
 14982                           ; Regs used in _mssp1_clearIRQ: []
 14983                           
 14984                           
 14985                           ;mcc_generated_files/i2c1_driver.c: 56:         SSP1CON1 = 0x28;
 14986  0D16  002E               	movlb	14	; select bank14
 14987  0D17  100F               	bcf	15,0	;volatile
 14988  0D18                     i1l576:	
 14989  0D18  0008               	return
 14990  0D19                     __end_of_mssp1_clearIRQ:	
 14991                           
 14992                           	psect	text47
 14993  04D8                     __ptext47:	
 14994 ;; *************** function _do_I2C_RX *****************
 14995 ;; Defined at:
 14996 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 14997 ;; Parameters:    Size  Location     Type
 14998 ;;		None
 14999 ;; Auto vars:     Size  Location     Type
 15000 ;;		None
 15001 ;; Return value:  Size  Location     Type
 15002 ;;                  1    wreg      enum E12722
 15003 ;; Registers used:
 15004 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15005 ;; Tracked objects:
 15006 ;;		On entry : 0/0
 15007 ;;		On exit  : 0/0
 15008 ;;		Unchanged: 0/0
 15009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15012 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15013 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15014 ;;Total ram usage:        3 bytes
 15015 ;; Hardware stack levels used:    1
 15016 ;; Hardware stack levels required when called:    3
 15017 ;; This function calls:
 15018 ;;		Absolute function
 15019 ;;		_do_I2C_DO_NACK_RESTART
 15020 ;;		_do_I2C_DO_NACK_STOP
 15021 ;;		_i2c1_driver_getRXData
 15022 ;;		_i2c1_driver_sendACK
 15023 ;;		_i2c_restartWrite
 15024 ;;		_rd1RegCompleteHandler
 15025 ;;		_rd2RegCompleteHandler
 15026 ;;		_rdBlkRegCompleteHandler
 15027 ;;		_returnReset
 15028 ;;		_returnStop
 15029 ;;		_wr1RegCompleteHandler
 15030 ;;		_wr2RegCompleteHandler
 15031 ;; This function is called by:
 15032 ;;		_i2c_ISR
 15033 ;; This function uses a non-reentrant model
 15034 ;;
 15035                           
 15036                           
 15037                           ;psect for function _do_I2C_RX
 15038  04D8                     _do_I2C_RX:	
 15039  04D8                     i1l4518:	
 15040                           ;incstack = 0
 15041                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15042                           
 15043                           
 15044                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
 15045  04D8  318D  2510  3184   	fcall	_i2c1_driver_getRXData
 15046  04DB  00FA               	movwf	??_do_I2C_RX
 15047  04DC  0021               	movlb	1	; select bank1
 15048  04DD  0822               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 15049  04DE  0086               	movwf	6
 15050  04DF  0187               	clrf	7
 15051  04E0  087A               	movf	??_do_I2C_RX,w
 15052  04E1  0081               	movwf	1
 15053  04E2                     i1l4520:	
 15054  04E2  3001               	movlw	1
 15055  04E3  00FA               	movwf	??_do_I2C_RX
 15056  04E4  087A               	movf	??_do_I2C_RX,w
 15057  04E5  07A2               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 15058  04E6                     i1l4522:	
 15059                           
 15060                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
 15061  04E6  3001               	movlw	1
 15062  04E7  02A3               	subwf	(_i2c_status^(0+128)+3),f
 15063  04E8  3000               	movlw	0
 15064  04E9  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 15065  04EA  0823               	movf	(_i2c_status^(0+128)+3),w
 15066  04EB  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 15067  04EC  1903               	btfsc	3,2
 15068  04ED  2CEF               	goto	u192_21
 15069  04EE  2CF0               	goto	u192_20
 15070  04EF                     u192_21:	
 15071  04EF  2CF5               	goto	i1l185
 15072  04F0                     u192_20:	
 15073  04F0                     i1l4524:	
 15074                           
 15075                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
 15076  04F0  318D  251F  3184   	fcall	_i2c1_driver_sendACK
 15077  04F3                     i1l4526:	
 15078                           
 15079                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
 15080  04F3  3005               	movlw	5
 15081  04F4  2D21               	goto	i1l186
 15082  04F5                     i1l185:	
 15083                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
 15084                           
 15085                           
 15086                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
 15087  04F5  1520               	bsf	_i2c_status^(0+128),2
 15088                           
 15089                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 15090  04F6  2CFF               	goto	i1l4542
 15091  04F7                     i1l4532:	
 15092                           
 15093                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
 15094  04F7  318D  2553  3184   	fcall	_do_I2C_DO_NACK_RESTART
 15095  04FA  2D21               	goto	i1l186
 15096  04FB                     i1l4536:	
 15097                           
 15098                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
 15099  04FB  318D  254E  3184   	fcall	_do_I2C_DO_NACK_STOP
 15100  04FE  2D21               	goto	i1l186
 15101  04FF                     i1l4542:	
 15102  04FF  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 15103  0500  00FA               	movwf	??_do_I2C_RX
 15104  0501  087A               	movf	??_do_I2C_RX,w
 15105  0502  00F9               	movwf	rdBlkRegCompleteHandler@p
 15106  0503  300B               	movlw	11
 15107  0504  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 15108  0505  0086               	movwf	6
 15109  0506  0187               	clrf	7
 15110  0507  3F41               	moviw [1]fsr1
 15111  0508  008A               	movwf	10
 15112  0509  3F40               	moviw [0]fsr1
 15113  050A  000A               	callw
 15114  050B  3184               	pagesel	$
 15115  050C  00FB               	movwf	??_do_I2C_RX+1
 15116  050D  01FC               	clrf	??_do_I2C_RX+2
 15117                           
 15118                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15119                           ; Switch size 1, requested type "simple"
 15120                           ; Number of cases is 1, Range of values is 0 to 0
 15121                           ; switch strategies available:
 15122                           ; Name         Instructions Cycles
 15123                           ; simple_byte            4     3 (average)
 15124                           ; direct_byte            8     6 (fixed)
 15125                           ; jumptable            260     6 (fixed)
 15126                           ;	Chosen strategy is simple_byte
 15127  050E  087C               	movf	??_do_I2C_RX+2,w
 15128  050F  3A00               	xorlw	0	; case 0
 15129  0510  1903               	skipnz
 15130  0511  2D13               	goto	i1l6350
 15131  0512  2CFB               	goto	i1l4536
 15132  0513                     i1l6350:	
 15133                           
 15134                           ; Switch size 1, requested type "simple"
 15135                           ; Number of cases is 4, Range of values is 1 to 4
 15136                           ; switch strategies available:
 15137                           ; Name         Instructions Cycles
 15138                           ; simple_byte           13     7 (average)
 15139                           ; direct_byte           17     9 (fixed)
 15140                           ; jumptable            263     9 (fixed)
 15141                           ;	Chosen strategy is simple_byte
 15142  0513  087B               	movf	??_do_I2C_RX+1,w
 15143  0514  3A01               	xorlw	1	; case 1
 15144  0515  1903               	skipnz
 15145  0516  2CFB               	goto	i1l4536
 15146  0517  3A03               	xorlw	3	; case 2
 15147  0518  1903               	skipnz
 15148  0519  2CF7               	goto	i1l4532
 15149  051A  3A01               	xorlw	1	; case 3
 15150  051B  1903               	skipnz
 15151  051C  2CF7               	goto	i1l4532
 15152  051D  3A07               	xorlw	7	; case 4
 15153  051E  1903               	skipnz
 15154  051F  2CFB               	goto	i1l4536
 15155  0520  2CFB               	goto	i1l4536
 15156  0521                     i1l186:	
 15157  0521  0008               	return
 15158  0522                     __end_of_do_I2C_RX:	
 15159                           
 15160                           	psect	text48
 15161  039D                     __ptext48:	
 15162 ;; *************** function _do_I2C_TX *****************
 15163 ;; Defined at:
 15164 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 15165 ;; Parameters:    Size  Location     Type
 15166 ;;		None
 15167 ;; Auto vars:     Size  Location     Type
 15168 ;;		None
 15169 ;; Return value:  Size  Location     Type
 15170 ;;                  1    wreg      enum E12722
 15171 ;; Registers used:
 15172 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15173 ;; Tracked objects:
 15174 ;;		On entry : 0/0
 15175 ;;		On exit  : 0/0
 15176 ;;		Unchanged: 0/0
 15177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15180 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15181 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15182 ;;Total ram usage:        3 bytes
 15183 ;; Hardware stack levels used:    1
 15184 ;; Hardware stack levels required when called:    3
 15185 ;; This function calls:
 15186 ;;		Absolute function
 15187 ;;		_do_I2C_SEND_RESTART_READ
 15188 ;;		_do_I2C_SEND_RESTART_WRITE
 15189 ;;		_do_I2C_SEND_STOP
 15190 ;;		_i2c1_driver_TXData
 15191 ;;		_i2c1_driver_isNACK
 15192 ;;		_i2c_restartWrite
 15193 ;;		_rd1RegCompleteHandler
 15194 ;;		_rd2RegCompleteHandler
 15195 ;;		_rdBlkRegCompleteHandler
 15196 ;;		_returnReset
 15197 ;;		_returnStop
 15198 ;;		_wr1RegCompleteHandler
 15199 ;;		_wr2RegCompleteHandler
 15200 ;; This function is called by:
 15201 ;;		_i2c_ISR
 15202 ;; This function uses a non-reentrant model
 15203 ;;
 15204                           
 15205                           
 15206                           ;psect for function _do_I2C_TX
 15207  039D                     _do_I2C_TX:	
 15208  039D                     i1l4484:	
 15209                           ;incstack = 0
 15210                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15211                           
 15212                           
 15213                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
 15214  039D  318D  2597  3183   	fcall	_i2c1_driver_isNACK
 15215  03A0  1C03               	btfss	3,0
 15216  03A1  2BA3               	goto	u190_21
 15217  03A2  2BA4               	goto	u190_20
 15218  03A3                     u190_21:	
 15219  03A3  2BD4               	goto	i1l169
 15220  03A4                     u190_20:	
 15221  03A4  2BB1               	goto	i1l4502
 15222  03A5                     i1l4488:	
 15223                           
 15224                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
 15225  03A5  318D  2535  3183   	fcall	_do_I2C_SEND_RESTART_READ
 15226  03A8  2BF0               	goto	i1l172
 15227  03A9                     i1l4492:	
 15228                           
 15229                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
 15230  03A9  318D  253A  3183   	fcall	_do_I2C_SEND_RESTART_WRITE
 15231  03AC  2BF0               	goto	i1l172
 15232  03AD                     i1l4496:	
 15233                           
 15234                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
 15235  03AD  318D  2544  3183   	fcall	_do_I2C_SEND_STOP
 15236  03B0  2BF0               	goto	i1l172
 15237  03B1                     i1l4502:	
 15238  03B1  0021               	movlb	1	; select bank1
 15239  03B2  083A               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 15240  03B3  00FA               	movwf	??_do_I2C_TX
 15241  03B4  087A               	movf	??_do_I2C_TX,w
 15242  03B5  00F9               	movwf	rdBlkRegCompleteHandler@p
 15243  03B6  3011               	movlw	17
 15244  03B7  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 15245  03B8  0086               	movwf	6
 15246  03B9  0187               	clrf	7
 15247  03BA  3F41               	moviw [1]fsr1
 15248  03BB  008A               	movwf	10
 15249  03BC  3F40               	moviw [0]fsr1
 15250  03BD  000A               	callw
 15251  03BE  3183               	pagesel	$
 15252  03BF  00FB               	movwf	??_do_I2C_TX+1
 15253  03C0  01FC               	clrf	??_do_I2C_TX+2
 15254                           
 15255                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15256                           ; Switch size 1, requested type "simple"
 15257                           ; Number of cases is 1, Range of values is 0 to 0
 15258                           ; switch strategies available:
 15259                           ; Name         Instructions Cycles
 15260                           ; simple_byte            4     3 (average)
 15261                           ; direct_byte            8     6 (fixed)
 15262                           ; jumptable            260     6 (fixed)
 15263                           ;	Chosen strategy is simple_byte
 15264  03C1  087C               	movf	??_do_I2C_TX+2,w
 15265  03C2  3A00               	xorlw	0	; case 0
 15266  03C3  1903               	skipnz
 15267  03C4  2BC6               	goto	i1l6352
 15268  03C5  2BAD               	goto	i1l4496
 15269  03C6                     i1l6352:	
 15270                           
 15271                           ; Switch size 1, requested type "simple"
 15272                           ; Number of cases is 4, Range of values is 1 to 4
 15273                           ; switch strategies available:
 15274                           ; Name         Instructions Cycles
 15275                           ; simple_byte           13     7 (average)
 15276                           ; direct_byte           17     9 (fixed)
 15277                           ; jumptable            263     9 (fixed)
 15278                           ;	Chosen strategy is simple_byte
 15279  03C6  087B               	movf	??_do_I2C_TX+1,w
 15280  03C7  3A01               	xorlw	1	; case 1
 15281  03C8  1903               	skipnz
 15282  03C9  2BAD               	goto	i1l4496
 15283  03CA  3A03               	xorlw	3	; case 2
 15284  03CB  1903               	skipnz
 15285  03CC  2BA5               	goto	i1l4488
 15286  03CD  3A01               	xorlw	1	; case 3
 15287  03CE  1903               	skipnz
 15288  03CF  2BA9               	goto	i1l4492
 15289  03D0  3A07               	xorlw	7	; case 4
 15290  03D1  1903               	skipnz
 15291  03D2  2BAD               	goto	i1l4496
 15292  03D3  2BAD               	goto	i1l4496
 15293  03D4                     i1l169:	
 15294                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
 15295                           
 15296                           
 15297                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
 15298  03D4  0021               	movlb	1	; select bank1
 15299  03D5  11A0               	bcf	_i2c_status^(0+128),3
 15300  03D6                     i1l4504:	
 15301                           
 15302                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
 15303  03D6  3002               	movlw	2
 15304  03D7  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 15305  03D8  0086               	movwf	6
 15306  03D9  0187               	clrf	7
 15307  03DA  3F40               	moviw [0]fsr1
 15308  03DB  0084               	movwf	4
 15309  03DC  0185               	clrf	5
 15310  03DD  0A81               	incf	1,f
 15311  03DE  0800               	movf	0,w
 15312  03DF  318D  252B  3183   	fcall	_i2c1_driver_TXData
 15313  03E2                     i1l4506:	
 15314                           
 15315                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
 15316  03E2  3001               	movlw	1
 15317  03E3  0021               	movlb	1	; select bank1
 15318  03E4  02A3               	subwf	(_i2c_status^(0+128)+3),f
 15319  03E5  3000               	movlw	0
 15320  03E6  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 15321  03E7  0823               	movf	(_i2c_status^(0+128)+3),w
 15322  03E8  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 15323  03E9  1D03               	btfss	3,2
 15324  03EA  2BEC               	goto	u191_21
 15325  03EB  2BED               	goto	u191_20
 15326  03EC                     u191_21:	
 15327  03EC  2BEF               	goto	i1l4510
 15328  03ED                     u191_20:	
 15329  03ED                     i1l4508:	
 15330  03ED  3006               	movlw	6
 15331  03EE  2BF0               	goto	i1l172
 15332  03EF                     i1l4510:	
 15333  03EF  3003               	movlw	3
 15334  03F0                     i1l172:	
 15335  03F0  0008               	return
 15336  03F1                     __end_of_do_I2C_TX:	
 15337                           
 15338                           	psect	text49
 15339  06BE                     __ptext49:	
 15340 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 15341 ;; Defined at:
 15342 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 15343 ;; Parameters:    Size  Location     Type
 15344 ;;		None
 15345 ;; Auto vars:     Size  Location     Type
 15346 ;;		None
 15347 ;; Return value:  Size  Location     Type
 15348 ;;                  1    wreg      enum E12722
 15349 ;; Registers used:
 15350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15351 ;; Tracked objects:
 15352 ;;		On entry : 0/0
 15353 ;;		On exit  : 0/0
 15354 ;;		Unchanged: 0/0
 15355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15358 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15359 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15360 ;;Total ram usage:        3 bytes
 15361 ;; Hardware stack levels used:    1
 15362 ;; Hardware stack levels required when called:    3
 15363 ;; This function calls:
 15364 ;;		Absolute function
 15365 ;;		_do_I2C_SEND_RESTART
 15366 ;;		_do_I2C_SEND_STOP
 15367 ;;		_i2c_restartWrite
 15368 ;;		_rd1RegCompleteHandler
 15369 ;;		_rd2RegCompleteHandler
 15370 ;;		_rdBlkRegCompleteHandler
 15371 ;;		_returnReset
 15372 ;;		_returnStop
 15373 ;;		_wr1RegCompleteHandler
 15374 ;;		_wr2RegCompleteHandler
 15375 ;; This function is called by:
 15376 ;;		_i2c_ISR
 15377 ;; This function uses a non-reentrant model
 15378 ;;
 15379                           
 15380                           
 15381                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 15382  06BE                     _do_I2C_DO_ADDRESS_NACK:	
 15383  06BE                     i1l4462:	
 15384                           ;incstack = 0
 15385                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15386                           
 15387                           
 15388                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
 15389  06BE  0021               	movlb	1	; select bank1
 15390  06BF  11A0               	bcf	_i2c_status^(0+128),3
 15391  06C0                     i1l4464:	
 15392                           
 15393                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
 15394  06C0  3002               	movlw	2
 15395  06C1  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 15396  06C2  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 15397  06C3  00AA               	movwf	(_i2c_status^(0+128)+10)
 15398                           
 15399                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
 15400  06C4  2ECD               	goto	i1l4476
 15401  06C5                     i1l4466:	
 15402                           
 15403                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
 15404  06C5  318D  253F  3186   	fcall	_do_I2C_SEND_RESTART
 15405  06C8  2EE9               	goto	i1l164
 15406  06C9                     i1l4470:	
 15407                           
 15408                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
 15409  06C9  318D  2544  3186   	fcall	_do_I2C_SEND_STOP
 15410  06CC  2EE9               	goto	i1l164
 15411  06CD                     i1l4476:	
 15412  06CD  0839               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 15413  06CE  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 15414  06CF  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 15415  06D0  00F9               	movwf	rdBlkRegCompleteHandler@p
 15416  06D1  300F               	movlw	15
 15417  06D2  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 15418  06D3  0086               	movwf	6
 15419  06D4  0187               	clrf	7
 15420  06D5  3F41               	moviw [1]fsr1
 15421  06D6  008A               	movwf	10
 15422  06D7  3F40               	moviw [0]fsr1
 15423  06D8  000A               	callw
 15424  06D9  3186               	pagesel	$
 15425  06DA  00FB               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
 15426  06DB  01FC               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
 15427                           
 15428                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15429                           ; Switch size 1, requested type "simple"
 15430                           ; Number of cases is 1, Range of values is 0 to 0
 15431                           ; switch strategies available:
 15432                           ; Name         Instructions Cycles
 15433                           ; simple_byte            4     3 (average)
 15434                           ; direct_byte            8     6 (fixed)
 15435                           ; jumptable            260     6 (fixed)
 15436                           ;	Chosen strategy is simple_byte
 15437  06DC  087C               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
 15438  06DD  3A00               	xorlw	0	; case 0
 15439  06DE  1903               	skipnz
 15440  06DF  2EE1               	goto	i1l6354
 15441  06E0  2EC9               	goto	i1l4470
 15442  06E1                     i1l6354:	
 15443                           
 15444                           ; Switch size 1, requested type "simple"
 15445                           ; Number of cases is 2, Range of values is 2 to 3
 15446                           ; switch strategies available:
 15447                           ; Name         Instructions Cycles
 15448                           ; simple_byte            7     4 (average)
 15449                           ; direct_byte           13     9 (fixed)
 15450                           ; jumptable            263     9 (fixed)
 15451                           ;	Chosen strategy is simple_byte
 15452  06E1  087B               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
 15453  06E2  3A02               	xorlw	2	; case 2
 15454  06E3  1903               	skipnz
 15455  06E4  2EC5               	goto	i1l4466
 15456  06E5  3A01               	xorlw	1	; case 3
 15457  06E6  1903               	skipnz
 15458  06E7  2EC5               	goto	i1l4466
 15459  06E8  2EC9               	goto	i1l4470
 15460  06E9                     i1l164:	
 15461  06E9  0008               	return
 15462  06EA                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 15463                           
 15464                           	psect	text50
 15465  0D53                     __ptext50:	
 15466 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 15467 ;; Defined at:
 15468 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 15469 ;; Parameters:    Size  Location     Type
 15470 ;;		None
 15471 ;; Auto vars:     Size  Location     Type
 15472 ;;		None
 15473 ;; Return value:  Size  Location     Type
 15474 ;;                  1    wreg      enum E12722
 15475 ;; Registers used:
 15476 ;;		wreg, status,2, status,0, pclath, cstack
 15477 ;; Tracked objects:
 15478 ;;		On entry : 0/0
 15479 ;;		On exit  : 0/0
 15480 ;;		Unchanged: 0/0
 15481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15486 ;;Total ram usage:        0 bytes
 15487 ;; Hardware stack levels used:    1
 15488 ;; Hardware stack levels required when called:    1
 15489 ;; This function calls:
 15490 ;;		_i2c1_driver_sendNACK
 15491 ;; This function is called by:
 15492 ;;		_do_I2C_RX
 15493 ;;		_i2c_ISR
 15494 ;; This function uses a non-reentrant model
 15495 ;;
 15496                           
 15497                           
 15498                           ;psect for function _do_I2C_DO_NACK_RESTART
 15499  0D53                     _do_I2C_DO_NACK_RESTART:	
 15500  0D53                     i1l4224:	
 15501                           ;incstack = 0
 15502                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 15503                           
 15504                           
 15505                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
 15506  0D53  318D  2523  318D   	fcall	_i2c1_driver_sendNACK
 15507  0D56                     i1l4226:	
 15508                           
 15509                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
 15510  0D56  3009               	movlw	9
 15511  0D57                     i1l158:	
 15512  0D57  0008               	return
 15513  0D58                     __end_of_do_I2C_DO_NACK_RESTART:	
 15514                           
 15515                           	psect	text51
 15516  0D4E                     __ptext51:	
 15517 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 15518 ;; Defined at:
 15519 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 15520 ;; Parameters:    Size  Location     Type
 15521 ;;		None
 15522 ;; Auto vars:     Size  Location     Type
 15523 ;;		None
 15524 ;; Return value:  Size  Location     Type
 15525 ;;                  1    wreg      enum E12722
 15526 ;; Registers used:
 15527 ;;		wreg, status,2, status,0, pclath, cstack
 15528 ;; Tracked objects:
 15529 ;;		On entry : 0/0
 15530 ;;		On exit  : 0/0
 15531 ;;		Unchanged: 0/0
 15532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15537 ;;Total ram usage:        0 bytes
 15538 ;; Hardware stack levels used:    1
 15539 ;; Hardware stack levels required when called:    1
 15540 ;; This function calls:
 15541 ;;		_i2c1_driver_sendNACK
 15542 ;; This function is called by:
 15543 ;;		_do_I2C_RX
 15544 ;;		_i2c_ISR
 15545 ;; This function uses a non-reentrant model
 15546 ;;
 15547                           
 15548                           
 15549                           ;psect for function _do_I2C_DO_NACK_STOP
 15550  0D4E                     _do_I2C_DO_NACK_STOP:	
 15551  0D4E                     i1l4218:	
 15552                           ;incstack = 0
 15553                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 15554                           
 15555                           
 15556                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
 15557  0D4E  318D  2523  318D   	fcall	_i2c1_driver_sendNACK
 15558  0D51                     i1l4220:	
 15559                           
 15560                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
 15561  0D51  300A               	movlw	10
 15562  0D52                     i1l155:	
 15563  0D52  0008               	return
 15564  0D53                     __end_of_do_I2C_DO_NACK_STOP:	
 15565                           
 15566                           	psect	text52
 15567  0D49                     __ptext52:	
 15568 ;; *************** function _do_I2C_DO_ACK *****************
 15569 ;; Defined at:
 15570 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 15571 ;; Parameters:    Size  Location     Type
 15572 ;;		None
 15573 ;; Auto vars:     Size  Location     Type
 15574 ;;		None
 15575 ;; Return value:  Size  Location     Type
 15576 ;;                  1    wreg      enum E12722
 15577 ;; Registers used:
 15578 ;;		wreg, status,2, status,0, pclath, cstack
 15579 ;; Tracked objects:
 15580 ;;		On entry : 0/0
 15581 ;;		On exit  : 0/0
 15582 ;;		Unchanged: 0/0
 15583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15588 ;;Total ram usage:        0 bytes
 15589 ;; Hardware stack levels used:    1
 15590 ;; Hardware stack levels required when called:    1
 15591 ;; This function calls:
 15592 ;;		_i2c1_driver_sendACK
 15593 ;; This function is called by:
 15594 ;;		_i2c_ISR
 15595 ;; This function uses a non-reentrant model
 15596 ;;
 15597                           
 15598                           
 15599                           ;psect for function _do_I2C_DO_ACK
 15600  0D49                     _do_I2C_DO_ACK:	
 15601  0D49                     i1l4456:	
 15602                           ;incstack = 0
 15603                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 15604                           
 15605                           
 15606                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
 15607  0D49  318D  251F  318D   	fcall	_i2c1_driver_sendACK
 15608  0D4C                     i1l4458:	
 15609                           
 15610                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
 15611  0D4C  3005               	movlw	5
 15612  0D4D                     i1l152:	
 15613  0D4D  0008               	return
 15614  0D4E                     __end_of_do_I2C_DO_ACK:	
 15615                           
 15616                           	psect	text53
 15617  0D82                     __ptext53:	
 15618 ;; *************** function _do_I2C_RCEN *****************
 15619 ;; Defined at:
 15620 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 15621 ;; Parameters:    Size  Location     Type
 15622 ;;		None
 15623 ;; Auto vars:     Size  Location     Type
 15624 ;;		None
 15625 ;; Return value:  Size  Location     Type
 15626 ;;                  1    wreg      enum E12722
 15627 ;; Registers used:
 15628 ;;		wreg, status,2, status,0, pclath, cstack
 15629 ;; Tracked objects:
 15630 ;;		On entry : 0/0
 15631 ;;		On exit  : 0/0
 15632 ;;		Unchanged: 0/0
 15633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15638 ;;Total ram usage:        0 bytes
 15639 ;; Hardware stack levels used:    1
 15640 ;; Hardware stack levels required when called:    1
 15641 ;; This function calls:
 15642 ;;		_i2c1_driver_startRX
 15643 ;; This function is called by:
 15644 ;;		_i2c_ISR
 15645 ;; This function uses a non-reentrant model
 15646 ;;
 15647                           
 15648                           
 15649                           ;psect for function _do_I2C_RCEN
 15650  0D82                     _do_I2C_RCEN:	
 15651  0D82                     i1l4448:	
 15652                           ;incstack = 0
 15653                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 15654                           
 15655                           
 15656                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
 15657  0D82  0021               	movlb	1	; select bank1
 15658  0D83  11A0               	bcf	_i2c_status^(0+128),3
 15659  0D84                     i1l4450:	
 15660                           
 15661                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
 15662  0D84  318D  250D  318D   	fcall	_i2c1_driver_startRX
 15663  0D87                     i1l4452:	
 15664                           
 15665                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
 15666  0D87  3004               	movlw	4
 15667  0D88                     i1l149:	
 15668  0D88  0008               	return
 15669  0D89                     __end_of_do_I2C_RCEN:	
 15670                           
 15671                           	psect	text54
 15672  0DA7                     __ptext54:	
 15673 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 15674 ;; Defined at:
 15675 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 15676 ;; Parameters:    Size  Location     Type
 15677 ;;		None
 15678 ;; Auto vars:     Size  Location     Type
 15679 ;;		None
 15680 ;; Return value:  Size  Location     Type
 15681 ;;                  1    wreg      enum E12722
 15682 ;; Registers used:
 15683 ;;		wreg, status,2, status,0, pclath, cstack
 15684 ;; Tracked objects:
 15685 ;;		On entry : 0/0
 15686 ;;		On exit  : 0/0
 15687 ;;		Unchanged: 0/0
 15688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15693 ;;Total ram usage:        0 bytes
 15694 ;; Hardware stack levels used:    1
 15695 ;; Hardware stack levels required when called:    1
 15696 ;; This function calls:
 15697 ;;		_i2c1_driver_TXData
 15698 ;; This function is called by:
 15699 ;;		_i2c_ISR
 15700 ;; This function uses a non-reentrant model
 15701 ;;
 15702                           
 15703                           
 15704                           ;psect for function _do_I2C_SEND_ADR_WRITE
 15705  0DA7                     _do_I2C_SEND_ADR_WRITE:	
 15706  0DA7                     i1l4440:	
 15707                           ;incstack = 0
 15708                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 15709                           
 15710                           
 15711                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
 15712  0DA7  0021               	movlb	1	; select bank1
 15713  0DA8  15A0               	bsf	_i2c_status^(0+128),3
 15714  0DA9                     i1l4442:	
 15715                           
 15716                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
 15717  0DA9  3521               	lslf	(_i2c_status^(0+128)+1),w
 15718  0DAA  318D  252B  318D   	fcall	_i2c1_driver_TXData
 15719  0DAD                     i1l4444:	
 15720                           
 15721                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
 15722  0DAD  3003               	movlw	3
 15723  0DAE                     i1l146:	
 15724  0DAE  0008               	return
 15725  0DAF                     __end_of_do_I2C_SEND_ADR_WRITE:	
 15726                           
 15727                           	psect	text55
 15728  0DBF                     __ptext55:	
 15729 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 15730 ;; Defined at:
 15731 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 15732 ;; Parameters:    Size  Location     Type
 15733 ;;		None
 15734 ;; Auto vars:     Size  Location     Type
 15735 ;;		None
 15736 ;; Return value:  Size  Location     Type
 15737 ;;                  1    wreg      enum E12722
 15738 ;; Registers used:
 15739 ;;		wreg, status,2, status,0, pclath, cstack
 15740 ;; Tracked objects:
 15741 ;;		On entry : 0/0
 15742 ;;		On exit  : 0/0
 15743 ;;		Unchanged: 0/0
 15744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15749 ;;Total ram usage:        0 bytes
 15750 ;; Hardware stack levels used:    1
 15751 ;; Hardware stack levels required when called:    1
 15752 ;; This function calls:
 15753 ;;		_i2c1_driver_TXData
 15754 ;; This function is called by:
 15755 ;;		_i2c_ISR
 15756 ;; This function uses a non-reentrant model
 15757 ;;
 15758                           
 15759                           
 15760                           ;psect for function _do_I2C_SEND_ADR_READ
 15761  0DBF                     _do_I2C_SEND_ADR_READ:	
 15762  0DBF                     i1l4432:	
 15763                           ;incstack = 0
 15764                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 15765                           
 15766                           
 15767                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
 15768  0DBF  0021               	movlb	1	; select bank1
 15769  0DC0  15A0               	bsf	_i2c_status^(0+128),3
 15770  0DC1                     i1l4434:	
 15771                           
 15772                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
 15773  0DC1  1403               	setc
 15774  0DC2  0D21               	rlf	(_i2c_status^(0+128)+1),w
 15775  0DC3  318D  252B  318D   	fcall	_i2c1_driver_TXData
 15776  0DC6                     i1l4436:	
 15777                           
 15778                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
 15779  0DC6  3005               	movlw	5
 15780  0DC7                     i1l143:	
 15781  0DC7  0008               	return
 15782  0DC8                     __end_of_do_I2C_SEND_ADR_READ:	
 15783                           
 15784                           	psect	text56
 15785  0D44                     __ptext56:	
 15786 ;; *************** function _do_I2C_SEND_STOP *****************
 15787 ;; Defined at:
 15788 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 15789 ;; Parameters:    Size  Location     Type
 15790 ;;		None
 15791 ;; Auto vars:     Size  Location     Type
 15792 ;;		None
 15793 ;; Return value:  Size  Location     Type
 15794 ;;                  1    wreg      enum E12722
 15795 ;; Registers used:
 15796 ;;		wreg, status,2, status,0, pclath, cstack
 15797 ;; Tracked objects:
 15798 ;;		On entry : 0/0
 15799 ;;		On exit  : 0/0
 15800 ;;		Unchanged: 0/0
 15801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15806 ;;Total ram usage:        0 bytes
 15807 ;; Hardware stack levels used:    1
 15808 ;; Hardware stack levels required when called:    1
 15809 ;; This function calls:
 15810 ;;		_i2c1_driver_stop
 15811 ;; This function is called by:
 15812 ;;		_do_I2C_DO_ADDRESS_NACK
 15813 ;;		_do_I2C_TX
 15814 ;;		_do_I2C_TX_EMPTY
 15815 ;;		_i2c_ISR
 15816 ;; This function uses a non-reentrant model
 15817 ;;
 15818                           
 15819                           
 15820                           ;psect for function _do_I2C_SEND_STOP
 15821  0D44                     _do_I2C_SEND_STOP:	
 15822  0D44                     i1l4206:	
 15823                           ;incstack = 0
 15824                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 15825                           
 15826                           
 15827                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
 15828  0D44  318D  250A  318D   	fcall	_i2c1_driver_stop
 15829  0D47                     i1l4208:	
 15830                           
 15831                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
 15832  0D47  3000               	movlw	0
 15833  0D48                     i1l140:	
 15834  0D48  0008               	return
 15835  0D49                     __end_of_do_I2C_SEND_STOP:	
 15836                           
 15837                           	psect	text57
 15838  0D3F                     __ptext57:	
 15839 ;; *************** function _do_I2C_SEND_RESTART *****************
 15840 ;; Defined at:
 15841 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 15842 ;; Parameters:    Size  Location     Type
 15843 ;;		None
 15844 ;; Auto vars:     Size  Location     Type
 15845 ;;		None
 15846 ;; Return value:  Size  Location     Type
 15847 ;;                  1    wreg      enum E12722
 15848 ;; Registers used:
 15849 ;;		wreg, status,2, status,0, pclath, cstack
 15850 ;; Tracked objects:
 15851 ;;		On entry : 0/0
 15852 ;;		On exit  : 0/0
 15853 ;;		Unchanged: 0/0
 15854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15859 ;;Total ram usage:        0 bytes
 15860 ;; Hardware stack levels used:    1
 15861 ;; Hardware stack levels required when called:    1
 15862 ;; This function calls:
 15863 ;;		_i2c1_driver_restart
 15864 ;; This function is called by:
 15865 ;;		_do_I2C_DO_ADDRESS_NACK
 15866 ;;		_do_I2C_TX_EMPTY
 15867 ;;		_i2c_ISR
 15868 ;; This function uses a non-reentrant model
 15869 ;;
 15870                           
 15871                           
 15872                           ;psect for function _do_I2C_SEND_RESTART
 15873  0D3F                     _do_I2C_SEND_RESTART:	
 15874  0D3F                     i1l4200:	
 15875                           ;incstack = 0
 15876                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 15877                           
 15878                           
 15879                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
 15880  0D3F  318D  2507  318D   	fcall	_i2c1_driver_restart
 15881  0D42                     i1l4202:	
 15882                           
 15883                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
 15884  0D42  3001               	movlw	1
 15885  0D43                     i1l137:	
 15886  0D43  0008               	return
 15887  0D44                     __end_of_do_I2C_SEND_RESTART:	
 15888                           
 15889                           	psect	text58
 15890  0D3A                     __ptext58:	
 15891 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 15892 ;; Defined at:
 15893 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 15894 ;; Parameters:    Size  Location     Type
 15895 ;;		None
 15896 ;; Auto vars:     Size  Location     Type
 15897 ;;		None
 15898 ;; Return value:  Size  Location     Type
 15899 ;;                  1    wreg      enum E12722
 15900 ;; Registers used:
 15901 ;;		wreg, status,2, status,0, pclath, cstack
 15902 ;; Tracked objects:
 15903 ;;		On entry : 0/0
 15904 ;;		On exit  : 0/0
 15905 ;;		Unchanged: 0/0
 15906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15911 ;;Total ram usage:        0 bytes
 15912 ;; Hardware stack levels used:    1
 15913 ;; Hardware stack levels required when called:    1
 15914 ;; This function calls:
 15915 ;;		_i2c1_driver_restart
 15916 ;; This function is called by:
 15917 ;;		_do_I2C_TX
 15918 ;;		_i2c_ISR
 15919 ;; This function uses a non-reentrant model
 15920 ;;
 15921                           
 15922                           
 15923                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 15924  0D3A                     _do_I2C_SEND_RESTART_WRITE:	
 15925  0D3A                     i1l4194:	
 15926                           ;incstack = 0
 15927                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 15928                           
 15929                           
 15930                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
 15931  0D3A  318D  2507  318D   	fcall	_i2c1_driver_restart
 15932  0D3D                     i1l4196:	
 15933                           
 15934                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
 15935  0D3D  3002               	movlw	2
 15936  0D3E                     i1l134:	
 15937  0D3E  0008               	return
 15938  0D3F                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 15939                           
 15940                           	psect	text59
 15941  0D35                     __ptext59:	
 15942 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 15943 ;; Defined at:
 15944 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 15945 ;; Parameters:    Size  Location     Type
 15946 ;;		None
 15947 ;; Auto vars:     Size  Location     Type
 15948 ;;		None
 15949 ;; Return value:  Size  Location     Type
 15950 ;;                  1    wreg      enum E12722
 15951 ;; Registers used:
 15952 ;;		wreg, status,2, status,0, pclath, cstack
 15953 ;; Tracked objects:
 15954 ;;		On entry : 0/0
 15955 ;;		On exit  : 0/0
 15956 ;;		Unchanged: 0/0
 15957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15962 ;;Total ram usage:        0 bytes
 15963 ;; Hardware stack levels used:    1
 15964 ;; Hardware stack levels required when called:    1
 15965 ;; This function calls:
 15966 ;;		_i2c1_driver_restart
 15967 ;; This function is called by:
 15968 ;;		_do_I2C_TX
 15969 ;;		_i2c_ISR
 15970 ;; This function uses a non-reentrant model
 15971 ;;
 15972                           
 15973                           
 15974                           ;psect for function _do_I2C_SEND_RESTART_READ
 15975  0D35                     _do_I2C_SEND_RESTART_READ:	
 15976  0D35                     i1l4188:	
 15977                           ;incstack = 0
 15978                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 15979                           
 15980                           
 15981                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
 15982  0D35  318D  2507  318D   	fcall	_i2c1_driver_restart
 15983  0D38                     i1l4190:	
 15984                           
 15985                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
 15986  0D38  3001               	movlw	1
 15987  0D39                     i1l131:	
 15988  0D39  0008               	return
 15989  0D3A                     __end_of_do_I2C_SEND_RESTART_READ:	
 15990                           
 15991                           	psect	text60
 15992  0D30                     __ptext60:	
 15993 ;; *************** function _do_I2C_IDLE *****************
 15994 ;; Defined at:
 15995 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 15996 ;; Parameters:    Size  Location     Type
 15997 ;;		None
 15998 ;; Auto vars:     Size  Location     Type
 15999 ;;		None
 16000 ;; Return value:  Size  Location     Type
 16001 ;;                  1    wreg      enum E12722
 16002 ;; Registers used:
 16003 ;;		wreg, status,2
 16004 ;; Tracked objects:
 16005 ;;		On entry : 0/0
 16006 ;;		On exit  : 0/0
 16007 ;;		Unchanged: 0/0
 16008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16013 ;;Total ram usage:        0 bytes
 16014 ;; Hardware stack levels used:    1
 16015 ;; This function calls:
 16016 ;;		Nothing
 16017 ;; This function is called by:
 16018 ;;		_i2c_ISR
 16019 ;; This function uses a non-reentrant model
 16020 ;;
 16021                           
 16022                           
 16023                           ;psect for function _do_I2C_IDLE
 16024  0D30                     _do_I2C_IDLE:	
 16025  0D30                     i1l4424:	
 16026                           ;incstack = 0
 16027                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 16028                           
 16029                           
 16030                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
 16031  0D30  0021               	movlb	1	; select bank1
 16032  0D31  1020               	bcf	_i2c_status^(0+128),0
 16033  0D32                     i1l4426:	
 16034                           
 16035                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
 16036  0D32  01AA               	clrf	(_i2c_status^(0+128)+10)
 16037  0D33                     i1l4428:	
 16038                           
 16039                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
 16040  0D33  300E               	movlw	14
 16041  0D34                     i1l128:	
 16042  0D34  0008               	return
 16043  0D35                     __end_of_do_I2C_IDLE:	
 16044                           
 16045                           	psect	text61
 16046  0D9F                     __ptext61:	
 16047 ;; *************** function _do_I2C_RESET *****************
 16048 ;; Defined at:
 16049 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 16050 ;; Parameters:    Size  Location     Type
 16051 ;;		None
 16052 ;; Auto vars:     Size  Location     Type
 16053 ;;		None
 16054 ;; Return value:  Size  Location     Type
 16055 ;;                  1    wreg      enum E12722
 16056 ;; Registers used:
 16057 ;;		wreg, status,2, status,0, pclath, cstack
 16058 ;; Tracked objects:
 16059 ;;		On entry : 0/0
 16060 ;;		On exit  : 0/0
 16061 ;;		Unchanged: 0/0
 16062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16067 ;;Total ram usage:        0 bytes
 16068 ;; Hardware stack levels used:    1
 16069 ;; Hardware stack levels required when called:    1
 16070 ;; This function calls:
 16071 ;;		_i2c1_driver_resetBus
 16072 ;; This function is called by:
 16073 ;;		_i2c_ISR
 16074 ;; This function uses a non-reentrant model
 16075 ;;
 16076                           
 16077                           
 16078                           ;psect for function _do_I2C_RESET
 16079  0D9F                     _do_I2C_RESET:	
 16080  0D9F                     i1l4414:	
 16081                           ;incstack = 0
 16082                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 16083                           
 16084                           
 16085                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
 16086  0D9F  318C  24FF  318D   	fcall	_i2c1_driver_resetBus
 16087  0DA2                     i1l4416:	
 16088                           
 16089                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
 16090  0DA2  0021               	movlb	1	; select bank1
 16091  0DA3  1020               	bcf	_i2c_status^(0+128),0
 16092  0DA4                     i1l4418:	
 16093                           
 16094                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
 16095  0DA4  01AA               	clrf	(_i2c_status^(0+128)+10)
 16096  0DA5                     i1l4420:	
 16097                           
 16098                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
 16099  0DA5  300E               	movlw	14
 16100  0DA6                     i1l125:	
 16101  0DA6  0008               	return
 16102  0DA7                     __end_of_do_I2C_RESET:	
 16103                           
 16104                           	psect	text62
 16105  0631                     __ptext62:	
 16106 ;; *************** function _do_I2C_TX_EMPTY *****************
 16107 ;; Defined at:
 16108 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 16109 ;; Parameters:    Size  Location     Type
 16110 ;;		None
 16111 ;; Auto vars:     Size  Location     Type
 16112 ;;		None
 16113 ;; Return value:  Size  Location     Type
 16114 ;;                  1    wreg      enum E12722
 16115 ;; Registers used:
 16116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16117 ;; Tracked objects:
 16118 ;;		On entry : 0/0
 16119 ;;		On exit  : 0/0
 16120 ;;		Unchanged: 0/0
 16121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16124 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16125 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16126 ;;Total ram usage:        3 bytes
 16127 ;; Hardware stack levels used:    1
 16128 ;; Hardware stack levels required when called:    3
 16129 ;; This function calls:
 16130 ;;		Absolute function
 16131 ;;		_do_I2C_SEND_RESTART
 16132 ;;		_do_I2C_SEND_STOP
 16133 ;;		_i2c_restartWrite
 16134 ;;		_mssp1_setIRQ
 16135 ;;		_rd1RegCompleteHandler
 16136 ;;		_rd2RegCompleteHandler
 16137 ;;		_rdBlkRegCompleteHandler
 16138 ;;		_returnReset
 16139 ;;		_returnStop
 16140 ;;		_wr1RegCompleteHandler
 16141 ;;		_wr2RegCompleteHandler
 16142 ;; This function is called by:
 16143 ;;		_i2c_ISR
 16144 ;; This function uses a non-reentrant model
 16145 ;;
 16146                           
 16147                           
 16148                           ;psect for function _do_I2C_TX_EMPTY
 16149  0631                     _do_I2C_TX_EMPTY:	
 16150  0631                     i1l4550:	
 16151                           ;incstack = 0
 16152                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16153                           
 16154                           
 16155                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
 16156  0631  0021               	movlb	1	; select bank1
 16157  0632  1520               	bsf	_i2c_status^(0+128),2
 16158                           
 16159                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 16160  0633  2E41               	goto	i1l4568
 16161  0634                     i1l4552:	
 16162                           
 16163                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
 16164  0634  318D  253F  3186   	fcall	_do_I2C_SEND_RESTART
 16165  0637  2E63               	goto	i1l200
 16166  0638                     i1l4556:	
 16167                           
 16168                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
 16169  0638  318D  2513  3186   	fcall	_mssp1_setIRQ
 16170  063B                     i1l4558:	
 16171                           
 16172                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
 16173  063B  3003               	movlw	3
 16174  063C  2E63               	goto	i1l200
 16175  063D                     i1l4562:	
 16176                           
 16177                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
 16178  063D  318D  2544  3186   	fcall	_do_I2C_SEND_STOP
 16179  0640  2E63               	goto	i1l200
 16180  0641                     i1l4568:	
 16181  0641  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 16182  0642  00FA               	movwf	??_do_I2C_TX_EMPTY
 16183  0643  087A               	movf	??_do_I2C_TX_EMPTY,w
 16184  0644  00F9               	movwf	rdBlkRegCompleteHandler@p
 16185  0645  300B               	movlw	11
 16186  0646  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 16187  0647  0086               	movwf	6
 16188  0648  0187               	clrf	7
 16189  0649  3F41               	moviw [1]fsr1
 16190  064A  008A               	movwf	10
 16191  064B  3F40               	moviw [0]fsr1
 16192  064C  000A               	callw
 16193  064D  3186               	pagesel	$
 16194  064E  00FB               	movwf	??_do_I2C_TX_EMPTY+1
 16195  064F  01FC               	clrf	??_do_I2C_TX_EMPTY+2
 16196                           
 16197                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16198                           ; Switch size 1, requested type "simple"
 16199                           ; Number of cases is 1, Range of values is 0 to 0
 16200                           ; switch strategies available:
 16201                           ; Name         Instructions Cycles
 16202                           ; simple_byte            4     3 (average)
 16203                           ; direct_byte            8     6 (fixed)
 16204                           ; jumptable            260     6 (fixed)
 16205                           ;	Chosen strategy is simple_byte
 16206  0650  087C               	movf	??_do_I2C_TX_EMPTY+2,w
 16207  0651  3A00               	xorlw	0	; case 0
 16208  0652  1903               	skipnz
 16209  0653  2E55               	goto	i1l6356
 16210  0654  2E3D               	goto	i1l4562
 16211  0655                     i1l6356:	
 16212                           
 16213                           ; Switch size 1, requested type "simple"
 16214                           ; Number of cases is 4, Range of values is 1 to 4
 16215                           ; switch strategies available:
 16216                           ; Name         Instructions Cycles
 16217                           ; simple_byte           13     7 (average)
 16218                           ; direct_byte           17     9 (fixed)
 16219                           ; jumptable            263     9 (fixed)
 16220                           ;	Chosen strategy is simple_byte
 16221  0655  087B               	movf	??_do_I2C_TX_EMPTY+1,w
 16222  0656  3A01               	xorlw	1	; case 1
 16223  0657  1903               	skipnz
 16224  0658  2E3D               	goto	i1l4562
 16225  0659  3A03               	xorlw	3	; case 2
 16226  065A  1903               	skipnz
 16227  065B  2E34               	goto	i1l4552
 16228  065C  3A01               	xorlw	1	; case 3
 16229  065D  1903               	skipnz
 16230  065E  2E34               	goto	i1l4552
 16231  065F  3A07               	xorlw	7	; case 4
 16232  0660  1903               	skipnz
 16233  0661  2E38               	goto	i1l4556
 16234  0662  2E3D               	goto	i1l4562
 16235  0663                     i1l200:	
 16236  0663  0008               	return
 16237  0664                     __end_of_do_I2C_TX_EMPTY:	
 16238                           
 16239                           	psect	text63
 16240  0D13                     __ptext63:	
 16241 ;; *************** function _mssp1_setIRQ *****************
 16242 ;; Defined at:
 16243 ;;		line 59 in file "mcc_generated_files/i2c1_driver.c"
 16244 ;; Parameters:    Size  Location     Type
 16245 ;;		None
 16246 ;; Auto vars:     Size  Location     Type
 16247 ;;		None
 16248 ;; Return value:  Size  Location     Type
 16249 ;;                  1    wreg      void 
 16250 ;; Registers used:
 16251 ;;		None
 16252 ;; Tracked objects:
 16253 ;;		On entry : 0/0
 16254 ;;		On exit  : 0/0
 16255 ;;		Unchanged: 0/0
 16256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16261 ;;Total ram usage:        0 bytes
 16262 ;; Hardware stack levels used:    1
 16263 ;; This function calls:
 16264 ;;		Nothing
 16265 ;; This function is called by:
 16266 ;;		_do_I2C_TX_EMPTY
 16267 ;; This function uses a non-reentrant model
 16268 ;;
 16269                           
 16270                           
 16271                           ;psect for function _mssp1_setIRQ
 16272  0D13                     _mssp1_setIRQ:	
 16273  0D13                     i1l4238:	
 16274                           ;incstack = 0
 16275                           ; Regs used in _mssp1_setIRQ: []
 16276                           
 16277                           
 16278                           ;mcc_generated_files/i2c1_driver.c: 61:     else
 16279  0D13  002E               	movlb	14	; select bank14
 16280  0D14  140F               	bsf	15,0	;volatile
 16281  0D15                     i1l579:	
 16282  0D15  0008               	return
 16283  0D16                     __end_of_mssp1_setIRQ:	
 16284                           
 16285                           	psect	text64
 16286  0D97                     __ptext64:	
 16287 ;; *************** function _i2c1_driver_isNACK *****************
 16288 ;; Defined at:
 16289 ;;		line 162 in file "mcc_generated_files/i2c1_driver.c"
 16290 ;; Parameters:    Size  Location     Type
 16291 ;;		None
 16292 ;; Auto vars:     Size  Location     Type
 16293 ;;		None
 16294 ;; Return value:  Size  Location     Type
 16295 ;;		None               void
 16296 ;; Registers used:
 16297 ;;		wreg, status,2, status,0
 16298 ;; Tracked objects:
 16299 ;;		On entry : 0/0
 16300 ;;		On exit  : 0/0
 16301 ;;		Unchanged: 0/0
 16302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16305 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16306 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16307 ;;Total ram usage:        1 bytes
 16308 ;; Hardware stack levels used:    1
 16309 ;; This function calls:
 16310 ;;		Nothing
 16311 ;; This function is called by:
 16312 ;;		_do_I2C_TX
 16313 ;;		_i2c_ISR
 16314 ;; This function uses a non-reentrant model
 16315 ;;
 16316                           
 16317                           
 16318                           ;psect for function _i2c1_driver_isNACK
 16319  0D97                     _i2c1_driver_isNACK:	
 16320  0D97                     i1l4230:	
 16321                           ;incstack = 0
 16322                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 16323                           
 16324                           
 16325                           ;mcc_generated_files/i2c1_driver.c: 164:     return SSP1CON2bits.ACKSTAT;
 16326  0D97  0023               	movlb	3	; select bank3
 16327  0D98  0E11               	swapf	17,w	;volatile
 16328  0D99  0C89               	rrf	9,f
 16329  0D9A  0C89               	rrf	9,f
 16330  0D9B  3901               	andlw	1
 16331  0D9C  00F0               	movwf	??_i2c1_driver_isNACK
 16332  0D9D  0C70               	rrf	??_i2c1_driver_isNACK,w
 16333  0D9E                     i1l614:	
 16334  0D9E  0008               	return
 16335  0D9F                     __end_of_i2c1_driver_isNACK:	
 16336                           
 16337                           	psect	text65
 16338  0D2B                     __ptext65:	
 16339 ;; *************** function _i2c1_driver_TXData *****************
 16340 ;; Defined at:
 16341 ;;		line 187 in file "mcc_generated_files/i2c1_driver.c"
 16342 ;; Parameters:    Size  Location     Type
 16343 ;;  d               1    wreg     unsigned char 
 16344 ;; Auto vars:     Size  Location     Type
 16345 ;;  d               1    0[COMMON] unsigned char 
 16346 ;; Return value:  Size  Location     Type
 16347 ;;                  1    wreg      void 
 16348 ;; Registers used:
 16349 ;;		wreg
 16350 ;; Tracked objects:
 16351 ;;		On entry : 0/0
 16352 ;;		On exit  : 0/0
 16353 ;;		Unchanged: 0/0
 16354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16356 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16358 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16359 ;;Total ram usage:        1 bytes
 16360 ;; Hardware stack levels used:    1
 16361 ;; This function calls:
 16362 ;;		Nothing
 16363 ;; This function is called by:
 16364 ;;		_do_I2C_SEND_ADR_READ
 16365 ;;		_do_I2C_SEND_ADR_WRITE
 16366 ;;		_do_I2C_TX
 16367 ;; This function uses a non-reentrant model
 16368 ;;
 16369                           
 16370                           
 16371                           ;psect for function _i2c1_driver_TXData
 16372  0D2B                     _i2c1_driver_TXData:	
 16373                           
 16374                           ;incstack = 0
 16375                           ; Regs used in _i2c1_driver_TXData: [wreg]
 16376                           ;i2c1_driver_TXData@d stored from wreg
 16377  0D2B  00F0               	movwf	i2c1_driver_TXData@d
 16378  0D2C                     i1l4212:	
 16379                           
 16380                           ;mcc_generated_files/i2c1_driver.c: 187: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 188: {;mcc_generated_files/i2c1_driver.c: 18
      +                          9:     SSP1BUF = d;
 16381  0D2C  0870               	movf	i2c1_driver_TXData@d,w
 16382  0D2D  0023               	movlb	3	; select bank3
 16383  0D2E  008C               	movwf	12	;volatile
 16384  0D2F                     i1l629:	
 16385  0D2F  0008               	return
 16386  0D30                     __end_of_i2c1_driver_TXData:	
 16387                           
 16388                           	psect	text66
 16389  0D10                     __ptext66:	
 16390 ;; *************** function _i2c1_driver_getRXData *****************
 16391 ;; Defined at:
 16392 ;;		line 172 in file "mcc_generated_files/i2c1_driver.c"
 16393 ;; Parameters:    Size  Location     Type
 16394 ;;		None
 16395 ;; Auto vars:     Size  Location     Type
 16396 ;;		None
 16397 ;; Return value:  Size  Location     Type
 16398 ;;                  1    wreg      unsigned char 
 16399 ;; Registers used:
 16400 ;;		wreg
 16401 ;; Tracked objects:
 16402 ;;		On entry : 0/0
 16403 ;;		On exit  : 0/0
 16404 ;;		Unchanged: 0/0
 16405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16410 ;;Total ram usage:        0 bytes
 16411 ;; Hardware stack levels used:    1
 16412 ;; This function calls:
 16413 ;;		Nothing
 16414 ;; This function is called by:
 16415 ;;		_do_I2C_RX
 16416 ;; This function uses a non-reentrant model
 16417 ;;
 16418                           
 16419                           
 16420                           ;psect for function _i2c1_driver_getRXData
 16421  0D10                     _i2c1_driver_getRXData:	
 16422  0D10                     i1l4234:	
 16423                           ;incstack = 0
 16424                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 16425                           
 16426                           
 16427                           ;mcc_generated_files/i2c1_driver.c: 174:     return SSP1BUF;
 16428  0D10  0023               	movlb	3	; select bank3
 16429  0D11  080C               	movf	12,w	;volatile
 16430  0D12                     i1l620:	
 16431  0D12  0008               	return
 16432  0D13                     __end_of_i2c1_driver_getRXData:	
 16433                           
 16434                           	psect	text67
 16435  0D23                     __ptext67:	
 16436 ;; *************** function _i2c1_driver_sendNACK *****************
 16437 ;; Defined at:
 16438 ;;		line 203 in file "mcc_generated_files/i2c1_driver.c"
 16439 ;; Parameters:    Size  Location     Type
 16440 ;;		None
 16441 ;; Auto vars:     Size  Location     Type
 16442 ;;		None
 16443 ;; Return value:  Size  Location     Type
 16444 ;;                  1    wreg      void 
 16445 ;; Registers used:
 16446 ;;		None
 16447 ;; Tracked objects:
 16448 ;;		On entry : 0/0
 16449 ;;		On exit  : 0/0
 16450 ;;		Unchanged: 0/0
 16451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16456 ;;Total ram usage:        0 bytes
 16457 ;; Hardware stack levels used:    1
 16458 ;; This function calls:
 16459 ;;		Nothing
 16460 ;; This function is called by:
 16461 ;;		_do_I2C_DO_NACK_STOP
 16462 ;;		_do_I2C_DO_NACK_RESTART
 16463 ;; This function uses a non-reentrant model
 16464 ;;
 16465                           
 16466                           
 16467                           ;psect for function _i2c1_driver_sendNACK
 16468  0D23                     _i2c1_driver_sendNACK:	
 16469  0D23                     i1l4094:	
 16470                           ;incstack = 0
 16471                           ; Regs used in _i2c1_driver_sendNACK: []
 16472                           
 16473                           
 16474                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKDT = 1;
 16475  0D23  0023               	movlb	3	; select bank3
 16476  0D24  1691               	bsf	17,5	;volatile
 16477                           
 16478                           ;mcc_generated_files/i2c1_driver.c: 206:     SSP1CON2bits.ACKEN = 1;
 16479  0D25  1611               	bsf	17,4	;volatile
 16480  0D26                     i1l638:	
 16481  0D26  0008               	return
 16482  0D27                     __end_of_i2c1_driver_sendNACK:	
 16483                           
 16484                           	psect	text68
 16485  0CFF                     __ptext68:	
 16486 ;; *************** function _i2c1_driver_resetBus *****************
 16487 ;; Defined at:
 16488 ;;		line 142 in file "mcc_generated_files/i2c1_driver.c"
 16489 ;; Parameters:    Size  Location     Type
 16490 ;;		None
 16491 ;; Auto vars:     Size  Location     Type
 16492 ;;		None
 16493 ;; Return value:  Size  Location     Type
 16494 ;;                  1    wreg      void 
 16495 ;; Registers used:
 16496 ;;		None
 16497 ;; Tracked objects:
 16498 ;;		On entry : 0/0
 16499 ;;		On exit  : 0/0
 16500 ;;		Unchanged: 0/0
 16501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16506 ;;Total ram usage:        0 bytes
 16507 ;; Hardware stack levels used:    1
 16508 ;; This function calls:
 16509 ;;		Nothing
 16510 ;; This function is called by:
 16511 ;;		_do_I2C_RESET
 16512 ;; This function uses a non-reentrant model
 16513 ;;
 16514                           
 16515                           
 16516                           ;psect for function _i2c1_driver_resetBus
 16517  0CFF                     _i2c1_driver_resetBus:	
 16518  0CFF                     i1l602:	
 16519                           ;incstack = 0
 16520                           ; Regs used in _i2c1_driver_resetBus: []
 16521                           
 16522  0CFF  0008               	return
 16523  0D00                     __end_of_i2c1_driver_resetBus:	
 16524                           
 16525                           	psect	text69
 16526  0D0D                     __ptext69:	
 16527 ;; *************** function _i2c1_driver_startRX *****************
 16528 ;; Defined at:
 16529 ;;		line 167 in file "mcc_generated_files/i2c1_driver.c"
 16530 ;; Parameters:    Size  Location     Type
 16531 ;;		None
 16532 ;; Auto vars:     Size  Location     Type
 16533 ;;		None
 16534 ;; Return value:  Size  Location     Type
 16535 ;;                  1    wreg      void 
 16536 ;; Registers used:
 16537 ;;		None
 16538 ;; Tracked objects:
 16539 ;;		On entry : 0/0
 16540 ;;		On exit  : 0/0
 16541 ;;		Unchanged: 0/0
 16542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16547 ;;Total ram usage:        0 bytes
 16548 ;; Hardware stack levels used:    1
 16549 ;; This function calls:
 16550 ;;		Nothing
 16551 ;; This function is called by:
 16552 ;;		_do_I2C_RCEN
 16553 ;; This function uses a non-reentrant model
 16554 ;;
 16555                           
 16556                           
 16557                           ;psect for function _i2c1_driver_startRX
 16558  0D0D                     _i2c1_driver_startRX:	
 16559  0D0D                     i1l4214:	
 16560                           ;incstack = 0
 16561                           ; Regs used in _i2c1_driver_startRX: []
 16562                           
 16563                           
 16564                           ;mcc_generated_files/i2c1_driver.c: 169:     SSP1CON2bits.RCEN = 1;
 16565  0D0D  0023               	movlb	3	; select bank3
 16566  0D0E  1591               	bsf	17,3	;volatile
 16567  0D0F                     i1l617:	
 16568  0D0F  0008               	return
 16569  0D10                     __end_of_i2c1_driver_startRX:	
 16570                           
 16571                           	psect	text70
 16572  0F4E                     __ptext70:	
 16573 ;; *************** function _rdBlkRegCompleteHandler *****************
 16574 ;; Defined at:
 16575 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16576 ;; Parameters:    Size  Location     Type
 16577 ;;  p               1    9[COMMON] PTR void 
 16578 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16579 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16580 ;; Auto vars:     Size  Location     Type
 16581 ;;		None
 16582 ;; Return value:  Size  Location     Type
 16583 ;;                  1    wreg      enum E358
 16584 ;; Registers used:
 16585 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16586 ;; Tracked objects:
 16587 ;;		On entry : 0/0
 16588 ;;		On exit  : 0/0
 16589 ;;		Unchanged: 0/0
 16590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16591 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16594 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16595 ;;Total ram usage:        1 bytes
 16596 ;; Hardware stack levels used:    1
 16597 ;; Hardware stack levels required when called:    2
 16598 ;; This function calls:
 16599 ;;		_i2c_setBuffer
 16600 ;;		_i2c_setDataCompleteCallback
 16601 ;; This function is called by:
 16602 ;;		_i2c_readDataBlock
 16603 ;;		_do_I2C_DO_ADDRESS_NACK
 16604 ;;		_do_I2C_TX
 16605 ;;		_do_I2C_RX
 16606 ;;		_do_I2C_TX_EMPTY
 16607 ;; This function uses a non-reentrant model
 16608 ;;
 16609                           
 16610                           
 16611                           ;psect for function _rdBlkRegCompleteHandler
 16612  0F4E                     _rdBlkRegCompleteHandler:	
 16613  0F4E                     i1l4280:	
 16614                           ;incstack = 0
 16615                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 16616                           
 16617                           
 16618                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
 16619  0F4E  0879               	movf	rdBlkRegCompleteHandler@p,w
 16620  0F4F  0086               	movwf	6
 16621  0F50  0187               	clrf	7
 16622  0F51  3F40               	moviw [0]fsr1
 16623  0F52  00F0               	movwf	i2c_setBuffer@bufferSize
 16624  0F53  3F41               	moviw [1]fsr1
 16625  0F54  00F1               	movwf	i2c_setBuffer@bufferSize+1
 16626  0F55  0879               	movf	rdBlkRegCompleteHandler@p,w
 16627  0F56  3E02               	addlw	2
 16628  0F57  0086               	movwf	6
 16629  0F58  0187               	clrf	7
 16630  0F59  0801               	movf	1,w
 16631  0F5A  318E  266B  318F   	fcall	_i2c_setBuffer
 16632                           
 16633                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 16634  0F5D  3000               	movlw	0
 16635  0F5E  00F5               	movwf	i2c_setDataCompleteCallback@cb
 16636  0F5F  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 16637  0F60  01F7               	clrf	i2c_setDataCompleteCallback@p
 16638  0F61  318E  2616  318F   	fcall	_i2c_setDataCompleteCallback
 16639  0F64                     i1l4282:	
 16640                           
 16641                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
 16642  0F64  3002               	movlw	2
 16643  0F65                     i1l303:	
 16644  0F65  0008               	return
 16645  0F66                     __end_of_rdBlkRegCompleteHandler:	
 16646                           
 16647                           	psect	text71
 16648  0ECF                     __ptext71:	
 16649 ;; *************** function _rd2RegCompleteHandler *****************
 16650 ;; Defined at:
 16651 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16652 ;; Parameters:    Size  Location     Type
 16653 ;;  p               1    9[COMMON] PTR void 
 16654 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16655 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16656 ;; Auto vars:     Size  Location     Type
 16657 ;;		None
 16658 ;; Return value:  Size  Location     Type
 16659 ;;                  1    wreg      enum E358
 16660 ;; Registers used:
 16661 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16662 ;; Tracked objects:
 16663 ;;		On entry : 0/0
 16664 ;;		On exit  : 0/0
 16665 ;;		Unchanged: 0/0
 16666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16667 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16670 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16671 ;;Total ram usage:        1 bytes
 16672 ;; Hardware stack levels used:    1
 16673 ;; Hardware stack levels required when called:    2
 16674 ;; This function calls:
 16675 ;;		_i2c_setBuffer
 16676 ;;		_i2c_setDataCompleteCallback
 16677 ;; This function is called by:
 16678 ;;		_i2c_read2ByteRegister
 16679 ;;		_do_I2C_DO_ADDRESS_NACK
 16680 ;;		_do_I2C_TX
 16681 ;;		_do_I2C_RX
 16682 ;;		_do_I2C_TX_EMPTY
 16683 ;; This function uses a non-reentrant model
 16684 ;;
 16685                           
 16686                           
 16687                           ;psect for function _rd2RegCompleteHandler
 16688  0ECF                     _rd2RegCompleteHandler:	
 16689  0ECF                     i1l4264:	
 16690                           ;incstack = 0
 16691                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16692                           
 16693                           
 16694                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
 16695  0ECF  3002               	movlw	2
 16696  0ED0  00F0               	movwf	i2c_setBuffer@bufferSize
 16697  0ED1  3000               	movlw	0
 16698  0ED2  00F1               	movwf	i2c_setBuffer@bufferSize+1
 16699  0ED3  0879               	movf	rd2RegCompleteHandler@p,w
 16700  0ED4  318E  266B  318E   	fcall	_i2c_setBuffer
 16701  0ED7                     i1l4266:	
 16702                           
 16703                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 16704  0ED7  3000               	movlw	0
 16705  0ED8  00F5               	movwf	i2c_setDataCompleteCallback@cb
 16706  0ED9  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 16707  0EDA  01F7               	clrf	i2c_setDataCompleteCallback@p
 16708  0EDB  318E  2616  318E   	fcall	_i2c_setDataCompleteCallback
 16709  0EDE                     i1l4268:	
 16710                           
 16711                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
 16712  0EDE  3002               	movlw	2
 16713  0EDF                     i1l279:	
 16714  0EDF  0008               	return
 16715  0EE0                     __end_of_rd2RegCompleteHandler:	
 16716                           
 16717                           	psect	text72
 16718  0EBE                     __ptext72:	
 16719 ;; *************** function _rd1RegCompleteHandler *****************
 16720 ;; Defined at:
 16721 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16722 ;; Parameters:    Size  Location     Type
 16723 ;;  p               1    9[COMMON] PTR void 
 16724 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16725 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16726 ;; Auto vars:     Size  Location     Type
 16727 ;;		None
 16728 ;; Return value:  Size  Location     Type
 16729 ;;                  1    wreg      enum E358
 16730 ;; Registers used:
 16731 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16732 ;; Tracked objects:
 16733 ;;		On entry : 0/0
 16734 ;;		On exit  : 0/0
 16735 ;;		Unchanged: 0/0
 16736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16737 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16740 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16741 ;;Total ram usage:        1 bytes
 16742 ;; Hardware stack levels used:    1
 16743 ;; Hardware stack levels required when called:    2
 16744 ;; This function calls:
 16745 ;;		_i2c_setBuffer
 16746 ;;		_i2c_setDataCompleteCallback
 16747 ;; This function is called by:
 16748 ;;		_i2c_read1ByteRegister
 16749 ;;		_do_I2C_DO_ADDRESS_NACK
 16750 ;;		_do_I2C_TX
 16751 ;;		_do_I2C_RX
 16752 ;;		_do_I2C_TX_EMPTY
 16753 ;; This function uses a non-reentrant model
 16754 ;;
 16755                           
 16756                           
 16757                           ;psect for function _rd1RegCompleteHandler
 16758  0EBE                     _rd1RegCompleteHandler:	
 16759  0EBE                     i1l4256:	
 16760                           ;incstack = 0
 16761                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16762                           
 16763                           
 16764                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
 16765  0EBE  3001               	movlw	1
 16766  0EBF  00F0               	movwf	i2c_setBuffer@bufferSize
 16767  0EC0  3000               	movlw	0
 16768  0EC1  00F1               	movwf	i2c_setBuffer@bufferSize+1
 16769  0EC2  0879               	movf	rd1RegCompleteHandler@p,w
 16770  0EC3  318E  266B  318E   	fcall	_i2c_setBuffer
 16771  0EC6                     i1l4258:	
 16772                           
 16773                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 16774  0EC6  3000               	movlw	0
 16775  0EC7  00F5               	movwf	i2c_setDataCompleteCallback@cb
 16776  0EC8  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 16777  0EC9  01F7               	clrf	i2c_setDataCompleteCallback@p
 16778  0ECA  318E  2616  318E   	fcall	_i2c_setDataCompleteCallback
 16779  0ECD                     i1l4260:	
 16780                           
 16781                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
 16782  0ECD  3002               	movlw	2
 16783  0ECE                     i1l264:	
 16784  0ECE  0008               	return
 16785  0ECF                     __end_of_rd1RegCompleteHandler:	
 16786                           
 16787                           	psect	text73
 16788  0EAD                     __ptext73:	
 16789 ;; *************** function _wr1RegCompleteHandler *****************
 16790 ;; Defined at:
 16791 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16792 ;; Parameters:    Size  Location     Type
 16793 ;;  p               1    9[COMMON] PTR void 
 16794 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16795 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16796 ;; Auto vars:     Size  Location     Type
 16797 ;;		None
 16798 ;; Return value:  Size  Location     Type
 16799 ;;                  1    wreg      enum E358
 16800 ;; Registers used:
 16801 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16802 ;; Tracked objects:
 16803 ;;		On entry : 0/0
 16804 ;;		On exit  : 0/0
 16805 ;;		Unchanged: 0/0
 16806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16807 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16810 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16811 ;;Total ram usage:        1 bytes
 16812 ;; Hardware stack levels used:    1
 16813 ;; Hardware stack levels required when called:    2
 16814 ;; This function calls:
 16815 ;;		_i2c_setBuffer
 16816 ;;		_i2c_setDataCompleteCallback
 16817 ;; This function is called by:
 16818 ;;		_i2c_write1ByteRegister
 16819 ;;		_do_I2C_DO_ADDRESS_NACK
 16820 ;;		_do_I2C_TX
 16821 ;;		_do_I2C_RX
 16822 ;;		_do_I2C_TX_EMPTY
 16823 ;; This function uses a non-reentrant model
 16824 ;;
 16825                           
 16826                           
 16827                           ;psect for function _wr1RegCompleteHandler
 16828  0EAD                     _wr1RegCompleteHandler:	
 16829  0EAD                     i1l4248:	
 16830                           ;incstack = 0
 16831                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16832                           
 16833                           
 16834                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
 16835  0EAD  3001               	movlw	1
 16836  0EAE  00F0               	movwf	i2c_setBuffer@bufferSize
 16837  0EAF  3000               	movlw	0
 16838  0EB0  00F1               	movwf	i2c_setBuffer@bufferSize+1
 16839  0EB1  0879               	movf	wr1RegCompleteHandler@p,w
 16840  0EB2  318E  266B  318E   	fcall	_i2c_setBuffer
 16841  0EB5                     i1l4250:	
 16842                           
 16843                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 16844  0EB5  3000               	movlw	0
 16845  0EB6  00F5               	movwf	i2c_setDataCompleteCallback@cb
 16846  0EB7  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 16847  0EB8  01F7               	clrf	i2c_setDataCompleteCallback@p
 16848  0EB9  318E  2616  318E   	fcall	_i2c_setDataCompleteCallback
 16849  0EBC                     i1l4252:	
 16850                           
 16851                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
 16852  0EBC  3004               	movlw	4
 16853  0EBD                     i1l243:	
 16854  0EBD  0008               	return
 16855  0EBE                     __end_of_wr1RegCompleteHandler:	
 16856                           
 16857                           	psect	text74
 16858  0002                     __ptext74:	
 16859 ;; *************** function _returnReset *****************
 16860 ;; Defined at:
 16861 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 16862 ;; Parameters:    Size  Location     Type
 16863 ;;  p               1    9[COMMON] PTR void 
 16864 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16865 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16866 ;; Auto vars:     Size  Location     Type
 16867 ;;		None
 16868 ;; Return value:  Size  Location     Type
 16869 ;;                  1    wreg      enum E12568
 16870 ;; Registers used:
 16871 ;;		wreg
 16872 ;; Tracked objects:
 16873 ;;		On entry : 0/0
 16874 ;;		On exit  : 0/0
 16875 ;;		Unchanged: 0/0
 16876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16877 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16880 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16881 ;;Total ram usage:        1 bytes
 16882 ;; Hardware stack levels used:    1
 16883 ;; This function calls:
 16884 ;;		Nothing
 16885 ;; This function is called by:
 16886 ;;		_i2c_open
 16887 ;;		_do_I2C_DO_ADDRESS_NACK
 16888 ;;		_do_I2C_TX
 16889 ;;		_do_I2C_RX
 16890 ;;		_do_I2C_TX_EMPTY
 16891 ;; This function uses a non-reentrant model
 16892 ;;
 16893                           
 16894                           
 16895                           ;psect for function _returnReset
 16896  0002                     _returnReset:	
 16897  0002                     i1l4244:	
 16898                           ;incstack = 0
 16899                           ; Regs used in _returnReset: [wreg]
 16900                           
 16901                           
 16902                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 16903  0002  3005               	movlw	5
 16904  0003                     i1l219:	
 16905  0003  0008               	return
 16906  0004                     __end_of_returnReset:	
 16907                           
 16908                           	psect	text75
 16909  0D02                     __ptext75:	
 16910 ;; *************** function _returnStop *****************
 16911 ;; Defined at:
 16912 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 16913 ;; Parameters:    Size  Location     Type
 16914 ;;  p               1    9[COMMON] PTR void 
 16915 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16916 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16917 ;; Auto vars:     Size  Location     Type
 16918 ;;		None
 16919 ;; Return value:  Size  Location     Type
 16920 ;;                  1    wreg      enum E12568
 16921 ;; Registers used:
 16922 ;;		wreg
 16923 ;; Tracked objects:
 16924 ;;		On entry : 0/0
 16925 ;;		On exit  : 0/0
 16926 ;;		Unchanged: 0/0
 16927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16928 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16931 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16932 ;;Total ram usage:        1 bytes
 16933 ;; Hardware stack levels used:    1
 16934 ;; This function calls:
 16935 ;;		Nothing
 16936 ;; This function is called by:
 16937 ;;		_setCallBack
 16938 ;;		_i2c_open
 16939 ;;		_do_I2C_DO_ADDRESS_NACK
 16940 ;;		_do_I2C_TX
 16941 ;;		_do_I2C_RX
 16942 ;;		_do_I2C_TX_EMPTY
 16943 ;; This function uses a non-reentrant model
 16944 ;;
 16945                           
 16946                           
 16947                           ;psect for function _returnStop
 16948  0D02                     _returnStop:	
 16949  0D02                     i1l4240:	
 16950                           ;incstack = 0
 16951                           ; Regs used in _returnStop: [wreg]
 16952                           
 16953                           
 16954                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
 16955  0D02  3001               	movlw	1
 16956  0D03                     i1l216:	
 16957  0D03  0008               	return
 16958  0D04                     __end_of_returnStop:	
 16959                           
 16960                           	psect	text76
 16961  0D00                     __ptext76:	
 16962 ;; *************** function _i2c_restartWrite *****************
 16963 ;; Defined at:
 16964 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 16965 ;; Parameters:    Size  Location     Type
 16966 ;;  p               1    9[COMMON] PTR void 
 16967 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16968 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16969 ;; Auto vars:     Size  Location     Type
 16970 ;;		None
 16971 ;; Return value:  Size  Location     Type
 16972 ;;                  1    wreg      enum E358
 16973 ;; Registers used:
 16974 ;;		wreg
 16975 ;; Tracked objects:
 16976 ;;		On entry : 0/0
 16977 ;;		On exit  : 0/0
 16978 ;;		Unchanged: 0/0
 16979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16980 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16983 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16984 ;;Total ram usage:        1 bytes
 16985 ;; Hardware stack levels used:    1
 16986 ;; This function calls:
 16987 ;;		Nothing
 16988 ;; This function is called by:
 16989 ;;		_i2c_write1ByteRegister
 16990 ;;		_i2c_writeNBytes
 16991 ;;		_i2c_read1ByteRegister
 16992 ;;		_i2c_read2ByteRegister
 16993 ;;		_i2c_write2ByteRegister
 16994 ;;		_i2c_readDataBlock
 16995 ;;		_do_I2C_DO_ADDRESS_NACK
 16996 ;;		_do_I2C_TX
 16997 ;;		_do_I2C_RX
 16998 ;;		_do_I2C_TX_EMPTY
 16999 ;; This function uses a non-reentrant model
 17000 ;;
 17001                           
 17002                           
 17003                           ;psect for function _i2c_restartWrite
 17004  0D00                     _i2c_restartWrite:	
 17005  0D00                     i1l4176:	
 17006                           ;incstack = 0
 17007                           ; Regs used in _i2c_restartWrite: [wreg]
 17008                           
 17009                           
 17010                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
 17011  0D00  3003               	movlw	3
 17012  0D01                     i1l9:	
 17013  0D01  0008               	return
 17014  0D02                     __end_of_i2c_restartWrite:	
 17015                           
 17016                           	psect	text77
 17017  0E9C                     __ptext77:	
 17018 ;; *************** function _wr2RegCompleteHandler *****************
 17019 ;; Defined at:
 17020 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17021 ;; Parameters:    Size  Location     Type
 17022 ;;  p               1    9[COMMON] PTR void 
 17023 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17024 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17025 ;; Auto vars:     Size  Location     Type
 17026 ;;		None
 17027 ;; Return value:  Size  Location     Type
 17028 ;;                  1    wreg      enum E358
 17029 ;; Registers used:
 17030 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17031 ;; Tracked objects:
 17032 ;;		On entry : 0/0
 17033 ;;		On exit  : 0/0
 17034 ;;		Unchanged: 0/0
 17035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17036 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17039 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17040 ;;Total ram usage:        1 bytes
 17041 ;; Hardware stack levels used:    1
 17042 ;; Hardware stack levels required when called:    2
 17043 ;; This function calls:
 17044 ;;		_i2c_setBuffer
 17045 ;;		_i2c_setDataCompleteCallback
 17046 ;; This function is called by:
 17047 ;;		_i2c_write2ByteRegister
 17048 ;;		_do_I2C_DO_ADDRESS_NACK
 17049 ;;		_do_I2C_TX
 17050 ;;		_do_I2C_RX
 17051 ;;		_do_I2C_TX_EMPTY
 17052 ;; This function uses a non-reentrant model
 17053 ;;
 17054                           
 17055                           
 17056                           ;psect for function _wr2RegCompleteHandler
 17057  0E9C                     _wr2RegCompleteHandler:	
 17058  0E9C                     i1l4272:	
 17059                           ;incstack = 0
 17060                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17061                           
 17062                           
 17063                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
 17064  0E9C  3002               	movlw	2
 17065  0E9D  00F0               	movwf	i2c_setBuffer@bufferSize
 17066  0E9E  3000               	movlw	0
 17067  0E9F  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17068  0EA0  0879               	movf	wr2RegCompleteHandler@p,w
 17069  0EA1  318E  266B  318E   	fcall	_i2c_setBuffer
 17070  0EA4                     i1l4274:	
 17071                           
 17072                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 17073  0EA4  3000               	movlw	0
 17074  0EA5  00F5               	movwf	i2c_setDataCompleteCallback@cb
 17075  0EA6  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 17076  0EA7  01F7               	clrf	i2c_setDataCompleteCallback@p
 17077  0EA8  318E  2616  318E   	fcall	_i2c_setDataCompleteCallback
 17078  0EAB                     i1l4276:	
 17079                           
 17080                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
 17081  0EAB  3004               	movlw	4
 17082  0EAC                     i1l291:	
 17083  0EAC  0008               	return
 17084  0EAD                     __end_of_wr2RegCompleteHandler:	
 17085                           
 17086                           	psect	text78
 17087  0E16                     __ptext78:	
 17088 ;; *************** function _i2c_setDataCompleteCallback *****************
 17089 ;; Defined at:
 17090 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 17091 ;; Parameters:    Size  Location     Type
 17092 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 17093 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 17094 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 17095 ;;  p               1    7[COMMON] PTR void 
 17096 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17097 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17098 ;; Auto vars:     Size  Location     Type
 17099 ;;		None
 17100 ;; Return value:  Size  Location     Type
 17101 ;;                  1    wreg      void 
 17102 ;; Registers used:
 17103 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17104 ;; Tracked objects:
 17105 ;;		On entry : 0/0
 17106 ;;		On exit  : 0/0
 17107 ;;		Unchanged: 0/0
 17108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17109 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17111 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17112 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17113 ;;Total ram usage:        4 bytes
 17114 ;; Hardware stack levels used:    1
 17115 ;; Hardware stack levels required when called:    1
 17116 ;; This function calls:
 17117 ;;		_setCallBack
 17118 ;; This function is called by:
 17119 ;;		_wr1RegCompleteHandler
 17120 ;;		_rd1RegCompleteHandler
 17121 ;;		_rd2RegCompleteHandler
 17122 ;;		_wr2RegCompleteHandler
 17123 ;;		_rdBlkRegCompleteHandler
 17124 ;;		_i2c_write1ByteRegister
 17125 ;;		_i2c_read1ByteRegister
 17126 ;;		_i2c_read2ByteRegister
 17127 ;;		_i2c_write2ByteRegister
 17128 ;;		_i2c_readDataBlock
 17129 ;; This function uses a non-reentrant model
 17130 ;;
 17131                           
 17132                           
 17133                           ;psect for function _i2c_setDataCompleteCallback
 17134  0E16                     _i2c_setDataCompleteCallback:	
 17135  0E16                     i1l4082:	
 17136                           ;incstack = 0
 17137                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 17138                           
 17139                           
 17140                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
 17141  0E16  0876               	movf	i2c_setDataCompleteCallback@cb+1,w
 17142  0E17  00F1               	movwf	setCallBack@cb+1
 17143  0E18  0875               	movf	i2c_setDataCompleteCallback@cb,w
 17144  0E19  00F0               	movwf	setCallBack@cb
 17145  0E1A  0877               	movf	i2c_setDataCompleteCallback@p,w
 17146  0E1B  00F8               	movwf	??_i2c_setDataCompleteCallback
 17147  0E1C  0878               	movf	??_i2c_setDataCompleteCallback,w
 17148  0E1D  00F2               	movwf	setCallBack@p
 17149  0E1E  3000               	movlw	0
 17150  0E1F  3187  2712  318E   	fcall	_setCallBack
 17151  0E22                     i1l73:	
 17152  0E22  0008               	return
 17153  0E23                     __end_of_i2c_setDataCompleteCallback:	
 17154                           
 17155                           	psect	text79
 17156  0712                     __ptext79:	
 17157 ;; *************** function _setCallBack *****************
 17158 ;; Defined at:
 17159 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 17160 ;; Parameters:    Size  Location     Type
 17161 ;;  idx             1    wreg     enum E12740
 17162 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 17163 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 17164 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), i2c_restartWrite(1), 
 17165 ;;  p               1    2[COMMON] PTR void 
 17166 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17167 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17168 ;; Auto vars:     Size  Location     Type
 17169 ;;  idx             1    4[COMMON] enum E12740
 17170 ;; Return value:  Size  Location     Type
 17171 ;;                  1    wreg      void 
 17172 ;; Registers used:
 17173 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17174 ;; Tracked objects:
 17175 ;;		On entry : 0/0
 17176 ;;		On exit  : 0/0
 17177 ;;		Unchanged: 0/0
 17178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17179 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17180 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17181 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17182 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17183 ;;Total ram usage:        5 bytes
 17184 ;; Hardware stack levels used:    1
 17185 ;; This function calls:
 17186 ;;		Nothing
 17187 ;; This function is called by:
 17188 ;;		_i2c_setDataCompleteCallback
 17189 ;;		_i2c_setWriteCollisionCallback
 17190 ;;		_i2c_setAddressNACKCallback
 17191 ;;		_i2c_setDataNACKCallback
 17192 ;;		_i2c_setTimeOutCallback
 17193 ;; This function uses a non-reentrant model
 17194 ;;
 17195                           
 17196                           
 17197                           ;psect for function _setCallBack
 17198  0712                     _setCallBack:	
 17199                           
 17200                           ;incstack = 0
 17201                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 17202                           ;setCallBack@idx stored from wreg
 17203  0712  00F4               	movwf	setCallBack@idx
 17204  0713                     i1l4076:	
 17205                           
 17206                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
 17207  0713  0870               	movf	setCallBack@cb,w
 17208  0714  0471               	iorwf	setCallBack@cb+1,w
 17209  0715  1903               	btfsc	3,2
 17210  0716  2F18               	goto	u162_21
 17211  0717  2F19               	goto	u162_20
 17212  0718                     u162_21:	
 17213  0718  2F2A               	goto	i1l4080
 17214  0719                     u162_20:	
 17215  0719                     i1l4078:	
 17216                           
 17217                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
 17218  0719  3574               	lslf	setCallBack@idx,w
 17219  071A  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 17220  071B  0086               	movwf	6
 17221  071C  0187               	clrf	7
 17222  071D  0870               	movf	setCallBack@cb,w
 17223  071E  3FC0               	movwi [0]fsr1
 17224  071F  0871               	movf	setCallBack@cb+1,w
 17225  0720  3FC1               	movwi [1]fsr1
 17226                           
 17227                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
 17228  0721  0872               	movf	setCallBack@p,w
 17229  0722  00F3               	movwf	??_setCallBack
 17230  0723  0874               	movf	setCallBack@idx,w
 17231  0724  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 17232  0725  0086               	movwf	6
 17233  0726  0187               	clrf	7
 17234  0727  0873               	movf	??_setCallBack,w
 17235  0728  0081               	movwf	1
 17236                           
 17237                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
 17238  0729  2F37               	goto	i1l224
 17239  072A                     i1l4080:	
 17240                           
 17241                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
 17242  072A  3574               	lslf	setCallBack@idx,w
 17243  072B  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 17244  072C  0086               	movwf	6
 17245  072D  0187               	clrf	7
 17246  072E  3002               	movlw	low _returnStop
 17247  072F  3FC0               	movwi [0]fsr1
 17248  0730  300D               	movlw	high _returnStop
 17249  0731  3FC1               	movwi [1]fsr1
 17250                           
 17251                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
 17252  0732  0874               	movf	setCallBack@idx,w
 17253  0733  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 17254  0734  0086               	movwf	6
 17255  0735  0187               	clrf	7
 17256  0736  0181               	clrf	1
 17257  0737                     i1l224:	
 17258  0737  0008               	return
 17259  0738                     __end_of_setCallBack:	
 17260                           
 17261                           	psect	text80
 17262  0E6B                     __ptext80:	
 17263 ;; *************** function _i2c_setBuffer *****************
 17264 ;; Defined at:
 17265 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 17266 ;; Parameters:    Size  Location     Type
 17267 ;;  buffer          1    wreg     PTR void 
 17268 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 17269 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 17270 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 17271 ;;  bufferSize      2    0[COMMON] unsigned int 
 17272 ;; Auto vars:     Size  Location     Type
 17273 ;;  buffer          1    3[COMMON] PTR void 
 17274 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 17275 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 17276 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 17277 ;; Return value:  Size  Location     Type
 17278 ;;                  1    wreg      void 
 17279 ;; Registers used:
 17280 ;;		wreg
 17281 ;; Tracked objects:
 17282 ;;		On entry : 0/0
 17283 ;;		On exit  : 0/0
 17284 ;;		Unchanged: 0/0
 17285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17286 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17287 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17288 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17289 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17290 ;;Total ram usage:        4 bytes
 17291 ;; Hardware stack levels used:    1
 17292 ;; This function calls:
 17293 ;;		Nothing
 17294 ;; This function is called by:
 17295 ;;		_wr1RegCompleteHandler
 17296 ;;		_rd1RegCompleteHandler
 17297 ;;		_rd2RegCompleteHandler
 17298 ;;		_wr2RegCompleteHandler
 17299 ;;		_rdBlkRegCompleteHandler
 17300 ;;		_i2c_write1ByteRegister
 17301 ;;		_i2c_writeNBytes
 17302 ;;		_i2c_read1ByteRegister
 17303 ;;		_i2c_read2ByteRegister
 17304 ;;		_i2c_write2ByteRegister
 17305 ;;		_i2c_readDataBlock
 17306 ;;		_i2c_readNBytes
 17307 ;; This function uses a non-reentrant model
 17308 ;;
 17309                           
 17310                           
 17311                           ;psect for function _i2c_setBuffer
 17312  0E6B                     _i2c_setBuffer:	
 17313                           
 17314                           ;incstack = 0
 17315                           ; Regs used in _i2c_setBuffer: [wreg]
 17316                           ;i2c_setBuffer@buffer stored from wreg
 17317  0E6B  00F3               	movwf	i2c_setBuffer@buffer
 17318  0E6C                     i1l4084:	
 17319                           
 17320                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
 17321  0E6C  0021               	movlb	1	; select bank1
 17322  0E6D  1D20               	btfss	_i2c_status^(0+128),2
 17323  0E6E  2E70               	goto	u163_21
 17324  0E6F  2E71               	goto	u163_20
 17325  0E70                     u163_21:	
 17326  0E70  2E7A               	goto	i1l103
 17327  0E71                     u163_20:	
 17328  0E71                     i1l4086:	
 17329                           
 17330                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
 17331  0E71  0873               	movf	i2c_setBuffer@buffer,w
 17332  0E72  00F2               	movwf	??_i2c_setBuffer
 17333  0E73  0872               	movf	??_i2c_setBuffer,w
 17334  0E74  00A2               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 17335                           
 17336                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
 17337  0E75  0871               	movf	i2c_setBuffer@bufferSize+1,w
 17338  0E76  00A4               	movwf	((_i2c_status+1)^(0+128)+3)
 17339  0E77  0870               	movf	i2c_setBuffer@bufferSize,w
 17340  0E78  00A3               	movwf	(_i2c_status^(0+128)+3)
 17341  0E79                     i1l4088:	
 17342                           
 17343                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
 17344  0E79  1120               	bcf	_i2c_status^(0+128),2
 17345  0E7A                     i1l103:	
 17346  0E7A  0008               	return
 17347  0E7B                     __end_of_i2c_setBuffer:	
 17348                           
 17349                           	psect	text81
 17350  0D0A                     __ptext81:	
 17351 ;; *************** function _i2c1_driver_stop *****************
 17352 ;; Defined at:
 17353 ;;		line 157 in file "mcc_generated_files/i2c1_driver.c"
 17354 ;; Parameters:    Size  Location     Type
 17355 ;;		None
 17356 ;; Auto vars:     Size  Location     Type
 17357 ;;		None
 17358 ;; Return value:  Size  Location     Type
 17359 ;;                  1    wreg      void 
 17360 ;; Registers used:
 17361 ;;		None
 17362 ;; Tracked objects:
 17363 ;;		On entry : 0/0
 17364 ;;		On exit  : 0/0
 17365 ;;		Unchanged: 0/0
 17366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17371 ;;Total ram usage:        0 bytes
 17372 ;; Hardware stack levels used:    1
 17373 ;; This function calls:
 17374 ;;		Nothing
 17375 ;; This function is called by:
 17376 ;;		_do_I2C_SEND_STOP
 17377 ;; This function uses a non-reentrant model
 17378 ;;
 17379                           
 17380                           
 17381                           ;psect for function _i2c1_driver_stop
 17382  0D0A                     _i2c1_driver_stop:	
 17383  0D0A                     i1l4092:	
 17384                           ;incstack = 0
 17385                           ; Regs used in _i2c1_driver_stop: []
 17386                           
 17387                           
 17388                           ;mcc_generated_files/i2c1_driver.c: 159:     SSP1CON2bits.PEN = 1;
 17389  0D0A  0023               	movlb	3	; select bank3
 17390  0D0B  1511               	bsf	17,2	;volatile
 17391  0D0C                     i1l611:	
 17392  0D0C  0008               	return
 17393  0D0D                     __end_of_i2c1_driver_stop:	
 17394                           
 17395                           	psect	text82
 17396  0D07                     __ptext82:	
 17397 ;; *************** function _i2c1_driver_restart *****************
 17398 ;; Defined at:
 17399 ;;		line 152 in file "mcc_generated_files/i2c1_driver.c"
 17400 ;; Parameters:    Size  Location     Type
 17401 ;;		None
 17402 ;; Auto vars:     Size  Location     Type
 17403 ;;		None
 17404 ;; Return value:  Size  Location     Type
 17405 ;;                  1    wreg      void 
 17406 ;; Registers used:
 17407 ;;		None
 17408 ;; Tracked objects:
 17409 ;;		On entry : 0/0
 17410 ;;		On exit  : 0/0
 17411 ;;		Unchanged: 0/0
 17412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17417 ;;Total ram usage:        0 bytes
 17418 ;; Hardware stack levels used:    1
 17419 ;; This function calls:
 17420 ;;		Nothing
 17421 ;; This function is called by:
 17422 ;;		_do_I2C_SEND_RESTART_READ
 17423 ;;		_do_I2C_SEND_RESTART_WRITE
 17424 ;;		_do_I2C_SEND_RESTART
 17425 ;; This function uses a non-reentrant model
 17426 ;;
 17427                           
 17428                           
 17429                           ;psect for function _i2c1_driver_restart
 17430  0D07                     _i2c1_driver_restart:	
 17431  0D07                     i1l4090:	
 17432                           ;incstack = 0
 17433                           ; Regs used in _i2c1_driver_restart: []
 17434                           
 17435                           
 17436                           ;mcc_generated_files/i2c1_driver.c: 154:     SSP1CON2bits.RSEN = 1;
 17437  0D07  0023               	movlb	3	; select bank3
 17438  0D08  1491               	bsf	17,1	;volatile
 17439  0D09                     i1l608:	
 17440  0D09  0008               	return
 17441  0D0A                     __end_of_i2c1_driver_restart:	
 17442                           
 17443                           	psect	text83
 17444  0D1F                     __ptext83:	
 17445 ;; *************** function _i2c1_driver_sendACK *****************
 17446 ;; Defined at:
 17447 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
 17448 ;; Parameters:    Size  Location     Type
 17449 ;;		None
 17450 ;; Auto vars:     Size  Location     Type
 17451 ;;		None
 17452 ;; Return value:  Size  Location     Type
 17453 ;;                  1    wreg      void 
 17454 ;; Registers used:
 17455 ;;		None
 17456 ;; Tracked objects:
 17457 ;;		On entry : 0/0
 17458 ;;		On exit  : 0/0
 17459 ;;		Unchanged: 0/0
 17460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17465 ;;Total ram usage:        0 bytes
 17466 ;; Hardware stack levels used:    1
 17467 ;; This function calls:
 17468 ;;		Nothing
 17469 ;; This function is called by:
 17470 ;;		_do_I2C_DO_ACK
 17471 ;;		_do_I2C_RX
 17472 ;; This function uses a non-reentrant model
 17473 ;;
 17474                           
 17475                           
 17476                           ;psect for function _i2c1_driver_sendACK
 17477  0D1F                     _i2c1_driver_sendACK:	
 17478  0D1F                     i1l4216:	
 17479                           ;incstack = 0
 17480                           ; Regs used in _i2c1_driver_sendACK: []
 17481                           
 17482                           
 17483                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKDT = 0;
 17484  0D1F  0023               	movlb	3	; select bank3
 17485  0D20  1291               	bcf	17,5	;volatile
 17486                           
 17487                           ;mcc_generated_files/i2c1_driver.c: 200:     SSP1CON2bits.ACKEN = 1;
 17488  0D21  1611               	bsf	17,4	;volatile
 17489  0D22                     i1l635:	
 17490  0D22  0008               	return
 17491  0D23                     __end_of_i2c1_driver_sendACK:	
 17492                           
 17493                           	psect	text84
 17494  0E4D                     __ptext84:	
 17495 ;; *************** function _TMR2_ISR *****************
 17496 ;; Defined at:
 17497 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 17498 ;; Parameters:    Size  Location     Type
 17499 ;;		None
 17500 ;; Auto vars:     Size  Location     Type
 17501 ;;		None
 17502 ;; Return value:  Size  Location     Type
 17503 ;;                  1    wreg      void 
 17504 ;; Registers used:
 17505 ;;		wreg, status,2, status,0, pclath, cstack
 17506 ;; Tracked objects:
 17507 ;;		On entry : 0/0
 17508 ;;		On exit  : 0/0
 17509 ;;		Unchanged: 0/0
 17510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17515 ;;Total ram usage:        0 bytes
 17516 ;; Hardware stack levels used:    1
 17517 ;; Hardware stack levels required when called:    1
 17518 ;; This function calls:
 17519 ;;		Absolute function
 17520 ;;		_TMR2_DefaultInterruptHandler
 17521 ;;		_handler_clock_ms
 17522 ;; This function is called by:
 17523 ;;		_INTERRUPT_InterruptManager
 17524 ;; This function uses a non-reentrant model
 17525 ;;
 17526                           
 17527                           
 17528                           ;psect for function _TMR2_ISR
 17529  0E4D                     _TMR2_ISR:	
 17530  0E4D                     i1l4964:	
 17531                           ;incstack = 0
 17532                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 17533                           
 17534                           
 17535                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
 17536  0E4D  002E               	movlb	14	; select bank14
 17537  0E4E  1090               	bcf	16,1	;volatile
 17538  0E4F                     i1l4966:	
 17539                           
 17540                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
 17541  0E4F  0020               	movlb	0	; select bank0
 17542  0E50  085D               	movf	_TMR2_InterruptHandler,w
 17543  0E51  045E               	iorwf	_TMR2_InterruptHandler+1,w
 17544  0E52  1903               	btfsc	3,2
 17545  0E53  2E55               	goto	u217_21
 17546  0E54  2E56               	goto	u217_20
 17547  0E55                     u217_21:	
 17548  0E55  2E5B               	goto	i1l1038
 17549  0E56                     u217_20:	
 17550  0E56                     i1l4968:	
 17551                           
 17552                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
 17553  0E56  085E               	movf	_TMR2_InterruptHandler+1,w
 17554  0E57  008A               	movwf	10
 17555  0E58  085D               	movf	_TMR2_InterruptHandler,w
 17556  0E59  000A               	callw
 17557  0E5A  318E               	pagesel	$
 17558  0E5B                     i1l1038:	
 17559  0E5B  0008               	return
 17560  0E5C                     __end_of_TMR2_ISR:	
 17561                           
 17562                           	psect	text85
 17563  0CFE                     __ptext85:	
 17564 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 17565 ;; Defined at:
 17566 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 17567 ;; Parameters:    Size  Location     Type
 17568 ;;		None
 17569 ;; Auto vars:     Size  Location     Type
 17570 ;;		None
 17571 ;; Return value:  Size  Location     Type
 17572 ;;                  1    wreg      void 
 17573 ;; Registers used:
 17574 ;;		None
 17575 ;; Tracked objects:
 17576 ;;		On entry : 0/0
 17577 ;;		On exit  : 0/0
 17578 ;;		Unchanged: 0/0
 17579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17584 ;;Total ram usage:        0 bytes
 17585 ;; Hardware stack levels used:    1
 17586 ;; This function calls:
 17587 ;;		Nothing
 17588 ;; This function is called by:
 17589 ;;		_TMR2_Initialize
 17590 ;;		_TMR2_ISR
 17591 ;; This function uses a non-reentrant model
 17592 ;;
 17593                           
 17594                           
 17595                           ;psect for function _TMR2_DefaultInterruptHandler
 17596  0CFE                     _TMR2_DefaultInterruptHandler:	
 17597  0CFE                     i1l1044:	
 17598                           ;incstack = 0
 17599                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 17600                           
 17601  0CFE  0008               	return
 17602  0CFF                     __end_of_TMR2_DefaultInterruptHandler:	
 17603                           
 17604                           	psect	text86
 17605  0E09                     __ptext86:	
 17606 ;; *************** function _handler_clock_ms *****************
 17607 ;; Defined at:
 17608 ;;		line 441 in file "main.c"
 17609 ;; Parameters:    Size  Location     Type
 17610 ;;		None
 17611 ;; Auto vars:     Size  Location     Type
 17612 ;;		None
 17613 ;; Return value:  Size  Location     Type
 17614 ;;                  1    wreg      void 
 17615 ;; Registers used:
 17616 ;;		wreg, status,2, status,0
 17617 ;; Tracked objects:
 17618 ;;		On entry : 0/0
 17619 ;;		On exit  : 0/0
 17620 ;;		Unchanged: 0/0
 17621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17624 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17625 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17626 ;;Total ram usage:        1 bytes
 17627 ;; Hardware stack levels used:    1
 17628 ;; This function calls:
 17629 ;;		Nothing
 17630 ;; This function is called by:
 17631 ;;		_main
 17632 ;;		_TMR2_ISR
 17633 ;; This function uses a non-reentrant model
 17634 ;;
 17635                           
 17636                           
 17637                           ;psect for function _handler_clock_ms
 17638  0E09                     _handler_clock_ms:	
 17639  0E09                     i1l4834:	
 17640                           ;incstack = 0
 17641                           ; Regs used in _handler_clock_ms: [wreg+status,2+status,0]
 17642                           
 17643                           
 17644                           ;main.c: 442:     clkms++;
 17645  0E09  3001               	movlw	1
 17646  0E0A  00F0               	movwf	??_handler_clock_ms
 17647  0E0B  0870               	movf	??_handler_clock_ms,w
 17648  0E0C  0020               	movlb	0	; select bank0
 17649  0E0D  07BC               	addwf	_clkms,f	;volatile
 17650  0E0E                     i1l4836:	
 17651                           
 17652                           ;main.c: 444:     if(clkms > 200){
 17653  0E0E  30C9               	movlw	201
 17654  0E0F  023C               	subwf	_clkms,w	;volatile
 17655  0E10  1C03               	skipc
 17656  0E11  2E13               	goto	u206_21
 17657  0E12  2E14               	goto	u206_20
 17658  0E13                     u206_21:	
 17659  0E13  2E15               	goto	i1l1308
 17660  0E14                     u206_20:	
 17661  0E14                     i1l4838:	
 17662                           
 17663                           ;main.c: 445:         clkms = 0;
 17664  0E14  01BC               	clrf	_clkms	;volatile
 17665  0E15                     i1l1308:	
 17666  0E15  0008               	return
 17667  0E16                     __end_of_handler_clock_ms:	
 17668                           
 17669                           	psect	text87
 17670  0F37                     __ptext87:	
 17671 ;; *************** function _TMR1_ISR *****************
 17672 ;; Defined at:
 17673 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 17674 ;; Parameters:    Size  Location     Type
 17675 ;;		None
 17676 ;; Auto vars:     Size  Location     Type
 17677 ;;		None
 17678 ;; Return value:  Size  Location     Type
 17679 ;;                  1    wreg      void 
 17680 ;; Registers used:
 17681 ;;		wreg, status,2, status,0, pclath, cstack
 17682 ;; Tracked objects:
 17683 ;;		On entry : 0/0
 17684 ;;		On exit  : 0/0
 17685 ;;		Unchanged: 0/0
 17686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17691 ;;Total ram usage:        0 bytes
 17692 ;; Hardware stack levels used:    1
 17693 ;; Hardware stack levels required when called:    1
 17694 ;; This function calls:
 17695 ;;		Absolute function
 17696 ;;		_TMR1_DefaultInterruptHandler
 17697 ;;		_TMR1_WriteTimer
 17698 ;;		_handler_clock_hms
 17699 ;; This function is called by:
 17700 ;;		_INTERRUPT_InterruptManager
 17701 ;; This function uses a non-reentrant model
 17702 ;;
 17703                           
 17704                           
 17705                           ;psect for function _TMR1_ISR
 17706  0F37                     _TMR1_ISR:	
 17707  0F37                     i1l4956:	
 17708                           ;incstack = 0
 17709                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 17710                           
 17711                           
 17712                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 17713  0F37  002E               	movlb	14	; select bank14
 17714  0F38  1010               	bcf	16,0	;volatile
 17715  0F39                     i1l4958:	
 17716                           
 17717                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 17718  0F39  0020               	movlb	0	; select bank0
 17719  0F3A  0862               	movf	_timer1ReloadVal+1,w	;volatile
 17720  0F3B  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 17721  0F3C  0861               	movf	_timer1ReloadVal,w	;volatile
 17722  0F3D  00F0               	movwf	TMR1_WriteTimer@timerVal
 17723  0F3E  318E  268B  318F   	fcall	_TMR1_WriteTimer
 17724  0F41                     i1l4960:	
 17725                           
 17726                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 17727  0F41  0020               	movlb	0	; select bank0
 17728  0F42  085F               	movf	_TMR1_InterruptHandler,w
 17729  0F43  0460               	iorwf	_TMR1_InterruptHandler+1,w
 17730  0F44  1903               	btfsc	3,2
 17731  0F45  2F47               	goto	u216_21
 17732  0F46  2F48               	goto	u216_20
 17733  0F47                     u216_21:	
 17734  0F47  2F4D               	goto	i1l896
 17735  0F48                     u216_20:	
 17736  0F48                     i1l4962:	
 17737                           
 17738                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 17739  0F48  0860               	movf	_TMR1_InterruptHandler+1,w
 17740  0F49  008A               	movwf	10
 17741  0F4A  085F               	movf	_TMR1_InterruptHandler,w
 17742  0F4B  000A               	callw
 17743  0F4C  318F               	pagesel	$
 17744  0F4D                     i1l896:	
 17745  0F4D  0008               	return
 17746  0F4E                     __end_of_TMR1_ISR:	
 17747                           
 17748                           	psect	text88
 17749  0CFD                     __ptext88:	
 17750 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 17751 ;; Defined at:
 17752 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 17753 ;; Parameters:    Size  Location     Type
 17754 ;;		None
 17755 ;; Auto vars:     Size  Location     Type
 17756 ;;		None
 17757 ;; Return value:  Size  Location     Type
 17758 ;;                  1    wreg      void 
 17759 ;; Registers used:
 17760 ;;		None
 17761 ;; Tracked objects:
 17762 ;;		On entry : 0/0
 17763 ;;		On exit  : 0/0
 17764 ;;		Unchanged: 0/0
 17765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17770 ;;Total ram usage:        0 bytes
 17771 ;; Hardware stack levels used:    1
 17772 ;; This function calls:
 17773 ;;		Nothing
 17774 ;; This function is called by:
 17775 ;;		_TMR1_Initialize
 17776 ;;		_TMR1_ISR
 17777 ;; This function uses a non-reentrant model
 17778 ;;
 17779                           
 17780                           
 17781                           ;psect for function _TMR1_DefaultInterruptHandler
 17782  0CFD                     _TMR1_DefaultInterruptHandler:	
 17783  0CFD                     i1l902:	
 17784                           ;incstack = 0
 17785                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 17786                           
 17787  0CFD  0008               	return
 17788  0CFE                     __end_of_TMR1_DefaultInterruptHandler:	
 17789                           
 17790                           	psect	text89
 17791  0691                     __ptext89:	
 17792 ;; *************** function _handler_clock_hms *****************
 17793 ;; Defined at:
 17794 ;;		line 424 in file "main.c"
 17795 ;; Parameters:    Size  Location     Type
 17796 ;;		None
 17797 ;; Auto vars:     Size  Location     Type
 17798 ;;		None
 17799 ;; Return value:  Size  Location     Type
 17800 ;;                  1    wreg      void 
 17801 ;; Registers used:
 17802 ;;		wreg, status,2, status,0
 17803 ;; Tracked objects:
 17804 ;;		On entry : 0/0
 17805 ;;		On exit  : 0/0
 17806 ;;		Unchanged: 0/0
 17807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17810 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17811 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17812 ;;Total ram usage:        1 bytes
 17813 ;; Hardware stack levels used:    1
 17814 ;; This function calls:
 17815 ;;		Nothing
 17816 ;; This function is called by:
 17817 ;;		_main
 17818 ;;		_TMR1_ISR
 17819 ;; This function uses a non-reentrant model
 17820 ;;
 17821                           
 17822                           
 17823                           ;psect for function _handler_clock_hms
 17824  0691                     _handler_clock_hms:	
 17825  0691                     i1l4816:	
 17826                           ;incstack = 0
 17827                           ; Regs used in _handler_clock_hms: [wreg+status,2+status,0]
 17828                           
 17829                           
 17830                           ;main.c: 426:     if(!config_mode){
 17831  0691  087D               	movf	_config_mode,w	;volatile
 17832  0692  1D03               	btfss	3,2
 17833  0693  2E95               	goto	u201_21
 17834  0694  2E96               	goto	u201_20
 17835  0695                     u201_21:	
 17836  0695  2EA2               	goto	i1l4820
 17837  0696                     u201_20:	
 17838  0696                     i1l4818:	
 17839  0696  1003               	clrc
 17840  0697  0020               	movlb	0	; select bank0
 17841  0698  1F96               	btfss	22,7	;volatile
 17842  0699  1403               	setc
 17843  069A  1803               	btfsc	3,0
 17844  069B  2E9D               	goto	u202_21
 17845  069C  2EA0               	goto	u202_20
 17846  069D                     u202_21:	
 17847  069D  0020               	movlb	0	; select bank0
 17848  069E  1796               	bsf	22,7	;volatile
 17849  069F  2EA2               	goto	u203_24
 17850  06A0                     u202_20:	
 17851  06A0  0020               	movlb	0	; select bank0
 17852  06A1  1396               	bcf	22,7	;volatile
 17853  06A2                     u203_24:	
 17854  06A2                     i1l4820:	
 17855                           
 17856                           ;main.c: 430:     seg++;
 17857  06A2  3001               	movlw	1
 17858  06A3  00F0               	movwf	??_handler_clock_hms
 17859  06A4  0870               	movf	??_handler_clock_hms,w
 17860  06A5  0020               	movlb	0	; select bank0
 17861  06A6  07BD               	addwf	_seg,f	;volatile
 17862  06A7                     i1l4822:	
 17863                           
 17864                           ;main.c: 431:     if(seg >= 60) {
 17865  06A7  303C               	movlw	60
 17866  06A8  023D               	subwf	_seg,w	;volatile
 17867  06A9  1C03               	skipc
 17868  06AA  2EAC               	goto	u204_21
 17869  06AB  2EAD               	goto	u204_20
 17870  06AC                     u204_21:	
 17871  06AC  2EBD               	goto	i1l1304
 17872  06AD                     u204_20:	
 17873  06AD                     i1l4824:	
 17874                           
 17875                           ;main.c: 432:         clkm++;
 17876  06AD  3001               	movlw	1
 17877  06AE  00F0               	movwf	??_handler_clock_hms
 17878  06AF  0870               	movf	??_handler_clock_hms,w
 17879  06B0  07BE               	addwf	_clkm,f	;volatile
 17880  06B1                     i1l4826:	
 17881                           
 17882                           ;main.c: 433:         seg = 0;
 17883  06B1  01BD               	clrf	_seg	;volatile
 17884  06B2                     i1l4828:	
 17885                           
 17886                           ;main.c: 434:         if(clkm >= 60) {
 17887  06B2  303C               	movlw	60
 17888  06B3  023E               	subwf	_clkm,w	;volatile
 17889  06B4  1C03               	skipc
 17890  06B5  2EB7               	goto	u205_21
 17891  06B6  2EB8               	goto	u205_20
 17892  06B7                     u205_21:	
 17893  06B7  2EBD               	goto	i1l1304
 17894  06B8                     u205_20:	
 17895  06B8                     i1l4830:	
 17896                           
 17897                           ;main.c: 435:             clkh++;
 17898  06B8  3001               	movlw	1
 17899  06B9  00F0               	movwf	??_handler_clock_hms
 17900  06BA  0870               	movf	??_handler_clock_hms,w
 17901  06BB  07BF               	addwf	_clkh,f	;volatile
 17902  06BC                     i1l4832:	
 17903                           
 17904                           ;main.c: 436:             clkm = 0;
 17905  06BC  01BE               	clrf	_clkm	;volatile
 17906  06BD                     i1l1304:	
 17907  06BD  0008               	return
 17908  06BE                     __end_of_handler_clock_hms:	
 17909                           
 17910                           	psect	text90
 17911  0E8B                     __ptext90:	
 17912 ;; *************** function _TMR1_WriteTimer *****************
 17913 ;; Defined at:
 17914 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 17915 ;; Parameters:    Size  Location     Type
 17916 ;;  timerVal        2    0[COMMON] unsigned short 
 17917 ;; Auto vars:     Size  Location     Type
 17918 ;;		None
 17919 ;; Return value:  Size  Location     Type
 17920 ;;                  1    wreg      void 
 17921 ;; Registers used:
 17922 ;;		wreg, status,2
 17923 ;; Tracked objects:
 17924 ;;		On entry : 0/0
 17925 ;;		On exit  : 0/0
 17926 ;;		Unchanged: 0/0
 17927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17928 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17931 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17932 ;;Total ram usage:        2 bytes
 17933 ;; Hardware stack levels used:    1
 17934 ;; This function calls:
 17935 ;;		Nothing
 17936 ;; This function is called by:
 17937 ;;		_TMR1_ISR
 17938 ;;		_TMR1_Reload
 17939 ;; This function uses a non-reentrant model
 17940 ;;
 17941                           
 17942                           
 17943                           ;psect for function _TMR1_WriteTimer
 17944  0E8B                     _TMR1_WriteTimer:	
 17945  0E8B                     i1l4720:	
 17946                           ;incstack = 0
 17947                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 17948                           
 17949                           
 17950                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 17951  0E8B  0024               	movlb	4	; select bank4
 17952  0E8C  1D0E               	btfss	14,2	;volatile
 17953  0E8D  2E8F               	goto	u194_21
 17954  0E8E  2E90               	goto	u194_20
 17955  0E8F                     u194_21:	
 17956  0E8F  2E97               	goto	i1l4730
 17957  0E90                     u194_20:	
 17958  0E90                     i1l4722:	
 17959                           
 17960                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 17961  0E90  100E               	bcf	14,0	;volatile
 17962  0E91                     i1l4724:	
 17963                           
 17964                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 17965  0E91  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 17966  0E92  008D               	movwf	13	;volatile
 17967  0E93                     i1l4726:	
 17968                           
 17969                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 17970  0E93  0870               	movf	TMR1_WriteTimer@timerVal,w
 17971  0E94  008C               	movwf	12	;volatile
 17972  0E95                     i1l4728:	
 17973                           
 17974                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 17975  0E95  140E               	bsf	14,0	;volatile
 17976                           
 17977                           ;mcc_generated_files/tmr1.c: 140:     }
 17978  0E96  2E9B               	goto	i1l883
 17979  0E97                     i1l4730:	
 17980                           
 17981                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 17982  0E97  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 17983  0E98  008D               	movwf	13	;volatile
 17984  0E99                     i1l4732:	
 17985                           
 17986                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 17987  0E99  0870               	movf	TMR1_WriteTimer@timerVal,w
 17988  0E9A  008C               	movwf	12	;volatile
 17989  0E9B                     i1l883:	
 17990  0E9B  0008               	return
 17991  0E9C                     __end_of_TMR1_WriteTimer:	
 17992                           
 17993                           	psect	text91
 17994  0E3E                     __ptext91:	
 17995 ;; *************** function _TMR0_ISR *****************
 17996 ;; Defined at:
 17997 ;;		line 123 in file "mcc_generated_files/tmr0.c"
 17998 ;; Parameters:    Size  Location     Type
 17999 ;;		None
 18000 ;; Auto vars:     Size  Location     Type
 18001 ;;		None
 18002 ;; Return value:  Size  Location     Type
 18003 ;;                  1    wreg      void 
 18004 ;; Registers used:
 18005 ;;		wreg, status,2, status,0, pclath, cstack
 18006 ;; Tracked objects:
 18007 ;;		On entry : 0/0
 18008 ;;		On exit  : 0/0
 18009 ;;		Unchanged: 0/0
 18010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18015 ;;Total ram usage:        0 bytes
 18016 ;; Hardware stack levels used:    1
 18017 ;; Hardware stack levels required when called:    2
 18018 ;; This function calls:
 18019 ;;		Absolute function
 18020 ;;		_ISR_3s
 18021 ;;		_TMR0_DefaultInterruptHandler
 18022 ;; This function is called by:
 18023 ;;		_INTERRUPT_InterruptManager
 18024 ;; This function uses a non-reentrant model
 18025 ;;
 18026                           
 18027                           
 18028                           ;psect for function _TMR0_ISR
 18029  0E3E                     _TMR0_ISR:	
 18030  0E3E                     i1l4950:	
 18031                           ;incstack = 0
 18032                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 18033                           
 18034                           
 18035                           ;mcc_generated_files/tmr0.c: 126:     PIR0bits.TMR0IF = 0;
 18036  0E3E  002E               	movlb	14	; select bank14
 18037  0E3F  128C               	bcf	12,5	;volatile
 18038  0E40                     i1l4952:	
 18039                           
 18040                           ;mcc_generated_files/tmr0.c: 127:     if(TMR0_InterruptHandler)
 18041  0E40  0020               	movlb	0	; select bank0
 18042  0E41  085B               	movf	_TMR0_InterruptHandler,w
 18043  0E42  045C               	iorwf	_TMR0_InterruptHandler+1,w
 18044  0E43  1903               	btfsc	3,2
 18045  0E44  2E46               	goto	u215_21
 18046  0E45  2E47               	goto	u215_20
 18047  0E46                     u215_21:	
 18048  0E46  2E4C               	goto	i1l1608
 18049  0E47                     u215_20:	
 18050  0E47                     i1l4954:	
 18051                           
 18052                           ;mcc_generated_files/tmr0.c: 128:     {;mcc_generated_files/tmr0.c: 129:         TMR0_In
      +                          terruptHandler();
 18053  0E47  085C               	movf	_TMR0_InterruptHandler+1,w
 18054  0E48  008A               	movwf	10
 18055  0E49  085B               	movf	_TMR0_InterruptHandler,w
 18056  0E4A  000A               	callw
 18057  0E4B  318E               	pagesel	$
 18058  0E4C                     i1l1608:	
 18059  0E4C  0008               	return
 18060  0E4D                     __end_of_TMR0_ISR:	
 18061                           
 18062                           	psect	text92
 18063  0F7E                     __ptext92:	
 18064 ;; *************** function _ISR_3s *****************
 18065 ;; Defined at:
 18066 ;;		line 127 in file "main.c"
 18067 ;; Parameters:    Size  Location     Type
 18068 ;;		None
 18069 ;; Auto vars:     Size  Location     Type
 18070 ;;		None
 18071 ;; Return value:  Size  Location     Type
 18072 ;;                  1    wreg      void 
 18073 ;; Registers used:
 18074 ;;		wreg, status,2, status,0, pclath, cstack
 18075 ;; Tracked objects:
 18076 ;;		On entry : 0/0
 18077 ;;		On exit  : 0/0
 18078 ;;		Unchanged: 0/0
 18079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18082 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18083 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18084 ;;Total ram usage:        1 bytes
 18085 ;; Hardware stack levels used:    1
 18086 ;; Hardware stack levels required when called:    1
 18087 ;; This function calls:
 18088 ;;		_TMR0_StopTimer
 18089 ;;		i1_PWM6_LoadDutyValue
 18090 ;; This function is called by:
 18091 ;;		_main
 18092 ;;		_TMR0_ISR
 18093 ;; This function uses a non-reentrant model
 18094 ;;
 18095                           
 18096                           
 18097                           ;psect for function _ISR_3s
 18098  0F7E                     _ISR_3s:	
 18099  0F7E                     i1l4734:	
 18100                           ;incstack = 0
 18101                           ; Regs used in _ISR_3s: [wreg+status,2+status,0+pclath+cstack]
 18102                           
 18103                           
 18104                           ;main.c: 129:     if (lum_threshold){
 18105  0F7E  0020               	movlb	0	; select bank0
 18106  0F7F  0820               	movf	_lum_threshold,w
 18107  0F80  0421               	iorwf	_lum_threshold+1,w
 18108  0F81  1903               	btfsc	3,2
 18109  0F82  2F84               	goto	u195_21
 18110  0F83  2F85               	goto	u195_20
 18111  0F84                     u195_21:	
 18112  0F84  2F91               	goto	i1l1197
 18113  0F85                     u195_20:	
 18114  0F85                     i1l4736:	
 18115                           
 18116                           ;main.c: 130:         PWM6_LoadDutyValue(1023);
 18117  0F85  30FF               	movlw	255
 18118  0F86  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 18119  0F87  3003               	movlw	3
 18120  0F88  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 18121  0F89  318E  26F5  318F   	fcall	i1_PWM6_LoadDutyValue
 18122  0F8C                     i1l4738:	
 18123                           
 18124                           ;main.c: 131:         alarm = 1;
 18125  0F8C  3001               	movlw	1
 18126  0F8D  00F4               	movwf	??_ISR_3s
 18127  0F8E  0874               	movf	??_ISR_3s,w
 18128  0F8F  0020               	movlb	0	; select bank0
 18129  0F90  00B8               	movwf	_alarm	;volatile
 18130  0F91                     i1l1197:	
 18131                           ;main.c: 133:     }
 18132                           
 18133                           
 18134                           ;main.c: 135:     TMR0_StopTimer();
 18135  0F91  318D  2504  318F   	fcall	_TMR0_StopTimer
 18136  0F94                     i1l4740:	
 18137                           
 18138                           ;main.c: 136:     PIE0bits.TMR0IE = 0;
 18139  0F94  002E               	movlb	14	; select bank14
 18140  0F95  1296               	bcf	22,5	;volatile
 18141  0F96                     i1l1198:	
 18142  0F96  0008               	return
 18143  0F97                     __end_of_ISR_3s:	
 18144                           
 18145                           	psect	text93
 18146  0CFC                     __ptext93:	
 18147 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 18148 ;; Defined at:
 18149 ;;		line 140 in file "mcc_generated_files/tmr0.c"
 18150 ;; Parameters:    Size  Location     Type
 18151 ;;		None
 18152 ;; Auto vars:     Size  Location     Type
 18153 ;;		None
 18154 ;; Return value:  Size  Location     Type
 18155 ;;                  1    wreg      void 
 18156 ;; Registers used:
 18157 ;;		None
 18158 ;; Tracked objects:
 18159 ;;		On entry : 0/0
 18160 ;;		On exit  : 0/0
 18161 ;;		Unchanged: 0/0
 18162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18167 ;;Total ram usage:        0 bytes
 18168 ;; Hardware stack levels used:    1
 18169 ;; This function calls:
 18170 ;;		Nothing
 18171 ;; This function is called by:
 18172 ;;		_TMR0_Initialize
 18173 ;;		_TMR0_ISR
 18174 ;; This function uses a non-reentrant model
 18175 ;;
 18176                           
 18177                           
 18178                           ;psect for function _TMR0_DefaultInterruptHandler
 18179  0CFC                     _TMR0_DefaultInterruptHandler:	
 18180  0CFC                     i1l1614:	
 18181                           ;incstack = 0
 18182                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 18183                           
 18184  0CFC  0008               	return
 18185  0CFD                     __end_of_TMR0_DefaultInterruptHandler:	
 18186                           
 18187                           	psect	text94
 18188  0D04                     __ptext94:	
 18189 ;; *************** function _TMR0_StopTimer *****************
 18190 ;; Defined at:
 18191 ;;		line 95 in file "mcc_generated_files/tmr0.c"
 18192 ;; Parameters:    Size  Location     Type
 18193 ;;		None
 18194 ;; Auto vars:     Size  Location     Type
 18195 ;;		None
 18196 ;; Return value:  Size  Location     Type
 18197 ;;                  1    wreg      void 
 18198 ;; Registers used:
 18199 ;;		None
 18200 ;; Tracked objects:
 18201 ;;		On entry : 0/0
 18202 ;;		On exit  : 0/0
 18203 ;;		Unchanged: 0/0
 18204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18209 ;;Total ram usage:        0 bytes
 18210 ;; Hardware stack levels used:    1
 18211 ;; This function calls:
 18212 ;;		Nothing
 18213 ;; This function is called by:
 18214 ;;		_ISR_3s
 18215 ;; This function uses a non-reentrant model
 18216 ;;
 18217                           
 18218                           
 18219                           ;psect for function _TMR0_StopTimer
 18220  0D04                     _TMR0_StopTimer:	
 18221  0D04                     i1l4328:	
 18222                           ;incstack = 0
 18223                           ; Regs used in _TMR0_StopTimer: []
 18224                           
 18225                           
 18226                           ;mcc_generated_files/tmr0.c: 98:     T0CON0bits.T0EN = 0;
 18227  0D04  0020               	movlb	0	; select bank0
 18228  0D05  139E               	bcf	30,7	;volatile
 18229  0D06                     i1l1595:	
 18230  0D06  0008               	return
 18231  0D07                     __end_of_TMR0_StopTimer:	
 18232                           
 18233                           	psect	text95
 18234  0D58                     __ptext95:	
 18235 ;; *************** function _INT_ISR *****************
 18236 ;; Defined at:
 18237 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 18238 ;; Parameters:    Size  Location     Type
 18239 ;;		None
 18240 ;; Auto vars:     Size  Location     Type
 18241 ;;		None
 18242 ;; Return value:  Size  Location     Type
 18243 ;;                  1    wreg      void 
 18244 ;; Registers used:
 18245 ;;		wreg, status,2, status,0, pclath, cstack
 18246 ;; Tracked objects:
 18247 ;;		On entry : 0/0
 18248 ;;		On exit  : 0/0
 18249 ;;		Unchanged: 0/0
 18250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18255 ;;Total ram usage:        0 bytes
 18256 ;; Hardware stack levels used:    1
 18257 ;; Hardware stack levels required when called:    3
 18258 ;; This function calls:
 18259 ;;		_INT_CallBack
 18260 ;; This function is called by:
 18261 ;;		_INTERRUPT_InterruptManager
 18262 ;; This function uses a non-reentrant model
 18263 ;;
 18264                           
 18265                           
 18266                           ;psect for function _INT_ISR
 18267  0D58                     _INT_ISR:	
 18268  0D58                     i1l4946:	
 18269                           ;incstack = 0
 18270                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 18271                           
 18272                           
 18273                           ;mcc_generated_files/ext_int.c: 34:     (PIR0bits.INTF = 0);
 18274  0D58  002E               	movlb	14	; select bank14
 18275  0D59  100C               	bcf	12,0	;volatile
 18276  0D5A                     i1l4948:	
 18277                           
 18278                           ;mcc_generated_files/ext_int.c: 37:     INT_CallBack();
 18279  0D5A  318D  25FC  318D   	fcall	_INT_CallBack
 18280  0D5D                     i1l334:	
 18281  0D5D  0008               	return
 18282  0D5E                     __end_of_INT_ISR:	
 18283                           
 18284                           	psect	text96
 18285  0DFC                     __ptext96:	
 18286 ;; *************** function _INT_CallBack *****************
 18287 ;; Defined at:
 18288 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 18289 ;; Parameters:    Size  Location     Type
 18290 ;;		None
 18291 ;; Auto vars:     Size  Location     Type
 18292 ;;		None
 18293 ;; Return value:  Size  Location     Type
 18294 ;;                  1    wreg      void 
 18295 ;; Registers used:
 18296 ;;		wreg, status,2, status,0, pclath, cstack
 18297 ;; Tracked objects:
 18298 ;;		On entry : 0/0
 18299 ;;		On exit  : 0/0
 18300 ;;		Unchanged: 0/0
 18301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18306 ;;Total ram usage:        0 bytes
 18307 ;; Hardware stack levels used:    1
 18308 ;; Hardware stack levels required when called:    2
 18309 ;; This function calls:
 18310 ;;		Absolute function
 18311 ;;		_INT_DefaultInterruptHandler
 18312 ;;		_sw1_EXT
 18313 ;; This function is called by:
 18314 ;;		_INT_ISR
 18315 ;; This function uses a non-reentrant model
 18316 ;;
 18317                           
 18318                           
 18319                           ;psect for function _INT_CallBack
 18320  0DFC                     _INT_CallBack:	
 18321  0DFC                     i1l4578:	
 18322                           ;incstack = 0
 18323                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 18324                           
 18325                           
 18326                           ;mcc_generated_files/ext_int.c: 44:     if(INT_InterruptHandler)
 18327  0DFC  0020               	movlb	0	; select bank0
 18328  0DFD  0863               	movf	_INT_InterruptHandler,w
 18329  0DFE  0464               	iorwf	_INT_InterruptHandler+1,w
 18330  0DFF  1903               	btfsc	3,2
 18331  0E00  2E02               	goto	u193_21
 18332  0E01  2E03               	goto	u193_20
 18333  0E02                     u193_21:	
 18334  0E02  2E08               	goto	i1l338
 18335  0E03                     u193_20:	
 18336  0E03                     i1l4580:	
 18337                           
 18338                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          _InterruptHandler();
 18339  0E03  0864               	movf	_INT_InterruptHandler+1,w
 18340  0E04  008A               	movwf	10
 18341  0E05  0863               	movf	_INT_InterruptHandler,w
 18342  0E06  000A               	callw
 18343  0E07  318D               	pagesel	$
 18344  0E08                     i1l338:	
 18345  0E08  0008               	return
 18346  0E09                     __end_of_INT_CallBack:	
 18347                           
 18348                           	psect	text97
 18349  0CFB                     __ptext97:	
 18350 ;; *************** function _INT_DefaultInterruptHandler *****************
 18351 ;; Defined at:
 18352 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 18353 ;; Parameters:    Size  Location     Type
 18354 ;;		None
 18355 ;; Auto vars:     Size  Location     Type
 18356 ;;		None
 18357 ;; Return value:  Size  Location     Type
 18358 ;;                  1    wreg      void 
 18359 ;; Registers used:
 18360 ;;		None
 18361 ;; Tracked objects:
 18362 ;;		On entry : 0/0
 18363 ;;		On exit  : 0/0
 18364 ;;		Unchanged: 0/0
 18365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18370 ;;Total ram usage:        0 bytes
 18371 ;; Hardware stack levels used:    1
 18372 ;; This function calls:
 18373 ;;		Nothing
 18374 ;; This function is called by:
 18375 ;;		_EXT_INT_Initialize
 18376 ;;		_INT_CallBack
 18377 ;; This function uses a non-reentrant model
 18378 ;;
 18379                           
 18380                           
 18381                           ;psect for function _INT_DefaultInterruptHandler
 18382  0CFB                     _INT_DefaultInterruptHandler:	
 18383  0CFB                     i1l344:	
 18384                           ;incstack = 0
 18385                           ; Regs used in _INT_DefaultInterruptHandler: []
 18386                           
 18387  0CFB  0008               	return
 18388  0CFC                     __end_of_INT_DefaultInterruptHandler:	
 18389                           
 18390                           	psect	text98
 18391  06EA                     __ptext98:	
 18392 ;; *************** function _sw1_EXT *****************
 18393 ;; Defined at:
 18394 ;;		line 98 in file "main.c"
 18395 ;; Parameters:    Size  Location     Type
 18396 ;;		None
 18397 ;; Auto vars:     Size  Location     Type
 18398 ;;		None
 18399 ;; Return value:  Size  Location     Type
 18400 ;;                  1    wreg      void 
 18401 ;; Registers used:
 18402 ;;		wreg, status,2, status,0, pclath, cstack
 18403 ;; Tracked objects:
 18404 ;;		On entry : 0/0
 18405 ;;		On exit  : 0/0
 18406 ;;		Unchanged: 0/0
 18407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18410 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18411 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18412 ;;Total ram usage:        1 bytes
 18413 ;; Hardware stack levels used:    1
 18414 ;; Hardware stack levels required when called:    1
 18415 ;; This function calls:
 18416 ;;		i1_PWM6_LoadDutyValue
 18417 ;;		i1_checkDebounceSW1
 18418 ;; This function is called by:
 18419 ;;		_main
 18420 ;;		_INT_CallBack
 18421 ;; This function uses a non-reentrant model
 18422 ;;
 18423                           
 18424                           
 18425                           ;psect for function _sw1_EXT
 18426  06EA                     _sw1_EXT:	
 18427  06EA                     i1l4312:	
 18428                           ;incstack = 0
 18429                           ; Regs used in _sw1_EXT: [wreg+status,2+status,0+pclath+cstack]
 18430                           
 18431                           
 18432                           ;main.c: 101:     if(checkDebounceSW1()){
 18433  06EA  3184  248B  3186   	fcall	i1_checkDebounceSW1
 18434  06ED  3A00               	xorlw	0
 18435  06EE  1903               	skipnz
 18436  06EF  2EF1               	goto	u177_21
 18437  06F0  2EF2               	goto	u177_20
 18438  06F1                     u177_21:	
 18439  06F1  2F11               	goto	i1l1194
 18440  06F2                     u177_20:	
 18441  06F2                     i1l4314:	
 18442                           
 18443                           ;main.c: 102:         if (alarm == 1){
 18444  06F2  0020               	movlb	0	; select bank0
 18445  06F3  0338               	decf	_alarm,w	;volatile
 18446  06F4  1D03               	btfss	3,2
 18447  06F5  2EF7               	goto	u178_21
 18448  06F6  2EF8               	goto	u178_20
 18449  06F7                     u178_21:	
 18450  06F7  2F01               	goto	i1l1188
 18451  06F8                     u178_20:	
 18452  06F8                     i1l4316:	
 18453                           
 18454                           ;main.c: 103:             alarm = 0;
 18455  06F8  01B8               	clrf	_alarm	;volatile
 18456  06F9                     i1l4318:	
 18457  06F9  1316               	bcf	22,6	;volatile
 18458  06FA                     i1l4320:	
 18459                           
 18460                           ;main.c: 105:             PWM6_LoadDutyValue(0);
 18461  06FA  3000               	movlw	0
 18462  06FB  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 18463  06FC  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 18464  06FD  318E  26F5  3186   	fcall	i1_PWM6_LoadDutyValue
 18465                           
 18466                           ;main.c: 106:         }
 18467  0700  2F11               	goto	i1l1194
 18468  0701                     i1l1188:	
 18469                           ;main.c: 107:         else{
 18470                           
 18471                           
 18472                           ;main.c: 108:             if(!PORTBbits.RB4){
 18473  0701  1A0D               	btfsc	13,4	;volatile
 18474  0702  2F04               	goto	u179_21
 18475  0703  2F05               	goto	u179_20
 18476  0704                     u179_21:	
 18477  0704  2F11               	goto	i1l1194
 18478  0705                     u179_20:	
 18479  0705                     i1l4322:	
 18480                           
 18481                           ;main.c: 110:                 if(config_mode == 0){
 18482  0705  087D               	movf	_config_mode,w	;volatile
 18483  0706  1D03               	btfss	3,2
 18484  0707  2F09               	goto	u180_21
 18485  0708  2F0A               	goto	u180_20
 18486  0709                     u180_21:	
 18487  0709  2F11               	goto	i1l1191
 18488  070A                     u180_20:	
 18489  070A                     i1l4324:	
 18490                           
 18491                           ;main.c: 111:                     config_mode = 1;
 18492  070A  3001               	movlw	1
 18493  070B  00F7               	movwf	??_sw1_EXT
 18494  070C  0877               	movf	??_sw1_EXT,w
 18495  070D  00FD               	movwf	_config_mode	;volatile
 18496  070E                     i1l4326:	
 18497                           
 18498                           ;main.c: 113:                     (PIE0bits.INTE = 0);
 18499  070E  002E               	movlb	14	; select bank14
 18500  070F  1016               	bcf	22,0	;volatile
 18501  0710  2F11               	goto	i1l1194
 18502  0711                     i1l1191:	
 18503                           ;main.c: 117:             }
 18504                           
 18505  0711                     i1l1194:	
 18506  0711  0008               	return
 18507  0712                     __end_of_sw1_EXT:	
 18508                           
 18509                           	psect	text99
 18510  048B                     __ptext99:	
 18511 ;; *************** function i1_checkDebounceSW1 *****************
 18512 ;; Defined at:
 18513 ;;		line 479 in file "main.c"
 18514 ;; Parameters:    Size  Location     Type
 18515 ;;		None
 18516 ;; Auto vars:     Size  Location     Type
 18517 ;;		None
 18518 ;; Return value:  Size  Location     Type
 18519 ;;                  1    wreg      unsigned char 
 18520 ;; Registers used:
 18521 ;;		wreg, status,2, status,0
 18522 ;; Tracked objects:
 18523 ;;		On entry : 0/0
 18524 ;;		On exit  : 0/0
 18525 ;;		Unchanged: 0/0
 18526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18529 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18530 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18531 ;;Total ram usage:        7 bytes
 18532 ;; Hardware stack levels used:    1
 18533 ;; This function calls:
 18534 ;;		Nothing
 18535 ;; This function is called by:
 18536 ;;		_sw1_EXT
 18537 ;; This function uses a non-reentrant model
 18538 ;;
 18539                           
 18540                           
 18541                           ;psect for function i1_checkDebounceSW1
 18542  048B                     i1_checkDebounceSW1:	
 18543  048B                     i1l4156:	
 18544                           ;incstack = 0
 18545                           ; Regs used in i1_checkDebounceSW1: [wreg+status,2+status,0]
 18546                           
 18547                           
 18548                           ;main.c: 482:     if(clkms - last_ms < 0){
 18549  048B  0020               	movlb	0	; select bank0
 18550  048C  083C               	movf	_clkms,w	;volatile
 18551  048D  00F0               	movwf	??i1_checkDebounceSW1
 18552  048E  01F1               	clrf	??i1_checkDebounceSW1+1
 18553  048F  0871               	movf	??i1_checkDebounceSW1+1,w
 18554  0490  00F3               	movwf	??i1_checkDebounceSW1+3
 18555  0491  083B               	movf	_last_ms,w
 18556  0492  0270               	subwf	??i1_checkDebounceSW1,w
 18557  0493  00F2               	movwf	??i1_checkDebounceSW1+2
 18558  0494  1C03               	skipc
 18559  0495  03F3               	decf	??i1_checkDebounceSW1+3,f
 18560  0496  1FF3               	btfss	??i1_checkDebounceSW1+3,7
 18561  0497  2C99               	goto	u172_21
 18562  0498  2C9A               	goto	u172_20
 18563  0499                     u172_21:	
 18564  0499  2CBE               	goto	i1l4164
 18565  049A                     u172_20:	
 18566  049A                     i1l4158:	
 18567                           
 18568                           ;main.c: 484:         if ((200 - last_ms)+ clkms > 10 ){
 18569  049A  083C               	movf	_clkms,w	;volatile
 18570  049B  00F0               	movwf	??i1_checkDebounceSW1
 18571  049C  01F1               	clrf	??i1_checkDebounceSW1+1
 18572  049D  0871               	movf	??i1_checkDebounceSW1+1,w
 18573  049E  00F3               	movwf	??i1_checkDebounceSW1+3
 18574  049F  083B               	movf	_last_ms,w
 18575  04A0  0270               	subwf	??i1_checkDebounceSW1,w
 18576  04A1  00F2               	movwf	??i1_checkDebounceSW1+2
 18577  04A2  1C03               	skipc
 18578  04A3  03F3               	decf	??i1_checkDebounceSW1+3,f
 18579  04A4  0872               	movf	??i1_checkDebounceSW1+2,w
 18580  04A5  3EC8               	addlw	200
 18581  04A6  00F4               	movwf	??i1_checkDebounceSW1+4
 18582  04A7  3000               	movlw	0
 18583  04A8  3D73               	addwfc	??i1_checkDebounceSW1+3,w
 18584  04A9  00F5               	movwf	??i1_checkDebounceSW1+5
 18585  04AA  0875               	movf	??i1_checkDebounceSW1+5,w
 18586  04AB  3A80               	xorlw	128
 18587  04AC  00F6               	movwf	??i1_checkDebounceSW1+6
 18588  04AD  3080               	movlw	128
 18589  04AE  0276               	subwf	??i1_checkDebounceSW1+6,w
 18590  04AF  1D03               	skipz
 18591  04B0  2CB3               	goto	u173_25
 18592  04B1  300B               	movlw	11
 18593  04B2  0274               	subwf	??i1_checkDebounceSW1+4,w
 18594  04B3                     u173_25:	
 18595  04B3  1C03               	skipc
 18596  04B4  2CB6               	goto	u173_21
 18597  04B5  2CB7               	goto	u173_20
 18598  04B6                     u173_21:	
 18599  04B6  2CBE               	goto	i1l4164
 18600  04B7                     u173_20:	
 18601  04B7                     i1l4160:	
 18602                           
 18603                           ;main.c: 485:             last_ms = clkms;
 18604  04B7  0020               	movlb	0	; select bank0
 18605  04B8  083C               	movf	_clkms,w	;volatile
 18606  04B9  00F0               	movwf	??i1_checkDebounceSW1
 18607  04BA  0870               	movf	??i1_checkDebounceSW1,w
 18608  04BB  00BB               	movwf	_last_ms
 18609                           
 18610                           ;main.c: 486:             return 1;
 18611  04BC  3001               	movlw	1
 18612  04BD  2CD7               	goto	i1l1334
 18613  04BE                     i1l4164:	
 18614                           
 18615                           ;main.c: 490:     if(clkms - last_ms < 10){
 18616  04BE  0020               	movlb	0	; select bank0
 18617  04BF  083C               	movf	_clkms,w	;volatile
 18618  04C0  00F0               	movwf	??i1_checkDebounceSW1
 18619  04C1  01F1               	clrf	??i1_checkDebounceSW1+1
 18620  04C2  0871               	movf	??i1_checkDebounceSW1+1,w
 18621  04C3  00F3               	movwf	??i1_checkDebounceSW1+3
 18622  04C4  083B               	movf	_last_ms,w
 18623  04C5  0270               	subwf	??i1_checkDebounceSW1,w
 18624  04C6  00F2               	movwf	??i1_checkDebounceSW1+2
 18625  04C7  1C03               	skipc
 18626  04C8  03F3               	decf	??i1_checkDebounceSW1+3,f
 18627  04C9  0873               	movf	??i1_checkDebounceSW1+3,w
 18628  04CA  3A80               	xorlw	128
 18629  04CB  00F4               	movwf	??i1_checkDebounceSW1+4
 18630  04CC  3080               	movlw	128
 18631  04CD  0274               	subwf	??i1_checkDebounceSW1+4,w
 18632  04CE  1D03               	skipz
 18633  04CF  2CD2               	goto	u174_25
 18634  04D0  300A               	movlw	10
 18635  04D1  0272               	subwf	??i1_checkDebounceSW1+2,w
 18636  04D2                     u174_25:	
 18637  04D2  1803               	skipnc
 18638  04D3  2CD5               	goto	u174_21
 18639  04D4  2CD6               	goto	u174_20
 18640  04D5                     u174_21:	
 18641  04D5  2CB7               	goto	i1l4160
 18642  04D6                     u174_20:	
 18643  04D6                     i1l4166:	
 18644                           
 18645                           ;main.c: 491:         return 0;
 18646  04D6  3000               	movlw	0
 18647  04D7                     i1l1334:	
 18648  04D7  0008               	return
 18649  04D8                     __end_ofi1_checkDebounceSW1:	
 18650                           
 18651                           	psect	text100
 18652  0EF5                     __ptext100:	
 18653 ;; *************** function i1_PWM6_LoadDutyValue *****************
 18654 ;; Defined at:
 18655 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 18656 ;; Parameters:    Size  Location     Type
 18657 ;;  dutyValue       2    0[COMMON] unsigned short 
 18658 ;; Auto vars:     Size  Location     Type
 18659 ;;		None
 18660 ;; Return value:  Size  Location     Type
 18661 ;;                  1    wreg      void 
 18662 ;; Registers used:
 18663 ;;		wreg, status,2, status,0
 18664 ;; Tracked objects:
 18665 ;;		On entry : 0/0
 18666 ;;		On exit  : 0/0
 18667 ;;		Unchanged: 0/0
 18668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18669 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18671 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18672 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18673 ;;Total ram usage:        4 bytes
 18674 ;; Hardware stack levels used:    1
 18675 ;; This function calls:
 18676 ;;		Nothing
 18677 ;; This function is called by:
 18678 ;;		_sw1_EXT
 18679 ;;		_ISR_3s
 18680 ;; This function uses a non-reentrant model
 18681 ;;
 18682                           
 18683                           
 18684                           ;psect for function i1_PWM6_LoadDutyValue
 18685  0EF5                     i1_PWM6_LoadDutyValue:	
 18686  0EF5                     i1l4154:	
 18687                           ;incstack = 0
 18688                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 18689                           
 18690                           
 18691                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 18692  0EF5  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 18693  0EF6  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 18694  0EF7  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 18695  0EF8  00F2               	movwf	??i1_PWM6_LoadDutyValue
 18696  0EF9  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 18697  0EFA  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 18698  0EFB  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 18699  0EFC  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 18700  0EFD  0872               	movf	??i1_PWM6_LoadDutyValue,w
 18701  0EFE  0027               	movlb	7	; select bank7
 18702  0EFF  008D               	movwf	13	;volatile
 18703                           
 18704                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 18705  0F00  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 18706  0F01  3903               	andlw	3
 18707  0F02  00F2               	movwf	??i1_PWM6_LoadDutyValue
 18708  0F03  3005               	movlw	5
 18709  0F04                     u171_25:	
 18710  0F04  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 18711  0F05  3EFF               	addlw	-1
 18712  0F06  1D03               	skipz
 18713  0F07  2F04               	goto	u171_25
 18714  0F08  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 18715  0F09  008C               	movwf	12	;volatile
 18716  0F0A                     i1l916:	
 18717  0F0A  0008               	return
 18718  0F0B                     __end_ofi1_PWM6_LoadDutyValue:	
 18719  007E                     btemp	set	126	;btemp
 18720  007E                     int$flags	set	126
 18721  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    32
    Data        7
    BSS         69
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     25      76
    BANK1            80      3      37
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$3613$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$3619	const PTR FTN()enum E12722 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX$3618	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$3613	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), ISR_3s(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), ISR_3s(), Absolute function(), 

    push_ring@ring_byte	PTR unsigned char  size(1) Largest target is 5
		 -> ring_byte(BANK1[5]), 

    push_ring@nreg_pt	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_pt(BANK0[1]), 

    push_ring@nreg_init	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_init(BANK0[1]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), Absolute function(), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S383$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), i2c_restartWrite(), 

    fsmStateTable	const PTR FTN()enum E12722[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S66$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    S66$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _i2c_ISR->_do_I2C_DO_ADDRESS_NACK
    _i2c_ISR->_do_I2C_RX
    _i2c_ISR->_do_I2C_TX
    _i2c_ISR->_do_I2C_TX_EMPTY
    _do_I2C_TX_EMPTY->_i2c_restartWrite
    _do_I2C_TX_EMPTY->_rd1RegCompleteHandler
    _do_I2C_TX_EMPTY->_rd2RegCompleteHandler
    _do_I2C_TX_EMPTY->_rdBlkRegCompleteHandler
    _do_I2C_TX_EMPTY->_returnReset
    _do_I2C_TX_EMPTY->_returnStop
    _do_I2C_TX_EMPTY->_wr1RegCompleteHandler
    _do_I2C_TX_EMPTY->_wr2RegCompleteHandler
    _do_I2C_TX->_i2c_restartWrite
    _do_I2C_TX->_rd1RegCompleteHandler
    _do_I2C_TX->_rd2RegCompleteHandler
    _do_I2C_TX->_rdBlkRegCompleteHandler
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_TX->_wr1RegCompleteHandler
    _do_I2C_TX->_wr2RegCompleteHandler
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_RX->_i2c_restartWrite
    _do_I2C_RX->_rd1RegCompleteHandler
    _do_I2C_RX->_rd2RegCompleteHandler
    _do_I2C_RX->_rdBlkRegCompleteHandler
    _do_I2C_RX->_returnReset
    _do_I2C_RX->_returnStop
    _do_I2C_RX->_wr1RegCompleteHandler
    _do_I2C_RX->_wr2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_i2c_restartWrite
    _do_I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_returnReset
    _do_I2C_DO_ADDRESS_NACK->_returnStop
    _do_I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _TMR2_ISR->_handler_clock_ms
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR0_ISR->_ISR_3s
    _ISR_3s->i1_PWM6_LoadDutyValue
    _INT_CallBack->_sw1_EXT
    _sw1_EXT->i1_checkDebounceSW1

Critical Paths under _main in BANK0

    _main->_config_routine
    _main->_push_ring
    _recoverData->_reset_recv
    _reset_recv->_DATAEE_WriteByte
    _cksum_w->_DATAEE_WriteByte
    _cksum->_DATAEE_ReadByte
    _read_ring->___bmul
    _push_ring->_DATAEE_WriteByte
    _DATAEE_WriteByte->_cksum
    _config_routine->_clock_subfields
    _mode_select_LED->_PWM6_LoadDutyValue
    _clock_subfields->_increment_subfield
    _mod4_LED->_PWM6_LoadDutyValue
    _mod3_LED->_PWM6_LoadDutyValue
    _mod2_LED->_PWM6_LoadDutyValue
    _mod1_LED->_PWM6_LoadDutyValue
    _increment_subfield->_checkDebounceSW1
    _increment_subfield->_checkDebounceSW2
    _all_LED->_PWM6_LoadDutyValue
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _ADC_read->_ADCC_GetConversionResult

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_i2c_ISR

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   41928
                                             20 BANK0      5     5      0
                                              0 BANK1      3     3      0
                           _ADC_read
                   _DATAEE_WriteByte
            _INT_SetInterruptHandler
                            _LED_bin
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
           _TMR1_SetInterruptHandler
           _TMR2_SetInterruptHandler
                            _cksum_w
                     _config_routine
                          _push_ring
                          _read_ring
                        _recoverData
 ---------------------------------------------------------------------------------
 (1) _recoverData                                          1     1      0   12278
                                             15 BANK0      1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                              _cksum
                            _cksum_w
                         _reset_recv
 ---------------------------------------------------------------------------------
 (2) _reset_recv                                           2     2      0    2386
                                             13 BANK0      2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _cksum_w                                              1     1      0    4105
                                             13 BANK0      1     1      0
                   _DATAEE_WriteByte
                              _cksum
 ---------------------------------------------------------------------------------
 (3) _cksum                                                4     4      0    1818
                                              5 BANK0      4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (1) _read_ring                                            9     5      4    3043
                                              7 BANK0      9     5      4
                    _DATAEE_ReadByte
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     226
                                              3 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2    1682
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _push_ring                                            7     4      3    2940
                                             13 BANK0      7     4      3
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3    2287
                                              9 BANK0      4     1      3
                              _cksum (ARG)
 ---------------------------------------------------------------------------------
 (1) _config_routine                                       3     3      0   14078
                                             17 BANK0      3     3      0
                            _all_LED
                   _checkDebounceSW1
                   _checkDebounceSW2
                    _clock_subfields
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
                    _mode_select_LED
 ---------------------------------------------------------------------------------
 (2) _mode_select_LED                                      1     1      0    1252
                                              7 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _clock_subfields                                      3     3      0    6433
                                             14 BANK0      3     3      0
                   _checkDebounceSW1
                   _checkDebounceSW2
                 _increment_subfield
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
 ---------------------------------------------------------------------------------
 (2) _mod4_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mod3_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mod2_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mod1_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _increment_subfield                                   4     4      0    1326
                                             10 BANK0      4     4      0
                 _PWM6_LoadDutyValue
                   _checkDebounceSW1
                   _checkDebounceSW2
 ---------------------------------------------------------------------------------
 (4) _checkDebounceSW2                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (4) _checkDebounceSW1                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) _all_LED                                              1     1      0    1252
                                              7 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _PWM6_LoadDutyValue                                   4     2      2    1252
                                              3 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     844
                    _ADCC_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_bin                                              5     3      2     152
                                              3 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             2     0      2      31
                                              5 BANK0      2     0      2
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             2     0      2       0
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0   78474
                   Absolute function *
                            _INT_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (6) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _i2c_ISR                                              3     3      0   78042
                                              0 BANK0      3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (7) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX_EMPTY                                      3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX                                            3     3      0   19516
                                             10 COMMON     3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_TXData                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RX                                            3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ADDRESS_NACK                               3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _returnStop                                           1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _returnReset                                          1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              1     0      1    4086
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _i2c_setDataCompleteCallback                          4     1      3    2478
                                              5 COMMON     4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (10) _setCallBack                                         5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (9) _i2c_setBuffer                                        4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _i2c_restartWrite                                     1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                   _handler_clock_ms *
 ---------------------------------------------------------------------------------
 (7) _handler_clock_ms                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _handler_clock_hms *
 ---------------------------------------------------------------------------------
 (7) _handler_clock_hms                                    1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0      96
                   Absolute function *
                             _ISR_3s *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ISR_3s                                               1     1      0      96
                                              4 COMMON     1     1      0
                     _TMR0_StopTimer
               i1_PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (8) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT_ISR                                              0     0      0      96
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (7) _INT_CallBack                                         0     0      0      96
                   Absolute function *
        _INT_DefaultInterruptHandler *
                            _sw1_EXT *
 ---------------------------------------------------------------------------------
 (8) _sw1_EXT                                              1     1      0      96
                                              7 COMMON     1     1      0
               i1_PWM6_LoadDutyValue
                 i1_checkDebounceSW1
 ---------------------------------------------------------------------------------
 (9) i1_checkDebounceSW1                                   7     7      0       0
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (8) i1_PWM6_LoadDutyValue                                 4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_read
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
   _DATAEE_WriteByte
     _cksum (ARG)
       _DATAEE_ReadByte
   _INT_SetInterruptHandler
   _LED_bin
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _TMR1_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _cksum_w
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
   _config_routine
     _all_LED
       _PWM6_LoadDutyValue
     _checkDebounceSW1
     _checkDebounceSW2
     _clock_subfields
       _checkDebounceSW1
       _checkDebounceSW2
       _increment_subfield
         _PWM6_LoadDutyValue
         _checkDebounceSW1
         _checkDebounceSW2
       _mod1_LED
         _PWM6_LoadDutyValue
       _mod2_LED
         _PWM6_LoadDutyValue
       _mod3_LED
         _PWM6_LoadDutyValue
       _mod4_LED
         _PWM6_LoadDutyValue
     _mod1_LED
       _PWM6_LoadDutyValue
     _mod2_LED
       _PWM6_LoadDutyValue
     _mod3_LED
       _PWM6_LoadDutyValue
     _mod4_LED
       _PWM6_LoadDutyValue
     _mode_select_LED
       _PWM6_LoadDutyValue
   _push_ring
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
   _read_ring
     _DATAEE_ReadByte
     ___bmul
   _recoverData
     _DATAEE_ReadByte
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
     _cksum_w
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
       _cksum
         _DATAEE_ReadByte
     _reset_recv
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _INT_ISR *
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _sw1_EXT *
         i1_PWM6_LoadDutyValue
         i1_checkDebounceSW1
   _TMR0_ISR *
     Absolute function(Fake) *
     _ISR_3s *
       _TMR0_StopTimer
       i1_PWM6_LoadDutyValue
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _handler_clock_hms *
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _handler_clock_ms *
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c1_driver_sendNACK
       _i2c1_driver_getRXData *
       _i2c1_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c1_driver_restart
     _do_I2C_SEND_STOP *
       _i2c1_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c1_driver_TXData *
       _i2c1_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _mssp1_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      4C       5       95.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      3      25       7       46.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      7F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      7F      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Nov  3 17:44:02 2019

                            returnReset@p 0079          __end_of_TMR2_SetInterruptHandler 0D76  
                          ___bmul@product 0047                               __CFG_CP$OFF 0000  
                    __size_of_do_I2C_IDLE 0005                       _do_I2C_SEND_RESTART 0D3F  
                    __size_of_do_I2C_RCEN 0007               __size_of_PWM6_LoadDutyValue 0019  
                  increment_subfield@exit 004E                    increment_subfield@plus 004C  
                             __CFG_LVP$ON 0000                                       l341 0D63  
                                     l442 07FF                                       l530 056A  
                                     l347 0E3D                                       l445 0DBE  
                                     l439 0FFF                                       l760 0DB6  
                                     l913 0E2F                                       l763 0D8F  
                                     l916 0FAF                                       l757 0F20  
                                     l766 0DD0                                       l960 075B  
                                     l963 0E6A                                       l869 07DA  
                                     l957 0750                                       l959 0754  
                                     l899 0D6F                                       l998 0F7D  
                                     _PR2 028D                              __CFG_CPD$OFF 0000  
                                     i1l9 0D01                           _timer1ReloadVal 0061  
                                     _seg 003D             i2c_setDataCompleteCallback@cb 0075  
                 __size_of_PMD_Initialize 0008                           _TMR2_Initialize 0F66  
                   __size_of_do_I2C_RESET 0008                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_ZCD$OFF 0000  
                         __end_of_LED_bin 0FE4                                      l1041 0D75  
                 ??_rd2RegCompleteHandler 007A                                      l1221 01A5  
                                    l1206 00A1                                      l1216 012E  
                                    l1250 05C0                                      l1316 0DE5  
                                    l1324 0DF0                                      l1341 043D  
                                    l1261 02F5                                      l1334 048A  
                                    l1246 02DE                                      l1319 0DDA  
                                    l1256 05F1                                      l1272 0341  
                                    l1264 031E                                      l1329 0DFB  
                                    l1290 0FE3                                      l1354 07BB  
                                    l1611 0D69                                      l1275 0342  
                                    l1278 034F                                      l1287 039C  
                                    l1296 0FC9                                      l1553 0630  
                                    l1561 079B                                      l1546 05B1  
                                    l1539 0250                                      l1556 0E8A  
                                    l1566 07F6                                      l1592 0D1E  
                                    l6000 0624                                      l6010 0575  
                                    l6020 0584                                      l6012 057A  
                                    l6004 0626                                      l6100 00AA  
                                    l1589 0EF4                                      l6030 0D1C  
                                    l6022 0588                                      l6110 00B9  
                                    l6102 00AB                      _ADCC_StartConversion 0DAF  
                                    l6040 0265                                      l6032 0251  
                                    l6024 059F                                      l6008 056D  
                                    l1792 0F36                                      l6120 00D3  
                                    l6112 00BA                                      l6104 00AE  
                                    l6050 0281                                      l6042 026B  
                                    l6034 0254                                      l6026 05A7  
                                    l6018 057B                                      l6130 00EF  
                                    l6122 00DA                                      l6114 00BB  
                                    l6106 00B5                                      l6052 0285  
                                    l6044 026E                                      l6036 0258  
                                    l6028 05AB                                      l6140 014D  
                                    l6132 00F9                                      l6124 00DD  
                                    l6116 00C0                                      l6108 00B7  
                                    l6070 02BA                                      l6054 0289  
                                    l6062 0296                                      l6046 0273  
                                    l6038 025C                                      l6150 017A  
                                    l6142 015E                                      l6134 0110  
                                    l6126 00E7                                      l6118 00C8  
                                    l6080 02D0                                      l6072 02BF  
                                    l6056 028D                                      l6048 027B  
                                    l6064 02A9                                      l6160 0190  
                                    l6152 017E                                      l6144 016A  
                                    l6136 012F                                      l6128 00ED  
                                    l5602 0424                                      l6082 02D5  
                                    l6074 02C2                                      l6058 0291  
                                    l6066 02AE                                      l6170 01AB  
                                    l6154 0186                                      l6162 0196  
                                    l6138 0140                                      l6146 016D  
                                    l6090 00A1                                      l5604 043C  
                                    l6076 02C9                                      l6068 02B2  
                                    l5620 0740                                      l6172 01AD  
                                    l6164 019C                                      l6156 018B  
                                    l6148 0174                                      l5614 0D5E  
                                    l5702 0E30                                      l5710 0522  
                                    l6078 02CC                                      l5630 074B  
                                    l5622 0744                                      l6174 01B0  
                                    l6166 01A2                                      l6158 018D  
                                    l6094 00A6                                      l5704 0E33  
                                    l5720 0530                                      l5712 0528  
                                    l5640 0D64                                      l5616 0D6A  
                                    l5800 07C1                                      l5632 074D  
                                    l5624 0748                                      l5560 0E60  
                                    l6176 01B2                                      l6168 01A6  
                                    l6096 00A7                                      l6088 007E  
                                    l5706 0E3B                                      l5730 053B  
                                    l5722 0532                                      l5714 052A  
                                    l5810 07CF                                      l5802 07C3  
                                    l5642 0DDB                                      l5650 0DD3  
                                    l6346 029B                                      l5634 074F  
                                    l5626 0749                                      l5618 0738  
                                    l5570 0E68                                      l5562 0E64  
                                    l6098 00A8                                      l5740 054F  
                                    l5732 0547                                      l5724 0535  
                                    l5716 052C                                      l5708 0DB7  
                                    l5820 0EE8                                      l5812 07D7  
                                    l5804 07C5                                      l5556 0F97  
                                    l5644 0DDD                                      l5652 0DE6  
                                    l5660 0DF3                                      l5900 0323  
                                    l6348 0310                                      l5636 0755  
                                    l5628 074A                                      l5564 0E65  
                                    l5830 0DB5                                      l5750 0559  
                                    l5742 0551                                      l5734 0549  
                                    l5726 0537                                      l5718 052E  
                                    l5822 0EE9                                      l5814 0EE0  
                                    l5806 07CC                                      l5638 0D70  
                                    l5582 0471                                      l5574 043E  
                                    l5670 05C4                                      l5646 0DE3  
                                    l5654 0DE8                                      l5662 0DF9  
                                    l5902 032B                                      l5566 0E66  
                                    l5558 0E5C                                      l5832 0D89  
                                    l5760 0565                                      l5752 055B  
                                    l5744 0553                                      l5736 054B  
                                    l5728 0539                                      l5824 0EF1  
                                    l5816 0EE5                                      l5808 07CE  
                                    l5584 0489                                      l5576 044D  
                                    l5680 05E5                                      l5672 05CC  
                                    l5664 05B2                                      l5648 0DD1  
                                    l5656 0DEE                                      l5904 0330  
                                    l5568 0E67                                      l5840 0E7B  
                                    l5920 07E8                                      l5826 0DB1  
                                    l5770 07FE                                      l5762 0567  
                                    l5754 055E                                      l5746 0555  
                                    l5738 054D                                      l5818 0EE6  
                                    l5850 0370                                      l5842 0344  
                                    l5578 046A                                      l5594 03F1  
                                    l5674 05D1                                      l5682 05EA  
                                    l5666 05B7                                      l5658 0DF1  
                                    l5906 0333                                      l5930 0F2C  
                                    l5922 07ED                                      l5914 07DB  
                                    l5836 0DC8                                      l5828 0DB4  
                                    l5780 0F1F                                      l5764 07F7  
                                    l5756 0560                                      l5748 0557  
                                    l5772 0E23                                      l5940 0FE7  
                                    l5860 038F                                      l5852 0379  
                                    l5844 034D                                      l5596 0400  
                                    l5676 05D8                                      l5668 05B9  
                                    l5908 0337                                      l5932 0F2E  
                                    l5924 0F23                                      l5692 0782  
                                    l5684 077C                                      l5766 07FA  
                                    l5758 0563                                      l5774 0E2A  
                                    l5790 0F71                                      l5782 0F66  
                                    l5950 0FF6                                      l5942 0FEA  
                                    l5862 0391                                      l5854 037B  
                                    l5846 0358                                      l5598 041D  
                                    l5678 05DD                                      l5870 07A6  
                                    l5934 0F35                                      l5926 0F24  
                                    l5694 078D                                      l5686 077E  
                                    l5918 07E0                                      l5776 0F0B  
                                    l5768 07FB                                      l5792 0F72  
                                    l5784 0F6B                                      l5952 0FF9  
                                    l5944 0FED                                      l5864 039A  
                                    l5856 0384                                      l5848 0360  
                                    l5880 02DF                                      l5872 07AE  
                                    l5928 0F28                                      l5696 0791  
                                    l5960 01D8                                      l5778 0F1D  
                                    l5794 0F7A                                      l5786 0F6C  
                                    l5954 0FFC                                      l5946 0FF0  
                                    l5938 0FE4                                      l5858 0386  
                                    l5890 02FF                                      l5882 02E4  
                                    l5874 07B0                                      l5866 079C  
                                    l5698 079A                                      l5970 0241  
                                    l5962 021A                                      l5980 0FC1  
                                    l5796 07BC                                      l5788 0F6F  
                                    l5948 0FF3                                      l5892 0303  
                                    l5884 02E8                                      l5876 07B8  
                                    l5868 07A4                                      l5972 024D  
                                    l5964 021D                                      l5956 01B9  
                                    l5974 0FB0                                      l5798 07BF  
                                    l5894 0307                                      l5886 02F0  
                                    l5878 07BA                                      l5990 05FA  
                                    l5966 0229                                      l5958 01C6  
                                    l5976 0FB5                                      l5984 0FCA  
                                    l5888 02FB                                      l5992 05FF  
                                    l5968 0235                                      l5978 0FB9  
                                    l5898 030B                                      l5994 060C  
                                    l5986 05F4                                      l5996 0612  
                                    l5988 05F4                                      l5998 0619  
                                    u3000 01C6                                      u3001 01C5  
                                    u3010 01D8                                      u3011 01D7  
                                    u3020 0FC1                                      u3100 026B  
                                    u3021 0FC0                                      u3101 026A  
                                    _LATA 0016                                      u3110 0273  
                                    u3030 05FA                                      _LATB 0017  
                         __end_of_INT_ISR 0D5E                                      u3111 0272  
                                    u3031 05F9                                      _LATC 0018  
                                    u3120 027B                                      u3040 05FF  
                                    u3200 0110                                      _LATD 0019  
                                    u3121 027A                                      u3041 05FE  
                                    u3201 010F                                      _LATE 001A  
                                    u3130 02B2                                      u3050 0612  
                                    u3210 012E                                      u3131 02B1  
                                    u3051 0611                                      u3211 012D  
                                    u3140 02BA                                      u3060 0575  
                                    u3220 0174                                      u3141 02B9  
                                    u3061 0574                                      u3221 0173  
                                    u3150 02C9                                      u3070 0584  
                                    u3230 017A                                      u3151 02C8  
                                    u3071 0583                                      u3231 0179  
                                    u3215 012A                                      u3160 02D5  
                                    u3080 05B1                                      u3240 018B  
                                    u3161 02D4                                      u3081 05B0  
                                    u3241 018A                                      u3090 0265  
                                    u3250 019C                                      u3170 00C0  
                                    _T2PR 028D                                      u3307 02CD  
                                    u3091 0264                                      u3251 019B  
                                    u3171 00BF                                      u3260 01AB  
                                    u3180 00E7                                      u3317 07AA  
                                    u3261 01AA                                      u3181 00E6  
                                    u3190 00ED                                      u3407 0395  
                                    u3327 07B4                                      u3191 00EC  
                                    u2800 046A                                      u3417 0FB6  
                                    u2801 0469                                      u3337 0334  
                                    u2810 0489                                      u3347 0348  
                                    u2811 0488                                      u2820 0400  
                                    u2900 05F1                                      u3357 0353  
                                    u2805 0466                                      u2821 03FF  
                                    u2901 05F0                                      u2830 041D  
                                    u2910 079A                                      u3367 0364  
                                    u2815 0485                                      u2831 041C  
                                    u2911 0799                                      u2840 043C  
                                    u2920 02E8                                      u3377 0374  
                                    u2841 043B                                      u2921 02E7  
                                    u3297 01B3                                      u2930 02F0  
                                    u2850 0754                                      u3387 037F  
                                    u2835 0419                                      u2931 02EF  
                                    u2851 0753                                      u2860 05C4  
                                    u2940 0323                                      _PMD0 0796  
                                    u3397 038A                                      u2845 0438  
                                    u2861 05C3                                      u2941 0322  
                                    _PMD1 0797                                      u2790 044D  
                                    u2870 05CC                                      u2950 032B  
                                    _PMD2 0798                                      u2791 044C  
                                    u2871 05CB                                      u2951 032A  
                                    _PMD3 0799                                      u2880 05DD  
                                    u2960 0341                                      _PMD4 079A  
                                    u2785 0FA8                                      u2881 05DC  
                                    u2961 0340                                      _PMD5 079B  
                                    u2890 05E5                                      u2970 07F6  
                                    u2891 05E4                                      u2971 07F5  
                                    u2980 0F28                                      u2981 0F27  
                                    u2990 0F35                                      u2991 0F34  
                                    i1l73 0E22                      ?_do_I2C_SEND_RESTART 0070  
                                    _TMR2 028C                                      _WPUA 0F39  
                                    _WPUB 0F44                                      _WPUC 0F4F  
                                    _WPUD 0F5A                                      _WPUE 0F65  
                 ??_wr2RegCompleteHandler 007A                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000         __size_of_do_I2C_SEND_RESTART_READ 0005  
                                    _alaf 0036                                      _clkh 003F  
               ?_do_I2C_SEND_RESTART_READ 0070                                      _clkm 003E  
                                    _main 007E                                      _tala 0069  
               __size_of_do_I2C_SEND_STOP 0005                    __size_of_do_I2C_DO_ACK 0005  
                                    _nreg 006B                           _TMR0_StartTimer 0D1C  
                                    _temp 0037                                      _pmon 006A  
                      _increment_subfield 05B2                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                           __CFG_BOREN$ON 0000       __end_of_INT_DefaultInterruptHandler 0CFC  
             _INT_DefaultInterruptHandler 0CFB                     ?_do_I2C_SEND_ADR_READ 0070  
         ??_i2c1_driver_clearBusCollision 0070                                      start 005B  
                        __end_of_ADC_read 0FCA           __end_of_INT_SetInterruptHandler 0D64  
                           _i2c_setBuffer 0E6B                ??_TMR1_SetInterruptHandler 0047  
                           __CFG_CSWEN$ON 0000                         ___bmul@multiplier 0048  
                           __CFG_MCLRE$ON 0000                           __end_of_i2c_ISR 0691  
                     ?_increment_subfield 0070          __size_of_rdBlkRegCompleteHandler 0018  
                ??_do_I2C_DO_NACK_RESTART 0070                 config_routine@select_mode 0054  
               __size_of_DATAEE_WriteByte 0024                   __end_of_TMR0_Initialize 0EF5  
                            _do_I2C_RESET 0D9F            ??_TMR0_DefaultInterruptHandler 0070  
          __size_of_OSCILLATOR_Initialize 0009             __end_of_OSCILLATOR_Initialize 0800  
                       ??_clock_subfields 0050                                     _ADACQ 009D  
                                   _ADCAP 009B                                     _ADACT 0099  
                                   ?_main 0070                                     _ADCLK 0098  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                  __end_of_i2c1_driver_stop 0D0D  
                                   _ADPRE 009C                             __CFG_WDTE$OFF 0000  
                                   _ADRPT 010D                                     _T1CLK 0211  
                                   _T1CON 020E                                     _T2CON 028E  
                                   _T2HLT 028F                __end_of_i2c1_driver_TXData 0D30  
                          __CFG_DEBUG$OFF 0000                                     i1l103 0E7A  
                                   i1l200 0663                                     i1l210 0690  
                                   i1l131 0D39                                     i1l140 0D48  
                                   _T2TMR 028C                                     i1l125 0DA6  
                                   i1l213 0D2A                                     i1l134 0D3E  
                                   i1l303 0F65                                     i1l143 0DC7  
                                   i1l224 0737                                     i1l216 0D03  
                                   i1l128 0D34                                     i1l152 0D4D  
                                   i1l137 0D43                                     i1l146 0DAE  
                                   _T2RST 0291                                     i1l219 0003  
                                   i1l243 0EBD                                     i1l155 0D52  
                                   i1l164 06E9                                     i1l172 03F0  
                                   i1l149 0D88                                     i1l334 0D5D  
                                   i1l158 0D57                                     i1l344 0CFB  
                                   i1l264 0ECE                                     i1l169 03D4  
                                   i1l185 04F5                                     i1l338 0E08  
                                   i1l602 0CFF                                     i1l186 0521  
                                   i1l611 0D0C                                     i1l291 0EAC  
                                   i1l620 0D12                                     i1l380 001F  
                                   i1l614 0D9E                                     i1l279 0EDF  
                                   i1l383 0032                                     i1l608 0D09  
                                   i1l392 0059                                     i1l617 0D0F  
                                   i1l385 0041                                     i1l386 0059  
                                   i1l378 0013                                     i1l635 0D22  
                                   i1l387 004D                                     i1l629 0D2F  
                                   i1l902 0CFD                                     i1l638 0D26  
                                   i1l576 0D18                                     i1l672 0D1B  
                                   i1l579 0D15                                     i1l916 0F0A  
                                   i1l883 0E9B                                     i1l896 0F4D  
                                   _OSCEN 0891                           __end_of_all_LED 039D  
                                   _TMR0H 001D                                     _TMR1H 020D  
                                   _TMR0L 001C                                     _TMR1L 020C  
                                   _TRISA 0011                                     _TRISB 0012  
                                   _TRISC 0013                                     _TRISD 0014  
                                   _TRISE 0015                                     _WPUC3 7A7B  
                                   _WPUC4 7A7C         __size_of_TMR0_SetInterruptHandler 0006  
                         _PWM6_Initialize 0E23                 ?_TMR0_SetInterruptHandler 0045  
                 ??_ADCC_IsConversionDone 0045                          __end_of_TMR0_ISR 0E4D  
                        __end_of_TMR1_ISR 0F4E                          __end_of_TMR2_ISR 0E5C  
                         __end_of_sw1_EXT 0712                           __end_of_cksum_w 0E8B  
                    ??_increment_subfield 004C                           _DATAEE_ReadByte 0E5C  
                                   _alarm 0038                                     _clkms 003C  
              __end_of_i2c1_driver_isNACK 0D9F                                     _cksum 077C  
                   ?_ADCC_StartConversion 0070                ?_do_I2C_SEND_RESTART_WRITE 0070  
                                   _value 0030                         ?_checkDebounceSW1 0070  
                       ?_checkDebounceSW2 0070                     ??_do_I2C_SEND_RESTART 0070  
                 __end_of_TMR1_Initialize 07DB                                     pclath 000A  
                 __size_of_mssp1_clearIRQ 0003                        ??_checkDebounceSW1 0045  
                      ??_checkDebounceSW2 0045                    ?_do_I2C_SEND_ADR_WRITE 0070  
                                   status 0003                                     wtemp0 007E  
                         _TMR1_WriteTimer 0E8B                            ?_i2c_setBuffer 0070  
                            ?_setCallBack 0070                             _fsmStateTable 075C  
                         __initialization 005D                                _i2c_status 00A0  
                            __end_of_main 01B9                   __end_of_TMR2_Initialize 0F7E  
             ?_INTERRUPT_InterruptManager 0070                              ?_recoverData 0070  
                           setCallBack@cb 0070                             _do_I2C_DO_ACK 0D49  
                _TMR2_SetInterruptHandler 0D70                                    ??_main 0056  
                       ?_i2c_restartWrite 0079             __size_of_i2c1_driver_sendNACK 0004  
                               ??_LED_bin 0047                        ??_i2c_restartWrite 007A  
               __size_of_handler_clock_ms 000D             __size_of_i2c1_driver_resetBus 0001  
                               ??_INT_ISR 0078                   ?_do_I2C_DO_ADDRESS_NACK 0070  
                          _convertedValue 0026                                    _ADACCH 0091  
                                  _ADACCL 0090                   __end_of_TMR0_StartTimer 0D1F  
             __size_ofi1_checkDebounceSW1 004D                                    _ADCON0 0093  
                                  _ADCON1 0094                                    _ADCON2 0095  
                                  _ADCON3 0096                                    ?_cksum 0070  
                                  _ADERRH 0117                                    _ADERRL 0116  
                                  _ADLTHH 010F                                    _ADLTHL 010E  
                                  _ADRESH 008D                                    _ADRESL 008C  
                                  _ADSTAT 0097                                    _ADUTHH 0111  
                                  _ADUTHL 0110                                    _ANSELA 0F38  
                                  _ANSELB 0F43                                    _ANSELC 0F4E  
                                  _ANSELD 0F59                                    _ANSELE 0F64  
                      __CFG_RSTOSC$HFINT1 0000                                    _T0CON0 001E  
                                  _T0CON1 001F                                    _T1GATE 0210  
                                  _T1GCON 020F                                    _RA6PPS 0F16  
                                  _RC3PPS 0F23                   TMR1_WriteTimer@timerVal 0070  
                                  _RC4PPS 0F24                                    i1l1044 0CFE  
                                  i1l1038 0E5B                                    i1l1304 06BD  
                                  i1l1308 0E15                                    i1l1334 04D7  
                                  i1l1191 0711                                    _ODCONA 0F3A  
                                  i1l1194 0711                                    _ODCONB 0F45  
                                  _ODCONC 0F50                                    i1l1188 0701  
                                  _ODCOND 0F5B                                    i1l1197 0F91  
                                  _ODCONE 0F66                                    i1l1614 0CFC  
                                  i1l1198 0F96                                    i1l1608 0E4C  
                                  u201_20 0696                                    i1l4200 0D3F  
                                  u201_21 0695                                    i1l4202 0D42  
                                  i1l4212 0D2C                                    i1l4220 0D51  
                                  i1l4214 0D0D                                    i1l4230 0D97  
                                  i1l4206 0D44                                    i1l4160 04B7  
                                  i1l4320 06FA                                    i1l4312 06EA  
                                  u202_20 06A0                                    i1l4216 0D1F  
                                  i1l4080 072A                                    i1l4240 0D02  
                                  i1l4208 0D47                                    i1l4224 0D53  
                                  u202_21 069D                                    i1l4154 0EF5  
                                  i1l4322 0705                                    i1l4314 06F2  
                                  i1l4090 0D07                                    i1l4082 0E16  
                                  i1l4250 0EB5                                    i1l4234 0D10  
                                  i1l4218 0D4E                                    i1l4226 0D56  
                                  i1l1595 0D06                                    i1l4164 04BE  
                                  i1l4156 048B                                    i1l4324 070A  
                                  i1l4316 06F8                                    i1l4092 0D0A  
                                  i1l4084 0E6C                                    i1l4076 0713  
                                  i1l4244 0002                                    i1l4252 0EBC  
                                  i1l4260 0ECD                                    i1l4420 0DA5  
                                  i1l4166 04D6                                    i1l4158 049A  
                                  i1l4326 070E                                    i1l4318 06F9  
                                  i1l4086 0E71                                    i1l4078 0719  
                                  i1l4094 0D23                                    i1l4238 0D13  
                                  i1l4414 0D9F                                    i1l4190 0D38  
                                  i1l4510 03EF                                    i1l4502 03B1  
                                  i1l4328 0D04                                    i1l4088 0E79  
                                  i1l4272 0E9C                                    i1l4176 0D00  
                                  i1l4248 0EAD                                    i1l4256 0EBE  
                                  i1l4264 0ECF                                    i1l4280 0F4E  
                                  i1l4416 0DA2                                    i1l4424 0D30  
                                  i1l4432 0DBF                                    i1l4440 0DA7  
                                  i1l4504 03D6                                    i1l4520 04E2  
                                  i1l4274 0EA4                                    i1l4258 0EC6  
                                  i1l4266 0ED7                                    i1l4282 0F64  
                                  i1l4418 0DA4                                    i1l4426 0D32  
                                  i1l4194 0D3A                                    i1l4434 0DC1  
                                  i1l4442 0DA9                                    i1l4450 0D84  
                                  i1l4506 03E2                                    i1l4522 04E6  
                                  u203_24 06A2                                    i1l4276 0EAB  
                                  i1l4268 0EDE                                    i1l4428 0D33  
                                  i1l4188 0D35                                    i1l4196 0D3D  
                                  i1l4436 0DC6                                    i1l4444 0DAD  
                                  i1l4452 0D87                                    i1l4508 03ED  
                                  i1l4532 04F7                                    i1l4524 04F0  
                                  i1l5260 000B                                    i1l4550 0631  
                                  i1l4470 06C9                                    i1l4462 06BE  
                                  i1l4542 04FF                                    i1l4526 04F3  
                                  i1l4518 04D8                                    i1l5270 0027  
                                  i1l5262 000F                                    i1l4720 0E8B  
                                  u204_20 06AD                                    i1l4552 0634  
                                  i1l4448 0D82                                    i1l4456 0D49  
                                  i1l4464 06C0                                    i1l4536 04FB  
                                  i1l4392 0D16                                    i1l5280 0049  
                                  i1l5272 002B                                    i1l5264 0017  
                                  u204_21 06AC                                    i1l4722 0E90  
                                  i1l4730 0E97                                    i1l4562 063D  
                                  i1l4458 0D4C                                    i1l4466 06C5  
                                  i1l5282 0051                                    i1l5274 0036  
                                  i1l5266 001B                                    i1l5258 0006  
                                  i1l4580 0E03                                    i1l4740 0F94  
                                  i1l4732 0E99                                    i1l4724 0E91  
                                  i1l4820 06A2                                    i1l4556 0638  
                                  i1l4476 06CD                                    i1l4492 03A9  
                                  i1l4484 039D                                    i1l5284 0055  
                                  i1l5276 003A                                    i1l5268 0023  
                                  i1l4734 0F7E                                    i1l4726 0E93  
                                  i1l4830 06B8                                    i1l4822 06A7  
                                  i1l4558 063B                                    i1l6350 0513  
                                  i1l5278 0045                                    i1l4736 0F85  
                                  i1l4728 0E95                                    i1l4832 06BC  
                                  u205_20 06B8                                    i1l4824 06AD  
                                  i1l4816 0691                                    i1l4568 0641  
                                  i1l6352 03C6                                    i1l4496 03AD  
                                  i1l4488 03A5                                    u213_20 066C  
                                  i1l4576 0D19                                    u205_21 06B7  
                                  u213_21 066B                                    i1l4578 0DFC  
                                  i1l4738 0F8C                                    i1l4826 06B1  
                                  i1l4818 0696                                    i1l4834 0E09  
                                  i1l6354 06E1                                    i1l4828 06B2  
                                  i1l4836 0E0E                                    i1l6356 0655  
                                  i1l4940 0673                                    i1l4950 0E3E  
                                  i1l4838 0E14                                    i1l4942 0679  
                                  i1l4934 0664                                    i1l4952 0E40  
                                  i1l4960 0F41                                    u206_20 0E14  
                                  u214_20 0673                                    i1l4936 0667  
                                  i1l4944 0D27                                    u206_21 0E13  
                                  u214_21 0672                                    i1l4946 0D58  
                                  i1l4954 0E47                                    i1l4962 0F48  
                                  i1l4938 066C                                    i1l4948 0D5A  
                                  i1l4956 0F37                                    i1l4964 0E4D  
                                  i1l4958 0F39                                    i1l4966 0E4F  
                                  u215_20 0E47                                    i1l4968 0E56  
                                  u215_21 0E46                                    u216_20 0F48  
                                  u216_21 0F47                                    _INLVLA 0F3C  
                                  _INLVLB 0F47                                    _INLVLC 0F52  
                                  _INLVLD 0F5D                                    _INLVLE 0F68  
                                  u217_20 0E56                                    u217_21 0E55  
                                  u162_20 0719                                    u162_21 0718  
                                  u163_20 0E71                                    u163_21 0E70  
                                  u171_25 0F04                                    u172_20 049A  
                                  u180_20 070A                                    u260_20 0036  
                                  u172_21 0499                                    u180_21 0709  
                                  u260_21 0035                                    u173_20 04B7  
                                  u261_20 003A                                    u253_20 000B  
                                  u173_21 04B6                                    u261_21 0039  
                                  u253_21 000A                                    u173_25 04B3  
                                  u174_20 04D6                                    u190_20 03A4  
                                  u262_20 0045                                    u254_20 000F  
                                  u174_21 04D5                                    u190_21 03A3  
                                  u262_21 0044                                    u254_21 000E  
                                  u174_25 04D2                                    u191_20 03ED  
                                  u263_20 0049                                    u255_20 0017  
                                  u191_21 03EC                                    u263_21 0048  
                                  u255_21 0016                                    u192_20 04F0  
                                  u264_20 0051                                    u256_20 001B  
                                  u192_21 04EF                                    u264_21 0050  
                                  u256_21 001A                                    _INTPPS 0E90  
                                  u177_20 06F2                                    u193_20 0E03  
                                  u265_20 0055                                    u257_20 0023  
                                  u177_21 06F1                                    u193_21 0E02  
                                  u265_21 0054                                    u257_21 0022  
                                  u178_20 06F8                                    u194_20 0E90  
                                  u258_20 0027                                    u178_21 06F7  
                                  u194_21 0E8F                                    u258_21 0026  
                                  u179_20 0705                                    u195_20 0F85  
                                  u259_20 002B                                    u179_21 0704  
                                  u195_21 0F84                                    u259_21 002A  
                                  _OSCFRQ 0893                                    _ISR_3s 0F7E  
                  ??_do_I2C_SEND_ADR_READ 0070                  rdBlkRegCompleteHandler@p 0079  
                               ??_i2c_ISR 0042                ??_ADCC_GetConversionResult 0047  
                          __CFG_PWRTE$OFF 0000              __end_ofi1_PWM6_LoadDutyValue 0F0B  
                   _i2c1_driver_getRXData 0D10                          __end_of_mod1_LED 0DE6  
                        __end_of_mod2_LED 0DDB                          __end_of_mod3_LED 0DF1  
                        __end_of_mod4_LED 0DFC      __end_of_TMR1_DefaultInterruptHandler 0CFE  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 0CFD  
                            _CCPTMRS1bits 021F                                    ___bmul 0F21  
             __end_of_do_I2C_DO_NACK_STOP 0D53       __end_of_i2c_setDataCompleteCallback 0E23  
             _i2c_setDataCompleteCallback 0E16     __end_of_i2c1_driver_clearBusCollision 0D1C  
  __size_of_i2c1_driver_clearBusCollision 0003             _i2c1_driver_clearBusCollision 0D19  
                          __CFG_STVREN$ON 0000           __size_of_do_I2C_DO_NACK_RESTART 0005  
                               ??_all_LED 0049                          ?_TMR0_Initialize 0070  
                 __end_of_PWM6_Initialize 0E30                            ?_do_I2C_DO_ACK 0070  
                                  cksum@i 0049                             ?_INT_CallBack 0070  
                 __end_of_DATAEE_ReadByte 0E6B                                 ??_sw1_EXT 0077  
                               ??_cksum_w 004F                           _ADCC_Initialize 0F0B  
             __end_of_i2c1_driver_sendACK 0D23                            _PMD_Initialize 0DB7  
          __end_of_do_I2C_DO_ADDRESS_NACK 06EA               __end_of_i2c1_driver_restart 0D0A  
                            ?_returnReset 0079                                 ?_ADC_read 0047  
                  ??_ADCC_StartConversion 0045               __end_of_i2c1_driver_startRX 0D10  
        __size_of_INT_SetInterruptHandler 0006  TMR0_SetInterruptHandler@InterruptHandler 0045  
TMR2_SetInterruptHandler@InterruptHandler 0045  TMR1_SetInterruptHandler@InterruptHandler 0045  
 INT_SetInterruptHandler@InterruptHandler 0045                   __end_of_TMR1_WriteTimer 0E9C  
                        ??_config_routine 0053                          ?_TMR1_Initialize 0070  
                       _SYSTEM_Initialize 0FE4                   __end_of__initialization 007A  
                         ??_i2c_setBuffer 0072                          _do_I2C_SEND_STOP 0D44  
                      __size_of_do_I2C_RX 004A                        __size_of_do_I2C_TX 0054  
                      ?_SYSTEM_Initialize 0070                  __size_of_mode_select_LED 0020  
                __size_of_do_I2C_TX_EMPTY 0033                       ___bmul@multiplicand 0045  
                 _rdBlkRegCompleteHandler 0F4E                            __pcstackCOMMON 0070  
                            __pidataBANK0 0D90                       ??_SYSTEM_Initialize 0047  
                               ?_TMR0_ISR 0070                                 ?_TMR1_ISR 0070  
                               ?_TMR2_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                           __end_of_cksum 079C                          _DATAEE_WriteByte 0738  
                        ?_TMR2_Initialize 0070                              LED_bin@value 0045  
                          ??_INT_CallBack 0078                    __end_of_PMD_Initialize 0DBF  
             __size_of_EXT_INT_Initialize 000E                                ??_ADC_read 0049  
             ADCC_StartConversion@channel 0045                            setCallBack@idx 0074  
                                 ??_cksum 0047                          ?_TMR0_StartTimer 0070  
                  _do_I2C_DO_NACK_RESTART 0D53                 __end_of_SYSTEM_Initialize 1000  
                          _mssp1_clearIRQ 0D16                                __pbssBANK0 0020  
                              __pbssBANK1 00A0            __size_of_rd2RegCompleteHandler 0011  
                                 ?_ISR_3s 0070             __end_of_rd2RegCompleteHandler 0EE0  
                      read_ring@nreg_init 004A            __size_of_wr2RegCompleteHandler 0011  
           __end_of_wr2RegCompleteHandler 0EAD                     _rd1RegCompleteHandler 0EBE  
                  ?_i2c1_driver_getRXData 0070                           _clock_subfields 02DF  
                      __size_of_read_ring 003F                     _wr1RegCompleteHandler 0EAD  
            __size_of_i2c_busCollisionISR 0004                                __pmaintext 007E  
                           ??_do_I2C_IDLE 0070                      __size_of_setCallBack 0026  
                           ??_do_I2C_RCEN 0070                                   ?___bmul 0045  
        __end_of_TMR0_SetInterruptHandler 0D6A                   __size_of_TMR0_StopTimer 0003  
                              ??_TMR0_ISR 0075                                ??_TMR1_ISR 0072  
                         __CFG_PPS1WAY$ON 0000                                ??_TMR2_ISR 0071  
                 __end_of_ADCC_Initialize 0F21                __end_of_PWM6_LoadDutyValue 0FB0  
                         ??_do_I2C_DO_ACK 0070                                __pintentry 0004  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                                 _ADPREVH 008F                                   _ADPREVL 008E  
                        ?_PWM6_Initialize 0070                       i2c_setBuffer@buffer 0073  
                                 _ADSTPTH 0113                                   _ADSTPTL 0112  
                         ?_PMD_Initialize 0070            ?_i2c1_driver_clearBusCollision 0070  
                        ?_DATAEE_ReadByte 0045                         __end_of_do_I2C_RX 0522  
                       __end_of_do_I2C_TX 03F1                         ?_i2c1_driver_stop 0070  
           i1PWM6_LoadDutyValue@dutyValue 0070                      __size_of_recoverData 0098  
                                 _LED_bin 0FCA                          _handler_clock_ms 0E09  
                                 _INT_ISR 0D58                        ??_i2c1_driver_stop 0070  
                                 _OSCCON1 088D                                   _OSCCON3 088F  
                           ?_mssp1_setIRQ 0070                      i1_PWM6_LoadDutyValue 0EF5  
                                 _NVMADRH 081B                                   _NVMADRL 081A  
                                 _NVMDATH 081D                                   _OSCTUNE 0892  
                                 _NVMDATL 081C                                   _NVMCON2 081F  
                                 _PWM6DCH 038D                                   _PWM6DCL 038C  
                                 _PWM6CON 038E                                   _SSP1ADD 018D  
                                 _SLRCONA 0F3B                                   _SLRCONB 0F46  
                                 _SLRCONC 0F51                                   _SLRCOND 0F5C  
                                 _SLRCONE 0F67                                   _SSP1BUF 018C  
                  __end_of_mssp1_clearIRQ 0D19                                   _SSP1MSK 018E  
          __size_of_ADCC_IsConversionDone 0007                                 ?_mod1_LED 0070  
                               ?_mod2_LED 0070                                 ?_mod3_LED 0070  
                               ?_mod4_LED 0070             __end_of_ADCC_IsConversionDone 0D90  
                 ??_do_I2C_SEND_ADR_WRITE 0071                        __size_of_push_ring 0047  
                        ?_TMR1_WriteTimer 0070               ??_do_I2C_SEND_RESTART_WRITE 0070  
                      _i2c1_driver_TXData 0D2B                      DATAEE_WriteByte@bAdd 004B  
                      _i2c1_driver_i2cISR 0032                           __size_of_ISR_3s 0019  
                                 _i2c_ISR 0664                 ??_rdBlkRegCompleteHandler 007A  
                      _i2c1_driver_isNACK 0D97                       ?_i2c1_driver_TXData 0070  
              ??_TMR2_SetInterruptHandler 0047                      __CFG_SCANE$available 0000  
               __size_of_checkDebounceSW1 004D                 __size_of_checkDebounceSW2 004D  
                         __size_of___bmul 0016                         ??_mode_select_LED 0049  
                       ??_do_I2C_TX_EMPTY 007A                                   _all_LED 0342  
                     ?_i2c1_driver_isNACK 0070                                   __ptext1 01B9  
                                 __ptext2 07DB                                   __ptext3 0E7B  
                                 __ptext4 077C                                   __ptext5 05F2  
                                 __ptext6 0F21                                   __ptext7 0E5C  
                                 __ptext8 056B                                   __ptext9 0738  
                     __end_of_do_I2C_IDLE 0D35                       __end_of_do_I2C_RCEN 0D89  
                                 _sw1_EXT 06EA            ??_TMR1_DefaultInterruptHandler 0070  
                                 _cksum_w 0E7B                                 _T1CONbits 020E  
                   _OSCILLATOR_Initialize 07F7                                   _last_ms 003B  
                               _T2CONbits 028E               __end_of_do_I2C_SEND_RESTART 0D44  
                          ??_mssp1_setIRQ 0070                                _duty_cycle 0024  
                             reset_recv@i 004F         __size_of_TMR1_SetInterruptHandler 0006  
                   ?i1_PWM6_LoadDutyValue 0070                      ??_i2c1_driver_TXData 0070  
                       __end_of_read_ring 0631                  ??_PIN_MANAGER_Initialize 0045  
               ?_TMR1_SetInterruptHandler 0045                                 _T2HLTbits 028F  
                                 _nreg_pt 0040                   _INT_SetInterruptHandler 0D5E  
                                 _lum_bin 0022               __size_of_increment_subfield 0040  
                         ?_mssp1_clearIRQ 0070                                ??_mod1_LED 0049  
                              ??_mod2_LED 0049                                ??_mod3_LED 0049  
                              ??_mod4_LED 0049                  _do_I2C_SEND_RESTART_READ 0D35  
              __size_of_SYSTEM_Initialize 001C                                   clrloop0 0D77  
                              _hours_tens 002E                      __size_of_returnReset 0002  
                    end_of_initialization 007A                   __end_of_clock_subfields 0342  
                               _T2RSTbits 0291                      ??_i2c1_driver_isNACK 0070  
               __size_of_i2c_restartWrite 0002                                   init_ram 0D7C  
            __end_of_i2c1_driver_sendNACK 0D27                    ?_rd1RegCompleteHandler 0079  
                                 initloop 0D7D                      __end_of_INT_CallBack 0E09  
                  ?_wr1RegCompleteHandler 0079              __end_of_i2c1_driver_resetBus 0D00  
                              _reset_recv 07DB                             push_ring@nreg 004F  
               _do_I2C_SEND_RESTART_WRITE 0D3A                          ?_ADCC_Initialize 0070  
                       __end_of_push_ring 05B2                     __CFG_WDTCPS$WDTCPS_14 0000  
                              _returnStop 0D02                  _TMR0_SetInterruptHandler 0D64  
                               _PORTBbits 000D                                 _PORTCbits 000E  
         __end_of_rdBlkRegCompleteHandler 0F66                  __end_of_do_I2C_SEND_STOP 0D49  
                    __CFG_WDTCCS$HFINTOSC 0000                __end_ofi1_checkDebounceSW1 04D8  
                               _TRISCbits 0013      __size_of_i2c_setDataCompleteCallback 000D  
                             returnStop@p 0079                          __CFG_FEXTOSC$OFF 0000  
                       __size_of_ADC_read 001A                  __end_of_DATAEE_WriteByte 075C  
            i2c_setDataCompleteCallback@p 0077                            __end_of_ISR_3s 0F97  
           __size_of_do_I2C_SEND_ADR_READ 0009                            _TMR0_StopTimer 0D04  
                             _do_I2C_IDLE 0D30                               _do_I2C_RCEN 0D82  
    __end_of_TMR2_DefaultInterruptHandler 0CFF     __size_of_TMR2_DefaultInterruptHandler 0001  
            _TMR2_DefaultInterruptHandler 0CFE                            __end_of___bmul 0F37  
                       __size_of_TMR0_ISR 000F                         __size_of_TMR1_ISR 0017  
                       __size_of_TMR2_ISR 000F                    ?_OSCILLATOR_Initialize 0070  
       __size_of_ADCC_GetConversionResult 0009                 ??_INT_SetInterruptHandler 0047  
            __size_of_do_I2C_DO_NACK_STOP 0005                 ?_ADCC_GetConversionResult 0045  
                  ??i1_PWM6_LoadDutyValue 0072                   ?_do_I2C_DO_NACK_RESTART 0070  
                     start_initialization 005D                       _i2c_busCollisionISR 0D27  
                __size_of_TMR0_Initialize 0015           __size_of_PIN_MANAGER_Initialize 0049  
           __size_of_ADCC_StartConversion 0008                              setCallBack@p 0072  
            __size_of_i2c1_driver_sendACK 0004                          ?_clock_subfields 0070  
                 i2c_setBuffer@bufferSize 0070                   ??_i2c1_driver_getRXData 0070  
                  rd1RegCompleteHandler@p 0079                                  ??_ISR_3s 0074  
            __size_of_i2c1_driver_restart 0003                   clock_subfields@subfield 0051  
            __size_of_i2c1_driver_startRX 0003                       DATAEE_ReadByte@bAdd 0045  
                   __end_of_i2c_setBuffer 0E7B              ?_INT_DefaultInterruptHandler 0070  
                  __end_of_TMR0_StopTimer 0D07                  __end_of_handler_clock_ms 0E16  
                    ?_i2c_busCollisionISR 0070                          __CFG_LPBOREN$OFF 0000  
                             ?_reset_recv 0070                      __end_of_mssp1_setIRQ 0D16  
                __size_of_TMR1_Initialize 001F                                  ??___bmul 0046  
                        ??_PMD_Initialize 0045                          _checkDebounceSW1 043E  
                        _checkDebounceSW2 03F1                    wr1RegCompleteHandler@p 0079  
                           ?_do_I2C_RESET 0070                               __pdataBANK0 0065  
              __end_of_EXT_INT_Initialize 0E3E             ?_TMR2_DefaultInterruptHandler 0070  
                             ?_returnStop 0079            __end_of_do_I2C_DO_NACK_RESTART 0D58  
                              read_ring@i 004F                      _i2c1_driver_sendNACK 0D23  
                       read_ring@absindex 0051                                  ?_LED_bin 0045  
                             __pbssCOMMON 007D                                 ___latbits 0002  
                    _i2c1_driver_resetBus 0CFF                                  ?_INT_ISR 0070  
                           __pcstackBANK0 0042                             __pcstackBANK1 00C2  
                      _PWM6_LoadDutyValue 0F97                  __size_of_TMR2_Initialize 0018  
                               _do_I2C_RX 04D8                                 _do_I2C_TX 039D  
                   __size_of_INT_CallBack 000D            __size_of_do_I2C_SEND_ADR_WRITE 0008  
                       __size_of_mod1_LED 000B                         __size_of_mod2_LED 000A  
           __end_of_do_I2C_SEND_ADR_WRITE 0DAF                         __size_of_mod3_LED 000B  
                       __size_of_mod4_LED 000B                       ?_PWM6_LoadDutyValue 0045  
                        _i2c_restartWrite 0D00                           _mode_select_LED 079C  
               __size_of_i2c1_driver_stop 0003                                  ?_i2c_ISR 0070  
                         _do_I2C_TX_EMPTY 0631                     _TMR0_InterruptHandler 005B  
                           ??_setCallBack 0073                                 __pnvBANK0 005B  
                   _rd2RegCompleteHandler 0ECF                  __size_of_TMR0_StartTimer 0003  
                         ?_TMR0_StopTimer 0070                     ??_i2c_busCollisionISR 0070  
                   __end_of_fsmStateTable 077C                                 _main$2289 00C4  
                  _PIN_MANAGER_Initialize 0522                     _wr2RegCompleteHandler 0E9C  
           ??_INT_DefaultInterruptHandler 0070                   __size_of_config_routine 008E  
        __end_of_TMR1_SetInterruptHandler 0D70                         read_ring@subindex 004C  
                          ??_do_I2C_RESET 0070                                 __ptext100 0EF5  
                ??_do_I2C_DO_ADDRESS_NACK 007A               _i2c1_driver_busCollisionISR 0034  
                                ?_all_LED 0070                     __end_of_do_I2C_DO_ACK 0D4E  
                    ??_PWM6_LoadDutyValue 0047                             ??_recoverData 0051  
            ??_INTERRUPT_InterruptManager 007D                ??_do_I2C_SEND_RESTART_READ 0070  
                   ?_i2c1_driver_sendNACK 0070                                  ?_sw1_EXT 0070  
                                ?_cksum_w 0070                              _INT_CallBack 0DFC  
                        ??_mssp1_clearIRQ 0070                     ?_i2c1_driver_resetBus 0070  
      __size_of_do_I2C_SEND_RESTART_WRITE 0005                                  _ADC_read 0FB0  
                              ?_do_I2C_RX 0070                                ?_do_I2C_TX 0070  
                __size_of_PWM6_Initialize 000D                       __size_of_reset_recv 001C  
                          __size_of_cksum 0020                                  _T2CLKCON 0290  
                __size_of_DATAEE_ReadByte 000F                   ??_rd1RegCompleteHandler 007A  
                               _read_ring 05F2                                 _min_units 0028  
                 ??_wr1RegCompleteHandler 007A                     _ADCC_IsConversionDone 0D89  
                       ??_TMR0_Initialize 0047                                  _LATAbits 0016  
                     __size_of_returnStop 0002                                 clear_ram0 0D76  
                                _PIE0bits 0716                         _handler_clock_hms 0691  
                               _nreg_init 0041                                  _PIE3bits 0719  
                                _PIE4bits 071A                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 0057                             _lum_threshold 0020  
              ??_TMR0_SetInterruptHandler 0047                                  _PIR0bits 070C  
                             _config_mode 007D                                  _PIR3bits 070F  
                               _ring_byte 00BD                                  _PIR4bits 0710  
                      ?_handler_clock_hms 0070                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR0_ISR 0E3E  
                                _TMR1_ISR 0F37                                  _TMR2_ISR 0E4D  
            ?_i2c_setDataCompleteCallback 0075                                  _SSP1STAT 018F  
                     __end_of_setCallBack 0738                          push_ring@nreg_pt 0055  
                     ??_handler_clock_hms 0070                         ??_TMR1_Initialize 0047  
                              _ADCON0bits 0093                                _ADCON1bits 0094  
                              _ADCON2bits 0095                                _ADCON3bits 0096  
                               _push_ring 056B                         ?_do_I2C_SEND_STOP 0070  
                                _WPUBbits 0F44                __end_of_increment_subfield 05F2  
    __size_of_INT_DefaultInterruptHandler 0001            ??_TMR2_DefaultInterruptHandler 0070  
       __size_of_TMR2_SetInterruptHandler 0006                             ??_returnReset 007A  
               ?_TMR2_SetInterruptHandler 0045                        ??_do_I2C_SEND_STOP 0070  
             __size_of_i2c1_driver_TXData 0005                          __size_of_LED_bin 001A  
                   DATAEE_WriteByte@bData 004D                       __end_of_recoverData 0251  
       __end_of_do_I2C_SEND_RESTART_WRITE 0D3F                          __size_of_INT_ISR 0006  
                 __end_of_mode_select_LED 07BC                   __end_of_do_I2C_TX_EMPTY 0664  
                              ?_read_ring 0049                  ?_rdBlkRegCompleteHandler 0079  
                       ?_DATAEE_WriteByte 004B              __size_of_do_I2C_SEND_RESTART 0005  
             __size_of_i2c1_driver_isNACK 0008                 __end_of_handler_clock_hms 06BE  
                   __size_of_mssp1_setIRQ 0003                         ??_TMR2_Initialize 0047  
                  ?_rd2RegCompleteHandler 0079                        ??_DATAEE_WriteByte 004E  
                      i1_checkDebounceSW1 048B                       _do_I2C_DO_NACK_STOP 0D4E  
                        __size_of_i2c_ISR 002D                    ?_wr2RegCompleteHandler 0079  
                              _ADSTATbits 0097          __end_of_ADCC_GetConversionResult 0DD1  
                            ?_do_I2C_IDLE 0070                       ?i1_checkDebounceSW1 0070  
                            ?_do_I2C_RCEN 0070                                push_ring@i 0054  
                 ??_OSCILLATOR_Initialize 0045                         ??_TMR0_StartTimer 0045  
                     _i2c1_driver_sendACK 0D1F           __size_of_do_I2C_DO_ADDRESS_NACK 002C  
                     i2c1_driver_TXData@d 0070                    ??_i2c1_driver_sendNACK 0070  
           ??_i2c_setDataCompleteCallback 0078                          __size_of_all_LED 005B  
                     _i2c1_driver_restart 0D07                  _TMR1_SetInterruptHandler 0D6A  
                    ?_do_I2C_DO_NACK_STOP 0070                       _i2c1_driver_startRX 0D0D  
            __end_of_do_I2C_SEND_ADR_READ 0DC8                                ?_push_ring 004F  
                  ??_i2c1_driver_resetBus 0070                     _TMR1_InterruptHandler 005F  
                        __size_of_sw1_EXT 0028                          __size_of_cksum_w 0010  
                              _T0CON0bits 001E                  __size_of_ADCC_Initialize 0016  
                        read_ring@nreg_pt 0050                              _mssp1_setIRQ 0D13  
                             ??_do_I2C_RX 007A                               ??_do_I2C_TX 007A  
                    ??i1_checkDebounceSW1 0070                                  __ptext10 0251  
                                __ptext11 079C                                  __ptext20 0342  
                                __ptext12 02DF                                  __ptext21 0F97  
                                __ptext13 0DF1                                _T1GCONbits 020F  
                                __ptext30 0E23                                  __ptext22 0D1C  
                                __ptext14 0DE6                                  __ptext31 0DB7  
                                __ptext23 0FE4                                  __ptext15 0DD1  
                                __ptext40 0D89                                  __ptext32 0522  
                                __ptext24 0F66                                  __ptext16 0DDB  
                                __ptext41 0DC8                                  __ptext33 07F7  
                                __ptext25 0D70                                  __ptext17 05B2  
                                __ptext50 0D53                                  __ptext34 0E30  
                                __ptext26 07BC                                  __ptext18 03F1  
                                __ptext51 0D4E                                  __ptext43 0D27  
                                __ptext35 0D5E                                  __ptext27 0D6A  
                                __ptext19 043E                                  __ptext60 0D30  
                                __ptext52 0D49                                  __ptext44 0D19  
                                __ptext36 0F0B                                  __ptext28 0EE0  
                                __ptext61 0D9F                                  __ptext53 0D82  
                                __ptext45 0664                                  __ptext37 0FCA  
                                __ptext29 0D64                                  __ptext70 0F4E  
                                __ptext62 0631                                  __ptext54 0DA7  
                                __ptext46 0D16                                  __ptext38 0FB0  
                                __ptext71 0ECF                                  __ptext63 0D13  
                                __ptext55 0DBF                                  __ptext47 04D8  
                                __ptext39 0DAF                                  __ptext80 0E6B  
                                __ptext72 0EBE                                  __ptext64 0D97  
                                __ptext56 0D44                                  __ptext48 039D  
                                __ptext81 0D0A                                  __ptext73 0EAD  
                                __ptext65 0D2B                                  __ptext57 0D3F  
                                __ptext49 06BE                                  __ptext90 0E8B  
                                __ptext82 0D07                                  __ptext74 0002  
                                __ptext66 0D10                                  __ptext58 0D3A  
                                __ptext91 0E3E                                  __ptext83 0D1F  
                                __ptext75 0D02                                  __ptext67 0D23  
                                __ptext59 0D35                                  __ptext92 0F7E  
                                __ptext84 0E4D                                  __ptext76 0D00  
                                __ptext68 0CFF                                  __ptext93 0CFC  
                                __ptext85 0CFE                                  __ptext77 0E9C  
                                __ptext69 0D0D                                  __ptext94 0D04  
                                __ptext86 0E09                                  __ptext78 0E16  
                                __ptext95 0D58                                  __ptext87 0F37  
                                __ptext79 0712                                  __ptext96 0DFC  
                                __ptext88 0CFD                                  __ptext97 0CFB  
                                __ptext89 0691                                  __ptext98 06EA  
                                __ptext99 048B                                  _mod1_LED 0DDB  
                            _SSP1CON1bits 0190                                  _mod2_LED 0DD1  
                __end_of_checkDebounceSW1 048B                              _SSP1CON2bits 0191  
                __end_of_checkDebounceSW2 043E                                  _mod3_LED 0DE6  
                                _mod4_LED 0DF1                    ?_ADCC_IsConversionDone 0070  
                    ?_i2c1_driver_sendACK 0070                      __end_of_do_I2C_RESET 0DA7  
             DATAEE_WriteByte@GIEBitValue 004E                      ?_i2c1_driver_restart 0070  
                     __end_of_returnReset 0004                                  _last_ms2 003A  
                       ??_PWM6_Initialize 0045                          _i2c1_driver_stop 0D0A  
                           __size_of_main 013B                      ?_i2c1_driver_startRX 0070  
          __size_of_i2c1_driver_getRXData 0003                                  _min_tens 002A  
           __end_of_i2c1_driver_getRXData 0D13      __end_of_TMR0_DefaultInterruptHandler 0CFD  
   __size_of_TMR0_DefaultInterruptHandler 0001              _TMR0_DefaultInterruptHandler 0CFC  
                       ??_DATAEE_ReadByte 0047                      __CFG_WDTCWS$WDTCWS_7 0000  
                             _setCallBack 0712                              ??_reset_recv 004F  
                       ?_handler_clock_ms 0070                                  _set_mode 0039  
                          _config_routine 0251              __end_of_ADCC_StartConversion 0DB7  
                                int$flags 007E                        ??_handler_clock_ms 0070  
      __end_of_INTERRUPT_InterruptManager 005B                _INTERRUPT_InterruptManager 0004  
                     _mode_field_subfield 0065                              _SSP1STATbits 018F  
                       ??_TMR1_WriteTimer 0072                                  cksum@res 0048  
        __end_of_do_I2C_SEND_RESTART_READ 0D3A                              ??_returnStop 007A  
                             _hours_units 002C                  __end_of_i2c_restartWrite 0D02  
                   ??_do_I2C_DO_NACK_STOP 0070                               _recoverData 01B9  
                              _INTCONbits 000B                               _NVMCON1bits 081E  
           __size_ofi1_PWM6_LoadDutyValue 0016                      _INT_InterruptHandler 0063  
                        ?_mode_select_LED 0070                        __end_of_reset_recv 07F7  
                   ??_i2c1_driver_sendACK 0070                        _EXT_INT_Initialize 0E30  
                        ?_do_I2C_TX_EMPTY 0070                               ??_read_ring 004D  
                  _do_I2C_DO_ADDRESS_NACK 06BE                                  intlevel1 0000  
                        ??_TMR0_StopTimer 0070                     ??_i2c1_driver_restart 0070  
              __size_of_handler_clock_hms 002D                    rd2RegCompleteHandler@p 0079  
                   ??_i2c1_driver_startRX 0070                   ?_PIN_MANAGER_Initialize 0070  
                       i2c_restartWrite@p 0079                         __CFG_CLKOUTEN$OFF 0000  
                     ?_EXT_INT_Initialize 0070                        __end_of_returnStop 0D04  
                  __end_of_config_routine 02DF             ?_TMR0_DefaultInterruptHandler 0070  
                __size_of_clock_subfields 0063                    wr2RegCompleteHandler@p 0079  
                ?_INT_SetInterruptHandler 0045                  _ADCC_GetConversionResult 0DC8  
                           __pstringtext1 075C                      ??_EXT_INT_Initialize 0047  
                          read_ring@index 004B                               ??_push_ring 0052  
                              _SSP1DATPPS 0EC6                                _SSP1CLKPPS 0EC5  
                         _TMR0_Initialize 0EE0                    __size_of_i2c_setBuffer 0010  
                             _returnReset 0002               PWM6_LoadDutyValue@dutyValue 0045  
                           read_ring@nreg 0049            __end_of_PIN_MANAGER_Initialize 056B  
                       ??_ADCC_Initialize 0045               __end_of_i2c_busCollisionISR 0D2B  
          __size_of_rd1RegCompleteHandler 0011             __end_of_rd1RegCompleteHandler 0ECF  
                      push_ring@nreg_init 0050            __size_of_wr1RegCompleteHandler 0011  
           __end_of_wr1RegCompleteHandler 0EBE                     _TMR2_InterruptHandler 005D  
                   _do_I2C_SEND_ADR_WRITE 0DA7                        push_ring@ring_byte 0051  
                    _do_I2C_SEND_ADR_READ 0DBF                           ?_config_routine 0070  
                         _TMR1_Initialize 07BC  
