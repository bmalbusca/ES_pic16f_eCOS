

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Nov  3 15:58:46 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	intentry,global,class=CODE,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,delta=2
    64                           	psect	text48,local,class=CODE,merge=1,delta=2
    65                           	psect	text49,local,class=CODE,merge=1,delta=2
    66                           	psect	text50,local,class=CODE,merge=1,delta=2
    67                           	psect	text51,local,class=CODE,merge=1,delta=2
    68                           	psect	text52,local,class=CODE,merge=1,delta=2
    69                           	psect	text53,local,class=CODE,merge=1,delta=2
    70                           	psect	text54,local,class=CODE,merge=1,delta=2
    71                           	psect	text55,local,class=CODE,merge=1,delta=2
    72                           	psect	text56,local,class=CODE,merge=1,delta=2
    73                           	psect	text57,local,class=CODE,merge=1,delta=2
    74                           	psect	text58,local,class=CODE,merge=1,delta=2
    75                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    76                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    77                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
    78                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
    79                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    80                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    81                           	psect	text65,local,class=CODE,merge=1,inline,delta=2
    82                           	psect	text66,local,class=CODE,merge=1,delta=2
    83                           	psect	text67,local,class=CODE,merge=1,delta=2
    84                           	psect	text68,local,class=CODE,merge=1,delta=2
    85                           	psect	text69,local,class=CODE,merge=1,delta=2
    86                           	psect	text70,local,class=CODE,merge=1,delta=2
    87                           	psect	text71,local,class=CODE,merge=1,delta=2
    88                           	psect	text72,local,class=CODE,merge=1,delta=2
    89                           	psect	text73,local,class=CODE,merge=1,delta=2
    90                           	psect	text74,local,class=CODE,merge=1,delta=2
    91                           	psect	text75,local,class=CODE,merge=1,delta=2
    92                           	psect	text76,local,class=CODE,merge=1,delta=2
    93                           	psect	text77,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
    95                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
    96                           	psect	text80,local,class=CODE,merge=1,delta=2
    97                           	psect	text81,local,class=CODE,merge=1,delta=2
    98                           	psect	text82,local,class=CODE,merge=1,delta=2
    99                           	psect	text83,local,class=CODE,merge=1,delta=2
   100                           	psect	text84,local,class=CODE,merge=1,delta=2
   101                           	psect	text85,local,class=CODE,merge=1,delta=2
   102                           	psect	text86,local,class=CODE,merge=1,delta=2
   103                           	psect	text87,local,class=CODE,merge=1,delta=2
   104                           	psect	text88,local,class=CODE,merge=1,delta=2
   105                           	psect	text89,local,class=CODE,merge=1,delta=2
   106                           	psect	text90,local,class=CODE,merge=1,delta=2
   107                           	psect	text91,local,class=CODE,merge=1,delta=2
   108                           	psect	text92,local,class=CODE,merge=1,delta=2
   109                           	psect	text93,local,class=CODE,merge=1,delta=2
   110                           	psect	text94,local,class=CODE,merge=1,delta=2
   111                           	psect	text95,local,class=CODE,merge=1,delta=2
   112                           	psect	text96,local,class=CODE,merge=1,delta=2
   113                           	dabs	1,0x7E,2
   114  0000                     
   115                           ; Version 2.10
   116                           ; Generated 31/07/2019 GMT
   117                           ; 
   118                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   119                           ; All rights reserved.
   120                           ; 
   121                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   122                           ; 
   123                           ; Redistribution and use in source and binary forms, with or without modification, are
   124                           ; permitted provided that the following conditions are met:
   125                           ; 
   126                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   127                           ;        conditions and the following disclaimer.
   128                           ; 
   129                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   130                           ;        of conditions and the following disclaimer in the documentation and/or other
   131                           ;        materials provided with the distribution.
   132                           ; 
   133                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   134                           ;        software without specific prior written permission.
   135                           ; 
   136                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   137                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   138                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   139                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   140                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   141                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   142                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   143                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   144                           ; 
   145                           ; 
   146                           ; Code-generator required, PIC16F18875 Definitions
   147                           ; 
   148                           ; SFR Addresses
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000F                     	;# 
   165  0010                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001C                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001D                     	;# 
   180  001E                     	;# 
   181  001F                     	;# 
   182  008C                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0110                     	;# 
   209  0110                     	;# 
   210  0111                     	;# 
   211  0112                     	;# 
   212  0112                     	;# 
   213  0113                     	;# 
   214  0114                     	;# 
   215  0114                     	;# 
   216  0115                     	;# 
   217  0116                     	;# 
   218  0116                     	;# 
   219  0117                     	;# 
   220  0119                     	;# 
   221  0119                     	;# 
   222  0119                     	;# 
   223  011A                     	;# 
   224  011A                     	;# 
   225  011A                     	;# 
   226  011B                     	;# 
   227  011B                     	;# 
   228  011B                     	;# 
   229  011B                     	;# 
   230  011B                     	;# 
   231  011C                     	;# 
   232  011C                     	;# 
   233  011C                     	;# 
   234  011D                     	;# 
   235  011D                     	;# 
   236  011D                     	;# 
   237  011E                     	;# 
   238  011E                     	;# 
   239  011E                     	;# 
   240  011F                     	;# 
   241  011F                     	;# 
   242  011F                     	;# 
   243  011F                     	;# 
   244  011F                     	;# 
   245  018C                     	;# 
   246  018D                     	;# 
   247  018E                     	;# 
   248  018F                     	;# 
   249  0190                     	;# 
   250  0191                     	;# 
   251  0192                     	;# 
   252  0196                     	;# 
   253  0197                     	;# 
   254  0198                     	;# 
   255  0199                     	;# 
   256  019A                     	;# 
   257  019B                     	;# 
   258  019C                     	;# 
   259  020C                     	;# 
   260  020C                     	;# 
   261  020D                     	;# 
   262  020E                     	;# 
   263  020F                     	;# 
   264  020F                     	;# 
   265  0210                     	;# 
   266  0210                     	;# 
   267  0211                     	;# 
   268  0211                     	;# 
   269  0212                     	;# 
   270  0212                     	;# 
   271  0213                     	;# 
   272  0214                     	;# 
   273  0215                     	;# 
   274  0215                     	;# 
   275  0216                     	;# 
   276  0216                     	;# 
   277  0217                     	;# 
   278  0217                     	;# 
   279  0218                     	;# 
   280  0218                     	;# 
   281  0219                     	;# 
   282  021A                     	;# 
   283  021B                     	;# 
   284  021B                     	;# 
   285  021C                     	;# 
   286  021C                     	;# 
   287  021D                     	;# 
   288  021D                     	;# 
   289  021E                     	;# 
   290  021F                     	;# 
   291  028C                     	;# 
   292  028C                     	;# 
   293  028D                     	;# 
   294  028D                     	;# 
   295  028E                     	;# 
   296  028F                     	;# 
   297  0290                     	;# 
   298  0290                     	;# 
   299  0291                     	;# 
   300  0292                     	;# 
   301  0292                     	;# 
   302  0293                     	;# 
   303  0293                     	;# 
   304  0294                     	;# 
   305  0295                     	;# 
   306  0296                     	;# 
   307  0296                     	;# 
   308  0297                     	;# 
   309  0298                     	;# 
   310  0298                     	;# 
   311  0299                     	;# 
   312  0299                     	;# 
   313  029A                     	;# 
   314  029B                     	;# 
   315  029C                     	;# 
   316  029C                     	;# 
   317  029D                     	;# 
   318  030C                     	;# 
   319  030C                     	;# 
   320  030D                     	;# 
   321  030E                     	;# 
   322  030F                     	;# 
   323  0310                     	;# 
   324  0310                     	;# 
   325  0311                     	;# 
   326  0312                     	;# 
   327  0313                     	;# 
   328  0314                     	;# 
   329  0314                     	;# 
   330  0315                     	;# 
   331  0316                     	;# 
   332  0317                     	;# 
   333  0318                     	;# 
   334  0318                     	;# 
   335  0319                     	;# 
   336  031A                     	;# 
   337  031B                     	;# 
   338  031C                     	;# 
   339  031C                     	;# 
   340  031D                     	;# 
   341  031E                     	;# 
   342  031F                     	;# 
   343  038C                     	;# 
   344  038C                     	;# 
   345  038D                     	;# 
   346  038E                     	;# 
   347  0390                     	;# 
   348  0390                     	;# 
   349  0391                     	;# 
   350  0392                     	;# 
   351  040C                     	;# 
   352  040D                     	;# 
   353  040E                     	;# 
   354  040F                     	;# 
   355  0410                     	;# 
   356  0411                     	;# 
   357  0416                     	;# 
   358  0416                     	;# 
   359  0417                     	;# 
   360  0418                     	;# 
   361  0418                     	;# 
   362  0419                     	;# 
   363  041A                     	;# 
   364  041A                     	;# 
   365  041B                     	;# 
   366  041C                     	;# 
   367  041C                     	;# 
   368  041D                     	;# 
   369  041E                     	;# 
   370  041F                     	;# 
   371  048C                     	;# 
   372  048C                     	;# 
   373  048D                     	;# 
   374  048E                     	;# 
   375  048F                     	;# 
   376  048F                     	;# 
   377  0490                     	;# 
   378  0491                     	;# 
   379  0492                     	;# 
   380  0492                     	;# 
   381  0493                     	;# 
   382  0494                     	;# 
   383  0495                     	;# 
   384  0495                     	;# 
   385  0496                     	;# 
   386  0497                     	;# 
   387  0498                     	;# 
   388  0499                     	;# 
   389  049A                     	;# 
   390  049B                     	;# 
   391  049C                     	;# 
   392  049D                     	;# 
   393  050C                     	;# 
   394  050C                     	;# 
   395  050D                     	;# 
   396  050E                     	;# 
   397  050F                     	;# 
   398  050F                     	;# 
   399  0510                     	;# 
   400  0511                     	;# 
   401  0512                     	;# 
   402  0512                     	;# 
   403  0513                     	;# 
   404  0514                     	;# 
   405  0515                     	;# 
   406  0515                     	;# 
   407  0516                     	;# 
   408  0517                     	;# 
   409  0518                     	;# 
   410  0519                     	;# 
   411  051A                     	;# 
   412  051B                     	;# 
   413  051C                     	;# 
   414  051D                     	;# 
   415  058C                     	;# 
   416  058C                     	;# 
   417  058D                     	;# 
   418  058E                     	;# 
   419  058F                     	;# 
   420  058F                     	;# 
   421  0590                     	;# 
   422  0591                     	;# 
   423  0592                     	;# 
   424  0593                     	;# 
   425  060C                     	;# 
   426  060D                     	;# 
   427  060E                     	;# 
   428  060F                     	;# 
   429  0610                     	;# 
   430  0611                     	;# 
   431  0612                     	;# 
   432  0613                     	;# 
   433  0614                     	;# 
   434  0616                     	;# 
   435  0617                     	;# 
   436  0618                     	;# 
   437  0619                     	;# 
   438  061A                     	;# 
   439  061B                     	;# 
   440  061C                     	;# 
   441  061D                     	;# 
   442  061E                     	;# 
   443  068C                     	;# 
   444  068D                     	;# 
   445  068E                     	;# 
   446  068F                     	;# 
   447  0690                     	;# 
   448  0691                     	;# 
   449  0692                     	;# 
   450  0693                     	;# 
   451  0694                     	;# 
   452  070C                     	;# 
   453  070D                     	;# 
   454  070E                     	;# 
   455  070F                     	;# 
   456  0710                     	;# 
   457  0711                     	;# 
   458  0712                     	;# 
   459  0713                     	;# 
   460  0714                     	;# 
   461  0716                     	;# 
   462  0717                     	;# 
   463  0718                     	;# 
   464  0719                     	;# 
   465  071A                     	;# 
   466  071B                     	;# 
   467  071C                     	;# 
   468  071D                     	;# 
   469  071E                     	;# 
   470  0796                     	;# 
   471  0797                     	;# 
   472  0798                     	;# 
   473  0799                     	;# 
   474  079A                     	;# 
   475  079B                     	;# 
   476  080C                     	;# 
   477  080D                     	;# 
   478  080E                     	;# 
   479  080F                     	;# 
   480  0810                     	;# 
   481  0811                     	;# 
   482  0812                     	;# 
   483  0813                     	;# 
   484  0814                     	;# 
   485  081A                     	;# 
   486  081B                     	;# 
   487  081C                     	;# 
   488  081D                     	;# 
   489  081E                     	;# 
   490  081F                     	;# 
   491  088C                     	;# 
   492  088D                     	;# 
   493  088E                     	;# 
   494  088F                     	;# 
   495  0890                     	;# 
   496  0891                     	;# 
   497  0892                     	;# 
   498  0893                     	;# 
   499  0895                     	;# 
   500  0896                     	;# 
   501  0897                     	;# 
   502  0898                     	;# 
   503  0899                     	;# 
   504  089A                     	;# 
   505  089B                     	;# 
   506  090C                     	;# 
   507  090E                     	;# 
   508  090F                     	;# 
   509  091F                     	;# 
   510  091F                     	;# 
   511  098F                     	;# 
   512  098F                     	;# 
   513  0990                     	;# 
   514  0991                     	;# 
   515  0992                     	;# 
   516  0993                     	;# 
   517  0994                     	;# 
   518  0995                     	;# 
   519  0996                     	;# 
   520  0997                     	;# 
   521  0E0F                     	;# 
   522  0E10                     	;# 
   523  0E11                     	;# 
   524  0E12                     	;# 
   525  0E13                     	;# 
   526  0E14                     	;# 
   527  0E15                     	;# 
   528  0E16                     	;# 
   529  0E17                     	;# 
   530  0E18                     	;# 
   531  0E19                     	;# 
   532  0E1A                     	;# 
   533  0E1B                     	;# 
   534  0E1C                     	;# 
   535  0E1D                     	;# 
   536  0E1E                     	;# 
   537  0E1F                     	;# 
   538  0E20                     	;# 
   539  0E21                     	;# 
   540  0E22                     	;# 
   541  0E23                     	;# 
   542  0E24                     	;# 
   543  0E25                     	;# 
   544  0E26                     	;# 
   545  0E27                     	;# 
   546  0E28                     	;# 
   547  0E29                     	;# 
   548  0E2A                     	;# 
   549  0E2B                     	;# 
   550  0E2C                     	;# 
   551  0E2D                     	;# 
   552  0E2E                     	;# 
   553  0E2F                     	;# 
   554  0E30                     	;# 
   555  0E31                     	;# 
   556  0E32                     	;# 
   557  0E33                     	;# 
   558  0E34                     	;# 
   559  0E35                     	;# 
   560  0E36                     	;# 
   561  0E37                     	;# 
   562  0E8F                     	;# 
   563  0E90                     	;# 
   564  0E91                     	;# 
   565  0E92                     	;# 
   566  0E93                     	;# 
   567  0E94                     	;# 
   568  0E95                     	;# 
   569  0E96                     	;# 
   570  0E97                     	;# 
   571  0E9C                     	;# 
   572  0E9D                     	;# 
   573  0E9E                     	;# 
   574  0EA1                     	;# 
   575  0EA2                     	;# 
   576  0EA3                     	;# 
   577  0EA4                     	;# 
   578  0EA5                     	;# 
   579  0EA9                     	;# 
   580  0EAA                     	;# 
   581  0EAB                     	;# 
   582  0EAC                     	;# 
   583  0EB1                     	;# 
   584  0EB2                     	;# 
   585  0EB3                     	;# 
   586  0EB8                     	;# 
   587  0EB9                     	;# 
   588  0EBA                     	;# 
   589  0EBB                     	;# 
   590  0EBC                     	;# 
   591  0EBD                     	;# 
   592  0EBE                     	;# 
   593  0EC3                     	;# 
   594  0EC5                     	;# 
   595  0EC6                     	;# 
   596  0EC7                     	;# 
   597  0EC8                     	;# 
   598  0EC9                     	;# 
   599  0ECA                     	;# 
   600  0ECB                     	;# 
   601  0ECC                     	;# 
   602  0F10                     	;# 
   603  0F11                     	;# 
   604  0F12                     	;# 
   605  0F13                     	;# 
   606  0F14                     	;# 
   607  0F15                     	;# 
   608  0F16                     	;# 
   609  0F17                     	;# 
   610  0F18                     	;# 
   611  0F19                     	;# 
   612  0F1A                     	;# 
   613  0F1B                     	;# 
   614  0F1C                     	;# 
   615  0F1D                     	;# 
   616  0F1E                     	;# 
   617  0F1F                     	;# 
   618  0F20                     	;# 
   619  0F21                     	;# 
   620  0F22                     	;# 
   621  0F23                     	;# 
   622  0F24                     	;# 
   623  0F25                     	;# 
   624  0F26                     	;# 
   625  0F27                     	;# 
   626  0F28                     	;# 
   627  0F29                     	;# 
   628  0F2A                     	;# 
   629  0F2B                     	;# 
   630  0F2C                     	;# 
   631  0F2D                     	;# 
   632  0F2E                     	;# 
   633  0F2F                     	;# 
   634  0F30                     	;# 
   635  0F31                     	;# 
   636  0F32                     	;# 
   637  0F38                     	;# 
   638  0F39                     	;# 
   639  0F3A                     	;# 
   640  0F3B                     	;# 
   641  0F3C                     	;# 
   642  0F3D                     	;# 
   643  0F3E                     	;# 
   644  0F3F                     	;# 
   645  0F40                     	;# 
   646  0F41                     	;# 
   647  0F43                     	;# 
   648  0F44                     	;# 
   649  0F45                     	;# 
   650  0F46                     	;# 
   651  0F47                     	;# 
   652  0F48                     	;# 
   653  0F49                     	;# 
   654  0F4A                     	;# 
   655  0F4B                     	;# 
   656  0F4C                     	;# 
   657  0F4E                     	;# 
   658  0F4F                     	;# 
   659  0F50                     	;# 
   660  0F51                     	;# 
   661  0F52                     	;# 
   662  0F53                     	;# 
   663  0F54                     	;# 
   664  0F55                     	;# 
   665  0F56                     	;# 
   666  0F57                     	;# 
   667  0F59                     	;# 
   668  0F5A                     	;# 
   669  0F5B                     	;# 
   670  0F5C                     	;# 
   671  0F5D                     	;# 
   672  0F61                     	;# 
   673  0F62                     	;# 
   674  0F64                     	;# 
   675  0F65                     	;# 
   676  0F66                     	;# 
   677  0F67                     	;# 
   678  0F68                     	;# 
   679  0F69                     	;# 
   680  0F6A                     	;# 
   681  0F6B                     	;# 
   682  0F6C                     	;# 
   683  0F6D                     	;# 
   684  0FE4                     	;# 
   685  0FE5                     	;# 
   686  0FE6                     	;# 
   687  0FE7                     	;# 
   688  0FE8                     	;# 
   689  0FE9                     	;# 
   690  0FEA                     	;# 
   691  0FEB                     	;# 
   692  0FED                     	;# 
   693  0FEE                     	;# 
   694  0FEF                     	;# 
   695  0000                     	;# 
   696  0001                     	;# 
   697  0002                     	;# 
   698  0003                     	;# 
   699  0004                     	;# 
   700  0005                     	;# 
   701  0006                     	;# 
   702  0007                     	;# 
   703  0008                     	;# 
   704  0009                     	;# 
   705  000A                     	;# 
   706  000B                     	;# 
   707  000C                     	;# 
   708  000D                     	;# 
   709  000E                     	;# 
   710  000F                     	;# 
   711  0010                     	;# 
   712  0011                     	;# 
   713  0012                     	;# 
   714  0013                     	;# 
   715  0014                     	;# 
   716  0015                     	;# 
   717  0016                     	;# 
   718  0017                     	;# 
   719  0018                     	;# 
   720  0019                     	;# 
   721  001A                     	;# 
   722  001C                     	;# 
   723  001C                     	;# 
   724  001D                     	;# 
   725  001D                     	;# 
   726  001E                     	;# 
   727  001F                     	;# 
   728  008C                     	;# 
   729  008C                     	;# 
   730  008D                     	;# 
   731  008E                     	;# 
   732  008E                     	;# 
   733  008F                     	;# 
   734  0090                     	;# 
   735  0090                     	;# 
   736  0091                     	;# 
   737  0093                     	;# 
   738  0094                     	;# 
   739  0095                     	;# 
   740  0096                     	;# 
   741  0097                     	;# 
   742  0098                     	;# 
   743  0099                     	;# 
   744  009A                     	;# 
   745  009B                     	;# 
   746  009C                     	;# 
   747  009D                     	;# 
   748  009E                     	;# 
   749  010C                     	;# 
   750  010D                     	;# 
   751  010E                     	;# 
   752  010E                     	;# 
   753  010F                     	;# 
   754  0110                     	;# 
   755  0110                     	;# 
   756  0111                     	;# 
   757  0112                     	;# 
   758  0112                     	;# 
   759  0113                     	;# 
   760  0114                     	;# 
   761  0114                     	;# 
   762  0115                     	;# 
   763  0116                     	;# 
   764  0116                     	;# 
   765  0117                     	;# 
   766  0119                     	;# 
   767  0119                     	;# 
   768  0119                     	;# 
   769  011A                     	;# 
   770  011A                     	;# 
   771  011A                     	;# 
   772  011B                     	;# 
   773  011B                     	;# 
   774  011B                     	;# 
   775  011B                     	;# 
   776  011B                     	;# 
   777  011C                     	;# 
   778  011C                     	;# 
   779  011C                     	;# 
   780  011D                     	;# 
   781  011D                     	;# 
   782  011D                     	;# 
   783  011E                     	;# 
   784  011E                     	;# 
   785  011E                     	;# 
   786  011F                     	;# 
   787  011F                     	;# 
   788  011F                     	;# 
   789  011F                     	;# 
   790  011F                     	;# 
   791  018C                     	;# 
   792  018D                     	;# 
   793  018E                     	;# 
   794  018F                     	;# 
   795  0190                     	;# 
   796  0191                     	;# 
   797  0192                     	;# 
   798  0196                     	;# 
   799  0197                     	;# 
   800  0198                     	;# 
   801  0199                     	;# 
   802  019A                     	;# 
   803  019B                     	;# 
   804  019C                     	;# 
   805  020C                     	;# 
   806  020C                     	;# 
   807  020D                     	;# 
   808  020E                     	;# 
   809  020F                     	;# 
   810  020F                     	;# 
   811  0210                     	;# 
   812  0210                     	;# 
   813  0211                     	;# 
   814  0211                     	;# 
   815  0212                     	;# 
   816  0212                     	;# 
   817  0213                     	;# 
   818  0214                     	;# 
   819  0215                     	;# 
   820  0215                     	;# 
   821  0216                     	;# 
   822  0216                     	;# 
   823  0217                     	;# 
   824  0217                     	;# 
   825  0218                     	;# 
   826  0218                     	;# 
   827  0219                     	;# 
   828  021A                     	;# 
   829  021B                     	;# 
   830  021B                     	;# 
   831  021C                     	;# 
   832  021C                     	;# 
   833  021D                     	;# 
   834  021D                     	;# 
   835  021E                     	;# 
   836  021F                     	;# 
   837  028C                     	;# 
   838  028C                     	;# 
   839  028D                     	;# 
   840  028D                     	;# 
   841  028E                     	;# 
   842  028F                     	;# 
   843  0290                     	;# 
   844  0290                     	;# 
   845  0291                     	;# 
   846  0292                     	;# 
   847  0292                     	;# 
   848  0293                     	;# 
   849  0293                     	;# 
   850  0294                     	;# 
   851  0295                     	;# 
   852  0296                     	;# 
   853  0296                     	;# 
   854  0297                     	;# 
   855  0298                     	;# 
   856  0298                     	;# 
   857  0299                     	;# 
   858  0299                     	;# 
   859  029A                     	;# 
   860  029B                     	;# 
   861  029C                     	;# 
   862  029C                     	;# 
   863  029D                     	;# 
   864  030C                     	;# 
   865  030C                     	;# 
   866  030D                     	;# 
   867  030E                     	;# 
   868  030F                     	;# 
   869  0310                     	;# 
   870  0310                     	;# 
   871  0311                     	;# 
   872  0312                     	;# 
   873  0313                     	;# 
   874  0314                     	;# 
   875  0314                     	;# 
   876  0315                     	;# 
   877  0316                     	;# 
   878  0317                     	;# 
   879  0318                     	;# 
   880  0318                     	;# 
   881  0319                     	;# 
   882  031A                     	;# 
   883  031B                     	;# 
   884  031C                     	;# 
   885  031C                     	;# 
   886  031D                     	;# 
   887  031E                     	;# 
   888  031F                     	;# 
   889  038C                     	;# 
   890  038C                     	;# 
   891  038D                     	;# 
   892  038E                     	;# 
   893  0390                     	;# 
   894  0390                     	;# 
   895  0391                     	;# 
   896  0392                     	;# 
   897  040C                     	;# 
   898  040D                     	;# 
   899  040E                     	;# 
   900  040F                     	;# 
   901  0410                     	;# 
   902  0411                     	;# 
   903  0416                     	;# 
   904  0416                     	;# 
   905  0417                     	;# 
   906  0418                     	;# 
   907  0418                     	;# 
   908  0419                     	;# 
   909  041A                     	;# 
   910  041A                     	;# 
   911  041B                     	;# 
   912  041C                     	;# 
   913  041C                     	;# 
   914  041D                     	;# 
   915  041E                     	;# 
   916  041F                     	;# 
   917  048C                     	;# 
   918  048C                     	;# 
   919  048D                     	;# 
   920  048E                     	;# 
   921  048F                     	;# 
   922  048F                     	;# 
   923  0490                     	;# 
   924  0491                     	;# 
   925  0492                     	;# 
   926  0492                     	;# 
   927  0493                     	;# 
   928  0494                     	;# 
   929  0495                     	;# 
   930  0495                     	;# 
   931  0496                     	;# 
   932  0497                     	;# 
   933  0498                     	;# 
   934  0499                     	;# 
   935  049A                     	;# 
   936  049B                     	;# 
   937  049C                     	;# 
   938  049D                     	;# 
   939  050C                     	;# 
   940  050C                     	;# 
   941  050D                     	;# 
   942  050E                     	;# 
   943  050F                     	;# 
   944  050F                     	;# 
   945  0510                     	;# 
   946  0511                     	;# 
   947  0512                     	;# 
   948  0512                     	;# 
   949  0513                     	;# 
   950  0514                     	;# 
   951  0515                     	;# 
   952  0515                     	;# 
   953  0516                     	;# 
   954  0517                     	;# 
   955  0518                     	;# 
   956  0519                     	;# 
   957  051A                     	;# 
   958  051B                     	;# 
   959  051C                     	;# 
   960  051D                     	;# 
   961  058C                     	;# 
   962  058C                     	;# 
   963  058D                     	;# 
   964  058E                     	;# 
   965  058F                     	;# 
   966  058F                     	;# 
   967  0590                     	;# 
   968  0591                     	;# 
   969  0592                     	;# 
   970  0593                     	;# 
   971  060C                     	;# 
   972  060D                     	;# 
   973  060E                     	;# 
   974  060F                     	;# 
   975  0610                     	;# 
   976  0611                     	;# 
   977  0612                     	;# 
   978  0613                     	;# 
   979  0614                     	;# 
   980  0616                     	;# 
   981  0617                     	;# 
   982  0618                     	;# 
   983  0619                     	;# 
   984  061A                     	;# 
   985  061B                     	;# 
   986  061C                     	;# 
   987  061D                     	;# 
   988  061E                     	;# 
   989  068C                     	;# 
   990  068D                     	;# 
   991  068E                     	;# 
   992  068F                     	;# 
   993  0690                     	;# 
   994  0691                     	;# 
   995  0692                     	;# 
   996  0693                     	;# 
   997  0694                     	;# 
   998  070C                     	;# 
   999  070D                     	;# 
  1000  070E                     	;# 
  1001  070F                     	;# 
  1002  0710                     	;# 
  1003  0711                     	;# 
  1004  0712                     	;# 
  1005  0713                     	;# 
  1006  0714                     	;# 
  1007  0716                     	;# 
  1008  0717                     	;# 
  1009  0718                     	;# 
  1010  0719                     	;# 
  1011  071A                     	;# 
  1012  071B                     	;# 
  1013  071C                     	;# 
  1014  071D                     	;# 
  1015  071E                     	;# 
  1016  0796                     	;# 
  1017  0797                     	;# 
  1018  0798                     	;# 
  1019  0799                     	;# 
  1020  079A                     	;# 
  1021  079B                     	;# 
  1022  080C                     	;# 
  1023  080D                     	;# 
  1024  080E                     	;# 
  1025  080F                     	;# 
  1026  0810                     	;# 
  1027  0811                     	;# 
  1028  0812                     	;# 
  1029  0813                     	;# 
  1030  0814                     	;# 
  1031  081A                     	;# 
  1032  081B                     	;# 
  1033  081C                     	;# 
  1034  081D                     	;# 
  1035  081E                     	;# 
  1036  081F                     	;# 
  1037  088C                     	;# 
  1038  088D                     	;# 
  1039  088E                     	;# 
  1040  088F                     	;# 
  1041  0890                     	;# 
  1042  0891                     	;# 
  1043  0892                     	;# 
  1044  0893                     	;# 
  1045  0895                     	;# 
  1046  0896                     	;# 
  1047  0897                     	;# 
  1048  0898                     	;# 
  1049  0899                     	;# 
  1050  089A                     	;# 
  1051  089B                     	;# 
  1052  090C                     	;# 
  1053  090E                     	;# 
  1054  090F                     	;# 
  1055  091F                     	;# 
  1056  091F                     	;# 
  1057  098F                     	;# 
  1058  098F                     	;# 
  1059  0990                     	;# 
  1060  0991                     	;# 
  1061  0992                     	;# 
  1062  0993                     	;# 
  1063  0994                     	;# 
  1064  0995                     	;# 
  1065  0996                     	;# 
  1066  0997                     	;# 
  1067  0E0F                     	;# 
  1068  0E10                     	;# 
  1069  0E11                     	;# 
  1070  0E12                     	;# 
  1071  0E13                     	;# 
  1072  0E14                     	;# 
  1073  0E15                     	;# 
  1074  0E16                     	;# 
  1075  0E17                     	;# 
  1076  0E18                     	;# 
  1077  0E19                     	;# 
  1078  0E1A                     	;# 
  1079  0E1B                     	;# 
  1080  0E1C                     	;# 
  1081  0E1D                     	;# 
  1082  0E1E                     	;# 
  1083  0E1F                     	;# 
  1084  0E20                     	;# 
  1085  0E21                     	;# 
  1086  0E22                     	;# 
  1087  0E23                     	;# 
  1088  0E24                     	;# 
  1089  0E25                     	;# 
  1090  0E26                     	;# 
  1091  0E27                     	;# 
  1092  0E28                     	;# 
  1093  0E29                     	;# 
  1094  0E2A                     	;# 
  1095  0E2B                     	;# 
  1096  0E2C                     	;# 
  1097  0E2D                     	;# 
  1098  0E2E                     	;# 
  1099  0E2F                     	;# 
  1100  0E30                     	;# 
  1101  0E31                     	;# 
  1102  0E32                     	;# 
  1103  0E33                     	;# 
  1104  0E34                     	;# 
  1105  0E35                     	;# 
  1106  0E36                     	;# 
  1107  0E37                     	;# 
  1108  0E8F                     	;# 
  1109  0E90                     	;# 
  1110  0E91                     	;# 
  1111  0E92                     	;# 
  1112  0E93                     	;# 
  1113  0E94                     	;# 
  1114  0E95                     	;# 
  1115  0E96                     	;# 
  1116  0E97                     	;# 
  1117  0E9C                     	;# 
  1118  0E9D                     	;# 
  1119  0E9E                     	;# 
  1120  0EA1                     	;# 
  1121  0EA2                     	;# 
  1122  0EA3                     	;# 
  1123  0EA4                     	;# 
  1124  0EA5                     	;# 
  1125  0EA9                     	;# 
  1126  0EAA                     	;# 
  1127  0EAB                     	;# 
  1128  0EAC                     	;# 
  1129  0EB1                     	;# 
  1130  0EB2                     	;# 
  1131  0EB3                     	;# 
  1132  0EB8                     	;# 
  1133  0EB9                     	;# 
  1134  0EBA                     	;# 
  1135  0EBB                     	;# 
  1136  0EBC                     	;# 
  1137  0EBD                     	;# 
  1138  0EBE                     	;# 
  1139  0EC3                     	;# 
  1140  0EC5                     	;# 
  1141  0EC6                     	;# 
  1142  0EC7                     	;# 
  1143  0EC8                     	;# 
  1144  0EC9                     	;# 
  1145  0ECA                     	;# 
  1146  0ECB                     	;# 
  1147  0ECC                     	;# 
  1148  0F10                     	;# 
  1149  0F11                     	;# 
  1150  0F12                     	;# 
  1151  0F13                     	;# 
  1152  0F14                     	;# 
  1153  0F15                     	;# 
  1154  0F16                     	;# 
  1155  0F17                     	;# 
  1156  0F18                     	;# 
  1157  0F19                     	;# 
  1158  0F1A                     	;# 
  1159  0F1B                     	;# 
  1160  0F1C                     	;# 
  1161  0F1D                     	;# 
  1162  0F1E                     	;# 
  1163  0F1F                     	;# 
  1164  0F20                     	;# 
  1165  0F21                     	;# 
  1166  0F22                     	;# 
  1167  0F23                     	;# 
  1168  0F24                     	;# 
  1169  0F25                     	;# 
  1170  0F26                     	;# 
  1171  0F27                     	;# 
  1172  0F28                     	;# 
  1173  0F29                     	;# 
  1174  0F2A                     	;# 
  1175  0F2B                     	;# 
  1176  0F2C                     	;# 
  1177  0F2D                     	;# 
  1178  0F2E                     	;# 
  1179  0F2F                     	;# 
  1180  0F30                     	;# 
  1181  0F31                     	;# 
  1182  0F32                     	;# 
  1183  0F38                     	;# 
  1184  0F39                     	;# 
  1185  0F3A                     	;# 
  1186  0F3B                     	;# 
  1187  0F3C                     	;# 
  1188  0F3D                     	;# 
  1189  0F3E                     	;# 
  1190  0F3F                     	;# 
  1191  0F40                     	;# 
  1192  0F41                     	;# 
  1193  0F43                     	;# 
  1194  0F44                     	;# 
  1195  0F45                     	;# 
  1196  0F46                     	;# 
  1197  0F47                     	;# 
  1198  0F48                     	;# 
  1199  0F49                     	;# 
  1200  0F4A                     	;# 
  1201  0F4B                     	;# 
  1202  0F4C                     	;# 
  1203  0F4E                     	;# 
  1204  0F4F                     	;# 
  1205  0F50                     	;# 
  1206  0F51                     	;# 
  1207  0F52                     	;# 
  1208  0F53                     	;# 
  1209  0F54                     	;# 
  1210  0F55                     	;# 
  1211  0F56                     	;# 
  1212  0F57                     	;# 
  1213  0F59                     	;# 
  1214  0F5A                     	;# 
  1215  0F5B                     	;# 
  1216  0F5C                     	;# 
  1217  0F5D                     	;# 
  1218  0F61                     	;# 
  1219  0F62                     	;# 
  1220  0F64                     	;# 
  1221  0F65                     	;# 
  1222  0F66                     	;# 
  1223  0F67                     	;# 
  1224  0F68                     	;# 
  1225  0F69                     	;# 
  1226  0F6A                     	;# 
  1227  0F6B                     	;# 
  1228  0F6C                     	;# 
  1229  0F6D                     	;# 
  1230  0FE4                     	;# 
  1231  0FE5                     	;# 
  1232  0FE6                     	;# 
  1233  0FE7                     	;# 
  1234  0FE8                     	;# 
  1235  0FE9                     	;# 
  1236  0FEA                     	;# 
  1237  0FEB                     	;# 
  1238  0FED                     	;# 
  1239  0FEE                     	;# 
  1240  0FEF                     	;# 
  1241  0000                     	;# 
  1242  0001                     	;# 
  1243  0002                     	;# 
  1244  0003                     	;# 
  1245  0004                     	;# 
  1246  0005                     	;# 
  1247  0006                     	;# 
  1248  0007                     	;# 
  1249  0008                     	;# 
  1250  0009                     	;# 
  1251  000A                     	;# 
  1252  000B                     	;# 
  1253  000C                     	;# 
  1254  000D                     	;# 
  1255  000E                     	;# 
  1256  000F                     	;# 
  1257  0010                     	;# 
  1258  0011                     	;# 
  1259  0012                     	;# 
  1260  0013                     	;# 
  1261  0014                     	;# 
  1262  0015                     	;# 
  1263  0016                     	;# 
  1264  0017                     	;# 
  1265  0018                     	;# 
  1266  0019                     	;# 
  1267  001A                     	;# 
  1268  001C                     	;# 
  1269  001C                     	;# 
  1270  001D                     	;# 
  1271  001D                     	;# 
  1272  001E                     	;# 
  1273  001F                     	;# 
  1274  008C                     	;# 
  1275  008C                     	;# 
  1276  008D                     	;# 
  1277  008E                     	;# 
  1278  008E                     	;# 
  1279  008F                     	;# 
  1280  0090                     	;# 
  1281  0090                     	;# 
  1282  0091                     	;# 
  1283  0093                     	;# 
  1284  0094                     	;# 
  1285  0095                     	;# 
  1286  0096                     	;# 
  1287  0097                     	;# 
  1288  0098                     	;# 
  1289  0099                     	;# 
  1290  009A                     	;# 
  1291  009B                     	;# 
  1292  009C                     	;# 
  1293  009D                     	;# 
  1294  009E                     	;# 
  1295  010C                     	;# 
  1296  010D                     	;# 
  1297  010E                     	;# 
  1298  010E                     	;# 
  1299  010F                     	;# 
  1300  0110                     	;# 
  1301  0110                     	;# 
  1302  0111                     	;# 
  1303  0112                     	;# 
  1304  0112                     	;# 
  1305  0113                     	;# 
  1306  0114                     	;# 
  1307  0114                     	;# 
  1308  0115                     	;# 
  1309  0116                     	;# 
  1310  0116                     	;# 
  1311  0117                     	;# 
  1312  0119                     	;# 
  1313  0119                     	;# 
  1314  0119                     	;# 
  1315  011A                     	;# 
  1316  011A                     	;# 
  1317  011A                     	;# 
  1318  011B                     	;# 
  1319  011B                     	;# 
  1320  011B                     	;# 
  1321  011B                     	;# 
  1322  011B                     	;# 
  1323  011C                     	;# 
  1324  011C                     	;# 
  1325  011C                     	;# 
  1326  011D                     	;# 
  1327  011D                     	;# 
  1328  011D                     	;# 
  1329  011E                     	;# 
  1330  011E                     	;# 
  1331  011E                     	;# 
  1332  011F                     	;# 
  1333  011F                     	;# 
  1334  011F                     	;# 
  1335  011F                     	;# 
  1336  011F                     	;# 
  1337  018C                     	;# 
  1338  018D                     	;# 
  1339  018E                     	;# 
  1340  018F                     	;# 
  1341  0190                     	;# 
  1342  0191                     	;# 
  1343  0192                     	;# 
  1344  0196                     	;# 
  1345  0197                     	;# 
  1346  0198                     	;# 
  1347  0199                     	;# 
  1348  019A                     	;# 
  1349  019B                     	;# 
  1350  019C                     	;# 
  1351  020C                     	;# 
  1352  020C                     	;# 
  1353  020D                     	;# 
  1354  020E                     	;# 
  1355  020F                     	;# 
  1356  020F                     	;# 
  1357  0210                     	;# 
  1358  0210                     	;# 
  1359  0211                     	;# 
  1360  0211                     	;# 
  1361  0212                     	;# 
  1362  0212                     	;# 
  1363  0213                     	;# 
  1364  0214                     	;# 
  1365  0215                     	;# 
  1366  0215                     	;# 
  1367  0216                     	;# 
  1368  0216                     	;# 
  1369  0217                     	;# 
  1370  0217                     	;# 
  1371  0218                     	;# 
  1372  0218                     	;# 
  1373  0219                     	;# 
  1374  021A                     	;# 
  1375  021B                     	;# 
  1376  021B                     	;# 
  1377  021C                     	;# 
  1378  021C                     	;# 
  1379  021D                     	;# 
  1380  021D                     	;# 
  1381  021E                     	;# 
  1382  021F                     	;# 
  1383  028C                     	;# 
  1384  028C                     	;# 
  1385  028D                     	;# 
  1386  028D                     	;# 
  1387  028E                     	;# 
  1388  028F                     	;# 
  1389  0290                     	;# 
  1390  0290                     	;# 
  1391  0291                     	;# 
  1392  0292                     	;# 
  1393  0292                     	;# 
  1394  0293                     	;# 
  1395  0293                     	;# 
  1396  0294                     	;# 
  1397  0295                     	;# 
  1398  0296                     	;# 
  1399  0296                     	;# 
  1400  0297                     	;# 
  1401  0298                     	;# 
  1402  0298                     	;# 
  1403  0299                     	;# 
  1404  0299                     	;# 
  1405  029A                     	;# 
  1406  029B                     	;# 
  1407  029C                     	;# 
  1408  029C                     	;# 
  1409  029D                     	;# 
  1410  030C                     	;# 
  1411  030C                     	;# 
  1412  030D                     	;# 
  1413  030E                     	;# 
  1414  030F                     	;# 
  1415  0310                     	;# 
  1416  0310                     	;# 
  1417  0311                     	;# 
  1418  0312                     	;# 
  1419  0313                     	;# 
  1420  0314                     	;# 
  1421  0314                     	;# 
  1422  0315                     	;# 
  1423  0316                     	;# 
  1424  0317                     	;# 
  1425  0318                     	;# 
  1426  0318                     	;# 
  1427  0319                     	;# 
  1428  031A                     	;# 
  1429  031B                     	;# 
  1430  031C                     	;# 
  1431  031C                     	;# 
  1432  031D                     	;# 
  1433  031E                     	;# 
  1434  031F                     	;# 
  1435  038C                     	;# 
  1436  038C                     	;# 
  1437  038D                     	;# 
  1438  038E                     	;# 
  1439  0390                     	;# 
  1440  0390                     	;# 
  1441  0391                     	;# 
  1442  0392                     	;# 
  1443  040C                     	;# 
  1444  040D                     	;# 
  1445  040E                     	;# 
  1446  040F                     	;# 
  1447  0410                     	;# 
  1448  0411                     	;# 
  1449  0416                     	;# 
  1450  0416                     	;# 
  1451  0417                     	;# 
  1452  0418                     	;# 
  1453  0418                     	;# 
  1454  0419                     	;# 
  1455  041A                     	;# 
  1456  041A                     	;# 
  1457  041B                     	;# 
  1458  041C                     	;# 
  1459  041C                     	;# 
  1460  041D                     	;# 
  1461  041E                     	;# 
  1462  041F                     	;# 
  1463  048C                     	;# 
  1464  048C                     	;# 
  1465  048D                     	;# 
  1466  048E                     	;# 
  1467  048F                     	;# 
  1468  048F                     	;# 
  1469  0490                     	;# 
  1470  0491                     	;# 
  1471  0492                     	;# 
  1472  0492                     	;# 
  1473  0493                     	;# 
  1474  0494                     	;# 
  1475  0495                     	;# 
  1476  0495                     	;# 
  1477  0496                     	;# 
  1478  0497                     	;# 
  1479  0498                     	;# 
  1480  0499                     	;# 
  1481  049A                     	;# 
  1482  049B                     	;# 
  1483  049C                     	;# 
  1484  049D                     	;# 
  1485  050C                     	;# 
  1486  050C                     	;# 
  1487  050D                     	;# 
  1488  050E                     	;# 
  1489  050F                     	;# 
  1490  050F                     	;# 
  1491  0510                     	;# 
  1492  0511                     	;# 
  1493  0512                     	;# 
  1494  0512                     	;# 
  1495  0513                     	;# 
  1496  0514                     	;# 
  1497  0515                     	;# 
  1498  0515                     	;# 
  1499  0516                     	;# 
  1500  0517                     	;# 
  1501  0518                     	;# 
  1502  0519                     	;# 
  1503  051A                     	;# 
  1504  051B                     	;# 
  1505  051C                     	;# 
  1506  051D                     	;# 
  1507  058C                     	;# 
  1508  058C                     	;# 
  1509  058D                     	;# 
  1510  058E                     	;# 
  1511  058F                     	;# 
  1512  058F                     	;# 
  1513  0590                     	;# 
  1514  0591                     	;# 
  1515  0592                     	;# 
  1516  0593                     	;# 
  1517  060C                     	;# 
  1518  060D                     	;# 
  1519  060E                     	;# 
  1520  060F                     	;# 
  1521  0610                     	;# 
  1522  0611                     	;# 
  1523  0612                     	;# 
  1524  0613                     	;# 
  1525  0614                     	;# 
  1526  0616                     	;# 
  1527  0617                     	;# 
  1528  0618                     	;# 
  1529  0619                     	;# 
  1530  061A                     	;# 
  1531  061B                     	;# 
  1532  061C                     	;# 
  1533  061D                     	;# 
  1534  061E                     	;# 
  1535  068C                     	;# 
  1536  068D                     	;# 
  1537  068E                     	;# 
  1538  068F                     	;# 
  1539  0690                     	;# 
  1540  0691                     	;# 
  1541  0692                     	;# 
  1542  0693                     	;# 
  1543  0694                     	;# 
  1544  070C                     	;# 
  1545  070D                     	;# 
  1546  070E                     	;# 
  1547  070F                     	;# 
  1548  0710                     	;# 
  1549  0711                     	;# 
  1550  0712                     	;# 
  1551  0713                     	;# 
  1552  0714                     	;# 
  1553  0716                     	;# 
  1554  0717                     	;# 
  1555  0718                     	;# 
  1556  0719                     	;# 
  1557  071A                     	;# 
  1558  071B                     	;# 
  1559  071C                     	;# 
  1560  071D                     	;# 
  1561  071E                     	;# 
  1562  0796                     	;# 
  1563  0797                     	;# 
  1564  0798                     	;# 
  1565  0799                     	;# 
  1566  079A                     	;# 
  1567  079B                     	;# 
  1568  080C                     	;# 
  1569  080D                     	;# 
  1570  080E                     	;# 
  1571  080F                     	;# 
  1572  0810                     	;# 
  1573  0811                     	;# 
  1574  0812                     	;# 
  1575  0813                     	;# 
  1576  0814                     	;# 
  1577  081A                     	;# 
  1578  081B                     	;# 
  1579  081C                     	;# 
  1580  081D                     	;# 
  1581  081E                     	;# 
  1582  081F                     	;# 
  1583  088C                     	;# 
  1584  088D                     	;# 
  1585  088E                     	;# 
  1586  088F                     	;# 
  1587  0890                     	;# 
  1588  0891                     	;# 
  1589  0892                     	;# 
  1590  0893                     	;# 
  1591  0895                     	;# 
  1592  0896                     	;# 
  1593  0897                     	;# 
  1594  0898                     	;# 
  1595  0899                     	;# 
  1596  089A                     	;# 
  1597  089B                     	;# 
  1598  090C                     	;# 
  1599  090E                     	;# 
  1600  090F                     	;# 
  1601  091F                     	;# 
  1602  091F                     	;# 
  1603  098F                     	;# 
  1604  098F                     	;# 
  1605  0990                     	;# 
  1606  0991                     	;# 
  1607  0992                     	;# 
  1608  0993                     	;# 
  1609  0994                     	;# 
  1610  0995                     	;# 
  1611  0996                     	;# 
  1612  0997                     	;# 
  1613  0E0F                     	;# 
  1614  0E10                     	;# 
  1615  0E11                     	;# 
  1616  0E12                     	;# 
  1617  0E13                     	;# 
  1618  0E14                     	;# 
  1619  0E15                     	;# 
  1620  0E16                     	;# 
  1621  0E17                     	;# 
  1622  0E18                     	;# 
  1623  0E19                     	;# 
  1624  0E1A                     	;# 
  1625  0E1B                     	;# 
  1626  0E1C                     	;# 
  1627  0E1D                     	;# 
  1628  0E1E                     	;# 
  1629  0E1F                     	;# 
  1630  0E20                     	;# 
  1631  0E21                     	;# 
  1632  0E22                     	;# 
  1633  0E23                     	;# 
  1634  0E24                     	;# 
  1635  0E25                     	;# 
  1636  0E26                     	;# 
  1637  0E27                     	;# 
  1638  0E28                     	;# 
  1639  0E29                     	;# 
  1640  0E2A                     	;# 
  1641  0E2B                     	;# 
  1642  0E2C                     	;# 
  1643  0E2D                     	;# 
  1644  0E2E                     	;# 
  1645  0E2F                     	;# 
  1646  0E30                     	;# 
  1647  0E31                     	;# 
  1648  0E32                     	;# 
  1649  0E33                     	;# 
  1650  0E34                     	;# 
  1651  0E35                     	;# 
  1652  0E36                     	;# 
  1653  0E37                     	;# 
  1654  0E8F                     	;# 
  1655  0E90                     	;# 
  1656  0E91                     	;# 
  1657  0E92                     	;# 
  1658  0E93                     	;# 
  1659  0E94                     	;# 
  1660  0E95                     	;# 
  1661  0E96                     	;# 
  1662  0E97                     	;# 
  1663  0E9C                     	;# 
  1664  0E9D                     	;# 
  1665  0E9E                     	;# 
  1666  0EA1                     	;# 
  1667  0EA2                     	;# 
  1668  0EA3                     	;# 
  1669  0EA4                     	;# 
  1670  0EA5                     	;# 
  1671  0EA9                     	;# 
  1672  0EAA                     	;# 
  1673  0EAB                     	;# 
  1674  0EAC                     	;# 
  1675  0EB1                     	;# 
  1676  0EB2                     	;# 
  1677  0EB3                     	;# 
  1678  0EB8                     	;# 
  1679  0EB9                     	;# 
  1680  0EBA                     	;# 
  1681  0EBB                     	;# 
  1682  0EBC                     	;# 
  1683  0EBD                     	;# 
  1684  0EBE                     	;# 
  1685  0EC3                     	;# 
  1686  0EC5                     	;# 
  1687  0EC6                     	;# 
  1688  0EC7                     	;# 
  1689  0EC8                     	;# 
  1690  0EC9                     	;# 
  1691  0ECA                     	;# 
  1692  0ECB                     	;# 
  1693  0ECC                     	;# 
  1694  0F10                     	;# 
  1695  0F11                     	;# 
  1696  0F12                     	;# 
  1697  0F13                     	;# 
  1698  0F14                     	;# 
  1699  0F15                     	;# 
  1700  0F16                     	;# 
  1701  0F17                     	;# 
  1702  0F18                     	;# 
  1703  0F19                     	;# 
  1704  0F1A                     	;# 
  1705  0F1B                     	;# 
  1706  0F1C                     	;# 
  1707  0F1D                     	;# 
  1708  0F1E                     	;# 
  1709  0F1F                     	;# 
  1710  0F20                     	;# 
  1711  0F21                     	;# 
  1712  0F22                     	;# 
  1713  0F23                     	;# 
  1714  0F24                     	;# 
  1715  0F25                     	;# 
  1716  0F26                     	;# 
  1717  0F27                     	;# 
  1718  0F28                     	;# 
  1719  0F29                     	;# 
  1720  0F2A                     	;# 
  1721  0F2B                     	;# 
  1722  0F2C                     	;# 
  1723  0F2D                     	;# 
  1724  0F2E                     	;# 
  1725  0F2F                     	;# 
  1726  0F30                     	;# 
  1727  0F31                     	;# 
  1728  0F32                     	;# 
  1729  0F38                     	;# 
  1730  0F39                     	;# 
  1731  0F3A                     	;# 
  1732  0F3B                     	;# 
  1733  0F3C                     	;# 
  1734  0F3D                     	;# 
  1735  0F3E                     	;# 
  1736  0F3F                     	;# 
  1737  0F40                     	;# 
  1738  0F41                     	;# 
  1739  0F43                     	;# 
  1740  0F44                     	;# 
  1741  0F45                     	;# 
  1742  0F46                     	;# 
  1743  0F47                     	;# 
  1744  0F48                     	;# 
  1745  0F49                     	;# 
  1746  0F4A                     	;# 
  1747  0F4B                     	;# 
  1748  0F4C                     	;# 
  1749  0F4E                     	;# 
  1750  0F4F                     	;# 
  1751  0F50                     	;# 
  1752  0F51                     	;# 
  1753  0F52                     	;# 
  1754  0F53                     	;# 
  1755  0F54                     	;# 
  1756  0F55                     	;# 
  1757  0F56                     	;# 
  1758  0F57                     	;# 
  1759  0F59                     	;# 
  1760  0F5A                     	;# 
  1761  0F5B                     	;# 
  1762  0F5C                     	;# 
  1763  0F5D                     	;# 
  1764  0F61                     	;# 
  1765  0F62                     	;# 
  1766  0F64                     	;# 
  1767  0F65                     	;# 
  1768  0F66                     	;# 
  1769  0F67                     	;# 
  1770  0F68                     	;# 
  1771  0F69                     	;# 
  1772  0F6A                     	;# 
  1773  0F6B                     	;# 
  1774  0F6C                     	;# 
  1775  0F6D                     	;# 
  1776  0FE4                     	;# 
  1777  0FE5                     	;# 
  1778  0FE6                     	;# 
  1779  0FE7                     	;# 
  1780  0FE8                     	;# 
  1781  0FE9                     	;# 
  1782  0FEA                     	;# 
  1783  0FEB                     	;# 
  1784  0FED                     	;# 
  1785  0FEE                     	;# 
  1786  0FEF                     	;# 
  1787  0000                     	;# 
  1788  0001                     	;# 
  1789  0002                     	;# 
  1790  0003                     	;# 
  1791  0004                     	;# 
  1792  0005                     	;# 
  1793  0006                     	;# 
  1794  0007                     	;# 
  1795  0008                     	;# 
  1796  0009                     	;# 
  1797  000A                     	;# 
  1798  000B                     	;# 
  1799  000C                     	;# 
  1800  000D                     	;# 
  1801  000E                     	;# 
  1802  000F                     	;# 
  1803  0010                     	;# 
  1804  0011                     	;# 
  1805  0012                     	;# 
  1806  0013                     	;# 
  1807  0014                     	;# 
  1808  0015                     	;# 
  1809  0016                     	;# 
  1810  0017                     	;# 
  1811  0018                     	;# 
  1812  0019                     	;# 
  1813  001A                     	;# 
  1814  001C                     	;# 
  1815  001C                     	;# 
  1816  001D                     	;# 
  1817  001D                     	;# 
  1818  001E                     	;# 
  1819  001F                     	;# 
  1820  008C                     	;# 
  1821  008C                     	;# 
  1822  008D                     	;# 
  1823  008E                     	;# 
  1824  008E                     	;# 
  1825  008F                     	;# 
  1826  0090                     	;# 
  1827  0090                     	;# 
  1828  0091                     	;# 
  1829  0093                     	;# 
  1830  0094                     	;# 
  1831  0095                     	;# 
  1832  0096                     	;# 
  1833  0097                     	;# 
  1834  0098                     	;# 
  1835  0099                     	;# 
  1836  009A                     	;# 
  1837  009B                     	;# 
  1838  009C                     	;# 
  1839  009D                     	;# 
  1840  009E                     	;# 
  1841  010C                     	;# 
  1842  010D                     	;# 
  1843  010E                     	;# 
  1844  010E                     	;# 
  1845  010F                     	;# 
  1846  0110                     	;# 
  1847  0110                     	;# 
  1848  0111                     	;# 
  1849  0112                     	;# 
  1850  0112                     	;# 
  1851  0113                     	;# 
  1852  0114                     	;# 
  1853  0114                     	;# 
  1854  0115                     	;# 
  1855  0116                     	;# 
  1856  0116                     	;# 
  1857  0117                     	;# 
  1858  0119                     	;# 
  1859  0119                     	;# 
  1860  0119                     	;# 
  1861  011A                     	;# 
  1862  011A                     	;# 
  1863  011A                     	;# 
  1864  011B                     	;# 
  1865  011B                     	;# 
  1866  011B                     	;# 
  1867  011B                     	;# 
  1868  011B                     	;# 
  1869  011C                     	;# 
  1870  011C                     	;# 
  1871  011C                     	;# 
  1872  011D                     	;# 
  1873  011D                     	;# 
  1874  011D                     	;# 
  1875  011E                     	;# 
  1876  011E                     	;# 
  1877  011E                     	;# 
  1878  011F                     	;# 
  1879  011F                     	;# 
  1880  011F                     	;# 
  1881  011F                     	;# 
  1882  011F                     	;# 
  1883  018C                     	;# 
  1884  018D                     	;# 
  1885  018E                     	;# 
  1886  018F                     	;# 
  1887  0190                     	;# 
  1888  0191                     	;# 
  1889  0192                     	;# 
  1890  0196                     	;# 
  1891  0197                     	;# 
  1892  0198                     	;# 
  1893  0199                     	;# 
  1894  019A                     	;# 
  1895  019B                     	;# 
  1896  019C                     	;# 
  1897  020C                     	;# 
  1898  020C                     	;# 
  1899  020D                     	;# 
  1900  020E                     	;# 
  1901  020F                     	;# 
  1902  020F                     	;# 
  1903  0210                     	;# 
  1904  0210                     	;# 
  1905  0211                     	;# 
  1906  0211                     	;# 
  1907  0212                     	;# 
  1908  0212                     	;# 
  1909  0213                     	;# 
  1910  0214                     	;# 
  1911  0215                     	;# 
  1912  0215                     	;# 
  1913  0216                     	;# 
  1914  0216                     	;# 
  1915  0217                     	;# 
  1916  0217                     	;# 
  1917  0218                     	;# 
  1918  0218                     	;# 
  1919  0219                     	;# 
  1920  021A                     	;# 
  1921  021B                     	;# 
  1922  021B                     	;# 
  1923  021C                     	;# 
  1924  021C                     	;# 
  1925  021D                     	;# 
  1926  021D                     	;# 
  1927  021E                     	;# 
  1928  021F                     	;# 
  1929  028C                     	;# 
  1930  028C                     	;# 
  1931  028D                     	;# 
  1932  028D                     	;# 
  1933  028E                     	;# 
  1934  028F                     	;# 
  1935  0290                     	;# 
  1936  0290                     	;# 
  1937  0291                     	;# 
  1938  0292                     	;# 
  1939  0292                     	;# 
  1940  0293                     	;# 
  1941  0293                     	;# 
  1942  0294                     	;# 
  1943  0295                     	;# 
  1944  0296                     	;# 
  1945  0296                     	;# 
  1946  0297                     	;# 
  1947  0298                     	;# 
  1948  0298                     	;# 
  1949  0299                     	;# 
  1950  0299                     	;# 
  1951  029A                     	;# 
  1952  029B                     	;# 
  1953  029C                     	;# 
  1954  029C                     	;# 
  1955  029D                     	;# 
  1956  030C                     	;# 
  1957  030C                     	;# 
  1958  030D                     	;# 
  1959  030E                     	;# 
  1960  030F                     	;# 
  1961  0310                     	;# 
  1962  0310                     	;# 
  1963  0311                     	;# 
  1964  0312                     	;# 
  1965  0313                     	;# 
  1966  0314                     	;# 
  1967  0314                     	;# 
  1968  0315                     	;# 
  1969  0316                     	;# 
  1970  0317                     	;# 
  1971  0318                     	;# 
  1972  0318                     	;# 
  1973  0319                     	;# 
  1974  031A                     	;# 
  1975  031B                     	;# 
  1976  031C                     	;# 
  1977  031C                     	;# 
  1978  031D                     	;# 
  1979  031E                     	;# 
  1980  031F                     	;# 
  1981  038C                     	;# 
  1982  038C                     	;# 
  1983  038D                     	;# 
  1984  038E                     	;# 
  1985  0390                     	;# 
  1986  0390                     	;# 
  1987  0391                     	;# 
  1988  0392                     	;# 
  1989  040C                     	;# 
  1990  040D                     	;# 
  1991  040E                     	;# 
  1992  040F                     	;# 
  1993  0410                     	;# 
  1994  0411                     	;# 
  1995  0416                     	;# 
  1996  0416                     	;# 
  1997  0417                     	;# 
  1998  0418                     	;# 
  1999  0418                     	;# 
  2000  0419                     	;# 
  2001  041A                     	;# 
  2002  041A                     	;# 
  2003  041B                     	;# 
  2004  041C                     	;# 
  2005  041C                     	;# 
  2006  041D                     	;# 
  2007  041E                     	;# 
  2008  041F                     	;# 
  2009  048C                     	;# 
  2010  048C                     	;# 
  2011  048D                     	;# 
  2012  048E                     	;# 
  2013  048F                     	;# 
  2014  048F                     	;# 
  2015  0490                     	;# 
  2016  0491                     	;# 
  2017  0492                     	;# 
  2018  0492                     	;# 
  2019  0493                     	;# 
  2020  0494                     	;# 
  2021  0495                     	;# 
  2022  0495                     	;# 
  2023  0496                     	;# 
  2024  0497                     	;# 
  2025  0498                     	;# 
  2026  0499                     	;# 
  2027  049A                     	;# 
  2028  049B                     	;# 
  2029  049C                     	;# 
  2030  049D                     	;# 
  2031  050C                     	;# 
  2032  050C                     	;# 
  2033  050D                     	;# 
  2034  050E                     	;# 
  2035  050F                     	;# 
  2036  050F                     	;# 
  2037  0510                     	;# 
  2038  0511                     	;# 
  2039  0512                     	;# 
  2040  0512                     	;# 
  2041  0513                     	;# 
  2042  0514                     	;# 
  2043  0515                     	;# 
  2044  0515                     	;# 
  2045  0516                     	;# 
  2046  0517                     	;# 
  2047  0518                     	;# 
  2048  0519                     	;# 
  2049  051A                     	;# 
  2050  051B                     	;# 
  2051  051C                     	;# 
  2052  051D                     	;# 
  2053  058C                     	;# 
  2054  058C                     	;# 
  2055  058D                     	;# 
  2056  058E                     	;# 
  2057  058F                     	;# 
  2058  058F                     	;# 
  2059  0590                     	;# 
  2060  0591                     	;# 
  2061  0592                     	;# 
  2062  0593                     	;# 
  2063  060C                     	;# 
  2064  060D                     	;# 
  2065  060E                     	;# 
  2066  060F                     	;# 
  2067  0610                     	;# 
  2068  0611                     	;# 
  2069  0612                     	;# 
  2070  0613                     	;# 
  2071  0614                     	;# 
  2072  0616                     	;# 
  2073  0617                     	;# 
  2074  0618                     	;# 
  2075  0619                     	;# 
  2076  061A                     	;# 
  2077  061B                     	;# 
  2078  061C                     	;# 
  2079  061D                     	;# 
  2080  061E                     	;# 
  2081  068C                     	;# 
  2082  068D                     	;# 
  2083  068E                     	;# 
  2084  068F                     	;# 
  2085  0690                     	;# 
  2086  0691                     	;# 
  2087  0692                     	;# 
  2088  0693                     	;# 
  2089  0694                     	;# 
  2090  070C                     	;# 
  2091  070D                     	;# 
  2092  070E                     	;# 
  2093  070F                     	;# 
  2094  0710                     	;# 
  2095  0711                     	;# 
  2096  0712                     	;# 
  2097  0713                     	;# 
  2098  0714                     	;# 
  2099  0716                     	;# 
  2100  0717                     	;# 
  2101  0718                     	;# 
  2102  0719                     	;# 
  2103  071A                     	;# 
  2104  071B                     	;# 
  2105  071C                     	;# 
  2106  071D                     	;# 
  2107  071E                     	;# 
  2108  0796                     	;# 
  2109  0797                     	;# 
  2110  0798                     	;# 
  2111  0799                     	;# 
  2112  079A                     	;# 
  2113  079B                     	;# 
  2114  080C                     	;# 
  2115  080D                     	;# 
  2116  080E                     	;# 
  2117  080F                     	;# 
  2118  0810                     	;# 
  2119  0811                     	;# 
  2120  0812                     	;# 
  2121  0813                     	;# 
  2122  0814                     	;# 
  2123  081A                     	;# 
  2124  081B                     	;# 
  2125  081C                     	;# 
  2126  081D                     	;# 
  2127  081E                     	;# 
  2128  081F                     	;# 
  2129  088C                     	;# 
  2130  088D                     	;# 
  2131  088E                     	;# 
  2132  088F                     	;# 
  2133  0890                     	;# 
  2134  0891                     	;# 
  2135  0892                     	;# 
  2136  0893                     	;# 
  2137  0895                     	;# 
  2138  0896                     	;# 
  2139  0897                     	;# 
  2140  0898                     	;# 
  2141  0899                     	;# 
  2142  089A                     	;# 
  2143  089B                     	;# 
  2144  090C                     	;# 
  2145  090E                     	;# 
  2146  090F                     	;# 
  2147  091F                     	;# 
  2148  091F                     	;# 
  2149  098F                     	;# 
  2150  098F                     	;# 
  2151  0990                     	;# 
  2152  0991                     	;# 
  2153  0992                     	;# 
  2154  0993                     	;# 
  2155  0994                     	;# 
  2156  0995                     	;# 
  2157  0996                     	;# 
  2158  0997                     	;# 
  2159  0E0F                     	;# 
  2160  0E10                     	;# 
  2161  0E11                     	;# 
  2162  0E12                     	;# 
  2163  0E13                     	;# 
  2164  0E14                     	;# 
  2165  0E15                     	;# 
  2166  0E16                     	;# 
  2167  0E17                     	;# 
  2168  0E18                     	;# 
  2169  0E19                     	;# 
  2170  0E1A                     	;# 
  2171  0E1B                     	;# 
  2172  0E1C                     	;# 
  2173  0E1D                     	;# 
  2174  0E1E                     	;# 
  2175  0E1F                     	;# 
  2176  0E20                     	;# 
  2177  0E21                     	;# 
  2178  0E22                     	;# 
  2179  0E23                     	;# 
  2180  0E24                     	;# 
  2181  0E25                     	;# 
  2182  0E26                     	;# 
  2183  0E27                     	;# 
  2184  0E28                     	;# 
  2185  0E29                     	;# 
  2186  0E2A                     	;# 
  2187  0E2B                     	;# 
  2188  0E2C                     	;# 
  2189  0E2D                     	;# 
  2190  0E2E                     	;# 
  2191  0E2F                     	;# 
  2192  0E30                     	;# 
  2193  0E31                     	;# 
  2194  0E32                     	;# 
  2195  0E33                     	;# 
  2196  0E34                     	;# 
  2197  0E35                     	;# 
  2198  0E36                     	;# 
  2199  0E37                     	;# 
  2200  0E8F                     	;# 
  2201  0E90                     	;# 
  2202  0E91                     	;# 
  2203  0E92                     	;# 
  2204  0E93                     	;# 
  2205  0E94                     	;# 
  2206  0E95                     	;# 
  2207  0E96                     	;# 
  2208  0E97                     	;# 
  2209  0E9C                     	;# 
  2210  0E9D                     	;# 
  2211  0E9E                     	;# 
  2212  0EA1                     	;# 
  2213  0EA2                     	;# 
  2214  0EA3                     	;# 
  2215  0EA4                     	;# 
  2216  0EA5                     	;# 
  2217  0EA9                     	;# 
  2218  0EAA                     	;# 
  2219  0EAB                     	;# 
  2220  0EAC                     	;# 
  2221  0EB1                     	;# 
  2222  0EB2                     	;# 
  2223  0EB3                     	;# 
  2224  0EB8                     	;# 
  2225  0EB9                     	;# 
  2226  0EBA                     	;# 
  2227  0EBB                     	;# 
  2228  0EBC                     	;# 
  2229  0EBD                     	;# 
  2230  0EBE                     	;# 
  2231  0EC3                     	;# 
  2232  0EC5                     	;# 
  2233  0EC6                     	;# 
  2234  0EC7                     	;# 
  2235  0EC8                     	;# 
  2236  0EC9                     	;# 
  2237  0ECA                     	;# 
  2238  0ECB                     	;# 
  2239  0ECC                     	;# 
  2240  0F10                     	;# 
  2241  0F11                     	;# 
  2242  0F12                     	;# 
  2243  0F13                     	;# 
  2244  0F14                     	;# 
  2245  0F15                     	;# 
  2246  0F16                     	;# 
  2247  0F17                     	;# 
  2248  0F18                     	;# 
  2249  0F19                     	;# 
  2250  0F1A                     	;# 
  2251  0F1B                     	;# 
  2252  0F1C                     	;# 
  2253  0F1D                     	;# 
  2254  0F1E                     	;# 
  2255  0F1F                     	;# 
  2256  0F20                     	;# 
  2257  0F21                     	;# 
  2258  0F22                     	;# 
  2259  0F23                     	;# 
  2260  0F24                     	;# 
  2261  0F25                     	;# 
  2262  0F26                     	;# 
  2263  0F27                     	;# 
  2264  0F28                     	;# 
  2265  0F29                     	;# 
  2266  0F2A                     	;# 
  2267  0F2B                     	;# 
  2268  0F2C                     	;# 
  2269  0F2D                     	;# 
  2270  0F2E                     	;# 
  2271  0F2F                     	;# 
  2272  0F30                     	;# 
  2273  0F31                     	;# 
  2274  0F32                     	;# 
  2275  0F38                     	;# 
  2276  0F39                     	;# 
  2277  0F3A                     	;# 
  2278  0F3B                     	;# 
  2279  0F3C                     	;# 
  2280  0F3D                     	;# 
  2281  0F3E                     	;# 
  2282  0F3F                     	;# 
  2283  0F40                     	;# 
  2284  0F41                     	;# 
  2285  0F43                     	;# 
  2286  0F44                     	;# 
  2287  0F45                     	;# 
  2288  0F46                     	;# 
  2289  0F47                     	;# 
  2290  0F48                     	;# 
  2291  0F49                     	;# 
  2292  0F4A                     	;# 
  2293  0F4B                     	;# 
  2294  0F4C                     	;# 
  2295  0F4E                     	;# 
  2296  0F4F                     	;# 
  2297  0F50                     	;# 
  2298  0F51                     	;# 
  2299  0F52                     	;# 
  2300  0F53                     	;# 
  2301  0F54                     	;# 
  2302  0F55                     	;# 
  2303  0F56                     	;# 
  2304  0F57                     	;# 
  2305  0F59                     	;# 
  2306  0F5A                     	;# 
  2307  0F5B                     	;# 
  2308  0F5C                     	;# 
  2309  0F5D                     	;# 
  2310  0F61                     	;# 
  2311  0F62                     	;# 
  2312  0F64                     	;# 
  2313  0F65                     	;# 
  2314  0F66                     	;# 
  2315  0F67                     	;# 
  2316  0F68                     	;# 
  2317  0F69                     	;# 
  2318  0F6A                     	;# 
  2319  0F6B                     	;# 
  2320  0F6C                     	;# 
  2321  0F6D                     	;# 
  2322  0FE4                     	;# 
  2323  0FE5                     	;# 
  2324  0FE6                     	;# 
  2325  0FE7                     	;# 
  2326  0FE8                     	;# 
  2327  0FE9                     	;# 
  2328  0FEA                     	;# 
  2329  0FEB                     	;# 
  2330  0FED                     	;# 
  2331  0FEE                     	;# 
  2332  0FEF                     	;# 
  2333  0000                     	;# 
  2334  0001                     	;# 
  2335  0002                     	;# 
  2336  0003                     	;# 
  2337  0004                     	;# 
  2338  0005                     	;# 
  2339  0006                     	;# 
  2340  0007                     	;# 
  2341  0008                     	;# 
  2342  0009                     	;# 
  2343  000A                     	;# 
  2344  000B                     	;# 
  2345  000C                     	;# 
  2346  000D                     	;# 
  2347  000E                     	;# 
  2348  000F                     	;# 
  2349  0010                     	;# 
  2350  0011                     	;# 
  2351  0012                     	;# 
  2352  0013                     	;# 
  2353  0014                     	;# 
  2354  0015                     	;# 
  2355  0016                     	;# 
  2356  0017                     	;# 
  2357  0018                     	;# 
  2358  0019                     	;# 
  2359  001A                     	;# 
  2360  001C                     	;# 
  2361  001C                     	;# 
  2362  001D                     	;# 
  2363  001D                     	;# 
  2364  001E                     	;# 
  2365  001F                     	;# 
  2366  008C                     	;# 
  2367  008C                     	;# 
  2368  008D                     	;# 
  2369  008E                     	;# 
  2370  008E                     	;# 
  2371  008F                     	;# 
  2372  0090                     	;# 
  2373  0090                     	;# 
  2374  0091                     	;# 
  2375  0093                     	;# 
  2376  0094                     	;# 
  2377  0095                     	;# 
  2378  0096                     	;# 
  2379  0097                     	;# 
  2380  0098                     	;# 
  2381  0099                     	;# 
  2382  009A                     	;# 
  2383  009B                     	;# 
  2384  009C                     	;# 
  2385  009D                     	;# 
  2386  009E                     	;# 
  2387  010C                     	;# 
  2388  010D                     	;# 
  2389  010E                     	;# 
  2390  010E                     	;# 
  2391  010F                     	;# 
  2392  0110                     	;# 
  2393  0110                     	;# 
  2394  0111                     	;# 
  2395  0112                     	;# 
  2396  0112                     	;# 
  2397  0113                     	;# 
  2398  0114                     	;# 
  2399  0114                     	;# 
  2400  0115                     	;# 
  2401  0116                     	;# 
  2402  0116                     	;# 
  2403  0117                     	;# 
  2404  0119                     	;# 
  2405  0119                     	;# 
  2406  0119                     	;# 
  2407  011A                     	;# 
  2408  011A                     	;# 
  2409  011A                     	;# 
  2410  011B                     	;# 
  2411  011B                     	;# 
  2412  011B                     	;# 
  2413  011B                     	;# 
  2414  011B                     	;# 
  2415  011C                     	;# 
  2416  011C                     	;# 
  2417  011C                     	;# 
  2418  011D                     	;# 
  2419  011D                     	;# 
  2420  011D                     	;# 
  2421  011E                     	;# 
  2422  011E                     	;# 
  2423  011E                     	;# 
  2424  011F                     	;# 
  2425  011F                     	;# 
  2426  011F                     	;# 
  2427  011F                     	;# 
  2428  011F                     	;# 
  2429  018C                     	;# 
  2430  018D                     	;# 
  2431  018E                     	;# 
  2432  018F                     	;# 
  2433  0190                     	;# 
  2434  0191                     	;# 
  2435  0192                     	;# 
  2436  0196                     	;# 
  2437  0197                     	;# 
  2438  0198                     	;# 
  2439  0199                     	;# 
  2440  019A                     	;# 
  2441  019B                     	;# 
  2442  019C                     	;# 
  2443  020C                     	;# 
  2444  020C                     	;# 
  2445  020D                     	;# 
  2446  020E                     	;# 
  2447  020F                     	;# 
  2448  020F                     	;# 
  2449  0210                     	;# 
  2450  0210                     	;# 
  2451  0211                     	;# 
  2452  0211                     	;# 
  2453  0212                     	;# 
  2454  0212                     	;# 
  2455  0213                     	;# 
  2456  0214                     	;# 
  2457  0215                     	;# 
  2458  0215                     	;# 
  2459  0216                     	;# 
  2460  0216                     	;# 
  2461  0217                     	;# 
  2462  0217                     	;# 
  2463  0218                     	;# 
  2464  0218                     	;# 
  2465  0219                     	;# 
  2466  021A                     	;# 
  2467  021B                     	;# 
  2468  021B                     	;# 
  2469  021C                     	;# 
  2470  021C                     	;# 
  2471  021D                     	;# 
  2472  021D                     	;# 
  2473  021E                     	;# 
  2474  021F                     	;# 
  2475  028C                     	;# 
  2476  028C                     	;# 
  2477  028D                     	;# 
  2478  028D                     	;# 
  2479  028E                     	;# 
  2480  028F                     	;# 
  2481  0290                     	;# 
  2482  0290                     	;# 
  2483  0291                     	;# 
  2484  0292                     	;# 
  2485  0292                     	;# 
  2486  0293                     	;# 
  2487  0293                     	;# 
  2488  0294                     	;# 
  2489  0295                     	;# 
  2490  0296                     	;# 
  2491  0296                     	;# 
  2492  0297                     	;# 
  2493  0298                     	;# 
  2494  0298                     	;# 
  2495  0299                     	;# 
  2496  0299                     	;# 
  2497  029A                     	;# 
  2498  029B                     	;# 
  2499  029C                     	;# 
  2500  029C                     	;# 
  2501  029D                     	;# 
  2502  030C                     	;# 
  2503  030C                     	;# 
  2504  030D                     	;# 
  2505  030E                     	;# 
  2506  030F                     	;# 
  2507  0310                     	;# 
  2508  0310                     	;# 
  2509  0311                     	;# 
  2510  0312                     	;# 
  2511  0313                     	;# 
  2512  0314                     	;# 
  2513  0314                     	;# 
  2514  0315                     	;# 
  2515  0316                     	;# 
  2516  0317                     	;# 
  2517  0318                     	;# 
  2518  0318                     	;# 
  2519  0319                     	;# 
  2520  031A                     	;# 
  2521  031B                     	;# 
  2522  031C                     	;# 
  2523  031C                     	;# 
  2524  031D                     	;# 
  2525  031E                     	;# 
  2526  031F                     	;# 
  2527  038C                     	;# 
  2528  038C                     	;# 
  2529  038D                     	;# 
  2530  038E                     	;# 
  2531  0390                     	;# 
  2532  0390                     	;# 
  2533  0391                     	;# 
  2534  0392                     	;# 
  2535  040C                     	;# 
  2536  040D                     	;# 
  2537  040E                     	;# 
  2538  040F                     	;# 
  2539  0410                     	;# 
  2540  0411                     	;# 
  2541  0416                     	;# 
  2542  0416                     	;# 
  2543  0417                     	;# 
  2544  0418                     	;# 
  2545  0418                     	;# 
  2546  0419                     	;# 
  2547  041A                     	;# 
  2548  041A                     	;# 
  2549  041B                     	;# 
  2550  041C                     	;# 
  2551  041C                     	;# 
  2552  041D                     	;# 
  2553  041E                     	;# 
  2554  041F                     	;# 
  2555  048C                     	;# 
  2556  048C                     	;# 
  2557  048D                     	;# 
  2558  048E                     	;# 
  2559  048F                     	;# 
  2560  048F                     	;# 
  2561  0490                     	;# 
  2562  0491                     	;# 
  2563  0492                     	;# 
  2564  0492                     	;# 
  2565  0493                     	;# 
  2566  0494                     	;# 
  2567  0495                     	;# 
  2568  0495                     	;# 
  2569  0496                     	;# 
  2570  0497                     	;# 
  2571  0498                     	;# 
  2572  0499                     	;# 
  2573  049A                     	;# 
  2574  049B                     	;# 
  2575  049C                     	;# 
  2576  049D                     	;# 
  2577  050C                     	;# 
  2578  050C                     	;# 
  2579  050D                     	;# 
  2580  050E                     	;# 
  2581  050F                     	;# 
  2582  050F                     	;# 
  2583  0510                     	;# 
  2584  0511                     	;# 
  2585  0512                     	;# 
  2586  0512                     	;# 
  2587  0513                     	;# 
  2588  0514                     	;# 
  2589  0515                     	;# 
  2590  0515                     	;# 
  2591  0516                     	;# 
  2592  0517                     	;# 
  2593  0518                     	;# 
  2594  0519                     	;# 
  2595  051A                     	;# 
  2596  051B                     	;# 
  2597  051C                     	;# 
  2598  051D                     	;# 
  2599  058C                     	;# 
  2600  058C                     	;# 
  2601  058D                     	;# 
  2602  058E                     	;# 
  2603  058F                     	;# 
  2604  058F                     	;# 
  2605  0590                     	;# 
  2606  0591                     	;# 
  2607  0592                     	;# 
  2608  0593                     	;# 
  2609  060C                     	;# 
  2610  060D                     	;# 
  2611  060E                     	;# 
  2612  060F                     	;# 
  2613  0610                     	;# 
  2614  0611                     	;# 
  2615  0612                     	;# 
  2616  0613                     	;# 
  2617  0614                     	;# 
  2618  0616                     	;# 
  2619  0617                     	;# 
  2620  0618                     	;# 
  2621  0619                     	;# 
  2622  061A                     	;# 
  2623  061B                     	;# 
  2624  061C                     	;# 
  2625  061D                     	;# 
  2626  061E                     	;# 
  2627  068C                     	;# 
  2628  068D                     	;# 
  2629  068E                     	;# 
  2630  068F                     	;# 
  2631  0690                     	;# 
  2632  0691                     	;# 
  2633  0692                     	;# 
  2634  0693                     	;# 
  2635  0694                     	;# 
  2636  070C                     	;# 
  2637  070D                     	;# 
  2638  070E                     	;# 
  2639  070F                     	;# 
  2640  0710                     	;# 
  2641  0711                     	;# 
  2642  0712                     	;# 
  2643  0713                     	;# 
  2644  0714                     	;# 
  2645  0716                     	;# 
  2646  0717                     	;# 
  2647  0718                     	;# 
  2648  0719                     	;# 
  2649  071A                     	;# 
  2650  071B                     	;# 
  2651  071C                     	;# 
  2652  071D                     	;# 
  2653  071E                     	;# 
  2654  0796                     	;# 
  2655  0797                     	;# 
  2656  0798                     	;# 
  2657  0799                     	;# 
  2658  079A                     	;# 
  2659  079B                     	;# 
  2660  080C                     	;# 
  2661  080D                     	;# 
  2662  080E                     	;# 
  2663  080F                     	;# 
  2664  0810                     	;# 
  2665  0811                     	;# 
  2666  0812                     	;# 
  2667  0813                     	;# 
  2668  0814                     	;# 
  2669  081A                     	;# 
  2670  081B                     	;# 
  2671  081C                     	;# 
  2672  081D                     	;# 
  2673  081E                     	;# 
  2674  081F                     	;# 
  2675  088C                     	;# 
  2676  088D                     	;# 
  2677  088E                     	;# 
  2678  088F                     	;# 
  2679  0890                     	;# 
  2680  0891                     	;# 
  2681  0892                     	;# 
  2682  0893                     	;# 
  2683  0895                     	;# 
  2684  0896                     	;# 
  2685  0897                     	;# 
  2686  0898                     	;# 
  2687  0899                     	;# 
  2688  089A                     	;# 
  2689  089B                     	;# 
  2690  090C                     	;# 
  2691  090E                     	;# 
  2692  090F                     	;# 
  2693  091F                     	;# 
  2694  091F                     	;# 
  2695  098F                     	;# 
  2696  098F                     	;# 
  2697  0990                     	;# 
  2698  0991                     	;# 
  2699  0992                     	;# 
  2700  0993                     	;# 
  2701  0994                     	;# 
  2702  0995                     	;# 
  2703  0996                     	;# 
  2704  0997                     	;# 
  2705  0E0F                     	;# 
  2706  0E10                     	;# 
  2707  0E11                     	;# 
  2708  0E12                     	;# 
  2709  0E13                     	;# 
  2710  0E14                     	;# 
  2711  0E15                     	;# 
  2712  0E16                     	;# 
  2713  0E17                     	;# 
  2714  0E18                     	;# 
  2715  0E19                     	;# 
  2716  0E1A                     	;# 
  2717  0E1B                     	;# 
  2718  0E1C                     	;# 
  2719  0E1D                     	;# 
  2720  0E1E                     	;# 
  2721  0E1F                     	;# 
  2722  0E20                     	;# 
  2723  0E21                     	;# 
  2724  0E22                     	;# 
  2725  0E23                     	;# 
  2726  0E24                     	;# 
  2727  0E25                     	;# 
  2728  0E26                     	;# 
  2729  0E27                     	;# 
  2730  0E28                     	;# 
  2731  0E29                     	;# 
  2732  0E2A                     	;# 
  2733  0E2B                     	;# 
  2734  0E2C                     	;# 
  2735  0E2D                     	;# 
  2736  0E2E                     	;# 
  2737  0E2F                     	;# 
  2738  0E30                     	;# 
  2739  0E31                     	;# 
  2740  0E32                     	;# 
  2741  0E33                     	;# 
  2742  0E34                     	;# 
  2743  0E35                     	;# 
  2744  0E36                     	;# 
  2745  0E37                     	;# 
  2746  0E8F                     	;# 
  2747  0E90                     	;# 
  2748  0E91                     	;# 
  2749  0E92                     	;# 
  2750  0E93                     	;# 
  2751  0E94                     	;# 
  2752  0E95                     	;# 
  2753  0E96                     	;# 
  2754  0E97                     	;# 
  2755  0E9C                     	;# 
  2756  0E9D                     	;# 
  2757  0E9E                     	;# 
  2758  0EA1                     	;# 
  2759  0EA2                     	;# 
  2760  0EA3                     	;# 
  2761  0EA4                     	;# 
  2762  0EA5                     	;# 
  2763  0EA9                     	;# 
  2764  0EAA                     	;# 
  2765  0EAB                     	;# 
  2766  0EAC                     	;# 
  2767  0EB1                     	;# 
  2768  0EB2                     	;# 
  2769  0EB3                     	;# 
  2770  0EB8                     	;# 
  2771  0EB9                     	;# 
  2772  0EBA                     	;# 
  2773  0EBB                     	;# 
  2774  0EBC                     	;# 
  2775  0EBD                     	;# 
  2776  0EBE                     	;# 
  2777  0EC3                     	;# 
  2778  0EC5                     	;# 
  2779  0EC6                     	;# 
  2780  0EC7                     	;# 
  2781  0EC8                     	;# 
  2782  0EC9                     	;# 
  2783  0ECA                     	;# 
  2784  0ECB                     	;# 
  2785  0ECC                     	;# 
  2786  0F10                     	;# 
  2787  0F11                     	;# 
  2788  0F12                     	;# 
  2789  0F13                     	;# 
  2790  0F14                     	;# 
  2791  0F15                     	;# 
  2792  0F16                     	;# 
  2793  0F17                     	;# 
  2794  0F18                     	;# 
  2795  0F19                     	;# 
  2796  0F1A                     	;# 
  2797  0F1B                     	;# 
  2798  0F1C                     	;# 
  2799  0F1D                     	;# 
  2800  0F1E                     	;# 
  2801  0F1F                     	;# 
  2802  0F20                     	;# 
  2803  0F21                     	;# 
  2804  0F22                     	;# 
  2805  0F23                     	;# 
  2806  0F24                     	;# 
  2807  0F25                     	;# 
  2808  0F26                     	;# 
  2809  0F27                     	;# 
  2810  0F28                     	;# 
  2811  0F29                     	;# 
  2812  0F2A                     	;# 
  2813  0F2B                     	;# 
  2814  0F2C                     	;# 
  2815  0F2D                     	;# 
  2816  0F2E                     	;# 
  2817  0F2F                     	;# 
  2818  0F30                     	;# 
  2819  0F31                     	;# 
  2820  0F32                     	;# 
  2821  0F38                     	;# 
  2822  0F39                     	;# 
  2823  0F3A                     	;# 
  2824  0F3B                     	;# 
  2825  0F3C                     	;# 
  2826  0F3D                     	;# 
  2827  0F3E                     	;# 
  2828  0F3F                     	;# 
  2829  0F40                     	;# 
  2830  0F41                     	;# 
  2831  0F43                     	;# 
  2832  0F44                     	;# 
  2833  0F45                     	;# 
  2834  0F46                     	;# 
  2835  0F47                     	;# 
  2836  0F48                     	;# 
  2837  0F49                     	;# 
  2838  0F4A                     	;# 
  2839  0F4B                     	;# 
  2840  0F4C                     	;# 
  2841  0F4E                     	;# 
  2842  0F4F                     	;# 
  2843  0F50                     	;# 
  2844  0F51                     	;# 
  2845  0F52                     	;# 
  2846  0F53                     	;# 
  2847  0F54                     	;# 
  2848  0F55                     	;# 
  2849  0F56                     	;# 
  2850  0F57                     	;# 
  2851  0F59                     	;# 
  2852  0F5A                     	;# 
  2853  0F5B                     	;# 
  2854  0F5C                     	;# 
  2855  0F5D                     	;# 
  2856  0F61                     	;# 
  2857  0F62                     	;# 
  2858  0F64                     	;# 
  2859  0F65                     	;# 
  2860  0F66                     	;# 
  2861  0F67                     	;# 
  2862  0F68                     	;# 
  2863  0F69                     	;# 
  2864  0F6A                     	;# 
  2865  0F6B                     	;# 
  2866  0F6C                     	;# 
  2867  0F6D                     	;# 
  2868  0FE4                     	;# 
  2869  0FE5                     	;# 
  2870  0FE6                     	;# 
  2871  0FE7                     	;# 
  2872  0FE8                     	;# 
  2873  0FE9                     	;# 
  2874  0FEA                     	;# 
  2875  0FEB                     	;# 
  2876  0FED                     	;# 
  2877  0FEE                     	;# 
  2878  0FEF                     	;# 
  2879  0000                     	;# 
  2880  0001                     	;# 
  2881  0002                     	;# 
  2882  0003                     	;# 
  2883  0004                     	;# 
  2884  0005                     	;# 
  2885  0006                     	;# 
  2886  0007                     	;# 
  2887  0008                     	;# 
  2888  0009                     	;# 
  2889  000A                     	;# 
  2890  000B                     	;# 
  2891  000C                     	;# 
  2892  000D                     	;# 
  2893  000E                     	;# 
  2894  000F                     	;# 
  2895  0010                     	;# 
  2896  0011                     	;# 
  2897  0012                     	;# 
  2898  0013                     	;# 
  2899  0014                     	;# 
  2900  0015                     	;# 
  2901  0016                     	;# 
  2902  0017                     	;# 
  2903  0018                     	;# 
  2904  0019                     	;# 
  2905  001A                     	;# 
  2906  001C                     	;# 
  2907  001C                     	;# 
  2908  001D                     	;# 
  2909  001D                     	;# 
  2910  001E                     	;# 
  2911  001F                     	;# 
  2912  008C                     	;# 
  2913  008C                     	;# 
  2914  008D                     	;# 
  2915  008E                     	;# 
  2916  008E                     	;# 
  2917  008F                     	;# 
  2918  0090                     	;# 
  2919  0090                     	;# 
  2920  0091                     	;# 
  2921  0093                     	;# 
  2922  0094                     	;# 
  2923  0095                     	;# 
  2924  0096                     	;# 
  2925  0097                     	;# 
  2926  0098                     	;# 
  2927  0099                     	;# 
  2928  009A                     	;# 
  2929  009B                     	;# 
  2930  009C                     	;# 
  2931  009D                     	;# 
  2932  009E                     	;# 
  2933  010C                     	;# 
  2934  010D                     	;# 
  2935  010E                     	;# 
  2936  010E                     	;# 
  2937  010F                     	;# 
  2938  0110                     	;# 
  2939  0110                     	;# 
  2940  0111                     	;# 
  2941  0112                     	;# 
  2942  0112                     	;# 
  2943  0113                     	;# 
  2944  0114                     	;# 
  2945  0114                     	;# 
  2946  0115                     	;# 
  2947  0116                     	;# 
  2948  0116                     	;# 
  2949  0117                     	;# 
  2950  0119                     	;# 
  2951  0119                     	;# 
  2952  0119                     	;# 
  2953  011A                     	;# 
  2954  011A                     	;# 
  2955  011A                     	;# 
  2956  011B                     	;# 
  2957  011B                     	;# 
  2958  011B                     	;# 
  2959  011B                     	;# 
  2960  011B                     	;# 
  2961  011C                     	;# 
  2962  011C                     	;# 
  2963  011C                     	;# 
  2964  011D                     	;# 
  2965  011D                     	;# 
  2966  011D                     	;# 
  2967  011E                     	;# 
  2968  011E                     	;# 
  2969  011E                     	;# 
  2970  011F                     	;# 
  2971  011F                     	;# 
  2972  011F                     	;# 
  2973  011F                     	;# 
  2974  011F                     	;# 
  2975  018C                     	;# 
  2976  018D                     	;# 
  2977  018E                     	;# 
  2978  018F                     	;# 
  2979  0190                     	;# 
  2980  0191                     	;# 
  2981  0192                     	;# 
  2982  0196                     	;# 
  2983  0197                     	;# 
  2984  0198                     	;# 
  2985  0199                     	;# 
  2986  019A                     	;# 
  2987  019B                     	;# 
  2988  019C                     	;# 
  2989  020C                     	;# 
  2990  020C                     	;# 
  2991  020D                     	;# 
  2992  020E                     	;# 
  2993  020F                     	;# 
  2994  020F                     	;# 
  2995  0210                     	;# 
  2996  0210                     	;# 
  2997  0211                     	;# 
  2998  0211                     	;# 
  2999  0212                     	;# 
  3000  0212                     	;# 
  3001  0213                     	;# 
  3002  0214                     	;# 
  3003  0215                     	;# 
  3004  0215                     	;# 
  3005  0216                     	;# 
  3006  0216                     	;# 
  3007  0217                     	;# 
  3008  0217                     	;# 
  3009  0218                     	;# 
  3010  0218                     	;# 
  3011  0219                     	;# 
  3012  021A                     	;# 
  3013  021B                     	;# 
  3014  021B                     	;# 
  3015  021C                     	;# 
  3016  021C                     	;# 
  3017  021D                     	;# 
  3018  021D                     	;# 
  3019  021E                     	;# 
  3020  021F                     	;# 
  3021  028C                     	;# 
  3022  028C                     	;# 
  3023  028D                     	;# 
  3024  028D                     	;# 
  3025  028E                     	;# 
  3026  028F                     	;# 
  3027  0290                     	;# 
  3028  0290                     	;# 
  3029  0291                     	;# 
  3030  0292                     	;# 
  3031  0292                     	;# 
  3032  0293                     	;# 
  3033  0293                     	;# 
  3034  0294                     	;# 
  3035  0295                     	;# 
  3036  0296                     	;# 
  3037  0296                     	;# 
  3038  0297                     	;# 
  3039  0298                     	;# 
  3040  0298                     	;# 
  3041  0299                     	;# 
  3042  0299                     	;# 
  3043  029A                     	;# 
  3044  029B                     	;# 
  3045  029C                     	;# 
  3046  029C                     	;# 
  3047  029D                     	;# 
  3048  030C                     	;# 
  3049  030C                     	;# 
  3050  030D                     	;# 
  3051  030E                     	;# 
  3052  030F                     	;# 
  3053  0310                     	;# 
  3054  0310                     	;# 
  3055  0311                     	;# 
  3056  0312                     	;# 
  3057  0313                     	;# 
  3058  0314                     	;# 
  3059  0314                     	;# 
  3060  0315                     	;# 
  3061  0316                     	;# 
  3062  0317                     	;# 
  3063  0318                     	;# 
  3064  0318                     	;# 
  3065  0319                     	;# 
  3066  031A                     	;# 
  3067  031B                     	;# 
  3068  031C                     	;# 
  3069  031C                     	;# 
  3070  031D                     	;# 
  3071  031E                     	;# 
  3072  031F                     	;# 
  3073  038C                     	;# 
  3074  038C                     	;# 
  3075  038D                     	;# 
  3076  038E                     	;# 
  3077  0390                     	;# 
  3078  0390                     	;# 
  3079  0391                     	;# 
  3080  0392                     	;# 
  3081  040C                     	;# 
  3082  040D                     	;# 
  3083  040E                     	;# 
  3084  040F                     	;# 
  3085  0410                     	;# 
  3086  0411                     	;# 
  3087  0416                     	;# 
  3088  0416                     	;# 
  3089  0417                     	;# 
  3090  0418                     	;# 
  3091  0418                     	;# 
  3092  0419                     	;# 
  3093  041A                     	;# 
  3094  041A                     	;# 
  3095  041B                     	;# 
  3096  041C                     	;# 
  3097  041C                     	;# 
  3098  041D                     	;# 
  3099  041E                     	;# 
  3100  041F                     	;# 
  3101  048C                     	;# 
  3102  048C                     	;# 
  3103  048D                     	;# 
  3104  048E                     	;# 
  3105  048F                     	;# 
  3106  048F                     	;# 
  3107  0490                     	;# 
  3108  0491                     	;# 
  3109  0492                     	;# 
  3110  0492                     	;# 
  3111  0493                     	;# 
  3112  0494                     	;# 
  3113  0495                     	;# 
  3114  0495                     	;# 
  3115  0496                     	;# 
  3116  0497                     	;# 
  3117  0498                     	;# 
  3118  0499                     	;# 
  3119  049A                     	;# 
  3120  049B                     	;# 
  3121  049C                     	;# 
  3122  049D                     	;# 
  3123  050C                     	;# 
  3124  050C                     	;# 
  3125  050D                     	;# 
  3126  050E                     	;# 
  3127  050F                     	;# 
  3128  050F                     	;# 
  3129  0510                     	;# 
  3130  0511                     	;# 
  3131  0512                     	;# 
  3132  0512                     	;# 
  3133  0513                     	;# 
  3134  0514                     	;# 
  3135  0515                     	;# 
  3136  0515                     	;# 
  3137  0516                     	;# 
  3138  0517                     	;# 
  3139  0518                     	;# 
  3140  0519                     	;# 
  3141  051A                     	;# 
  3142  051B                     	;# 
  3143  051C                     	;# 
  3144  051D                     	;# 
  3145  058C                     	;# 
  3146  058C                     	;# 
  3147  058D                     	;# 
  3148  058E                     	;# 
  3149  058F                     	;# 
  3150  058F                     	;# 
  3151  0590                     	;# 
  3152  0591                     	;# 
  3153  0592                     	;# 
  3154  0593                     	;# 
  3155  060C                     	;# 
  3156  060D                     	;# 
  3157  060E                     	;# 
  3158  060F                     	;# 
  3159  0610                     	;# 
  3160  0611                     	;# 
  3161  0612                     	;# 
  3162  0613                     	;# 
  3163  0614                     	;# 
  3164  0616                     	;# 
  3165  0617                     	;# 
  3166  0618                     	;# 
  3167  0619                     	;# 
  3168  061A                     	;# 
  3169  061B                     	;# 
  3170  061C                     	;# 
  3171  061D                     	;# 
  3172  061E                     	;# 
  3173  068C                     	;# 
  3174  068D                     	;# 
  3175  068E                     	;# 
  3176  068F                     	;# 
  3177  0690                     	;# 
  3178  0691                     	;# 
  3179  0692                     	;# 
  3180  0693                     	;# 
  3181  0694                     	;# 
  3182  070C                     	;# 
  3183  070D                     	;# 
  3184  070E                     	;# 
  3185  070F                     	;# 
  3186  0710                     	;# 
  3187  0711                     	;# 
  3188  0712                     	;# 
  3189  0713                     	;# 
  3190  0714                     	;# 
  3191  0716                     	;# 
  3192  0717                     	;# 
  3193  0718                     	;# 
  3194  0719                     	;# 
  3195  071A                     	;# 
  3196  071B                     	;# 
  3197  071C                     	;# 
  3198  071D                     	;# 
  3199  071E                     	;# 
  3200  0796                     	;# 
  3201  0797                     	;# 
  3202  0798                     	;# 
  3203  0799                     	;# 
  3204  079A                     	;# 
  3205  079B                     	;# 
  3206  080C                     	;# 
  3207  080D                     	;# 
  3208  080E                     	;# 
  3209  080F                     	;# 
  3210  0810                     	;# 
  3211  0811                     	;# 
  3212  0812                     	;# 
  3213  0813                     	;# 
  3214  0814                     	;# 
  3215  081A                     	;# 
  3216  081B                     	;# 
  3217  081C                     	;# 
  3218  081D                     	;# 
  3219  081E                     	;# 
  3220  081F                     	;# 
  3221  088C                     	;# 
  3222  088D                     	;# 
  3223  088E                     	;# 
  3224  088F                     	;# 
  3225  0890                     	;# 
  3226  0891                     	;# 
  3227  0892                     	;# 
  3228  0893                     	;# 
  3229  0895                     	;# 
  3230  0896                     	;# 
  3231  0897                     	;# 
  3232  0898                     	;# 
  3233  0899                     	;# 
  3234  089A                     	;# 
  3235  089B                     	;# 
  3236  090C                     	;# 
  3237  090E                     	;# 
  3238  090F                     	;# 
  3239  091F                     	;# 
  3240  091F                     	;# 
  3241  098F                     	;# 
  3242  098F                     	;# 
  3243  0990                     	;# 
  3244  0991                     	;# 
  3245  0992                     	;# 
  3246  0993                     	;# 
  3247  0994                     	;# 
  3248  0995                     	;# 
  3249  0996                     	;# 
  3250  0997                     	;# 
  3251  0E0F                     	;# 
  3252  0E10                     	;# 
  3253  0E11                     	;# 
  3254  0E12                     	;# 
  3255  0E13                     	;# 
  3256  0E14                     	;# 
  3257  0E15                     	;# 
  3258  0E16                     	;# 
  3259  0E17                     	;# 
  3260  0E18                     	;# 
  3261  0E19                     	;# 
  3262  0E1A                     	;# 
  3263  0E1B                     	;# 
  3264  0E1C                     	;# 
  3265  0E1D                     	;# 
  3266  0E1E                     	;# 
  3267  0E1F                     	;# 
  3268  0E20                     	;# 
  3269  0E21                     	;# 
  3270  0E22                     	;# 
  3271  0E23                     	;# 
  3272  0E24                     	;# 
  3273  0E25                     	;# 
  3274  0E26                     	;# 
  3275  0E27                     	;# 
  3276  0E28                     	;# 
  3277  0E29                     	;# 
  3278  0E2A                     	;# 
  3279  0E2B                     	;# 
  3280  0E2C                     	;# 
  3281  0E2D                     	;# 
  3282  0E2E                     	;# 
  3283  0E2F                     	;# 
  3284  0E30                     	;# 
  3285  0E31                     	;# 
  3286  0E32                     	;# 
  3287  0E33                     	;# 
  3288  0E34                     	;# 
  3289  0E35                     	;# 
  3290  0E36                     	;# 
  3291  0E37                     	;# 
  3292  0E8F                     	;# 
  3293  0E90                     	;# 
  3294  0E91                     	;# 
  3295  0E92                     	;# 
  3296  0E93                     	;# 
  3297  0E94                     	;# 
  3298  0E95                     	;# 
  3299  0E96                     	;# 
  3300  0E97                     	;# 
  3301  0E9C                     	;# 
  3302  0E9D                     	;# 
  3303  0E9E                     	;# 
  3304  0EA1                     	;# 
  3305  0EA2                     	;# 
  3306  0EA3                     	;# 
  3307  0EA4                     	;# 
  3308  0EA5                     	;# 
  3309  0EA9                     	;# 
  3310  0EAA                     	;# 
  3311  0EAB                     	;# 
  3312  0EAC                     	;# 
  3313  0EB1                     	;# 
  3314  0EB2                     	;# 
  3315  0EB3                     	;# 
  3316  0EB8                     	;# 
  3317  0EB9                     	;# 
  3318  0EBA                     	;# 
  3319  0EBB                     	;# 
  3320  0EBC                     	;# 
  3321  0EBD                     	;# 
  3322  0EBE                     	;# 
  3323  0EC3                     	;# 
  3324  0EC5                     	;# 
  3325  0EC6                     	;# 
  3326  0EC7                     	;# 
  3327  0EC8                     	;# 
  3328  0EC9                     	;# 
  3329  0ECA                     	;# 
  3330  0ECB                     	;# 
  3331  0ECC                     	;# 
  3332  0F10                     	;# 
  3333  0F11                     	;# 
  3334  0F12                     	;# 
  3335  0F13                     	;# 
  3336  0F14                     	;# 
  3337  0F15                     	;# 
  3338  0F16                     	;# 
  3339  0F17                     	;# 
  3340  0F18                     	;# 
  3341  0F19                     	;# 
  3342  0F1A                     	;# 
  3343  0F1B                     	;# 
  3344  0F1C                     	;# 
  3345  0F1D                     	;# 
  3346  0F1E                     	;# 
  3347  0F1F                     	;# 
  3348  0F20                     	;# 
  3349  0F21                     	;# 
  3350  0F22                     	;# 
  3351  0F23                     	;# 
  3352  0F24                     	;# 
  3353  0F25                     	;# 
  3354  0F26                     	;# 
  3355  0F27                     	;# 
  3356  0F28                     	;# 
  3357  0F29                     	;# 
  3358  0F2A                     	;# 
  3359  0F2B                     	;# 
  3360  0F2C                     	;# 
  3361  0F2D                     	;# 
  3362  0F2E                     	;# 
  3363  0F2F                     	;# 
  3364  0F30                     	;# 
  3365  0F31                     	;# 
  3366  0F32                     	;# 
  3367  0F38                     	;# 
  3368  0F39                     	;# 
  3369  0F3A                     	;# 
  3370  0F3B                     	;# 
  3371  0F3C                     	;# 
  3372  0F3D                     	;# 
  3373  0F3E                     	;# 
  3374  0F3F                     	;# 
  3375  0F40                     	;# 
  3376  0F41                     	;# 
  3377  0F43                     	;# 
  3378  0F44                     	;# 
  3379  0F45                     	;# 
  3380  0F46                     	;# 
  3381  0F47                     	;# 
  3382  0F48                     	;# 
  3383  0F49                     	;# 
  3384  0F4A                     	;# 
  3385  0F4B                     	;# 
  3386  0F4C                     	;# 
  3387  0F4E                     	;# 
  3388  0F4F                     	;# 
  3389  0F50                     	;# 
  3390  0F51                     	;# 
  3391  0F52                     	;# 
  3392  0F53                     	;# 
  3393  0F54                     	;# 
  3394  0F55                     	;# 
  3395  0F56                     	;# 
  3396  0F57                     	;# 
  3397  0F59                     	;# 
  3398  0F5A                     	;# 
  3399  0F5B                     	;# 
  3400  0F5C                     	;# 
  3401  0F5D                     	;# 
  3402  0F61                     	;# 
  3403  0F62                     	;# 
  3404  0F64                     	;# 
  3405  0F65                     	;# 
  3406  0F66                     	;# 
  3407  0F67                     	;# 
  3408  0F68                     	;# 
  3409  0F69                     	;# 
  3410  0F6A                     	;# 
  3411  0F6B                     	;# 
  3412  0F6C                     	;# 
  3413  0F6D                     	;# 
  3414  0FE4                     	;# 
  3415  0FE5                     	;# 
  3416  0FE6                     	;# 
  3417  0FE7                     	;# 
  3418  0FE8                     	;# 
  3419  0FE9                     	;# 
  3420  0FEA                     	;# 
  3421  0FEB                     	;# 
  3422  0FED                     	;# 
  3423  0FEE                     	;# 
  3424  0FEF                     	;# 
  3425  0000                     	;# 
  3426  0001                     	;# 
  3427  0002                     	;# 
  3428  0003                     	;# 
  3429  0004                     	;# 
  3430  0005                     	;# 
  3431  0006                     	;# 
  3432  0007                     	;# 
  3433  0008                     	;# 
  3434  0009                     	;# 
  3435  000A                     	;# 
  3436  000B                     	;# 
  3437  000C                     	;# 
  3438  000D                     	;# 
  3439  000E                     	;# 
  3440  000F                     	;# 
  3441  0010                     	;# 
  3442  0011                     	;# 
  3443  0012                     	;# 
  3444  0013                     	;# 
  3445  0014                     	;# 
  3446  0015                     	;# 
  3447  0016                     	;# 
  3448  0017                     	;# 
  3449  0018                     	;# 
  3450  0019                     	;# 
  3451  001A                     	;# 
  3452  001C                     	;# 
  3453  001C                     	;# 
  3454  001D                     	;# 
  3455  001D                     	;# 
  3456  001E                     	;# 
  3457  001F                     	;# 
  3458  008C                     	;# 
  3459  008C                     	;# 
  3460  008D                     	;# 
  3461  008E                     	;# 
  3462  008E                     	;# 
  3463  008F                     	;# 
  3464  0090                     	;# 
  3465  0090                     	;# 
  3466  0091                     	;# 
  3467  0093                     	;# 
  3468  0094                     	;# 
  3469  0095                     	;# 
  3470  0096                     	;# 
  3471  0097                     	;# 
  3472  0098                     	;# 
  3473  0099                     	;# 
  3474  009A                     	;# 
  3475  009B                     	;# 
  3476  009C                     	;# 
  3477  009D                     	;# 
  3478  009E                     	;# 
  3479  010C                     	;# 
  3480  010D                     	;# 
  3481  010E                     	;# 
  3482  010E                     	;# 
  3483  010F                     	;# 
  3484  0110                     	;# 
  3485  0110                     	;# 
  3486  0111                     	;# 
  3487  0112                     	;# 
  3488  0112                     	;# 
  3489  0113                     	;# 
  3490  0114                     	;# 
  3491  0114                     	;# 
  3492  0115                     	;# 
  3493  0116                     	;# 
  3494  0116                     	;# 
  3495  0117                     	;# 
  3496  0119                     	;# 
  3497  0119                     	;# 
  3498  0119                     	;# 
  3499  011A                     	;# 
  3500  011A                     	;# 
  3501  011A                     	;# 
  3502  011B                     	;# 
  3503  011B                     	;# 
  3504  011B                     	;# 
  3505  011B                     	;# 
  3506  011B                     	;# 
  3507  011C                     	;# 
  3508  011C                     	;# 
  3509  011C                     	;# 
  3510  011D                     	;# 
  3511  011D                     	;# 
  3512  011D                     	;# 
  3513  011E                     	;# 
  3514  011E                     	;# 
  3515  011E                     	;# 
  3516  011F                     	;# 
  3517  011F                     	;# 
  3518  011F                     	;# 
  3519  011F                     	;# 
  3520  011F                     	;# 
  3521  018C                     	;# 
  3522  018D                     	;# 
  3523  018E                     	;# 
  3524  018F                     	;# 
  3525  0190                     	;# 
  3526  0191                     	;# 
  3527  0192                     	;# 
  3528  0196                     	;# 
  3529  0197                     	;# 
  3530  0198                     	;# 
  3531  0199                     	;# 
  3532  019A                     	;# 
  3533  019B                     	;# 
  3534  019C                     	;# 
  3535  020C                     	;# 
  3536  020C                     	;# 
  3537  020D                     	;# 
  3538  020E                     	;# 
  3539  020F                     	;# 
  3540  020F                     	;# 
  3541  0210                     	;# 
  3542  0210                     	;# 
  3543  0211                     	;# 
  3544  0211                     	;# 
  3545  0212                     	;# 
  3546  0212                     	;# 
  3547  0213                     	;# 
  3548  0214                     	;# 
  3549  0215                     	;# 
  3550  0215                     	;# 
  3551  0216                     	;# 
  3552  0216                     	;# 
  3553  0217                     	;# 
  3554  0217                     	;# 
  3555  0218                     	;# 
  3556  0218                     	;# 
  3557  0219                     	;# 
  3558  021A                     	;# 
  3559  021B                     	;# 
  3560  021B                     	;# 
  3561  021C                     	;# 
  3562  021C                     	;# 
  3563  021D                     	;# 
  3564  021D                     	;# 
  3565  021E                     	;# 
  3566  021F                     	;# 
  3567  028C                     	;# 
  3568  028C                     	;# 
  3569  028D                     	;# 
  3570  028D                     	;# 
  3571  028E                     	;# 
  3572  028F                     	;# 
  3573  0290                     	;# 
  3574  0290                     	;# 
  3575  0291                     	;# 
  3576  0292                     	;# 
  3577  0292                     	;# 
  3578  0293                     	;# 
  3579  0293                     	;# 
  3580  0294                     	;# 
  3581  0295                     	;# 
  3582  0296                     	;# 
  3583  0296                     	;# 
  3584  0297                     	;# 
  3585  0298                     	;# 
  3586  0298                     	;# 
  3587  0299                     	;# 
  3588  0299                     	;# 
  3589  029A                     	;# 
  3590  029B                     	;# 
  3591  029C                     	;# 
  3592  029C                     	;# 
  3593  029D                     	;# 
  3594  030C                     	;# 
  3595  030C                     	;# 
  3596  030D                     	;# 
  3597  030E                     	;# 
  3598  030F                     	;# 
  3599  0310                     	;# 
  3600  0310                     	;# 
  3601  0311                     	;# 
  3602  0312                     	;# 
  3603  0313                     	;# 
  3604  0314                     	;# 
  3605  0314                     	;# 
  3606  0315                     	;# 
  3607  0316                     	;# 
  3608  0317                     	;# 
  3609  0318                     	;# 
  3610  0318                     	;# 
  3611  0319                     	;# 
  3612  031A                     	;# 
  3613  031B                     	;# 
  3614  031C                     	;# 
  3615  031C                     	;# 
  3616  031D                     	;# 
  3617  031E                     	;# 
  3618  031F                     	;# 
  3619  038C                     	;# 
  3620  038C                     	;# 
  3621  038D                     	;# 
  3622  038E                     	;# 
  3623  0390                     	;# 
  3624  0390                     	;# 
  3625  0391                     	;# 
  3626  0392                     	;# 
  3627  040C                     	;# 
  3628  040D                     	;# 
  3629  040E                     	;# 
  3630  040F                     	;# 
  3631  0410                     	;# 
  3632  0411                     	;# 
  3633  0416                     	;# 
  3634  0416                     	;# 
  3635  0417                     	;# 
  3636  0418                     	;# 
  3637  0418                     	;# 
  3638  0419                     	;# 
  3639  041A                     	;# 
  3640  041A                     	;# 
  3641  041B                     	;# 
  3642  041C                     	;# 
  3643  041C                     	;# 
  3644  041D                     	;# 
  3645  041E                     	;# 
  3646  041F                     	;# 
  3647  048C                     	;# 
  3648  048C                     	;# 
  3649  048D                     	;# 
  3650  048E                     	;# 
  3651  048F                     	;# 
  3652  048F                     	;# 
  3653  0490                     	;# 
  3654  0491                     	;# 
  3655  0492                     	;# 
  3656  0492                     	;# 
  3657  0493                     	;# 
  3658  0494                     	;# 
  3659  0495                     	;# 
  3660  0495                     	;# 
  3661  0496                     	;# 
  3662  0497                     	;# 
  3663  0498                     	;# 
  3664  0499                     	;# 
  3665  049A                     	;# 
  3666  049B                     	;# 
  3667  049C                     	;# 
  3668  049D                     	;# 
  3669  050C                     	;# 
  3670  050C                     	;# 
  3671  050D                     	;# 
  3672  050E                     	;# 
  3673  050F                     	;# 
  3674  050F                     	;# 
  3675  0510                     	;# 
  3676  0511                     	;# 
  3677  0512                     	;# 
  3678  0512                     	;# 
  3679  0513                     	;# 
  3680  0514                     	;# 
  3681  0515                     	;# 
  3682  0515                     	;# 
  3683  0516                     	;# 
  3684  0517                     	;# 
  3685  0518                     	;# 
  3686  0519                     	;# 
  3687  051A                     	;# 
  3688  051B                     	;# 
  3689  051C                     	;# 
  3690  051D                     	;# 
  3691  058C                     	;# 
  3692  058C                     	;# 
  3693  058D                     	;# 
  3694  058E                     	;# 
  3695  058F                     	;# 
  3696  058F                     	;# 
  3697  0590                     	;# 
  3698  0591                     	;# 
  3699  0592                     	;# 
  3700  0593                     	;# 
  3701  060C                     	;# 
  3702  060D                     	;# 
  3703  060E                     	;# 
  3704  060F                     	;# 
  3705  0610                     	;# 
  3706  0611                     	;# 
  3707  0612                     	;# 
  3708  0613                     	;# 
  3709  0614                     	;# 
  3710  0616                     	;# 
  3711  0617                     	;# 
  3712  0618                     	;# 
  3713  0619                     	;# 
  3714  061A                     	;# 
  3715  061B                     	;# 
  3716  061C                     	;# 
  3717  061D                     	;# 
  3718  061E                     	;# 
  3719  068C                     	;# 
  3720  068D                     	;# 
  3721  068E                     	;# 
  3722  068F                     	;# 
  3723  0690                     	;# 
  3724  0691                     	;# 
  3725  0692                     	;# 
  3726  0693                     	;# 
  3727  0694                     	;# 
  3728  070C                     	;# 
  3729  070D                     	;# 
  3730  070E                     	;# 
  3731  070F                     	;# 
  3732  0710                     	;# 
  3733  0711                     	;# 
  3734  0712                     	;# 
  3735  0713                     	;# 
  3736  0714                     	;# 
  3737  0716                     	;# 
  3738  0717                     	;# 
  3739  0718                     	;# 
  3740  0719                     	;# 
  3741  071A                     	;# 
  3742  071B                     	;# 
  3743  071C                     	;# 
  3744  071D                     	;# 
  3745  071E                     	;# 
  3746  0796                     	;# 
  3747  0797                     	;# 
  3748  0798                     	;# 
  3749  0799                     	;# 
  3750  079A                     	;# 
  3751  079B                     	;# 
  3752  080C                     	;# 
  3753  080D                     	;# 
  3754  080E                     	;# 
  3755  080F                     	;# 
  3756  0810                     	;# 
  3757  0811                     	;# 
  3758  0812                     	;# 
  3759  0813                     	;# 
  3760  0814                     	;# 
  3761  081A                     	;# 
  3762  081B                     	;# 
  3763  081C                     	;# 
  3764  081D                     	;# 
  3765  081E                     	;# 
  3766  081F                     	;# 
  3767  088C                     	;# 
  3768  088D                     	;# 
  3769  088E                     	;# 
  3770  088F                     	;# 
  3771  0890                     	;# 
  3772  0891                     	;# 
  3773  0892                     	;# 
  3774  0893                     	;# 
  3775  0895                     	;# 
  3776  0896                     	;# 
  3777  0897                     	;# 
  3778  0898                     	;# 
  3779  0899                     	;# 
  3780  089A                     	;# 
  3781  089B                     	;# 
  3782  090C                     	;# 
  3783  090E                     	;# 
  3784  090F                     	;# 
  3785  091F                     	;# 
  3786  091F                     	;# 
  3787  098F                     	;# 
  3788  098F                     	;# 
  3789  0990                     	;# 
  3790  0991                     	;# 
  3791  0992                     	;# 
  3792  0993                     	;# 
  3793  0994                     	;# 
  3794  0995                     	;# 
  3795  0996                     	;# 
  3796  0997                     	;# 
  3797  0E0F                     	;# 
  3798  0E10                     	;# 
  3799  0E11                     	;# 
  3800  0E12                     	;# 
  3801  0E13                     	;# 
  3802  0E14                     	;# 
  3803  0E15                     	;# 
  3804  0E16                     	;# 
  3805  0E17                     	;# 
  3806  0E18                     	;# 
  3807  0E19                     	;# 
  3808  0E1A                     	;# 
  3809  0E1B                     	;# 
  3810  0E1C                     	;# 
  3811  0E1D                     	;# 
  3812  0E1E                     	;# 
  3813  0E1F                     	;# 
  3814  0E20                     	;# 
  3815  0E21                     	;# 
  3816  0E22                     	;# 
  3817  0E23                     	;# 
  3818  0E24                     	;# 
  3819  0E25                     	;# 
  3820  0E26                     	;# 
  3821  0E27                     	;# 
  3822  0E28                     	;# 
  3823  0E29                     	;# 
  3824  0E2A                     	;# 
  3825  0E2B                     	;# 
  3826  0E2C                     	;# 
  3827  0E2D                     	;# 
  3828  0E2E                     	;# 
  3829  0E2F                     	;# 
  3830  0E30                     	;# 
  3831  0E31                     	;# 
  3832  0E32                     	;# 
  3833  0E33                     	;# 
  3834  0E34                     	;# 
  3835  0E35                     	;# 
  3836  0E36                     	;# 
  3837  0E37                     	;# 
  3838  0E8F                     	;# 
  3839  0E90                     	;# 
  3840  0E91                     	;# 
  3841  0E92                     	;# 
  3842  0E93                     	;# 
  3843  0E94                     	;# 
  3844  0E95                     	;# 
  3845  0E96                     	;# 
  3846  0E97                     	;# 
  3847  0E9C                     	;# 
  3848  0E9D                     	;# 
  3849  0E9E                     	;# 
  3850  0EA1                     	;# 
  3851  0EA2                     	;# 
  3852  0EA3                     	;# 
  3853  0EA4                     	;# 
  3854  0EA5                     	;# 
  3855  0EA9                     	;# 
  3856  0EAA                     	;# 
  3857  0EAB                     	;# 
  3858  0EAC                     	;# 
  3859  0EB1                     	;# 
  3860  0EB2                     	;# 
  3861  0EB3                     	;# 
  3862  0EB8                     	;# 
  3863  0EB9                     	;# 
  3864  0EBA                     	;# 
  3865  0EBB                     	;# 
  3866  0EBC                     	;# 
  3867  0EBD                     	;# 
  3868  0EBE                     	;# 
  3869  0EC3                     	;# 
  3870  0EC5                     	;# 
  3871  0EC6                     	;# 
  3872  0EC7                     	;# 
  3873  0EC8                     	;# 
  3874  0EC9                     	;# 
  3875  0ECA                     	;# 
  3876  0ECB                     	;# 
  3877  0ECC                     	;# 
  3878  0F10                     	;# 
  3879  0F11                     	;# 
  3880  0F12                     	;# 
  3881  0F13                     	;# 
  3882  0F14                     	;# 
  3883  0F15                     	;# 
  3884  0F16                     	;# 
  3885  0F17                     	;# 
  3886  0F18                     	;# 
  3887  0F19                     	;# 
  3888  0F1A                     	;# 
  3889  0F1B                     	;# 
  3890  0F1C                     	;# 
  3891  0F1D                     	;# 
  3892  0F1E                     	;# 
  3893  0F1F                     	;# 
  3894  0F20                     	;# 
  3895  0F21                     	;# 
  3896  0F22                     	;# 
  3897  0F23                     	;# 
  3898  0F24                     	;# 
  3899  0F25                     	;# 
  3900  0F26                     	;# 
  3901  0F27                     	;# 
  3902  0F28                     	;# 
  3903  0F29                     	;# 
  3904  0F2A                     	;# 
  3905  0F2B                     	;# 
  3906  0F2C                     	;# 
  3907  0F2D                     	;# 
  3908  0F2E                     	;# 
  3909  0F2F                     	;# 
  3910  0F30                     	;# 
  3911  0F31                     	;# 
  3912  0F32                     	;# 
  3913  0F38                     	;# 
  3914  0F39                     	;# 
  3915  0F3A                     	;# 
  3916  0F3B                     	;# 
  3917  0F3C                     	;# 
  3918  0F3D                     	;# 
  3919  0F3E                     	;# 
  3920  0F3F                     	;# 
  3921  0F40                     	;# 
  3922  0F41                     	;# 
  3923  0F43                     	;# 
  3924  0F44                     	;# 
  3925  0F45                     	;# 
  3926  0F46                     	;# 
  3927  0F47                     	;# 
  3928  0F48                     	;# 
  3929  0F49                     	;# 
  3930  0F4A                     	;# 
  3931  0F4B                     	;# 
  3932  0F4C                     	;# 
  3933  0F4E                     	;# 
  3934  0F4F                     	;# 
  3935  0F50                     	;# 
  3936  0F51                     	;# 
  3937  0F52                     	;# 
  3938  0F53                     	;# 
  3939  0F54                     	;# 
  3940  0F55                     	;# 
  3941  0F56                     	;# 
  3942  0F57                     	;# 
  3943  0F59                     	;# 
  3944  0F5A                     	;# 
  3945  0F5B                     	;# 
  3946  0F5C                     	;# 
  3947  0F5D                     	;# 
  3948  0F61                     	;# 
  3949  0F62                     	;# 
  3950  0F64                     	;# 
  3951  0F65                     	;# 
  3952  0F66                     	;# 
  3953  0F67                     	;# 
  3954  0F68                     	;# 
  3955  0F69                     	;# 
  3956  0F6A                     	;# 
  3957  0F6B                     	;# 
  3958  0F6C                     	;# 
  3959  0F6D                     	;# 
  3960  0FE4                     	;# 
  3961  0FE5                     	;# 
  3962  0FE6                     	;# 
  3963  0FE7                     	;# 
  3964  0FE8                     	;# 
  3965  0FE9                     	;# 
  3966  0FEA                     	;# 
  3967  0FEB                     	;# 
  3968  0FED                     	;# 
  3969  0FEE                     	;# 
  3970  0FEF                     	;# 
  3971  0000                     	;# 
  3972  0001                     	;# 
  3973  0002                     	;# 
  3974  0003                     	;# 
  3975  0004                     	;# 
  3976  0005                     	;# 
  3977  0006                     	;# 
  3978  0007                     	;# 
  3979  0008                     	;# 
  3980  0009                     	;# 
  3981  000A                     	;# 
  3982  000B                     	;# 
  3983  000C                     	;# 
  3984  000D                     	;# 
  3985  000E                     	;# 
  3986  000F                     	;# 
  3987  0010                     	;# 
  3988  0011                     	;# 
  3989  0012                     	;# 
  3990  0013                     	;# 
  3991  0014                     	;# 
  3992  0015                     	;# 
  3993  0016                     	;# 
  3994  0017                     	;# 
  3995  0018                     	;# 
  3996  0019                     	;# 
  3997  001A                     	;# 
  3998  001C                     	;# 
  3999  001C                     	;# 
  4000  001D                     	;# 
  4001  001D                     	;# 
  4002  001E                     	;# 
  4003  001F                     	;# 
  4004  008C                     	;# 
  4005  008C                     	;# 
  4006  008D                     	;# 
  4007  008E                     	;# 
  4008  008E                     	;# 
  4009  008F                     	;# 
  4010  0090                     	;# 
  4011  0090                     	;# 
  4012  0091                     	;# 
  4013  0093                     	;# 
  4014  0094                     	;# 
  4015  0095                     	;# 
  4016  0096                     	;# 
  4017  0097                     	;# 
  4018  0098                     	;# 
  4019  0099                     	;# 
  4020  009A                     	;# 
  4021  009B                     	;# 
  4022  009C                     	;# 
  4023  009D                     	;# 
  4024  009E                     	;# 
  4025  010C                     	;# 
  4026  010D                     	;# 
  4027  010E                     	;# 
  4028  010E                     	;# 
  4029  010F                     	;# 
  4030  0110                     	;# 
  4031  0110                     	;# 
  4032  0111                     	;# 
  4033  0112                     	;# 
  4034  0112                     	;# 
  4035  0113                     	;# 
  4036  0114                     	;# 
  4037  0114                     	;# 
  4038  0115                     	;# 
  4039  0116                     	;# 
  4040  0116                     	;# 
  4041  0117                     	;# 
  4042  0119                     	;# 
  4043  0119                     	;# 
  4044  0119                     	;# 
  4045  011A                     	;# 
  4046  011A                     	;# 
  4047  011A                     	;# 
  4048  011B                     	;# 
  4049  011B                     	;# 
  4050  011B                     	;# 
  4051  011B                     	;# 
  4052  011B                     	;# 
  4053  011C                     	;# 
  4054  011C                     	;# 
  4055  011C                     	;# 
  4056  011D                     	;# 
  4057  011D                     	;# 
  4058  011D                     	;# 
  4059  011E                     	;# 
  4060  011E                     	;# 
  4061  011E                     	;# 
  4062  011F                     	;# 
  4063  011F                     	;# 
  4064  011F                     	;# 
  4065  011F                     	;# 
  4066  011F                     	;# 
  4067  018C                     	;# 
  4068  018D                     	;# 
  4069  018E                     	;# 
  4070  018F                     	;# 
  4071  0190                     	;# 
  4072  0191                     	;# 
  4073  0192                     	;# 
  4074  0196                     	;# 
  4075  0197                     	;# 
  4076  0198                     	;# 
  4077  0199                     	;# 
  4078  019A                     	;# 
  4079  019B                     	;# 
  4080  019C                     	;# 
  4081  020C                     	;# 
  4082  020C                     	;# 
  4083  020D                     	;# 
  4084  020E                     	;# 
  4085  020F                     	;# 
  4086  020F                     	;# 
  4087  0210                     	;# 
  4088  0210                     	;# 
  4089  0211                     	;# 
  4090  0211                     	;# 
  4091  0212                     	;# 
  4092  0212                     	;# 
  4093  0213                     	;# 
  4094  0214                     	;# 
  4095  0215                     	;# 
  4096  0215                     	;# 
  4097  0216                     	;# 
  4098  0216                     	;# 
  4099  0217                     	;# 
  4100  0217                     	;# 
  4101  0218                     	;# 
  4102  0218                     	;# 
  4103  0219                     	;# 
  4104  021A                     	;# 
  4105  021B                     	;# 
  4106  021B                     	;# 
  4107  021C                     	;# 
  4108  021C                     	;# 
  4109  021D                     	;# 
  4110  021D                     	;# 
  4111  021E                     	;# 
  4112  021F                     	;# 
  4113  028C                     	;# 
  4114  028C                     	;# 
  4115  028D                     	;# 
  4116  028D                     	;# 
  4117  028E                     	;# 
  4118  028F                     	;# 
  4119  0290                     	;# 
  4120  0290                     	;# 
  4121  0291                     	;# 
  4122  0292                     	;# 
  4123  0292                     	;# 
  4124  0293                     	;# 
  4125  0293                     	;# 
  4126  0294                     	;# 
  4127  0295                     	;# 
  4128  0296                     	;# 
  4129  0296                     	;# 
  4130  0297                     	;# 
  4131  0298                     	;# 
  4132  0298                     	;# 
  4133  0299                     	;# 
  4134  0299                     	;# 
  4135  029A                     	;# 
  4136  029B                     	;# 
  4137  029C                     	;# 
  4138  029C                     	;# 
  4139  029D                     	;# 
  4140  030C                     	;# 
  4141  030C                     	;# 
  4142  030D                     	;# 
  4143  030E                     	;# 
  4144  030F                     	;# 
  4145  0310                     	;# 
  4146  0310                     	;# 
  4147  0311                     	;# 
  4148  0312                     	;# 
  4149  0313                     	;# 
  4150  0314                     	;# 
  4151  0314                     	;# 
  4152  0315                     	;# 
  4153  0316                     	;# 
  4154  0317                     	;# 
  4155  0318                     	;# 
  4156  0318                     	;# 
  4157  0319                     	;# 
  4158  031A                     	;# 
  4159  031B                     	;# 
  4160  031C                     	;# 
  4161  031C                     	;# 
  4162  031D                     	;# 
  4163  031E                     	;# 
  4164  031F                     	;# 
  4165  038C                     	;# 
  4166  038C                     	;# 
  4167  038D                     	;# 
  4168  038E                     	;# 
  4169  0390                     	;# 
  4170  0390                     	;# 
  4171  0391                     	;# 
  4172  0392                     	;# 
  4173  040C                     	;# 
  4174  040D                     	;# 
  4175  040E                     	;# 
  4176  040F                     	;# 
  4177  0410                     	;# 
  4178  0411                     	;# 
  4179  0416                     	;# 
  4180  0416                     	;# 
  4181  0417                     	;# 
  4182  0418                     	;# 
  4183  0418                     	;# 
  4184  0419                     	;# 
  4185  041A                     	;# 
  4186  041A                     	;# 
  4187  041B                     	;# 
  4188  041C                     	;# 
  4189  041C                     	;# 
  4190  041D                     	;# 
  4191  041E                     	;# 
  4192  041F                     	;# 
  4193  048C                     	;# 
  4194  048C                     	;# 
  4195  048D                     	;# 
  4196  048E                     	;# 
  4197  048F                     	;# 
  4198  048F                     	;# 
  4199  0490                     	;# 
  4200  0491                     	;# 
  4201  0492                     	;# 
  4202  0492                     	;# 
  4203  0493                     	;# 
  4204  0494                     	;# 
  4205  0495                     	;# 
  4206  0495                     	;# 
  4207  0496                     	;# 
  4208  0497                     	;# 
  4209  0498                     	;# 
  4210  0499                     	;# 
  4211  049A                     	;# 
  4212  049B                     	;# 
  4213  049C                     	;# 
  4214  049D                     	;# 
  4215  050C                     	;# 
  4216  050C                     	;# 
  4217  050D                     	;# 
  4218  050E                     	;# 
  4219  050F                     	;# 
  4220  050F                     	;# 
  4221  0510                     	;# 
  4222  0511                     	;# 
  4223  0512                     	;# 
  4224  0512                     	;# 
  4225  0513                     	;# 
  4226  0514                     	;# 
  4227  0515                     	;# 
  4228  0515                     	;# 
  4229  0516                     	;# 
  4230  0517                     	;# 
  4231  0518                     	;# 
  4232  0519                     	;# 
  4233  051A                     	;# 
  4234  051B                     	;# 
  4235  051C                     	;# 
  4236  051D                     	;# 
  4237  058C                     	;# 
  4238  058C                     	;# 
  4239  058D                     	;# 
  4240  058E                     	;# 
  4241  058F                     	;# 
  4242  058F                     	;# 
  4243  0590                     	;# 
  4244  0591                     	;# 
  4245  0592                     	;# 
  4246  0593                     	;# 
  4247  060C                     	;# 
  4248  060D                     	;# 
  4249  060E                     	;# 
  4250  060F                     	;# 
  4251  0610                     	;# 
  4252  0611                     	;# 
  4253  0612                     	;# 
  4254  0613                     	;# 
  4255  0614                     	;# 
  4256  0616                     	;# 
  4257  0617                     	;# 
  4258  0618                     	;# 
  4259  0619                     	;# 
  4260  061A                     	;# 
  4261  061B                     	;# 
  4262  061C                     	;# 
  4263  061D                     	;# 
  4264  061E                     	;# 
  4265  068C                     	;# 
  4266  068D                     	;# 
  4267  068E                     	;# 
  4268  068F                     	;# 
  4269  0690                     	;# 
  4270  0691                     	;# 
  4271  0692                     	;# 
  4272  0693                     	;# 
  4273  0694                     	;# 
  4274  070C                     	;# 
  4275  070D                     	;# 
  4276  070E                     	;# 
  4277  070F                     	;# 
  4278  0710                     	;# 
  4279  0711                     	;# 
  4280  0712                     	;# 
  4281  0713                     	;# 
  4282  0714                     	;# 
  4283  0716                     	;# 
  4284  0717                     	;# 
  4285  0718                     	;# 
  4286  0719                     	;# 
  4287  071A                     	;# 
  4288  071B                     	;# 
  4289  071C                     	;# 
  4290  071D                     	;# 
  4291  071E                     	;# 
  4292  0796                     	;# 
  4293  0797                     	;# 
  4294  0798                     	;# 
  4295  0799                     	;# 
  4296  079A                     	;# 
  4297  079B                     	;# 
  4298  080C                     	;# 
  4299  080D                     	;# 
  4300  080E                     	;# 
  4301  080F                     	;# 
  4302  0810                     	;# 
  4303  0811                     	;# 
  4304  0812                     	;# 
  4305  0813                     	;# 
  4306  0814                     	;# 
  4307  081A                     	;# 
  4308  081B                     	;# 
  4309  081C                     	;# 
  4310  081D                     	;# 
  4311  081E                     	;# 
  4312  081F                     	;# 
  4313  088C                     	;# 
  4314  088D                     	;# 
  4315  088E                     	;# 
  4316  088F                     	;# 
  4317  0890                     	;# 
  4318  0891                     	;# 
  4319  0892                     	;# 
  4320  0893                     	;# 
  4321  0895                     	;# 
  4322  0896                     	;# 
  4323  0897                     	;# 
  4324  0898                     	;# 
  4325  0899                     	;# 
  4326  089A                     	;# 
  4327  089B                     	;# 
  4328  090C                     	;# 
  4329  090E                     	;# 
  4330  090F                     	;# 
  4331  091F                     	;# 
  4332  091F                     	;# 
  4333  098F                     	;# 
  4334  098F                     	;# 
  4335  0990                     	;# 
  4336  0991                     	;# 
  4337  0992                     	;# 
  4338  0993                     	;# 
  4339  0994                     	;# 
  4340  0995                     	;# 
  4341  0996                     	;# 
  4342  0997                     	;# 
  4343  0E0F                     	;# 
  4344  0E10                     	;# 
  4345  0E11                     	;# 
  4346  0E12                     	;# 
  4347  0E13                     	;# 
  4348  0E14                     	;# 
  4349  0E15                     	;# 
  4350  0E16                     	;# 
  4351  0E17                     	;# 
  4352  0E18                     	;# 
  4353  0E19                     	;# 
  4354  0E1A                     	;# 
  4355  0E1B                     	;# 
  4356  0E1C                     	;# 
  4357  0E1D                     	;# 
  4358  0E1E                     	;# 
  4359  0E1F                     	;# 
  4360  0E20                     	;# 
  4361  0E21                     	;# 
  4362  0E22                     	;# 
  4363  0E23                     	;# 
  4364  0E24                     	;# 
  4365  0E25                     	;# 
  4366  0E26                     	;# 
  4367  0E27                     	;# 
  4368  0E28                     	;# 
  4369  0E29                     	;# 
  4370  0E2A                     	;# 
  4371  0E2B                     	;# 
  4372  0E2C                     	;# 
  4373  0E2D                     	;# 
  4374  0E2E                     	;# 
  4375  0E2F                     	;# 
  4376  0E30                     	;# 
  4377  0E31                     	;# 
  4378  0E32                     	;# 
  4379  0E33                     	;# 
  4380  0E34                     	;# 
  4381  0E35                     	;# 
  4382  0E36                     	;# 
  4383  0E37                     	;# 
  4384  0E8F                     	;# 
  4385  0E90                     	;# 
  4386  0E91                     	;# 
  4387  0E92                     	;# 
  4388  0E93                     	;# 
  4389  0E94                     	;# 
  4390  0E95                     	;# 
  4391  0E96                     	;# 
  4392  0E97                     	;# 
  4393  0E9C                     	;# 
  4394  0E9D                     	;# 
  4395  0E9E                     	;# 
  4396  0EA1                     	;# 
  4397  0EA2                     	;# 
  4398  0EA3                     	;# 
  4399  0EA4                     	;# 
  4400  0EA5                     	;# 
  4401  0EA9                     	;# 
  4402  0EAA                     	;# 
  4403  0EAB                     	;# 
  4404  0EAC                     	;# 
  4405  0EB1                     	;# 
  4406  0EB2                     	;# 
  4407  0EB3                     	;# 
  4408  0EB8                     	;# 
  4409  0EB9                     	;# 
  4410  0EBA                     	;# 
  4411  0EBB                     	;# 
  4412  0EBC                     	;# 
  4413  0EBD                     	;# 
  4414  0EBE                     	;# 
  4415  0EC3                     	;# 
  4416  0EC5                     	;# 
  4417  0EC6                     	;# 
  4418  0EC7                     	;# 
  4419  0EC8                     	;# 
  4420  0EC9                     	;# 
  4421  0ECA                     	;# 
  4422  0ECB                     	;# 
  4423  0ECC                     	;# 
  4424  0F10                     	;# 
  4425  0F11                     	;# 
  4426  0F12                     	;# 
  4427  0F13                     	;# 
  4428  0F14                     	;# 
  4429  0F15                     	;# 
  4430  0F16                     	;# 
  4431  0F17                     	;# 
  4432  0F18                     	;# 
  4433  0F19                     	;# 
  4434  0F1A                     	;# 
  4435  0F1B                     	;# 
  4436  0F1C                     	;# 
  4437  0F1D                     	;# 
  4438  0F1E                     	;# 
  4439  0F1F                     	;# 
  4440  0F20                     	;# 
  4441  0F21                     	;# 
  4442  0F22                     	;# 
  4443  0F23                     	;# 
  4444  0F24                     	;# 
  4445  0F25                     	;# 
  4446  0F26                     	;# 
  4447  0F27                     	;# 
  4448  0F28                     	;# 
  4449  0F29                     	;# 
  4450  0F2A                     	;# 
  4451  0F2B                     	;# 
  4452  0F2C                     	;# 
  4453  0F2D                     	;# 
  4454  0F2E                     	;# 
  4455  0F2F                     	;# 
  4456  0F30                     	;# 
  4457  0F31                     	;# 
  4458  0F32                     	;# 
  4459  0F38                     	;# 
  4460  0F39                     	;# 
  4461  0F3A                     	;# 
  4462  0F3B                     	;# 
  4463  0F3C                     	;# 
  4464  0F3D                     	;# 
  4465  0F3E                     	;# 
  4466  0F3F                     	;# 
  4467  0F40                     	;# 
  4468  0F41                     	;# 
  4469  0F43                     	;# 
  4470  0F44                     	;# 
  4471  0F45                     	;# 
  4472  0F46                     	;# 
  4473  0F47                     	;# 
  4474  0F48                     	;# 
  4475  0F49                     	;# 
  4476  0F4A                     	;# 
  4477  0F4B                     	;# 
  4478  0F4C                     	;# 
  4479  0F4E                     	;# 
  4480  0F4F                     	;# 
  4481  0F50                     	;# 
  4482  0F51                     	;# 
  4483  0F52                     	;# 
  4484  0F53                     	;# 
  4485  0F54                     	;# 
  4486  0F55                     	;# 
  4487  0F56                     	;# 
  4488  0F57                     	;# 
  4489  0F59                     	;# 
  4490  0F5A                     	;# 
  4491  0F5B                     	;# 
  4492  0F5C                     	;# 
  4493  0F5D                     	;# 
  4494  0F61                     	;# 
  4495  0F62                     	;# 
  4496  0F64                     	;# 
  4497  0F65                     	;# 
  4498  0F66                     	;# 
  4499  0F67                     	;# 
  4500  0F68                     	;# 
  4501  0F69                     	;# 
  4502  0F6A                     	;# 
  4503  0F6B                     	;# 
  4504  0F6C                     	;# 
  4505  0F6D                     	;# 
  4506  0FE4                     	;# 
  4507  0FE5                     	;# 
  4508  0FE6                     	;# 
  4509  0FE7                     	;# 
  4510  0FE8                     	;# 
  4511  0FE9                     	;# 
  4512  0FEA                     	;# 
  4513  0FEB                     	;# 
  4514  0FED                     	;# 
  4515  0FEE                     	;# 
  4516  0FEF                     	;# 
  4517  0000                     	;# 
  4518  0001                     	;# 
  4519  0002                     	;# 
  4520  0003                     	;# 
  4521  0004                     	;# 
  4522  0005                     	;# 
  4523  0006                     	;# 
  4524  0007                     	;# 
  4525  0008                     	;# 
  4526  0009                     	;# 
  4527  000A                     	;# 
  4528  000B                     	;# 
  4529  000C                     	;# 
  4530  000D                     	;# 
  4531  000E                     	;# 
  4532  000F                     	;# 
  4533  0010                     	;# 
  4534  0011                     	;# 
  4535  0012                     	;# 
  4536  0013                     	;# 
  4537  0014                     	;# 
  4538  0015                     	;# 
  4539  0016                     	;# 
  4540  0017                     	;# 
  4541  0018                     	;# 
  4542  0019                     	;# 
  4543  001A                     	;# 
  4544  001C                     	;# 
  4545  001C                     	;# 
  4546  001D                     	;# 
  4547  001D                     	;# 
  4548  001E                     	;# 
  4549  001F                     	;# 
  4550  008C                     	;# 
  4551  008C                     	;# 
  4552  008D                     	;# 
  4553  008E                     	;# 
  4554  008E                     	;# 
  4555  008F                     	;# 
  4556  0090                     	;# 
  4557  0090                     	;# 
  4558  0091                     	;# 
  4559  0093                     	;# 
  4560  0094                     	;# 
  4561  0095                     	;# 
  4562  0096                     	;# 
  4563  0097                     	;# 
  4564  0098                     	;# 
  4565  0099                     	;# 
  4566  009A                     	;# 
  4567  009B                     	;# 
  4568  009C                     	;# 
  4569  009D                     	;# 
  4570  009E                     	;# 
  4571  010C                     	;# 
  4572  010D                     	;# 
  4573  010E                     	;# 
  4574  010E                     	;# 
  4575  010F                     	;# 
  4576  0110                     	;# 
  4577  0110                     	;# 
  4578  0111                     	;# 
  4579  0112                     	;# 
  4580  0112                     	;# 
  4581  0113                     	;# 
  4582  0114                     	;# 
  4583  0114                     	;# 
  4584  0115                     	;# 
  4585  0116                     	;# 
  4586  0116                     	;# 
  4587  0117                     	;# 
  4588  0119                     	;# 
  4589  0119                     	;# 
  4590  0119                     	;# 
  4591  011A                     	;# 
  4592  011A                     	;# 
  4593  011A                     	;# 
  4594  011B                     	;# 
  4595  011B                     	;# 
  4596  011B                     	;# 
  4597  011B                     	;# 
  4598  011B                     	;# 
  4599  011C                     	;# 
  4600  011C                     	;# 
  4601  011C                     	;# 
  4602  011D                     	;# 
  4603  011D                     	;# 
  4604  011D                     	;# 
  4605  011E                     	;# 
  4606  011E                     	;# 
  4607  011E                     	;# 
  4608  011F                     	;# 
  4609  011F                     	;# 
  4610  011F                     	;# 
  4611  011F                     	;# 
  4612  011F                     	;# 
  4613  018C                     	;# 
  4614  018D                     	;# 
  4615  018E                     	;# 
  4616  018F                     	;# 
  4617  0190                     	;# 
  4618  0191                     	;# 
  4619  0192                     	;# 
  4620  0196                     	;# 
  4621  0197                     	;# 
  4622  0198                     	;# 
  4623  0199                     	;# 
  4624  019A                     	;# 
  4625  019B                     	;# 
  4626  019C                     	;# 
  4627  020C                     	;# 
  4628  020C                     	;# 
  4629  020D                     	;# 
  4630  020E                     	;# 
  4631  020F                     	;# 
  4632  020F                     	;# 
  4633  0210                     	;# 
  4634  0210                     	;# 
  4635  0211                     	;# 
  4636  0211                     	;# 
  4637  0212                     	;# 
  4638  0212                     	;# 
  4639  0213                     	;# 
  4640  0214                     	;# 
  4641  0215                     	;# 
  4642  0215                     	;# 
  4643  0216                     	;# 
  4644  0216                     	;# 
  4645  0217                     	;# 
  4646  0217                     	;# 
  4647  0218                     	;# 
  4648  0218                     	;# 
  4649  0219                     	;# 
  4650  021A                     	;# 
  4651  021B                     	;# 
  4652  021B                     	;# 
  4653  021C                     	;# 
  4654  021C                     	;# 
  4655  021D                     	;# 
  4656  021D                     	;# 
  4657  021E                     	;# 
  4658  021F                     	;# 
  4659  028C                     	;# 
  4660  028C                     	;# 
  4661  028D                     	;# 
  4662  028D                     	;# 
  4663  028E                     	;# 
  4664  028F                     	;# 
  4665  0290                     	;# 
  4666  0290                     	;# 
  4667  0291                     	;# 
  4668  0292                     	;# 
  4669  0292                     	;# 
  4670  0293                     	;# 
  4671  0293                     	;# 
  4672  0294                     	;# 
  4673  0295                     	;# 
  4674  0296                     	;# 
  4675  0296                     	;# 
  4676  0297                     	;# 
  4677  0298                     	;# 
  4678  0298                     	;# 
  4679  0299                     	;# 
  4680  0299                     	;# 
  4681  029A                     	;# 
  4682  029B                     	;# 
  4683  029C                     	;# 
  4684  029C                     	;# 
  4685  029D                     	;# 
  4686  030C                     	;# 
  4687  030C                     	;# 
  4688  030D                     	;# 
  4689  030E                     	;# 
  4690  030F                     	;# 
  4691  0310                     	;# 
  4692  0310                     	;# 
  4693  0311                     	;# 
  4694  0312                     	;# 
  4695  0313                     	;# 
  4696  0314                     	;# 
  4697  0314                     	;# 
  4698  0315                     	;# 
  4699  0316                     	;# 
  4700  0317                     	;# 
  4701  0318                     	;# 
  4702  0318                     	;# 
  4703  0319                     	;# 
  4704  031A                     	;# 
  4705  031B                     	;# 
  4706  031C                     	;# 
  4707  031C                     	;# 
  4708  031D                     	;# 
  4709  031E                     	;# 
  4710  031F                     	;# 
  4711  038C                     	;# 
  4712  038C                     	;# 
  4713  038D                     	;# 
  4714  038E                     	;# 
  4715  0390                     	;# 
  4716  0390                     	;# 
  4717  0391                     	;# 
  4718  0392                     	;# 
  4719  040C                     	;# 
  4720  040D                     	;# 
  4721  040E                     	;# 
  4722  040F                     	;# 
  4723  0410                     	;# 
  4724  0411                     	;# 
  4725  0416                     	;# 
  4726  0416                     	;# 
  4727  0417                     	;# 
  4728  0418                     	;# 
  4729  0418                     	;# 
  4730  0419                     	;# 
  4731  041A                     	;# 
  4732  041A                     	;# 
  4733  041B                     	;# 
  4734  041C                     	;# 
  4735  041C                     	;# 
  4736  041D                     	;# 
  4737  041E                     	;# 
  4738  041F                     	;# 
  4739  048C                     	;# 
  4740  048C                     	;# 
  4741  048D                     	;# 
  4742  048E                     	;# 
  4743  048F                     	;# 
  4744  048F                     	;# 
  4745  0490                     	;# 
  4746  0491                     	;# 
  4747  0492                     	;# 
  4748  0492                     	;# 
  4749  0493                     	;# 
  4750  0494                     	;# 
  4751  0495                     	;# 
  4752  0495                     	;# 
  4753  0496                     	;# 
  4754  0497                     	;# 
  4755  0498                     	;# 
  4756  0499                     	;# 
  4757  049A                     	;# 
  4758  049B                     	;# 
  4759  049C                     	;# 
  4760  049D                     	;# 
  4761  050C                     	;# 
  4762  050C                     	;# 
  4763  050D                     	;# 
  4764  050E                     	;# 
  4765  050F                     	;# 
  4766  050F                     	;# 
  4767  0510                     	;# 
  4768  0511                     	;# 
  4769  0512                     	;# 
  4770  0512                     	;# 
  4771  0513                     	;# 
  4772  0514                     	;# 
  4773  0515                     	;# 
  4774  0515                     	;# 
  4775  0516                     	;# 
  4776  0517                     	;# 
  4777  0518                     	;# 
  4778  0519                     	;# 
  4779  051A                     	;# 
  4780  051B                     	;# 
  4781  051C                     	;# 
  4782  051D                     	;# 
  4783  058C                     	;# 
  4784  058C                     	;# 
  4785  058D                     	;# 
  4786  058E                     	;# 
  4787  058F                     	;# 
  4788  058F                     	;# 
  4789  0590                     	;# 
  4790  0591                     	;# 
  4791  0592                     	;# 
  4792  0593                     	;# 
  4793  060C                     	;# 
  4794  060D                     	;# 
  4795  060E                     	;# 
  4796  060F                     	;# 
  4797  0610                     	;# 
  4798  0611                     	;# 
  4799  0612                     	;# 
  4800  0613                     	;# 
  4801  0614                     	;# 
  4802  0616                     	;# 
  4803  0617                     	;# 
  4804  0618                     	;# 
  4805  0619                     	;# 
  4806  061A                     	;# 
  4807  061B                     	;# 
  4808  061C                     	;# 
  4809  061D                     	;# 
  4810  061E                     	;# 
  4811  068C                     	;# 
  4812  068D                     	;# 
  4813  068E                     	;# 
  4814  068F                     	;# 
  4815  0690                     	;# 
  4816  0691                     	;# 
  4817  0692                     	;# 
  4818  0693                     	;# 
  4819  0694                     	;# 
  4820  070C                     	;# 
  4821  070D                     	;# 
  4822  070E                     	;# 
  4823  070F                     	;# 
  4824  0710                     	;# 
  4825  0711                     	;# 
  4826  0712                     	;# 
  4827  0713                     	;# 
  4828  0714                     	;# 
  4829  0716                     	;# 
  4830  0717                     	;# 
  4831  0718                     	;# 
  4832  0719                     	;# 
  4833  071A                     	;# 
  4834  071B                     	;# 
  4835  071C                     	;# 
  4836  071D                     	;# 
  4837  071E                     	;# 
  4838  0796                     	;# 
  4839  0797                     	;# 
  4840  0798                     	;# 
  4841  0799                     	;# 
  4842  079A                     	;# 
  4843  079B                     	;# 
  4844  080C                     	;# 
  4845  080D                     	;# 
  4846  080E                     	;# 
  4847  080F                     	;# 
  4848  0810                     	;# 
  4849  0811                     	;# 
  4850  0812                     	;# 
  4851  0813                     	;# 
  4852  0814                     	;# 
  4853  081A                     	;# 
  4854  081B                     	;# 
  4855  081C                     	;# 
  4856  081D                     	;# 
  4857  081E                     	;# 
  4858  081F                     	;# 
  4859  088C                     	;# 
  4860  088D                     	;# 
  4861  088E                     	;# 
  4862  088F                     	;# 
  4863  0890                     	;# 
  4864  0891                     	;# 
  4865  0892                     	;# 
  4866  0893                     	;# 
  4867  0895                     	;# 
  4868  0896                     	;# 
  4869  0897                     	;# 
  4870  0898                     	;# 
  4871  0899                     	;# 
  4872  089A                     	;# 
  4873  089B                     	;# 
  4874  090C                     	;# 
  4875  090E                     	;# 
  4876  090F                     	;# 
  4877  091F                     	;# 
  4878  091F                     	;# 
  4879  098F                     	;# 
  4880  098F                     	;# 
  4881  0990                     	;# 
  4882  0991                     	;# 
  4883  0992                     	;# 
  4884  0993                     	;# 
  4885  0994                     	;# 
  4886  0995                     	;# 
  4887  0996                     	;# 
  4888  0997                     	;# 
  4889  0E0F                     	;# 
  4890  0E10                     	;# 
  4891  0E11                     	;# 
  4892  0E12                     	;# 
  4893  0E13                     	;# 
  4894  0E14                     	;# 
  4895  0E15                     	;# 
  4896  0E16                     	;# 
  4897  0E17                     	;# 
  4898  0E18                     	;# 
  4899  0E19                     	;# 
  4900  0E1A                     	;# 
  4901  0E1B                     	;# 
  4902  0E1C                     	;# 
  4903  0E1D                     	;# 
  4904  0E1E                     	;# 
  4905  0E1F                     	;# 
  4906  0E20                     	;# 
  4907  0E21                     	;# 
  4908  0E22                     	;# 
  4909  0E23                     	;# 
  4910  0E24                     	;# 
  4911  0E25                     	;# 
  4912  0E26                     	;# 
  4913  0E27                     	;# 
  4914  0E28                     	;# 
  4915  0E29                     	;# 
  4916  0E2A                     	;# 
  4917  0E2B                     	;# 
  4918  0E2C                     	;# 
  4919  0E2D                     	;# 
  4920  0E2E                     	;# 
  4921  0E2F                     	;# 
  4922  0E30                     	;# 
  4923  0E31                     	;# 
  4924  0E32                     	;# 
  4925  0E33                     	;# 
  4926  0E34                     	;# 
  4927  0E35                     	;# 
  4928  0E36                     	;# 
  4929  0E37                     	;# 
  4930  0E8F                     	;# 
  4931  0E90                     	;# 
  4932  0E91                     	;# 
  4933  0E92                     	;# 
  4934  0E93                     	;# 
  4935  0E94                     	;# 
  4936  0E95                     	;# 
  4937  0E96                     	;# 
  4938  0E97                     	;# 
  4939  0E9C                     	;# 
  4940  0E9D                     	;# 
  4941  0E9E                     	;# 
  4942  0EA1                     	;# 
  4943  0EA2                     	;# 
  4944  0EA3                     	;# 
  4945  0EA4                     	;# 
  4946  0EA5                     	;# 
  4947  0EA9                     	;# 
  4948  0EAA                     	;# 
  4949  0EAB                     	;# 
  4950  0EAC                     	;# 
  4951  0EB1                     	;# 
  4952  0EB2                     	;# 
  4953  0EB3                     	;# 
  4954  0EB8                     	;# 
  4955  0EB9                     	;# 
  4956  0EBA                     	;# 
  4957  0EBB                     	;# 
  4958  0EBC                     	;# 
  4959  0EBD                     	;# 
  4960  0EBE                     	;# 
  4961  0EC3                     	;# 
  4962  0EC5                     	;# 
  4963  0EC6                     	;# 
  4964  0EC7                     	;# 
  4965  0EC8                     	;# 
  4966  0EC9                     	;# 
  4967  0ECA                     	;# 
  4968  0ECB                     	;# 
  4969  0ECC                     	;# 
  4970  0F10                     	;# 
  4971  0F11                     	;# 
  4972  0F12                     	;# 
  4973  0F13                     	;# 
  4974  0F14                     	;# 
  4975  0F15                     	;# 
  4976  0F16                     	;# 
  4977  0F17                     	;# 
  4978  0F18                     	;# 
  4979  0F19                     	;# 
  4980  0F1A                     	;# 
  4981  0F1B                     	;# 
  4982  0F1C                     	;# 
  4983  0F1D                     	;# 
  4984  0F1E                     	;# 
  4985  0F1F                     	;# 
  4986  0F20                     	;# 
  4987  0F21                     	;# 
  4988  0F22                     	;# 
  4989  0F23                     	;# 
  4990  0F24                     	;# 
  4991  0F25                     	;# 
  4992  0F26                     	;# 
  4993  0F27                     	;# 
  4994  0F28                     	;# 
  4995  0F29                     	;# 
  4996  0F2A                     	;# 
  4997  0F2B                     	;# 
  4998  0F2C                     	;# 
  4999  0F2D                     	;# 
  5000  0F2E                     	;# 
  5001  0F2F                     	;# 
  5002  0F30                     	;# 
  5003  0F31                     	;# 
  5004  0F32                     	;# 
  5005  0F38                     	;# 
  5006  0F39                     	;# 
  5007  0F3A                     	;# 
  5008  0F3B                     	;# 
  5009  0F3C                     	;# 
  5010  0F3D                     	;# 
  5011  0F3E                     	;# 
  5012  0F3F                     	;# 
  5013  0F40                     	;# 
  5014  0F41                     	;# 
  5015  0F43                     	;# 
  5016  0F44                     	;# 
  5017  0F45                     	;# 
  5018  0F46                     	;# 
  5019  0F47                     	;# 
  5020  0F48                     	;# 
  5021  0F49                     	;# 
  5022  0F4A                     	;# 
  5023  0F4B                     	;# 
  5024  0F4C                     	;# 
  5025  0F4E                     	;# 
  5026  0F4F                     	;# 
  5027  0F50                     	;# 
  5028  0F51                     	;# 
  5029  0F52                     	;# 
  5030  0F53                     	;# 
  5031  0F54                     	;# 
  5032  0F55                     	;# 
  5033  0F56                     	;# 
  5034  0F57                     	;# 
  5035  0F59                     	;# 
  5036  0F5A                     	;# 
  5037  0F5B                     	;# 
  5038  0F5C                     	;# 
  5039  0F5D                     	;# 
  5040  0F61                     	;# 
  5041  0F62                     	;# 
  5042  0F64                     	;# 
  5043  0F65                     	;# 
  5044  0F66                     	;# 
  5045  0F67                     	;# 
  5046  0F68                     	;# 
  5047  0F69                     	;# 
  5048  0F6A                     	;# 
  5049  0F6B                     	;# 
  5050  0F6C                     	;# 
  5051  0F6D                     	;# 
  5052  0FE4                     	;# 
  5053  0FE5                     	;# 
  5054  0FE6                     	;# 
  5055  0FE7                     	;# 
  5056  0FE8                     	;# 
  5057  0FE9                     	;# 
  5058  0FEA                     	;# 
  5059  0FEB                     	;# 
  5060  0FED                     	;# 
  5061  0FEE                     	;# 
  5062  0FEF                     	;# 
  5063  0000                     	;# 
  5064  0001                     	;# 
  5065  0002                     	;# 
  5066  0003                     	;# 
  5067  0004                     	;# 
  5068  0005                     	;# 
  5069  0006                     	;# 
  5070  0007                     	;# 
  5071  0008                     	;# 
  5072  0009                     	;# 
  5073  000A                     	;# 
  5074  000B                     	;# 
  5075  000C                     	;# 
  5076  000D                     	;# 
  5077  000E                     	;# 
  5078  000F                     	;# 
  5079  0010                     	;# 
  5080  0011                     	;# 
  5081  0012                     	;# 
  5082  0013                     	;# 
  5083  0014                     	;# 
  5084  0015                     	;# 
  5085  0016                     	;# 
  5086  0017                     	;# 
  5087  0018                     	;# 
  5088  0019                     	;# 
  5089  001A                     	;# 
  5090  001C                     	;# 
  5091  001C                     	;# 
  5092  001D                     	;# 
  5093  001D                     	;# 
  5094  001E                     	;# 
  5095  001F                     	;# 
  5096  008C                     	;# 
  5097  008C                     	;# 
  5098  008D                     	;# 
  5099  008E                     	;# 
  5100  008E                     	;# 
  5101  008F                     	;# 
  5102  0090                     	;# 
  5103  0090                     	;# 
  5104  0091                     	;# 
  5105  0093                     	;# 
  5106  0094                     	;# 
  5107  0095                     	;# 
  5108  0096                     	;# 
  5109  0097                     	;# 
  5110  0098                     	;# 
  5111  0099                     	;# 
  5112  009A                     	;# 
  5113  009B                     	;# 
  5114  009C                     	;# 
  5115  009D                     	;# 
  5116  009E                     	;# 
  5117  010C                     	;# 
  5118  010D                     	;# 
  5119  010E                     	;# 
  5120  010E                     	;# 
  5121  010F                     	;# 
  5122  0110                     	;# 
  5123  0110                     	;# 
  5124  0111                     	;# 
  5125  0112                     	;# 
  5126  0112                     	;# 
  5127  0113                     	;# 
  5128  0114                     	;# 
  5129  0114                     	;# 
  5130  0115                     	;# 
  5131  0116                     	;# 
  5132  0116                     	;# 
  5133  0117                     	;# 
  5134  0119                     	;# 
  5135  0119                     	;# 
  5136  0119                     	;# 
  5137  011A                     	;# 
  5138  011A                     	;# 
  5139  011A                     	;# 
  5140  011B                     	;# 
  5141  011B                     	;# 
  5142  011B                     	;# 
  5143  011B                     	;# 
  5144  011B                     	;# 
  5145  011C                     	;# 
  5146  011C                     	;# 
  5147  011C                     	;# 
  5148  011D                     	;# 
  5149  011D                     	;# 
  5150  011D                     	;# 
  5151  011E                     	;# 
  5152  011E                     	;# 
  5153  011E                     	;# 
  5154  011F                     	;# 
  5155  011F                     	;# 
  5156  011F                     	;# 
  5157  011F                     	;# 
  5158  011F                     	;# 
  5159  018C                     	;# 
  5160  018D                     	;# 
  5161  018E                     	;# 
  5162  018F                     	;# 
  5163  0190                     	;# 
  5164  0191                     	;# 
  5165  0192                     	;# 
  5166  0196                     	;# 
  5167  0197                     	;# 
  5168  0198                     	;# 
  5169  0199                     	;# 
  5170  019A                     	;# 
  5171  019B                     	;# 
  5172  019C                     	;# 
  5173  020C                     	;# 
  5174  020C                     	;# 
  5175  020D                     	;# 
  5176  020E                     	;# 
  5177  020F                     	;# 
  5178  020F                     	;# 
  5179  0210                     	;# 
  5180  0210                     	;# 
  5181  0211                     	;# 
  5182  0211                     	;# 
  5183  0212                     	;# 
  5184  0212                     	;# 
  5185  0213                     	;# 
  5186  0214                     	;# 
  5187  0215                     	;# 
  5188  0215                     	;# 
  5189  0216                     	;# 
  5190  0216                     	;# 
  5191  0217                     	;# 
  5192  0217                     	;# 
  5193  0218                     	;# 
  5194  0218                     	;# 
  5195  0219                     	;# 
  5196  021A                     	;# 
  5197  021B                     	;# 
  5198  021B                     	;# 
  5199  021C                     	;# 
  5200  021C                     	;# 
  5201  021D                     	;# 
  5202  021D                     	;# 
  5203  021E                     	;# 
  5204  021F                     	;# 
  5205  028C                     	;# 
  5206  028C                     	;# 
  5207  028D                     	;# 
  5208  028D                     	;# 
  5209  028E                     	;# 
  5210  028F                     	;# 
  5211  0290                     	;# 
  5212  0290                     	;# 
  5213  0291                     	;# 
  5214  0292                     	;# 
  5215  0292                     	;# 
  5216  0293                     	;# 
  5217  0293                     	;# 
  5218  0294                     	;# 
  5219  0295                     	;# 
  5220  0296                     	;# 
  5221  0296                     	;# 
  5222  0297                     	;# 
  5223  0298                     	;# 
  5224  0298                     	;# 
  5225  0299                     	;# 
  5226  0299                     	;# 
  5227  029A                     	;# 
  5228  029B                     	;# 
  5229  029C                     	;# 
  5230  029C                     	;# 
  5231  029D                     	;# 
  5232  030C                     	;# 
  5233  030C                     	;# 
  5234  030D                     	;# 
  5235  030E                     	;# 
  5236  030F                     	;# 
  5237  0310                     	;# 
  5238  0310                     	;# 
  5239  0311                     	;# 
  5240  0312                     	;# 
  5241  0313                     	;# 
  5242  0314                     	;# 
  5243  0314                     	;# 
  5244  0315                     	;# 
  5245  0316                     	;# 
  5246  0317                     	;# 
  5247  0318                     	;# 
  5248  0318                     	;# 
  5249  0319                     	;# 
  5250  031A                     	;# 
  5251  031B                     	;# 
  5252  031C                     	;# 
  5253  031C                     	;# 
  5254  031D                     	;# 
  5255  031E                     	;# 
  5256  031F                     	;# 
  5257  038C                     	;# 
  5258  038C                     	;# 
  5259  038D                     	;# 
  5260  038E                     	;# 
  5261  0390                     	;# 
  5262  0390                     	;# 
  5263  0391                     	;# 
  5264  0392                     	;# 
  5265  040C                     	;# 
  5266  040D                     	;# 
  5267  040E                     	;# 
  5268  040F                     	;# 
  5269  0410                     	;# 
  5270  0411                     	;# 
  5271  0416                     	;# 
  5272  0416                     	;# 
  5273  0417                     	;# 
  5274  0418                     	;# 
  5275  0418                     	;# 
  5276  0419                     	;# 
  5277  041A                     	;# 
  5278  041A                     	;# 
  5279  041B                     	;# 
  5280  041C                     	;# 
  5281  041C                     	;# 
  5282  041D                     	;# 
  5283  041E                     	;# 
  5284  041F                     	;# 
  5285  048C                     	;# 
  5286  048C                     	;# 
  5287  048D                     	;# 
  5288  048E                     	;# 
  5289  048F                     	;# 
  5290  048F                     	;# 
  5291  0490                     	;# 
  5292  0491                     	;# 
  5293  0492                     	;# 
  5294  0492                     	;# 
  5295  0493                     	;# 
  5296  0494                     	;# 
  5297  0495                     	;# 
  5298  0495                     	;# 
  5299  0496                     	;# 
  5300  0497                     	;# 
  5301  0498                     	;# 
  5302  0499                     	;# 
  5303  049A                     	;# 
  5304  049B                     	;# 
  5305  049C                     	;# 
  5306  049D                     	;# 
  5307  050C                     	;# 
  5308  050C                     	;# 
  5309  050D                     	;# 
  5310  050E                     	;# 
  5311  050F                     	;# 
  5312  050F                     	;# 
  5313  0510                     	;# 
  5314  0511                     	;# 
  5315  0512                     	;# 
  5316  0512                     	;# 
  5317  0513                     	;# 
  5318  0514                     	;# 
  5319  0515                     	;# 
  5320  0515                     	;# 
  5321  0516                     	;# 
  5322  0517                     	;# 
  5323  0518                     	;# 
  5324  0519                     	;# 
  5325  051A                     	;# 
  5326  051B                     	;# 
  5327  051C                     	;# 
  5328  051D                     	;# 
  5329  058C                     	;# 
  5330  058C                     	;# 
  5331  058D                     	;# 
  5332  058E                     	;# 
  5333  058F                     	;# 
  5334  058F                     	;# 
  5335  0590                     	;# 
  5336  0591                     	;# 
  5337  0592                     	;# 
  5338  0593                     	;# 
  5339  060C                     	;# 
  5340  060D                     	;# 
  5341  060E                     	;# 
  5342  060F                     	;# 
  5343  0610                     	;# 
  5344  0611                     	;# 
  5345  0612                     	;# 
  5346  0613                     	;# 
  5347  0614                     	;# 
  5348  0616                     	;# 
  5349  0617                     	;# 
  5350  0618                     	;# 
  5351  0619                     	;# 
  5352  061A                     	;# 
  5353  061B                     	;# 
  5354  061C                     	;# 
  5355  061D                     	;# 
  5356  061E                     	;# 
  5357  068C                     	;# 
  5358  068D                     	;# 
  5359  068E                     	;# 
  5360  068F                     	;# 
  5361  0690                     	;# 
  5362  0691                     	;# 
  5363  0692                     	;# 
  5364  0693                     	;# 
  5365  0694                     	;# 
  5366  070C                     	;# 
  5367  070D                     	;# 
  5368  070E                     	;# 
  5369  070F                     	;# 
  5370  0710                     	;# 
  5371  0711                     	;# 
  5372  0712                     	;# 
  5373  0713                     	;# 
  5374  0714                     	;# 
  5375  0716                     	;# 
  5376  0717                     	;# 
  5377  0718                     	;# 
  5378  0719                     	;# 
  5379  071A                     	;# 
  5380  071B                     	;# 
  5381  071C                     	;# 
  5382  071D                     	;# 
  5383  071E                     	;# 
  5384  0796                     	;# 
  5385  0797                     	;# 
  5386  0798                     	;# 
  5387  0799                     	;# 
  5388  079A                     	;# 
  5389  079B                     	;# 
  5390  080C                     	;# 
  5391  080D                     	;# 
  5392  080E                     	;# 
  5393  080F                     	;# 
  5394  0810                     	;# 
  5395  0811                     	;# 
  5396  0812                     	;# 
  5397  0813                     	;# 
  5398  0814                     	;# 
  5399  081A                     	;# 
  5400  081B                     	;# 
  5401  081C                     	;# 
  5402  081D                     	;# 
  5403  081E                     	;# 
  5404  081F                     	;# 
  5405  088C                     	;# 
  5406  088D                     	;# 
  5407  088E                     	;# 
  5408  088F                     	;# 
  5409  0890                     	;# 
  5410  0891                     	;# 
  5411  0892                     	;# 
  5412  0893                     	;# 
  5413  0895                     	;# 
  5414  0896                     	;# 
  5415  0897                     	;# 
  5416  0898                     	;# 
  5417  0899                     	;# 
  5418  089A                     	;# 
  5419  089B                     	;# 
  5420  090C                     	;# 
  5421  090E                     	;# 
  5422  090F                     	;# 
  5423  091F                     	;# 
  5424  091F                     	;# 
  5425  098F                     	;# 
  5426  098F                     	;# 
  5427  0990                     	;# 
  5428  0991                     	;# 
  5429  0992                     	;# 
  5430  0993                     	;# 
  5431  0994                     	;# 
  5432  0995                     	;# 
  5433  0996                     	;# 
  5434  0997                     	;# 
  5435  0E0F                     	;# 
  5436  0E10                     	;# 
  5437  0E11                     	;# 
  5438  0E12                     	;# 
  5439  0E13                     	;# 
  5440  0E14                     	;# 
  5441  0E15                     	;# 
  5442  0E16                     	;# 
  5443  0E17                     	;# 
  5444  0E18                     	;# 
  5445  0E19                     	;# 
  5446  0E1A                     	;# 
  5447  0E1B                     	;# 
  5448  0E1C                     	;# 
  5449  0E1D                     	;# 
  5450  0E1E                     	;# 
  5451  0E1F                     	;# 
  5452  0E20                     	;# 
  5453  0E21                     	;# 
  5454  0E22                     	;# 
  5455  0E23                     	;# 
  5456  0E24                     	;# 
  5457  0E25                     	;# 
  5458  0E26                     	;# 
  5459  0E27                     	;# 
  5460  0E28                     	;# 
  5461  0E29                     	;# 
  5462  0E2A                     	;# 
  5463  0E2B                     	;# 
  5464  0E2C                     	;# 
  5465  0E2D                     	;# 
  5466  0E2E                     	;# 
  5467  0E2F                     	;# 
  5468  0E30                     	;# 
  5469  0E31                     	;# 
  5470  0E32                     	;# 
  5471  0E33                     	;# 
  5472  0E34                     	;# 
  5473  0E35                     	;# 
  5474  0E36                     	;# 
  5475  0E37                     	;# 
  5476  0E8F                     	;# 
  5477  0E90                     	;# 
  5478  0E91                     	;# 
  5479  0E92                     	;# 
  5480  0E93                     	;# 
  5481  0E94                     	;# 
  5482  0E95                     	;# 
  5483  0E96                     	;# 
  5484  0E97                     	;# 
  5485  0E9C                     	;# 
  5486  0E9D                     	;# 
  5487  0E9E                     	;# 
  5488  0EA1                     	;# 
  5489  0EA2                     	;# 
  5490  0EA3                     	;# 
  5491  0EA4                     	;# 
  5492  0EA5                     	;# 
  5493  0EA9                     	;# 
  5494  0EAA                     	;# 
  5495  0EAB                     	;# 
  5496  0EAC                     	;# 
  5497  0EB1                     	;# 
  5498  0EB2                     	;# 
  5499  0EB3                     	;# 
  5500  0EB8                     	;# 
  5501  0EB9                     	;# 
  5502  0EBA                     	;# 
  5503  0EBB                     	;# 
  5504  0EBC                     	;# 
  5505  0EBD                     	;# 
  5506  0EBE                     	;# 
  5507  0EC3                     	;# 
  5508  0EC5                     	;# 
  5509  0EC6                     	;# 
  5510  0EC7                     	;# 
  5511  0EC8                     	;# 
  5512  0EC9                     	;# 
  5513  0ECA                     	;# 
  5514  0ECB                     	;# 
  5515  0ECC                     	;# 
  5516  0F10                     	;# 
  5517  0F11                     	;# 
  5518  0F12                     	;# 
  5519  0F13                     	;# 
  5520  0F14                     	;# 
  5521  0F15                     	;# 
  5522  0F16                     	;# 
  5523  0F17                     	;# 
  5524  0F18                     	;# 
  5525  0F19                     	;# 
  5526  0F1A                     	;# 
  5527  0F1B                     	;# 
  5528  0F1C                     	;# 
  5529  0F1D                     	;# 
  5530  0F1E                     	;# 
  5531  0F1F                     	;# 
  5532  0F20                     	;# 
  5533  0F21                     	;# 
  5534  0F22                     	;# 
  5535  0F23                     	;# 
  5536  0F24                     	;# 
  5537  0F25                     	;# 
  5538  0F26                     	;# 
  5539  0F27                     	;# 
  5540  0F28                     	;# 
  5541  0F29                     	;# 
  5542  0F2A                     	;# 
  5543  0F2B                     	;# 
  5544  0F2C                     	;# 
  5545  0F2D                     	;# 
  5546  0F2E                     	;# 
  5547  0F2F                     	;# 
  5548  0F30                     	;# 
  5549  0F31                     	;# 
  5550  0F32                     	;# 
  5551  0F38                     	;# 
  5552  0F39                     	;# 
  5553  0F3A                     	;# 
  5554  0F3B                     	;# 
  5555  0F3C                     	;# 
  5556  0F3D                     	;# 
  5557  0F3E                     	;# 
  5558  0F3F                     	;# 
  5559  0F40                     	;# 
  5560  0F41                     	;# 
  5561  0F43                     	;# 
  5562  0F44                     	;# 
  5563  0F45                     	;# 
  5564  0F46                     	;# 
  5565  0F47                     	;# 
  5566  0F48                     	;# 
  5567  0F49                     	;# 
  5568  0F4A                     	;# 
  5569  0F4B                     	;# 
  5570  0F4C                     	;# 
  5571  0F4E                     	;# 
  5572  0F4F                     	;# 
  5573  0F50                     	;# 
  5574  0F51                     	;# 
  5575  0F52                     	;# 
  5576  0F53                     	;# 
  5577  0F54                     	;# 
  5578  0F55                     	;# 
  5579  0F56                     	;# 
  5580  0F57                     	;# 
  5581  0F59                     	;# 
  5582  0F5A                     	;# 
  5583  0F5B                     	;# 
  5584  0F5C                     	;# 
  5585  0F5D                     	;# 
  5586  0F61                     	;# 
  5587  0F62                     	;# 
  5588  0F64                     	;# 
  5589  0F65                     	;# 
  5590  0F66                     	;# 
  5591  0F67                     	;# 
  5592  0F68                     	;# 
  5593  0F69                     	;# 
  5594  0F6A                     	;# 
  5595  0F6B                     	;# 
  5596  0F6C                     	;# 
  5597  0F6D                     	;# 
  5598  0FE4                     	;# 
  5599  0FE5                     	;# 
  5600  0FE6                     	;# 
  5601  0FE7                     	;# 
  5602  0FE8                     	;# 
  5603  0FE9                     	;# 
  5604  0FEA                     	;# 
  5605  0FEB                     	;# 
  5606  0FED                     	;# 
  5607  0FEE                     	;# 
  5608  0FEF                     	;# 
  5609  0000                     	;# 
  5610  0001                     	;# 
  5611  0002                     	;# 
  5612  0003                     	;# 
  5613  0004                     	;# 
  5614  0005                     	;# 
  5615  0006                     	;# 
  5616  0007                     	;# 
  5617  0008                     	;# 
  5618  0009                     	;# 
  5619  000A                     	;# 
  5620  000B                     	;# 
  5621  000C                     	;# 
  5622  000D                     	;# 
  5623  000E                     	;# 
  5624  000F                     	;# 
  5625  0010                     	;# 
  5626  0011                     	;# 
  5627  0012                     	;# 
  5628  0013                     	;# 
  5629  0014                     	;# 
  5630  0015                     	;# 
  5631  0016                     	;# 
  5632  0017                     	;# 
  5633  0018                     	;# 
  5634  0019                     	;# 
  5635  001A                     	;# 
  5636  001C                     	;# 
  5637  001C                     	;# 
  5638  001D                     	;# 
  5639  001D                     	;# 
  5640  001E                     	;# 
  5641  001F                     	;# 
  5642  008C                     	;# 
  5643  008C                     	;# 
  5644  008D                     	;# 
  5645  008E                     	;# 
  5646  008E                     	;# 
  5647  008F                     	;# 
  5648  0090                     	;# 
  5649  0090                     	;# 
  5650  0091                     	;# 
  5651  0093                     	;# 
  5652  0094                     	;# 
  5653  0095                     	;# 
  5654  0096                     	;# 
  5655  0097                     	;# 
  5656  0098                     	;# 
  5657  0099                     	;# 
  5658  009A                     	;# 
  5659  009B                     	;# 
  5660  009C                     	;# 
  5661  009D                     	;# 
  5662  009E                     	;# 
  5663  010C                     	;# 
  5664  010D                     	;# 
  5665  010E                     	;# 
  5666  010E                     	;# 
  5667  010F                     	;# 
  5668  0110                     	;# 
  5669  0110                     	;# 
  5670  0111                     	;# 
  5671  0112                     	;# 
  5672  0112                     	;# 
  5673  0113                     	;# 
  5674  0114                     	;# 
  5675  0114                     	;# 
  5676  0115                     	;# 
  5677  0116                     	;# 
  5678  0116                     	;# 
  5679  0117                     	;# 
  5680  0119                     	;# 
  5681  0119                     	;# 
  5682  0119                     	;# 
  5683  011A                     	;# 
  5684  011A                     	;# 
  5685  011A                     	;# 
  5686  011B                     	;# 
  5687  011B                     	;# 
  5688  011B                     	;# 
  5689  011B                     	;# 
  5690  011B                     	;# 
  5691  011C                     	;# 
  5692  011C                     	;# 
  5693  011C                     	;# 
  5694  011D                     	;# 
  5695  011D                     	;# 
  5696  011D                     	;# 
  5697  011E                     	;# 
  5698  011E                     	;# 
  5699  011E                     	;# 
  5700  011F                     	;# 
  5701  011F                     	;# 
  5702  011F                     	;# 
  5703  011F                     	;# 
  5704  011F                     	;# 
  5705  018C                     	;# 
  5706  018D                     	;# 
  5707  018E                     	;# 
  5708  018F                     	;# 
  5709  0190                     	;# 
  5710  0191                     	;# 
  5711  0192                     	;# 
  5712  0196                     	;# 
  5713  0197                     	;# 
  5714  0198                     	;# 
  5715  0199                     	;# 
  5716  019A                     	;# 
  5717  019B                     	;# 
  5718  019C                     	;# 
  5719  020C                     	;# 
  5720  020C                     	;# 
  5721  020D                     	;# 
  5722  020E                     	;# 
  5723  020F                     	;# 
  5724  020F                     	;# 
  5725  0210                     	;# 
  5726  0210                     	;# 
  5727  0211                     	;# 
  5728  0211                     	;# 
  5729  0212                     	;# 
  5730  0212                     	;# 
  5731  0213                     	;# 
  5732  0214                     	;# 
  5733  0215                     	;# 
  5734  0215                     	;# 
  5735  0216                     	;# 
  5736  0216                     	;# 
  5737  0217                     	;# 
  5738  0217                     	;# 
  5739  0218                     	;# 
  5740  0218                     	;# 
  5741  0219                     	;# 
  5742  021A                     	;# 
  5743  021B                     	;# 
  5744  021B                     	;# 
  5745  021C                     	;# 
  5746  021C                     	;# 
  5747  021D                     	;# 
  5748  021D                     	;# 
  5749  021E                     	;# 
  5750  021F                     	;# 
  5751  028C                     	;# 
  5752  028C                     	;# 
  5753  028D                     	;# 
  5754  028D                     	;# 
  5755  028E                     	;# 
  5756  028F                     	;# 
  5757  0290                     	;# 
  5758  0290                     	;# 
  5759  0291                     	;# 
  5760  0292                     	;# 
  5761  0292                     	;# 
  5762  0293                     	;# 
  5763  0293                     	;# 
  5764  0294                     	;# 
  5765  0295                     	;# 
  5766  0296                     	;# 
  5767  0296                     	;# 
  5768  0297                     	;# 
  5769  0298                     	;# 
  5770  0298                     	;# 
  5771  0299                     	;# 
  5772  0299                     	;# 
  5773  029A                     	;# 
  5774  029B                     	;# 
  5775  029C                     	;# 
  5776  029C                     	;# 
  5777  029D                     	;# 
  5778  030C                     	;# 
  5779  030C                     	;# 
  5780  030D                     	;# 
  5781  030E                     	;# 
  5782  030F                     	;# 
  5783  0310                     	;# 
  5784  0310                     	;# 
  5785  0311                     	;# 
  5786  0312                     	;# 
  5787  0313                     	;# 
  5788  0314                     	;# 
  5789  0314                     	;# 
  5790  0315                     	;# 
  5791  0316                     	;# 
  5792  0317                     	;# 
  5793  0318                     	;# 
  5794  0318                     	;# 
  5795  0319                     	;# 
  5796  031A                     	;# 
  5797  031B                     	;# 
  5798  031C                     	;# 
  5799  031C                     	;# 
  5800  031D                     	;# 
  5801  031E                     	;# 
  5802  031F                     	;# 
  5803  038C                     	;# 
  5804  038C                     	;# 
  5805  038D                     	;# 
  5806  038E                     	;# 
  5807  0390                     	;# 
  5808  0390                     	;# 
  5809  0391                     	;# 
  5810  0392                     	;# 
  5811  040C                     	;# 
  5812  040D                     	;# 
  5813  040E                     	;# 
  5814  040F                     	;# 
  5815  0410                     	;# 
  5816  0411                     	;# 
  5817  0416                     	;# 
  5818  0416                     	;# 
  5819  0417                     	;# 
  5820  0418                     	;# 
  5821  0418                     	;# 
  5822  0419                     	;# 
  5823  041A                     	;# 
  5824  041A                     	;# 
  5825  041B                     	;# 
  5826  041C                     	;# 
  5827  041C                     	;# 
  5828  041D                     	;# 
  5829  041E                     	;# 
  5830  041F                     	;# 
  5831  048C                     	;# 
  5832  048C                     	;# 
  5833  048D                     	;# 
  5834  048E                     	;# 
  5835  048F                     	;# 
  5836  048F                     	;# 
  5837  0490                     	;# 
  5838  0491                     	;# 
  5839  0492                     	;# 
  5840  0492                     	;# 
  5841  0493                     	;# 
  5842  0494                     	;# 
  5843  0495                     	;# 
  5844  0495                     	;# 
  5845  0496                     	;# 
  5846  0497                     	;# 
  5847  0498                     	;# 
  5848  0499                     	;# 
  5849  049A                     	;# 
  5850  049B                     	;# 
  5851  049C                     	;# 
  5852  049D                     	;# 
  5853  050C                     	;# 
  5854  050C                     	;# 
  5855  050D                     	;# 
  5856  050E                     	;# 
  5857  050F                     	;# 
  5858  050F                     	;# 
  5859  0510                     	;# 
  5860  0511                     	;# 
  5861  0512                     	;# 
  5862  0512                     	;# 
  5863  0513                     	;# 
  5864  0514                     	;# 
  5865  0515                     	;# 
  5866  0515                     	;# 
  5867  0516                     	;# 
  5868  0517                     	;# 
  5869  0518                     	;# 
  5870  0519                     	;# 
  5871  051A                     	;# 
  5872  051B                     	;# 
  5873  051C                     	;# 
  5874  051D                     	;# 
  5875  058C                     	;# 
  5876  058C                     	;# 
  5877  058D                     	;# 
  5878  058E                     	;# 
  5879  058F                     	;# 
  5880  058F                     	;# 
  5881  0590                     	;# 
  5882  0591                     	;# 
  5883  0592                     	;# 
  5884  0593                     	;# 
  5885  060C                     	;# 
  5886  060D                     	;# 
  5887  060E                     	;# 
  5888  060F                     	;# 
  5889  0610                     	;# 
  5890  0611                     	;# 
  5891  0612                     	;# 
  5892  0613                     	;# 
  5893  0614                     	;# 
  5894  0616                     	;# 
  5895  0617                     	;# 
  5896  0618                     	;# 
  5897  0619                     	;# 
  5898  061A                     	;# 
  5899  061B                     	;# 
  5900  061C                     	;# 
  5901  061D                     	;# 
  5902  061E                     	;# 
  5903  068C                     	;# 
  5904  068D                     	;# 
  5905  068E                     	;# 
  5906  068F                     	;# 
  5907  0690                     	;# 
  5908  0691                     	;# 
  5909  0692                     	;# 
  5910  0693                     	;# 
  5911  0694                     	;# 
  5912  070C                     	;# 
  5913  070D                     	;# 
  5914  070E                     	;# 
  5915  070F                     	;# 
  5916  0710                     	;# 
  5917  0711                     	;# 
  5918  0712                     	;# 
  5919  0713                     	;# 
  5920  0714                     	;# 
  5921  0716                     	;# 
  5922  0717                     	;# 
  5923  0718                     	;# 
  5924  0719                     	;# 
  5925  071A                     	;# 
  5926  071B                     	;# 
  5927  071C                     	;# 
  5928  071D                     	;# 
  5929  071E                     	;# 
  5930  0796                     	;# 
  5931  0797                     	;# 
  5932  0798                     	;# 
  5933  0799                     	;# 
  5934  079A                     	;# 
  5935  079B                     	;# 
  5936  080C                     	;# 
  5937  080D                     	;# 
  5938  080E                     	;# 
  5939  080F                     	;# 
  5940  0810                     	;# 
  5941  0811                     	;# 
  5942  0812                     	;# 
  5943  0813                     	;# 
  5944  0814                     	;# 
  5945  081A                     	;# 
  5946  081B                     	;# 
  5947  081C                     	;# 
  5948  081D                     	;# 
  5949  081E                     	;# 
  5950  081F                     	;# 
  5951  088C                     	;# 
  5952  088D                     	;# 
  5953  088E                     	;# 
  5954  088F                     	;# 
  5955  0890                     	;# 
  5956  0891                     	;# 
  5957  0892                     	;# 
  5958  0893                     	;# 
  5959  0895                     	;# 
  5960  0896                     	;# 
  5961  0897                     	;# 
  5962  0898                     	;# 
  5963  0899                     	;# 
  5964  089A                     	;# 
  5965  089B                     	;# 
  5966  090C                     	;# 
  5967  090E                     	;# 
  5968  090F                     	;# 
  5969  091F                     	;# 
  5970  091F                     	;# 
  5971  098F                     	;# 
  5972  098F                     	;# 
  5973  0990                     	;# 
  5974  0991                     	;# 
  5975  0992                     	;# 
  5976  0993                     	;# 
  5977  0994                     	;# 
  5978  0995                     	;# 
  5979  0996                     	;# 
  5980  0997                     	;# 
  5981  0E0F                     	;# 
  5982  0E10                     	;# 
  5983  0E11                     	;# 
  5984  0E12                     	;# 
  5985  0E13                     	;# 
  5986  0E14                     	;# 
  5987  0E15                     	;# 
  5988  0E16                     	;# 
  5989  0E17                     	;# 
  5990  0E18                     	;# 
  5991  0E19                     	;# 
  5992  0E1A                     	;# 
  5993  0E1B                     	;# 
  5994  0E1C                     	;# 
  5995  0E1D                     	;# 
  5996  0E1E                     	;# 
  5997  0E1F                     	;# 
  5998  0E20                     	;# 
  5999  0E21                     	;# 
  6000  0E22                     	;# 
  6001  0E23                     	;# 
  6002  0E24                     	;# 
  6003  0E25                     	;# 
  6004  0E26                     	;# 
  6005  0E27                     	;# 
  6006  0E28                     	;# 
  6007  0E29                     	;# 
  6008  0E2A                     	;# 
  6009  0E2B                     	;# 
  6010  0E2C                     	;# 
  6011  0E2D                     	;# 
  6012  0E2E                     	;# 
  6013  0E2F                     	;# 
  6014  0E30                     	;# 
  6015  0E31                     	;# 
  6016  0E32                     	;# 
  6017  0E33                     	;# 
  6018  0E34                     	;# 
  6019  0E35                     	;# 
  6020  0E36                     	;# 
  6021  0E37                     	;# 
  6022  0E8F                     	;# 
  6023  0E90                     	;# 
  6024  0E91                     	;# 
  6025  0E92                     	;# 
  6026  0E93                     	;# 
  6027  0E94                     	;# 
  6028  0E95                     	;# 
  6029  0E96                     	;# 
  6030  0E97                     	;# 
  6031  0E9C                     	;# 
  6032  0E9D                     	;# 
  6033  0E9E                     	;# 
  6034  0EA1                     	;# 
  6035  0EA2                     	;# 
  6036  0EA3                     	;# 
  6037  0EA4                     	;# 
  6038  0EA5                     	;# 
  6039  0EA9                     	;# 
  6040  0EAA                     	;# 
  6041  0EAB                     	;# 
  6042  0EAC                     	;# 
  6043  0EB1                     	;# 
  6044  0EB2                     	;# 
  6045  0EB3                     	;# 
  6046  0EB8                     	;# 
  6047  0EB9                     	;# 
  6048  0EBA                     	;# 
  6049  0EBB                     	;# 
  6050  0EBC                     	;# 
  6051  0EBD                     	;# 
  6052  0EBE                     	;# 
  6053  0EC3                     	;# 
  6054  0EC5                     	;# 
  6055  0EC6                     	;# 
  6056  0EC7                     	;# 
  6057  0EC8                     	;# 
  6058  0EC9                     	;# 
  6059  0ECA                     	;# 
  6060  0ECB                     	;# 
  6061  0ECC                     	;# 
  6062  0F10                     	;# 
  6063  0F11                     	;# 
  6064  0F12                     	;# 
  6065  0F13                     	;# 
  6066  0F14                     	;# 
  6067  0F15                     	;# 
  6068  0F16                     	;# 
  6069  0F17                     	;# 
  6070  0F18                     	;# 
  6071  0F19                     	;# 
  6072  0F1A                     	;# 
  6073  0F1B                     	;# 
  6074  0F1C                     	;# 
  6075  0F1D                     	;# 
  6076  0F1E                     	;# 
  6077  0F1F                     	;# 
  6078  0F20                     	;# 
  6079  0F21                     	;# 
  6080  0F22                     	;# 
  6081  0F23                     	;# 
  6082  0F24                     	;# 
  6083  0F25                     	;# 
  6084  0F26                     	;# 
  6085  0F27                     	;# 
  6086  0F28                     	;# 
  6087  0F29                     	;# 
  6088  0F2A                     	;# 
  6089  0F2B                     	;# 
  6090  0F2C                     	;# 
  6091  0F2D                     	;# 
  6092  0F2E                     	;# 
  6093  0F2F                     	;# 
  6094  0F30                     	;# 
  6095  0F31                     	;# 
  6096  0F32                     	;# 
  6097  0F38                     	;# 
  6098  0F39                     	;# 
  6099  0F3A                     	;# 
  6100  0F3B                     	;# 
  6101  0F3C                     	;# 
  6102  0F3D                     	;# 
  6103  0F3E                     	;# 
  6104  0F3F                     	;# 
  6105  0F40                     	;# 
  6106  0F41                     	;# 
  6107  0F43                     	;# 
  6108  0F44                     	;# 
  6109  0F45                     	;# 
  6110  0F46                     	;# 
  6111  0F47                     	;# 
  6112  0F48                     	;# 
  6113  0F49                     	;# 
  6114  0F4A                     	;# 
  6115  0F4B                     	;# 
  6116  0F4C                     	;# 
  6117  0F4E                     	;# 
  6118  0F4F                     	;# 
  6119  0F50                     	;# 
  6120  0F51                     	;# 
  6121  0F52                     	;# 
  6122  0F53                     	;# 
  6123  0F54                     	;# 
  6124  0F55                     	;# 
  6125  0F56                     	;# 
  6126  0F57                     	;# 
  6127  0F59                     	;# 
  6128  0F5A                     	;# 
  6129  0F5B                     	;# 
  6130  0F5C                     	;# 
  6131  0F5D                     	;# 
  6132  0F61                     	;# 
  6133  0F62                     	;# 
  6134  0F64                     	;# 
  6135  0F65                     	;# 
  6136  0F66                     	;# 
  6137  0F67                     	;# 
  6138  0F68                     	;# 
  6139  0F69                     	;# 
  6140  0F6A                     	;# 
  6141  0F6B                     	;# 
  6142  0F6C                     	;# 
  6143  0F6D                     	;# 
  6144  0FE4                     	;# 
  6145  0FE5                     	;# 
  6146  0FE6                     	;# 
  6147  0FE7                     	;# 
  6148  0FE8                     	;# 
  6149  0FE9                     	;# 
  6150  0FEA                     	;# 
  6151  0FEB                     	;# 
  6152  0FED                     	;# 
  6153  0FEE                     	;# 
  6154  0FEF                     	;# 
  6155  0000                     	;# 
  6156  0001                     	;# 
  6157  0002                     	;# 
  6158  0003                     	;# 
  6159  0004                     	;# 
  6160  0005                     	;# 
  6161  0006                     	;# 
  6162  0007                     	;# 
  6163  0008                     	;# 
  6164  0009                     	;# 
  6165  000A                     	;# 
  6166  000B                     	;# 
  6167  000C                     	;# 
  6168  000D                     	;# 
  6169  000E                     	;# 
  6170  000F                     	;# 
  6171  0010                     	;# 
  6172  0011                     	;# 
  6173  0012                     	;# 
  6174  0013                     	;# 
  6175  0014                     	;# 
  6176  0015                     	;# 
  6177  0016                     	;# 
  6178  0017                     	;# 
  6179  0018                     	;# 
  6180  0019                     	;# 
  6181  001A                     	;# 
  6182  001C                     	;# 
  6183  001C                     	;# 
  6184  001D                     	;# 
  6185  001D                     	;# 
  6186  001E                     	;# 
  6187  001F                     	;# 
  6188  008C                     	;# 
  6189  008C                     	;# 
  6190  008D                     	;# 
  6191  008E                     	;# 
  6192  008E                     	;# 
  6193  008F                     	;# 
  6194  0090                     	;# 
  6195  0090                     	;# 
  6196  0091                     	;# 
  6197  0093                     	;# 
  6198  0094                     	;# 
  6199  0095                     	;# 
  6200  0096                     	;# 
  6201  0097                     	;# 
  6202  0098                     	;# 
  6203  0099                     	;# 
  6204  009A                     	;# 
  6205  009B                     	;# 
  6206  009C                     	;# 
  6207  009D                     	;# 
  6208  009E                     	;# 
  6209  010C                     	;# 
  6210  010D                     	;# 
  6211  010E                     	;# 
  6212  010E                     	;# 
  6213  010F                     	;# 
  6214  0110                     	;# 
  6215  0110                     	;# 
  6216  0111                     	;# 
  6217  0112                     	;# 
  6218  0112                     	;# 
  6219  0113                     	;# 
  6220  0114                     	;# 
  6221  0114                     	;# 
  6222  0115                     	;# 
  6223  0116                     	;# 
  6224  0116                     	;# 
  6225  0117                     	;# 
  6226  0119                     	;# 
  6227  0119                     	;# 
  6228  0119                     	;# 
  6229  011A                     	;# 
  6230  011A                     	;# 
  6231  011A                     	;# 
  6232  011B                     	;# 
  6233  011B                     	;# 
  6234  011B                     	;# 
  6235  011B                     	;# 
  6236  011B                     	;# 
  6237  011C                     	;# 
  6238  011C                     	;# 
  6239  011C                     	;# 
  6240  011D                     	;# 
  6241  011D                     	;# 
  6242  011D                     	;# 
  6243  011E                     	;# 
  6244  011E                     	;# 
  6245  011E                     	;# 
  6246  011F                     	;# 
  6247  011F                     	;# 
  6248  011F                     	;# 
  6249  011F                     	;# 
  6250  011F                     	;# 
  6251  018C                     	;# 
  6252  018D                     	;# 
  6253  018E                     	;# 
  6254  018F                     	;# 
  6255  0190                     	;# 
  6256  0191                     	;# 
  6257  0192                     	;# 
  6258  0196                     	;# 
  6259  0197                     	;# 
  6260  0198                     	;# 
  6261  0199                     	;# 
  6262  019A                     	;# 
  6263  019B                     	;# 
  6264  019C                     	;# 
  6265  020C                     	;# 
  6266  020C                     	;# 
  6267  020D                     	;# 
  6268  020E                     	;# 
  6269  020F                     	;# 
  6270  020F                     	;# 
  6271  0210                     	;# 
  6272  0210                     	;# 
  6273  0211                     	;# 
  6274  0211                     	;# 
  6275  0212                     	;# 
  6276  0212                     	;# 
  6277  0213                     	;# 
  6278  0214                     	;# 
  6279  0215                     	;# 
  6280  0215                     	;# 
  6281  0216                     	;# 
  6282  0216                     	;# 
  6283  0217                     	;# 
  6284  0217                     	;# 
  6285  0218                     	;# 
  6286  0218                     	;# 
  6287  0219                     	;# 
  6288  021A                     	;# 
  6289  021B                     	;# 
  6290  021B                     	;# 
  6291  021C                     	;# 
  6292  021C                     	;# 
  6293  021D                     	;# 
  6294  021D                     	;# 
  6295  021E                     	;# 
  6296  021F                     	;# 
  6297  028C                     	;# 
  6298  028C                     	;# 
  6299  028D                     	;# 
  6300  028D                     	;# 
  6301  028E                     	;# 
  6302  028F                     	;# 
  6303  0290                     	;# 
  6304  0290                     	;# 
  6305  0291                     	;# 
  6306  0292                     	;# 
  6307  0292                     	;# 
  6308  0293                     	;# 
  6309  0293                     	;# 
  6310  0294                     	;# 
  6311  0295                     	;# 
  6312  0296                     	;# 
  6313  0296                     	;# 
  6314  0297                     	;# 
  6315  0298                     	;# 
  6316  0298                     	;# 
  6317  0299                     	;# 
  6318  0299                     	;# 
  6319  029A                     	;# 
  6320  029B                     	;# 
  6321  029C                     	;# 
  6322  029C                     	;# 
  6323  029D                     	;# 
  6324  030C                     	;# 
  6325  030C                     	;# 
  6326  030D                     	;# 
  6327  030E                     	;# 
  6328  030F                     	;# 
  6329  0310                     	;# 
  6330  0310                     	;# 
  6331  0311                     	;# 
  6332  0312                     	;# 
  6333  0313                     	;# 
  6334  0314                     	;# 
  6335  0314                     	;# 
  6336  0315                     	;# 
  6337  0316                     	;# 
  6338  0317                     	;# 
  6339  0318                     	;# 
  6340  0318                     	;# 
  6341  0319                     	;# 
  6342  031A                     	;# 
  6343  031B                     	;# 
  6344  031C                     	;# 
  6345  031C                     	;# 
  6346  031D                     	;# 
  6347  031E                     	;# 
  6348  031F                     	;# 
  6349  038C                     	;# 
  6350  038C                     	;# 
  6351  038D                     	;# 
  6352  038E                     	;# 
  6353  0390                     	;# 
  6354  0390                     	;# 
  6355  0391                     	;# 
  6356  0392                     	;# 
  6357  040C                     	;# 
  6358  040D                     	;# 
  6359  040E                     	;# 
  6360  040F                     	;# 
  6361  0410                     	;# 
  6362  0411                     	;# 
  6363  0416                     	;# 
  6364  0416                     	;# 
  6365  0417                     	;# 
  6366  0418                     	;# 
  6367  0418                     	;# 
  6368  0419                     	;# 
  6369  041A                     	;# 
  6370  041A                     	;# 
  6371  041B                     	;# 
  6372  041C                     	;# 
  6373  041C                     	;# 
  6374  041D                     	;# 
  6375  041E                     	;# 
  6376  041F                     	;# 
  6377  048C                     	;# 
  6378  048C                     	;# 
  6379  048D                     	;# 
  6380  048E                     	;# 
  6381  048F                     	;# 
  6382  048F                     	;# 
  6383  0490                     	;# 
  6384  0491                     	;# 
  6385  0492                     	;# 
  6386  0492                     	;# 
  6387  0493                     	;# 
  6388  0494                     	;# 
  6389  0495                     	;# 
  6390  0495                     	;# 
  6391  0496                     	;# 
  6392  0497                     	;# 
  6393  0498                     	;# 
  6394  0499                     	;# 
  6395  049A                     	;# 
  6396  049B                     	;# 
  6397  049C                     	;# 
  6398  049D                     	;# 
  6399  050C                     	;# 
  6400  050C                     	;# 
  6401  050D                     	;# 
  6402  050E                     	;# 
  6403  050F                     	;# 
  6404  050F                     	;# 
  6405  0510                     	;# 
  6406  0511                     	;# 
  6407  0512                     	;# 
  6408  0512                     	;# 
  6409  0513                     	;# 
  6410  0514                     	;# 
  6411  0515                     	;# 
  6412  0515                     	;# 
  6413  0516                     	;# 
  6414  0517                     	;# 
  6415  0518                     	;# 
  6416  0519                     	;# 
  6417  051A                     	;# 
  6418  051B                     	;# 
  6419  051C                     	;# 
  6420  051D                     	;# 
  6421  058C                     	;# 
  6422  058C                     	;# 
  6423  058D                     	;# 
  6424  058E                     	;# 
  6425  058F                     	;# 
  6426  058F                     	;# 
  6427  0590                     	;# 
  6428  0591                     	;# 
  6429  0592                     	;# 
  6430  0593                     	;# 
  6431  060C                     	;# 
  6432  060D                     	;# 
  6433  060E                     	;# 
  6434  060F                     	;# 
  6435  0610                     	;# 
  6436  0611                     	;# 
  6437  0612                     	;# 
  6438  0613                     	;# 
  6439  0614                     	;# 
  6440  0616                     	;# 
  6441  0617                     	;# 
  6442  0618                     	;# 
  6443  0619                     	;# 
  6444  061A                     	;# 
  6445  061B                     	;# 
  6446  061C                     	;# 
  6447  061D                     	;# 
  6448  061E                     	;# 
  6449  068C                     	;# 
  6450  068D                     	;# 
  6451  068E                     	;# 
  6452  068F                     	;# 
  6453  0690                     	;# 
  6454  0691                     	;# 
  6455  0692                     	;# 
  6456  0693                     	;# 
  6457  0694                     	;# 
  6458  070C                     	;# 
  6459  070D                     	;# 
  6460  070E                     	;# 
  6461  070F                     	;# 
  6462  0710                     	;# 
  6463  0711                     	;# 
  6464  0712                     	;# 
  6465  0713                     	;# 
  6466  0714                     	;# 
  6467  0716                     	;# 
  6468  0717                     	;# 
  6469  0718                     	;# 
  6470  0719                     	;# 
  6471  071A                     	;# 
  6472  071B                     	;# 
  6473  071C                     	;# 
  6474  071D                     	;# 
  6475  071E                     	;# 
  6476  0796                     	;# 
  6477  0797                     	;# 
  6478  0798                     	;# 
  6479  0799                     	;# 
  6480  079A                     	;# 
  6481  079B                     	;# 
  6482  080C                     	;# 
  6483  080D                     	;# 
  6484  080E                     	;# 
  6485  080F                     	;# 
  6486  0810                     	;# 
  6487  0811                     	;# 
  6488  0812                     	;# 
  6489  0813                     	;# 
  6490  0814                     	;# 
  6491  081A                     	;# 
  6492  081B                     	;# 
  6493  081C                     	;# 
  6494  081D                     	;# 
  6495  081E                     	;# 
  6496  081F                     	;# 
  6497  088C                     	;# 
  6498  088D                     	;# 
  6499  088E                     	;# 
  6500  088F                     	;# 
  6501  0890                     	;# 
  6502  0891                     	;# 
  6503  0892                     	;# 
  6504  0893                     	;# 
  6505  0895                     	;# 
  6506  0896                     	;# 
  6507  0897                     	;# 
  6508  0898                     	;# 
  6509  0899                     	;# 
  6510  089A                     	;# 
  6511  089B                     	;# 
  6512  090C                     	;# 
  6513  090E                     	;# 
  6514  090F                     	;# 
  6515  091F                     	;# 
  6516  091F                     	;# 
  6517  098F                     	;# 
  6518  098F                     	;# 
  6519  0990                     	;# 
  6520  0991                     	;# 
  6521  0992                     	;# 
  6522  0993                     	;# 
  6523  0994                     	;# 
  6524  0995                     	;# 
  6525  0996                     	;# 
  6526  0997                     	;# 
  6527  0E0F                     	;# 
  6528  0E10                     	;# 
  6529  0E11                     	;# 
  6530  0E12                     	;# 
  6531  0E13                     	;# 
  6532  0E14                     	;# 
  6533  0E15                     	;# 
  6534  0E16                     	;# 
  6535  0E17                     	;# 
  6536  0E18                     	;# 
  6537  0E19                     	;# 
  6538  0E1A                     	;# 
  6539  0E1B                     	;# 
  6540  0E1C                     	;# 
  6541  0E1D                     	;# 
  6542  0E1E                     	;# 
  6543  0E1F                     	;# 
  6544  0E20                     	;# 
  6545  0E21                     	;# 
  6546  0E22                     	;# 
  6547  0E23                     	;# 
  6548  0E24                     	;# 
  6549  0E25                     	;# 
  6550  0E26                     	;# 
  6551  0E27                     	;# 
  6552  0E28                     	;# 
  6553  0E29                     	;# 
  6554  0E2A                     	;# 
  6555  0E2B                     	;# 
  6556  0E2C                     	;# 
  6557  0E2D                     	;# 
  6558  0E2E                     	;# 
  6559  0E2F                     	;# 
  6560  0E30                     	;# 
  6561  0E31                     	;# 
  6562  0E32                     	;# 
  6563  0E33                     	;# 
  6564  0E34                     	;# 
  6565  0E35                     	;# 
  6566  0E36                     	;# 
  6567  0E37                     	;# 
  6568  0E8F                     	;# 
  6569  0E90                     	;# 
  6570  0E91                     	;# 
  6571  0E92                     	;# 
  6572  0E93                     	;# 
  6573  0E94                     	;# 
  6574  0E95                     	;# 
  6575  0E96                     	;# 
  6576  0E97                     	;# 
  6577  0E9C                     	;# 
  6578  0E9D                     	;# 
  6579  0E9E                     	;# 
  6580  0EA1                     	;# 
  6581  0EA2                     	;# 
  6582  0EA3                     	;# 
  6583  0EA4                     	;# 
  6584  0EA5                     	;# 
  6585  0EA9                     	;# 
  6586  0EAA                     	;# 
  6587  0EAB                     	;# 
  6588  0EAC                     	;# 
  6589  0EB1                     	;# 
  6590  0EB2                     	;# 
  6591  0EB3                     	;# 
  6592  0EB8                     	;# 
  6593  0EB9                     	;# 
  6594  0EBA                     	;# 
  6595  0EBB                     	;# 
  6596  0EBC                     	;# 
  6597  0EBD                     	;# 
  6598  0EBE                     	;# 
  6599  0EC3                     	;# 
  6600  0EC5                     	;# 
  6601  0EC6                     	;# 
  6602  0EC7                     	;# 
  6603  0EC8                     	;# 
  6604  0EC9                     	;# 
  6605  0ECA                     	;# 
  6606  0ECB                     	;# 
  6607  0ECC                     	;# 
  6608  0F10                     	;# 
  6609  0F11                     	;# 
  6610  0F12                     	;# 
  6611  0F13                     	;# 
  6612  0F14                     	;# 
  6613  0F15                     	;# 
  6614  0F16                     	;# 
  6615  0F17                     	;# 
  6616  0F18                     	;# 
  6617  0F19                     	;# 
  6618  0F1A                     	;# 
  6619  0F1B                     	;# 
  6620  0F1C                     	;# 
  6621  0F1D                     	;# 
  6622  0F1E                     	;# 
  6623  0F1F                     	;# 
  6624  0F20                     	;# 
  6625  0F21                     	;# 
  6626  0F22                     	;# 
  6627  0F23                     	;# 
  6628  0F24                     	;# 
  6629  0F25                     	;# 
  6630  0F26                     	;# 
  6631  0F27                     	;# 
  6632  0F28                     	;# 
  6633  0F29                     	;# 
  6634  0F2A                     	;# 
  6635  0F2B                     	;# 
  6636  0F2C                     	;# 
  6637  0F2D                     	;# 
  6638  0F2E                     	;# 
  6639  0F2F                     	;# 
  6640  0F30                     	;# 
  6641  0F31                     	;# 
  6642  0F32                     	;# 
  6643  0F38                     	;# 
  6644  0F39                     	;# 
  6645  0F3A                     	;# 
  6646  0F3B                     	;# 
  6647  0F3C                     	;# 
  6648  0F3D                     	;# 
  6649  0F3E                     	;# 
  6650  0F3F                     	;# 
  6651  0F40                     	;# 
  6652  0F41                     	;# 
  6653  0F43                     	;# 
  6654  0F44                     	;# 
  6655  0F45                     	;# 
  6656  0F46                     	;# 
  6657  0F47                     	;# 
  6658  0F48                     	;# 
  6659  0F49                     	;# 
  6660  0F4A                     	;# 
  6661  0F4B                     	;# 
  6662  0F4C                     	;# 
  6663  0F4E                     	;# 
  6664  0F4F                     	;# 
  6665  0F50                     	;# 
  6666  0F51                     	;# 
  6667  0F52                     	;# 
  6668  0F53                     	;# 
  6669  0F54                     	;# 
  6670  0F55                     	;# 
  6671  0F56                     	;# 
  6672  0F57                     	;# 
  6673  0F59                     	;# 
  6674  0F5A                     	;# 
  6675  0F5B                     	;# 
  6676  0F5C                     	;# 
  6677  0F5D                     	;# 
  6678  0F61                     	;# 
  6679  0F62                     	;# 
  6680  0F64                     	;# 
  6681  0F65                     	;# 
  6682  0F66                     	;# 
  6683  0F67                     	;# 
  6684  0F68                     	;# 
  6685  0F69                     	;# 
  6686  0F6A                     	;# 
  6687  0F6B                     	;# 
  6688  0F6C                     	;# 
  6689  0F6D                     	;# 
  6690  0FE4                     	;# 
  6691  0FE5                     	;# 
  6692  0FE6                     	;# 
  6693  0FE7                     	;# 
  6694  0FE8                     	;# 
  6695  0FE9                     	;# 
  6696  0FEA                     	;# 
  6697  0FEB                     	;# 
  6698  0FED                     	;# 
  6699  0FEE                     	;# 
  6700  0FEF                     	;# 
  6701  0000                     	;# 
  6702  0001                     	;# 
  6703  0002                     	;# 
  6704  0003                     	;# 
  6705  0004                     	;# 
  6706  0005                     	;# 
  6707  0006                     	;# 
  6708  0007                     	;# 
  6709  0008                     	;# 
  6710  0009                     	;# 
  6711  000A                     	;# 
  6712  000B                     	;# 
  6713  000C                     	;# 
  6714  000D                     	;# 
  6715  000E                     	;# 
  6716  000F                     	;# 
  6717  0010                     	;# 
  6718  0011                     	;# 
  6719  0012                     	;# 
  6720  0013                     	;# 
  6721  0014                     	;# 
  6722  0015                     	;# 
  6723  0016                     	;# 
  6724  0017                     	;# 
  6725  0018                     	;# 
  6726  0019                     	;# 
  6727  001A                     	;# 
  6728  001C                     	;# 
  6729  001C                     	;# 
  6730  001D                     	;# 
  6731  001D                     	;# 
  6732  001E                     	;# 
  6733  001F                     	;# 
  6734  008C                     	;# 
  6735  008C                     	;# 
  6736  008D                     	;# 
  6737  008E                     	;# 
  6738  008E                     	;# 
  6739  008F                     	;# 
  6740  0090                     	;# 
  6741  0090                     	;# 
  6742  0091                     	;# 
  6743  0093                     	;# 
  6744  0094                     	;# 
  6745  0095                     	;# 
  6746  0096                     	;# 
  6747  0097                     	;# 
  6748  0098                     	;# 
  6749  0099                     	;# 
  6750  009A                     	;# 
  6751  009B                     	;# 
  6752  009C                     	;# 
  6753  009D                     	;# 
  6754  009E                     	;# 
  6755  010C                     	;# 
  6756  010D                     	;# 
  6757  010E                     	;# 
  6758  010E                     	;# 
  6759  010F                     	;# 
  6760  0110                     	;# 
  6761  0110                     	;# 
  6762  0111                     	;# 
  6763  0112                     	;# 
  6764  0112                     	;# 
  6765  0113                     	;# 
  6766  0114                     	;# 
  6767  0114                     	;# 
  6768  0115                     	;# 
  6769  0116                     	;# 
  6770  0116                     	;# 
  6771  0117                     	;# 
  6772  0119                     	;# 
  6773  0119                     	;# 
  6774  0119                     	;# 
  6775  011A                     	;# 
  6776  011A                     	;# 
  6777  011A                     	;# 
  6778  011B                     	;# 
  6779  011B                     	;# 
  6780  011B                     	;# 
  6781  011B                     	;# 
  6782  011B                     	;# 
  6783  011C                     	;# 
  6784  011C                     	;# 
  6785  011C                     	;# 
  6786  011D                     	;# 
  6787  011D                     	;# 
  6788  011D                     	;# 
  6789  011E                     	;# 
  6790  011E                     	;# 
  6791  011E                     	;# 
  6792  011F                     	;# 
  6793  011F                     	;# 
  6794  011F                     	;# 
  6795  011F                     	;# 
  6796  011F                     	;# 
  6797  018C                     	;# 
  6798  018D                     	;# 
  6799  018E                     	;# 
  6800  018F                     	;# 
  6801  0190                     	;# 
  6802  0191                     	;# 
  6803  0192                     	;# 
  6804  0196                     	;# 
  6805  0197                     	;# 
  6806  0198                     	;# 
  6807  0199                     	;# 
  6808  019A                     	;# 
  6809  019B                     	;# 
  6810  019C                     	;# 
  6811  020C                     	;# 
  6812  020C                     	;# 
  6813  020D                     	;# 
  6814  020E                     	;# 
  6815  020F                     	;# 
  6816  020F                     	;# 
  6817  0210                     	;# 
  6818  0210                     	;# 
  6819  0211                     	;# 
  6820  0211                     	;# 
  6821  0212                     	;# 
  6822  0212                     	;# 
  6823  0213                     	;# 
  6824  0214                     	;# 
  6825  0215                     	;# 
  6826  0215                     	;# 
  6827  0216                     	;# 
  6828  0216                     	;# 
  6829  0217                     	;# 
  6830  0217                     	;# 
  6831  0218                     	;# 
  6832  0218                     	;# 
  6833  0219                     	;# 
  6834  021A                     	;# 
  6835  021B                     	;# 
  6836  021B                     	;# 
  6837  021C                     	;# 
  6838  021C                     	;# 
  6839  021D                     	;# 
  6840  021D                     	;# 
  6841  021E                     	;# 
  6842  021F                     	;# 
  6843  028C                     	;# 
  6844  028C                     	;# 
  6845  028D                     	;# 
  6846  028D                     	;# 
  6847  028E                     	;# 
  6848  028F                     	;# 
  6849  0290                     	;# 
  6850  0290                     	;# 
  6851  0291                     	;# 
  6852  0292                     	;# 
  6853  0292                     	;# 
  6854  0293                     	;# 
  6855  0293                     	;# 
  6856  0294                     	;# 
  6857  0295                     	;# 
  6858  0296                     	;# 
  6859  0296                     	;# 
  6860  0297                     	;# 
  6861  0298                     	;# 
  6862  0298                     	;# 
  6863  0299                     	;# 
  6864  0299                     	;# 
  6865  029A                     	;# 
  6866  029B                     	;# 
  6867  029C                     	;# 
  6868  029C                     	;# 
  6869  029D                     	;# 
  6870  030C                     	;# 
  6871  030C                     	;# 
  6872  030D                     	;# 
  6873  030E                     	;# 
  6874  030F                     	;# 
  6875  0310                     	;# 
  6876  0310                     	;# 
  6877  0311                     	;# 
  6878  0312                     	;# 
  6879  0313                     	;# 
  6880  0314                     	;# 
  6881  0314                     	;# 
  6882  0315                     	;# 
  6883  0316                     	;# 
  6884  0317                     	;# 
  6885  0318                     	;# 
  6886  0318                     	;# 
  6887  0319                     	;# 
  6888  031A                     	;# 
  6889  031B                     	;# 
  6890  031C                     	;# 
  6891  031C                     	;# 
  6892  031D                     	;# 
  6893  031E                     	;# 
  6894  031F                     	;# 
  6895  038C                     	;# 
  6896  038C                     	;# 
  6897  038D                     	;# 
  6898  038E                     	;# 
  6899  0390                     	;# 
  6900  0390                     	;# 
  6901  0391                     	;# 
  6902  0392                     	;# 
  6903  040C                     	;# 
  6904  040D                     	;# 
  6905  040E                     	;# 
  6906  040F                     	;# 
  6907  0410                     	;# 
  6908  0411                     	;# 
  6909  0416                     	;# 
  6910  0416                     	;# 
  6911  0417                     	;# 
  6912  0418                     	;# 
  6913  0418                     	;# 
  6914  0419                     	;# 
  6915  041A                     	;# 
  6916  041A                     	;# 
  6917  041B                     	;# 
  6918  041C                     	;# 
  6919  041C                     	;# 
  6920  041D                     	;# 
  6921  041E                     	;# 
  6922  041F                     	;# 
  6923  048C                     	;# 
  6924  048C                     	;# 
  6925  048D                     	;# 
  6926  048E                     	;# 
  6927  048F                     	;# 
  6928  048F                     	;# 
  6929  0490                     	;# 
  6930  0491                     	;# 
  6931  0492                     	;# 
  6932  0492                     	;# 
  6933  0493                     	;# 
  6934  0494                     	;# 
  6935  0495                     	;# 
  6936  0495                     	;# 
  6937  0496                     	;# 
  6938  0497                     	;# 
  6939  0498                     	;# 
  6940  0499                     	;# 
  6941  049A                     	;# 
  6942  049B                     	;# 
  6943  049C                     	;# 
  6944  049D                     	;# 
  6945  050C                     	;# 
  6946  050C                     	;# 
  6947  050D                     	;# 
  6948  050E                     	;# 
  6949  050F                     	;# 
  6950  050F                     	;# 
  6951  0510                     	;# 
  6952  0511                     	;# 
  6953  0512                     	;# 
  6954  0512                     	;# 
  6955  0513                     	;# 
  6956  0514                     	;# 
  6957  0515                     	;# 
  6958  0515                     	;# 
  6959  0516                     	;# 
  6960  0517                     	;# 
  6961  0518                     	;# 
  6962  0519                     	;# 
  6963  051A                     	;# 
  6964  051B                     	;# 
  6965  051C                     	;# 
  6966  051D                     	;# 
  6967  058C                     	;# 
  6968  058C                     	;# 
  6969  058D                     	;# 
  6970  058E                     	;# 
  6971  058F                     	;# 
  6972  058F                     	;# 
  6973  0590                     	;# 
  6974  0591                     	;# 
  6975  0592                     	;# 
  6976  0593                     	;# 
  6977  060C                     	;# 
  6978  060D                     	;# 
  6979  060E                     	;# 
  6980  060F                     	;# 
  6981  0610                     	;# 
  6982  0611                     	;# 
  6983  0612                     	;# 
  6984  0613                     	;# 
  6985  0614                     	;# 
  6986  0616                     	;# 
  6987  0617                     	;# 
  6988  0618                     	;# 
  6989  0619                     	;# 
  6990  061A                     	;# 
  6991  061B                     	;# 
  6992  061C                     	;# 
  6993  061D                     	;# 
  6994  061E                     	;# 
  6995  068C                     	;# 
  6996  068D                     	;# 
  6997  068E                     	;# 
  6998  068F                     	;# 
  6999  0690                     	;# 
  7000  0691                     	;# 
  7001  0692                     	;# 
  7002  0693                     	;# 
  7003  0694                     	;# 
  7004  070C                     	;# 
  7005  070D                     	;# 
  7006  070E                     	;# 
  7007  070F                     	;# 
  7008  0710                     	;# 
  7009  0711                     	;# 
  7010  0712                     	;# 
  7011  0713                     	;# 
  7012  0714                     	;# 
  7013  0716                     	;# 
  7014  0717                     	;# 
  7015  0718                     	;# 
  7016  0719                     	;# 
  7017  071A                     	;# 
  7018  071B                     	;# 
  7019  071C                     	;# 
  7020  071D                     	;# 
  7021  071E                     	;# 
  7022  0796                     	;# 
  7023  0797                     	;# 
  7024  0798                     	;# 
  7025  0799                     	;# 
  7026  079A                     	;# 
  7027  079B                     	;# 
  7028  080C                     	;# 
  7029  080D                     	;# 
  7030  080E                     	;# 
  7031  080F                     	;# 
  7032  0810                     	;# 
  7033  0811                     	;# 
  7034  0812                     	;# 
  7035  0813                     	;# 
  7036  0814                     	;# 
  7037  081A                     	;# 
  7038  081B                     	;# 
  7039  081C                     	;# 
  7040  081D                     	;# 
  7041  081E                     	;# 
  7042  081F                     	;# 
  7043  088C                     	;# 
  7044  088D                     	;# 
  7045  088E                     	;# 
  7046  088F                     	;# 
  7047  0890                     	;# 
  7048  0891                     	;# 
  7049  0892                     	;# 
  7050  0893                     	;# 
  7051  0895                     	;# 
  7052  0896                     	;# 
  7053  0897                     	;# 
  7054  0898                     	;# 
  7055  0899                     	;# 
  7056  089A                     	;# 
  7057  089B                     	;# 
  7058  090C                     	;# 
  7059  090E                     	;# 
  7060  090F                     	;# 
  7061  091F                     	;# 
  7062  091F                     	;# 
  7063  098F                     	;# 
  7064  098F                     	;# 
  7065  0990                     	;# 
  7066  0991                     	;# 
  7067  0992                     	;# 
  7068  0993                     	;# 
  7069  0994                     	;# 
  7070  0995                     	;# 
  7071  0996                     	;# 
  7072  0997                     	;# 
  7073  0E0F                     	;# 
  7074  0E10                     	;# 
  7075  0E11                     	;# 
  7076  0E12                     	;# 
  7077  0E13                     	;# 
  7078  0E14                     	;# 
  7079  0E15                     	;# 
  7080  0E16                     	;# 
  7081  0E17                     	;# 
  7082  0E18                     	;# 
  7083  0E19                     	;# 
  7084  0E1A                     	;# 
  7085  0E1B                     	;# 
  7086  0E1C                     	;# 
  7087  0E1D                     	;# 
  7088  0E1E                     	;# 
  7089  0E1F                     	;# 
  7090  0E20                     	;# 
  7091  0E21                     	;# 
  7092  0E22                     	;# 
  7093  0E23                     	;# 
  7094  0E24                     	;# 
  7095  0E25                     	;# 
  7096  0E26                     	;# 
  7097  0E27                     	;# 
  7098  0E28                     	;# 
  7099  0E29                     	;# 
  7100  0E2A                     	;# 
  7101  0E2B                     	;# 
  7102  0E2C                     	;# 
  7103  0E2D                     	;# 
  7104  0E2E                     	;# 
  7105  0E2F                     	;# 
  7106  0E30                     	;# 
  7107  0E31                     	;# 
  7108  0E32                     	;# 
  7109  0E33                     	;# 
  7110  0E34                     	;# 
  7111  0E35                     	;# 
  7112  0E36                     	;# 
  7113  0E37                     	;# 
  7114  0E8F                     	;# 
  7115  0E90                     	;# 
  7116  0E91                     	;# 
  7117  0E92                     	;# 
  7118  0E93                     	;# 
  7119  0E94                     	;# 
  7120  0E95                     	;# 
  7121  0E96                     	;# 
  7122  0E97                     	;# 
  7123  0E9C                     	;# 
  7124  0E9D                     	;# 
  7125  0E9E                     	;# 
  7126  0EA1                     	;# 
  7127  0EA2                     	;# 
  7128  0EA3                     	;# 
  7129  0EA4                     	;# 
  7130  0EA5                     	;# 
  7131  0EA9                     	;# 
  7132  0EAA                     	;# 
  7133  0EAB                     	;# 
  7134  0EAC                     	;# 
  7135  0EB1                     	;# 
  7136  0EB2                     	;# 
  7137  0EB3                     	;# 
  7138  0EB8                     	;# 
  7139  0EB9                     	;# 
  7140  0EBA                     	;# 
  7141  0EBB                     	;# 
  7142  0EBC                     	;# 
  7143  0EBD                     	;# 
  7144  0EBE                     	;# 
  7145  0EC3                     	;# 
  7146  0EC5                     	;# 
  7147  0EC6                     	;# 
  7148  0EC7                     	;# 
  7149  0EC8                     	;# 
  7150  0EC9                     	;# 
  7151  0ECA                     	;# 
  7152  0ECB                     	;# 
  7153  0ECC                     	;# 
  7154  0F10                     	;# 
  7155  0F11                     	;# 
  7156  0F12                     	;# 
  7157  0F13                     	;# 
  7158  0F14                     	;# 
  7159  0F15                     	;# 
  7160  0F16                     	;# 
  7161  0F17                     	;# 
  7162  0F18                     	;# 
  7163  0F19                     	;# 
  7164  0F1A                     	;# 
  7165  0F1B                     	;# 
  7166  0F1C                     	;# 
  7167  0F1D                     	;# 
  7168  0F1E                     	;# 
  7169  0F1F                     	;# 
  7170  0F20                     	;# 
  7171  0F21                     	;# 
  7172  0F22                     	;# 
  7173  0F23                     	;# 
  7174  0F24                     	;# 
  7175  0F25                     	;# 
  7176  0F26                     	;# 
  7177  0F27                     	;# 
  7178  0F28                     	;# 
  7179  0F29                     	;# 
  7180  0F2A                     	;# 
  7181  0F2B                     	;# 
  7182  0F2C                     	;# 
  7183  0F2D                     	;# 
  7184  0F2E                     	;# 
  7185  0F2F                     	;# 
  7186  0F30                     	;# 
  7187  0F31                     	;# 
  7188  0F32                     	;# 
  7189  0F38                     	;# 
  7190  0F39                     	;# 
  7191  0F3A                     	;# 
  7192  0F3B                     	;# 
  7193  0F3C                     	;# 
  7194  0F3D                     	;# 
  7195  0F3E                     	;# 
  7196  0F3F                     	;# 
  7197  0F40                     	;# 
  7198  0F41                     	;# 
  7199  0F43                     	;# 
  7200  0F44                     	;# 
  7201  0F45                     	;# 
  7202  0F46                     	;# 
  7203  0F47                     	;# 
  7204  0F48                     	;# 
  7205  0F49                     	;# 
  7206  0F4A                     	;# 
  7207  0F4B                     	;# 
  7208  0F4C                     	;# 
  7209  0F4E                     	;# 
  7210  0F4F                     	;# 
  7211  0F50                     	;# 
  7212  0F51                     	;# 
  7213  0F52                     	;# 
  7214  0F53                     	;# 
  7215  0F54                     	;# 
  7216  0F55                     	;# 
  7217  0F56                     	;# 
  7218  0F57                     	;# 
  7219  0F59                     	;# 
  7220  0F5A                     	;# 
  7221  0F5B                     	;# 
  7222  0F5C                     	;# 
  7223  0F5D                     	;# 
  7224  0F61                     	;# 
  7225  0F62                     	;# 
  7226  0F64                     	;# 
  7227  0F65                     	;# 
  7228  0F66                     	;# 
  7229  0F67                     	;# 
  7230  0F68                     	;# 
  7231  0F69                     	;# 
  7232  0F6A                     	;# 
  7233  0F6B                     	;# 
  7234  0F6C                     	;# 
  7235  0F6D                     	;# 
  7236  0FE4                     	;# 
  7237  0FE5                     	;# 
  7238  0FE6                     	;# 
  7239  0FE7                     	;# 
  7240  0FE8                     	;# 
  7241  0FE9                     	;# 
  7242  0FEA                     	;# 
  7243  0FEB                     	;# 
  7244  0FED                     	;# 
  7245  0FEE                     	;# 
  7246  0FEF                     	;# 
  7247  0000                     	;# 
  7248  0001                     	;# 
  7249  0002                     	;# 
  7250  0003                     	;# 
  7251  0004                     	;# 
  7252  0005                     	;# 
  7253  0006                     	;# 
  7254  0007                     	;# 
  7255  0008                     	;# 
  7256  0009                     	;# 
  7257  000A                     	;# 
  7258  000B                     	;# 
  7259  000C                     	;# 
  7260  000D                     	;# 
  7261  000E                     	;# 
  7262  000F                     	;# 
  7263  0010                     	;# 
  7264  0011                     	;# 
  7265  0012                     	;# 
  7266  0013                     	;# 
  7267  0014                     	;# 
  7268  0015                     	;# 
  7269  0016                     	;# 
  7270  0017                     	;# 
  7271  0018                     	;# 
  7272  0019                     	;# 
  7273  001A                     	;# 
  7274  001C                     	;# 
  7275  001C                     	;# 
  7276  001D                     	;# 
  7277  001D                     	;# 
  7278  001E                     	;# 
  7279  001F                     	;# 
  7280  008C                     	;# 
  7281  008C                     	;# 
  7282  008D                     	;# 
  7283  008E                     	;# 
  7284  008E                     	;# 
  7285  008F                     	;# 
  7286  0090                     	;# 
  7287  0090                     	;# 
  7288  0091                     	;# 
  7289  0093                     	;# 
  7290  0094                     	;# 
  7291  0095                     	;# 
  7292  0096                     	;# 
  7293  0097                     	;# 
  7294  0098                     	;# 
  7295  0099                     	;# 
  7296  009A                     	;# 
  7297  009B                     	;# 
  7298  009C                     	;# 
  7299  009D                     	;# 
  7300  009E                     	;# 
  7301  010C                     	;# 
  7302  010D                     	;# 
  7303  010E                     	;# 
  7304  010E                     	;# 
  7305  010F                     	;# 
  7306  0110                     	;# 
  7307  0110                     	;# 
  7308  0111                     	;# 
  7309  0112                     	;# 
  7310  0112                     	;# 
  7311  0113                     	;# 
  7312  0114                     	;# 
  7313  0114                     	;# 
  7314  0115                     	;# 
  7315  0116                     	;# 
  7316  0116                     	;# 
  7317  0117                     	;# 
  7318  0119                     	;# 
  7319  0119                     	;# 
  7320  0119                     	;# 
  7321  011A                     	;# 
  7322  011A                     	;# 
  7323  011A                     	;# 
  7324  011B                     	;# 
  7325  011B                     	;# 
  7326  011B                     	;# 
  7327  011B                     	;# 
  7328  011B                     	;# 
  7329  011C                     	;# 
  7330  011C                     	;# 
  7331  011C                     	;# 
  7332  011D                     	;# 
  7333  011D                     	;# 
  7334  011D                     	;# 
  7335  011E                     	;# 
  7336  011E                     	;# 
  7337  011E                     	;# 
  7338  011F                     	;# 
  7339  011F                     	;# 
  7340  011F                     	;# 
  7341  011F                     	;# 
  7342  011F                     	;# 
  7343  018C                     	;# 
  7344  018D                     	;# 
  7345  018E                     	;# 
  7346  018F                     	;# 
  7347  0190                     	;# 
  7348  0191                     	;# 
  7349  0192                     	;# 
  7350  0196                     	;# 
  7351  0197                     	;# 
  7352  0198                     	;# 
  7353  0199                     	;# 
  7354  019A                     	;# 
  7355  019B                     	;# 
  7356  019C                     	;# 
  7357  020C                     	;# 
  7358  020C                     	;# 
  7359  020D                     	;# 
  7360  020E                     	;# 
  7361  020F                     	;# 
  7362  020F                     	;# 
  7363  0210                     	;# 
  7364  0210                     	;# 
  7365  0211                     	;# 
  7366  0211                     	;# 
  7367  0212                     	;# 
  7368  0212                     	;# 
  7369  0213                     	;# 
  7370  0214                     	;# 
  7371  0215                     	;# 
  7372  0215                     	;# 
  7373  0216                     	;# 
  7374  0216                     	;# 
  7375  0217                     	;# 
  7376  0217                     	;# 
  7377  0218                     	;# 
  7378  0218                     	;# 
  7379  0219                     	;# 
  7380  021A                     	;# 
  7381  021B                     	;# 
  7382  021B                     	;# 
  7383  021C                     	;# 
  7384  021C                     	;# 
  7385  021D                     	;# 
  7386  021D                     	;# 
  7387  021E                     	;# 
  7388  021F                     	;# 
  7389  028C                     	;# 
  7390  028C                     	;# 
  7391  028D                     	;# 
  7392  028D                     	;# 
  7393  028E                     	;# 
  7394  028F                     	;# 
  7395  0290                     	;# 
  7396  0290                     	;# 
  7397  0291                     	;# 
  7398  0292                     	;# 
  7399  0292                     	;# 
  7400  0293                     	;# 
  7401  0293                     	;# 
  7402  0294                     	;# 
  7403  0295                     	;# 
  7404  0296                     	;# 
  7405  0296                     	;# 
  7406  0297                     	;# 
  7407  0298                     	;# 
  7408  0298                     	;# 
  7409  0299                     	;# 
  7410  0299                     	;# 
  7411  029A                     	;# 
  7412  029B                     	;# 
  7413  029C                     	;# 
  7414  029C                     	;# 
  7415  029D                     	;# 
  7416  030C                     	;# 
  7417  030C                     	;# 
  7418  030D                     	;# 
  7419  030E                     	;# 
  7420  030F                     	;# 
  7421  0310                     	;# 
  7422  0310                     	;# 
  7423  0311                     	;# 
  7424  0312                     	;# 
  7425  0313                     	;# 
  7426  0314                     	;# 
  7427  0314                     	;# 
  7428  0315                     	;# 
  7429  0316                     	;# 
  7430  0317                     	;# 
  7431  0318                     	;# 
  7432  0318                     	;# 
  7433  0319                     	;# 
  7434  031A                     	;# 
  7435  031B                     	;# 
  7436  031C                     	;# 
  7437  031C                     	;# 
  7438  031D                     	;# 
  7439  031E                     	;# 
  7440  031F                     	;# 
  7441  038C                     	;# 
  7442  038C                     	;# 
  7443  038D                     	;# 
  7444  038E                     	;# 
  7445  0390                     	;# 
  7446  0390                     	;# 
  7447  0391                     	;# 
  7448  0392                     	;# 
  7449  040C                     	;# 
  7450  040D                     	;# 
  7451  040E                     	;# 
  7452  040F                     	;# 
  7453  0410                     	;# 
  7454  0411                     	;# 
  7455  0416                     	;# 
  7456  0416                     	;# 
  7457  0417                     	;# 
  7458  0418                     	;# 
  7459  0418                     	;# 
  7460  0419                     	;# 
  7461  041A                     	;# 
  7462  041A                     	;# 
  7463  041B                     	;# 
  7464  041C                     	;# 
  7465  041C                     	;# 
  7466  041D                     	;# 
  7467  041E                     	;# 
  7468  041F                     	;# 
  7469  048C                     	;# 
  7470  048C                     	;# 
  7471  048D                     	;# 
  7472  048E                     	;# 
  7473  048F                     	;# 
  7474  048F                     	;# 
  7475  0490                     	;# 
  7476  0491                     	;# 
  7477  0492                     	;# 
  7478  0492                     	;# 
  7479  0493                     	;# 
  7480  0494                     	;# 
  7481  0495                     	;# 
  7482  0495                     	;# 
  7483  0496                     	;# 
  7484  0497                     	;# 
  7485  0498                     	;# 
  7486  0499                     	;# 
  7487  049A                     	;# 
  7488  049B                     	;# 
  7489  049C                     	;# 
  7490  049D                     	;# 
  7491  050C                     	;# 
  7492  050C                     	;# 
  7493  050D                     	;# 
  7494  050E                     	;# 
  7495  050F                     	;# 
  7496  050F                     	;# 
  7497  0510                     	;# 
  7498  0511                     	;# 
  7499  0512                     	;# 
  7500  0512                     	;# 
  7501  0513                     	;# 
  7502  0514                     	;# 
  7503  0515                     	;# 
  7504  0515                     	;# 
  7505  0516                     	;# 
  7506  0517                     	;# 
  7507  0518                     	;# 
  7508  0519                     	;# 
  7509  051A                     	;# 
  7510  051B                     	;# 
  7511  051C                     	;# 
  7512  051D                     	;# 
  7513  058C                     	;# 
  7514  058C                     	;# 
  7515  058D                     	;# 
  7516  058E                     	;# 
  7517  058F                     	;# 
  7518  058F                     	;# 
  7519  0590                     	;# 
  7520  0591                     	;# 
  7521  0592                     	;# 
  7522  0593                     	;# 
  7523  060C                     	;# 
  7524  060D                     	;# 
  7525  060E                     	;# 
  7526  060F                     	;# 
  7527  0610                     	;# 
  7528  0611                     	;# 
  7529  0612                     	;# 
  7530  0613                     	;# 
  7531  0614                     	;# 
  7532  0616                     	;# 
  7533  0617                     	;# 
  7534  0618                     	;# 
  7535  0619                     	;# 
  7536  061A                     	;# 
  7537  061B                     	;# 
  7538  061C                     	;# 
  7539  061D                     	;# 
  7540  061E                     	;# 
  7541  068C                     	;# 
  7542  068D                     	;# 
  7543  068E                     	;# 
  7544  068F                     	;# 
  7545  0690                     	;# 
  7546  0691                     	;# 
  7547  0692                     	;# 
  7548  0693                     	;# 
  7549  0694                     	;# 
  7550  070C                     	;# 
  7551  070D                     	;# 
  7552  070E                     	;# 
  7553  070F                     	;# 
  7554  0710                     	;# 
  7555  0711                     	;# 
  7556  0712                     	;# 
  7557  0713                     	;# 
  7558  0714                     	;# 
  7559  0716                     	;# 
  7560  0717                     	;# 
  7561  0718                     	;# 
  7562  0719                     	;# 
  7563  071A                     	;# 
  7564  071B                     	;# 
  7565  071C                     	;# 
  7566  071D                     	;# 
  7567  071E                     	;# 
  7568  0796                     	;# 
  7569  0797                     	;# 
  7570  0798                     	;# 
  7571  0799                     	;# 
  7572  079A                     	;# 
  7573  079B                     	;# 
  7574  080C                     	;# 
  7575  080D                     	;# 
  7576  080E                     	;# 
  7577  080F                     	;# 
  7578  0810                     	;# 
  7579  0811                     	;# 
  7580  0812                     	;# 
  7581  0813                     	;# 
  7582  0814                     	;# 
  7583  081A                     	;# 
  7584  081B                     	;# 
  7585  081C                     	;# 
  7586  081D                     	;# 
  7587  081E                     	;# 
  7588  081F                     	;# 
  7589  088C                     	;# 
  7590  088D                     	;# 
  7591  088E                     	;# 
  7592  088F                     	;# 
  7593  0890                     	;# 
  7594  0891                     	;# 
  7595  0892                     	;# 
  7596  0893                     	;# 
  7597  0895                     	;# 
  7598  0896                     	;# 
  7599  0897                     	;# 
  7600  0898                     	;# 
  7601  0899                     	;# 
  7602  089A                     	;# 
  7603  089B                     	;# 
  7604  090C                     	;# 
  7605  090E                     	;# 
  7606  090F                     	;# 
  7607  091F                     	;# 
  7608  091F                     	;# 
  7609  098F                     	;# 
  7610  098F                     	;# 
  7611  0990                     	;# 
  7612  0991                     	;# 
  7613  0992                     	;# 
  7614  0993                     	;# 
  7615  0994                     	;# 
  7616  0995                     	;# 
  7617  0996                     	;# 
  7618  0997                     	;# 
  7619  0E0F                     	;# 
  7620  0E10                     	;# 
  7621  0E11                     	;# 
  7622  0E12                     	;# 
  7623  0E13                     	;# 
  7624  0E14                     	;# 
  7625  0E15                     	;# 
  7626  0E16                     	;# 
  7627  0E17                     	;# 
  7628  0E18                     	;# 
  7629  0E19                     	;# 
  7630  0E1A                     	;# 
  7631  0E1B                     	;# 
  7632  0E1C                     	;# 
  7633  0E1D                     	;# 
  7634  0E1E                     	;# 
  7635  0E1F                     	;# 
  7636  0E20                     	;# 
  7637  0E21                     	;# 
  7638  0E22                     	;# 
  7639  0E23                     	;# 
  7640  0E24                     	;# 
  7641  0E25                     	;# 
  7642  0E26                     	;# 
  7643  0E27                     	;# 
  7644  0E28                     	;# 
  7645  0E29                     	;# 
  7646  0E2A                     	;# 
  7647  0E2B                     	;# 
  7648  0E2C                     	;# 
  7649  0E2D                     	;# 
  7650  0E2E                     	;# 
  7651  0E2F                     	;# 
  7652  0E30                     	;# 
  7653  0E31                     	;# 
  7654  0E32                     	;# 
  7655  0E33                     	;# 
  7656  0E34                     	;# 
  7657  0E35                     	;# 
  7658  0E36                     	;# 
  7659  0E37                     	;# 
  7660  0E8F                     	;# 
  7661  0E90                     	;# 
  7662  0E91                     	;# 
  7663  0E92                     	;# 
  7664  0E93                     	;# 
  7665  0E94                     	;# 
  7666  0E95                     	;# 
  7667  0E96                     	;# 
  7668  0E97                     	;# 
  7669  0E9C                     	;# 
  7670  0E9D                     	;# 
  7671  0E9E                     	;# 
  7672  0EA1                     	;# 
  7673  0EA2                     	;# 
  7674  0EA3                     	;# 
  7675  0EA4                     	;# 
  7676  0EA5                     	;# 
  7677  0EA9                     	;# 
  7678  0EAA                     	;# 
  7679  0EAB                     	;# 
  7680  0EAC                     	;# 
  7681  0EB1                     	;# 
  7682  0EB2                     	;# 
  7683  0EB3                     	;# 
  7684  0EB8                     	;# 
  7685  0EB9                     	;# 
  7686  0EBA                     	;# 
  7687  0EBB                     	;# 
  7688  0EBC                     	;# 
  7689  0EBD                     	;# 
  7690  0EBE                     	;# 
  7691  0EC3                     	;# 
  7692  0EC5                     	;# 
  7693  0EC6                     	;# 
  7694  0EC7                     	;# 
  7695  0EC8                     	;# 
  7696  0EC9                     	;# 
  7697  0ECA                     	;# 
  7698  0ECB                     	;# 
  7699  0ECC                     	;# 
  7700  0F10                     	;# 
  7701  0F11                     	;# 
  7702  0F12                     	;# 
  7703  0F13                     	;# 
  7704  0F14                     	;# 
  7705  0F15                     	;# 
  7706  0F16                     	;# 
  7707  0F17                     	;# 
  7708  0F18                     	;# 
  7709  0F19                     	;# 
  7710  0F1A                     	;# 
  7711  0F1B                     	;# 
  7712  0F1C                     	;# 
  7713  0F1D                     	;# 
  7714  0F1E                     	;# 
  7715  0F1F                     	;# 
  7716  0F20                     	;# 
  7717  0F21                     	;# 
  7718  0F22                     	;# 
  7719  0F23                     	;# 
  7720  0F24                     	;# 
  7721  0F25                     	;# 
  7722  0F26                     	;# 
  7723  0F27                     	;# 
  7724  0F28                     	;# 
  7725  0F29                     	;# 
  7726  0F2A                     	;# 
  7727  0F2B                     	;# 
  7728  0F2C                     	;# 
  7729  0F2D                     	;# 
  7730  0F2E                     	;# 
  7731  0F2F                     	;# 
  7732  0F30                     	;# 
  7733  0F31                     	;# 
  7734  0F32                     	;# 
  7735  0F38                     	;# 
  7736  0F39                     	;# 
  7737  0F3A                     	;# 
  7738  0F3B                     	;# 
  7739  0F3C                     	;# 
  7740  0F3D                     	;# 
  7741  0F3E                     	;# 
  7742  0F3F                     	;# 
  7743  0F40                     	;# 
  7744  0F41                     	;# 
  7745  0F43                     	;# 
  7746  0F44                     	;# 
  7747  0F45                     	;# 
  7748  0F46                     	;# 
  7749  0F47                     	;# 
  7750  0F48                     	;# 
  7751  0F49                     	;# 
  7752  0F4A                     	;# 
  7753  0F4B                     	;# 
  7754  0F4C                     	;# 
  7755  0F4E                     	;# 
  7756  0F4F                     	;# 
  7757  0F50                     	;# 
  7758  0F51                     	;# 
  7759  0F52                     	;# 
  7760  0F53                     	;# 
  7761  0F54                     	;# 
  7762  0F55                     	;# 
  7763  0F56                     	;# 
  7764  0F57                     	;# 
  7765  0F59                     	;# 
  7766  0F5A                     	;# 
  7767  0F5B                     	;# 
  7768  0F5C                     	;# 
  7769  0F5D                     	;# 
  7770  0F61                     	;# 
  7771  0F62                     	;# 
  7772  0F64                     	;# 
  7773  0F65                     	;# 
  7774  0F66                     	;# 
  7775  0F67                     	;# 
  7776  0F68                     	;# 
  7777  0F69                     	;# 
  7778  0F6A                     	;# 
  7779  0F6B                     	;# 
  7780  0F6C                     	;# 
  7781  0F6D                     	;# 
  7782  0FE4                     	;# 
  7783  0FE5                     	;# 
  7784  0FE6                     	;# 
  7785  0FE7                     	;# 
  7786  0FE8                     	;# 
  7787  0FE9                     	;# 
  7788  0FEA                     	;# 
  7789  0FEB                     	;# 
  7790  0FED                     	;# 
  7791  0FEE                     	;# 
  7792  0FEF                     	;# 
  7793  0000                     	;# 
  7794  0001                     	;# 
  7795  0002                     	;# 
  7796  0003                     	;# 
  7797  0004                     	;# 
  7798  0005                     	;# 
  7799  0006                     	;# 
  7800  0007                     	;# 
  7801  0008                     	;# 
  7802  0009                     	;# 
  7803  000A                     	;# 
  7804  000B                     	;# 
  7805  000C                     	;# 
  7806  000D                     	;# 
  7807  000E                     	;# 
  7808  000F                     	;# 
  7809  0010                     	;# 
  7810  0011                     	;# 
  7811  0012                     	;# 
  7812  0013                     	;# 
  7813  0014                     	;# 
  7814  0015                     	;# 
  7815  0016                     	;# 
  7816  0017                     	;# 
  7817  0018                     	;# 
  7818  0019                     	;# 
  7819  001A                     	;# 
  7820  001C                     	;# 
  7821  001C                     	;# 
  7822  001D                     	;# 
  7823  001D                     	;# 
  7824  001E                     	;# 
  7825  001F                     	;# 
  7826  008C                     	;# 
  7827  008C                     	;# 
  7828  008D                     	;# 
  7829  008E                     	;# 
  7830  008E                     	;# 
  7831  008F                     	;# 
  7832  0090                     	;# 
  7833  0090                     	;# 
  7834  0091                     	;# 
  7835  0093                     	;# 
  7836  0094                     	;# 
  7837  0095                     	;# 
  7838  0096                     	;# 
  7839  0097                     	;# 
  7840  0098                     	;# 
  7841  0099                     	;# 
  7842  009A                     	;# 
  7843  009B                     	;# 
  7844  009C                     	;# 
  7845  009D                     	;# 
  7846  009E                     	;# 
  7847  010C                     	;# 
  7848  010D                     	;# 
  7849  010E                     	;# 
  7850  010E                     	;# 
  7851  010F                     	;# 
  7852  0110                     	;# 
  7853  0110                     	;# 
  7854  0111                     	;# 
  7855  0112                     	;# 
  7856  0112                     	;# 
  7857  0113                     	;# 
  7858  0114                     	;# 
  7859  0114                     	;# 
  7860  0115                     	;# 
  7861  0116                     	;# 
  7862  0116                     	;# 
  7863  0117                     	;# 
  7864  0119                     	;# 
  7865  0119                     	;# 
  7866  0119                     	;# 
  7867  011A                     	;# 
  7868  011A                     	;# 
  7869  011A                     	;# 
  7870  011B                     	;# 
  7871  011B                     	;# 
  7872  011B                     	;# 
  7873  011B                     	;# 
  7874  011B                     	;# 
  7875  011C                     	;# 
  7876  011C                     	;# 
  7877  011C                     	;# 
  7878  011D                     	;# 
  7879  011D                     	;# 
  7880  011D                     	;# 
  7881  011E                     	;# 
  7882  011E                     	;# 
  7883  011E                     	;# 
  7884  011F                     	;# 
  7885  011F                     	;# 
  7886  011F                     	;# 
  7887  011F                     	;# 
  7888  011F                     	;# 
  7889  018C                     	;# 
  7890  018D                     	;# 
  7891  018E                     	;# 
  7892  018F                     	;# 
  7893  0190                     	;# 
  7894  0191                     	;# 
  7895  0192                     	;# 
  7896  0196                     	;# 
  7897  0197                     	;# 
  7898  0198                     	;# 
  7899  0199                     	;# 
  7900  019A                     	;# 
  7901  019B                     	;# 
  7902  019C                     	;# 
  7903  020C                     	;# 
  7904  020C                     	;# 
  7905  020D                     	;# 
  7906  020E                     	;# 
  7907  020F                     	;# 
  7908  020F                     	;# 
  7909  0210                     	;# 
  7910  0210                     	;# 
  7911  0211                     	;# 
  7912  0211                     	;# 
  7913  0212                     	;# 
  7914  0212                     	;# 
  7915  0213                     	;# 
  7916  0214                     	;# 
  7917  0215                     	;# 
  7918  0215                     	;# 
  7919  0216                     	;# 
  7920  0216                     	;# 
  7921  0217                     	;# 
  7922  0217                     	;# 
  7923  0218                     	;# 
  7924  0218                     	;# 
  7925  0219                     	;# 
  7926  021A                     	;# 
  7927  021B                     	;# 
  7928  021B                     	;# 
  7929  021C                     	;# 
  7930  021C                     	;# 
  7931  021D                     	;# 
  7932  021D                     	;# 
  7933  021E                     	;# 
  7934  021F                     	;# 
  7935  028C                     	;# 
  7936  028C                     	;# 
  7937  028D                     	;# 
  7938  028D                     	;# 
  7939  028E                     	;# 
  7940  028F                     	;# 
  7941  0290                     	;# 
  7942  0290                     	;# 
  7943  0291                     	;# 
  7944  0292                     	;# 
  7945  0292                     	;# 
  7946  0293                     	;# 
  7947  0293                     	;# 
  7948  0294                     	;# 
  7949  0295                     	;# 
  7950  0296                     	;# 
  7951  0296                     	;# 
  7952  0297                     	;# 
  7953  0298                     	;# 
  7954  0298                     	;# 
  7955  0299                     	;# 
  7956  0299                     	;# 
  7957  029A                     	;# 
  7958  029B                     	;# 
  7959  029C                     	;# 
  7960  029C                     	;# 
  7961  029D                     	;# 
  7962  030C                     	;# 
  7963  030C                     	;# 
  7964  030D                     	;# 
  7965  030E                     	;# 
  7966  030F                     	;# 
  7967  0310                     	;# 
  7968  0310                     	;# 
  7969  0311                     	;# 
  7970  0312                     	;# 
  7971  0313                     	;# 
  7972  0314                     	;# 
  7973  0314                     	;# 
  7974  0315                     	;# 
  7975  0316                     	;# 
  7976  0317                     	;# 
  7977  0318                     	;# 
  7978  0318                     	;# 
  7979  0319                     	;# 
  7980  031A                     	;# 
  7981  031B                     	;# 
  7982  031C                     	;# 
  7983  031C                     	;# 
  7984  031D                     	;# 
  7985  031E                     	;# 
  7986  031F                     	;# 
  7987  038C                     	;# 
  7988  038C                     	;# 
  7989  038D                     	;# 
  7990  038E                     	;# 
  7991  0390                     	;# 
  7992  0390                     	;# 
  7993  0391                     	;# 
  7994  0392                     	;# 
  7995  040C                     	;# 
  7996  040D                     	;# 
  7997  040E                     	;# 
  7998  040F                     	;# 
  7999  0410                     	;# 
  8000  0411                     	;# 
  8001  0416                     	;# 
  8002  0416                     	;# 
  8003  0417                     	;# 
  8004  0418                     	;# 
  8005  0418                     	;# 
  8006  0419                     	;# 
  8007  041A                     	;# 
  8008  041A                     	;# 
  8009  041B                     	;# 
  8010  041C                     	;# 
  8011  041C                     	;# 
  8012  041D                     	;# 
  8013  041E                     	;# 
  8014  041F                     	;# 
  8015  048C                     	;# 
  8016  048C                     	;# 
  8017  048D                     	;# 
  8018  048E                     	;# 
  8019  048F                     	;# 
  8020  048F                     	;# 
  8021  0490                     	;# 
  8022  0491                     	;# 
  8023  0492                     	;# 
  8024  0492                     	;# 
  8025  0493                     	;# 
  8026  0494                     	;# 
  8027  0495                     	;# 
  8028  0495                     	;# 
  8029  0496                     	;# 
  8030  0497                     	;# 
  8031  0498                     	;# 
  8032  0499                     	;# 
  8033  049A                     	;# 
  8034  049B                     	;# 
  8035  049C                     	;# 
  8036  049D                     	;# 
  8037  050C                     	;# 
  8038  050C                     	;# 
  8039  050D                     	;# 
  8040  050E                     	;# 
  8041  050F                     	;# 
  8042  050F                     	;# 
  8043  0510                     	;# 
  8044  0511                     	;# 
  8045  0512                     	;# 
  8046  0512                     	;# 
  8047  0513                     	;# 
  8048  0514                     	;# 
  8049  0515                     	;# 
  8050  0515                     	;# 
  8051  0516                     	;# 
  8052  0517                     	;# 
  8053  0518                     	;# 
  8054  0519                     	;# 
  8055  051A                     	;# 
  8056  051B                     	;# 
  8057  051C                     	;# 
  8058  051D                     	;# 
  8059  058C                     	;# 
  8060  058C                     	;# 
  8061  058D                     	;# 
  8062  058E                     	;# 
  8063  058F                     	;# 
  8064  058F                     	;# 
  8065  0590                     	;# 
  8066  0591                     	;# 
  8067  0592                     	;# 
  8068  0593                     	;# 
  8069  060C                     	;# 
  8070  060D                     	;# 
  8071  060E                     	;# 
  8072  060F                     	;# 
  8073  0610                     	;# 
  8074  0611                     	;# 
  8075  0612                     	;# 
  8076  0613                     	;# 
  8077  0614                     	;# 
  8078  0616                     	;# 
  8079  0617                     	;# 
  8080  0618                     	;# 
  8081  0619                     	;# 
  8082  061A                     	;# 
  8083  061B                     	;# 
  8084  061C                     	;# 
  8085  061D                     	;# 
  8086  061E                     	;# 
  8087  068C                     	;# 
  8088  068D                     	;# 
  8089  068E                     	;# 
  8090  068F                     	;# 
  8091  0690                     	;# 
  8092  0691                     	;# 
  8093  0692                     	;# 
  8094  0693                     	;# 
  8095  0694                     	;# 
  8096  070C                     	;# 
  8097  070D                     	;# 
  8098  070E                     	;# 
  8099  070F                     	;# 
  8100  0710                     	;# 
  8101  0711                     	;# 
  8102  0712                     	;# 
  8103  0713                     	;# 
  8104  0714                     	;# 
  8105  0716                     	;# 
  8106  0717                     	;# 
  8107  0718                     	;# 
  8108  0719                     	;# 
  8109  071A                     	;# 
  8110  071B                     	;# 
  8111  071C                     	;# 
  8112  071D                     	;# 
  8113  071E                     	;# 
  8114  0796                     	;# 
  8115  0797                     	;# 
  8116  0798                     	;# 
  8117  0799                     	;# 
  8118  079A                     	;# 
  8119  079B                     	;# 
  8120  080C                     	;# 
  8121  080D                     	;# 
  8122  080E                     	;# 
  8123  080F                     	;# 
  8124  0810                     	;# 
  8125  0811                     	;# 
  8126  0812                     	;# 
  8127  0813                     	;# 
  8128  0814                     	;# 
  8129  081A                     	;# 
  8130  081B                     	;# 
  8131  081C                     	;# 
  8132  081D                     	;# 
  8133  081E                     	;# 
  8134  081F                     	;# 
  8135  088C                     	;# 
  8136  088D                     	;# 
  8137  088E                     	;# 
  8138  088F                     	;# 
  8139  0890                     	;# 
  8140  0891                     	;# 
  8141  0892                     	;# 
  8142  0893                     	;# 
  8143  0895                     	;# 
  8144  0896                     	;# 
  8145  0897                     	;# 
  8146  0898                     	;# 
  8147  0899                     	;# 
  8148  089A                     	;# 
  8149  089B                     	;# 
  8150  090C                     	;# 
  8151  090E                     	;# 
  8152  090F                     	;# 
  8153  091F                     	;# 
  8154  091F                     	;# 
  8155  098F                     	;# 
  8156  098F                     	;# 
  8157  0990                     	;# 
  8158  0991                     	;# 
  8159  0992                     	;# 
  8160  0993                     	;# 
  8161  0994                     	;# 
  8162  0995                     	;# 
  8163  0996                     	;# 
  8164  0997                     	;# 
  8165  0E0F                     	;# 
  8166  0E10                     	;# 
  8167  0E11                     	;# 
  8168  0E12                     	;# 
  8169  0E13                     	;# 
  8170  0E14                     	;# 
  8171  0E15                     	;# 
  8172  0E16                     	;# 
  8173  0E17                     	;# 
  8174  0E18                     	;# 
  8175  0E19                     	;# 
  8176  0E1A                     	;# 
  8177  0E1B                     	;# 
  8178  0E1C                     	;# 
  8179  0E1D                     	;# 
  8180  0E1E                     	;# 
  8181  0E1F                     	;# 
  8182  0E20                     	;# 
  8183  0E21                     	;# 
  8184  0E22                     	;# 
  8185  0E23                     	;# 
  8186  0E24                     	;# 
  8187  0E25                     	;# 
  8188  0E26                     	;# 
  8189  0E27                     	;# 
  8190  0E28                     	;# 
  8191  0E29                     	;# 
  8192  0E2A                     	;# 
  8193  0E2B                     	;# 
  8194  0E2C                     	;# 
  8195  0E2D                     	;# 
  8196  0E2E                     	;# 
  8197  0E2F                     	;# 
  8198  0E30                     	;# 
  8199  0E31                     	;# 
  8200  0E32                     	;# 
  8201  0E33                     	;# 
  8202  0E34                     	;# 
  8203  0E35                     	;# 
  8204  0E36                     	;# 
  8205  0E37                     	;# 
  8206  0E8F                     	;# 
  8207  0E90                     	;# 
  8208  0E91                     	;# 
  8209  0E92                     	;# 
  8210  0E93                     	;# 
  8211  0E94                     	;# 
  8212  0E95                     	;# 
  8213  0E96                     	;# 
  8214  0E97                     	;# 
  8215  0E9C                     	;# 
  8216  0E9D                     	;# 
  8217  0E9E                     	;# 
  8218  0EA1                     	;# 
  8219  0EA2                     	;# 
  8220  0EA3                     	;# 
  8221  0EA4                     	;# 
  8222  0EA5                     	;# 
  8223  0EA9                     	;# 
  8224  0EAA                     	;# 
  8225  0EAB                     	;# 
  8226  0EAC                     	;# 
  8227  0EB1                     	;# 
  8228  0EB2                     	;# 
  8229  0EB3                     	;# 
  8230  0EB8                     	;# 
  8231  0EB9                     	;# 
  8232  0EBA                     	;# 
  8233  0EBB                     	;# 
  8234  0EBC                     	;# 
  8235  0EBD                     	;# 
  8236  0EBE                     	;# 
  8237  0EC3                     	;# 
  8238  0EC5                     	;# 
  8239  0EC6                     	;# 
  8240  0EC7                     	;# 
  8241  0EC8                     	;# 
  8242  0EC9                     	;# 
  8243  0ECA                     	;# 
  8244  0ECB                     	;# 
  8245  0ECC                     	;# 
  8246  0F10                     	;# 
  8247  0F11                     	;# 
  8248  0F12                     	;# 
  8249  0F13                     	;# 
  8250  0F14                     	;# 
  8251  0F15                     	;# 
  8252  0F16                     	;# 
  8253  0F17                     	;# 
  8254  0F18                     	;# 
  8255  0F19                     	;# 
  8256  0F1A                     	;# 
  8257  0F1B                     	;# 
  8258  0F1C                     	;# 
  8259  0F1D                     	;# 
  8260  0F1E                     	;# 
  8261  0F1F                     	;# 
  8262  0F20                     	;# 
  8263  0F21                     	;# 
  8264  0F22                     	;# 
  8265  0F23                     	;# 
  8266  0F24                     	;# 
  8267  0F25                     	;# 
  8268  0F26                     	;# 
  8269  0F27                     	;# 
  8270  0F28                     	;# 
  8271  0F29                     	;# 
  8272  0F2A                     	;# 
  8273  0F2B                     	;# 
  8274  0F2C                     	;# 
  8275  0F2D                     	;# 
  8276  0F2E                     	;# 
  8277  0F2F                     	;# 
  8278  0F30                     	;# 
  8279  0F31                     	;# 
  8280  0F32                     	;# 
  8281  0F38                     	;# 
  8282  0F39                     	;# 
  8283  0F3A                     	;# 
  8284  0F3B                     	;# 
  8285  0F3C                     	;# 
  8286  0F3D                     	;# 
  8287  0F3E                     	;# 
  8288  0F3F                     	;# 
  8289  0F40                     	;# 
  8290  0F41                     	;# 
  8291  0F43                     	;# 
  8292  0F44                     	;# 
  8293  0F45                     	;# 
  8294  0F46                     	;# 
  8295  0F47                     	;# 
  8296  0F48                     	;# 
  8297  0F49                     	;# 
  8298  0F4A                     	;# 
  8299  0F4B                     	;# 
  8300  0F4C                     	;# 
  8301  0F4E                     	;# 
  8302  0F4F                     	;# 
  8303  0F50                     	;# 
  8304  0F51                     	;# 
  8305  0F52                     	;# 
  8306  0F53                     	;# 
  8307  0F54                     	;# 
  8308  0F55                     	;# 
  8309  0F56                     	;# 
  8310  0F57                     	;# 
  8311  0F59                     	;# 
  8312  0F5A                     	;# 
  8313  0F5B                     	;# 
  8314  0F5C                     	;# 
  8315  0F5D                     	;# 
  8316  0F61                     	;# 
  8317  0F62                     	;# 
  8318  0F64                     	;# 
  8319  0F65                     	;# 
  8320  0F66                     	;# 
  8321  0F67                     	;# 
  8322  0F68                     	;# 
  8323  0F69                     	;# 
  8324  0F6A                     	;# 
  8325  0F6B                     	;# 
  8326  0F6C                     	;# 
  8327  0F6D                     	;# 
  8328  0FE4                     	;# 
  8329  0FE5                     	;# 
  8330  0FE6                     	;# 
  8331  0FE7                     	;# 
  8332  0FE8                     	;# 
  8333  0FE9                     	;# 
  8334  0FEA                     	;# 
  8335  0FEB                     	;# 
  8336  0FED                     	;# 
  8337  0FEE                     	;# 
  8338  0FEF                     	;# 
  8339  0000                     	;# 
  8340  0001                     	;# 
  8341  0002                     	;# 
  8342  0003                     	;# 
  8343  0004                     	;# 
  8344  0005                     	;# 
  8345  0006                     	;# 
  8346  0007                     	;# 
  8347  0008                     	;# 
  8348  0009                     	;# 
  8349  000A                     	;# 
  8350  000B                     	;# 
  8351  000C                     	;# 
  8352  000D                     	;# 
  8353  000E                     	;# 
  8354  000F                     	;# 
  8355  0010                     	;# 
  8356  0011                     	;# 
  8357  0012                     	;# 
  8358  0013                     	;# 
  8359  0014                     	;# 
  8360  0015                     	;# 
  8361  0016                     	;# 
  8362  0017                     	;# 
  8363  0018                     	;# 
  8364  0019                     	;# 
  8365  001A                     	;# 
  8366  001C                     	;# 
  8367  001C                     	;# 
  8368  001D                     	;# 
  8369  001D                     	;# 
  8370  001E                     	;# 
  8371  001F                     	;# 
  8372  008C                     	;# 
  8373  008C                     	;# 
  8374  008D                     	;# 
  8375  008E                     	;# 
  8376  008E                     	;# 
  8377  008F                     	;# 
  8378  0090                     	;# 
  8379  0090                     	;# 
  8380  0091                     	;# 
  8381  0093                     	;# 
  8382  0094                     	;# 
  8383  0095                     	;# 
  8384  0096                     	;# 
  8385  0097                     	;# 
  8386  0098                     	;# 
  8387  0099                     	;# 
  8388  009A                     	;# 
  8389  009B                     	;# 
  8390  009C                     	;# 
  8391  009D                     	;# 
  8392  009E                     	;# 
  8393  010C                     	;# 
  8394  010D                     	;# 
  8395  010E                     	;# 
  8396  010E                     	;# 
  8397  010F                     	;# 
  8398  0110                     	;# 
  8399  0110                     	;# 
  8400  0111                     	;# 
  8401  0112                     	;# 
  8402  0112                     	;# 
  8403  0113                     	;# 
  8404  0114                     	;# 
  8405  0114                     	;# 
  8406  0115                     	;# 
  8407  0116                     	;# 
  8408  0116                     	;# 
  8409  0117                     	;# 
  8410  0119                     	;# 
  8411  0119                     	;# 
  8412  0119                     	;# 
  8413  011A                     	;# 
  8414  011A                     	;# 
  8415  011A                     	;# 
  8416  011B                     	;# 
  8417  011B                     	;# 
  8418  011B                     	;# 
  8419  011B                     	;# 
  8420  011B                     	;# 
  8421  011C                     	;# 
  8422  011C                     	;# 
  8423  011C                     	;# 
  8424  011D                     	;# 
  8425  011D                     	;# 
  8426  011D                     	;# 
  8427  011E                     	;# 
  8428  011E                     	;# 
  8429  011E                     	;# 
  8430  011F                     	;# 
  8431  011F                     	;# 
  8432  011F                     	;# 
  8433  011F                     	;# 
  8434  011F                     	;# 
  8435  018C                     	;# 
  8436  018D                     	;# 
  8437  018E                     	;# 
  8438  018F                     	;# 
  8439  0190                     	;# 
  8440  0191                     	;# 
  8441  0192                     	;# 
  8442  0196                     	;# 
  8443  0197                     	;# 
  8444  0198                     	;# 
  8445  0199                     	;# 
  8446  019A                     	;# 
  8447  019B                     	;# 
  8448  019C                     	;# 
  8449  020C                     	;# 
  8450  020C                     	;# 
  8451  020D                     	;# 
  8452  020E                     	;# 
  8453  020F                     	;# 
  8454  020F                     	;# 
  8455  0210                     	;# 
  8456  0210                     	;# 
  8457  0211                     	;# 
  8458  0211                     	;# 
  8459  0212                     	;# 
  8460  0212                     	;# 
  8461  0213                     	;# 
  8462  0214                     	;# 
  8463  0215                     	;# 
  8464  0215                     	;# 
  8465  0216                     	;# 
  8466  0216                     	;# 
  8467  0217                     	;# 
  8468  0217                     	;# 
  8469  0218                     	;# 
  8470  0218                     	;# 
  8471  0219                     	;# 
  8472  021A                     	;# 
  8473  021B                     	;# 
  8474  021B                     	;# 
  8475  021C                     	;# 
  8476  021C                     	;# 
  8477  021D                     	;# 
  8478  021D                     	;# 
  8479  021E                     	;# 
  8480  021F                     	;# 
  8481  028C                     	;# 
  8482  028C                     	;# 
  8483  028D                     	;# 
  8484  028D                     	;# 
  8485  028E                     	;# 
  8486  028F                     	;# 
  8487  0290                     	;# 
  8488  0290                     	;# 
  8489  0291                     	;# 
  8490  0292                     	;# 
  8491  0292                     	;# 
  8492  0293                     	;# 
  8493  0293                     	;# 
  8494  0294                     	;# 
  8495  0295                     	;# 
  8496  0296                     	;# 
  8497  0296                     	;# 
  8498  0297                     	;# 
  8499  0298                     	;# 
  8500  0298                     	;# 
  8501  0299                     	;# 
  8502  0299                     	;# 
  8503  029A                     	;# 
  8504  029B                     	;# 
  8505  029C                     	;# 
  8506  029C                     	;# 
  8507  029D                     	;# 
  8508  030C                     	;# 
  8509  030C                     	;# 
  8510  030D                     	;# 
  8511  030E                     	;# 
  8512  030F                     	;# 
  8513  0310                     	;# 
  8514  0310                     	;# 
  8515  0311                     	;# 
  8516  0312                     	;# 
  8517  0313                     	;# 
  8518  0314                     	;# 
  8519  0314                     	;# 
  8520  0315                     	;# 
  8521  0316                     	;# 
  8522  0317                     	;# 
  8523  0318                     	;# 
  8524  0318                     	;# 
  8525  0319                     	;# 
  8526  031A                     	;# 
  8527  031B                     	;# 
  8528  031C                     	;# 
  8529  031C                     	;# 
  8530  031D                     	;# 
  8531  031E                     	;# 
  8532  031F                     	;# 
  8533  038C                     	;# 
  8534  038C                     	;# 
  8535  038D                     	;# 
  8536  038E                     	;# 
  8537  0390                     	;# 
  8538  0390                     	;# 
  8539  0391                     	;# 
  8540  0392                     	;# 
  8541  040C                     	;# 
  8542  040D                     	;# 
  8543  040E                     	;# 
  8544  040F                     	;# 
  8545  0410                     	;# 
  8546  0411                     	;# 
  8547  0416                     	;# 
  8548  0416                     	;# 
  8549  0417                     	;# 
  8550  0418                     	;# 
  8551  0418                     	;# 
  8552  0419                     	;# 
  8553  041A                     	;# 
  8554  041A                     	;# 
  8555  041B                     	;# 
  8556  041C                     	;# 
  8557  041C                     	;# 
  8558  041D                     	;# 
  8559  041E                     	;# 
  8560  041F                     	;# 
  8561  048C                     	;# 
  8562  048C                     	;# 
  8563  048D                     	;# 
  8564  048E                     	;# 
  8565  048F                     	;# 
  8566  048F                     	;# 
  8567  0490                     	;# 
  8568  0491                     	;# 
  8569  0492                     	;# 
  8570  0492                     	;# 
  8571  0493                     	;# 
  8572  0494                     	;# 
  8573  0495                     	;# 
  8574  0495                     	;# 
  8575  0496                     	;# 
  8576  0497                     	;# 
  8577  0498                     	;# 
  8578  0499                     	;# 
  8579  049A                     	;# 
  8580  049B                     	;# 
  8581  049C                     	;# 
  8582  049D                     	;# 
  8583  050C                     	;# 
  8584  050C                     	;# 
  8585  050D                     	;# 
  8586  050E                     	;# 
  8587  050F                     	;# 
  8588  050F                     	;# 
  8589  0510                     	;# 
  8590  0511                     	;# 
  8591  0512                     	;# 
  8592  0512                     	;# 
  8593  0513                     	;# 
  8594  0514                     	;# 
  8595  0515                     	;# 
  8596  0515                     	;# 
  8597  0516                     	;# 
  8598  0517                     	;# 
  8599  0518                     	;# 
  8600  0519                     	;# 
  8601  051A                     	;# 
  8602  051B                     	;# 
  8603  051C                     	;# 
  8604  051D                     	;# 
  8605  058C                     	;# 
  8606  058C                     	;# 
  8607  058D                     	;# 
  8608  058E                     	;# 
  8609  058F                     	;# 
  8610  058F                     	;# 
  8611  0590                     	;# 
  8612  0591                     	;# 
  8613  0592                     	;# 
  8614  0593                     	;# 
  8615  060C                     	;# 
  8616  060D                     	;# 
  8617  060E                     	;# 
  8618  060F                     	;# 
  8619  0610                     	;# 
  8620  0611                     	;# 
  8621  0612                     	;# 
  8622  0613                     	;# 
  8623  0614                     	;# 
  8624  0616                     	;# 
  8625  0617                     	;# 
  8626  0618                     	;# 
  8627  0619                     	;# 
  8628  061A                     	;# 
  8629  061B                     	;# 
  8630  061C                     	;# 
  8631  061D                     	;# 
  8632  061E                     	;# 
  8633  068C                     	;# 
  8634  068D                     	;# 
  8635  068E                     	;# 
  8636  068F                     	;# 
  8637  0690                     	;# 
  8638  0691                     	;# 
  8639  0692                     	;# 
  8640  0693                     	;# 
  8641  0694                     	;# 
  8642  070C                     	;# 
  8643  070D                     	;# 
  8644  070E                     	;# 
  8645  070F                     	;# 
  8646  0710                     	;# 
  8647  0711                     	;# 
  8648  0712                     	;# 
  8649  0713                     	;# 
  8650  0714                     	;# 
  8651  0716                     	;# 
  8652  0717                     	;# 
  8653  0718                     	;# 
  8654  0719                     	;# 
  8655  071A                     	;# 
  8656  071B                     	;# 
  8657  071C                     	;# 
  8658  071D                     	;# 
  8659  071E                     	;# 
  8660  0796                     	;# 
  8661  0797                     	;# 
  8662  0798                     	;# 
  8663  0799                     	;# 
  8664  079A                     	;# 
  8665  079B                     	;# 
  8666  080C                     	;# 
  8667  080D                     	;# 
  8668  080E                     	;# 
  8669  080F                     	;# 
  8670  0810                     	;# 
  8671  0811                     	;# 
  8672  0812                     	;# 
  8673  0813                     	;# 
  8674  0814                     	;# 
  8675  081A                     	;# 
  8676  081B                     	;# 
  8677  081C                     	;# 
  8678  081D                     	;# 
  8679  081E                     	;# 
  8680  081F                     	;# 
  8681  088C                     	;# 
  8682  088D                     	;# 
  8683  088E                     	;# 
  8684  088F                     	;# 
  8685  0890                     	;# 
  8686  0891                     	;# 
  8687  0892                     	;# 
  8688  0893                     	;# 
  8689  0895                     	;# 
  8690  0896                     	;# 
  8691  0897                     	;# 
  8692  0898                     	;# 
  8693  0899                     	;# 
  8694  089A                     	;# 
  8695  089B                     	;# 
  8696  090C                     	;# 
  8697  090E                     	;# 
  8698  090F                     	;# 
  8699  091F                     	;# 
  8700  091F                     	;# 
  8701  098F                     	;# 
  8702  098F                     	;# 
  8703  0990                     	;# 
  8704  0991                     	;# 
  8705  0992                     	;# 
  8706  0993                     	;# 
  8707  0994                     	;# 
  8708  0995                     	;# 
  8709  0996                     	;# 
  8710  0997                     	;# 
  8711  0E0F                     	;# 
  8712  0E10                     	;# 
  8713  0E11                     	;# 
  8714  0E12                     	;# 
  8715  0E13                     	;# 
  8716  0E14                     	;# 
  8717  0E15                     	;# 
  8718  0E16                     	;# 
  8719  0E17                     	;# 
  8720  0E18                     	;# 
  8721  0E19                     	;# 
  8722  0E1A                     	;# 
  8723  0E1B                     	;# 
  8724  0E1C                     	;# 
  8725  0E1D                     	;# 
  8726  0E1E                     	;# 
  8727  0E1F                     	;# 
  8728  0E20                     	;# 
  8729  0E21                     	;# 
  8730  0E22                     	;# 
  8731  0E23                     	;# 
  8732  0E24                     	;# 
  8733  0E25                     	;# 
  8734  0E26                     	;# 
  8735  0E27                     	;# 
  8736  0E28                     	;# 
  8737  0E29                     	;# 
  8738  0E2A                     	;# 
  8739  0E2B                     	;# 
  8740  0E2C                     	;# 
  8741  0E2D                     	;# 
  8742  0E2E                     	;# 
  8743  0E2F                     	;# 
  8744  0E30                     	;# 
  8745  0E31                     	;# 
  8746  0E32                     	;# 
  8747  0E33                     	;# 
  8748  0E34                     	;# 
  8749  0E35                     	;# 
  8750  0E36                     	;# 
  8751  0E37                     	;# 
  8752  0E8F                     	;# 
  8753  0E90                     	;# 
  8754  0E91                     	;# 
  8755  0E92                     	;# 
  8756  0E93                     	;# 
  8757  0E94                     	;# 
  8758  0E95                     	;# 
  8759  0E96                     	;# 
  8760  0E97                     	;# 
  8761  0E9C                     	;# 
  8762  0E9D                     	;# 
  8763  0E9E                     	;# 
  8764  0EA1                     	;# 
  8765  0EA2                     	;# 
  8766  0EA3                     	;# 
  8767  0EA4                     	;# 
  8768  0EA5                     	;# 
  8769  0EA9                     	;# 
  8770  0EAA                     	;# 
  8771  0EAB                     	;# 
  8772  0EAC                     	;# 
  8773  0EB1                     	;# 
  8774  0EB2                     	;# 
  8775  0EB3                     	;# 
  8776  0EB8                     	;# 
  8777  0EB9                     	;# 
  8778  0EBA                     	;# 
  8779  0EBB                     	;# 
  8780  0EBC                     	;# 
  8781  0EBD                     	;# 
  8782  0EBE                     	;# 
  8783  0EC3                     	;# 
  8784  0EC5                     	;# 
  8785  0EC6                     	;# 
  8786  0EC7                     	;# 
  8787  0EC8                     	;# 
  8788  0EC9                     	;# 
  8789  0ECA                     	;# 
  8790  0ECB                     	;# 
  8791  0ECC                     	;# 
  8792  0F10                     	;# 
  8793  0F11                     	;# 
  8794  0F12                     	;# 
  8795  0F13                     	;# 
  8796  0F14                     	;# 
  8797  0F15                     	;# 
  8798  0F16                     	;# 
  8799  0F17                     	;# 
  8800  0F18                     	;# 
  8801  0F19                     	;# 
  8802  0F1A                     	;# 
  8803  0F1B                     	;# 
  8804  0F1C                     	;# 
  8805  0F1D                     	;# 
  8806  0F1E                     	;# 
  8807  0F1F                     	;# 
  8808  0F20                     	;# 
  8809  0F21                     	;# 
  8810  0F22                     	;# 
  8811  0F23                     	;# 
  8812  0F24                     	;# 
  8813  0F25                     	;# 
  8814  0F26                     	;# 
  8815  0F27                     	;# 
  8816  0F28                     	;# 
  8817  0F29                     	;# 
  8818  0F2A                     	;# 
  8819  0F2B                     	;# 
  8820  0F2C                     	;# 
  8821  0F2D                     	;# 
  8822  0F2E                     	;# 
  8823  0F2F                     	;# 
  8824  0F30                     	;# 
  8825  0F31                     	;# 
  8826  0F32                     	;# 
  8827  0F38                     	;# 
  8828  0F39                     	;# 
  8829  0F3A                     	;# 
  8830  0F3B                     	;# 
  8831  0F3C                     	;# 
  8832  0F3D                     	;# 
  8833  0F3E                     	;# 
  8834  0F3F                     	;# 
  8835  0F40                     	;# 
  8836  0F41                     	;# 
  8837  0F43                     	;# 
  8838  0F44                     	;# 
  8839  0F45                     	;# 
  8840  0F46                     	;# 
  8841  0F47                     	;# 
  8842  0F48                     	;# 
  8843  0F49                     	;# 
  8844  0F4A                     	;# 
  8845  0F4B                     	;# 
  8846  0F4C                     	;# 
  8847  0F4E                     	;# 
  8848  0F4F                     	;# 
  8849  0F50                     	;# 
  8850  0F51                     	;# 
  8851  0F52                     	;# 
  8852  0F53                     	;# 
  8853  0F54                     	;# 
  8854  0F55                     	;# 
  8855  0F56                     	;# 
  8856  0F57                     	;# 
  8857  0F59                     	;# 
  8858  0F5A                     	;# 
  8859  0F5B                     	;# 
  8860  0F5C                     	;# 
  8861  0F5D                     	;# 
  8862  0F61                     	;# 
  8863  0F62                     	;# 
  8864  0F64                     	;# 
  8865  0F65                     	;# 
  8866  0F66                     	;# 
  8867  0F67                     	;# 
  8868  0F68                     	;# 
  8869  0F69                     	;# 
  8870  0F6A                     	;# 
  8871  0F6B                     	;# 
  8872  0F6C                     	;# 
  8873  0F6D                     	;# 
  8874  0FE4                     	;# 
  8875  0FE5                     	;# 
  8876  0FE6                     	;# 
  8877  0FE7                     	;# 
  8878  0FE8                     	;# 
  8879  0FE9                     	;# 
  8880  0FEA                     	;# 
  8881  0FEB                     	;# 
  8882  0FED                     	;# 
  8883  0FEE                     	;# 
  8884  0FEF                     	;# 
  8885                           
  8886                           	psect	idataBANK0
  8887  0EB8                     __pidataBANK0:	
  8888                           
  8889                           ;initializer for _mode_field_subfield
  8890  0EB8  34FF               	retlw	255
  8891  0EB9  34FF               	retlw	255
  8892  0EBA  34FF               	retlw	255
  8893  0EBB  34FF               	retlw	255
  8894                           
  8895                           ;initializer for _tala
  8896  0EBC  3403               	retlw	3
  8897                           
  8898                           ;initializer for _pmon
  8899  0EBD  3405               	retlw	5
  8900                           
  8901                           ;initializer for _nreg
  8902  0EBE  341E               	retlw	30
  8903                           
  8904                           	psect	stringtext1
  8905  0664                     __pstringtext1:	
  8906  0664                     _fsmStateTable:	
  8907  0664  345E               	retlw	low _do_I2C_IDLE
  8908  0665  340E               	retlw	high _do_I2C_IDLE
  8909  0666  34E7               	retlw	low _do_I2C_SEND_ADR_READ
  8910  0667  340E               	retlw	high _do_I2C_SEND_ADR_READ
  8911  0668  34CF               	retlw	low _do_I2C_SEND_ADR_WRITE
  8912  0669  340E               	retlw	high _do_I2C_SEND_ADR_WRITE
  8913  066A  342B               	retlw	low _do_I2C_TX
  8914  066B  3403               	retlw	high _do_I2C_TX
  8915  066C  3466               	retlw	low _do_I2C_RX
  8916  066D  3404               	retlw	high _do_I2C_RX
  8917  066E  34AA               	retlw	low _do_I2C_RCEN
  8918  066F  340E               	retlw	high _do_I2C_RCEN
  8919  0670  3439               	retlw	low _do_I2C_TX_EMPTY
  8920  0671  3405               	retlw	high _do_I2C_TX_EMPTY
  8921  0672  3463               	retlw	low _do_I2C_SEND_RESTART_READ
  8922  0673  340E               	retlw	high _do_I2C_SEND_RESTART_READ
  8923  0674  3468               	retlw	low _do_I2C_SEND_RESTART_WRITE
  8924  0675  340E               	retlw	high _do_I2C_SEND_RESTART_WRITE
  8925  0676  346D               	retlw	low _do_I2C_SEND_RESTART
  8926  0677  340E               	retlw	high _do_I2C_SEND_RESTART
  8927  0678  3472               	retlw	low _do_I2C_SEND_STOP
  8928  0679  340E               	retlw	high _do_I2C_SEND_STOP
  8929  067A  3477               	retlw	low _do_I2C_DO_ACK
  8930  067B  340E               	retlw	high _do_I2C_DO_ACK
  8931  067C  347C               	retlw	low _do_I2C_DO_NACK_STOP
  8932  067D  340E               	retlw	high _do_I2C_DO_NACK_STOP
  8933  067E  3481               	retlw	low _do_I2C_DO_NACK_RESTART
  8934  067F  340E               	retlw	high _do_I2C_DO_NACK_RESTART
  8935  0680  34C7               	retlw	low _do_I2C_RESET
  8936  0681  340E               	retlw	high _do_I2C_RESET
  8937  0682  34C6               	retlw	low _do_I2C_DO_ADDRESS_NACK
  8938  0683  3405               	retlw	high _do_I2C_DO_ADDRESS_NACK
  8939  0684                     __end_of_fsmStateTable:	
  8940                           
  8941                           	psect	nvBANK0
  8942  004D                     __pnvBANK0:	
  8943  004D                     _TMR0_InterruptHandler:	
  8944  004D                     	ds	2
  8945  004F                     _TMR2_InterruptHandler:	
  8946  004F                     	ds	2
  8947  0051                     _TMR1_InterruptHandler:	
  8948  0051                     	ds	2
  8949  0053                     _timer1ReloadVal:	
  8950  0053                     	ds	2
  8951  0055                     _INT_InterruptHandler:	
  8952  0055                     	ds	2
  8953  001E                     _T0CON0bits	set	30
  8954  001E                     _T0CON0	set	30
  8955  001C                     _TMR0L	set	28
  8956  001D                     _TMR0H	set	29
  8957  001F                     _T0CON1	set	31
  8958  0013                     _TRISCbits	set	19
  8959  000E                     _PORTCbits	set	14
  8960  000D                     _PORTBbits	set	13
  8961  0016                     _LATAbits	set	22
  8962  0014                     _TRISD	set	20
  8963  0013                     _TRISC	set	19
  8964  0012                     _TRISB	set	18
  8965  0011                     _TRISA	set	17
  8966  0015                     _TRISE	set	21
  8967  0018                     _LATC	set	24
  8968  0017                     _LATB	set	23
  8969  0016                     _LATA	set	22
  8970  0019                     _LATD	set	25
  8971  001A                     _LATE	set	26
  8972  000B                     _INTCONbits	set	11
  8973  0094                     _ADCON1bits	set	148
  8974  008E                     _ADPREVL	set	142
  8975  008F                     _ADPREVH	set	143
  8976  0097                     _ADSTATbits	set	151
  8977  0090                     _ADACCL	set	144
  8978  0091                     _ADACCH	set	145
  8979  0095                     _ADCON2bits	set	149
  8980  009C                     _ADPRE	set	156
  8981  0096                     _ADCON3bits	set	150
  8982  008C                     _ADRESL	set	140
  8983  008D                     _ADRESH	set	141
  8984  0093                     _ADCON0bits	set	147
  8985  009D                     _ADACQ	set	157
  8986  0093                     _ADCON0	set	147
  8987  0098                     _ADCLK	set	152
  8988  0099                     _ADACT	set	153
  8989  009A                     _ADREF	set	154
  8990  0097                     _ADSTAT	set	151
  8991  0096                     _ADCON3	set	150
  8992  0095                     _ADCON2	set	149
  8993  0094                     _ADCON1	set	148
  8994  009B                     _ADCAP	set	155
  8995  009E                     _ADPCH	set	158
  8996  0116                     _ADERRL	set	278
  8997  0117                     _ADERRH	set	279
  8998  0114                     _ADFLTRL	set	276
  8999  0115                     _ADFLTRH	set	277
  9000  010C                     _ADCNT	set	268
  9001  010D                     _ADRPT	set	269
  9002  0113                     _ADSTPTH	set	275
  9003  0112                     _ADSTPTL	set	274
  9004  0111                     _ADUTHH	set	273
  9005  0110                     _ADUTHL	set	272
  9006  010F                     _ADLTHH	set	271
  9007  010E                     _ADLTHL	set	270
  9008  018F                     _SSP1STATbits	set	399
  9009  018E                     _SSP1MSK	set	398
  9010  018C                     _SSP1BUF	set	396
  9011  0191                     _SSP1CON2bits	set	401
  9012  018D                     _SSP1ADD	set	397
  9013  0191                     _SSP1CON2	set	401
  9014  0190                     _SSP1CON1	set	400
  9015  018F                     _SSP1STAT	set	399
  9016  0190                     _SSP1CON1bits	set	400
  9017  021F                     _CCPTMRS1bits	set	543
  9018  020F                     _T1GCONbits	set	527
  9019  020E                     _T1CONbits	set	526
  9020  020E                     _T1CON	set	526
  9021  020C                     _TMR1L	set	524
  9022  020D                     _TMR1H	set	525
  9023  0211                     _T1CLK	set	529
  9024  0210                     _T1GATE	set	528
  9025  020F                     _T1GCON	set	527
  9026  028D                     _PR2	set	653
  9027  028C                     _TMR2	set	652
  9028  028E                     _T2CONbits	set	654
  9029  0291                     _T2RSTbits	set	657
  9030  028F                     _T2HLTbits	set	655
  9031  028E                     _T2CON	set	654
  9032  028C                     _T2TMR	set	652
  9033  028D                     _T2PR	set	653
  9034  0291                     _T2RST	set	657
  9035  028F                     _T2HLT	set	655
  9036  0290                     _T2CLKCON	set	656
  9037  038C                     _PWM6DCL	set	908
  9038  038D                     _PWM6DCH	set	909
  9039  038E                     _PWM6CON	set	910
  9040  0710                     _PIR4bits	set	1808
  9041  071A                     _PIE4bits	set	1818
  9042  070F                     _PIR3bits	set	1807
  9043  0719                     _PIE3bits	set	1817
  9044  0716                     _PIE0bits	set	1814
  9045  070C                     _PIR0bits	set	1804
  9046  079B                     _PMD5	set	1947
  9047  079A                     _PMD4	set	1946
  9048  0799                     _PMD3	set	1945
  9049  0798                     _PMD2	set	1944
  9050  0797                     _PMD1	set	1943
  9051  0796                     _PMD0	set	1942
  9052  081F                     _NVMCON2	set	2079
  9053  081C                     _NVMDATL	set	2076
  9054  081D                     _NVMDATH	set	2077
  9055  081E                     _NVMCON1bits	set	2078
  9056  081B                     _NVMADRH	set	2075
  9057  081A                     _NVMADRL	set	2074
  9058  0892                     _OSCTUNE	set	2194
  9059  0893                     _OSCFRQ	set	2195
  9060  0891                     _OSCEN	set	2193
  9061  088F                     _OSCCON3	set	2191
  9062  088D                     _OSCCON1	set	2189
  9063  0EC6                     _SSP1DATPPS	set	3782
  9064  0EC5                     _SSP1CLKPPS	set	3781
  9065  0E90                     _INTPPS	set	3728
  9066  0F44                     _WPUBbits	set	3908
  9067  0F16                     _RA6PPS	set	3862
  9068  0F24                     _RC4PPS	set	3876
  9069  0F23                     _RC3PPS	set	3875
  9070  0F68                     _INLVLE	set	3944
  9071  0F5D                     _INLVLD	set	3933
  9072  0F52                     _INLVLC	set	3922
  9073  0F47                     _INLVLB	set	3911
  9074  0F3C                     _INLVLA	set	3900
  9075  0F67                     _SLRCONE	set	3943
  9076  0F5C                     _SLRCOND	set	3932
  9077  0F51                     _SLRCONC	set	3921
  9078  0F46                     _SLRCONB	set	3910
  9079  0F3B                     _SLRCONA	set	3899
  9080  0F5B                     _ODCOND	set	3931
  9081  0F50                     _ODCONC	set	3920
  9082  0F45                     _ODCONB	set	3909
  9083  0F3A                     _ODCONA	set	3898
  9084  0F66                     _ODCONE	set	3942
  9085  0F4F                     _WPUC	set	3919
  9086  0F39                     _WPUA	set	3897
  9087  0F44                     _WPUB	set	3908
  9088  0F65                     _WPUE	set	3941
  9089  0F5A                     _WPUD	set	3930
  9090  0F38                     _ANSELA	set	3896
  9091  0F64                     _ANSELE	set	3940
  9092  0F43                     _ANSELB	set	3907
  9093  0F4E                     _ANSELC	set	3918
  9094  0F59                     _ANSELD	set	3929
  9095  7A7C                     _WPUC4	set	31356
  9096  7A7B                     _WPUC3	set	31355
  9097                           
  9098                           ; #config settings
  9099  0000                     
  9100                           	psect	cinit
  9101  005D                     start_initialization:	
  9102  005D                     __initialization:	
  9103                           
  9104                           ; Initialize objects allocated to BANK0
  9105  005D  30B8               	movlw	low __pidataBANK0
  9106  005E  0084               	movwf	4
  9107  005F  308E               	movlw	(high __pidataBANK0)| (0+128)
  9108  0060  0085               	movwf	5
  9109  0061  3057               	movlw	low __pdataBANK0
  9110  0062  0086               	movwf	6
  9111  0063  3000               	movlw	high __pdataBANK0
  9112  0064  0087               	movwf	7
  9113  0065  3007               	movlw	7
  9114  0066  3187  27FA  3180   	fcall	init_ram
  9115                           
  9116                           ; Clear objects allocated to COMMON
  9117  0069  01FD               	clrf	__pbssCOMMON& (0+127)
  9118                           
  9119                           ; Clear objects allocated to BANK0
  9120  006A  3020               	movlw	low __pbssBANK0
  9121  006B  0084               	movwf	4
  9122  006C  3000               	movlw	high __pbssBANK0
  9123  006D  0085               	movwf	5
  9124  006E  3017               	movlw	23
  9125  006F  318E  26A4  3180   	fcall	clear_ram0
  9126                           
  9127                           ; Clear objects allocated to BANK1
  9128  0072  30A0               	movlw	low __pbssBANK1
  9129  0073  0084               	movwf	4
  9130  0074  3000               	movlw	high __pbssBANK1
  9131  0075  0085               	movwf	5
  9132  0076  301D               	movlw	29
  9133  0077  318E  26A4  3180   	fcall	clear_ram0
  9134  007A                     end_of_initialization:	
  9135                           ;End of C runtime variable initialization code
  9136                           
  9137  007A                     __end_of__initialization:	
  9138  007A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9139  007B  0020               	movlb	0
  9140  007C  3180  287E         	ljmp	_main	;jump to C main() function
  9141                           
  9142                           	psect	bssCOMMON
  9143  007D                     __pbssCOMMON:	
  9144  007D                     _config_mode:	
  9145  007D                     	ds	1
  9146                           
  9147                           	psect	bssBANK0
  9148  0020                     __pbssBANK0:	
  9149  0020                     _lum_threshold:	
  9150  0020                     	ds	2
  9151  0022                     _level_bin:	
  9152  0022                     	ds	2
  9153  0024                     _duty_cycle:	
  9154  0024                     	ds	2
  9155  0026                     _convertedValue:	
  9156  0026                     	ds	2
  9157  0028                     _value:	
  9158  0028                     	ds	2
  9159  002A                     _i2c1_driver_i2cISR:	
  9160  002A                     	ds	2
  9161  002C                     _i2c1_driver_busCollisionISR:	
  9162  002C                     	ds	2
  9163  002E                     _nreg_pt:	
  9164  002E                     	ds	1
  9165  002F                     _alarm:	
  9166  002F                     	ds	1
  9167  0030                     _set_mode:	
  9168  0030                     	ds	1
  9169  0031                     _last_ms2:	
  9170  0031                     	ds	1
  9171  0032                     _last_ms:	
  9172  0032                     	ds	1
  9173  0033                     _clkms:	
  9174  0033                     	ds	1
  9175  0034                     _seg:	
  9176  0034                     	ds	1
  9177  0035                     _clkm:	
  9178  0035                     	ds	1
  9179  0036                     _clkh:	
  9180  0036                     	ds	1
  9181                           
  9182                           	psect	dataBANK0
  9183  0057                     __pdataBANK0:	
  9184  0057                     _mode_field_subfield:	
  9185  0057                     	ds	4
  9186  005B                     _tala:	
  9187  005B                     	ds	1
  9188  005C                     _pmon:	
  9189  005C                     	ds	1
  9190  005D                     _nreg:	
  9191  005D                     	ds	1
  9192                           
  9193                           	psect	bssBANK1
  9194  00A0                     __pbssBANK1:	
  9195  00A0                     _i2c_status:	
  9196  00A0                     	ds	29
  9197                           
  9198                           	psect	inittext
  9199  07FA                     init_ram:	
  9200  07FA  00FE               	movwf	btemp
  9201  07FB                     initloop:	
  9202  07FB  0012               	moviw fsr0++
  9203  07FC  001E               	movwi fsr1++
  9204  07FD  0BFE               	decfsz	btemp,f
  9205  07FE  2FFB               	goto	initloop
  9206  07FF  3400               	retlw	0
  9207                           
  9208                           	psect	clrtext
  9209  0EA4                     clear_ram0:	
  9210                           ;	Called with FSR0 containing the base address, and
  9211                           ;	WREG with the size to clear
  9212                           
  9213  0EA4  0064               	clrwdt	;clear the watchdog before getting into this loop
  9214  0EA5                     clrloop0:	
  9215  0EA5  0180               	clrf	0	;clear RAM location pointed to by FSR
  9216  0EA6  3101               	addfsr 0,1
  9217  0EA7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  9218  0EA8  2EA5               	goto	clrloop0	;have we reached the end yet?
  9219  0EA9  3400               	retlw	0	;all done for this memory range, return
  9220                           
  9221                           	psect	cstackCOMMON
  9222  0070                     __pcstackCOMMON:	
  9223  0070                     ?_i2c1_driver_isNACK:	
  9224  0070                     ?_setCallBack:	
  9225                           ; 1 bit 
  9226                           
  9227  0070                     ?_mssp1_clearIRQ:	
  9228                           ; 1 bytes @ 0x0
  9229                           
  9230  0070                     ??_mssp1_clearIRQ:	
  9231                           ; 1 bytes @ 0x0
  9232                           
  9233  0070                     ?_i2c_busCollisionISR:	
  9234                           ; 1 bytes @ 0x0
  9235                           
  9236  0070                     ??_i2c_busCollisionISR:	
  9237                           ; 1 bytes @ 0x0
  9238                           
  9239  0070                     ?_i2c_ISR:	
  9240                           ; 1 bytes @ 0x0
  9241                           
  9242  0070                     ?_i2c1_driver_resetBus:	
  9243                           ; 1 bytes @ 0x0
  9244                           
  9245  0070                     ??_i2c1_driver_resetBus:	
  9246                           ; 1 bytes @ 0x0
  9247                           
  9248  0070                     ?_i2c1_driver_restart:	
  9249                           ; 1 bytes @ 0x0
  9250                           
  9251  0070                     ??_i2c1_driver_restart:	
  9252                           ; 1 bytes @ 0x0
  9253                           
  9254  0070                     ?_i2c1_driver_stop:	
  9255                           ; 1 bytes @ 0x0
  9256                           
  9257  0070                     ??_i2c1_driver_stop:	
  9258                           ; 1 bytes @ 0x0
  9259                           
  9260  0070                     ?_i2c1_driver_TXData:	
  9261                           ; 1 bytes @ 0x0
  9262                           
  9263  0070                     ??_i2c1_driver_TXData:	
  9264                           ; 1 bytes @ 0x0
  9265                           
  9266  0070                     ?_i2c1_driver_startRX:	
  9267                           ; 1 bytes @ 0x0
  9268                           
  9269  0070                     ??_i2c1_driver_startRX:	
  9270                           ; 1 bytes @ 0x0
  9271                           
  9272  0070                     ?_i2c1_driver_sendACK:	
  9273                           ; 1 bytes @ 0x0
  9274                           
  9275  0070                     ??_i2c1_driver_sendACK:	
  9276                           ; 1 bytes @ 0x0
  9277                           
  9278  0070                     ?_i2c1_driver_sendNACK:	
  9279                           ; 1 bytes @ 0x0
  9280                           
  9281  0070                     ??_i2c1_driver_sendNACK:	
  9282                           ; 1 bytes @ 0x0
  9283                           
  9284  0070                     ??_i2c1_driver_isNACK:	
  9285                           ; 1 bytes @ 0x0
  9286                           
  9287  0070                     ?_i2c1_driver_getRXData:	
  9288                           ; 1 bytes @ 0x0
  9289                           
  9290  0070                     ??_i2c1_driver_getRXData:	
  9291                           ; 1 bytes @ 0x0
  9292                           
  9293  0070                     ?_mssp1_setIRQ:	
  9294                           ; 1 bytes @ 0x0
  9295                           
  9296  0070                     ??_mssp1_setIRQ:	
  9297                           ; 1 bytes @ 0x0
  9298                           
  9299  0070                     ?_i2c1_driver_clearBusCollision:	
  9300                           ; 1 bytes @ 0x0
  9301                           
  9302  0070                     ??_i2c1_driver_clearBusCollision:	
  9303                           ; 1 bytes @ 0x0
  9304                           
  9305  0070                     ?_INT_CallBack:	
  9306                           ; 1 bytes @ 0x0
  9307                           
  9308  0070                     ?_TMR0_ISR:	
  9309                           ; 1 bytes @ 0x0
  9310                           
  9311  0070                     ?_TMR1_ISR:	
  9312                           ; 1 bytes @ 0x0
  9313                           
  9314  0070                     ?_TMR2_ISR:	
  9315                           ; 1 bytes @ 0x0
  9316                           
  9317  0070                     ?_PMD_Initialize:	
  9318                           ; 1 bytes @ 0x0
  9319                           
  9320  0070                     ?_PIN_MANAGER_Initialize:	
  9321                           ; 1 bytes @ 0x0
  9322                           
  9323  0070                     ?_OSCILLATOR_Initialize:	
  9324                           ; 1 bytes @ 0x0
  9325                           
  9326  0070                     ?_PWM6_Initialize:	
  9327                           ; 1 bytes @ 0x0
  9328                           
  9329  0070                     ?_ADCC_Initialize:	
  9330                           ; 1 bytes @ 0x0
  9331                           
  9332  0070                     ?_TMR2_Initialize:	
  9333                           ; 1 bytes @ 0x0
  9334                           
  9335  0070                     ?_TMR1_Initialize:	
  9336                           ; 1 bytes @ 0x0
  9337                           
  9338  0070                     ?_TMR0_Initialize:	
  9339                           ; 1 bytes @ 0x0
  9340                           
  9341  0070                     ?_TMR1_DefaultInterruptHandler:	
  9342                           ; 1 bytes @ 0x0
  9343                           
  9344  0070                     ??_TMR1_DefaultInterruptHandler:	
  9345                           ; 1 bytes @ 0x0
  9346                           
  9347  0070                     ?_TMR2_DefaultInterruptHandler:	
  9348                           ; 1 bytes @ 0x0
  9349                           
  9350  0070                     ??_TMR2_DefaultInterruptHandler:	
  9351                           ; 1 bytes @ 0x0
  9352                           
  9353  0070                     ?_checkDebounceSW1:	
  9354                           ; 1 bytes @ 0x0
  9355                           
  9356  0070                     ?_TMR0_StopTimer:	
  9357                           ; 1 bytes @ 0x0
  9358                           
  9359  0070                     ??_TMR0_StopTimer:	
  9360                           ; 1 bytes @ 0x0
  9361                           
  9362  0070                     ?_handler_clock_hms:	
  9363                           ; 1 bytes @ 0x0
  9364                           
  9365  0070                     ??_handler_clock_hms:	
  9366                           ; 1 bytes @ 0x0
  9367                           
  9368  0070                     ?_handler_clock_ms:	
  9369                           ; 1 bytes @ 0x0
  9370                           
  9371  0070                     ??_handler_clock_ms:	
  9372                           ; 1 bytes @ 0x0
  9373                           
  9374  0070                     ?_recoverData:	
  9375                           ; 1 bytes @ 0x0
  9376                           
  9377  0070                     ?_TMR0_StartTimer:	
  9378                           ; 1 bytes @ 0x0
  9379                           
  9380  0070                     ?_config_routine:	
  9381                           ; 1 bytes @ 0x0
  9382                           
  9383  0070                     ?_all_LED:	
  9384                           ; 1 bytes @ 0x0
  9385                           
  9386  0070                     ?_mod1_LED:	
  9387                           ; 1 bytes @ 0x0
  9388                           
  9389  0070                     ?_mod2_LED:	
  9390                           ; 1 bytes @ 0x0
  9391                           
  9392  0070                     ?_mod3_LED:	
  9393                           ; 1 bytes @ 0x0
  9394                           
  9395  0070                     ?_mod4_LED:	
  9396                           ; 1 bytes @ 0x0
  9397                           
  9398  0070                     ?_checkDebounceSW2:	
  9399                           ; 1 bytes @ 0x0
  9400                           
  9401  0070                     ?_clock_subfields:	
  9402                           ; 1 bytes @ 0x0
  9403                           
  9404  0070                     ?_cksum:	
  9405                           ; 1 bytes @ 0x0
  9406                           
  9407  0070                     ?_reset_recv:	
  9408                           ; 1 bytes @ 0x0
  9409                           
  9410  0070                     ?_cksum_w:	
  9411                           ; 1 bytes @ 0x0
  9412                           
  9413  0070                     ?_TMR0_DefaultInterruptHandler:	
  9414                           ; 1 bytes @ 0x0
  9415                           
  9416  0070                     ??_TMR0_DefaultInterruptHandler:	
  9417                           ; 1 bytes @ 0x0
  9418                           
  9419  0070                     ?_i2c_setBuffer:	
  9420                           ; 1 bytes @ 0x0
  9421                           
  9422  0070                     ?_do_I2C_RESET:	
  9423                           ; 1 bytes @ 0x0
  9424                           
  9425  0070                     ??_do_I2C_RESET:	
  9426                           ; 1 bytes @ 0x0
  9427                           
  9428  0070                     ?_do_I2C_IDLE:	
  9429                           ; 1 bytes @ 0x0
  9430                           
  9431  0070                     ??_do_I2C_IDLE:	
  9432                           ; 1 bytes @ 0x0
  9433                           
  9434  0070                     ?_do_I2C_SEND_RESTART_READ:	
  9435                           ; 1 bytes @ 0x0
  9436                           
  9437  0070                     ??_do_I2C_SEND_RESTART_READ:	
  9438                           ; 1 bytes @ 0x0
  9439                           
  9440  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  9441                           ; 1 bytes @ 0x0
  9442                           
  9443  0070                     ??_do_I2C_SEND_RESTART_WRITE:	
  9444                           ; 1 bytes @ 0x0
  9445                           
  9446  0070                     ?_do_I2C_SEND_RESTART:	
  9447                           ; 1 bytes @ 0x0
  9448                           
  9449  0070                     ??_do_I2C_SEND_RESTART:	
  9450                           ; 1 bytes @ 0x0
  9451                           
  9452  0070                     ?_do_I2C_SEND_STOP:	
  9453                           ; 1 bytes @ 0x0
  9454                           
  9455  0070                     ??_do_I2C_SEND_STOP:	
  9456                           ; 1 bytes @ 0x0
  9457                           
  9458  0070                     ?_do_I2C_SEND_ADR_READ:	
  9459                           ; 1 bytes @ 0x0
  9460                           
  9461  0070                     ??_do_I2C_SEND_ADR_READ:	
  9462                           ; 1 bytes @ 0x0
  9463                           
  9464  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  9465                           ; 1 bytes @ 0x0
  9466                           
  9467  0070                     ?_do_I2C_RCEN:	
  9468                           ; 1 bytes @ 0x0
  9469                           
  9470  0070                     ??_do_I2C_RCEN:	
  9471                           ; 1 bytes @ 0x0
  9472                           
  9473  0070                     ?_do_I2C_DO_ACK:	
  9474                           ; 1 bytes @ 0x0
  9475                           
  9476  0070                     ??_do_I2C_DO_ACK:	
  9477                           ; 1 bytes @ 0x0
  9478                           
  9479  0070                     ?_do_I2C_DO_NACK_STOP:	
  9480                           ; 1 bytes @ 0x0
  9481                           
  9482  0070                     ??_do_I2C_DO_NACK_STOP:	
  9483                           ; 1 bytes @ 0x0
  9484                           
  9485  0070                     ?_do_I2C_DO_NACK_RESTART:	
  9486                           ; 1 bytes @ 0x0
  9487                           
  9488  0070                     ??_do_I2C_DO_NACK_RESTART:	
  9489                           ; 1 bytes @ 0x0
  9490                           
  9491  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  9492                           ; 1 bytes @ 0x0
  9493                           
  9494  0070                     ?_do_I2C_TX:	
  9495                           ; 1 bytes @ 0x0
  9496                           
  9497  0070                     ?_do_I2C_RX:	
  9498                           ; 1 bytes @ 0x0
  9499                           
  9500  0070                     ?_do_I2C_TX_EMPTY:	
  9501                           ; 1 bytes @ 0x0
  9502                           
  9503  0070                     ?_INT_ISR:	
  9504                           ; 1 bytes @ 0x0
  9505                           
  9506  0070                     ?_INT_DefaultInterruptHandler:	
  9507                           ; 1 bytes @ 0x0
  9508                           
  9509  0070                     ??_INT_DefaultInterruptHandler:	
  9510                           ; 1 bytes @ 0x0
  9511                           
  9512  0070                     ?_EXT_INT_Initialize:	
  9513                           ; 1 bytes @ 0x0
  9514                           
  9515  0070                     ?_INTERRUPT_InterruptManager:	
  9516                           ; 1 bytes @ 0x0
  9517                           
  9518  0070                     ?_SYSTEM_Initialize:	
  9519                           ; 1 bytes @ 0x0
  9520                           
  9521  0070                     ?_ADCC_StartConversion:	
  9522                           ; 1 bytes @ 0x0
  9523                           
  9524  0070                     ?_ADCC_IsConversionDone:	
  9525                           ; 1 bytes @ 0x0
  9526                           
  9527  0070                     ?_TMR1_WriteTimer:	
  9528                           ; 1 bytes @ 0x0
  9529                           
  9530  0070                     ?_sw1_EXT:	
  9531                           ; 1 bytes @ 0x0
  9532                           
  9533  0070                     ?_ISR_3s:	
  9534                           ; 1 bytes @ 0x0
  9535                           
  9536  0070                     ?_main:	
  9537                           ; 1 bytes @ 0x0
  9538                           
  9539  0070                     ?_increment_subfield:	
  9540                           ; 1 bytes @ 0x0
  9541                           
  9542  0070                     ?i1_PWM6_LoadDutyValue:	
  9543                           ; 1 bytes @ 0x0
  9544                           
  9545  0070                     ?i1_checkDebounceSW1:	
  9546                           ; 1 bytes @ 0x0
  9547                           
  9548  0070                     ??i1_checkDebounceSW1:	
  9549                           ; 1 bytes @ 0x0
  9550                           
  9551  0070                     i2c1_driver_TXData@d:	
  9552                           ; 1 bytes @ 0x0
  9553                           
  9554  0070                     i2c_setBuffer@bufferSize:	
  9555                           ; 1 bytes @ 0x0
  9556                           
  9557  0070                     setCallBack@cb:	
  9558                           ; 2 bytes @ 0x0
  9559                           
  9560  0070                     TMR1_WriteTimer@timerVal:	
  9561                           ; 2 bytes @ 0x0
  9562                           
  9563  0070                     i1PWM6_LoadDutyValue@dutyValue:	
  9564                           ; 2 bytes @ 0x0
  9565                           
  9566                           
  9567                           ; 2 bytes @ 0x0
  9568  0070                     	ds	1
  9569  0071                     ??_TMR2_ISR:	
  9570  0071                     ??_do_I2C_SEND_ADR_WRITE:	
  9571                           ; 1 bytes @ 0x1
  9572                           
  9573                           
  9574                           ; 1 bytes @ 0x1
  9575  0071                     	ds	1
  9576  0072                     ??_TMR1_ISR:	
  9577  0072                     ??_i2c_setBuffer:	
  9578                           ; 1 bytes @ 0x2
  9579                           
  9580  0072                     ??_TMR1_WriteTimer:	
  9581                           ; 1 bytes @ 0x2
  9582                           
  9583  0072                     ??i1_PWM6_LoadDutyValue:	
  9584                           ; 1 bytes @ 0x2
  9585                           
  9586  0072                     setCallBack@p:	
  9587                           ; 1 bytes @ 0x2
  9588                           
  9589                           
  9590                           ; 1 bytes @ 0x2
  9591  0072                     	ds	1
  9592  0073                     ??_setCallBack:	
  9593  0073                     i2c_setBuffer@buffer:	
  9594                           ; 1 bytes @ 0x3
  9595                           
  9596                           
  9597                           ; 1 bytes @ 0x3
  9598  0073                     	ds	1
  9599  0074                     ??_ISR_3s:	
  9600  0074                     setCallBack@idx:	
  9601                           ; 1 bytes @ 0x4
  9602                           
  9603                           
  9604                           ; 1 bytes @ 0x4
  9605  0074                     	ds	1
  9606  0075                     ??_TMR0_ISR:	
  9607  0075                     ?_i2c_setDataCompleteCallback:	
  9608                           ; 1 bytes @ 0x5
  9609                           
  9610  0075                     i2c_setDataCompleteCallback@cb:	
  9611                           ; 1 bytes @ 0x5
  9612                           
  9613                           
  9614                           ; 2 bytes @ 0x5
  9615  0075                     	ds	2
  9616  0077                     ??_sw1_EXT:	
  9617  0077                     i2c_setDataCompleteCallback@p:	
  9618                           ; 1 bytes @ 0x7
  9619                           
  9620                           
  9621                           ; 1 bytes @ 0x7
  9622  0077                     	ds	1
  9623  0078                     ??_INT_CallBack:	
  9624  0078                     ??_i2c_setDataCompleteCallback:	
  9625                           ; 1 bytes @ 0x8
  9626                           
  9627  0078                     ??_INT_ISR:	
  9628                           ; 1 bytes @ 0x8
  9629                           
  9630                           
  9631                           ; 1 bytes @ 0x8
  9632  0078                     	ds	1
  9633  0079                     ?_returnStop:	
  9634  0079                     ?_returnReset:	
  9635                           ; 1 bytes @ 0x9
  9636                           
  9637  0079                     ?_i2c_restartWrite:	
  9638                           ; 1 bytes @ 0x9
  9639                           
  9640  0079                     ?_wr1RegCompleteHandler:	
  9641                           ; 1 bytes @ 0x9
  9642                           
  9643  0079                     ?_rd1RegCompleteHandler:	
  9644                           ; 1 bytes @ 0x9
  9645                           
  9646  0079                     ?_rd2RegCompleteHandler:	
  9647                           ; 1 bytes @ 0x9
  9648                           
  9649  0079                     ?_wr2RegCompleteHandler:	
  9650                           ; 1 bytes @ 0x9
  9651                           
  9652  0079                     ?_rdBlkRegCompleteHandler:	
  9653                           ; 1 bytes @ 0x9
  9654                           
  9655  0079                     i2c_restartWrite@p:	
  9656                           ; 1 bytes @ 0x9
  9657                           
  9658  0079                     returnStop@p:	
  9659                           ; 1 bytes @ 0x9
  9660                           
  9661  0079                     returnReset@p:	
  9662                           ; 1 bytes @ 0x9
  9663                           
  9664  0079                     wr1RegCompleteHandler@p:	
  9665                           ; 1 bytes @ 0x9
  9666                           
  9667  0079                     rd1RegCompleteHandler@p:	
  9668                           ; 1 bytes @ 0x9
  9669                           
  9670  0079                     rd2RegCompleteHandler@p:	
  9671                           ; 1 bytes @ 0x9
  9672                           
  9673  0079                     wr2RegCompleteHandler@p:	
  9674                           ; 1 bytes @ 0x9
  9675                           
  9676  0079                     rdBlkRegCompleteHandler@p:	
  9677                           ; 1 bytes @ 0x9
  9678                           
  9679                           
  9680                           ; 1 bytes @ 0x9
  9681  0079                     	ds	1
  9682  007A                     ??_returnStop:	
  9683  007A                     ??_returnReset:	
  9684                           ; 1 bytes @ 0xA
  9685                           
  9686  007A                     ??_i2c_restartWrite:	
  9687                           ; 1 bytes @ 0xA
  9688                           
  9689  007A                     ??_do_I2C_DO_ADDRESS_NACK:	
  9690                           ; 1 bytes @ 0xA
  9691                           
  9692  007A                     ??_do_I2C_TX:	
  9693                           ; 1 bytes @ 0xA
  9694                           
  9695  007A                     ??_do_I2C_RX:	
  9696                           ; 1 bytes @ 0xA
  9697                           
  9698  007A                     ??_do_I2C_TX_EMPTY:	
  9699                           ; 1 bytes @ 0xA
  9700                           
  9701  007A                     ??_wr1RegCompleteHandler:	
  9702                           ; 1 bytes @ 0xA
  9703                           
  9704  007A                     ??_rd1RegCompleteHandler:	
  9705                           ; 1 bytes @ 0xA
  9706                           
  9707  007A                     ??_rd2RegCompleteHandler:	
  9708                           ; 1 bytes @ 0xA
  9709                           
  9710  007A                     ??_wr2RegCompleteHandler:	
  9711                           ; 1 bytes @ 0xA
  9712                           
  9713  007A                     ??_rdBlkRegCompleteHandler:	
  9714                           ; 1 bytes @ 0xA
  9715                           
  9716                           
  9717                           ; 1 bytes @ 0xA
  9718  007A                     	ds	3
  9719  007D                     ??_INTERRUPT_InterruptManager:	
  9720                           
  9721                           	psect	cstackBANK0
  9722  0037                     __pcstackBANK0:	
  9723                           ; 1 bytes @ 0xD
  9724                           
  9725  0037                     ??_i2c_ISR:	
  9726                           
  9727                           ; 1 bytes @ 0x0
  9728  0037                     	ds	3
  9729  003A                     ??_PMD_Initialize:	
  9730  003A                     ??_PIN_MANAGER_Initialize:	
  9731                           ; 1 bytes @ 0x3
  9732                           
  9733  003A                     ??_OSCILLATOR_Initialize:	
  9734                           ; 1 bytes @ 0x3
  9735                           
  9736  003A                     ??_PWM6_Initialize:	
  9737                           ; 1 bytes @ 0x3
  9738                           
  9739  003A                     ??_ADCC_Initialize:	
  9740                           ; 1 bytes @ 0x3
  9741                           
  9742  003A                     ?_TMR1_SetInterruptHandler:	
  9743                           ; 1 bytes @ 0x3
  9744                           
  9745  003A                     ?_TMR2_SetInterruptHandler:	
  9746                           ; 1 bytes @ 0x3
  9747                           
  9748  003A                     ??_checkDebounceSW1:	
  9749                           ; 1 bytes @ 0x3
  9750                           
  9751  003A                     ?_TMR0_SetInterruptHandler:	
  9752                           ; 1 bytes @ 0x3
  9753                           
  9754  003A                     ?_LED_bin:	
  9755                           ; 1 bytes @ 0x3
  9756                           
  9757  003A                     ??_TMR0_StartTimer:	
  9758                           ; 1 bytes @ 0x3
  9759                           
  9760  003A                     ??_checkDebounceSW2:	
  9761                           ; 1 bytes @ 0x3
  9762                           
  9763  003A                     ?_INT_SetInterruptHandler:	
  9764                           ; 1 bytes @ 0x3
  9765                           
  9766  003A                     ??_ADCC_StartConversion:	
  9767                           ; 1 bytes @ 0x3
  9768                           
  9769  003A                     ??_ADCC_IsConversionDone:	
  9770                           ; 1 bytes @ 0x3
  9771                           
  9772  003A                     ?_PWM6_LoadDutyValue:	
  9773                           ; 1 bytes @ 0x3
  9774                           
  9775  003A                     ?_DATAEE_ReadByte:	
  9776                           ; 1 bytes @ 0x3
  9777                           
  9778  003A                     ?_ADCC_GetConversionResult:	
  9779                           ; 1 bytes @ 0x3
  9780                           
  9781  003A                     ADCC_StartConversion@channel:	
  9782                           ; 2 bytes @ 0x3
  9783                           
  9784  003A                     INT_SetInterruptHandler@InterruptHandler:	
  9785                           ; 1 bytes @ 0x3
  9786                           
  9787  003A                     TMR1_SetInterruptHandler@InterruptHandler:	
  9788                           ; 2 bytes @ 0x3
  9789                           
  9790  003A                     PWM6_LoadDutyValue@dutyValue:	
  9791                           ; 2 bytes @ 0x3
  9792                           
  9793  003A                     DATAEE_ReadByte@bAdd:	
  9794                           ; 2 bytes @ 0x3
  9795                           
  9796  003A                     TMR2_SetInterruptHandler@InterruptHandler:	
  9797                           ; 2 bytes @ 0x3
  9798                           
  9799  003A                     LED_bin@value:	
  9800                           ; 2 bytes @ 0x3
  9801                           
  9802  003A                     TMR0_SetInterruptHandler@InterruptHandler:	
  9803                           ; 2 bytes @ 0x3
  9804                           
  9805                           
  9806                           ; 2 bytes @ 0x3
  9807  003A                     	ds	2
  9808  003C                     ??_TMR2_Initialize:	
  9809  003C                     ??_TMR1_Initialize:	
  9810                           ; 1 bytes @ 0x5
  9811                           
  9812  003C                     ??_TMR0_Initialize:	
  9813                           ; 1 bytes @ 0x5
  9814                           
  9815  003C                     ??_TMR1_SetInterruptHandler:	
  9816                           ; 1 bytes @ 0x5
  9817                           
  9818  003C                     ??_TMR2_SetInterruptHandler:	
  9819                           ; 1 bytes @ 0x5
  9820                           
  9821  003C                     ??_TMR0_SetInterruptHandler:	
  9822                           ; 1 bytes @ 0x5
  9823                           
  9824  003C                     ??_LED_bin:	
  9825                           ; 1 bytes @ 0x5
  9826                           
  9827  003C                     ??_cksum:	
  9828                           ; 1 bytes @ 0x5
  9829                           
  9830  003C                     ??_INT_SetInterruptHandler:	
  9831                           ; 1 bytes @ 0x5
  9832                           
  9833  003C                     ??_EXT_INT_Initialize:	
  9834                           ; 1 bytes @ 0x5
  9835                           
  9836  003C                     ??_SYSTEM_Initialize:	
  9837                           ; 1 bytes @ 0x5
  9838                           
  9839  003C                     ??_ADCC_GetConversionResult:	
  9840                           ; 1 bytes @ 0x5
  9841                           
  9842  003C                     ??_PWM6_LoadDutyValue:	
  9843                           ; 1 bytes @ 0x5
  9844                           
  9845  003C                     ??_DATAEE_ReadByte:	
  9846                           ; 1 bytes @ 0x5
  9847                           
  9848  003C                     ?_ADC_read:	
  9849                           ; 1 bytes @ 0x5
  9850                           
  9851                           
  9852                           ; 2 bytes @ 0x5
  9853  003C                     	ds	1
  9854  003D                     cksum@res:	
  9855                           
  9856                           ; 1 bytes @ 0x6
  9857  003D                     	ds	1
  9858  003E                     ??_ADC_read:	
  9859  003E                     ??_all_LED:	
  9860                           ; 1 bytes @ 0x7
  9861                           
  9862  003E                     ??_mod1_LED:	
  9863                           ; 1 bytes @ 0x7
  9864                           
  9865  003E                     ??_mod2_LED:	
  9866                           ; 1 bytes @ 0x7
  9867                           
  9868  003E                     ??_mod3_LED:	
  9869                           ; 1 bytes @ 0x7
  9870                           
  9871  003E                     ??_mod4_LED:	
  9872                           ; 1 bytes @ 0x7
  9873                           
  9874  003E                     cksum@i:	
  9875                           ; 1 bytes @ 0x7
  9876                           
  9877                           
  9878                           ; 2 bytes @ 0x7
  9879  003E                     	ds	2
  9880  0040                     ?_DATAEE_WriteByte:	
  9881  0040                     DATAEE_WriteByte@bAdd:	
  9882                           ; 1 bytes @ 0x9
  9883                           
  9884                           
  9885                           ; 2 bytes @ 0x9
  9886  0040                     	ds	1
  9887  0041                     ??_increment_subfield:	
  9888  0041                     increment_subfield@plus:	
  9889                           ; 1 bytes @ 0xA
  9890                           
  9891                           
  9892                           ; 2 bytes @ 0xA
  9893  0041                     	ds	1
  9894  0042                     DATAEE_WriteByte@bData:	
  9895                           
  9896                           ; 1 bytes @ 0xB
  9897  0042                     	ds	1
  9898  0043                     ??_DATAEE_WriteByte:	
  9899  0043                     DATAEE_WriteByte@GIEBitValue:	
  9900                           ; 1 bytes @ 0xC
  9901                           
  9902  0043                     increment_subfield@exit:	
  9903                           ; 1 bytes @ 0xC
  9904                           
  9905                           
  9906                           ; 2 bytes @ 0xC
  9907  0043                     	ds	1
  9908  0044                     ??_reset_recv:	
  9909  0044                     ??_cksum_w:	
  9910                           ; 1 bytes @ 0xD
  9911                           
  9912  0044                     reset_recv@i:	
  9913                           ; 1 bytes @ 0xD
  9914                           
  9915                           
  9916                           ; 2 bytes @ 0xD
  9917  0044                     	ds	1
  9918  0045                     ??_clock_subfields:	
  9919                           
  9920                           ; 1 bytes @ 0xE
  9921  0045                     	ds	1
  9922  0046                     ??_recoverData:	
  9923  0046                     clock_subfields@subfield:	
  9924                           ; 1 bytes @ 0xF
  9925                           
  9926                           
  9927                           ; 2 bytes @ 0xF
  9928  0046                     	ds	2
  9929  0048                     ??_config_routine:	
  9930                           
  9931                           ; 1 bytes @ 0x11
  9932  0048                     	ds	1
  9933  0049                     config_routine@select_mode:	
  9934                           
  9935                           ; 2 bytes @ 0x12
  9936  0049                     	ds	2
  9937  004B                     ??_main:	
  9938                           
  9939                           ; 1 bytes @ 0x14
  9940  004B                     	ds	2
  9941                           
  9942                           	psect	maintext
  9943  007E                     __pmaintext:	
  9944 ;;
  9945 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  9946 ;;
  9947 ;; *************** function _main *****************
  9948 ;; Defined at:
  9949 ;;		line 125 in file "main.c"
  9950 ;; Parameters:    Size  Location     Type
  9951 ;;		None
  9952 ;; Auto vars:     Size  Location     Type
  9953 ;;  task_schedul    2    0        unsigned int 
  9954 ;; Return value:  Size  Location     Type
  9955 ;;                  1    wreg      void 
  9956 ;; Registers used:
  9957 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9958 ;; Tracked objects:
  9959 ;;		On entry : B1F/0
  9960 ;;		On exit  : 0/0
  9961 ;;		Unchanged: 0/0
  9962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9964 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9965 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9966 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9967 ;;Total ram usage:        4 bytes
  9968 ;; Hardware stack levels required when called:   10
  9969 ;; This function calls:
  9970 ;;		_ADC_read
  9971 ;;		_INT_SetInterruptHandler
  9972 ;;		_LED_bin
  9973 ;;		_PWM6_LoadDutyValue
  9974 ;;		_SYSTEM_Initialize
  9975 ;;		_TMR0_SetInterruptHandler
  9976 ;;		_TMR0_StartTimer
  9977 ;;		_TMR1_SetInterruptHandler
  9978 ;;		_TMR2_SetInterruptHandler
  9979 ;;		_config_routine
  9980 ;;		_recoverData
  9981 ;; This function is called by:
  9982 ;;		Startup code after reset
  9983 ;; This function uses a non-reentrant model
  9984 ;;
  9985                           
  9986                           
  9987                           ;psect for function _main
  9988  007E                     _main:	
  9989  007E                     l5091:	
  9990                           ;incstack = 0
  9991                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9992                           
  9993                           
  9994                           ;main.c: 126:     SYSTEM_Initialize();
  9995  007E  3186  26DF  3180   	fcall	_SYSTEM_Initialize
  9996                           
  9997                           ;main.c: 128:     TMR0_SetInterruptHandler(ISR_3s);
  9998  0081  3048               	movlw	low _ISR_3s
  9999  0082  0020               	movlb	0	; select bank0
 10000  0083  00BA               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 10001  0084  3007               	movlw	high _ISR_3s
 10002  0085  00BB               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 10003  0086  318E  2692  3180   	fcall	_TMR0_SetInterruptHandler
 10004                           
 10005                           ;main.c: 129:     TMR1_SetInterruptHandler(handler_clock_hms);
 10006  0089  3099               	movlw	low _handler_clock_hms
 10007  008A  0020               	movlb	0	; select bank0
 10008  008B  00BA               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 10009  008C  3005               	movlw	high _handler_clock_hms
 10010  008D  00BB               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 10011  008E  318E  2698  3180   	fcall	_TMR1_SetInterruptHandler
 10012                           
 10013                           ;main.c: 130:     INT_SetInterruptHandler(sw1_EXT);
 10014  0091  30F2               	movlw	low _sw1_EXT
 10015  0092  0020               	movlb	0	; select bank0
 10016  0093  00BA               	movwf	INT_SetInterruptHandler@InterruptHandler
 10017  0094  3005               	movlw	high _sw1_EXT
 10018  0095  00BB               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 10019  0096  318E  268C  3180   	fcall	_INT_SetInterruptHandler
 10020                           
 10021                           ;main.c: 131:     TMR2_SetInterruptHandler(handler_clock_ms);
 10022  0099  303A               	movlw	low _handler_clock_ms
 10023  009A  0020               	movlb	0	; select bank0
 10024  009B  00BA               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 10025  009C  300F               	movlw	high _handler_clock_ms
 10026  009D  00BB               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 10027  009E  318E  269E  3180   	fcall	_TMR2_SetInterruptHandler
 10028  00A1                     l5093:	
 10029  00A1                     l5095:	
 10030                           
 10031                           ;main.c: 135:     recoverData();
 10032  00A1  3181  21D5  3180   	fcall	_recoverData
 10033  00A4                     l5097:	
 10034                           
 10035                           ;main.c: 137:     PWM6_LoadDutyValue(0);
 10036  00A4  3000               	movlw	0
 10037  00A5  0020               	movlb	0	; select bank0
 10038  00A6  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
 10039  00A7  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10040  00A8  3187  272F  3180   	fcall	_PWM6_LoadDutyValue
 10041  00AB                     l5099:	
 10042                           
 10043                           ;main.c: 138:     alarm = 0 ;
 10044  00AB  0020               	movlb	0	; select bank0
 10045  00AC  01AF               	clrf	_alarm	;volatile
 10046  00AD                     l5101:	
 10047  00AD  003E               	movlb	30	; select bank30
 10048  00AE  1644               	bsf	68,4	;volatile
 10049  00AF                     l5103:	
 10050                           
 10051                           ;main.c: 142:     (INTCONbits.GIE = 1);
 10052  00AF  178B               	bsf	11,7	;volatile
 10053  00B0                     l5105:	
 10054                           
 10055                           ;main.c: 145:     (INTCONbits.PEIE = 1);
 10056  00B0  170B               	bsf	11,6	;volatile
 10057  00B1                     l5107:	
 10058                           
 10059                           ;main.c: 156:                     if(!config_mode){
 10060  00B1  087D               	movf	_config_mode,w	;volatile
 10061  00B2  1D03               	btfss	3,2
 10062  00B3  28B5               	goto	u2481
 10063  00B4  28B6               	goto	u2480
 10064  00B5                     u2481:	
 10065  00B5  291A               	goto	l5139
 10066  00B6                     u2480:	
 10067  00B6                     l5109:	
 10068                           
 10069                           ;main.c: 158:                         convertedValue = ADC_read();
 10070  00B6  3187  2715  3180   	fcall	_ADC_read
 10071  00B9  0020               	movlb	0	; select bank0
 10072  00BA  083D               	movf	?_ADC_read+1,w
 10073  00BB  00A7               	movwf	_convertedValue+1
 10074  00BC  083C               	movf	?_ADC_read,w
 10075  00BD  00A6               	movwf	_convertedValue
 10076  00BE                     l5111:	
 10077                           
 10078                           ;main.c: 159:                         level_bin = (convertedValue >> 8);
 10079  00BE  0827               	movf	_convertedValue+1,w
 10080  00BF  00CC               	movwf	??_main+1
 10081  00C0  0826               	movf	_convertedValue,w
 10082  00C1  00CB               	movwf	??_main
 10083  00C2  084C               	movf	??_main+1,w
 10084  00C3  00CB               	movwf	??_main
 10085  00C4  01CC               	clrf	??_main+1
 10086  00C5  084B               	movf	??_main,w
 10087  00C6  00A2               	movwf	_level_bin
 10088  00C7  084C               	movf	??_main+1,w
 10089  00C8  00A3               	movwf	_level_bin+1
 10090  00C9                     l5113:	
 10091                           
 10092                           ;main.c: 160:                         LED_bin(level_bin);
 10093  00C9  0823               	movf	_level_bin+1,w
 10094  00CA  00BB               	movwf	LED_bin@value+1
 10095  00CB  0822               	movf	_level_bin,w
 10096  00CC  00BA               	movwf	LED_bin@value
 10097  00CD  3186  26FB  3180   	fcall	_LED_bin
 10098  00D0                     l5115:	
 10099                           
 10100                           ;main.c: 161:                         lum_threshold = (level_bin > 2);
 10101  00D0  3000               	movlw	0
 10102  00D1  0020               	movlb	0	; select bank0
 10103  00D2  0223               	subwf	_level_bin+1,w
 10104  00D3  3003               	movlw	3
 10105  00D4  1903               	skipnz
 10106  00D5  0222               	subwf	_level_bin,w
 10107  00D6  1803               	skipnc
 10108  00D7  28D9               	goto	u2491
 10109  00D8  28DB               	goto	u2490
 10110  00D9                     u2491:	
 10111  00D9  3001               	movlw	1
 10112  00DA  28DC               	goto	u2500
 10113  00DB                     u2490:	
 10114  00DB  3000               	movlw	0
 10115  00DC                     u2500:	
 10116  00DC  00CB               	movwf	??_main
 10117  00DD  01CC               	clrf	??_main+1
 10118  00DE  084B               	movf	??_main,w
 10119  00DF  00A0               	movwf	_lum_threshold
 10120  00E0  084C               	movf	??_main+1,w
 10121  00E1  00A1               	movwf	_lum_threshold+1
 10122  00E2                     l5117:	
 10123                           
 10124                           ;main.c: 163:                         if(lum_threshold){
 10125  00E2  0820               	movf	_lum_threshold,w
 10126  00E3  0421               	iorwf	_lum_threshold+1,w
 10127  00E4  1903               	btfsc	3,2
 10128  00E5  28E7               	goto	u2511
 10129  00E6  28E8               	goto	u2510
 10130  00E7                     u2511:	
 10131  00E7  290A               	goto	l5133
 10132  00E8                     u2510:	
 10133  00E8                     l5119:	
 10134                           
 10135                           ;main.c: 164:                             if(alarm == 2){
 10136  00E8  3002               	movlw	2
 10137  00E9  062F               	xorwf	_alarm,w	;volatile
 10138  00EA  1D03               	btfss	3,2
 10139  00EB  28ED               	goto	u2521
 10140  00EC  28EE               	goto	u2520
 10141  00ED                     u2521:	
 10142  00ED  28FA               	goto	l5125
 10143  00EE                     u2520:	
 10144  00EE                     l5121:	
 10145                           
 10146                           ;main.c: 165:                                 duty_cycle +=1 ;
 10147  00EE  3001               	movlw	1
 10148  00EF  07A4               	addwf	_duty_cycle,f
 10149  00F0  3000               	movlw	0
 10150  00F1  3DA5               	addwfc	_duty_cycle+1,f
 10151  00F2                     l5123:	
 10152                           
 10153                           ;main.c: 166:                                 PWM6_LoadDutyValue(duty_cycle);
 10154  00F2  0825               	movf	_duty_cycle+1,w
 10155  00F3  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10156  00F4  0824               	movf	_duty_cycle,w
 10157  00F5  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
 10158  00F6  3187  272F  3180   	fcall	_PWM6_LoadDutyValue
 10159                           
 10160                           ;main.c: 167:                             }
 10161  00F9  2926               	goto	l5147
 10162  00FA                     l5125:	
 10163  00FA  082F               	movf	_alarm,w	;volatile
 10164  00FB  1D03               	btfss	3,2
 10165  00FC  28FE               	goto	u2531
 10166  00FD  28FF               	goto	u2530
 10167  00FE                     u2531:	
 10168  00FE  2919               	goto	l1180
 10169  00FF                     u2530:	
 10170  00FF                     l5127:	
 10171                           
 10172                           ;main.c: 169:                                 PIE0bits.TMR0IE = 1;
 10173  00FF  002E               	movlb	14	; select bank14
 10174  0100  1696               	bsf	22,5	;volatile
 10175  0101                     l5129:	
 10176                           
 10177                           ;main.c: 170:                                 TMR0_StartTimer();
 10178  0101  318E  264A  3180   	fcall	_TMR0_StartTimer
 10179  0104                     l5131:	
 10180                           
 10181                           ;main.c: 171:                                 alarm = 2 ;
 10182  0104  3002               	movlw	2
 10183  0105  0020               	movlb	0	; select bank0
 10184  0106  00CB               	movwf	??_main
 10185  0107  084B               	movf	??_main,w
 10186  0108  00AF               	movwf	_alarm	;volatile
 10187  0109  2926               	goto	l5147
 10188  010A                     l5133:	
 10189                           
 10190                           ;main.c: 175:                             if(alarm == 2){
 10191  010A  3002               	movlw	2
 10192  010B  062F               	xorwf	_alarm,w	;volatile
 10193  010C  1D03               	btfss	3,2
 10194  010D  290F               	goto	u2541
 10195  010E  2910               	goto	u2540
 10196  010F                     u2541:	
 10197  010F  2926               	goto	l5147
 10198  0110                     u2540:	
 10199  0110                     l5135:	
 10200                           
 10201                           ;main.c: 176:                                 PWM6_LoadDutyValue(0);
 10202  0110  3000               	movlw	0
 10203  0111  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
 10204  0112  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10205  0113  3187  272F  3180   	fcall	_PWM6_LoadDutyValue
 10206  0116                     l5137:	
 10207                           
 10208                           ;main.c: 177:                                 alarm = 0 ;
 10209  0116  0020               	movlb	0	; select bank0
 10210  0117  01AF               	clrf	_alarm	;volatile
 10211  0118  2926               	goto	l5147
 10212  0119                     l1180:	
 10213                           ;main.c: 179:                         }
 10214                           
 10215                           
 10216                           ;main.c: 181:                      }
 10217  0119  2926               	goto	l5147
 10218  011A                     l5139:	
 10219  011A  037D               	decf	_config_mode,w	;volatile
 10220  011B  1D03               	btfss	3,2
 10221  011C  291E               	goto	u2551
 10222  011D  291F               	goto	u2550
 10223  011E                     u2551:	
 10224  011E  2926               	goto	l5147
 10225  011F                     u2550:	
 10226  011F                     l5141:	
 10227                           
 10228                           ;main.c: 185:                       (PIE0bits.INTE = 0);
 10229  011F  002E               	movlb	14	; select bank14
 10230  0120  1016               	bcf	22,0	;volatile
 10231  0121                     l5143:	
 10232                           
 10233                           ;main.c: 186:                       config_routine();
 10234  0121  3181  212D  3180   	fcall	_config_routine
 10235  0124                     l5145:	
 10236                           
 10237                           ;main.c: 187:                       (PIE0bits.INTE = 1);
 10238  0124  002E               	movlb	14	; select bank14
 10239  0125  1416               	bsf	22,0	;volatile
 10240  0126                     l5147:	
 10241                           
 10242                           ;main.c: 190:                 _delay((unsigned long)((1)*(1000000/4000.0)));
 10243  0126  3053               	movlw	83
 10244  0127                     u2607:	
 10245  0127  0B89               	decfsz	9,f
 10246  0128  2927               	goto	u2607
 10247  0129  0000               	nop
 10248                           
 10249                           ;main.c: 193:                 }while(1);
 10250  012A  28B1               	goto	l5107
 10251  012B  3180  285B         	ljmp	start
 10252  012D                     __end_of_main:	
 10253                           
 10254                           	psect	text1
 10255  01D5                     __ptext1:	
 10256 ;; *************** function _recoverData *****************
 10257 ;; Defined at:
 10258 ;;		line 11 in file "eeprom_rw.c"
 10259 ;; Parameters:    Size  Location     Type
 10260 ;;		None
 10261 ;; Auto vars:     Size  Location     Type
 10262 ;;		None
 10263 ;; Return value:  Size  Location     Type
 10264 ;;                  1    wreg      void 
 10265 ;; Registers used:
 10266 ;;		wreg, status,2, status,0, pclath, cstack
 10267 ;; Tracked objects:
 10268 ;;		On entry : 0/0
 10269 ;;		On exit  : 0/0
 10270 ;;		Unchanged: 0/0
 10271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10274 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10275 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10276 ;;Total ram usage:        1 bytes
 10277 ;; Hardware stack levels used:    1
 10278 ;; Hardware stack levels required when called:    9
 10279 ;; This function calls:
 10280 ;;		_DATAEE_ReadByte
 10281 ;;		_DATAEE_WriteByte
 10282 ;;		_cksum
 10283 ;;		_cksum_w
 10284 ;;		_reset_recv
 10285 ;; This function is called by:
 10286 ;;		_main
 10287 ;; This function uses a non-reentrant model
 10288 ;;
 10289                           
 10290                           
 10291                           ;psect for function _recoverData
 10292  01D5                     _recoverData:	
 10293  01D5                     l4823:	
 10294                           ;incstack = 0
 10295                           ; Regs used in _recoverData: [wreg+status,2+status,0+pclath+cstack]
 10296                           
 10297                           
 10298                           ;eeprom_rw.c: 13:     if(DATAEE_ReadByte(0xF0FF - 10) == 0xAB){
 10299  01D5  30F5               	movlw	245
 10300  01D6  0020               	movlb	0	; select bank0
 10301  01D7  00BA               	movwf	DATAEE_ReadByte@bAdd
 10302  01D8  30F0               	movlw	240
 10303  01D9  00BB               	movwf	DATAEE_ReadByte@bAdd+1
 10304  01DA  318F  278D  3181   	fcall	_DATAEE_ReadByte
 10305  01DD  3AAB               	xorlw	171
 10306  01DE  1D03               	skipz
 10307  01DF  29E1               	goto	u2061
 10308  01E0  29E2               	goto	u2060
 10309  01E1                     u2061:	
 10310  01E1  2A36               	goto	l4829
 10311  01E2                     u2060:	
 10312  01E2                     l4825:	
 10313                           
 10314                           ;eeprom_rw.c: 14:         if(DATAEE_ReadByte(0xF0FF) == cksum()){
 10315  01E2  3186  2684  3181   	fcall	_cksum
 10316  01E5  0020               	movlb	0	; select bank0
 10317  01E6  00C6               	movwf	??_recoverData
 10318  01E7  30FF               	movlw	255
 10319  01E8  00BA               	movwf	DATAEE_ReadByte@bAdd
 10320  01E9  30F0               	movlw	240
 10321  01EA  00BB               	movwf	DATAEE_ReadByte@bAdd+1
 10322  01EB  318F  278D  3181   	fcall	_DATAEE_ReadByte
 10323  01EE  0020               	movlb	0	; select bank0
 10324  01EF  0646               	xorwf	??_recoverData,w
 10325  01F0  1D03               	skipz
 10326  01F1  29F3               	goto	u2071
 10327  01F2  29F4               	goto	u2070
 10328  01F3                     u2071:	
 10329  01F3  2A36               	goto	l4829
 10330  01F4                     u2070:	
 10331  01F4                     l4827:	
 10332                           
 10333                           ;eeprom_rw.c: 15:             clkh = DATAEE_ReadByte(0xF0FF - 10 + 1);
 10334  01F4  30F6               	movlw	246
 10335  01F5  00BA               	movwf	DATAEE_ReadByte@bAdd
 10336  01F6  30F0               	movlw	240
 10337  01F7  00BB               	movwf	DATAEE_ReadByte@bAdd+1
 10338  01F8  318F  278D  3181   	fcall	_DATAEE_ReadByte
 10339  01FB  0020               	movlb	0	; select bank0
 10340  01FC  00C6               	movwf	??_recoverData
 10341  01FD  0846               	movf	??_recoverData,w
 10342  01FE  00B6               	movwf	_clkh	;volatile
 10343                           
 10344                           ;eeprom_rw.c: 16:             clkm = DATAEE_ReadByte(0xF0FF - 10 + 2);
 10345  01FF  30F7               	movlw	247
 10346  0200  00BA               	movwf	DATAEE_ReadByte@bAdd
 10347  0201  30F0               	movlw	240
 10348  0202  00BB               	movwf	DATAEE_ReadByte@bAdd+1
 10349  0203  318F  278D  3181   	fcall	_DATAEE_ReadByte
 10350  0206  0020               	movlb	0	; select bank0
 10351  0207  00C6               	movwf	??_recoverData
 10352  0208  0846               	movf	??_recoverData,w
 10353  0209  00B5               	movwf	_clkm	;volatile
 10354                           
 10355                           ;eeprom_rw.c: 17:             nreg = DATAEE_ReadByte(0xF0FF - 10 + 3);
 10356  020A  30F8               	movlw	248
 10357  020B  00BA               	movwf	DATAEE_ReadByte@bAdd
 10358  020C  30F0               	movlw	240
 10359  020D  00BB               	movwf	DATAEE_ReadByte@bAdd+1
 10360  020E  318F  278D  3181   	fcall	_DATAEE_ReadByte
 10361  0211  0020               	movlb	0	; select bank0
 10362  0212  00C6               	movwf	??_recoverData
 10363  0213  0846               	movf	??_recoverData,w
 10364  0214  00DD               	movwf	_nreg
 10365                           
 10366                           ;eeprom_rw.c: 18:             nreg_pt = DATAEE_ReadByte(0xF0FF - 10 + 4);
 10367  0215  30F9               	movlw	249
 10368  0216  00BA               	movwf	DATAEE_ReadByte@bAdd
 10369  0217  30F0               	movlw	240
 10370  0218  00BB               	movwf	DATAEE_ReadByte@bAdd+1
 10371  0219  318F  278D  3181   	fcall	_DATAEE_ReadByte
 10372  021C  0020               	movlb	0	; select bank0
 10373  021D  00C6               	movwf	??_recoverData
 10374  021E  0846               	movf	??_recoverData,w
 10375  021F  00AE               	movwf	_nreg_pt
 10376                           
 10377                           ;eeprom_rw.c: 19:             pmon = DATAEE_ReadByte(0xF0FF - 10 + 5);
 10378  0220  30FA               	movlw	250
 10379  0221  00BA               	movwf	DATAEE_ReadByte@bAdd
 10380  0222  30F0               	movlw	240
 10381  0223  00BB               	movwf	DATAEE_ReadByte@bAdd+1
 10382  0224  318F  278D  3181   	fcall	_DATAEE_ReadByte
 10383  0227  0020               	movlb	0	; select bank0
 10384  0228  00C6               	movwf	??_recoverData
 10385  0229  0846               	movf	??_recoverData,w
 10386  022A  00DC               	movwf	_pmon
 10387                           
 10388                           ;eeprom_rw.c: 20:             tala = DATAEE_ReadByte(0xF0FF - 10 + 6);
 10389  022B  30FB               	movlw	251
 10390  022C  00BA               	movwf	DATAEE_ReadByte@bAdd
 10391  022D  30F0               	movlw	240
 10392  022E  00BB               	movwf	DATAEE_ReadByte@bAdd+1
 10393  022F  318F  278D  3181   	fcall	_DATAEE_ReadByte
 10394  0232  0020               	movlb	0	; select bank0
 10395  0233  00C6               	movwf	??_recoverData
 10396  0234  0846               	movf	??_recoverData,w
 10397  0235  00DB               	movwf	_tala
 10398  0236                     l4829:	
 10399                           
 10400                           ;eeprom_rw.c: 24:     reset_recv();
 10401  0236  3186  26C3  3181   	fcall	_reset_recv
 10402  0239                     l4831:	
 10403                           
 10404                           ;eeprom_rw.c: 27:     DATAEE_WriteByte(0xF0FF - 10, 0xAB);
 10405  0239  30F5               	movlw	245
 10406  023A  0020               	movlb	0	; select bank0
 10407  023B  00C0               	movwf	DATAEE_WriteByte@bAdd
 10408  023C  30F0               	movlw	240
 10409  023D  00C1               	movwf	DATAEE_WriteByte@bAdd+1
 10410  023E  30AB               	movlw	171
 10411  023F  00C6               	movwf	??_recoverData
 10412  0240  0846               	movf	??_recoverData,w
 10413  0241  00C2               	movwf	DATAEE_WriteByte@bData
 10414  0242  3186  2640  3181   	fcall	_DATAEE_WriteByte
 10415  0245                     l4833:	
 10416                           
 10417                           ;eeprom_rw.c: 28:     DATAEE_WriteByte(0xF0FF - 10 + 3, nreg);
 10418  0245  30F8               	movlw	248
 10419  0246  0020               	movlb	0	; select bank0
 10420  0247  00C0               	movwf	DATAEE_WriteByte@bAdd
 10421  0248  30F0               	movlw	240
 10422  0249  00C1               	movwf	DATAEE_WriteByte@bAdd+1
 10423  024A  085D               	movf	_nreg,w
 10424  024B  00C6               	movwf	??_recoverData
 10425  024C  0846               	movf	??_recoverData,w
 10426  024D  00C2               	movwf	DATAEE_WriteByte@bData
 10427  024E  3186  2640  3181   	fcall	_DATAEE_WriteByte
 10428  0251                     l4835:	
 10429                           
 10430                           ;eeprom_rw.c: 29:     DATAEE_WriteByte(0xF0FF - 10 + 5, pmon);
 10431  0251  30FA               	movlw	250
 10432  0252  0020               	movlb	0	; select bank0
 10433  0253  00C0               	movwf	DATAEE_WriteByte@bAdd
 10434  0254  30F0               	movlw	240
 10435  0255  00C1               	movwf	DATAEE_WriteByte@bAdd+1
 10436  0256  085C               	movf	_pmon,w
 10437  0257  00C6               	movwf	??_recoverData
 10438  0258  0846               	movf	??_recoverData,w
 10439  0259  00C2               	movwf	DATAEE_WriteByte@bData
 10440  025A  3186  2640  3181   	fcall	_DATAEE_WriteByte
 10441  025D                     l4837:	
 10442                           
 10443                           ;eeprom_rw.c: 30:     DATAEE_WriteByte(0xF0FF - 10 + 6, tala);
 10444  025D  30FB               	movlw	251
 10445  025E  0020               	movlb	0	; select bank0
 10446  025F  00C0               	movwf	DATAEE_WriteByte@bAdd
 10447  0260  30F0               	movlw	240
 10448  0261  00C1               	movwf	DATAEE_WriteByte@bAdd+1
 10449  0262  085B               	movf	_tala,w
 10450  0263  00C6               	movwf	??_recoverData
 10451  0264  0846               	movf	??_recoverData,w
 10452  0265  00C2               	movwf	DATAEE_WriteByte@bData
 10453  0266  3186  2640  3181   	fcall	_DATAEE_WriteByte
 10454  0269                     l4839:	
 10455                           
 10456                           ;eeprom_rw.c: 31:     cksum_w();
 10457  0269  318F  27AC  3181   	fcall	_cksum_w
 10458  026C                     l1486:	
 10459  026C  0008               	return
 10460  026D                     __end_of_recoverData:	
 10461                           
 10462                           	psect	text2
 10463  06C3                     __ptext2:	
 10464 ;; *************** function _reset_recv *****************
 10465 ;; Defined at:
 10466 ;;		line 75 in file "eeprom_rw.c"
 10467 ;; Parameters:    Size  Location     Type
 10468 ;;		None
 10469 ;; Auto vars:     Size  Location     Type
 10470 ;;  i               2   13[BANK0 ] unsigned int 
 10471 ;; Return value:  Size  Location     Type
 10472 ;;                  1    wreg      void 
 10473 ;; Registers used:
 10474 ;;		wreg, status,2, status,0, pclath, cstack
 10475 ;; Tracked objects:
 10476 ;;		On entry : 0/0
 10477 ;;		On exit  : 0/0
 10478 ;;		Unchanged: 0/0
 10479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10481 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10483 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10484 ;;Total ram usage:        2 bytes
 10485 ;; Hardware stack levels used:    1
 10486 ;; Hardware stack levels required when called:    7
 10487 ;; This function calls:
 10488 ;;		_DATAEE_WriteByte
 10489 ;; This function is called by:
 10490 ;;		_recoverData
 10491 ;; This function uses a non-reentrant model
 10492 ;;
 10493                           
 10494                           
 10495                           ;psect for function _reset_recv
 10496  06C3                     _reset_recv:	
 10497  06C3                     l4687:	
 10498                           ;incstack = 0
 10499                           ; Regs used in _reset_recv: [wreg+status,2+status,0+pclath+cstack]
 10500                           
 10501                           
 10502                           ;eeprom_rw.c: 77:     for(unsigned int i = 0xF0FF - 10; i <= 0xF0FF; i ++)
 10503  06C3  30F5               	movlw	245
 10504  06C4  0020               	movlb	0	; select bank0
 10505  06C5  00C4               	movwf	reset_recv@i
 10506  06C6  30F0               	movlw	240
 10507  06C7  00C5               	movwf	reset_recv@i+1
 10508  06C8                     l4691:	
 10509                           
 10510                           ;eeprom_rw.c: 78:         DATAEE_WriteByte(i, 0);
 10511  06C8  0845               	movf	reset_recv@i+1,w
 10512  06C9  00C1               	movwf	DATAEE_WriteByte@bAdd+1
 10513  06CA  0844               	movf	reset_recv@i,w
 10514  06CB  00C0               	movwf	DATAEE_WriteByte@bAdd
 10515  06CC  01C2               	clrf	DATAEE_WriteByte@bData
 10516  06CD  3186  2640  3186   	fcall	_DATAEE_WriteByte
 10517  06D0                     l4693:	
 10518  06D0  3001               	movlw	1
 10519  06D1  0020               	movlb	0	; select bank0
 10520  06D2  07C4               	addwf	reset_recv@i,f
 10521  06D3  3000               	movlw	0
 10522  06D4  3DC5               	addwfc	reset_recv@i+1,f
 10523  06D5                     l4695:	
 10524  06D5  30F1               	movlw	241
 10525  06D6  0245               	subwf	reset_recv@i+1,w
 10526  06D7  3000               	movlw	0
 10527  06D8  1903               	skipnz
 10528  06D9  0244               	subwf	reset_recv@i,w
 10529  06DA  1C03               	skipc
 10530  06DB  2EDD               	goto	u1971
 10531  06DC  2EDE               	goto	u1970
 10532  06DD                     u1971:	
 10533  06DD  2EC8               	goto	l4691
 10534  06DE                     u1970:	
 10535  06DE                     l1513:	
 10536  06DE  0008               	return
 10537  06DF                     __end_of_reset_recv:	
 10538                           
 10539                           	psect	text3
 10540  0FAC                     __ptext3:	
 10541 ;; *************** function _cksum_w *****************
 10542 ;; Defined at:
 10543 ;;		line 61 in file "eeprom_rw.c"
 10544 ;; Parameters:    Size  Location     Type
 10545 ;;		None
 10546 ;; Auto vars:     Size  Location     Type
 10547 ;;		None
 10548 ;; Return value:  Size  Location     Type
 10549 ;;                  1    wreg      void 
 10550 ;; Registers used:
 10551 ;;		wreg, status,2, status,0, pclath, cstack
 10552 ;; Tracked objects:
 10553 ;;		On entry : 0/0
 10554 ;;		On exit  : 0/0
 10555 ;;		Unchanged: 0/0
 10556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10559 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10560 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10561 ;;Total ram usage:        1 bytes
 10562 ;; Hardware stack levels used:    1
 10563 ;; Hardware stack levels required when called:    8
 10564 ;; This function calls:
 10565 ;;		_DATAEE_WriteByte
 10566 ;;		_cksum
 10567 ;; This function is called by:
 10568 ;;		_recoverData
 10569 ;; This function uses a non-reentrant model
 10570 ;;
 10571                           
 10572                           
 10573                           ;psect for function _cksum_w
 10574  0FAC                     _cksum_w:	
 10575  0FAC                     l4697:	
 10576                           ;incstack = 0
 10577                           ; Regs used in _cksum_w: [wreg+status,2+status,0+pclath+cstack]
 10578                           
 10579                           
 10580                           ;eeprom_rw.c: 63:     DATAEE_WriteByte(0xF0FF, cksum());
 10581  0FAC  30FF               	movlw	255
 10582  0FAD  0020               	movlb	0	; select bank0
 10583  0FAE  00C0               	movwf	DATAEE_WriteByte@bAdd
 10584  0FAF  30F0               	movlw	240
 10585  0FB0  00C1               	movwf	DATAEE_WriteByte@bAdd+1
 10586  0FB1  3186  2684  318F   	fcall	_cksum
 10587  0FB4  0020               	movlb	0	; select bank0
 10588  0FB5  00C4               	movwf	??_cksum_w
 10589  0FB6  0844               	movf	??_cksum_w,w
 10590  0FB7  00C2               	movwf	DATAEE_WriteByte@bData
 10591  0FB8  3186  2640  318F   	fcall	_DATAEE_WriteByte
 10592  0FBB                     l1503:	
 10593  0FBB  0008               	return
 10594  0FBC                     __end_of_cksum_w:	
 10595                           
 10596                           	psect	text4
 10597  0684                     __ptext4:	
 10598 ;; *************** function _cksum *****************
 10599 ;; Defined at:
 10600 ;;		line 66 in file "eeprom_rw.c"
 10601 ;; Parameters:    Size  Location     Type
 10602 ;;		None
 10603 ;; Auto vars:     Size  Location     Type
 10604 ;;  i               2    7[BANK0 ] unsigned int 
 10605 ;;  res             1    6[BANK0 ] unsigned char 
 10606 ;; Return value:  Size  Location     Type
 10607 ;;                  1    wreg      unsigned char 
 10608 ;; Registers used:
 10609 ;;		wreg, status,2, status,0, pclath, cstack
 10610 ;; Tracked objects:
 10611 ;;		On entry : 0/0
 10612 ;;		On exit  : 0/0
 10613 ;;		Unchanged: 0/0
 10614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10616 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10617 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10618 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10619 ;;Total ram usage:        4 bytes
 10620 ;; Hardware stack levels used:    1
 10621 ;; Hardware stack levels required when called:    7
 10622 ;; This function calls:
 10623 ;;		_DATAEE_ReadByte
 10624 ;; This function is called by:
 10625 ;;		_recoverData
 10626 ;;		_cksum_w
 10627 ;; This function uses a non-reentrant model
 10628 ;;
 10629                           
 10630                           
 10631                           ;psect for function _cksum
 10632  0684                     _cksum:	
 10633  0684                     l4237:	
 10634                           ;incstack = 0
 10635                           ; Regs used in _cksum: [wreg+status,2+status,0+pclath+cstack]
 10636                           
 10637                           
 10638                           ;eeprom_rw.c: 68:     unsigned char res = 0;
 10639  0684  0020               	movlb	0	; select bank0
 10640  0685  01BD               	clrf	cksum@res
 10641  0686                     l4239:	
 10642                           
 10643                           ;eeprom_rw.c: 69:     for(unsigned int i = 0xF0FF - 10; i < 0xF0FF; i ++) {
 10644  0686  30F5               	movlw	245
 10645  0687  00BE               	movwf	cksum@i
 10646  0688  30F0               	movlw	240
 10647  0689  00BF               	movwf	cksum@i+1
 10648  068A                     l4245:	
 10649                           
 10650                           ;eeprom_rw.c: 70:         res += DATAEE_ReadByte(i);
 10651  068A  083F               	movf	cksum@i+1,w
 10652  068B  00BB               	movwf	DATAEE_ReadByte@bAdd+1
 10653  068C  083E               	movf	cksum@i,w
 10654  068D  00BA               	movwf	DATAEE_ReadByte@bAdd
 10655  068E  318F  278D  3186   	fcall	_DATAEE_ReadByte
 10656  0691  0020               	movlb	0	; select bank0
 10657  0692  00BC               	movwf	??_cksum
 10658  0693  083C               	movf	??_cksum,w
 10659  0694  07BD               	addwf	cksum@res,f
 10660  0695                     l4247:	
 10661                           
 10662                           ;eeprom_rw.c: 71:     }
 10663  0695  3001               	movlw	1
 10664  0696  07BE               	addwf	cksum@i,f
 10665  0697  3000               	movlw	0
 10666  0698  3DBF               	addwfc	cksum@i+1,f
 10667  0699                     l4249:	
 10668  0699  30F0               	movlw	240
 10669  069A  023F               	subwf	cksum@i+1,w
 10670  069B  30FF               	movlw	255
 10671  069C  1903               	skipnz
 10672  069D  023E               	subwf	cksum@i,w
 10673  069E  1C03               	skipc
 10674  069F  2EA1               	goto	u1761
 10675  06A0  2EA2               	goto	u1760
 10676  06A1                     u1761:	
 10677  06A1  2E8A               	goto	l4245
 10678  06A2                     u1760:	
 10679  06A2                     l4251:	
 10680                           
 10681                           ;eeprom_rw.c: 72:     return res;
 10682  06A2  083D               	movf	cksum@res,w
 10683  06A3                     l1508:	
 10684  06A3  0008               	return
 10685  06A4                     __end_of_cksum:	
 10686                           
 10687                           	psect	text5
 10688  0F8D                     __ptext5:	
 10689 ;; *************** function _DATAEE_ReadByte *****************
 10690 ;; Defined at:
 10691 ;;		line 202 in file "mcc_generated_files/memory.c"
 10692 ;; Parameters:    Size  Location     Type
 10693 ;;  bAdd            2    3[BANK0 ] unsigned short 
 10694 ;; Auto vars:     Size  Location     Type
 10695 ;;		None
 10696 ;; Return value:  Size  Location     Type
 10697 ;;                  1    wreg      unsigned char 
 10698 ;; Registers used:
 10699 ;;		wreg, status,2
 10700 ;; Tracked objects:
 10701 ;;		On entry : 0/0
 10702 ;;		On exit  : 0/0
 10703 ;;		Unchanged: 0/0
 10704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10705 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10708 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10709 ;;Total ram usage:        2 bytes
 10710 ;; Hardware stack levels used:    1
 10711 ;; Hardware stack levels required when called:    6
 10712 ;; This function calls:
 10713 ;;		Nothing
 10714 ;; This function is called by:
 10715 ;;		_recoverData
 10716 ;;		_cksum
 10717 ;;		_read_ring
 10718 ;; This function uses a non-reentrant model
 10719 ;;
 10720                           
 10721                           
 10722                           ;psect for function _DATAEE_ReadByte
 10723  0F8D                     _DATAEE_ReadByte:	
 10724  0F8D                     l3961:	
 10725                           ;incstack = 0
 10726                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 10727                           
 10728                           
 10729                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 10730  0F8D  0020               	movlb	0	; select bank0
 10731  0F8E  083B               	movf	DATAEE_ReadByte@bAdd+1,w
 10732  0F8F  0030               	movlb	16	; select bank16
 10733  0F90  009B               	movwf	27	;volatile
 10734  0F91                     l3963:	
 10735                           
 10736                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 10737  0F91  0020               	movlb	0	; select bank0
 10738  0F92  083A               	movf	DATAEE_ReadByte@bAdd,w
 10739  0F93  0030               	movlb	16	; select bank16
 10740  0F94  009A               	movwf	26	;volatile
 10741  0F95                     l3965:	
 10742                           
 10743                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 10744  0F95  171E               	bsf	30,6	;volsfr
 10745  0F96                     l3967:	
 10746                           
 10747                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 10748  0F96  141E               	bsf	30,0	;volsfr
 10749  0F97                     l3969:	
 10750                           
 10751                           ;mcc_generated_files/memory.c: 208:     __nop();
 10752  0F97  0000               	nop
 10753  0F98                     l3971:	
 10754                           
 10755                           ;mcc_generated_files/memory.c: 209:     __nop();
 10756  0F98  0000               	nop
 10757  0F99                     l3973:	
 10758                           
 10759                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 10760  0F99  0030               	movlb	16	; select bank16
 10761  0F9A  081C               	movf	28,w	;volatile
 10762  0F9B                     l963:	
 10763  0F9B  0008               	return
 10764  0F9C                     __end_of_DATAEE_ReadByte:	
 10765                           
 10766                           	psect	text6
 10767  0640                     __ptext6:	
 10768 ;; *************** function _DATAEE_WriteByte *****************
 10769 ;; Defined at:
 10770 ;;		line 180 in file "mcc_generated_files/memory.c"
 10771 ;; Parameters:    Size  Location     Type
 10772 ;;  bAdd            2    9[BANK0 ] unsigned short 
 10773 ;;  bData           1   11[BANK0 ] unsigned char 
 10774 ;; Auto vars:     Size  Location     Type
 10775 ;;  GIEBitValue     1   12[BANK0 ] unsigned char 
 10776 ;; Return value:  Size  Location     Type
 10777 ;;                  1    wreg      void 
 10778 ;; Registers used:
 10779 ;;		wreg, status,2, status,0
 10780 ;; Tracked objects:
 10781 ;;		On entry : 0/0
 10782 ;;		On exit  : 0/0
 10783 ;;		Unchanged: 0/0
 10784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10785 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10786 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10788 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10789 ;;Total ram usage:        4 bytes
 10790 ;; Hardware stack levels used:    1
 10791 ;; Hardware stack levels required when called:    6
 10792 ;; This function calls:
 10793 ;;		Nothing
 10794 ;; This function is called by:
 10795 ;;		_recoverData
 10796 ;;		_cksum_w
 10797 ;;		_reset_recv
 10798 ;;		_push_ring
 10799 ;; This function uses a non-reentrant model
 10800 ;;
 10801                           
 10802                           
 10803                           ;psect for function _DATAEE_WriteByte
 10804  0640                     _DATAEE_WriteByte:	
 10805  0640                     l4153:	
 10806                           ;incstack = 0
 10807                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 10808                           
 10809                           
 10810                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 10811  0640  3000               	movlw	0
 10812  0641  1B8B               	btfsc	11,7	;volatile
 10813  0642  3001               	movlw	1
 10814  0643  0020               	movlb	0	; select bank0
 10815  0644  00C3               	movwf	DATAEE_WriteByte@GIEBitValue
 10816                           
 10817                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 10818  0645  0841               	movf	DATAEE_WriteByte@bAdd+1,w
 10819  0646  0030               	movlb	16	; select bank16
 10820  0647  009B               	movwf	27	;volatile
 10821  0648                     l4155:	
 10822                           
 10823                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 10824  0648  0020               	movlb	0	; select bank0
 10825  0649  0840               	movf	DATAEE_WriteByte@bAdd,w
 10826  064A  0030               	movlb	16	; select bank16
 10827  064B  009A               	movwf	26	;volatile
 10828  064C                     l4157:	
 10829                           
 10830                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 10831  064C  0020               	movlb	0	; select bank0
 10832  064D  0842               	movf	DATAEE_WriteByte@bData,w
 10833  064E  0030               	movlb	16	; select bank16
 10834  064F  009C               	movwf	28	;volatile
 10835  0650                     l4159:	
 10836                           
 10837                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 10838  0650  171E               	bsf	30,6	;volsfr
 10839  0651                     l4161:	
 10840                           
 10841                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 10842  0651  151E               	bsf	30,2	;volsfr
 10843  0652                     l4163:	
 10844                           
 10845                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 10846  0652  138B               	bcf	11,7	;volatile
 10847  0653                     l4165:	
 10848                           
 10849                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 10850  0653  3055               	movlw	85
 10851  0654  009F               	movwf	31	;volsfr
 10852  0655                     l4167:	
 10853                           
 10854                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 10855  0655  30AA               	movlw	170
 10856  0656  009F               	movwf	31	;volsfr
 10857  0657                     l4169:	
 10858                           
 10859                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 10860  0657  149E               	bsf	30,1	;volsfr
 10861  0658                     l957:	
 10862                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 10863                           
 10864                           
 10865                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 10866  0658  189E               	btfsc	30,1	;volsfr
 10867  0659  2E5B               	goto	u1661
 10868  065A  2E5C               	goto	u1660
 10869  065B                     u1661:	
 10870  065B  2E58               	goto	l957
 10871  065C                     u1660:	
 10872  065C                     l959:	
 10873                           
 10874                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 10875  065C  111E               	bcf	30,2	;volsfr
 10876  065D                     l4171:	
 10877                           
 10878                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 10879  065D  0020               	movlb	0	; select bank0
 10880  065E  0C43               	rrf	DATAEE_WriteByte@GIEBitValue,w
 10881  065F  1C03               	skipc
 10882  0660  138B               	bcf	11,7	;volatile
 10883  0661  1803               	skipnc
 10884  0662  178B               	bsf	11,7	;volatile
 10885  0663                     l960:	
 10886  0663  0008               	return
 10887  0664                     __end_of_DATAEE_WriteByte:	
 10888                           
 10889                           	psect	text7
 10890  012D                     __ptext7:	
 10891 ;; *************** function _config_routine *****************
 10892 ;; Defined at:
 10893 ;;		line 204 in file "main.c"
 10894 ;; Parameters:    Size  Location     Type
 10895 ;;		None
 10896 ;; Auto vars:     Size  Location     Type
 10897 ;;  select_mode     2   18[BANK0 ] unsigned int 
 10898 ;; Return value:  Size  Location     Type
 10899 ;;                  1    wreg      void 
 10900 ;; Registers used:
 10901 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10902 ;; Tracked objects:
 10903 ;;		On entry : 0/0
 10904 ;;		On exit  : 0/0
 10905 ;;		Unchanged: 0/0
 10906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10908 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10909 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10910 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10911 ;;Total ram usage:        3 bytes
 10912 ;; Hardware stack levels used:    1
 10913 ;; Hardware stack levels required when called:    9
 10914 ;; This function calls:
 10915 ;;		_PWM6_LoadDutyValue
 10916 ;;		_all_LED
 10917 ;;		_checkDebounceSW1
 10918 ;;		_checkDebounceSW2
 10919 ;;		_clock_subfields
 10920 ;;		_mod1_LED
 10921 ;;		_mod2_LED
 10922 ;;		_mod3_LED
 10923 ;;		_mod4_LED
 10924 ;; This function is called by:
 10925 ;;		_main
 10926 ;; This function uses a non-reentrant model
 10927 ;;
 10928                           
 10929                           
 10930                           ;psect for function _config_routine
 10931  012D                     _config_routine:	
 10932  012D                     l4855:	
 10933                           ;incstack = 0
 10934                           ; Regs used in _config_routine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10935                           
 10936                           
 10937                           ;main.c: 206:     unsigned int select_mode =0;
 10938  012D  0020               	movlb	0	; select bank0
 10939  012E  01C9               	clrf	config_routine@select_mode
 10940  012F  01CA               	clrf	config_routine@select_mode+1
 10941  0130                     l4857:	
 10942                           
 10943                           ;main.c: 207:       last_ms = clkms;
 10944  0130  0833               	movf	_clkms,w	;volatile
 10945  0131  00C8               	movwf	??_config_routine
 10946  0132  0848               	movf	??_config_routine,w
 10947  0133  00B2               	movwf	_last_ms
 10948  0134                     l4859:	
 10949                           
 10950                           ;main.c: 208:       last_ms2 = clkms;
 10951  0134  0833               	movf	_clkms,w	;volatile
 10952  0135  00C8               	movwf	??_config_routine
 10953  0136  0848               	movf	??_config_routine,w
 10954  0137  00B1               	movwf	_last_ms2
 10955  0138                     l4861:	
 10956                           
 10957                           ;main.c: 212:                 if(mode_field_subfield[0] == -1 && select_mode == 0){
 10958  0138  0020               	movlb	0	; select bank0
 10959  0139  0A57               	incf	_mode_field_subfield,w
 10960  013A  1D03               	skipz
 10961  013B  2940               	goto	u2091
 10962  013C  0A58               	incf	_mode_field_subfield+1,w
 10963  013D  1D03               	btfss	3,2
 10964  013E  2940               	goto	u2091
 10965  013F  2941               	goto	u2090
 10966  0140                     u2091:	
 10967  0140  294A               	goto	l4867
 10968  0141                     u2090:	
 10969  0141                     l4863:	
 10970  0141  0849               	movf	config_routine@select_mode,w
 10971  0142  044A               	iorwf	config_routine@select_mode+1,w
 10972  0143  1D03               	btfss	3,2
 10973  0144  2946               	goto	u2101
 10974  0145  2947               	goto	u2100
 10975  0146                     u2101:	
 10976  0146  294A               	goto	l4867
 10977  0147                     u2100:	
 10978  0147                     l4865:	
 10979                           
 10980                           ;main.c: 213:                         all_LED();}
 10981  0147  3182  22D0  3181   	fcall	_all_LED
 10982  014A                     l4867:	
 10983                           
 10984                           ;main.c: 215:                 if(!PORTBbits.RB4){
 10985  014A  0020               	movlb	0	; select bank0
 10986  014B  1A0D               	btfsc	13,4	;volatile
 10987  014C  294E               	goto	u2111
 10988  014D  294F               	goto	u2110
 10989  014E                     u2111:	
 10990  014E  298A               	goto	l4889
 10991  014F                     u2110:	
 10992  014F                     l4869:	
 10993                           
 10994                           ;main.c: 216:                     if(checkDebounceSW1()){
 10995  014F  3183  23CC  3181   	fcall	_checkDebounceSW1
 10996  0152  3A00               	xorlw	0
 10997  0153  1903               	skipnz
 10998  0154  2956               	goto	u2121
 10999  0155  2957               	goto	u2120
 11000  0156                     u2121:	
 11001  0156  2985               	goto	l4887
 11002  0157                     u2120:	
 11003  0157                     l4871:	
 11004                           
 11005                           ;main.c: 218:                             select_mode +=1;
 11006  0157  3001               	movlw	1
 11007  0158  0020               	movlb	0	; select bank0
 11008  0159  07C9               	addwf	config_routine@select_mode,f
 11009  015A  3000               	movlw	0
 11010  015B  3DCA               	addwfc	config_routine@select_mode+1,f
 11011                           
 11012                           ;main.c: 220:                         switch(select_mode){
 11013  015C  2972               	goto	l4885
 11014  015D                     l4873:	
 11015  015D  318F  270C  3181   	fcall	_mod1_LED
 11016  0160  2985               	goto	l4887
 11017  0161                     l4875:	
 11018  0161  318F  2702  3181   	fcall	_mod2_LED
 11019  0164  2985               	goto	l4887
 11020  0165                     l4877:	
 11021  0165  318F  2717  3181   	fcall	_mod3_LED
 11022  0168  2985               	goto	l4887
 11023  0169                     l4879:	
 11024  0169  318F  2722  3181   	fcall	_mod4_LED
 11025  016C  2985               	goto	l4887
 11026  016D                     l4881:	
 11027  016D  01C9               	clrf	config_routine@select_mode
 11028  016E  01CA               	clrf	config_routine@select_mode+1
 11029  016F  01FD               	clrf	_config_mode	;volatile
 11030  0170  01AF               	clrf	_alarm	;volatile
 11031                           
 11032                           ;main.c: 226:                             break;
 11033  0171  2985               	goto	l4887
 11034  0172                     l4885:	
 11035                           
 11036                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11037                           ; Switch size 1, requested type "simple"
 11038                           ; Number of cases is 1, Range of values is 0 to 0
 11039                           ; switch strategies available:
 11040                           ; Name         Instructions Cycles
 11041                           ; simple_byte            4     3 (average)
 11042                           ; direct_byte            8     6 (fixed)
 11043                           ; jumptable            260     6 (fixed)
 11044                           ;	Chosen strategy is simple_byte
 11045  0172  084A               	movf	config_routine@select_mode+1,w
 11046  0173  3A00               	xorlw	0	; case 0
 11047  0174  1903               	skipnz
 11048  0175  2977               	goto	l5343
 11049  0176  296D               	goto	l4881
 11050  0177                     l5343:	
 11051                           
 11052                           ; Switch size 1, requested type "simple"
 11053                           ; Number of cases is 4, Range of values is 1 to 4
 11054                           ; switch strategies available:
 11055                           ; Name         Instructions Cycles
 11056                           ; simple_byte           13     7 (average)
 11057                           ; direct_byte           17     9 (fixed)
 11058                           ; jumptable            263     9 (fixed)
 11059                           ;	Chosen strategy is simple_byte
 11060  0177  0849               	movf	config_routine@select_mode,w
 11061  0178  3A01               	xorlw	1	; case 1
 11062  0179  1903               	skipnz
 11063  017A  295D               	goto	l4873
 11064  017B  3A03               	xorlw	3	; case 2
 11065  017C  1903               	skipnz
 11066  017D  2961               	goto	l4875
 11067  017E  3A01               	xorlw	1	; case 3
 11068  017F  1903               	skipnz
 11069  0180  2965               	goto	l4877
 11070  0181  3A07               	xorlw	7	; case 4
 11071  0182  1903               	skipnz
 11072  0183  2969               	goto	l4879
 11073  0184  296D               	goto	l4881
 11074  0185                     l4887:	
 11075                           
 11076                           ;main.c: 232:                         last_ms = clkms;
 11077  0185  0020               	movlb	0	; select bank0
 11078  0186  0833               	movf	_clkms,w	;volatile
 11079  0187  00C8               	movwf	??_config_routine
 11080  0188  0848               	movf	??_config_routine,w
 11081  0189  00B2               	movwf	_last_ms
 11082  018A                     l4889:	
 11083                           
 11084                           ;main.c: 238:                 if(!PORTCbits.RC5){
 11085  018A  1A8E               	btfsc	14,5	;volatile
 11086  018B  298D               	goto	u2131
 11087  018C  298E               	goto	u2130
 11088  018D                     u2131:	
 11089  018D  29C2               	goto	l4913
 11090  018E                     u2130:	
 11091  018E                     l4891:	
 11092                           
 11093                           ;main.c: 239:                     if(checkDebounceSW2()){
 11094  018E  3183  237F  3181   	fcall	_checkDebounceSW2
 11095  0191  3A00               	xorlw	0
 11096  0192  1903               	skipnz
 11097  0193  2995               	goto	u2141
 11098  0194  2996               	goto	u2140
 11099  0195                     u2141:	
 11100  0195  29C2               	goto	l4913
 11101  0196                     u2140:	
 11102  0196                     l4893:	
 11103                           
 11104                           ;main.c: 241:                         mode_field_subfield[0] = select_mode;
 11105  0196  0020               	movlb	0	; select bank0
 11106  0197  084A               	movf	config_routine@select_mode+1,w
 11107  0198  00D8               	movwf	_mode_field_subfield+1
 11108  0199  0849               	movf	config_routine@select_mode,w
 11109  019A  00D7               	movwf	_mode_field_subfield
 11110  019B                     l4895:	
 11111                           
 11112                           ;main.c: 243:                         PWM6_LoadDutyValue(1023);
 11113  019B  30FF               	movlw	255
 11114  019C  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
 11115  019D  3003               	movlw	3
 11116  019E  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11117  019F  3187  272F  3181   	fcall	_PWM6_LoadDutyValue
 11118  01A2                     l4897:	
 11119  01A2  0020               	movlb	0	; select bank0
 11120  01A3  1616               	bsf	22,4	;volatile
 11121  01A4                     l4899:	
 11122                           
 11123                           ;main.c: 245:                         _delay((unsigned long)((500)*(1000000/4000.0)));
 11124  01A4  30A3               	movlw	163
 11125  01A5  0020               	movlb	0	; select bank0
 11126  01A6  00C8               	movwf	??_config_routine
 11127  01A7  3055               	movlw	85
 11128  01A8                     u2617:	
 11129  01A8  0B89               	decfsz	9,f
 11130  01A9  29A8               	goto	u2617
 11131  01AA  0BC8               	decfsz	??_config_routine,f
 11132  01AB  29A8               	goto	u2617
 11133  01AC                     l4901:	
 11134  01AC  0020               	movlb	0	; select bank0
 11135  01AD  1696               	bsf	22,5	;volatile
 11136  01AE                     l4903:	
 11137                           
 11138                           ;main.c: 247:                         _delay((unsigned long)((500)*(1000000/4000.0)));
 11139  01AE  30A3               	movlw	163
 11140  01AF  0020               	movlb	0	; select bank0
 11141  01B0  00C8               	movwf	??_config_routine
 11142  01B1  3055               	movlw	85
 11143  01B2                     u2627:	
 11144  01B2  0B89               	decfsz	9,f
 11145  01B3  29B2               	goto	u2627
 11146  01B4  0BC8               	decfsz	??_config_routine,f
 11147  01B5  29B2               	goto	u2627
 11148  01B6                     l4905:	
 11149  01B6  0020               	movlb	0	; select bank0
 11150  01B7  1216               	bcf	22,4	;volatile
 11151  01B8                     l4907:	
 11152  01B8  1296               	bcf	22,5	;volatile
 11153  01B9                     l4909:	
 11154                           
 11155                           ;main.c: 253:                         if(select_mode== 1){
 11156  01B9  0349               	decf	config_routine@select_mode,w
 11157  01BA  044A               	iorwf	config_routine@select_mode+1,w
 11158  01BB  1D03               	btfss	3,2
 11159  01BC  29BE               	goto	u2151
 11160  01BD  29BF               	goto	u2150
 11161  01BE                     u2151:	
 11162  01BE  29C2               	goto	l4913
 11163  01BF                     u2150:	
 11164  01BF                     l4911:	
 11165                           
 11166                           ;main.c: 254:                             clock_subfields();
 11167  01BF  3182  226D  3181   	fcall	_clock_subfields
 11168  01C2                     l4913:	
 11169                           
 11170                           ;main.c: 262:                    _delay((unsigned long)((2)*(1000000/4000.0)));
 11171  01C2  30A6               	movlw	166
 11172  01C3                     u2637:	
 11173  01C3  0B89               	decfsz	9,f
 11174  01C4  29C3               	goto	u2637
 11175  01C5  3200               	nop2
 11176  01C6                     l4915:	
 11177                           
 11178                           ;main.c: 264:             }while(config_mode == 1);
 11179  01C6  037D               	decf	_config_mode,w	;volatile
 11180  01C7  1903               	btfsc	3,2
 11181  01C8  29CA               	goto	u2161
 11182  01C9  29CB               	goto	u2160
 11183  01CA                     u2161:	
 11184  01CA  2938               	goto	l4861
 11185  01CB                     u2160:	
 11186  01CB                     l4917:	
 11187                           
 11188                           ;main.c: 266:     mode_field_subfield[0] = -1;
 11189  01CB  30FF               	movlw	255
 11190  01CC  0020               	movlb	0	; select bank0
 11191  01CD  00D7               	movwf	_mode_field_subfield
 11192  01CE  30FF               	movlw	255
 11193  01CF  00D8               	movwf	_mode_field_subfield+1
 11194                           
 11195                           ;main.c: 267:     mode_field_subfield[1] = -1;
 11196  01D0  30FF               	movlw	255
 11197  01D1  00D9               	movwf	_mode_field_subfield+2
 11198  01D2  30FF               	movlw	255
 11199  01D3  00DA               	movwf	_mode_field_subfield+3
 11200  01D4                     l1213:	
 11201  01D4  0008               	return
 11202  01D5                     __end_of_config_routine:	
 11203                           
 11204                           	psect	text8
 11205  026D                     __ptext8:	
 11206 ;; *************** function _clock_subfields *****************
 11207 ;; Defined at:
 11208 ;;		line 296 in file "main.c"
 11209 ;; Parameters:    Size  Location     Type
 11210 ;;		None
 11211 ;; Auto vars:     Size  Location     Type
 11212 ;;  subfield        2   15[BANK0 ] unsigned int 
 11213 ;; Return value:  Size  Location     Type
 11214 ;;                  1    wreg      void 
 11215 ;; Registers used:
 11216 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11217 ;; Tracked objects:
 11218 ;;		On entry : 0/0
 11219 ;;		On exit  : 0/0
 11220 ;;		Unchanged: 0/0
 11221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11223 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11224 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11225 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11226 ;;Total ram usage:        3 bytes
 11227 ;; Hardware stack levels used:    1
 11228 ;; Hardware stack levels required when called:    8
 11229 ;; This function calls:
 11230 ;;		_checkDebounceSW1
 11231 ;;		_checkDebounceSW2
 11232 ;;		_increment_subfield
 11233 ;;		_mod1_LED
 11234 ;;		_mod2_LED
 11235 ;;		_mod3_LED
 11236 ;;		_mod4_LED
 11237 ;; This function is called by:
 11238 ;;		_config_routine
 11239 ;; This function uses a non-reentrant model
 11240 ;;
 11241                           
 11242                           
 11243                           ;psect for function _clock_subfields
 11244  026D                     _clock_subfields:	
 11245  026D                     l4629:	
 11246                           ;incstack = 0
 11247                           ; Regs used in _clock_subfields: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11248                           
 11249                           
 11250                           ;main.c: 298:     unsigned int subfield = 1;
 11251  026D  3001               	movlw	1
 11252  026E  0020               	movlb	0	; select bank0
 11253  026F  00C6               	movwf	clock_subfields@subfield
 11254  0270  3000               	movlw	0
 11255  0271  00C7               	movwf	clock_subfields@subfield+1
 11256  0272                     l4631:	
 11257                           
 11258                           ;main.c: 302:                 if(!PORTBbits.RB4){
 11259  0272  1A0D               	btfsc	13,4	;volatile
 11260  0273  2A75               	goto	u1861
 11261  0274  2A76               	goto	u1860
 11262  0275                     u1861:	
 11263  0275  2A99               	goto	l4647
 11264  0276                     u1860:	
 11265  0276                     l4633:	
 11266                           
 11267                           ;main.c: 303:                     if(checkDebounceSW1()){
 11268  0276  3183  23CC  3182   	fcall	_checkDebounceSW1
 11269  0279  3A00               	xorlw	0
 11270  027A  1903               	skipnz
 11271  027B  2A7D               	goto	u1871
 11272  027C  2A7E               	goto	u1870
 11273  027D                     u1871:	
 11274  027D  2A83               	goto	l1228
 11275  027E                     u1870:	
 11276  027E                     l4635:	
 11277                           
 11278                           ;main.c: 304:                             subfield +=1;
 11279  027E  3001               	movlw	1
 11280  027F  0020               	movlb	0	; select bank0
 11281  0280  07C6               	addwf	clock_subfields@subfield,f
 11282  0281  3000               	movlw	0
 11283  0282  3DC7               	addwfc	clock_subfields@subfield+1,f
 11284  0283                     l1228:	
 11285                           ;main.c: 305:                         }
 11286                           
 11287                           
 11288                           ;main.c: 306:                         last_ms = clkms;
 11289  0283  0020               	movlb	0	; select bank0
 11290  0284  0833               	movf	_clkms,w	;volatile
 11291  0285  00C5               	movwf	??_clock_subfields
 11292  0286  0845               	movf	??_clock_subfields,w
 11293  0287  00B2               	movwf	_last_ms
 11294  0288  2A99               	goto	l4647
 11295  0289                     l4637:	
 11296  0289  318F  270C  3182   	fcall	_mod1_LED
 11297  028C  2AAC               	goto	l1231
 11298  028D                     l4639:	
 11299  028D  318F  2702  3182   	fcall	_mod2_LED
 11300  0290  2AAC               	goto	l1231
 11301  0291                     l4641:	
 11302  0291  318F  2717  3182   	fcall	_mod3_LED
 11303  0294  2AAC               	goto	l1231
 11304  0295                     l4643:	
 11305  0295  318F  2722  3182   	fcall	_mod4_LED
 11306  0298  2AAC               	goto	l1231
 11307  0299                     l4647:	
 11308                           
 11309                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11310                           ; Switch size 1, requested type "simple"
 11311                           ; Number of cases is 1, Range of values is 0 to 0
 11312                           ; switch strategies available:
 11313                           ; Name         Instructions Cycles
 11314                           ; simple_byte            4     3 (average)
 11315                           ; direct_byte            8     6 (fixed)
 11316                           ; jumptable            260     6 (fixed)
 11317                           ;	Chosen strategy is simple_byte
 11318  0299  0847               	movf	clock_subfields@subfield+1,w
 11319  029A  3A00               	xorlw	0	; case 0
 11320  029B  1903               	skipnz
 11321  029C  2A9E               	goto	l5345
 11322  029D  2AAC               	goto	l1231
 11323  029E                     l5345:	
 11324                           
 11325                           ; Switch size 1, requested type "simple"
 11326                           ; Number of cases is 4, Range of values is 1 to 4
 11327                           ; switch strategies available:
 11328                           ; Name         Instructions Cycles
 11329                           ; simple_byte           13     7 (average)
 11330                           ; direct_byte           17     9 (fixed)
 11331                           ; jumptable            263     9 (fixed)
 11332                           ;	Chosen strategy is simple_byte
 11333  029E  0846               	movf	clock_subfields@subfield,w
 11334  029F  3A01               	xorlw	1	; case 1
 11335  02A0  1903               	skipnz
 11336  02A1  2A89               	goto	l4637
 11337  02A2  3A03               	xorlw	3	; case 2
 11338  02A3  1903               	skipnz
 11339  02A4  2A8D               	goto	l4639
 11340  02A5  3A01               	xorlw	1	; case 3
 11341  02A6  1903               	skipnz
 11342  02A7  2A91               	goto	l4641
 11343  02A8  3A07               	xorlw	7	; case 4
 11344  02A9  1903               	skipnz
 11345  02AA  2A95               	goto	l4643
 11346  02AB  2AAC               	goto	l1231
 11347  02AC                     l1231:	
 11348                           
 11349                           ;main.c: 322:                 if(!PORTCbits.RC5){
 11350  02AC  0020               	movlb	0	; select bank0
 11351  02AD  1A8E               	btfsc	14,5	;volatile
 11352  02AE  2AB0               	goto	u1881
 11353  02AF  2AB1               	goto	u1880
 11354  02B0                     u1881:	
 11355  02B0  2AC1               	goto	l4655
 11356  02B1                     u1880:	
 11357  02B1                     l4649:	
 11358                           
 11359                           ;main.c: 323:                     if(checkDebounceSW2()){
 11360  02B1  3183  237F  3182   	fcall	_checkDebounceSW2
 11361  02B4  3A00               	xorlw	0
 11362  02B5  1903               	skipnz
 11363  02B6  2AB8               	goto	u1891
 11364  02B7  2AB9               	goto	u1890
 11365  02B8                     u1891:	
 11366  02B8  2AC1               	goto	l4655
 11367  02B9                     u1890:	
 11368  02B9                     l4651:	
 11369                           
 11370                           ;main.c: 325:                         mode_field_subfield[1] = subfield;
 11371  02B9  0020               	movlb	0	; select bank0
 11372  02BA  0847               	movf	clock_subfields@subfield+1,w
 11373  02BB  00DA               	movwf	_mode_field_subfield+3
 11374  02BC  0846               	movf	clock_subfields@subfield,w
 11375  02BD  00D9               	movwf	_mode_field_subfield+2
 11376  02BE                     l4653:	
 11377                           
 11378                           ;main.c: 326:                         increment_subfield();
 11379  02BE  3184  24F9  3182   	fcall	_increment_subfield
 11380  02C1                     l4655:	
 11381                           
 11382                           ;main.c: 330:                    _delay((unsigned long)((2)*(1000000/4000.0)));
 11383  02C1  30A6               	movlw	166
 11384  02C2                     u2647:	
 11385  02C2  0B89               	decfsz	9,f
 11386  02C3  2AC2               	goto	u2647
 11387  02C4  3200               	nop2
 11388  02C5                     l4657:	
 11389                           
 11390                           ;main.c: 332:             }while(subfield <= 4 );
 11391  02C5  3000               	movlw	0
 11392  02C6  0020               	movlb	0	; select bank0
 11393  02C7  0247               	subwf	clock_subfields@subfield+1,w
 11394  02C8  3005               	movlw	5
 11395  02C9  1903               	skipnz
 11396  02CA  0246               	subwf	clock_subfields@subfield,w
 11397  02CB  1C03               	skipc
 11398  02CC  2ACE               	goto	u1901
 11399  02CD  2ACF               	goto	u1900
 11400  02CE                     u1901:	
 11401  02CE  2A72               	goto	l4631
 11402  02CF                     u1900:	
 11403  02CF                     l1239:	
 11404  02CF  0008               	return
 11405  02D0                     __end_of_clock_subfields:	
 11406                           
 11407                           	psect	text9
 11408  0F22                     __ptext9:	
 11409 ;; *************** function _mod4_LED *****************
 11410 ;; Defined at:
 11411 ;;		line 449 in file "main.c"
 11412 ;; Parameters:    Size  Location     Type
 11413 ;;		None
 11414 ;; Auto vars:     Size  Location     Type
 11415 ;;		None
 11416 ;; Return value:  Size  Location     Type
 11417 ;;                  1    wreg      void 
 11418 ;; Registers used:
 11419 ;;		wreg, status,2, status,0, pclath, cstack
 11420 ;; Tracked objects:
 11421 ;;		On entry : 0/0
 11422 ;;		On exit  : 0/0
 11423 ;;		Unchanged: 0/0
 11424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11429 ;;Total ram usage:        0 bytes
 11430 ;; Hardware stack levels used:    1
 11431 ;; Hardware stack levels required when called:    7
 11432 ;; This function calls:
 11433 ;;		_PWM6_LoadDutyValue
 11434 ;; This function is called by:
 11435 ;;		_config_routine
 11436 ;;		_clock_subfields
 11437 ;; This function uses a non-reentrant model
 11438 ;;
 11439                           
 11440                           
 11441                           ;psect for function _mod4_LED
 11442  0F22                     _mod4_LED:	
 11443  0F22                     l4211:	
 11444                           ;incstack = 0
 11445                           ; Regs used in _mod4_LED: [wreg+status,2+status,0+pclath+cstack]
 11446                           
 11447                           
 11448                           ;main.c: 450:     LATA = 0;
 11449  0F22  0020               	movlb	0	; select bank0
 11450  0F23  0196               	clrf	22	;volatile
 11451  0F24                     l4213:	
 11452                           
 11453                           ;main.c: 451:     PWM6_LoadDutyValue(0);
 11454  0F24  3000               	movlw	0
 11455  0F25  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
 11456  0F26  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11457  0F27  3187  272F  318F   	fcall	_PWM6_LoadDutyValue
 11458  0F2A                     l4215:	
 11459  0F2A  0020               	movlb	0	; select bank0
 11460  0F2B  1616               	bsf	22,4	;volatile
 11461  0F2C                     l1296:	
 11462  0F2C  0008               	return
 11463  0F2D                     __end_of_mod4_LED:	
 11464                           
 11465                           	psect	text10
 11466  0F17                     __ptext10:	
 11467 ;; *************** function _mod3_LED *****************
 11468 ;; Defined at:
 11469 ;;		line 442 in file "main.c"
 11470 ;; Parameters:    Size  Location     Type
 11471 ;;		None
 11472 ;; Auto vars:     Size  Location     Type
 11473 ;;		None
 11474 ;; Return value:  Size  Location     Type
 11475 ;;                  1    wreg      void 
 11476 ;; Registers used:
 11477 ;;		wreg, status,2, status,0, pclath, cstack
 11478 ;; Tracked objects:
 11479 ;;		On entry : 0/0
 11480 ;;		On exit  : 0/0
 11481 ;;		Unchanged: 0/0
 11482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11487 ;;Total ram usage:        0 bytes
 11488 ;; Hardware stack levels used:    1
 11489 ;; Hardware stack levels required when called:    7
 11490 ;; This function calls:
 11491 ;;		_PWM6_LoadDutyValue
 11492 ;; This function is called by:
 11493 ;;		_config_routine
 11494 ;;		_clock_subfields
 11495 ;; This function uses a non-reentrant model
 11496 ;;
 11497                           
 11498                           
 11499                           ;psect for function _mod3_LED
 11500  0F17                     _mod3_LED:	
 11501  0F17                     l4205:	
 11502                           ;incstack = 0
 11503                           ; Regs used in _mod3_LED: [wreg+status,2+status,0+pclath+cstack]
 11504                           
 11505                           
 11506                           ;main.c: 443:     LATA = 0;
 11507  0F17  0020               	movlb	0	; select bank0
 11508  0F18  0196               	clrf	22	;volatile
 11509  0F19                     l4207:	
 11510                           
 11511                           ;main.c: 444:     PWM6_LoadDutyValue(0);
 11512  0F19  3000               	movlw	0
 11513  0F1A  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
 11514  0F1B  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11515  0F1C  3187  272F  318F   	fcall	_PWM6_LoadDutyValue
 11516  0F1F                     l4209:	
 11517  0F1F  0020               	movlb	0	; select bank0
 11518  0F20  1696               	bsf	22,5	;volatile
 11519  0F21                     l1291:	
 11520  0F21  0008               	return
 11521  0F22                     __end_of_mod3_LED:	
 11522                           
 11523                           	psect	text11
 11524  0F02                     __ptext11:	
 11525 ;; *************** function _mod2_LED *****************
 11526 ;; Defined at:
 11527 ;;		line 437 in file "main.c"
 11528 ;; Parameters:    Size  Location     Type
 11529 ;;		None
 11530 ;; Auto vars:     Size  Location     Type
 11531 ;;		None
 11532 ;; Return value:  Size  Location     Type
 11533 ;;                  1    wreg      void 
 11534 ;; Registers used:
 11535 ;;		wreg, status,2, status,0, pclath, cstack
 11536 ;; Tracked objects:
 11537 ;;		On entry : 0/0
 11538 ;;		On exit  : 0/0
 11539 ;;		Unchanged: 0/0
 11540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11545 ;;Total ram usage:        0 bytes
 11546 ;; Hardware stack levels used:    1
 11547 ;; Hardware stack levels required when called:    7
 11548 ;; This function calls:
 11549 ;;		_PWM6_LoadDutyValue
 11550 ;; This function is called by:
 11551 ;;		_config_routine
 11552 ;;		_clock_subfields
 11553 ;; This function uses a non-reentrant model
 11554 ;;
 11555                           
 11556                           
 11557                           ;psect for function _mod2_LED
 11558  0F02                     _mod2_LED:	
 11559  0F02                     l4201:	
 11560                           ;incstack = 0
 11561                           ; Regs used in _mod2_LED: [wreg+status,2+status,0+pclath+cstack]
 11562                           
 11563                           
 11564                           ;main.c: 438:     LATA = 0;
 11565  0F02  0020               	movlb	0	; select bank0
 11566  0F03  0196               	clrf	22	;volatile
 11567  0F04                     l4203:	
 11568                           
 11569                           ;main.c: 439:     PWM6_LoadDutyValue(1023);
 11570  0F04  30FF               	movlw	255
 11571  0F05  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
 11572  0F06  3003               	movlw	3
 11573  0F07  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11574  0F08  3187  272F  318F   	fcall	_PWM6_LoadDutyValue
 11575  0F0B                     l1286:	
 11576  0F0B  0008               	return
 11577  0F0C                     __end_of_mod2_LED:	
 11578                           
 11579                           	psect	text12
 11580  0F0C                     __ptext12:	
 11581 ;; *************** function _mod1_LED *****************
 11582 ;; Defined at:
 11583 ;;		line 430 in file "main.c"
 11584 ;; Parameters:    Size  Location     Type
 11585 ;;		None
 11586 ;; Auto vars:     Size  Location     Type
 11587 ;;		None
 11588 ;; Return value:  Size  Location     Type
 11589 ;;                  1    wreg      void 
 11590 ;; Registers used:
 11591 ;;		wreg, status,2, status,0, pclath, cstack
 11592 ;; Tracked objects:
 11593 ;;		On entry : 0/0
 11594 ;;		On exit  : 0/0
 11595 ;;		Unchanged: 0/0
 11596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11601 ;;Total ram usage:        0 bytes
 11602 ;; Hardware stack levels used:    1
 11603 ;; Hardware stack levels required when called:    7
 11604 ;; This function calls:
 11605 ;;		_PWM6_LoadDutyValue
 11606 ;; This function is called by:
 11607 ;;		_config_routine
 11608 ;;		_clock_subfields
 11609 ;; This function uses a non-reentrant model
 11610 ;;
 11611                           
 11612                           
 11613                           ;psect for function _mod1_LED
 11614  0F0C                     _mod1_LED:	
 11615  0F0C                     l4195:	
 11616                           ;incstack = 0
 11617                           ; Regs used in _mod1_LED: [wreg+status,2+status,0+pclath+cstack]
 11618                           
 11619                           
 11620                           ;main.c: 431:     LATA = 0;
 11621  0F0C  0020               	movlb	0	; select bank0
 11622  0F0D  0196               	clrf	22	;volatile
 11623  0F0E                     l4197:	
 11624                           
 11625                           ;main.c: 432:     PWM6_LoadDutyValue(0);
 11626  0F0E  3000               	movlw	0
 11627  0F0F  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
 11628  0F10  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11629  0F11  3187  272F  318F   	fcall	_PWM6_LoadDutyValue
 11630  0F14                     l4199:	
 11631  0F14  0020               	movlb	0	; select bank0
 11632  0F15  1796               	bsf	22,7	;volatile
 11633  0F16                     l1283:	
 11634  0F16  0008               	return
 11635  0F17                     __end_of_mod1_LED:	
 11636                           
 11637                           	psect	text13
 11638  04F9                     __ptext13:	
 11639 ;; *************** function _increment_subfield *****************
 11640 ;; Defined at:
 11641 ;;		line 270 in file "main.c"
 11642 ;; Parameters:    Size  Location     Type
 11643 ;;		None
 11644 ;; Auto vars:     Size  Location     Type
 11645 ;;  exit            2   12[BANK0 ] int 
 11646 ;;  plus            2   10[BANK0 ] int 
 11647 ;; Return value:  Size  Location     Type
 11648 ;;                  1    wreg      void 
 11649 ;; Registers used:
 11650 ;;		wreg, status,2, status,0, pclath, cstack
 11651 ;; Tracked objects:
 11652 ;;		On entry : 0/0
 11653 ;;		On exit  : 0/0
 11654 ;;		Unchanged: 0/0
 11655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11657 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11659 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11660 ;;Total ram usage:        4 bytes
 11661 ;; Hardware stack levels used:    1
 11662 ;; Hardware stack levels required when called:    7
 11663 ;; This function calls:
 11664 ;;		_PWM6_LoadDutyValue
 11665 ;;		_checkDebounceSW1
 11666 ;;		_checkDebounceSW2
 11667 ;; This function is called by:
 11668 ;;		_clock_subfields
 11669 ;; This function uses a non-reentrant model
 11670 ;;
 11671                           
 11672                           
 11673                           ;psect for function _increment_subfield
 11674  04F9                     _increment_subfield:	
 11675  04F9                     l4217:	
 11676                           ;incstack = 0
 11677                           ; Regs used in _increment_subfield: [wreg+status,2+status,0+pclath+cstack]
 11678                           
 11679                           
 11680                           ;main.c: 271:     int plus = 10;
 11681  04F9  300A               	movlw	10
 11682  04FA  0020               	movlb	0	; select bank0
 11683  04FB  00C1               	movwf	increment_subfield@plus
 11684  04FC  3000               	movlw	0
 11685  04FD  00C2               	movwf	increment_subfield@plus+1
 11686  04FE                     l4219:	
 11687                           
 11688                           ;main.c: 272:     int exit = 0;
 11689  04FE  01C3               	clrf	increment_subfield@exit
 11690  04FF  01C4               	clrf	increment_subfield@exit+1
 11691  0500                     l4221:	
 11692                           
 11693                           ;main.c: 273:     PWM6_LoadDutyValue(0);
 11694  0500  3000               	movlw	0
 11695  0501  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
 11696  0502  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11697  0503  3187  272F  3184   	fcall	_PWM6_LoadDutyValue
 11698                           
 11699                           ;main.c: 275:            while(exit == 0) {
 11700  0506  2D31               	goto	l4235
 11701  0507                     l1217:	
 11702                           
 11703                           ;main.c: 277:                if(!PORTCbits.RC5){
 11704  0507  1A8E               	btfsc	14,5	;volatile
 11705  0508  2D0A               	goto	u1711
 11706  0509  2D0B               	goto	u1710
 11707  050A                     u1711:	
 11708  050A  2D1F               	goto	l4229
 11709  050B                     u1710:	
 11710  050B                     l4223:	
 11711                           
 11712                           ;main.c: 278:                     if(checkDebounceSW2()){
 11713  050B  3183  237F  3184   	fcall	_checkDebounceSW2
 11714  050E  3A00               	xorlw	0
 11715  050F  1903               	skipnz
 11716  0510  2D12               	goto	u1721
 11717  0511  2D13               	goto	u1720
 11718  0512                     u1721:	
 11719  0512  2D1F               	goto	l4229
 11720  0513                     u1720:	
 11721  0513                     l4225:	
 11722                           
 11723                           ;main.c: 279:                            plus += 100;
 11724  0513  3064               	movlw	100
 11725  0514  0020               	movlb	0	; select bank0
 11726  0515  07C1               	addwf	increment_subfield@plus,f
 11727  0516  3000               	movlw	0
 11728  0517  3DC2               	addwfc	increment_subfield@plus+1,f
 11729  0518                     l4227:	
 11730                           
 11731                           ;main.c: 280:                          PWM6_LoadDutyValue(plus);
 11732  0518  0842               	movf	increment_subfield@plus+1,w
 11733  0519  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11734  051A  0841               	movf	increment_subfield@plus,w
 11735  051B  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
 11736  051C  3187  272F  3184   	fcall	_PWM6_LoadDutyValue
 11737  051F                     l4229:	
 11738                           
 11739                           ;main.c: 284:                if(!PORTBbits.RB4){
 11740  051F  0020               	movlb	0	; select bank0
 11741  0520  1A0D               	btfsc	13,4	;volatile
 11742  0521  2D23               	goto	u1731
 11743  0522  2D24               	goto	u1730
 11744  0523                     u1731:	
 11745  0523  2D31               	goto	l4235
 11746  0524                     u1730:	
 11747  0524                     l4231:	
 11748                           
 11749                           ;main.c: 285:                     if(checkDebounceSW1()){
 11750  0524  3183  23CC  3184   	fcall	_checkDebounceSW1
 11751  0527  3A00               	xorlw	0
 11752  0528  1903               	skipnz
 11753  0529  2D2B               	goto	u1741
 11754  052A  2D2C               	goto	u1740
 11755  052B                     u1741:	
 11756  052B  2D31               	goto	l4235
 11757  052C                     u1740:	
 11758  052C                     l4233:	
 11759                           
 11760                           ;main.c: 286:                         exit = 1;
 11761  052C  3001               	movlw	1
 11762  052D  0020               	movlb	0	; select bank0
 11763  052E  00C3               	movwf	increment_subfield@exit
 11764  052F  3000               	movlw	0
 11765  0530  00C4               	movwf	increment_subfield@exit+1
 11766  0531                     l4235:	
 11767                           
 11768                           ;main.c: 275:            while(exit == 0) {
 11769  0531  0020               	movlb	0	; select bank0
 11770  0532  0843               	movf	increment_subfield@exit,w
 11771  0533  0444               	iorwf	increment_subfield@exit+1,w
 11772  0534  1903               	btfsc	3,2
 11773  0535  2D37               	goto	u1751
 11774  0536  2D38               	goto	u1750
 11775  0537                     u1751:	
 11776  0537  2D07               	goto	l1217
 11777  0538                     u1750:	
 11778  0538                     l1223:	
 11779  0538  0008               	return
 11780  0539                     __end_of_increment_subfield:	
 11781                           
 11782                           	psect	text14
 11783  037F                     __ptext14:	
 11784 ;; *************** function _checkDebounceSW2 *****************
 11785 ;; Defined at:
 11786 ;;		line 475 in file "main.c"
 11787 ;; Parameters:    Size  Location     Type
 11788 ;;		None
 11789 ;; Auto vars:     Size  Location     Type
 11790 ;;		None
 11791 ;; Return value:  Size  Location     Type
 11792 ;;                  1    wreg      unsigned char 
 11793 ;; Registers used:
 11794 ;;		wreg, status,2, status,0
 11795 ;; Tracked objects:
 11796 ;;		On entry : 0/0
 11797 ;;		On exit  : 0/0
 11798 ;;		Unchanged: 0/0
 11799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11802 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11803 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11804 ;;Total ram usage:        7 bytes
 11805 ;; Hardware stack levels used:    1
 11806 ;; Hardware stack levels required when called:    6
 11807 ;; This function calls:
 11808 ;;		Nothing
 11809 ;; This function is called by:
 11810 ;;		_config_routine
 11811 ;;		_increment_subfield
 11812 ;;		_clock_subfields
 11813 ;; This function uses a non-reentrant model
 11814 ;;
 11815                           
 11816                           
 11817                           ;psect for function _checkDebounceSW2
 11818  037F                     _checkDebounceSW2:	
 11819  037F                     l3997:	
 11820                           ;incstack = 0
 11821                           ; Regs used in _checkDebounceSW2: [wreg+status,2+status,0]
 11822                           
 11823                           
 11824                           ;main.c: 478:     if(clkms - last_ms2 < 0){
 11825  037F  0020               	movlb	0	; select bank0
 11826  0380  0833               	movf	_clkms,w	;volatile
 11827  0381  00BA               	movwf	??_checkDebounceSW2
 11828  0382  01BB               	clrf	??_checkDebounceSW2+1
 11829  0383  083B               	movf	??_checkDebounceSW2+1,w
 11830  0384  00BD               	movwf	??_checkDebounceSW2+3
 11831  0385  0831               	movf	_last_ms2,w
 11832  0386  023A               	subwf	??_checkDebounceSW2,w
 11833  0387  00BC               	movwf	??_checkDebounceSW2+2
 11834  0388  1C03               	skipc
 11835  0389  03BD               	decf	??_checkDebounceSW2+3,f
 11836  038A  1FBD               	btfss	??_checkDebounceSW2+3,7
 11837  038B  2B8D               	goto	u1581
 11838  038C  2B8E               	goto	u1580
 11839  038D                     u1581:	
 11840  038D  2BB2               	goto	l4005
 11841  038E                     u1580:	
 11842  038E                     l3999:	
 11843                           
 11844                           ;main.c: 480:         if ((200 - last_ms2)+ clkms > 10 ){
 11845  038E  0833               	movf	_clkms,w	;volatile
 11846  038F  00BA               	movwf	??_checkDebounceSW2
 11847  0390  01BB               	clrf	??_checkDebounceSW2+1
 11848  0391  083B               	movf	??_checkDebounceSW2+1,w
 11849  0392  00BD               	movwf	??_checkDebounceSW2+3
 11850  0393  0831               	movf	_last_ms2,w
 11851  0394  023A               	subwf	??_checkDebounceSW2,w
 11852  0395  00BC               	movwf	??_checkDebounceSW2+2
 11853  0396  1C03               	skipc
 11854  0397  03BD               	decf	??_checkDebounceSW2+3,f
 11855  0398  083C               	movf	??_checkDebounceSW2+2,w
 11856  0399  3EC8               	addlw	200
 11857  039A  00BE               	movwf	??_checkDebounceSW2+4
 11858  039B  3000               	movlw	0
 11859  039C  3D3D               	addwfc	??_checkDebounceSW2+3,w
 11860  039D  00BF               	movwf	??_checkDebounceSW2+5
 11861  039E  083F               	movf	??_checkDebounceSW2+5,w
 11862  039F  3A80               	xorlw	128
 11863  03A0  00C0               	movwf	??_checkDebounceSW2+6
 11864  03A1  3080               	movlw	128
 11865  03A2  0240               	subwf	??_checkDebounceSW2+6,w
 11866  03A3  1D03               	skipz
 11867  03A4  2BA7               	goto	u1595
 11868  03A5  300B               	movlw	11
 11869  03A6  023E               	subwf	??_checkDebounceSW2+4,w
 11870  03A7                     u1595:	
 11871  03A7  1C03               	skipc
 11872  03A8  2BAA               	goto	u1591
 11873  03A9  2BAB               	goto	u1590
 11874  03AA                     u1591:	
 11875  03AA  2BB2               	goto	l4005
 11876  03AB                     u1590:	
 11877  03AB                     l4001:	
 11878                           
 11879                           ;main.c: 481:             last_ms2 = clkms;
 11880  03AB  0020               	movlb	0	; select bank0
 11881  03AC  0833               	movf	_clkms,w	;volatile
 11882  03AD  00BA               	movwf	??_checkDebounceSW2
 11883  03AE  083A               	movf	??_checkDebounceSW2,w
 11884  03AF  00B1               	movwf	_last_ms2
 11885                           
 11886                           ;main.c: 482:             return 1;
 11887  03B0  3001               	movlw	1
 11888  03B1  2BCB               	goto	l1308
 11889  03B2                     l4005:	
 11890                           
 11891                           ;main.c: 486:     if(clkms - last_ms2 < 10){
 11892  03B2  0020               	movlb	0	; select bank0
 11893  03B3  0833               	movf	_clkms,w	;volatile
 11894  03B4  00BA               	movwf	??_checkDebounceSW2
 11895  03B5  01BB               	clrf	??_checkDebounceSW2+1
 11896  03B6  083B               	movf	??_checkDebounceSW2+1,w
 11897  03B7  00BD               	movwf	??_checkDebounceSW2+3
 11898  03B8  0831               	movf	_last_ms2,w
 11899  03B9  023A               	subwf	??_checkDebounceSW2,w
 11900  03BA  00BC               	movwf	??_checkDebounceSW2+2
 11901  03BB  1C03               	skipc
 11902  03BC  03BD               	decf	??_checkDebounceSW2+3,f
 11903  03BD  083D               	movf	??_checkDebounceSW2+3,w
 11904  03BE  3A80               	xorlw	128
 11905  03BF  00BE               	movwf	??_checkDebounceSW2+4
 11906  03C0  3080               	movlw	128
 11907  03C1  023E               	subwf	??_checkDebounceSW2+4,w
 11908  03C2  1D03               	skipz
 11909  03C3  2BC6               	goto	u1605
 11910  03C4  300A               	movlw	10
 11911  03C5  023C               	subwf	??_checkDebounceSW2+2,w
 11912  03C6                     u1605:	
 11913  03C6  1803               	skipnc
 11914  03C7  2BC9               	goto	u1601
 11915  03C8  2BCA               	goto	u1600
 11916  03C9                     u1601:	
 11917  03C9  2BAB               	goto	l4001
 11918  03CA                     u1600:	
 11919  03CA                     l4007:	
 11920                           
 11921                           ;main.c: 487:         return 0;
 11922  03CA  3000               	movlw	0
 11923  03CB                     l1308:	
 11924  03CB  0008               	return
 11925  03CC                     __end_of_checkDebounceSW2:	
 11926                           
 11927                           	psect	text15
 11928  03CC                     __ptext15:	
 11929 ;; *************** function _checkDebounceSW1 *****************
 11930 ;; Defined at:
 11931 ;;		line 455 in file "main.c"
 11932 ;; Parameters:    Size  Location     Type
 11933 ;;		None
 11934 ;; Auto vars:     Size  Location     Type
 11935 ;;		None
 11936 ;; Return value:  Size  Location     Type
 11937 ;;                  1    wreg      unsigned char 
 11938 ;; Registers used:
 11939 ;;		wreg, status,2, status,0
 11940 ;; Tracked objects:
 11941 ;;		On entry : 0/0
 11942 ;;		On exit  : 0/0
 11943 ;;		Unchanged: 0/0
 11944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11947 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11948 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11949 ;;Total ram usage:        7 bytes
 11950 ;; Hardware stack levels used:    1
 11951 ;; Hardware stack levels required when called:    6
 11952 ;; This function calls:
 11953 ;;		Nothing
 11954 ;; This function is called by:
 11955 ;;		_config_routine
 11956 ;;		_increment_subfield
 11957 ;;		_clock_subfields
 11958 ;; This function uses a non-reentrant model
 11959 ;;
 11960                           
 11961                           
 11962                           ;psect for function _checkDebounceSW1
 11963  03CC                     _checkDebounceSW1:	
 11964  03CC                     l3977:	
 11965                           ;incstack = 0
 11966                           ; Regs used in _checkDebounceSW1: [wreg+status,2+status,0]
 11967                           
 11968                           
 11969                           ;main.c: 458:     if(clkms - last_ms < 0){
 11970  03CC  0020               	movlb	0	; select bank0
 11971  03CD  0833               	movf	_clkms,w	;volatile
 11972  03CE  00BA               	movwf	??_checkDebounceSW1
 11973  03CF  01BB               	clrf	??_checkDebounceSW1+1
 11974  03D0  083B               	movf	??_checkDebounceSW1+1,w
 11975  03D1  00BD               	movwf	??_checkDebounceSW1+3
 11976  03D2  0832               	movf	_last_ms,w
 11977  03D3  023A               	subwf	??_checkDebounceSW1,w
 11978  03D4  00BC               	movwf	??_checkDebounceSW1+2
 11979  03D5  1C03               	skipc
 11980  03D6  03BD               	decf	??_checkDebounceSW1+3,f
 11981  03D7  1FBD               	btfss	??_checkDebounceSW1+3,7
 11982  03D8  2BDA               	goto	u1551
 11983  03D9  2BDB               	goto	u1550
 11984  03DA                     u1551:	
 11985  03DA  2BFF               	goto	l3985
 11986  03DB                     u1550:	
 11987  03DB                     l3979:	
 11988                           
 11989                           ;main.c: 460:         if ((200 - last_ms)+ clkms > 10 ){
 11990  03DB  0833               	movf	_clkms,w	;volatile
 11991  03DC  00BA               	movwf	??_checkDebounceSW1
 11992  03DD  01BB               	clrf	??_checkDebounceSW1+1
 11993  03DE  083B               	movf	??_checkDebounceSW1+1,w
 11994  03DF  00BD               	movwf	??_checkDebounceSW1+3
 11995  03E0  0832               	movf	_last_ms,w
 11996  03E1  023A               	subwf	??_checkDebounceSW1,w
 11997  03E2  00BC               	movwf	??_checkDebounceSW1+2
 11998  03E3  1C03               	skipc
 11999  03E4  03BD               	decf	??_checkDebounceSW1+3,f
 12000  03E5  083C               	movf	??_checkDebounceSW1+2,w
 12001  03E6  3EC8               	addlw	200
 12002  03E7  00BE               	movwf	??_checkDebounceSW1+4
 12003  03E8  3000               	movlw	0
 12004  03E9  3D3D               	addwfc	??_checkDebounceSW1+3,w
 12005  03EA  00BF               	movwf	??_checkDebounceSW1+5
 12006  03EB  083F               	movf	??_checkDebounceSW1+5,w
 12007  03EC  3A80               	xorlw	128
 12008  03ED  00C0               	movwf	??_checkDebounceSW1+6
 12009  03EE  3080               	movlw	128
 12010  03EF  0240               	subwf	??_checkDebounceSW1+6,w
 12011  03F0  1D03               	skipz
 12012  03F1  2BF4               	goto	u1565
 12013  03F2  300B               	movlw	11
 12014  03F3  023E               	subwf	??_checkDebounceSW1+4,w
 12015  03F4                     u1565:	
 12016  03F4  1C03               	skipc
 12017  03F5  2BF7               	goto	u1561
 12018  03F6  2BF8               	goto	u1560
 12019  03F7                     u1561:	
 12020  03F7  2BFF               	goto	l3985
 12021  03F8                     u1560:	
 12022  03F8                     l3981:	
 12023                           
 12024                           ;main.c: 461:             last_ms = clkms;
 12025  03F8  0020               	movlb	0	; select bank0
 12026  03F9  0833               	movf	_clkms,w	;volatile
 12027  03FA  00BA               	movwf	??_checkDebounceSW1
 12028  03FB  083A               	movf	??_checkDebounceSW1,w
 12029  03FC  00B2               	movwf	_last_ms
 12030                           
 12031                           ;main.c: 462:             return 1;
 12032  03FD  3001               	movlw	1
 12033  03FE  2C18               	goto	l1301
 12034  03FF                     l3985:	
 12035                           
 12036                           ;main.c: 466:     if(clkms - last_ms < 10){
 12037  03FF  0020               	movlb	0	; select bank0
 12038  0400  0833               	movf	_clkms,w	;volatile
 12039  0401  00BA               	movwf	??_checkDebounceSW1
 12040  0402  01BB               	clrf	??_checkDebounceSW1+1
 12041  0403  083B               	movf	??_checkDebounceSW1+1,w
 12042  0404  00BD               	movwf	??_checkDebounceSW1+3
 12043  0405  0832               	movf	_last_ms,w
 12044  0406  023A               	subwf	??_checkDebounceSW1,w
 12045  0407  00BC               	movwf	??_checkDebounceSW1+2
 12046  0408  1C03               	skipc
 12047  0409  03BD               	decf	??_checkDebounceSW1+3,f
 12048  040A  083D               	movf	??_checkDebounceSW1+3,w
 12049  040B  3A80               	xorlw	128
 12050  040C  00BE               	movwf	??_checkDebounceSW1+4
 12051  040D  3080               	movlw	128
 12052  040E  023E               	subwf	??_checkDebounceSW1+4,w
 12053  040F  1D03               	skipz
 12054  0410  2C13               	goto	u1575
 12055  0411  300A               	movlw	10
 12056  0412  023C               	subwf	??_checkDebounceSW1+2,w
 12057  0413                     u1575:	
 12058  0413  1803               	skipnc
 12059  0414  2C16               	goto	u1571
 12060  0415  2C17               	goto	u1570
 12061  0416                     u1571:	
 12062  0416  2BF8               	goto	l3981
 12063  0417                     u1570:	
 12064  0417                     l3987:	
 12065                           
 12066                           ;main.c: 467:         return 0;
 12067  0417  3000               	movlw	0
 12068  0418                     l1301:	
 12069  0418  0008               	return
 12070  0419                     __end_of_checkDebounceSW1:	
 12071                           
 12072                           	psect	text16
 12073  02D0                     __ptext16:	
 12074 ;; *************** function _all_LED *****************
 12075 ;; Defined at:
 12076 ;;		line 347 in file "main.c"
 12077 ;; Parameters:    Size  Location     Type
 12078 ;;		None
 12079 ;; Auto vars:     Size  Location     Type
 12080 ;;		None
 12081 ;; Return value:  Size  Location     Type
 12082 ;;                  1    wreg      void 
 12083 ;; Registers used:
 12084 ;;		wreg, status,2, status,0, pclath, cstack
 12085 ;; Tracked objects:
 12086 ;;		On entry : 0/0
 12087 ;;		On exit  : 0/0
 12088 ;;		Unchanged: 0/0
 12089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12092 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12093 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12094 ;;Total ram usage:        1 bytes
 12095 ;; Hardware stack levels used:    1
 12096 ;; Hardware stack levels required when called:    7
 12097 ;; This function calls:
 12098 ;;		_PWM6_LoadDutyValue
 12099 ;; This function is called by:
 12100 ;;		_config_routine
 12101 ;; This function uses a non-reentrant model
 12102 ;;
 12103                           
 12104                           
 12105                           ;psect for function _all_LED
 12106  02D0                     _all_LED:	
 12107  02D0                     l1242:	
 12108                           ;incstack = 0
 12109                           ; Regs used in _all_LED: [wreg+status,2+status,0+pclath+cstack]
 12110                           ;main.c: 349:        do { LATAbits.LATA7 = 1; } while(0);
 12111                           
 12112  02D0  0020               	movlb	0	; select bank0
 12113  02D1  1796               	bsf	22,7	;volatile
 12114  02D2                     l4605:	
 12115                           
 12116                           ;main.c: 350:         _delay((unsigned long)((100)*(1000000/4000.0)));
 12117  02D2  3021               	movlw	33
 12118  02D3  0020               	movlb	0	; select bank0
 12119  02D4  00BE               	movwf	??_all_LED
 12120  02D5  3076               	movlw	118
 12121  02D6                     u2657:	
 12122  02D6  0B89               	decfsz	9,f
 12123  02D7  2AD6               	goto	u2657
 12124  02D8  0BBE               	decfsz	??_all_LED,f
 12125  02D9  2AD6               	goto	u2657
 12126  02DA  0000               	nop
 12127  02DB                     l4607:	
 12128  02DB  0020               	movlb	0	; select bank0
 12129  02DC  1396               	bcf	22,7	;volatile
 12130  02DD                     l1245:	
 12131                           
 12132                           ;main.c: 352:        _delay((unsigned long)((100)*(1000000/4000.0)));
 12133  02DD  3021               	movlw	33
 12134  02DE  0020               	movlb	0	; select bank0
 12135  02DF  00BE               	movwf	??_all_LED
 12136  02E0  3076               	movlw	118
 12137  02E1                     u2667:	
 12138  02E1  0B89               	decfsz	9,f
 12139  02E2  2AE1               	goto	u2667
 12140  02E3  0BBE               	decfsz	??_all_LED,f
 12141  02E4  2AE1               	goto	u2667
 12142  02E5  0000               	nop
 12143  02E6                     l4609:	
 12144                           
 12145                           ;main.c: 354:        PWM6_LoadDutyValue(1023);
 12146  02E6  30FF               	movlw	255
 12147  02E7  0020               	movlb	0	; select bank0
 12148  02E8  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
 12149  02E9  3003               	movlw	3
 12150  02EA  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12151  02EB  3187  272F  3182   	fcall	_PWM6_LoadDutyValue
 12152  02EE                     l4611:	
 12153                           
 12154                           ;main.c: 355:         _delay((unsigned long)((100)*(1000000/4000.0)));
 12155  02EE  3021               	movlw	33
 12156  02EF  0020               	movlb	0	; select bank0
 12157  02F0  00BE               	movwf	??_all_LED
 12158  02F1  3076               	movlw	118
 12159  02F2                     u2677:	
 12160  02F2  0B89               	decfsz	9,f
 12161  02F3  2AF2               	goto	u2677
 12162  02F4  0BBE               	decfsz	??_all_LED,f
 12163  02F5  2AF2               	goto	u2677
 12164  02F6  0000               	nop
 12165                           
 12166                           ;main.c: 357:         PWM6_LoadDutyValue(0);
 12167  02F7  3000               	movlw	0
 12168  02F8  0020               	movlb	0	; select bank0
 12169  02F9  00BA               	movwf	PWM6_LoadDutyValue@dutyValue
 12170  02FA  00BB               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12171  02FB  3187  272F  3182   	fcall	_PWM6_LoadDutyValue
 12172  02FE                     l4613:	
 12173                           
 12174                           ;main.c: 358:         _delay((unsigned long)((100)*(1000000/4000.0)));
 12175  02FE  3021               	movlw	33
 12176  02FF  0020               	movlb	0	; select bank0
 12177  0300  00BE               	movwf	??_all_LED
 12178  0301  3076               	movlw	118
 12179  0302                     u2687:	
 12180  0302  0B89               	decfsz	9,f
 12181  0303  2B02               	goto	u2687
 12182  0304  0BBE               	decfsz	??_all_LED,f
 12183  0305  2B02               	goto	u2687
 12184  0306  0000               	nop
 12185  0307                     l4615:	
 12186  0307  0020               	movlb	0	; select bank0
 12187  0308  1696               	bsf	22,5	;volatile
 12188  0309                     l4617:	
 12189                           
 12190                           ;main.c: 360:          _delay((unsigned long)((100)*(1000000/4000.0)));
 12191  0309  3021               	movlw	33
 12192  030A  0020               	movlb	0	; select bank0
 12193  030B  00BE               	movwf	??_all_LED
 12194  030C  3076               	movlw	118
 12195  030D                     u2697:	
 12196  030D  0B89               	decfsz	9,f
 12197  030E  2B0D               	goto	u2697
 12198  030F  0BBE               	decfsz	??_all_LED,f
 12199  0310  2B0D               	goto	u2697
 12200  0311  0000               	nop
 12201  0312                     l4619:	
 12202  0312  0020               	movlb	0	; select bank0
 12203  0313  1296               	bcf	22,5	;volatile
 12204  0314                     l4621:	
 12205                           
 12206                           ;main.c: 362:        _delay((unsigned long)((100)*(1000000/4000.0)));
 12207  0314  3021               	movlw	33
 12208  0315  0020               	movlb	0	; select bank0
 12209  0316  00BE               	movwf	??_all_LED
 12210  0317  3076               	movlw	118
 12211  0318                     u2707:	
 12212  0318  0B89               	decfsz	9,f
 12213  0319  2B18               	goto	u2707
 12214  031A  0BBE               	decfsz	??_all_LED,f
 12215  031B  2B18               	goto	u2707
 12216  031C  0000               	nop
 12217  031D                     l4623:	
 12218  031D  0020               	movlb	0	; select bank0
 12219  031E  1616               	bsf	22,4	;volatile
 12220  031F                     l4625:	
 12221                           
 12222                           ;main.c: 364:         _delay((unsigned long)((100)*(1000000/4000.0)));
 12223  031F  3021               	movlw	33
 12224  0320  0020               	movlb	0	; select bank0
 12225  0321  00BE               	movwf	??_all_LED
 12226  0322  3076               	movlw	118
 12227  0323                     u2717:	
 12228  0323  0B89               	decfsz	9,f
 12229  0324  2B23               	goto	u2717
 12230  0325  0BBE               	decfsz	??_all_LED,f
 12231  0326  2B23               	goto	u2717
 12232  0327  0000               	nop
 12233  0328                     l4627:	
 12234  0328  0020               	movlb	0	; select bank0
 12235  0329  1216               	bcf	22,4	;volatile
 12236  032A                     l1254:	
 12237  032A  0008               	return
 12238  032B                     __end_of_all_LED:	
 12239                           
 12240                           	psect	text17
 12241  072F                     __ptext17:	
 12242 ;; *************** function _PWM6_LoadDutyValue *****************
 12243 ;; Defined at:
 12244 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 12245 ;; Parameters:    Size  Location     Type
 12246 ;;  dutyValue       2    3[BANK0 ] unsigned short 
 12247 ;; Auto vars:     Size  Location     Type
 12248 ;;		None
 12249 ;; Return value:  Size  Location     Type
 12250 ;;                  1    wreg      void 
 12251 ;; Registers used:
 12252 ;;		wreg, status,2, status,0
 12253 ;; Tracked objects:
 12254 ;;		On entry : 0/0
 12255 ;;		On exit  : 0/0
 12256 ;;		Unchanged: 0/0
 12257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12258 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12260 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12261 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12262 ;;Total ram usage:        4 bytes
 12263 ;; Hardware stack levels used:    1
 12264 ;; Hardware stack levels required when called:    6
 12265 ;; This function calls:
 12266 ;;		Nothing
 12267 ;; This function is called by:
 12268 ;;		_main
 12269 ;;		_config_routine
 12270 ;;		_increment_subfield
 12271 ;;		_all_LED
 12272 ;;		_mod1_LED
 12273 ;;		_mod2_LED
 12274 ;;		_mod3_LED
 12275 ;;		_mod4_LED
 12276 ;; This function uses a non-reentrant model
 12277 ;;
 12278                           
 12279                           
 12280                           ;psect for function _PWM6_LoadDutyValue
 12281  072F                     _PWM6_LoadDutyValue:	
 12282  072F                     l3959:	
 12283                           ;incstack = 0
 12284                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 12285                           
 12286                           
 12287                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 12288  072F  0020               	movlb	0	; select bank0
 12289  0730  083B               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 12290  0731  00BD               	movwf	??_PWM6_LoadDutyValue+1
 12291  0732  083A               	movf	PWM6_LoadDutyValue@dutyValue,w
 12292  0733  00BC               	movwf	??_PWM6_LoadDutyValue
 12293  0734  36BD               	lsrf	??_PWM6_LoadDutyValue+1,f
 12294  0735  0CBC               	rrf	??_PWM6_LoadDutyValue,f
 12295  0736  36BD               	lsrf	??_PWM6_LoadDutyValue+1,f
 12296  0737  0CBC               	rrf	??_PWM6_LoadDutyValue,f
 12297  0738  083C               	movf	??_PWM6_LoadDutyValue,w
 12298  0739  0027               	movlb	7	; select bank7
 12299  073A  008D               	movwf	13	;volatile
 12300                           
 12301                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 12302  073B  0020               	movlb	0	; select bank0
 12303  073C  083A               	movf	PWM6_LoadDutyValue@dutyValue,w
 12304  073D  3903               	andlw	3
 12305  073E  00BC               	movwf	??_PWM6_LoadDutyValue
 12306  073F  3005               	movlw	5
 12307  0740                     u1545:	
 12308  0740  35BC               	lslf	??_PWM6_LoadDutyValue,f
 12309  0741  3EFF               	addlw	-1
 12310  0742  1D03               	skipz
 12311  0743  2F40               	goto	u1545
 12312  0744  353C               	lslf	??_PWM6_LoadDutyValue,w
 12313  0745  0027               	movlb	7	; select bank7
 12314  0746  008C               	movwf	12	;volatile
 12315  0747                     l916:	
 12316  0747  0008               	return
 12317  0748                     __end_of_PWM6_LoadDutyValue:	
 12318                           
 12319                           	psect	text18
 12320  0E4A                     __ptext18:	
 12321 ;; *************** function _TMR0_StartTimer *****************
 12322 ;; Defined at:
 12323 ;;		line 89 in file "mcc_generated_files/tmr0.c"
 12324 ;; Parameters:    Size  Location     Type
 12325 ;;		None
 12326 ;; Auto vars:     Size  Location     Type
 12327 ;;		None
 12328 ;; Return value:  Size  Location     Type
 12329 ;;                  1    wreg      void 
 12330 ;; Registers used:
 12331 ;;		None
 12332 ;; Tracked objects:
 12333 ;;		On entry : 0/0
 12334 ;;		On exit  : 0/0
 12335 ;;		Unchanged: 0/0
 12336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12341 ;;Total ram usage:        0 bytes
 12342 ;; Hardware stack levels used:    1
 12343 ;; Hardware stack levels required when called:    6
 12344 ;; This function calls:
 12345 ;;		Nothing
 12346 ;; This function is called by:
 12347 ;;		_main
 12348 ;; This function uses a non-reentrant model
 12349 ;;
 12350                           
 12351                           
 12352                           ;psect for function _TMR0_StartTimer
 12353  0E4A                     _TMR0_StartTimer:	
 12354  0E4A                     l4853:	
 12355                           ;incstack = 0
 12356                           ; Regs used in _TMR0_StartTimer: []
 12357                           
 12358                           
 12359                           ;mcc_generated_files/tmr0.c: 92:     T0CON0bits.T0EN = 1;
 12360  0E4A  0020               	movlb	0	; select bank0
 12361  0E4B  179E               	bsf	30,7	;volatile
 12362  0E4C                     l1539:	
 12363  0E4C  0008               	return
 12364  0E4D                     __end_of_TMR0_StartTimer:	
 12365                           
 12366                           	psect	text19
 12367  06DF                     __ptext19:	
 12368 ;; *************** function _SYSTEM_Initialize *****************
 12369 ;; Defined at:
 12370 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12371 ;; Parameters:    Size  Location     Type
 12372 ;;		None
 12373 ;; Auto vars:     Size  Location     Type
 12374 ;;		None
 12375 ;; Return value:  Size  Location     Type
 12376 ;;                  1    wreg      void 
 12377 ;; Registers used:
 12378 ;;		wreg, status,2, status,0, pclath, cstack
 12379 ;; Tracked objects:
 12380 ;;		On entry : 0/0
 12381 ;;		On exit  : 0/0
 12382 ;;		Unchanged: 0/0
 12383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12388 ;;Total ram usage:        0 bytes
 12389 ;; Hardware stack levels used:    1
 12390 ;; Hardware stack levels required when called:    8
 12391 ;; This function calls:
 12392 ;;		_ADCC_Initialize
 12393 ;;		_EXT_INT_Initialize
 12394 ;;		_OSCILLATOR_Initialize
 12395 ;;		_PIN_MANAGER_Initialize
 12396 ;;		_PMD_Initialize
 12397 ;;		_PWM6_Initialize
 12398 ;;		_TMR0_Initialize
 12399 ;;		_TMR1_Initialize
 12400 ;;		_TMR2_Initialize
 12401 ;; This function is called by:
 12402 ;;		_main
 12403 ;; This function uses a non-reentrant model
 12404 ;;
 12405                           
 12406                           
 12407                           ;psect for function _SYSTEM_Initialize
 12408  06DF                     _SYSTEM_Initialize:	
 12409  06DF                     l4805:	
 12410                           ;incstack = 0
 12411                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12412                           
 12413                           
 12414                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 12415  06DF  318E  26DF  3186   	fcall	_PMD_Initialize
 12416  06E2                     l4807:	
 12417                           
 12418                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 12419  06E2  3184  24B0  3186   	fcall	_PIN_MANAGER_Initialize
 12420  06E5                     l4809:	
 12421                           
 12422                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 12423  06E5  318E  26F9  3186   	fcall	_OSCILLATOR_Initialize
 12424  06E8                     l4811:	
 12425                           
 12426                           ;mcc_generated_files/mcc.c: 55:     PWM6_Initialize();
 12427  06E8  318F  2754  3186   	fcall	_PWM6_Initialize
 12428  06EB                     l4813:	
 12429                           
 12430                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 12431  06EB  3187  27A8  3186   	fcall	_ADCC_Initialize
 12432  06EE                     l4815:	
 12433                           
 12434                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
 12435  06EE  3187  2761  3186   	fcall	_TMR2_Initialize
 12436  06F1                     l4817:	
 12437                           
 12438                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 12439  06F1  318F  2761  3186   	fcall	_EXT_INT_Initialize
 12440  06F4                     l4819:	
 12441                           
 12442                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
 12443  06F4  3186  26A4  3186   	fcall	_TMR1_Initialize
 12444  06F7                     l4821:	
 12445                           
 12446                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
 12447  06F7  3187  27D4  3186   	fcall	_TMR0_Initialize
 12448  06FA                     l439:	
 12449  06FA  0008               	return
 12450  06FB                     __end_of_SYSTEM_Initialize:	
 12451                           
 12452                           	psect	text20
 12453  0761                     __ptext20:	
 12454 ;; *************** function _TMR2_Initialize *****************
 12455 ;; Defined at:
 12456 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 12457 ;; Parameters:    Size  Location     Type
 12458 ;;		None
 12459 ;; Auto vars:     Size  Location     Type
 12460 ;;		None
 12461 ;; Return value:  Size  Location     Type
 12462 ;;                  1    wreg      void 
 12463 ;; Registers used:
 12464 ;;		wreg, status,2, status,0, pclath, cstack
 12465 ;; Tracked objects:
 12466 ;;		On entry : 0/0
 12467 ;;		On exit  : 0/0
 12468 ;;		Unchanged: 0/0
 12469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12474 ;;Total ram usage:        0 bytes
 12475 ;; Hardware stack levels used:    1
 12476 ;; Hardware stack levels required when called:    7
 12477 ;; This function calls:
 12478 ;;		_TMR2_SetInterruptHandler
 12479 ;; This function is called by:
 12480 ;;		_SYSTEM_Initialize
 12481 ;; This function uses a non-reentrant model
 12482 ;;
 12483                           
 12484                           
 12485                           ;psect for function _TMR2_Initialize
 12486  0761                     _TMR2_Initialize:	
 12487  0761                     l4525:	
 12488                           ;incstack = 0
 12489                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12490                           
 12491                           
 12492                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
 12493  0761  3001               	movlw	1
 12494  0762  0025               	movlb	5	; select bank5
 12495  0763  0090               	movwf	16	;volatile
 12496                           
 12497                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x20;
 12498  0764  3020               	movlw	32
 12499  0765  008F               	movwf	15	;volatile
 12500  0766                     l4527:	
 12501                           
 12502                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
 12503  0766  0191               	clrf	17	;volatile
 12504  0767                     l4529:	
 12505                           
 12506                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x9B;
 12507  0767  309B               	movlw	155
 12508  0768  008D               	movwf	13	;volatile
 12509                           
 12510                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
 12511  0769  018C               	clrf	12	;volatile
 12512  076A                     l4531:	
 12513                           
 12514                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
 12515  076A  002E               	movlb	14	; select bank14
 12516  076B  1090               	bcf	16,1	;volatile
 12517  076C                     l4533:	
 12518                           
 12519                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
 12520  076C  149A               	bsf	26,1	;volatile
 12521  076D                     l4535:	
 12522                           
 12523                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 12524  076D  302C               	movlw	low _TMR2_DefaultInterruptHandler
 12525  076E  0020               	movlb	0	; select bank0
 12526  076F  00BA               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 12527  0770  300E               	movlw	high _TMR2_DefaultInterruptHandler
 12528  0771  00BB               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 12529  0772  318E  269E  3187   	fcall	_TMR2_SetInterruptHandler
 12530  0775                     l4537:	
 12531                           
 12532                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xB1;
 12533  0775  30B1               	movlw	177
 12534  0776  0025               	movlb	5	; select bank5
 12535  0777  008E               	movwf	14	;volatile
 12536  0778                     l998:	
 12537  0778  0008               	return
 12538  0779                     __end_of_TMR2_Initialize:	
 12539                           
 12540                           	psect	text21
 12541  0E9E                     __ptext21:	
 12542 ;; *************** function _TMR2_SetInterruptHandler *****************
 12543 ;; Defined at:
 12544 ;;		line 178 in file "mcc_generated_files/tmr2.c"
 12545 ;; Parameters:    Size  Location     Type
 12546 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 12547 ;;		 -> handler_clock_ms(1), TMR2_DefaultInterruptHandler(1), 
 12548 ;; Auto vars:     Size  Location     Type
 12549 ;;		None
 12550 ;; Return value:  Size  Location     Type
 12551 ;;                  1    wreg      void 
 12552 ;; Registers used:
 12553 ;;		wreg
 12554 ;; Tracked objects:
 12555 ;;		On entry : 0/0
 12556 ;;		On exit  : 0/0
 12557 ;;		Unchanged: 0/0
 12558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12559 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12562 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12563 ;;Total ram usage:        2 bytes
 12564 ;; Hardware stack levels used:    1
 12565 ;; Hardware stack levels required when called:    6
 12566 ;; This function calls:
 12567 ;;		Nothing
 12568 ;; This function is called by:
 12569 ;;		_TMR2_Initialize
 12570 ;;		_main
 12571 ;; This function uses a non-reentrant model
 12572 ;;
 12573                           
 12574                           
 12575                           ;psect for function _TMR2_SetInterruptHandler
 12576  0E9E                     _TMR2_SetInterruptHandler:	
 12577  0E9E                     l4173:	
 12578                           ;incstack = 0
 12579                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 12580                           
 12581                           
 12582                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
 12583  0E9E  0020               	movlb	0	; select bank0
 12584  0E9F  083B               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 12585  0EA0  00D0               	movwf	_TMR2_InterruptHandler+1
 12586  0EA1  083A               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 12587  0EA2  00CF               	movwf	_TMR2_InterruptHandler
 12588  0EA3                     l1041:	
 12589  0EA3  0008               	return
 12590  0EA4                     __end_of_TMR2_SetInterruptHandler:	
 12591                           
 12592                           	psect	text22
 12593  06A4                     __ptext22:	
 12594 ;; *************** function _TMR1_Initialize *****************
 12595 ;; Defined at:
 12596 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 12597 ;; Parameters:    Size  Location     Type
 12598 ;;		None
 12599 ;; Auto vars:     Size  Location     Type
 12600 ;;		None
 12601 ;; Return value:  Size  Location     Type
 12602 ;;                  1    wreg      void 
 12603 ;; Registers used:
 12604 ;;		wreg, status,2, status,0, pclath, cstack
 12605 ;; Tracked objects:
 12606 ;;		On entry : 0/0
 12607 ;;		On exit  : 0/0
 12608 ;;		Unchanged: 0/0
 12609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12614 ;;Total ram usage:        0 bytes
 12615 ;; Hardware stack levels used:    1
 12616 ;; Hardware stack levels required when called:    7
 12617 ;; This function calls:
 12618 ;;		_TMR1_SetInterruptHandler
 12619 ;; This function is called by:
 12620 ;;		_SYSTEM_Initialize
 12621 ;; This function uses a non-reentrant model
 12622 ;;
 12623                           
 12624                           
 12625                           ;psect for function _TMR1_Initialize
 12626  06A4                     _TMR1_Initialize:	
 12627  06A4                     l4539:	
 12628                           ;incstack = 0
 12629                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12630                           
 12631                           
 12632                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 12633  06A4  0024               	movlb	4	; select bank4
 12634  06A5  018F               	clrf	15	;volatile
 12635                           
 12636                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 12637  06A6  0190               	clrf	16	;volatile
 12638  06A7                     l4541:	
 12639                           
 12640                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
 12641  06A7  3004               	movlw	4
 12642  06A8  0091               	movwf	17	;volatile
 12643  06A9                     l4543:	
 12644                           
 12645                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xE1;
 12646  06A9  30E1               	movlw	225
 12647  06AA  008D               	movwf	13	;volatile
 12648  06AB                     l4545:	
 12649                           
 12650                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xBA;
 12651  06AB  30BA               	movlw	186
 12652  06AC  008C               	movwf	12	;volatile
 12653  06AD                     l4547:	
 12654                           
 12655                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 12656  06AD  080D               	movf	13,w	;volatile
 12657  06AE  0020               	movlb	0	; select bank0
 12658  06AF  00D4               	movwf	_timer1ReloadVal+1	;volatile
 12659  06B0  0024               	movlb	4	; select bank4
 12660  06B1  080C               	movf	12,w	;volatile
 12661  06B2  0020               	movlb	0	; select bank0
 12662  06B3  00D3               	movwf	_timer1ReloadVal	;volatile
 12663  06B4                     l4549:	
 12664                           
 12665                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
 12666  06B4  002E               	movlb	14	; select bank14
 12667  06B5  1010               	bcf	16,0	;volatile
 12668  06B6                     l4551:	
 12669                           
 12670                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 12671  06B6  141A               	bsf	26,0	;volatile
 12672  06B7                     l4553:	
 12673                           
 12674                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 12675  06B7  302B               	movlw	low _TMR1_DefaultInterruptHandler
 12676  06B8  0020               	movlb	0	; select bank0
 12677  06B9  00BA               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 12678  06BA  300E               	movlw	high _TMR1_DefaultInterruptHandler
 12679  06BB  00BB               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 12680  06BC  318E  2698  3186   	fcall	_TMR1_SetInterruptHandler
 12681  06BF                     l4555:	
 12682                           
 12683                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x15;
 12684  06BF  3015               	movlw	21
 12685  06C0  0024               	movlb	4	; select bank4
 12686  06C1  008E               	movwf	14	;volatile
 12687  06C2                     l869:	
 12688  06C2  0008               	return
 12689  06C3                     __end_of_TMR1_Initialize:	
 12690                           
 12691                           	psect	text23
 12692  0E98                     __ptext23:	
 12693 ;; *************** function _TMR1_SetInterruptHandler *****************
 12694 ;; Defined at:
 12695 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 12696 ;; Parameters:    Size  Location     Type
 12697 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 12698 ;;		 -> handler_clock_hms(1), TMR1_DefaultInterruptHandler(1), 
 12699 ;; Auto vars:     Size  Location     Type
 12700 ;;		None
 12701 ;; Return value:  Size  Location     Type
 12702 ;;                  1    wreg      void 
 12703 ;; Registers used:
 12704 ;;		wreg
 12705 ;; Tracked objects:
 12706 ;;		On entry : 0/0
 12707 ;;		On exit  : 0/0
 12708 ;;		Unchanged: 0/0
 12709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12710 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12713 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12714 ;;Total ram usage:        2 bytes
 12715 ;; Hardware stack levels used:    1
 12716 ;; Hardware stack levels required when called:    6
 12717 ;; This function calls:
 12718 ;;		Nothing
 12719 ;; This function is called by:
 12720 ;;		_TMR1_Initialize
 12721 ;;		_main
 12722 ;; This function uses a non-reentrant model
 12723 ;;
 12724                           
 12725                           
 12726                           ;psect for function _TMR1_SetInterruptHandler
 12727  0E98                     _TMR1_SetInterruptHandler:	
 12728  0E98                     l4151:	
 12729                           ;incstack = 0
 12730                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 12731                           
 12732                           
 12733                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
 12734  0E98  0020               	movlb	0	; select bank0
 12735  0E99  083B               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 12736  0E9A  00D2               	movwf	_TMR1_InterruptHandler+1
 12737  0E9B  083A               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 12738  0E9C  00D1               	movwf	_TMR1_InterruptHandler
 12739  0E9D                     l899:	
 12740  0E9D  0008               	return
 12741  0E9E                     __end_of_TMR1_SetInterruptHandler:	
 12742                           
 12743                           	psect	text24
 12744  07D4                     __ptext24:	
 12745 ;; *************** function _TMR0_Initialize *****************
 12746 ;; Defined at:
 12747 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 12748 ;; Parameters:    Size  Location     Type
 12749 ;;		None
 12750 ;; Auto vars:     Size  Location     Type
 12751 ;;		None
 12752 ;; Return value:  Size  Location     Type
 12753 ;;                  1    wreg      void 
 12754 ;; Registers used:
 12755 ;;		wreg, status,2, status,0, pclath, cstack
 12756 ;; Tracked objects:
 12757 ;;		On entry : 0/0
 12758 ;;		On exit  : 0/0
 12759 ;;		Unchanged: 0/0
 12760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12765 ;;Total ram usage:        0 bytes
 12766 ;; Hardware stack levels used:    1
 12767 ;; Hardware stack levels required when called:    7
 12768 ;; This function calls:
 12769 ;;		_TMR0_SetInterruptHandler
 12770 ;; This function is called by:
 12771 ;;		_SYSTEM_Initialize
 12772 ;; This function uses a non-reentrant model
 12773 ;;
 12774                           
 12775                           
 12776                           ;psect for function _TMR0_Initialize
 12777  07D4                     _TMR0_Initialize:	
 12778  07D4                     l4557:	
 12779                           ;incstack = 0
 12780                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12781                           
 12782                           
 12783                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x95;
 12784  07D4  3095               	movlw	149
 12785  07D5  0020               	movlb	0	; select bank0
 12786  07D6  009F               	movwf	31	;volatile
 12787                           
 12788                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF1;
 12789  07D7  30F1               	movlw	241
 12790  07D8  009D               	movwf	29	;volatile
 12791  07D9                     l4559:	
 12792                           
 12793                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 12794  07D9  019C               	clrf	28	;volatile
 12795  07DA                     l4561:	
 12796                           
 12797                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 12798  07DA  002E               	movlb	14	; select bank14
 12799  07DB  128C               	bcf	12,5	;volatile
 12800  07DC                     l4563:	
 12801                           
 12802                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 12803  07DC  1696               	bsf	22,5	;volatile
 12804  07DD                     l4565:	
 12805                           
 12806                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 12807  07DD  302A               	movlw	low _TMR0_DefaultInterruptHandler
 12808  07DE  0020               	movlb	0	; select bank0
 12809  07DF  00BA               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 12810  07E0  300E               	movlw	high _TMR0_DefaultInterruptHandler
 12811  07E1  00BB               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 12812  07E2  318E  2692  3187   	fcall	_TMR0_SetInterruptHandler
 12813  07E5                     l4567:	
 12814                           
 12815                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x0B;
 12816  07E5  300B               	movlw	11
 12817  07E6  0020               	movlb	0	; select bank0
 12818  07E7  009E               	movwf	30	;volatile
 12819  07E8                     l1536:	
 12820  07E8  0008               	return
 12821  07E9                     __end_of_TMR0_Initialize:	
 12822                           
 12823                           	psect	text25
 12824  0E92                     __ptext25:	
 12825 ;; *************** function _TMR0_SetInterruptHandler *****************
 12826 ;; Defined at:
 12827 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 12828 ;; Parameters:    Size  Location     Type
 12829 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 12830 ;;		 -> TMR0_DefaultInterruptHandler(1), ISR_3s(1), 
 12831 ;; Auto vars:     Size  Location     Type
 12832 ;;		None
 12833 ;; Return value:  Size  Location     Type
 12834 ;;                  1    wreg      void 
 12835 ;; Registers used:
 12836 ;;		wreg
 12837 ;; Tracked objects:
 12838 ;;		On entry : 0/0
 12839 ;;		On exit  : 0/0
 12840 ;;		Unchanged: 0/0
 12841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12842 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12845 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12846 ;;Total ram usage:        2 bytes
 12847 ;; Hardware stack levels used:    1
 12848 ;; Hardware stack levels required when called:    6
 12849 ;; This function calls:
 12850 ;;		Nothing
 12851 ;; This function is called by:
 12852 ;;		_main
 12853 ;;		_TMR0_Initialize
 12854 ;; This function uses a non-reentrant model
 12855 ;;
 12856                           
 12857                           
 12858                           ;psect for function _TMR0_SetInterruptHandler
 12859  0E92                     _TMR0_SetInterruptHandler:	
 12860  0E92                     l4193:	
 12861                           ;incstack = 0
 12862                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 12863                           
 12864                           
 12865                           ;mcc_generated_files/tmr0.c: 137:     TMR0_InterruptHandler = InterruptHandler;
 12866  0E92  0020               	movlb	0	; select bank0
 12867  0E93  083B               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 12868  0E94  00CE               	movwf	_TMR0_InterruptHandler+1
 12869  0E95  083A               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 12870  0E96  00CD               	movwf	_TMR0_InterruptHandler
 12871  0E97                     l1558:	
 12872  0E97  0008               	return
 12873  0E98                     __end_of_TMR0_SetInterruptHandler:	
 12874                           
 12875                           	psect	text26
 12876  0F54                     __ptext26:	
 12877 ;; *************** function _PWM6_Initialize *****************
 12878 ;; Defined at:
 12879 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 12880 ;; Parameters:    Size  Location     Type
 12881 ;;		None
 12882 ;; Auto vars:     Size  Location     Type
 12883 ;;		None
 12884 ;; Return value:  Size  Location     Type
 12885 ;;                  1    wreg      void 
 12886 ;; Registers used:
 12887 ;;		wreg, status,2, status,0
 12888 ;; Tracked objects:
 12889 ;;		On entry : 0/0
 12890 ;;		On exit  : 0/0
 12891 ;;		Unchanged: 0/0
 12892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12897 ;;Total ram usage:        0 bytes
 12898 ;; Hardware stack levels used:    1
 12899 ;; Hardware stack levels required when called:    6
 12900 ;; This function calls:
 12901 ;;		Nothing
 12902 ;; This function is called by:
 12903 ;;		_SYSTEM_Initialize
 12904 ;; This function uses a non-reentrant model
 12905 ;;
 12906                           
 12907                           
 12908                           ;psect for function _PWM6_Initialize
 12909  0F54                     _PWM6_Initialize:	
 12910  0F54                     l4515:	
 12911                           ;incstack = 0
 12912                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 12913                           
 12914                           
 12915                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 12916  0F54  3080               	movlw	128
 12917  0F55  0027               	movlb	7	; select bank7
 12918  0F56  008E               	movwf	14	;volatile
 12919                           
 12920                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x3E;
 12921  0F57  303E               	movlw	62
 12922  0F58  008D               	movwf	13	;volatile
 12923                           
 12924                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 12925  0F59  3040               	movlw	64
 12926  0F5A  008C               	movwf	12	;volatile
 12927  0F5B                     l4517:	
 12928                           
 12929                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 12930  0F5B  0024               	movlb	4	; select bank4
 12931  0F5C  081F               	movf	31,w	;volatile
 12932  0F5D  39F3               	andlw	-13
 12933  0F5E  3804               	iorlw	4
 12934  0F5F  009F               	movwf	31	;volatile
 12935  0F60                     l913:	
 12936  0F60  0008               	return
 12937  0F61                     __end_of_PWM6_Initialize:	
 12938                           
 12939                           	psect	text27
 12940  0EDF                     __ptext27:	
 12941 ;; *************** function _PMD_Initialize *****************
 12942 ;; Defined at:
 12943 ;;		line 77 in file "mcc_generated_files/mcc.c"
 12944 ;; Parameters:    Size  Location     Type
 12945 ;;		None
 12946 ;; Auto vars:     Size  Location     Type
 12947 ;;		None
 12948 ;; Return value:  Size  Location     Type
 12949 ;;                  1    wreg      void 
 12950 ;; Registers used:
 12951 ;;		status,2
 12952 ;; Tracked objects:
 12953 ;;		On entry : 0/0
 12954 ;;		On exit  : 0/0
 12955 ;;		Unchanged: 0/0
 12956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12961 ;;Total ram usage:        0 bytes
 12962 ;; Hardware stack levels used:    1
 12963 ;; Hardware stack levels required when called:    6
 12964 ;; This function calls:
 12965 ;;		Nothing
 12966 ;; This function is called by:
 12967 ;;		_SYSTEM_Initialize
 12968 ;; This function uses a non-reentrant model
 12969 ;;
 12970                           
 12971                           
 12972                           ;psect for function _PMD_Initialize
 12973  0EDF                     _PMD_Initialize:	
 12974  0EDF                     l4451:	
 12975                           ;incstack = 0
 12976                           ; Regs used in _PMD_Initialize: [status,2]
 12977                           
 12978                           
 12979                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 12980  0EDF  002F               	movlb	15	; select bank15
 12981  0EE0  0196               	clrf	22	;volatile
 12982                           
 12983                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 12984  0EE1  0197               	clrf	23	;volatile
 12985                           
 12986                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 12987  0EE2  0198               	clrf	24	;volatile
 12988                           
 12989                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 12990  0EE3  0199               	clrf	25	;volatile
 12991                           
 12992                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 12993  0EE4  019A               	clrf	26	;volatile
 12994                           
 12995                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 12996  0EE5  019B               	clrf	27	;volatile
 12997  0EE6                     l445:	
 12998  0EE6  0008               	return
 12999  0EE7                     __end_of_PMD_Initialize:	
 13000                           
 13001                           	psect	text28
 13002  04B0                     __ptext28:	
 13003 ;; *************** function _PIN_MANAGER_Initialize *****************
 13004 ;; Defined at:
 13005 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 13006 ;; Parameters:    Size  Location     Type
 13007 ;;		None
 13008 ;; Auto vars:     Size  Location     Type
 13009 ;;		None
 13010 ;; Return value:  Size  Location     Type
 13011 ;;                  1    wreg      void 
 13012 ;; Registers used:
 13013 ;;		wreg, status,2
 13014 ;; Tracked objects:
 13015 ;;		On entry : 0/0
 13016 ;;		On exit  : 0/0
 13017 ;;		Unchanged: 0/0
 13018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13023 ;;Total ram usage:        0 bytes
 13024 ;; Hardware stack levels used:    1
 13025 ;; Hardware stack levels required when called:    6
 13026 ;; This function calls:
 13027 ;;		Nothing
 13028 ;; This function is called by:
 13029 ;;		_SYSTEM_Initialize
 13030 ;; This function uses a non-reentrant model
 13031 ;;
 13032                           
 13033                           
 13034                           ;psect for function _PIN_MANAGER_Initialize
 13035  04B0                     _PIN_MANAGER_Initialize:	
 13036  04B0                     l4453:	
 13037                           ;incstack = 0
 13038                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 13039                           
 13040                           
 13041                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 13042  04B0  0020               	movlb	0	; select bank0
 13043  04B1  019A               	clrf	26	;volatile
 13044                           
 13045                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 13046  04B2  0199               	clrf	25	;volatile
 13047                           
 13048                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 13049  04B3  0196               	clrf	22	;volatile
 13050                           
 13051                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 13052  04B4  0197               	clrf	23	;volatile
 13053                           
 13054                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 13055  04B5  0198               	clrf	24	;volatile
 13056  04B6                     l4455:	
 13057                           
 13058                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 13059  04B6  3007               	movlw	7
 13060  04B7  0095               	movwf	21	;volatile
 13061  04B8                     l4457:	
 13062                           
 13063                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
 13064  04B8  300F               	movlw	15
 13065  04B9  0091               	movwf	17	;volatile
 13066  04BA                     l4459:	
 13067                           
 13068                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 13069  04BA  30FF               	movlw	255
 13070  04BB  0092               	movwf	18	;volatile
 13071  04BC                     l4461:	
 13072                           
 13073                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 13074  04BC  30FF               	movlw	255
 13075  04BD  0093               	movwf	19	;volatile
 13076  04BE                     l4463:	
 13077                           
 13078                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 13079  04BE  30FF               	movlw	255
 13080  04BF  0094               	movwf	20	;volatile
 13081  04C0                     l4465:	
 13082                           
 13083                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 13084  04C0  30FF               	movlw	255
 13085  04C1  003E               	movlb	30	; select bank30
 13086  04C2  00D9               	movwf	89	;volatile
 13087  04C3                     l4467:	
 13088                           
 13089                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC7;
 13090  04C3  30C7               	movlw	199
 13091  04C4  00CE               	movwf	78	;volatile
 13092  04C5                     l4469:	
 13093                           
 13094                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
 13095  04C5  30EF               	movlw	239
 13096  04C6  00C3               	movwf	67	;volatile
 13097  04C7                     l4471:	
 13098                           
 13099                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 13100  04C7  3007               	movlw	7
 13101  04C8  00E4               	movwf	100	;volatile
 13102  04C9                     l4473:	
 13103                           
 13104                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
 13105  04C9  30FF               	movlw	255
 13106  04CA  00B8               	movwf	56	;volatile
 13107                           
 13108                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 13109  04CB  01DA               	clrf	90	;volatile
 13110                           
 13111                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 13112  04CC  01E5               	clrf	101	;volatile
 13113                           
 13114                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 13115  04CD  01C4               	clrf	68	;volatile
 13116                           
 13117                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 13118  04CE  01B9               	clrf	57	;volatile
 13119                           
 13120                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 13121  04CF  01CF               	clrf	79	;volatile
 13122                           
 13123                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 13124  04D0  01E6               	clrf	102	;volatile
 13125                           
 13126                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 13127  04D1  01BA               	clrf	58	;volatile
 13128                           
 13129                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 13130  04D2  01C5               	clrf	69	;volatile
 13131                           
 13132                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 13133  04D3  01D0               	clrf	80	;volatile
 13134                           
 13135                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 13136  04D4  01DB               	clrf	91	;volatile
 13137  04D5                     l4475:	
 13138                           
 13139                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 13140  04D5  30FF               	movlw	255
 13141  04D6  00BB               	movwf	59	;volatile
 13142  04D7                     l4477:	
 13143                           
 13144                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 13145  04D7  30FF               	movlw	255
 13146  04D8  00C6               	movwf	70	;volatile
 13147  04D9                     l4479:	
 13148                           
 13149                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 13150  04D9  30FF               	movlw	255
 13151  04DA  00D1               	movwf	81	;volatile
 13152  04DB                     l4481:	
 13153                           
 13154                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 13155  04DB  30FF               	movlw	255
 13156  04DC  00DC               	movwf	92	;volatile
 13157  04DD                     l4483:	
 13158                           
 13159                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 13160  04DD  3007               	movlw	7
 13161  04DE  00E7               	movwf	103	;volatile
 13162  04DF                     l4485:	
 13163                           
 13164                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 13165  04DF  30FF               	movlw	255
 13166  04E0  00BC               	movwf	60	;volatile
 13167  04E1                     l4487:	
 13168                           
 13169                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 13170  04E1  30FF               	movlw	255
 13171  04E2  00C7               	movwf	71	;volatile
 13172  04E3                     l4489:	
 13173                           
 13174                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 13175  04E3  30FF               	movlw	255
 13176  04E4  00D2               	movwf	82	;volatile
 13177  04E5                     l4491:	
 13178                           
 13179                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 13180  04E5  30FF               	movlw	255
 13181  04E6  00DD               	movwf	93	;volatile
 13182  04E7                     l4493:	
 13183                           
 13184                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 13185  04E7  3007               	movlw	7
 13186  04E8  00E8               	movwf	104	;volatile
 13187  04E9                     l4495:	
 13188                           
 13189                           ;mcc_generated_files/pin_manager.c: 127:     INTPPS = 0x0C;
 13190  04E9  300C               	movlw	12
 13191  04EA  003D               	movlb	29	; select bank29
 13192  04EB  0090               	movwf	16	;volatile
 13193  04EC                     l4497:	
 13194                           
 13195                           ;mcc_generated_files/pin_manager.c: 128:     SSP1CLKPPS = 0x13;
 13196  04EC  3013               	movlw	19
 13197  04ED  00C5               	movwf	69	;volatile
 13198  04EE                     l4499:	
 13199                           
 13200                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x14;
 13201  04EE  3014               	movlw	20
 13202  04EF  003E               	movlb	30	; select bank30
 13203  04F0  00A3               	movwf	35	;volatile
 13204  04F1                     l4501:	
 13205                           
 13206                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x15;
 13207  04F1  3015               	movlw	21
 13208  04F2  00A4               	movwf	36	;volatile
 13209  04F3                     l4503:	
 13210                           
 13211                           ;mcc_generated_files/pin_manager.c: 131:     RA6PPS = 0x0E;
 13212  04F3  300E               	movlw	14
 13213  04F4  0096               	movwf	22	;volatile
 13214  04F5                     l4505:	
 13215                           
 13216                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 13217  04F5  3014               	movlw	20
 13218  04F6  003D               	movlb	29	; select bank29
 13219  04F7  00C6               	movwf	70	;volatile
 13220  04F8                     l530:	
 13221  04F8  0008               	return
 13222  04F9                     __end_of_PIN_MANAGER_Initialize:	
 13223                           
 13224                           	psect	text29
 13225  0EF9                     __ptext29:	
 13226 ;; *************** function _OSCILLATOR_Initialize *****************
 13227 ;; Defined at:
 13228 ;;		line 63 in file "mcc_generated_files/mcc.c"
 13229 ;; Parameters:    Size  Location     Type
 13230 ;;		None
 13231 ;; Auto vars:     Size  Location     Type
 13232 ;;		None
 13233 ;; Return value:  Size  Location     Type
 13234 ;;                  1    wreg      void 
 13235 ;; Registers used:
 13236 ;;		wreg, status,2
 13237 ;; Tracked objects:
 13238 ;;		On entry : 0/0
 13239 ;;		On exit  : 0/0
 13240 ;;		Unchanged: 0/0
 13241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13246 ;;Total ram usage:        0 bytes
 13247 ;; Hardware stack levels used:    1
 13248 ;; Hardware stack levels required when called:    6
 13249 ;; This function calls:
 13250 ;;		Nothing
 13251 ;; This function is called by:
 13252 ;;		_SYSTEM_Initialize
 13253 ;; This function uses a non-reentrant model
 13254 ;;
 13255                           
 13256                           
 13257                           ;psect for function _OSCILLATOR_Initialize
 13258  0EF9                     _OSCILLATOR_Initialize:	
 13259  0EF9                     l4507:	
 13260                           ;incstack = 0
 13261                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 13262                           
 13263                           
 13264                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x62;
 13265  0EF9  3062               	movlw	98
 13266  0EFA  0031               	movlb	17	; select bank17
 13267  0EFB  008D               	movwf	13	;volatile
 13268  0EFC                     l4509:	
 13269                           
 13270                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
 13271  0EFC  018F               	clrf	15	;volatile
 13272  0EFD                     l4511:	
 13273                           
 13274                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
 13275  0EFD  0191               	clrf	17	;volatile
 13276                           
 13277                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x02;
 13278  0EFE  3002               	movlw	2
 13279  0EFF  0093               	movwf	19	;volatile
 13280  0F00                     l4513:	
 13281                           
 13282                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 13283  0F00  0192               	clrf	18	;volatile
 13284  0F01                     l442:	
 13285  0F01  0008               	return
 13286  0F02                     __end_of_OSCILLATOR_Initialize:	
 13287                           
 13288                           	psect	text30
 13289  0F61                     __ptext30:	
 13290 ;; *************** function _EXT_INT_Initialize *****************
 13291 ;; Defined at:
 13292 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 13293 ;; Parameters:    Size  Location     Type
 13294 ;;		None
 13295 ;; Auto vars:     Size  Location     Type
 13296 ;;		None
 13297 ;; Return value:  Size  Location     Type
 13298 ;;                  1    wreg      void 
 13299 ;; Registers used:
 13300 ;;		wreg, status,2, status,0, pclath, cstack
 13301 ;; Tracked objects:
 13302 ;;		On entry : 0/0
 13303 ;;		On exit  : 0/0
 13304 ;;		Unchanged: 0/0
 13305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13310 ;;Total ram usage:        0 bytes
 13311 ;; Hardware stack levels used:    1
 13312 ;; Hardware stack levels required when called:    7
 13313 ;; This function calls:
 13314 ;;		_INT_SetInterruptHandler
 13315 ;; This function is called by:
 13316 ;;		_SYSTEM_Initialize
 13317 ;; This function uses a non-reentrant model
 13318 ;;
 13319                           
 13320                           
 13321                           ;psect for function _EXT_INT_Initialize
 13322  0F61                     _EXT_INT_Initialize:	
 13323  0F61                     l4445:	
 13324                           ;incstack = 0
 13325                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13326                           
 13327                           
 13328                           ;mcc_generated_files/ext_int.c: 64:     (PIR0bits.INTF = 0);
 13329  0F61  002E               	movlb	14	; select bank14
 13330  0F62  100C               	bcf	12,0	;volatile
 13331                           
 13332                           ;mcc_generated_files/ext_int.c: 65:     (INTCONbits.INTEDG = 1);
 13333  0F63  140B               	bsf	11,0	;volatile
 13334  0F64                     l4447:	
 13335                           
 13336                           ;mcc_generated_files/ext_int.c: 67:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
 13337  0F64  3029               	movlw	low _INT_DefaultInterruptHandler
 13338  0F65  0020               	movlb	0	; select bank0
 13339  0F66  00BA               	movwf	INT_SetInterruptHandler@InterruptHandler
 13340  0F67  300E               	movlw	high _INT_DefaultInterruptHandler
 13341  0F68  00BB               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 13342  0F69  318E  268C  318F   	fcall	_INT_SetInterruptHandler
 13343  0F6C                     l4449:	
 13344                           
 13345                           ;mcc_generated_files/ext_int.c: 68:     (PIE0bits.INTE = 1);
 13346  0F6C  002E               	movlb	14	; select bank14
 13347  0F6D  1416               	bsf	22,0	;volatile
 13348  0F6E                     l347:	
 13349  0F6E  0008               	return
 13350  0F6F                     __end_of_EXT_INT_Initialize:	
 13351                           
 13352                           	psect	text31
 13353  0E8C                     __ptext31:	
 13354 ;; *************** function _INT_SetInterruptHandler *****************
 13355 ;; Defined at:
 13356 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 13357 ;; Parameters:    Size  Location     Type
 13358 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 13359 ;;		 -> sw1_EXT(1), INT_DefaultInterruptHandler(1), 
 13360 ;; Auto vars:     Size  Location     Type
 13361 ;;		None
 13362 ;; Return value:  Size  Location     Type
 13363 ;;                  1    wreg      void 
 13364 ;; Registers used:
 13365 ;;		wreg
 13366 ;; Tracked objects:
 13367 ;;		On entry : 0/0
 13368 ;;		On exit  : 0/0
 13369 ;;		Unchanged: 0/0
 13370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13371 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13374 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13375 ;;Total ram usage:        2 bytes
 13376 ;; Hardware stack levels used:    1
 13377 ;; Hardware stack levels required when called:    6
 13378 ;; This function calls:
 13379 ;;		Nothing
 13380 ;; This function is called by:
 13381 ;;		_EXT_INT_Initialize
 13382 ;;		_main
 13383 ;; This function uses a non-reentrant model
 13384 ;;
 13385                           
 13386                           
 13387                           ;psect for function _INT_SetInterruptHandler
 13388  0E8C                     _INT_SetInterruptHandler:	
 13389  0E8C                     l4149:	
 13390                           ;incstack = 0
 13391                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 13392                           
 13393                           
 13394                           ;mcc_generated_files/ext_int.c: 51:     INT_InterruptHandler = InterruptHandler;
 13395  0E8C  0020               	movlb	0	; select bank0
 13396  0E8D  083B               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
 13397  0E8E  00D6               	movwf	_INT_InterruptHandler+1
 13398  0E8F  083A               	movf	INT_SetInterruptHandler@InterruptHandler,w
 13399  0E90  00D5               	movwf	_INT_InterruptHandler
 13400  0E91                     l341:	
 13401  0E91  0008               	return
 13402  0E92                     __end_of_INT_SetInterruptHandler:	
 13403                           
 13404                           	psect	text32
 13405  07A8                     __ptext32:	
 13406 ;; *************** function _ADCC_Initialize *****************
 13407 ;; Defined at:
 13408 ;;		line 63 in file "mcc_generated_files/adcc.c"
 13409 ;; Parameters:    Size  Location     Type
 13410 ;;		None
 13411 ;; Auto vars:     Size  Location     Type
 13412 ;;		None
 13413 ;; Return value:  Size  Location     Type
 13414 ;;                  1    wreg      void 
 13415 ;; Registers used:
 13416 ;;		wreg, status,2
 13417 ;; Tracked objects:
 13418 ;;		On entry : 0/0
 13419 ;;		On exit  : 0/0
 13420 ;;		Unchanged: 0/0
 13421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13426 ;;Total ram usage:        0 bytes
 13427 ;; Hardware stack levels used:    1
 13428 ;; Hardware stack levels required when called:    6
 13429 ;; This function calls:
 13430 ;;		Nothing
 13431 ;; This function is called by:
 13432 ;;		_SYSTEM_Initialize
 13433 ;; This function uses a non-reentrant model
 13434 ;;
 13435                           
 13436                           
 13437                           ;psect for function _ADCC_Initialize
 13438  07A8                     _ADCC_Initialize:	
 13439  07A8                     l4519:	
 13440                           ;incstack = 0
 13441                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 13442                           
 13443                           
 13444                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 13445  07A8  0022               	movlb	2	; select bank2
 13446  07A9  018E               	clrf	14	;volatile
 13447                           
 13448                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 13449  07AA  018F               	clrf	15	;volatile
 13450                           
 13451                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 13452  07AB  0190               	clrf	16	;volatile
 13453                           
 13454                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 13455  07AC  0191               	clrf	17	;volatile
 13456                           
 13457                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 13458  07AD  0192               	clrf	18	;volatile
 13459                           
 13460                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 13461  07AE  0193               	clrf	19	;volatile
 13462                           
 13463                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 13464  07AF  018D               	clrf	13	;volatile
 13465                           
 13466                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 13467  07B0  0021               	movlb	1	; select bank1
 13468  07B1  019E               	clrf	30	;volatile
 13469                           
 13470                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 13471  07B2  019B               	clrf	27	;volatile
 13472                           
 13473                           ;mcc_generated_files/adcc.c: 85:     ADCON1 = 0x00;
 13474  07B3  0194               	clrf	20	;volatile
 13475                           
 13476                           ;mcc_generated_files/adcc.c: 87:     ADCON2 = 0x00;
 13477  07B4  0195               	clrf	21	;volatile
 13478                           
 13479                           ;mcc_generated_files/adcc.c: 89:     ADCON3 = 0x00;
 13480  07B5  0196               	clrf	22	;volatile
 13481                           
 13482                           ;mcc_generated_files/adcc.c: 91:     ADSTAT = 0x00;
 13483  07B6  0197               	clrf	23	;volatile
 13484                           
 13485                           ;mcc_generated_files/adcc.c: 93:     ADREF = 0x00;
 13486  07B7  019A               	clrf	26	;volatile
 13487                           
 13488                           ;mcc_generated_files/adcc.c: 95:     ADACT = 0x00;
 13489  07B8  0199               	clrf	25	;volatile
 13490                           
 13491                           ;mcc_generated_files/adcc.c: 97:     ADCLK = 0x00;
 13492  07B9  0198               	clrf	24	;volatile
 13493  07BA                     l4521:	
 13494                           
 13495                           ;mcc_generated_files/adcc.c: 99:     ADCON0 = 0x84;
 13496  07BA  3084               	movlw	132
 13497  07BB  0093               	movwf	19	;volatile
 13498  07BC                     l4523:	
 13499                           
 13500                           ;mcc_generated_files/adcc.c: 101:     ADACQ = 0x00;
 13501  07BC  019D               	clrf	29	;volatile
 13502  07BD                     l757:	
 13503  07BD  0008               	return
 13504  07BE                     __end_of_ADCC_Initialize:	
 13505                           
 13506                           	psect	text33
 13507  06FB                     __ptext33:	
 13508 ;; *************** function _LED_bin *****************
 13509 ;; Defined at:
 13510 ;;		line 377 in file "main.c"
 13511 ;; Parameters:    Size  Location     Type
 13512 ;;  value           2    3[BANK0 ] unsigned int 
 13513 ;; Auto vars:     Size  Location     Type
 13514 ;;		None
 13515 ;; Return value:  Size  Location     Type
 13516 ;;                  1    wreg      void 
 13517 ;; Registers used:
 13518 ;;		wreg, status,2, status,0
 13519 ;; Tracked objects:
 13520 ;;		On entry : 0/0
 13521 ;;		On exit  : 0/0
 13522 ;;		Unchanged: 0/0
 13523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13524 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13526 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13527 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13528 ;;Total ram usage:        5 bytes
 13529 ;; Hardware stack levels used:    1
 13530 ;; Hardware stack levels required when called:    6
 13531 ;; This function calls:
 13532 ;;		Nothing
 13533 ;; This function is called by:
 13534 ;;		_main
 13535 ;; This function uses a non-reentrant model
 13536 ;;
 13537                           
 13538                           
 13539                           ;psect for function _LED_bin
 13540  06FB                     _LED_bin:	
 13541  06FB                     l4851:	
 13542                           ;incstack = 0
 13543                           ; Regs used in _LED_bin: [wreg+status,2+status,0]
 13544                           
 13545                           
 13546                           ;main.c: 379:     LATAbits.LATA4 = (value & 1);
 13547  06FB  0020               	movlb	0	; select bank0
 13548  06FC  083A               	movf	LED_bin@value,w
 13549  06FD  3901               	andlw	1
 13550  06FE  00BC               	movwf	??_LED_bin
 13551  06FF  0EBC               	swapf	??_LED_bin,f
 13552  0700  0816               	movf	22,w	;volatile
 13553  0701  063C               	xorwf	??_LED_bin,w
 13554  0702  39EF               	andlw	-17
 13555  0703  063C               	xorwf	??_LED_bin,w
 13556  0704  0096               	movwf	22	;volatile
 13557                           
 13558                           ;main.c: 380:     LATAbits.LATA5 = (value >>1);
 13559  0705  083B               	movf	LED_bin@value+1,w
 13560  0706  00BD               	movwf	??_LED_bin+1
 13561  0707  083A               	movf	LED_bin@value,w
 13562  0708  00BC               	movwf	??_LED_bin
 13563  0709  36BD               	lsrf	??_LED_bin+1,f
 13564  070A  0CBC               	rrf	??_LED_bin,f
 13565  070B  083C               	movf	??_LED_bin,w
 13566  070C  00BE               	movwf	??_LED_bin+2
 13567  070D  0EBE               	swapf	??_LED_bin+2,f
 13568  070E  0DBE               	rlf	??_LED_bin+2,f
 13569  070F  0816               	movf	22,w	;volatile
 13570  0710  063E               	xorwf	??_LED_bin+2,w
 13571  0711  39DF               	andlw	-33
 13572  0712  063E               	xorwf	??_LED_bin+2,w
 13573  0713  0096               	movwf	22	;volatile
 13574  0714                     l1257:	
 13575  0714  0008               	return
 13576  0715                     __end_of_LED_bin:	
 13577                           
 13578                           	psect	text34
 13579  0715                     __ptext34:	
 13580 ;; *************** function _ADC_read *****************
 13581 ;; Defined at:
 13582 ;;		line 390 in file "main.c"
 13583 ;; Parameters:    Size  Location     Type
 13584 ;;		None
 13585 ;; Auto vars:     Size  Location     Type
 13586 ;;		None
 13587 ;; Return value:  Size  Location     Type
 13588 ;;                  2    5[BANK0 ] unsigned int 
 13589 ;; Registers used:
 13590 ;;		wreg, status,2, status,0, pclath, cstack
 13591 ;; Tracked objects:
 13592 ;;		On entry : 0/0
 13593 ;;		On exit  : 0/0
 13594 ;;		Unchanged: 0/0
 13595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13596 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13599 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13600 ;;Total ram usage:        2 bytes
 13601 ;; Hardware stack levels used:    1
 13602 ;; Hardware stack levels required when called:    7
 13603 ;; This function calls:
 13604 ;;		_ADCC_GetConversionResult
 13605 ;;		_ADCC_IsConversionDone
 13606 ;;		_ADCC_StartConversion
 13607 ;; This function is called by:
 13608 ;;		_main
 13609 ;; This function uses a non-reentrant model
 13610 ;;
 13611                           
 13612                           
 13613                           ;psect for function _ADC_read
 13614  0715                     _ADC_read:	
 13615  0715                     l4841:	
 13616                           ;incstack = 0
 13617                           ; Regs used in _ADC_read: [wreg+status,2+status,0+pclath+cstack]
 13618                           
 13619                           
 13620                           ;main.c: 392:     ADCC_StartConversion(channel_ANA0);
 13621  0715  3000               	movlw	0
 13622  0716  318E  26D7  3187   	fcall	_ADCC_StartConversion
 13623                           
 13624                           ;main.c: 393:     while(!ADCC_IsConversionDone()){
 13625  0719  2F1E               	goto	l4845
 13626  071A                     l4843:	
 13627                           
 13628                           ;main.c: 394:         _delay((unsigned long)((1)*(1000000/4000.0)));
 13629  071A  3053               	movlw	83
 13630  071B                     u2727:	
 13631  071B  0B89               	decfsz	9,f
 13632  071C  2F1B               	goto	u2727
 13633  071D  0000               	nop
 13634  071E                     l4845:	
 13635                           
 13636                           ;main.c: 393:     while(!ADCC_IsConversionDone()){
 13637  071E  318E  26B1  3187   	fcall	_ADCC_IsConversionDone
 13638  0721  3A00               	xorlw	0
 13639  0722  1903               	skipnz
 13640  0723  2F25               	goto	u2081
 13641  0724  2F26               	goto	u2080
 13642  0725                     u2081:	
 13643  0725  2F1A               	goto	l4843
 13644  0726                     u2080:	
 13645  0726                     l4847:	
 13646                           
 13647                           ;main.c: 397:     return ADCC_GetConversionResult();
 13648  0726  318E  26F0  3187   	fcall	_ADCC_GetConversionResult
 13649  0729  0020               	movlb	0	; select bank0
 13650  072A  083B               	movf	?_ADCC_GetConversionResult+1,w
 13651  072B  00BD               	movwf	?_ADC_read+1
 13652  072C  083A               	movf	?_ADCC_GetConversionResult,w
 13653  072D  00BC               	movwf	?_ADC_read
 13654  072E                     l1263:	
 13655  072E  0008               	return
 13656  072F                     __end_of_ADC_read:	
 13657                           
 13658                           	psect	text35
 13659  0ED7                     __ptext35:	
 13660 ;; *************** function _ADCC_StartConversion *****************
 13661 ;; Defined at:
 13662 ;;		line 106 in file "mcc_generated_files/adcc.c"
 13663 ;; Parameters:    Size  Location     Type
 13664 ;;  channel         1    wreg     enum E12246
 13665 ;; Auto vars:     Size  Location     Type
 13666 ;;  channel         1    3[BANK0 ] enum E12246
 13667 ;; Return value:  Size  Location     Type
 13668 ;;                  1    wreg      void 
 13669 ;; Registers used:
 13670 ;;		wreg
 13671 ;; Tracked objects:
 13672 ;;		On entry : 0/0
 13673 ;;		On exit  : 0/0
 13674 ;;		Unchanged: 0/0
 13675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13677 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13679 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13680 ;;Total ram usage:        1 bytes
 13681 ;; Hardware stack levels used:    1
 13682 ;; Hardware stack levels required when called:    6
 13683 ;; This function calls:
 13684 ;;		Nothing
 13685 ;; This function is called by:
 13686 ;;		_ADC_read
 13687 ;; This function uses a non-reentrant model
 13688 ;;
 13689                           
 13690                           
 13691                           ;psect for function _ADCC_StartConversion
 13692  0ED7                     _ADCC_StartConversion:	
 13693                           
 13694                           ;incstack = 0
 13695                           ; Regs used in _ADCC_StartConversion: [wreg]
 13696                           ;ADCC_StartConversion@channel stored from wreg
 13697  0ED7  0020               	movlb	0	; select bank0
 13698  0ED8  00BA               	movwf	ADCC_StartConversion@channel
 13699  0ED9                     l4569:	
 13700                           
 13701                           ;mcc_generated_files/adcc.c: 106: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 107: {;mcc_generated_files/adcc.c: 109:     ADPCH = channel;
 13702  0ED9  083A               	movf	ADCC_StartConversion@channel,w
 13703  0EDA  0021               	movlb	1	; select bank1
 13704  0EDB  009E               	movwf	30	;volatile
 13705  0EDC                     l4571:	
 13706                           
 13707                           ;mcc_generated_files/adcc.c: 112:     ADCON0bits.ADON = 1;
 13708  0EDC  1793               	bsf	19,7	;volatile
 13709  0EDD                     l4573:	
 13710                           
 13711                           ;mcc_generated_files/adcc.c: 115:     ADCON0bits.ADGO = 1;
 13712  0EDD  1413               	bsf	19,0	;volatile
 13713  0EDE                     l760:	
 13714  0EDE  0008               	return
 13715  0EDF                     __end_of_ADCC_StartConversion:	
 13716                           
 13717                           	psect	text36
 13718  0EB1                     __ptext36:	
 13719 ;; *************** function _ADCC_IsConversionDone *****************
 13720 ;; Defined at:
 13721 ;;		line 118 in file "mcc_generated_files/adcc.c"
 13722 ;; Parameters:    Size  Location     Type
 13723 ;;		None
 13724 ;; Auto vars:     Size  Location     Type
 13725 ;;		None
 13726 ;; Return value:  Size  Location     Type
 13727 ;;                  1    wreg      _Bool 
 13728 ;; Registers used:
 13729 ;;		wreg, status,0
 13730 ;; Tracked objects:
 13731 ;;		On entry : 0/0
 13732 ;;		On exit  : 0/0
 13733 ;;		Unchanged: 0/0
 13734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13739 ;;Total ram usage:        0 bytes
 13740 ;; Hardware stack levels used:    1
 13741 ;; Hardware stack levels required when called:    6
 13742 ;; This function calls:
 13743 ;;		Nothing
 13744 ;; This function is called by:
 13745 ;;		_ADC_read
 13746 ;; This function uses a non-reentrant model
 13747 ;;
 13748                           
 13749                           
 13750                           ;psect for function _ADCC_IsConversionDone
 13751  0EB1                     _ADCC_IsConversionDone:	
 13752  0EB1                     l4575:	
 13753                           ;incstack = 0
 13754                           ; Regs used in _ADCC_IsConversionDone: [wreg+status,0]
 13755                           
 13756                           
 13757                           ;mcc_generated_files/adcc.c: 121:     return ((unsigned char)(!ADCON0bits.ADGO));
 13758  0EB1  1003               	clrc
 13759  0EB2  0021               	movlb	1	; select bank1
 13760  0EB3  1C13               	btfss	19,0	;volatile
 13761  0EB4  1403               	setc
 13762  0EB5  3000               	movlw	0
 13763  0EB6  3D09               	addwfc	9,w
 13764  0EB7                     l763:	
 13765  0EB7  0008               	return
 13766  0EB8                     __end_of_ADCC_IsConversionDone:	
 13767                           
 13768                           	psect	text37
 13769  0EF0                     __ptext37:	
 13770 ;; *************** function _ADCC_GetConversionResult *****************
 13771 ;; Defined at:
 13772 ;;		line 124 in file "mcc_generated_files/adcc.c"
 13773 ;; Parameters:    Size  Location     Type
 13774 ;;		None
 13775 ;; Auto vars:     Size  Location     Type
 13776 ;;		None
 13777 ;; Return value:  Size  Location     Type
 13778 ;;                  2    3[BANK0 ] unsigned short 
 13779 ;; Registers used:
 13780 ;;		wreg
 13781 ;; Tracked objects:
 13782 ;;		On entry : 0/0
 13783 ;;		On exit  : 0/0
 13784 ;;		Unchanged: 0/0
 13785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13786 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13789 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13790 ;;Total ram usage:        2 bytes
 13791 ;; Hardware stack levels used:    1
 13792 ;; Hardware stack levels required when called:    6
 13793 ;; This function calls:
 13794 ;;		Nothing
 13795 ;; This function is called by:
 13796 ;;		_ADC_read
 13797 ;; This function uses a non-reentrant model
 13798 ;;
 13799                           
 13800                           
 13801                           ;psect for function _ADCC_GetConversionResult
 13802  0EF0                     _ADCC_GetConversionResult:	
 13803  0EF0                     l4579:	
 13804                           ;incstack = 0
 13805                           ; Regs used in _ADCC_GetConversionResult: [wreg]
 13806                           
 13807                           
 13808                           ;mcc_generated_files/adcc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 13809  0EF0  0021               	movlb	1	; select bank1
 13810  0EF1  080D               	movf	13,w	;volatile
 13811  0EF2  0020               	movlb	0	; select bank0
 13812  0EF3  00BB               	movwf	?_ADCC_GetConversionResult+1
 13813  0EF4  0021               	movlb	1	; select bank1
 13814  0EF5  080C               	movf	12,w	;volatile
 13815  0EF6  0020               	movlb	0	; select bank0
 13816  0EF7  00BA               	movwf	?_ADCC_GetConversionResult
 13817  0EF8                     l766:	
 13818  0EF8  0008               	return
 13819  0EF9                     __end_of_ADCC_GetConversionResult:	
 13820                           
 13821                           	psect	intentry
 13822  0004                     __pintentry:	
 13823 ;; *************** function _INTERRUPT_InterruptManager *****************
 13824 ;; Defined at:
 13825 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13826 ;; Parameters:    Size  Location     Type
 13827 ;;		None
 13828 ;; Auto vars:     Size  Location     Type
 13829 ;;		None
 13830 ;; Return value:  Size  Location     Type
 13831 ;;                  1    wreg      void 
 13832 ;; Registers used:
 13833 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13834 ;; Tracked objects:
 13835 ;;		On entry : 0/0
 13836 ;;		On exit  : 0/0
 13837 ;;		Unchanged: 0/0
 13838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13843 ;;Total ram usage:        0 bytes
 13844 ;; Hardware stack levels used:    1
 13845 ;; Hardware stack levels required when called:    5
 13846 ;; This function calls:
 13847 ;;		Absolute function
 13848 ;;		_INT_ISR
 13849 ;;		_TMR0_ISR
 13850 ;;		_TMR1_ISR
 13851 ;;		_TMR2_ISR
 13852 ;;		_i2c_ISR
 13853 ;;		_i2c_busCollisionISR
 13854 ;; This function is called by:
 13855 ;;		Interrupt level 1
 13856 ;; This function uses a non-reentrant model
 13857 ;;
 13858                           
 13859  0004                     _INTERRUPT_InterruptManager:	
 13860                           
 13861                           ;incstack = 0
 13862  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 13863                           
 13864                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13865  0005  3180               	pagesel	$
 13866  0006                     i1l5061:	
 13867                           
 13868                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.INTE == 1 && PIR0bits.INTF
      +                           == 1)
 13869  0006  002E               	movlb	14	; select bank14
 13870  0007  1C16               	btfss	22,0	;volatile
 13871  0008  280A               	goto	u235_21
 13872  0009  280B               	goto	u235_20
 13873  000A                     u235_21:	
 13874  000A  2813               	goto	i1l378
 13875  000B                     u235_20:	
 13876  000B                     i1l5063:	
 13877  000B  1C0C               	btfss	12,0	;volatile
 13878  000C  280E               	goto	u236_21
 13879  000D  280F               	goto	u236_20
 13880  000E                     u236_21:	
 13881  000E  2813               	goto	i1l378
 13882  000F                     u236_20:	
 13883  000F                     i1l5065:	
 13884                           
 13885                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         INT_ISR();
 13886  000F  318E  2686  3180   	fcall	_INT_ISR
 13887                           
 13888                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 13889  0012  2859               	goto	i1l392
 13890  0013                     i1l378:	
 13891                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.TMR0IE == 1 && PIR0bi
      +                          ts.TMR0IF == 1)
 13892                           
 13893  0013  1E96               	btfss	22,5	;volatile
 13894  0014  2816               	goto	u237_21
 13895  0015  2817               	goto	u237_20
 13896  0016                     u237_21:	
 13897  0016  281F               	goto	i1l380
 13898  0017                     u237_20:	
 13899  0017                     i1l5067:	
 13900  0017  1E8C               	btfss	12,5	;volatile
 13901  0018  281A               	goto	u238_21
 13902  0019  281B               	goto	u238_20
 13903  001A                     u238_21:	
 13904  001A  281F               	goto	i1l380
 13905  001B                     u238_20:	
 13906  001B                     i1l5069:	
 13907                           
 13908                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
 13909  001B  318F  276F  3180   	fcall	_TMR0_ISR
 13910                           
 13911                           ;mcc_generated_files/interrupt_manager.c: 62:     }
 13912  001E  2859               	goto	i1l392
 13913  001F                     i1l380:	
 13914                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
 13915                           
 13916  001F  1F0B               	btfss	11,6	;volatile
 13917  0020  2822               	goto	u239_21
 13918  0021  2823               	goto	u239_20
 13919  0022                     u239_21:	
 13920  0022  2859               	goto	i1l386
 13921  0023                     u239_20:	
 13922  0023                     i1l5071:	
 13923                           
 13924                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 13925  0023  1C99               	btfss	25,1	;volatile
 13926  0024  2826               	goto	u240_21
 13927  0025  2827               	goto	u240_20
 13928  0026                     u240_21:	
 13929  0026  2832               	goto	i1l383
 13930  0027                     u240_20:	
 13931  0027                     i1l5073:	
 13932  0027  1C8F               	btfss	15,1	;volatile
 13933  0028  282A               	goto	u241_21
 13934  0029  282B               	goto	u241_20
 13935  002A                     u241_21:	
 13936  002A  2832               	goto	i1l383
 13937  002B                     u241_20:	
 13938  002B                     i1l5075:	
 13939                           
 13940                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             i2c1_driver_busCollisionISR();
 13941  002B  0020               	movlb	0	; select bank0
 13942  002C  082D               	movf	_i2c1_driver_busCollisionISR+1,w
 13943  002D  008A               	movwf	10
 13944  002E  082C               	movf	_i2c1_driver_busCollisionISR,w
 13945  002F  000A               	callw
 13946  0030  3180               	pagesel	$
 13947                           
 13948                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 13949  0031  2859               	goto	i1l392
 13950  0032                     i1l383:	
 13951                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 13952                           
 13953  0032  1C19               	btfss	25,0	;volatile
 13954  0033  2835               	goto	u242_21
 13955  0034  2836               	goto	u242_20
 13956  0035                     u242_21:	
 13957  0035  2841               	goto	i1l385
 13958  0036                     u242_20:	
 13959  0036                     i1l5077:	
 13960  0036  1C0F               	btfss	15,0	;volatile
 13961  0037  2839               	goto	u243_21
 13962  0038  283A               	goto	u243_20
 13963  0039                     u243_21:	
 13964  0039  2841               	goto	i1l385
 13965  003A                     u243_20:	
 13966  003A                     i1l5079:	
 13967                           
 13968                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             i2c1_driver_i2cISR();
 13969  003A  0020               	movlb	0	; select bank0
 13970  003B  082B               	movf	_i2c1_driver_i2cISR+1,w
 13971  003C  008A               	movwf	10
 13972  003D  082A               	movf	_i2c1_driver_i2cISR,w
 13973  003E  000A               	callw
 13974  003F  3180               	pagesel	$
 13975                           
 13976                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 13977  0040  2859               	goto	i1l392
 13978  0041                     i1l385:	
 13979                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE4bits.TMR1IE == 1 && PI
      +                          R4bits.TMR1IF == 1)
 13980                           
 13981  0041  1C1A               	btfss	26,0	;volatile
 13982  0042  2844               	goto	u244_21
 13983  0043  2845               	goto	u244_20
 13984  0044                     u244_21:	
 13985  0044  284D               	goto	i1l387
 13986  0045                     u244_20:	
 13987  0045                     i1l5081:	
 13988  0045  1C10               	btfss	16,0	;volatile
 13989  0046  2848               	goto	u245_21
 13990  0047  2849               	goto	u245_20
 13991  0048                     u245_21:	
 13992  0048  284D               	goto	i1l387
 13993  0049                     u245_20:	
 13994  0049                     i1l5083:	
 13995                           
 13996                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             TMR1_ISR();
 13997  0049  3187  2791  3180   	fcall	_TMR1_ISR
 13998                           
 13999                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 14000  004C  2859               	goto	i1l392
 14001  004D                     i1l387:	
 14002                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE4bits.TMR2IE == 1 && PI
      +                          R4bits.TMR2IF == 1)
 14003                           
 14004  004D  1C9A               	btfss	26,1	;volatile
 14005  004E  2850               	goto	u246_21
 14006  004F  2851               	goto	u246_20
 14007  0050                     u246_21:	
 14008  0050  2859               	goto	i1l386
 14009  0051                     u246_20:	
 14010  0051                     i1l5085:	
 14011  0051  1C90               	btfss	16,1	;volatile
 14012  0052  2854               	goto	u247_21
 14013  0053  2855               	goto	u247_20
 14014  0054                     u247_21:	
 14015  0054  2859               	goto	i1l386
 14016  0055                     u247_20:	
 14017  0055                     i1l5087:	
 14018                           
 14019                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             TMR2_ISR();
 14020  0055  318F  277E  3180   	fcall	_TMR2_ISR
 14021                           
 14022                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 14023  0058  2859               	goto	i1l392
 14024  0059                     i1l386:	
 14025  0059                     i1l392:	
 14026  0059  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 14027  005A  0009               	retfie
 14028  005B                     __end_of_INTERRUPT_InterruptManager:	
 14029                           
 14030                           	psect	text39
 14031  0E55                     __ptext39:	
 14032 ;; *************** function _i2c_busCollisionISR *****************
 14033 ;; Defined at:
 14034 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 14035 ;; Parameters:    Size  Location     Type
 14036 ;;		None
 14037 ;; Auto vars:     Size  Location     Type
 14038 ;;		None
 14039 ;; Return value:  Size  Location     Type
 14040 ;;                  1    wreg      void 
 14041 ;; Registers used:
 14042 ;;		status,2, status,0, pclath, cstack
 14043 ;; Tracked objects:
 14044 ;;		On entry : 0/0
 14045 ;;		On exit  : 0/0
 14046 ;;		Unchanged: 0/0
 14047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14052 ;;Total ram usage:        0 bytes
 14053 ;; Hardware stack levels used:    1
 14054 ;; Hardware stack levels required when called:    1
 14055 ;; This function calls:
 14056 ;;		_i2c1_driver_clearBusCollision
 14057 ;; This function is called by:
 14058 ;;		_i2c_open
 14059 ;;		_INTERRUPT_InterruptManager
 14060 ;; This function uses a non-reentrant model
 14061 ;;
 14062                           
 14063                           
 14064                           ;psect for function _i2c_busCollisionISR
 14065  0E55                     _i2c_busCollisionISR:	
 14066  0E55                     i1l4779:	
 14067                           ;incstack = 0
 14068                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 14069                           
 14070                           
 14071                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
 14072  0E55  318E  2647  318E   	fcall	_i2c1_driver_clearBusCollision
 14073  0E58                     i1l213:	
 14074  0E58  0008               	return
 14075  0E59                     __end_of_i2c_busCollisionISR:	
 14076                           
 14077                           	psect	text40
 14078  0E47                     __ptext40:	
 14079 ;; *************** function _i2c1_driver_clearBusCollision *****************
 14080 ;; Defined at:
 14081 ;;		line 254 in file "mcc_generated_files/i2c1_driver.c"
 14082 ;; Parameters:    Size  Location     Type
 14083 ;;		None
 14084 ;; Auto vars:     Size  Location     Type
 14085 ;;		None
 14086 ;; Return value:  Size  Location     Type
 14087 ;;                  1    wreg      void 
 14088 ;; Registers used:
 14089 ;;		None
 14090 ;; Tracked objects:
 14091 ;;		On entry : 0/0
 14092 ;;		On exit  : 0/0
 14093 ;;		Unchanged: 0/0
 14094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14099 ;;Total ram usage:        0 bytes
 14100 ;; Hardware stack levels used:    1
 14101 ;; This function calls:
 14102 ;;		Nothing
 14103 ;; This function is called by:
 14104 ;;		_i2c_busCollisionISR
 14105 ;; This function uses a non-reentrant model
 14106 ;;
 14107                           
 14108                           
 14109                           ;psect for function _i2c1_driver_clearBusCollision
 14110  0E47                     _i2c1_driver_clearBusCollision:	
 14111  0E47                     i1l4439:	
 14112                           ;incstack = 0
 14113                           ; Regs used in _i2c1_driver_clearBusCollision: []
 14114                           
 14115                           
 14116                           ;mcc_generated_files/i2c1_driver.c: 256:     PIR3bits.BCL1IF = 0;
 14117  0E47  002E               	movlb	14	; select bank14
 14118  0E48  108F               	bcf	15,1	;volatile
 14119  0E49                     i1l672:	
 14120  0E49  0008               	return
 14121  0E4A                     __end_of_i2c1_driver_clearBusCollision:	
 14122                           
 14123                           	psect	text41
 14124  056C                     __ptext41:	
 14125 ;; *************** function _i2c_ISR *****************
 14126 ;; Defined at:
 14127 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 14128 ;; Parameters:    Size  Location     Type
 14129 ;;		None
 14130 ;; Auto vars:     Size  Location     Type
 14131 ;;		None
 14132 ;; Return value:  Size  Location     Type
 14133 ;;                  1    wreg      void 
 14134 ;; Registers used:
 14135 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14136 ;; Tracked objects:
 14137 ;;		On entry : 0/0
 14138 ;;		On exit  : 0/0
 14139 ;;		Unchanged: 0/0
 14140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14143 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14144 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14145 ;;Total ram usage:        3 bytes
 14146 ;; Hardware stack levels used:    1
 14147 ;; Hardware stack levels required when called:    4
 14148 ;; This function calls:
 14149 ;;		_do_I2C_DO_ACK
 14150 ;;		_do_I2C_DO_ADDRESS_NACK
 14151 ;;		_do_I2C_DO_NACK_RESTART
 14152 ;;		_do_I2C_DO_NACK_STOP
 14153 ;;		_do_I2C_IDLE
 14154 ;;		_do_I2C_RCEN
 14155 ;;		_do_I2C_RESET
 14156 ;;		_do_I2C_RX
 14157 ;;		_do_I2C_SEND_ADR_READ
 14158 ;;		_do_I2C_SEND_ADR_WRITE
 14159 ;;		_do_I2C_SEND_RESTART
 14160 ;;		_do_I2C_SEND_RESTART_READ
 14161 ;;		_do_I2C_SEND_RESTART_WRITE
 14162 ;;		_do_I2C_SEND_STOP
 14163 ;;		_do_I2C_TX
 14164 ;;		_do_I2C_TX_EMPTY
 14165 ;;		_i2c1_driver_isNACK
 14166 ;;		_mssp1_clearIRQ
 14167 ;; This function is called by:
 14168 ;;		_i2c_open
 14169 ;;		_i2c_poller
 14170 ;;		_INTERRUPT_InterruptManager
 14171 ;; This function uses a non-reentrant model
 14172 ;;
 14173                           
 14174                           
 14175                           ;psect for function _i2c_ISR
 14176  056C                     _i2c_ISR:	
 14177  056C                     i1l4769:	
 14178                           ;incstack = 0
 14179                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14180                           
 14181                           
 14182                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
 14183  056C  318E  2644  3185   	fcall	_mssp1_clearIRQ
 14184  056F                     i1l4771:	
 14185                           
 14186                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
 14187  056F  0021               	movlb	1	; select bank1
 14188  0570  1DA0               	btfss	_i2c_status^(0+128),3
 14189  0571  2D73               	goto	u201_21
 14190  0572  2D74               	goto	u201_20
 14191  0573                     u201_21:	
 14192  0573  2D81               	goto	i1l4777
 14193  0574                     u201_20:	
 14194  0574                     i1l4773:	
 14195  0574  318E  26BF  3185   	fcall	_i2c1_driver_isNACK
 14196  0577  1C03               	btfss	3,0
 14197  0578  2D7A               	goto	u202_21
 14198  0579  2D7B               	goto	u202_20
 14199  057A                     u202_21:	
 14200  057A  2D81               	goto	i1l4777
 14201  057B                     u202_20:	
 14202  057B                     i1l4775:	
 14203                           
 14204                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
 14205  057B  300F               	movlw	15
 14206  057C  0020               	movlb	0	; select bank0
 14207  057D  00B7               	movwf	??_i2c_ISR
 14208  057E  0837               	movf	??_i2c_ISR,w
 14209  057F  0021               	movlb	1	; select bank1
 14210  0580  00A9               	movwf	(_i2c_status^(0+128)+9)
 14211  0581                     i1l4777:	
 14212                           
 14213                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
 14214  0581  0021               	movlb	1	; select bank1
 14215  0582  0829               	movf	(_i2c_status^(0+128)+9),w
 14216  0583  0020               	movlb	0	; select bank0
 14217  0584  00B7               	movwf	??_i2c_ISR
 14218  0585  01B8               	clrf	??_i2c_ISR+1
 14219  0586  35B7               	lslf	??_i2c_ISR,f
 14220  0587  0DB8               	rlf	??_i2c_ISR+1,f
 14221  0588  3064               	movlw	low (_fsmStateTable| (0+32768))
 14222  0589  0737               	addwf	??_i2c_ISR,w
 14223  058A  0084               	movwf	4
 14224  058B  3086               	movlw	high (_fsmStateTable| (0+32768))
 14225  058C  3D38               	addwfc	??_i2c_ISR+1,w
 14226  058D  0085               	movwf	5
 14227  058E  3F01               	moviw [1]fsr0
 14228  058F  008A               	movwf	10
 14229  0590  3F00               	moviw [0]fsr0
 14230  0591  000A               	callw
 14231  0592  3185               	pagesel	$
 14232  0593  0020               	movlb	0	; select bank0
 14233  0594  00B9               	movwf	??_i2c_ISR+2
 14234  0595  0839               	movf	??_i2c_ISR+2,w
 14235  0596  0021               	movlb	1	; select bank1
 14236  0597  00A9               	movwf	(_i2c_status^(0+128)+9)
 14237  0598                     i1l210:	
 14238  0598  0008               	return
 14239  0599                     __end_of_i2c_ISR:	
 14240                           
 14241                           	psect	text42
 14242  0E44                     __ptext42:	
 14243 ;; *************** function _mssp1_clearIRQ *****************
 14244 ;; Defined at:
 14245 ;;		line 54 in file "mcc_generated_files/i2c1_driver.c"
 14246 ;; Parameters:    Size  Location     Type
 14247 ;;		None
 14248 ;; Auto vars:     Size  Location     Type
 14249 ;;		None
 14250 ;; Return value:  Size  Location     Type
 14251 ;;                  1    wreg      void 
 14252 ;; Registers used:
 14253 ;;		None
 14254 ;; Tracked objects:
 14255 ;;		On entry : 0/0
 14256 ;;		On exit  : 0/0
 14257 ;;		Unchanged: 0/0
 14258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14263 ;;Total ram usage:        0 bytes
 14264 ;; Hardware stack levels used:    1
 14265 ;; This function calls:
 14266 ;;		Nothing
 14267 ;; This function is called by:
 14268 ;;		_i2c_ISR
 14269 ;;		_i2c_open
 14270 ;;		_i2c_close
 14271 ;; This function uses a non-reentrant model
 14272 ;;
 14273                           
 14274                           
 14275                           ;psect for function _mssp1_clearIRQ
 14276  0E44                     _mssp1_clearIRQ:	
 14277  0E44                     i1l4255:	
 14278                           ;incstack = 0
 14279                           ; Regs used in _mssp1_clearIRQ: []
 14280                           
 14281                           
 14282                           ;mcc_generated_files/i2c1_driver.c: 56:         SSP1CON1 = 0x28;
 14283  0E44  002E               	movlb	14	; select bank14
 14284  0E45  100F               	bcf	15,0	;volatile
 14285  0E46                     i1l576:	
 14286  0E46  0008               	return
 14287  0E47                     __end_of_mssp1_clearIRQ:	
 14288                           
 14289                           	psect	text43
 14290  0466                     __ptext43:	
 14291 ;; *************** function _do_I2C_RX *****************
 14292 ;; Defined at:
 14293 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 14294 ;; Parameters:    Size  Location     Type
 14295 ;;		None
 14296 ;; Auto vars:     Size  Location     Type
 14297 ;;		None
 14298 ;; Return value:  Size  Location     Type
 14299 ;;                  1    wreg      enum E12722
 14300 ;; Registers used:
 14301 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14302 ;; Tracked objects:
 14303 ;;		On entry : 0/0
 14304 ;;		On exit  : 0/0
 14305 ;;		Unchanged: 0/0
 14306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14309 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14310 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14311 ;;Total ram usage:        3 bytes
 14312 ;; Hardware stack levels used:    1
 14313 ;; Hardware stack levels required when called:    3
 14314 ;; This function calls:
 14315 ;;		Absolute function
 14316 ;;		_do_I2C_DO_NACK_RESTART
 14317 ;;		_do_I2C_DO_NACK_STOP
 14318 ;;		_i2c1_driver_getRXData
 14319 ;;		_i2c1_driver_sendACK
 14320 ;;		_i2c_restartWrite
 14321 ;;		_rd1RegCompleteHandler
 14322 ;;		_rd2RegCompleteHandler
 14323 ;;		_rdBlkRegCompleteHandler
 14324 ;;		_returnReset
 14325 ;;		_returnStop
 14326 ;;		_wr1RegCompleteHandler
 14327 ;;		_wr2RegCompleteHandler
 14328 ;; This function is called by:
 14329 ;;		_i2c_ISR
 14330 ;; This function uses a non-reentrant model
 14331 ;;
 14332                           
 14333                           
 14334                           ;psect for function _do_I2C_RX
 14335  0466                     _do_I2C_RX:	
 14336  0466                     i1l4381:	
 14337                           ;incstack = 0
 14338                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14339                           
 14340                           
 14341                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
 14342  0466  318E  263E  3184   	fcall	_i2c1_driver_getRXData
 14343  0469  00FA               	movwf	??_do_I2C_RX
 14344  046A  0021               	movlb	1	; select bank1
 14345  046B  0822               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 14346  046C  0086               	movwf	6
 14347  046D  0187               	clrf	7
 14348  046E  087A               	movf	??_do_I2C_RX,w
 14349  046F  0081               	movwf	1
 14350  0470                     i1l4383:	
 14351  0470  3001               	movlw	1
 14352  0471  00FA               	movwf	??_do_I2C_RX
 14353  0472  087A               	movf	??_do_I2C_RX,w
 14354  0473  07A2               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 14355  0474                     i1l4385:	
 14356                           
 14357                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
 14358  0474  3001               	movlw	1
 14359  0475  02A3               	subwf	(_i2c_status^(0+128)+3),f
 14360  0476  3000               	movlw	0
 14361  0477  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 14362  0478  0823               	movf	(_i2c_status^(0+128)+3),w
 14363  0479  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 14364  047A  1903               	btfsc	3,2
 14365  047B  2C7D               	goto	u182_21
 14366  047C  2C7E               	goto	u182_20
 14367  047D                     u182_21:	
 14368  047D  2C83               	goto	i1l185
 14369  047E                     u182_20:	
 14370  047E                     i1l4387:	
 14371                           
 14372                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
 14373  047E  318E  264D  3184   	fcall	_i2c1_driver_sendACK
 14374  0481                     i1l4389:	
 14375                           
 14376                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
 14377  0481  3005               	movlw	5
 14378  0482  2CAF               	goto	i1l186
 14379  0483                     i1l185:	
 14380                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
 14381                           
 14382                           
 14383                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
 14384  0483  1520               	bsf	_i2c_status^(0+128),2
 14385                           
 14386                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 14387  0484  2C8D               	goto	i1l4405
 14388  0485                     i1l4395:	
 14389                           
 14390                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
 14391  0485  318E  2681  3184   	fcall	_do_I2C_DO_NACK_RESTART
 14392  0488  2CAF               	goto	i1l186
 14393  0489                     i1l4399:	
 14394                           
 14395                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
 14396  0489  318E  267C  3184   	fcall	_do_I2C_DO_NACK_STOP
 14397  048C  2CAF               	goto	i1l186
 14398  048D                     i1l4405:	
 14399  048D  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 14400  048E  00FA               	movwf	??_do_I2C_RX
 14401  048F  087A               	movf	??_do_I2C_RX,w
 14402  0490  00F9               	movwf	rdBlkRegCompleteHandler@p
 14403  0491  300B               	movlw	11
 14404  0492  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 14405  0493  0086               	movwf	6
 14406  0494  0187               	clrf	7
 14407  0495  3F41               	moviw [1]fsr1
 14408  0496  008A               	movwf	10
 14409  0497  3F40               	moviw [0]fsr1
 14410  0498  000A               	callw
 14411  0499  3184               	pagesel	$
 14412  049A  00FB               	movwf	??_do_I2C_RX+1
 14413  049B  01FC               	clrf	??_do_I2C_RX+2
 14414                           
 14415                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14416                           ; Switch size 1, requested type "simple"
 14417                           ; Number of cases is 1, Range of values is 0 to 0
 14418                           ; switch strategies available:
 14419                           ; Name         Instructions Cycles
 14420                           ; simple_byte            4     3 (average)
 14421                           ; direct_byte            8     6 (fixed)
 14422                           ; jumptable            260     6 (fixed)
 14423                           ;	Chosen strategy is simple_byte
 14424  049C  087C               	movf	??_do_I2C_RX+2,w
 14425  049D  3A00               	xorlw	0	; case 0
 14426  049E  1903               	skipnz
 14427  049F  2CA1               	goto	i1l5347
 14428  04A0  2C89               	goto	i1l4399
 14429  04A1                     i1l5347:	
 14430                           
 14431                           ; Switch size 1, requested type "simple"
 14432                           ; Number of cases is 4, Range of values is 1 to 4
 14433                           ; switch strategies available:
 14434                           ; Name         Instructions Cycles
 14435                           ; simple_byte           13     7 (average)
 14436                           ; direct_byte           17     9 (fixed)
 14437                           ; jumptable            263     9 (fixed)
 14438                           ;	Chosen strategy is simple_byte
 14439  04A1  087B               	movf	??_do_I2C_RX+1,w
 14440  04A2  3A01               	xorlw	1	; case 1
 14441  04A3  1903               	skipnz
 14442  04A4  2C89               	goto	i1l4399
 14443  04A5  3A03               	xorlw	3	; case 2
 14444  04A6  1903               	skipnz
 14445  04A7  2C85               	goto	i1l4395
 14446  04A8  3A01               	xorlw	1	; case 3
 14447  04A9  1903               	skipnz
 14448  04AA  2C85               	goto	i1l4395
 14449  04AB  3A07               	xorlw	7	; case 4
 14450  04AC  1903               	skipnz
 14451  04AD  2C89               	goto	i1l4399
 14452  04AE  2C89               	goto	i1l4399
 14453  04AF                     i1l186:	
 14454  04AF  0008               	return
 14455  04B0                     __end_of_do_I2C_RX:	
 14456                           
 14457                           	psect	text44
 14458  032B                     __ptext44:	
 14459 ;; *************** function _do_I2C_TX *****************
 14460 ;; Defined at:
 14461 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 14462 ;; Parameters:    Size  Location     Type
 14463 ;;		None
 14464 ;; Auto vars:     Size  Location     Type
 14465 ;;		None
 14466 ;; Return value:  Size  Location     Type
 14467 ;;                  1    wreg      enum E12722
 14468 ;; Registers used:
 14469 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14470 ;; Tracked objects:
 14471 ;;		On entry : 0/0
 14472 ;;		On exit  : 0/0
 14473 ;;		Unchanged: 0/0
 14474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14477 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14478 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14479 ;;Total ram usage:        3 bytes
 14480 ;; Hardware stack levels used:    1
 14481 ;; Hardware stack levels required when called:    3
 14482 ;; This function calls:
 14483 ;;		Absolute function
 14484 ;;		_do_I2C_SEND_RESTART_READ
 14485 ;;		_do_I2C_SEND_RESTART_WRITE
 14486 ;;		_do_I2C_SEND_STOP
 14487 ;;		_i2c1_driver_TXData
 14488 ;;		_i2c1_driver_isNACK
 14489 ;;		_i2c_restartWrite
 14490 ;;		_rd1RegCompleteHandler
 14491 ;;		_rd2RegCompleteHandler
 14492 ;;		_rdBlkRegCompleteHandler
 14493 ;;		_returnReset
 14494 ;;		_returnStop
 14495 ;;		_wr1RegCompleteHandler
 14496 ;;		_wr2RegCompleteHandler
 14497 ;; This function is called by:
 14498 ;;		_i2c_ISR
 14499 ;; This function uses a non-reentrant model
 14500 ;;
 14501                           
 14502                           
 14503                           ;psect for function _do_I2C_TX
 14504  032B                     _do_I2C_TX:	
 14505  032B                     i1l4347:	
 14506                           ;incstack = 0
 14507                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14508                           
 14509                           
 14510                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
 14511  032B  318E  26BF  3183   	fcall	_i2c1_driver_isNACK
 14512  032E  1C03               	btfss	3,0
 14513  032F  2B31               	goto	u180_21
 14514  0330  2B32               	goto	u180_20
 14515  0331                     u180_21:	
 14516  0331  2B62               	goto	i1l169
 14517  0332                     u180_20:	
 14518  0332  2B3F               	goto	i1l4365
 14519  0333                     i1l4351:	
 14520                           
 14521                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
 14522  0333  318E  2663  3183   	fcall	_do_I2C_SEND_RESTART_READ
 14523  0336  2B7E               	goto	i1l172
 14524  0337                     i1l4355:	
 14525                           
 14526                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
 14527  0337  318E  2668  3183   	fcall	_do_I2C_SEND_RESTART_WRITE
 14528  033A  2B7E               	goto	i1l172
 14529  033B                     i1l4359:	
 14530                           
 14531                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
 14532  033B  318E  2672  3183   	fcall	_do_I2C_SEND_STOP
 14533  033E  2B7E               	goto	i1l172
 14534  033F                     i1l4365:	
 14535  033F  0021               	movlb	1	; select bank1
 14536  0340  083A               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 14537  0341  00FA               	movwf	??_do_I2C_TX
 14538  0342  087A               	movf	??_do_I2C_TX,w
 14539  0343  00F9               	movwf	rdBlkRegCompleteHandler@p
 14540  0344  3011               	movlw	17
 14541  0345  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 14542  0346  0086               	movwf	6
 14543  0347  0187               	clrf	7
 14544  0348  3F41               	moviw [1]fsr1
 14545  0349  008A               	movwf	10
 14546  034A  3F40               	moviw [0]fsr1
 14547  034B  000A               	callw
 14548  034C  3183               	pagesel	$
 14549  034D  00FB               	movwf	??_do_I2C_TX+1
 14550  034E  01FC               	clrf	??_do_I2C_TX+2
 14551                           
 14552                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14553                           ; Switch size 1, requested type "simple"
 14554                           ; Number of cases is 1, Range of values is 0 to 0
 14555                           ; switch strategies available:
 14556                           ; Name         Instructions Cycles
 14557                           ; simple_byte            4     3 (average)
 14558                           ; direct_byte            8     6 (fixed)
 14559                           ; jumptable            260     6 (fixed)
 14560                           ;	Chosen strategy is simple_byte
 14561  034F  087C               	movf	??_do_I2C_TX+2,w
 14562  0350  3A00               	xorlw	0	; case 0
 14563  0351  1903               	skipnz
 14564  0352  2B54               	goto	i1l5349
 14565  0353  2B3B               	goto	i1l4359
 14566  0354                     i1l5349:	
 14567                           
 14568                           ; Switch size 1, requested type "simple"
 14569                           ; Number of cases is 4, Range of values is 1 to 4
 14570                           ; switch strategies available:
 14571                           ; Name         Instructions Cycles
 14572                           ; simple_byte           13     7 (average)
 14573                           ; direct_byte           17     9 (fixed)
 14574                           ; jumptable            263     9 (fixed)
 14575                           ;	Chosen strategy is simple_byte
 14576  0354  087B               	movf	??_do_I2C_TX+1,w
 14577  0355  3A01               	xorlw	1	; case 1
 14578  0356  1903               	skipnz
 14579  0357  2B3B               	goto	i1l4359
 14580  0358  3A03               	xorlw	3	; case 2
 14581  0359  1903               	skipnz
 14582  035A  2B33               	goto	i1l4351
 14583  035B  3A01               	xorlw	1	; case 3
 14584  035C  1903               	skipnz
 14585  035D  2B37               	goto	i1l4355
 14586  035E  3A07               	xorlw	7	; case 4
 14587  035F  1903               	skipnz
 14588  0360  2B3B               	goto	i1l4359
 14589  0361  2B3B               	goto	i1l4359
 14590  0362                     i1l169:	
 14591                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
 14592                           
 14593                           
 14594                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
 14595  0362  0021               	movlb	1	; select bank1
 14596  0363  11A0               	bcf	_i2c_status^(0+128),3
 14597  0364                     i1l4367:	
 14598                           
 14599                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
 14600  0364  3002               	movlw	2
 14601  0365  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 14602  0366  0086               	movwf	6
 14603  0367  0187               	clrf	7
 14604  0368  3F40               	moviw [0]fsr1
 14605  0369  0084               	movwf	4
 14606  036A  0185               	clrf	5
 14607  036B  0A81               	incf	1,f
 14608  036C  0800               	movf	0,w
 14609  036D  318E  2659  3183   	fcall	_i2c1_driver_TXData
 14610  0370                     i1l4369:	
 14611                           
 14612                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
 14613  0370  3001               	movlw	1
 14614  0371  0021               	movlb	1	; select bank1
 14615  0372  02A3               	subwf	(_i2c_status^(0+128)+3),f
 14616  0373  3000               	movlw	0
 14617  0374  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 14618  0375  0823               	movf	(_i2c_status^(0+128)+3),w
 14619  0376  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 14620  0377  1D03               	btfss	3,2
 14621  0378  2B7A               	goto	u181_21
 14622  0379  2B7B               	goto	u181_20
 14623  037A                     u181_21:	
 14624  037A  2B7D               	goto	i1l4373
 14625  037B                     u181_20:	
 14626  037B                     i1l4371:	
 14627  037B  3006               	movlw	6
 14628  037C  2B7E               	goto	i1l172
 14629  037D                     i1l4373:	
 14630  037D  3003               	movlw	3
 14631  037E                     i1l172:	
 14632  037E  0008               	return
 14633  037F                     __end_of_do_I2C_TX:	
 14634                           
 14635                           	psect	text45
 14636  05C6                     __ptext45:	
 14637 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 14638 ;; Defined at:
 14639 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 14640 ;; Parameters:    Size  Location     Type
 14641 ;;		None
 14642 ;; Auto vars:     Size  Location     Type
 14643 ;;		None
 14644 ;; Return value:  Size  Location     Type
 14645 ;;                  1    wreg      enum E12722
 14646 ;; Registers used:
 14647 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14648 ;; Tracked objects:
 14649 ;;		On entry : 0/0
 14650 ;;		On exit  : 0/0
 14651 ;;		Unchanged: 0/0
 14652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14655 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14656 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14657 ;;Total ram usage:        3 bytes
 14658 ;; Hardware stack levels used:    1
 14659 ;; Hardware stack levels required when called:    3
 14660 ;; This function calls:
 14661 ;;		Absolute function
 14662 ;;		_do_I2C_SEND_RESTART
 14663 ;;		_do_I2C_SEND_STOP
 14664 ;;		_i2c_restartWrite
 14665 ;;		_rd1RegCompleteHandler
 14666 ;;		_rd2RegCompleteHandler
 14667 ;;		_rdBlkRegCompleteHandler
 14668 ;;		_returnReset
 14669 ;;		_returnStop
 14670 ;;		_wr1RegCompleteHandler
 14671 ;;		_wr2RegCompleteHandler
 14672 ;; This function is called by:
 14673 ;;		_i2c_ISR
 14674 ;; This function uses a non-reentrant model
 14675 ;;
 14676                           
 14677                           
 14678                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 14679  05C6                     _do_I2C_DO_ADDRESS_NACK:	
 14680  05C6                     i1l4325:	
 14681                           ;incstack = 0
 14682                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14683                           
 14684                           
 14685                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
 14686  05C6  0021               	movlb	1	; select bank1
 14687  05C7  11A0               	bcf	_i2c_status^(0+128),3
 14688  05C8                     i1l4327:	
 14689                           
 14690                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
 14691  05C8  3002               	movlw	2
 14692  05C9  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 14693  05CA  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 14694  05CB  00AA               	movwf	(_i2c_status^(0+128)+10)
 14695                           
 14696                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
 14697  05CC  2DD5               	goto	i1l4339
 14698  05CD                     i1l4329:	
 14699                           
 14700                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
 14701  05CD  318E  266D  3185   	fcall	_do_I2C_SEND_RESTART
 14702  05D0  2DF1               	goto	i1l164
 14703  05D1                     i1l4333:	
 14704                           
 14705                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
 14706  05D1  318E  2672  3185   	fcall	_do_I2C_SEND_STOP
 14707  05D4  2DF1               	goto	i1l164
 14708  05D5                     i1l4339:	
 14709  05D5  0839               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 14710  05D6  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 14711  05D7  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 14712  05D8  00F9               	movwf	rdBlkRegCompleteHandler@p
 14713  05D9  300F               	movlw	15
 14714  05DA  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 14715  05DB  0086               	movwf	6
 14716  05DC  0187               	clrf	7
 14717  05DD  3F41               	moviw [1]fsr1
 14718  05DE  008A               	movwf	10
 14719  05DF  3F40               	moviw [0]fsr1
 14720  05E0  000A               	callw
 14721  05E1  3185               	pagesel	$
 14722  05E2  00FB               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
 14723  05E3  01FC               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
 14724                           
 14725                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14726                           ; Switch size 1, requested type "simple"
 14727                           ; Number of cases is 1, Range of values is 0 to 0
 14728                           ; switch strategies available:
 14729                           ; Name         Instructions Cycles
 14730                           ; simple_byte            4     3 (average)
 14731                           ; direct_byte            8     6 (fixed)
 14732                           ; jumptable            260     6 (fixed)
 14733                           ;	Chosen strategy is simple_byte
 14734  05E4  087C               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
 14735  05E5  3A00               	xorlw	0	; case 0
 14736  05E6  1903               	skipnz
 14737  05E7  2DE9               	goto	i1l5351
 14738  05E8  2DD1               	goto	i1l4333
 14739  05E9                     i1l5351:	
 14740                           
 14741                           ; Switch size 1, requested type "simple"
 14742                           ; Number of cases is 2, Range of values is 2 to 3
 14743                           ; switch strategies available:
 14744                           ; Name         Instructions Cycles
 14745                           ; simple_byte            7     4 (average)
 14746                           ; direct_byte           13     9 (fixed)
 14747                           ; jumptable            263     9 (fixed)
 14748                           ;	Chosen strategy is simple_byte
 14749  05E9  087B               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
 14750  05EA  3A02               	xorlw	2	; case 2
 14751  05EB  1903               	skipnz
 14752  05EC  2DCD               	goto	i1l4329
 14753  05ED  3A01               	xorlw	1	; case 3
 14754  05EE  1903               	skipnz
 14755  05EF  2DCD               	goto	i1l4329
 14756  05F0  2DD1               	goto	i1l4333
 14757  05F1                     i1l164:	
 14758  05F1  0008               	return
 14759  05F2                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 14760                           
 14761                           	psect	text46
 14762  0E81                     __ptext46:	
 14763 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 14764 ;; Defined at:
 14765 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 14766 ;; Parameters:    Size  Location     Type
 14767 ;;		None
 14768 ;; Auto vars:     Size  Location     Type
 14769 ;;		None
 14770 ;; Return value:  Size  Location     Type
 14771 ;;                  1    wreg      enum E12722
 14772 ;; Registers used:
 14773 ;;		wreg, status,2, status,0, pclath, cstack
 14774 ;; Tracked objects:
 14775 ;;		On entry : 0/0
 14776 ;;		On exit  : 0/0
 14777 ;;		Unchanged: 0/0
 14778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14783 ;;Total ram usage:        0 bytes
 14784 ;; Hardware stack levels used:    1
 14785 ;; Hardware stack levels required when called:    1
 14786 ;; This function calls:
 14787 ;;		_i2c1_driver_sendNACK
 14788 ;; This function is called by:
 14789 ;;		_do_I2C_RX
 14790 ;;		_i2c_ISR
 14791 ;; This function uses a non-reentrant model
 14792 ;;
 14793                           
 14794                           
 14795                           ;psect for function _do_I2C_DO_NACK_RESTART
 14796  0E81                     _do_I2C_DO_NACK_RESTART:	
 14797  0E81                     i1l4087:	
 14798                           ;incstack = 0
 14799                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 14800                           
 14801                           
 14802                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
 14803  0E81  318E  2651  318E   	fcall	_i2c1_driver_sendNACK
 14804  0E84                     i1l4089:	
 14805                           
 14806                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
 14807  0E84  3009               	movlw	9
 14808  0E85                     i1l158:	
 14809  0E85  0008               	return
 14810  0E86                     __end_of_do_I2C_DO_NACK_RESTART:	
 14811                           
 14812                           	psect	text47
 14813  0E7C                     __ptext47:	
 14814 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 14815 ;; Defined at:
 14816 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 14817 ;; Parameters:    Size  Location     Type
 14818 ;;		None
 14819 ;; Auto vars:     Size  Location     Type
 14820 ;;		None
 14821 ;; Return value:  Size  Location     Type
 14822 ;;                  1    wreg      enum E12722
 14823 ;; Registers used:
 14824 ;;		wreg, status,2, status,0, pclath, cstack
 14825 ;; Tracked objects:
 14826 ;;		On entry : 0/0
 14827 ;;		On exit  : 0/0
 14828 ;;		Unchanged: 0/0
 14829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14834 ;;Total ram usage:        0 bytes
 14835 ;; Hardware stack levels used:    1
 14836 ;; Hardware stack levels required when called:    1
 14837 ;; This function calls:
 14838 ;;		_i2c1_driver_sendNACK
 14839 ;; This function is called by:
 14840 ;;		_do_I2C_RX
 14841 ;;		_i2c_ISR
 14842 ;; This function uses a non-reentrant model
 14843 ;;
 14844                           
 14845                           
 14846                           ;psect for function _do_I2C_DO_NACK_STOP
 14847  0E7C                     _do_I2C_DO_NACK_STOP:	
 14848  0E7C                     i1l4081:	
 14849                           ;incstack = 0
 14850                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 14851                           
 14852                           
 14853                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
 14854  0E7C  318E  2651  318E   	fcall	_i2c1_driver_sendNACK
 14855  0E7F                     i1l4083:	
 14856                           
 14857                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
 14858  0E7F  300A               	movlw	10
 14859  0E80                     i1l155:	
 14860  0E80  0008               	return
 14861  0E81                     __end_of_do_I2C_DO_NACK_STOP:	
 14862                           
 14863                           	psect	text48
 14864  0E77                     __ptext48:	
 14865 ;; *************** function _do_I2C_DO_ACK *****************
 14866 ;; Defined at:
 14867 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 14868 ;; Parameters:    Size  Location     Type
 14869 ;;		None
 14870 ;; Auto vars:     Size  Location     Type
 14871 ;;		None
 14872 ;; Return value:  Size  Location     Type
 14873 ;;                  1    wreg      enum E12722
 14874 ;; Registers used:
 14875 ;;		wreg, status,2, status,0, pclath, cstack
 14876 ;; Tracked objects:
 14877 ;;		On entry : 0/0
 14878 ;;		On exit  : 0/0
 14879 ;;		Unchanged: 0/0
 14880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14885 ;;Total ram usage:        0 bytes
 14886 ;; Hardware stack levels used:    1
 14887 ;; Hardware stack levels required when called:    1
 14888 ;; This function calls:
 14889 ;;		_i2c1_driver_sendACK
 14890 ;; This function is called by:
 14891 ;;		_i2c_ISR
 14892 ;; This function uses a non-reentrant model
 14893 ;;
 14894                           
 14895                           
 14896                           ;psect for function _do_I2C_DO_ACK
 14897  0E77                     _do_I2C_DO_ACK:	
 14898  0E77                     i1l4319:	
 14899                           ;incstack = 0
 14900                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 14901                           
 14902                           
 14903                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
 14904  0E77  318E  264D  318E   	fcall	_i2c1_driver_sendACK
 14905  0E7A                     i1l4321:	
 14906                           
 14907                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
 14908  0E7A  3005               	movlw	5
 14909  0E7B                     i1l152:	
 14910  0E7B  0008               	return
 14911  0E7C                     __end_of_do_I2C_DO_ACK:	
 14912                           
 14913                           	psect	text49
 14914  0EAA                     __ptext49:	
 14915 ;; *************** function _do_I2C_RCEN *****************
 14916 ;; Defined at:
 14917 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 14918 ;; Parameters:    Size  Location     Type
 14919 ;;		None
 14920 ;; Auto vars:     Size  Location     Type
 14921 ;;		None
 14922 ;; Return value:  Size  Location     Type
 14923 ;;                  1    wreg      enum E12722
 14924 ;; Registers used:
 14925 ;;		wreg, status,2, status,0, pclath, cstack
 14926 ;; Tracked objects:
 14927 ;;		On entry : 0/0
 14928 ;;		On exit  : 0/0
 14929 ;;		Unchanged: 0/0
 14930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14935 ;;Total ram usage:        0 bytes
 14936 ;; Hardware stack levels used:    1
 14937 ;; Hardware stack levels required when called:    1
 14938 ;; This function calls:
 14939 ;;		_i2c1_driver_startRX
 14940 ;; This function is called by:
 14941 ;;		_i2c_ISR
 14942 ;; This function uses a non-reentrant model
 14943 ;;
 14944                           
 14945                           
 14946                           ;psect for function _do_I2C_RCEN
 14947  0EAA                     _do_I2C_RCEN:	
 14948  0EAA                     i1l4311:	
 14949                           ;incstack = 0
 14950                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 14951                           
 14952                           
 14953                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
 14954  0EAA  0021               	movlb	1	; select bank1
 14955  0EAB  11A0               	bcf	_i2c_status^(0+128),3
 14956  0EAC                     i1l4313:	
 14957                           
 14958                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
 14959  0EAC  318E  263B  318E   	fcall	_i2c1_driver_startRX
 14960  0EAF                     i1l4315:	
 14961                           
 14962                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
 14963  0EAF  3004               	movlw	4
 14964  0EB0                     i1l149:	
 14965  0EB0  0008               	return
 14966  0EB1                     __end_of_do_I2C_RCEN:	
 14967                           
 14968                           	psect	text50
 14969  0ECF                     __ptext50:	
 14970 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 14971 ;; Defined at:
 14972 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 14973 ;; Parameters:    Size  Location     Type
 14974 ;;		None
 14975 ;; Auto vars:     Size  Location     Type
 14976 ;;		None
 14977 ;; Return value:  Size  Location     Type
 14978 ;;                  1    wreg      enum E12722
 14979 ;; Registers used:
 14980 ;;		wreg, status,2, status,0, pclath, cstack
 14981 ;; Tracked objects:
 14982 ;;		On entry : 0/0
 14983 ;;		On exit  : 0/0
 14984 ;;		Unchanged: 0/0
 14985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14990 ;;Total ram usage:        0 bytes
 14991 ;; Hardware stack levels used:    1
 14992 ;; Hardware stack levels required when called:    1
 14993 ;; This function calls:
 14994 ;;		_i2c1_driver_TXData
 14995 ;; This function is called by:
 14996 ;;		_i2c_ISR
 14997 ;; This function uses a non-reentrant model
 14998 ;;
 14999                           
 15000                           
 15001                           ;psect for function _do_I2C_SEND_ADR_WRITE
 15002  0ECF                     _do_I2C_SEND_ADR_WRITE:	
 15003  0ECF                     i1l4303:	
 15004                           ;incstack = 0
 15005                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 15006                           
 15007                           
 15008                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
 15009  0ECF  0021               	movlb	1	; select bank1
 15010  0ED0  15A0               	bsf	_i2c_status^(0+128),3
 15011  0ED1                     i1l4305:	
 15012                           
 15013                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
 15014  0ED1  3521               	lslf	(_i2c_status^(0+128)+1),w
 15015  0ED2  318E  2659  318E   	fcall	_i2c1_driver_TXData
 15016  0ED5                     i1l4307:	
 15017                           
 15018                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
 15019  0ED5  3003               	movlw	3
 15020  0ED6                     i1l146:	
 15021  0ED6  0008               	return
 15022  0ED7                     __end_of_do_I2C_SEND_ADR_WRITE:	
 15023                           
 15024                           	psect	text51
 15025  0EE7                     __ptext51:	
 15026 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 15027 ;; Defined at:
 15028 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 15029 ;; Parameters:    Size  Location     Type
 15030 ;;		None
 15031 ;; Auto vars:     Size  Location     Type
 15032 ;;		None
 15033 ;; Return value:  Size  Location     Type
 15034 ;;                  1    wreg      enum E12722
 15035 ;; Registers used:
 15036 ;;		wreg, status,2, status,0, pclath, cstack
 15037 ;; Tracked objects:
 15038 ;;		On entry : 0/0
 15039 ;;		On exit  : 0/0
 15040 ;;		Unchanged: 0/0
 15041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15046 ;;Total ram usage:        0 bytes
 15047 ;; Hardware stack levels used:    1
 15048 ;; Hardware stack levels required when called:    1
 15049 ;; This function calls:
 15050 ;;		_i2c1_driver_TXData
 15051 ;; This function is called by:
 15052 ;;		_i2c_ISR
 15053 ;; This function uses a non-reentrant model
 15054 ;;
 15055                           
 15056                           
 15057                           ;psect for function _do_I2C_SEND_ADR_READ
 15058  0EE7                     _do_I2C_SEND_ADR_READ:	
 15059  0EE7                     i1l4295:	
 15060                           ;incstack = 0
 15061                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 15062                           
 15063                           
 15064                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
 15065  0EE7  0021               	movlb	1	; select bank1
 15066  0EE8  15A0               	bsf	_i2c_status^(0+128),3
 15067  0EE9                     i1l4297:	
 15068                           
 15069                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
 15070  0EE9  1403               	setc
 15071  0EEA  0D21               	rlf	(_i2c_status^(0+128)+1),w
 15072  0EEB  318E  2659  318E   	fcall	_i2c1_driver_TXData
 15073  0EEE                     i1l4299:	
 15074                           
 15075                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
 15076  0EEE  3005               	movlw	5
 15077  0EEF                     i1l143:	
 15078  0EEF  0008               	return
 15079  0EF0                     __end_of_do_I2C_SEND_ADR_READ:	
 15080                           
 15081                           	psect	text52
 15082  0E72                     __ptext52:	
 15083 ;; *************** function _do_I2C_SEND_STOP *****************
 15084 ;; Defined at:
 15085 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 15086 ;; Parameters:    Size  Location     Type
 15087 ;;		None
 15088 ;; Auto vars:     Size  Location     Type
 15089 ;;		None
 15090 ;; Return value:  Size  Location     Type
 15091 ;;                  1    wreg      enum E12722
 15092 ;; Registers used:
 15093 ;;		wreg, status,2, status,0, pclath, cstack
 15094 ;; Tracked objects:
 15095 ;;		On entry : 0/0
 15096 ;;		On exit  : 0/0
 15097 ;;		Unchanged: 0/0
 15098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15103 ;;Total ram usage:        0 bytes
 15104 ;; Hardware stack levels used:    1
 15105 ;; Hardware stack levels required when called:    1
 15106 ;; This function calls:
 15107 ;;		_i2c1_driver_stop
 15108 ;; This function is called by:
 15109 ;;		_do_I2C_DO_ADDRESS_NACK
 15110 ;;		_do_I2C_TX
 15111 ;;		_do_I2C_TX_EMPTY
 15112 ;;		_i2c_ISR
 15113 ;; This function uses a non-reentrant model
 15114 ;;
 15115                           
 15116                           
 15117                           ;psect for function _do_I2C_SEND_STOP
 15118  0E72                     _do_I2C_SEND_STOP:	
 15119  0E72                     i1l4069:	
 15120                           ;incstack = 0
 15121                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 15122                           
 15123                           
 15124                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
 15125  0E72  318E  2638  318E   	fcall	_i2c1_driver_stop
 15126  0E75                     i1l4071:	
 15127                           
 15128                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
 15129  0E75  3000               	movlw	0
 15130  0E76                     i1l140:	
 15131  0E76  0008               	return
 15132  0E77                     __end_of_do_I2C_SEND_STOP:	
 15133                           
 15134                           	psect	text53
 15135  0E6D                     __ptext53:	
 15136 ;; *************** function _do_I2C_SEND_RESTART *****************
 15137 ;; Defined at:
 15138 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 15139 ;; Parameters:    Size  Location     Type
 15140 ;;		None
 15141 ;; Auto vars:     Size  Location     Type
 15142 ;;		None
 15143 ;; Return value:  Size  Location     Type
 15144 ;;                  1    wreg      enum E12722
 15145 ;; Registers used:
 15146 ;;		wreg, status,2, status,0, pclath, cstack
 15147 ;; Tracked objects:
 15148 ;;		On entry : 0/0
 15149 ;;		On exit  : 0/0
 15150 ;;		Unchanged: 0/0
 15151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15156 ;;Total ram usage:        0 bytes
 15157 ;; Hardware stack levels used:    1
 15158 ;; Hardware stack levels required when called:    1
 15159 ;; This function calls:
 15160 ;;		_i2c1_driver_restart
 15161 ;; This function is called by:
 15162 ;;		_do_I2C_DO_ADDRESS_NACK
 15163 ;;		_do_I2C_TX_EMPTY
 15164 ;;		_i2c_ISR
 15165 ;; This function uses a non-reentrant model
 15166 ;;
 15167                           
 15168                           
 15169                           ;psect for function _do_I2C_SEND_RESTART
 15170  0E6D                     _do_I2C_SEND_RESTART:	
 15171  0E6D                     i1l4063:	
 15172                           ;incstack = 0
 15173                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 15174                           
 15175                           
 15176                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
 15177  0E6D  318E  2635  318E   	fcall	_i2c1_driver_restart
 15178  0E70                     i1l4065:	
 15179                           
 15180                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
 15181  0E70  3001               	movlw	1
 15182  0E71                     i1l137:	
 15183  0E71  0008               	return
 15184  0E72                     __end_of_do_I2C_SEND_RESTART:	
 15185                           
 15186                           	psect	text54
 15187  0E68                     __ptext54:	
 15188 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 15189 ;; Defined at:
 15190 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 15191 ;; Parameters:    Size  Location     Type
 15192 ;;		None
 15193 ;; Auto vars:     Size  Location     Type
 15194 ;;		None
 15195 ;; Return value:  Size  Location     Type
 15196 ;;                  1    wreg      enum E12722
 15197 ;; Registers used:
 15198 ;;		wreg, status,2, status,0, pclath, cstack
 15199 ;; Tracked objects:
 15200 ;;		On entry : 0/0
 15201 ;;		On exit  : 0/0
 15202 ;;		Unchanged: 0/0
 15203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15208 ;;Total ram usage:        0 bytes
 15209 ;; Hardware stack levels used:    1
 15210 ;; Hardware stack levels required when called:    1
 15211 ;; This function calls:
 15212 ;;		_i2c1_driver_restart
 15213 ;; This function is called by:
 15214 ;;		_do_I2C_TX
 15215 ;;		_i2c_ISR
 15216 ;; This function uses a non-reentrant model
 15217 ;;
 15218                           
 15219                           
 15220                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 15221  0E68                     _do_I2C_SEND_RESTART_WRITE:	
 15222  0E68                     i1l4057:	
 15223                           ;incstack = 0
 15224                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 15225                           
 15226                           
 15227                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
 15228  0E68  318E  2635  318E   	fcall	_i2c1_driver_restart
 15229  0E6B                     i1l4059:	
 15230                           
 15231                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
 15232  0E6B  3002               	movlw	2
 15233  0E6C                     i1l134:	
 15234  0E6C  0008               	return
 15235  0E6D                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 15236                           
 15237                           	psect	text55
 15238  0E63                     __ptext55:	
 15239 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 15240 ;; Defined at:
 15241 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 15242 ;; Parameters:    Size  Location     Type
 15243 ;;		None
 15244 ;; Auto vars:     Size  Location     Type
 15245 ;;		None
 15246 ;; Return value:  Size  Location     Type
 15247 ;;                  1    wreg      enum E12722
 15248 ;; Registers used:
 15249 ;;		wreg, status,2, status,0, pclath, cstack
 15250 ;; Tracked objects:
 15251 ;;		On entry : 0/0
 15252 ;;		On exit  : 0/0
 15253 ;;		Unchanged: 0/0
 15254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15259 ;;Total ram usage:        0 bytes
 15260 ;; Hardware stack levels used:    1
 15261 ;; Hardware stack levels required when called:    1
 15262 ;; This function calls:
 15263 ;;		_i2c1_driver_restart
 15264 ;; This function is called by:
 15265 ;;		_do_I2C_TX
 15266 ;;		_i2c_ISR
 15267 ;; This function uses a non-reentrant model
 15268 ;;
 15269                           
 15270                           
 15271                           ;psect for function _do_I2C_SEND_RESTART_READ
 15272  0E63                     _do_I2C_SEND_RESTART_READ:	
 15273  0E63                     i1l4051:	
 15274                           ;incstack = 0
 15275                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 15276                           
 15277                           
 15278                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
 15279  0E63  318E  2635  318E   	fcall	_i2c1_driver_restart
 15280  0E66                     i1l4053:	
 15281                           
 15282                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
 15283  0E66  3001               	movlw	1
 15284  0E67                     i1l131:	
 15285  0E67  0008               	return
 15286  0E68                     __end_of_do_I2C_SEND_RESTART_READ:	
 15287                           
 15288                           	psect	text56
 15289  0E5E                     __ptext56:	
 15290 ;; *************** function _do_I2C_IDLE *****************
 15291 ;; Defined at:
 15292 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 15293 ;; Parameters:    Size  Location     Type
 15294 ;;		None
 15295 ;; Auto vars:     Size  Location     Type
 15296 ;;		None
 15297 ;; Return value:  Size  Location     Type
 15298 ;;                  1    wreg      enum E12722
 15299 ;; Registers used:
 15300 ;;		wreg, status,2
 15301 ;; Tracked objects:
 15302 ;;		On entry : 0/0
 15303 ;;		On exit  : 0/0
 15304 ;;		Unchanged: 0/0
 15305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15310 ;;Total ram usage:        0 bytes
 15311 ;; Hardware stack levels used:    1
 15312 ;; This function calls:
 15313 ;;		Nothing
 15314 ;; This function is called by:
 15315 ;;		_i2c_ISR
 15316 ;; This function uses a non-reentrant model
 15317 ;;
 15318                           
 15319                           
 15320                           ;psect for function _do_I2C_IDLE
 15321  0E5E                     _do_I2C_IDLE:	
 15322  0E5E                     i1l4287:	
 15323                           ;incstack = 0
 15324                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 15325                           
 15326                           
 15327                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
 15328  0E5E  0021               	movlb	1	; select bank1
 15329  0E5F  1020               	bcf	_i2c_status^(0+128),0
 15330  0E60                     i1l4289:	
 15331                           
 15332                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
 15333  0E60  01AA               	clrf	(_i2c_status^(0+128)+10)
 15334  0E61                     i1l4291:	
 15335                           
 15336                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
 15337  0E61  300E               	movlw	14
 15338  0E62                     i1l128:	
 15339  0E62  0008               	return
 15340  0E63                     __end_of_do_I2C_IDLE:	
 15341                           
 15342                           	psect	text57
 15343  0EC7                     __ptext57:	
 15344 ;; *************** function _do_I2C_RESET *****************
 15345 ;; Defined at:
 15346 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 15347 ;; Parameters:    Size  Location     Type
 15348 ;;		None
 15349 ;; Auto vars:     Size  Location     Type
 15350 ;;		None
 15351 ;; Return value:  Size  Location     Type
 15352 ;;                  1    wreg      enum E12722
 15353 ;; Registers used:
 15354 ;;		wreg, status,2, status,0, pclath, cstack
 15355 ;; Tracked objects:
 15356 ;;		On entry : 0/0
 15357 ;;		On exit  : 0/0
 15358 ;;		Unchanged: 0/0
 15359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15364 ;;Total ram usage:        0 bytes
 15365 ;; Hardware stack levels used:    1
 15366 ;; Hardware stack levels required when called:    1
 15367 ;; This function calls:
 15368 ;;		_i2c1_driver_resetBus
 15369 ;; This function is called by:
 15370 ;;		_i2c_ISR
 15371 ;; This function uses a non-reentrant model
 15372 ;;
 15373                           
 15374                           
 15375                           ;psect for function _do_I2C_RESET
 15376  0EC7                     _do_I2C_RESET:	
 15377  0EC7                     i1l4277:	
 15378                           ;incstack = 0
 15379                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 15380                           
 15381                           
 15382                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
 15383  0EC7  318E  262D  318E   	fcall	_i2c1_driver_resetBus
 15384  0ECA                     i1l4279:	
 15385                           
 15386                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
 15387  0ECA  0021               	movlb	1	; select bank1
 15388  0ECB  1020               	bcf	_i2c_status^(0+128),0
 15389  0ECC                     i1l4281:	
 15390                           
 15391                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
 15392  0ECC  01AA               	clrf	(_i2c_status^(0+128)+10)
 15393  0ECD                     i1l4283:	
 15394                           
 15395                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
 15396  0ECD  300E               	movlw	14
 15397  0ECE                     i1l125:	
 15398  0ECE  0008               	return
 15399  0ECF                     __end_of_do_I2C_RESET:	
 15400                           
 15401                           	psect	text58
 15402  0539                     __ptext58:	
 15403 ;; *************** function _do_I2C_TX_EMPTY *****************
 15404 ;; Defined at:
 15405 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 15406 ;; Parameters:    Size  Location     Type
 15407 ;;		None
 15408 ;; Auto vars:     Size  Location     Type
 15409 ;;		None
 15410 ;; Return value:  Size  Location     Type
 15411 ;;                  1    wreg      enum E12722
 15412 ;; Registers used:
 15413 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15414 ;; Tracked objects:
 15415 ;;		On entry : 0/0
 15416 ;;		On exit  : 0/0
 15417 ;;		Unchanged: 0/0
 15418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15421 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15422 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15423 ;;Total ram usage:        3 bytes
 15424 ;; Hardware stack levels used:    1
 15425 ;; Hardware stack levels required when called:    3
 15426 ;; This function calls:
 15427 ;;		Absolute function
 15428 ;;		_do_I2C_SEND_RESTART
 15429 ;;		_do_I2C_SEND_STOP
 15430 ;;		_i2c_restartWrite
 15431 ;;		_mssp1_setIRQ
 15432 ;;		_rd1RegCompleteHandler
 15433 ;;		_rd2RegCompleteHandler
 15434 ;;		_rdBlkRegCompleteHandler
 15435 ;;		_returnReset
 15436 ;;		_returnStop
 15437 ;;		_wr1RegCompleteHandler
 15438 ;;		_wr2RegCompleteHandler
 15439 ;; This function is called by:
 15440 ;;		_i2c_ISR
 15441 ;; This function uses a non-reentrant model
 15442 ;;
 15443                           
 15444                           
 15445                           ;psect for function _do_I2C_TX_EMPTY
 15446  0539                     _do_I2C_TX_EMPTY:	
 15447  0539                     i1l4413:	
 15448                           ;incstack = 0
 15449                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15450                           
 15451                           
 15452                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
 15453  0539  0021               	movlb	1	; select bank1
 15454  053A  1520               	bsf	_i2c_status^(0+128),2
 15455                           
 15456                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 15457  053B  2D49               	goto	i1l4431
 15458  053C                     i1l4415:	
 15459                           
 15460                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
 15461  053C  318E  266D  3185   	fcall	_do_I2C_SEND_RESTART
 15462  053F  2D6B               	goto	i1l200
 15463  0540                     i1l4419:	
 15464                           
 15465                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
 15466  0540  318E  2641  3185   	fcall	_mssp1_setIRQ
 15467  0543                     i1l4421:	
 15468                           
 15469                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
 15470  0543  3003               	movlw	3
 15471  0544  2D6B               	goto	i1l200
 15472  0545                     i1l4425:	
 15473                           
 15474                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
 15475  0545  318E  2672  3185   	fcall	_do_I2C_SEND_STOP
 15476  0548  2D6B               	goto	i1l200
 15477  0549                     i1l4431:	
 15478  0549  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 15479  054A  00FA               	movwf	??_do_I2C_TX_EMPTY
 15480  054B  087A               	movf	??_do_I2C_TX_EMPTY,w
 15481  054C  00F9               	movwf	rdBlkRegCompleteHandler@p
 15482  054D  300B               	movlw	11
 15483  054E  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 15484  054F  0086               	movwf	6
 15485  0550  0187               	clrf	7
 15486  0551  3F41               	moviw [1]fsr1
 15487  0552  008A               	movwf	10
 15488  0553  3F40               	moviw [0]fsr1
 15489  0554  000A               	callw
 15490  0555  3185               	pagesel	$
 15491  0556  00FB               	movwf	??_do_I2C_TX_EMPTY+1
 15492  0557  01FC               	clrf	??_do_I2C_TX_EMPTY+2
 15493                           
 15494                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15495                           ; Switch size 1, requested type "simple"
 15496                           ; Number of cases is 1, Range of values is 0 to 0
 15497                           ; switch strategies available:
 15498                           ; Name         Instructions Cycles
 15499                           ; simple_byte            4     3 (average)
 15500                           ; direct_byte            8     6 (fixed)
 15501                           ; jumptable            260     6 (fixed)
 15502                           ;	Chosen strategy is simple_byte
 15503  0558  087C               	movf	??_do_I2C_TX_EMPTY+2,w
 15504  0559  3A00               	xorlw	0	; case 0
 15505  055A  1903               	skipnz
 15506  055B  2D5D               	goto	i1l5353
 15507  055C  2D45               	goto	i1l4425
 15508  055D                     i1l5353:	
 15509                           
 15510                           ; Switch size 1, requested type "simple"
 15511                           ; Number of cases is 4, Range of values is 1 to 4
 15512                           ; switch strategies available:
 15513                           ; Name         Instructions Cycles
 15514                           ; simple_byte           13     7 (average)
 15515                           ; direct_byte           17     9 (fixed)
 15516                           ; jumptable            263     9 (fixed)
 15517                           ;	Chosen strategy is simple_byte
 15518  055D  087B               	movf	??_do_I2C_TX_EMPTY+1,w
 15519  055E  3A01               	xorlw	1	; case 1
 15520  055F  1903               	skipnz
 15521  0560  2D45               	goto	i1l4425
 15522  0561  3A03               	xorlw	3	; case 2
 15523  0562  1903               	skipnz
 15524  0563  2D3C               	goto	i1l4415
 15525  0564  3A01               	xorlw	1	; case 3
 15526  0565  1903               	skipnz
 15527  0566  2D3C               	goto	i1l4415
 15528  0567  3A07               	xorlw	7	; case 4
 15529  0568  1903               	skipnz
 15530  0569  2D40               	goto	i1l4419
 15531  056A  2D45               	goto	i1l4425
 15532  056B                     i1l200:	
 15533  056B  0008               	return
 15534  056C                     __end_of_do_I2C_TX_EMPTY:	
 15535                           
 15536                           	psect	text59
 15537  0E41                     __ptext59:	
 15538 ;; *************** function _mssp1_setIRQ *****************
 15539 ;; Defined at:
 15540 ;;		line 59 in file "mcc_generated_files/i2c1_driver.c"
 15541 ;; Parameters:    Size  Location     Type
 15542 ;;		None
 15543 ;; Auto vars:     Size  Location     Type
 15544 ;;		None
 15545 ;; Return value:  Size  Location     Type
 15546 ;;                  1    wreg      void 
 15547 ;; Registers used:
 15548 ;;		None
 15549 ;; Tracked objects:
 15550 ;;		On entry : 0/0
 15551 ;;		On exit  : 0/0
 15552 ;;		Unchanged: 0/0
 15553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15558 ;;Total ram usage:        0 bytes
 15559 ;; Hardware stack levels used:    1
 15560 ;; This function calls:
 15561 ;;		Nothing
 15562 ;; This function is called by:
 15563 ;;		_do_I2C_TX_EMPTY
 15564 ;; This function uses a non-reentrant model
 15565 ;;
 15566                           
 15567                           
 15568                           ;psect for function _mssp1_setIRQ
 15569  0E41                     _mssp1_setIRQ:	
 15570  0E41                     i1l4101:	
 15571                           ;incstack = 0
 15572                           ; Regs used in _mssp1_setIRQ: []
 15573                           
 15574                           
 15575                           ;mcc_generated_files/i2c1_driver.c: 61:     else
 15576  0E41  002E               	movlb	14	; select bank14
 15577  0E42  140F               	bsf	15,0	;volatile
 15578  0E43                     i1l579:	
 15579  0E43  0008               	return
 15580  0E44                     __end_of_mssp1_setIRQ:	
 15581                           
 15582                           	psect	text60
 15583  0EBF                     __ptext60:	
 15584 ;; *************** function _i2c1_driver_isNACK *****************
 15585 ;; Defined at:
 15586 ;;		line 162 in file "mcc_generated_files/i2c1_driver.c"
 15587 ;; Parameters:    Size  Location     Type
 15588 ;;		None
 15589 ;; Auto vars:     Size  Location     Type
 15590 ;;		None
 15591 ;; Return value:  Size  Location     Type
 15592 ;;		None               void
 15593 ;; Registers used:
 15594 ;;		wreg, status,2, status,0
 15595 ;; Tracked objects:
 15596 ;;		On entry : 0/0
 15597 ;;		On exit  : 0/0
 15598 ;;		Unchanged: 0/0
 15599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15602 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15603 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15604 ;;Total ram usage:        1 bytes
 15605 ;; Hardware stack levels used:    1
 15606 ;; This function calls:
 15607 ;;		Nothing
 15608 ;; This function is called by:
 15609 ;;		_do_I2C_TX
 15610 ;;		_i2c_ISR
 15611 ;; This function uses a non-reentrant model
 15612 ;;
 15613                           
 15614                           
 15615                           ;psect for function _i2c1_driver_isNACK
 15616  0EBF                     _i2c1_driver_isNACK:	
 15617  0EBF                     i1l4093:	
 15618                           ;incstack = 0
 15619                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 15620                           
 15621                           
 15622                           ;mcc_generated_files/i2c1_driver.c: 164:     return SSP1CON2bits.ACKSTAT;
 15623  0EBF  0023               	movlb	3	; select bank3
 15624  0EC0  0E11               	swapf	17,w	;volatile
 15625  0EC1  0C89               	rrf	9,f
 15626  0EC2  0C89               	rrf	9,f
 15627  0EC3  3901               	andlw	1
 15628  0EC4  00F0               	movwf	??_i2c1_driver_isNACK
 15629  0EC5  0C70               	rrf	??_i2c1_driver_isNACK,w
 15630  0EC6                     i1l614:	
 15631  0EC6  0008               	return
 15632  0EC7                     __end_of_i2c1_driver_isNACK:	
 15633                           
 15634                           	psect	text61
 15635  0E59                     __ptext61:	
 15636 ;; *************** function _i2c1_driver_TXData *****************
 15637 ;; Defined at:
 15638 ;;		line 187 in file "mcc_generated_files/i2c1_driver.c"
 15639 ;; Parameters:    Size  Location     Type
 15640 ;;  d               1    wreg     unsigned char 
 15641 ;; Auto vars:     Size  Location     Type
 15642 ;;  d               1    0[COMMON] unsigned char 
 15643 ;; Return value:  Size  Location     Type
 15644 ;;                  1    wreg      void 
 15645 ;; Registers used:
 15646 ;;		wreg
 15647 ;; Tracked objects:
 15648 ;;		On entry : 0/0
 15649 ;;		On exit  : 0/0
 15650 ;;		Unchanged: 0/0
 15651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15653 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15655 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15656 ;;Total ram usage:        1 bytes
 15657 ;; Hardware stack levels used:    1
 15658 ;; This function calls:
 15659 ;;		Nothing
 15660 ;; This function is called by:
 15661 ;;		_do_I2C_SEND_ADR_READ
 15662 ;;		_do_I2C_SEND_ADR_WRITE
 15663 ;;		_do_I2C_TX
 15664 ;; This function uses a non-reentrant model
 15665 ;;
 15666                           
 15667                           
 15668                           ;psect for function _i2c1_driver_TXData
 15669  0E59                     _i2c1_driver_TXData:	
 15670                           
 15671                           ;incstack = 0
 15672                           ; Regs used in _i2c1_driver_TXData: [wreg]
 15673                           ;i2c1_driver_TXData@d stored from wreg
 15674  0E59  00F0               	movwf	i2c1_driver_TXData@d
 15675  0E5A                     i1l4075:	
 15676                           
 15677                           ;mcc_generated_files/i2c1_driver.c: 187: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 188: {;mcc_generated_files/i2c1_driver.c: 18
      +                          9:     SSP1BUF = d;
 15678  0E5A  0870               	movf	i2c1_driver_TXData@d,w
 15679  0E5B  0023               	movlb	3	; select bank3
 15680  0E5C  008C               	movwf	12	;volatile
 15681  0E5D                     i1l629:	
 15682  0E5D  0008               	return
 15683  0E5E                     __end_of_i2c1_driver_TXData:	
 15684                           
 15685                           	psect	text62
 15686  0E3E                     __ptext62:	
 15687 ;; *************** function _i2c1_driver_getRXData *****************
 15688 ;; Defined at:
 15689 ;;		line 172 in file "mcc_generated_files/i2c1_driver.c"
 15690 ;; Parameters:    Size  Location     Type
 15691 ;;		None
 15692 ;; Auto vars:     Size  Location     Type
 15693 ;;		None
 15694 ;; Return value:  Size  Location     Type
 15695 ;;                  1    wreg      unsigned char 
 15696 ;; Registers used:
 15697 ;;		wreg
 15698 ;; Tracked objects:
 15699 ;;		On entry : 0/0
 15700 ;;		On exit  : 0/0
 15701 ;;		Unchanged: 0/0
 15702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15707 ;;Total ram usage:        0 bytes
 15708 ;; Hardware stack levels used:    1
 15709 ;; This function calls:
 15710 ;;		Nothing
 15711 ;; This function is called by:
 15712 ;;		_do_I2C_RX
 15713 ;; This function uses a non-reentrant model
 15714 ;;
 15715                           
 15716                           
 15717                           ;psect for function _i2c1_driver_getRXData
 15718  0E3E                     _i2c1_driver_getRXData:	
 15719  0E3E                     i1l4097:	
 15720                           ;incstack = 0
 15721                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 15722                           
 15723                           
 15724                           ;mcc_generated_files/i2c1_driver.c: 174:     return SSP1BUF;
 15725  0E3E  0023               	movlb	3	; select bank3
 15726  0E3F  080C               	movf	12,w	;volatile
 15727  0E40                     i1l620:	
 15728  0E40  0008               	return
 15729  0E41                     __end_of_i2c1_driver_getRXData:	
 15730                           
 15731                           	psect	text63
 15732  0E51                     __ptext63:	
 15733 ;; *************** function _i2c1_driver_sendNACK *****************
 15734 ;; Defined at:
 15735 ;;		line 203 in file "mcc_generated_files/i2c1_driver.c"
 15736 ;; Parameters:    Size  Location     Type
 15737 ;;		None
 15738 ;; Auto vars:     Size  Location     Type
 15739 ;;		None
 15740 ;; Return value:  Size  Location     Type
 15741 ;;                  1    wreg      void 
 15742 ;; Registers used:
 15743 ;;		None
 15744 ;; Tracked objects:
 15745 ;;		On entry : 0/0
 15746 ;;		On exit  : 0/0
 15747 ;;		Unchanged: 0/0
 15748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15753 ;;Total ram usage:        0 bytes
 15754 ;; Hardware stack levels used:    1
 15755 ;; This function calls:
 15756 ;;		Nothing
 15757 ;; This function is called by:
 15758 ;;		_do_I2C_DO_NACK_STOP
 15759 ;;		_do_I2C_DO_NACK_RESTART
 15760 ;; This function uses a non-reentrant model
 15761 ;;
 15762                           
 15763                           
 15764                           ;psect for function _i2c1_driver_sendNACK
 15765  0E51                     _i2c1_driver_sendNACK:	
 15766  0E51                     i1l3957:	
 15767                           ;incstack = 0
 15768                           ; Regs used in _i2c1_driver_sendNACK: []
 15769                           
 15770                           
 15771                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKDT = 1;
 15772  0E51  0023               	movlb	3	; select bank3
 15773  0E52  1691               	bsf	17,5	;volatile
 15774                           
 15775                           ;mcc_generated_files/i2c1_driver.c: 206:     SSP1CON2bits.ACKEN = 1;
 15776  0E53  1611               	bsf	17,4	;volatile
 15777  0E54                     i1l638:	
 15778  0E54  0008               	return
 15779  0E55                     __end_of_i2c1_driver_sendNACK:	
 15780                           
 15781                           	psect	text64
 15782  0E2D                     __ptext64:	
 15783 ;; *************** function _i2c1_driver_resetBus *****************
 15784 ;; Defined at:
 15785 ;;		line 142 in file "mcc_generated_files/i2c1_driver.c"
 15786 ;; Parameters:    Size  Location     Type
 15787 ;;		None
 15788 ;; Auto vars:     Size  Location     Type
 15789 ;;		None
 15790 ;; Return value:  Size  Location     Type
 15791 ;;                  1    wreg      void 
 15792 ;; Registers used:
 15793 ;;		None
 15794 ;; Tracked objects:
 15795 ;;		On entry : 0/0
 15796 ;;		On exit  : 0/0
 15797 ;;		Unchanged: 0/0
 15798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15803 ;;Total ram usage:        0 bytes
 15804 ;; Hardware stack levels used:    1
 15805 ;; This function calls:
 15806 ;;		Nothing
 15807 ;; This function is called by:
 15808 ;;		_do_I2C_RESET
 15809 ;; This function uses a non-reentrant model
 15810 ;;
 15811                           
 15812                           
 15813                           ;psect for function _i2c1_driver_resetBus
 15814  0E2D                     _i2c1_driver_resetBus:	
 15815  0E2D                     i1l602:	
 15816                           ;incstack = 0
 15817                           ; Regs used in _i2c1_driver_resetBus: []
 15818                           
 15819  0E2D  0008               	return
 15820  0E2E                     __end_of_i2c1_driver_resetBus:	
 15821                           
 15822                           	psect	text65
 15823  0E3B                     __ptext65:	
 15824 ;; *************** function _i2c1_driver_startRX *****************
 15825 ;; Defined at:
 15826 ;;		line 167 in file "mcc_generated_files/i2c1_driver.c"
 15827 ;; Parameters:    Size  Location     Type
 15828 ;;		None
 15829 ;; Auto vars:     Size  Location     Type
 15830 ;;		None
 15831 ;; Return value:  Size  Location     Type
 15832 ;;                  1    wreg      void 
 15833 ;; Registers used:
 15834 ;;		None
 15835 ;; Tracked objects:
 15836 ;;		On entry : 0/0
 15837 ;;		On exit  : 0/0
 15838 ;;		Unchanged: 0/0
 15839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15844 ;;Total ram usage:        0 bytes
 15845 ;; Hardware stack levels used:    1
 15846 ;; This function calls:
 15847 ;;		Nothing
 15848 ;; This function is called by:
 15849 ;;		_do_I2C_RCEN
 15850 ;; This function uses a non-reentrant model
 15851 ;;
 15852                           
 15853                           
 15854                           ;psect for function _i2c1_driver_startRX
 15855  0E3B                     _i2c1_driver_startRX:	
 15856  0E3B                     i1l4077:	
 15857                           ;incstack = 0
 15858                           ; Regs used in _i2c1_driver_startRX: []
 15859                           
 15860                           
 15861                           ;mcc_generated_files/i2c1_driver.c: 169:     SSP1CON2bits.RCEN = 1;
 15862  0E3B  0023               	movlb	3	; select bank3
 15863  0E3C  1591               	bsf	17,3	;volatile
 15864  0E3D                     i1l617:	
 15865  0E3D  0008               	return
 15866  0E3E                     __end_of_i2c1_driver_startRX:	
 15867                           
 15868                           	psect	text66
 15869  0779                     __ptext66:	
 15870 ;; *************** function _rdBlkRegCompleteHandler *****************
 15871 ;; Defined at:
 15872 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15873 ;; Parameters:    Size  Location     Type
 15874 ;;  p               1    9[COMMON] PTR void 
 15875 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15876 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15877 ;; Auto vars:     Size  Location     Type
 15878 ;;		None
 15879 ;; Return value:  Size  Location     Type
 15880 ;;                  1    wreg      enum E358
 15881 ;; Registers used:
 15882 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15883 ;; Tracked objects:
 15884 ;;		On entry : 0/0
 15885 ;;		On exit  : 0/0
 15886 ;;		Unchanged: 0/0
 15887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15888 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15891 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15892 ;;Total ram usage:        1 bytes
 15893 ;; Hardware stack levels used:    1
 15894 ;; Hardware stack levels required when called:    2
 15895 ;; This function calls:
 15896 ;;		_i2c_setBuffer
 15897 ;;		_i2c_setDataCompleteCallback
 15898 ;; This function is called by:
 15899 ;;		_i2c_readDataBlock
 15900 ;;		_do_I2C_DO_ADDRESS_NACK
 15901 ;;		_do_I2C_TX
 15902 ;;		_do_I2C_RX
 15903 ;;		_do_I2C_TX_EMPTY
 15904 ;; This function uses a non-reentrant model
 15905 ;;
 15906                           
 15907                           
 15908                           ;psect for function _rdBlkRegCompleteHandler
 15909  0779                     _rdBlkRegCompleteHandler:	
 15910  0779                     i1l4143:	
 15911                           ;incstack = 0
 15912                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 15913                           
 15914                           
 15915                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
 15916  0779  0879               	movf	rdBlkRegCompleteHandler@p,w
 15917  077A  0086               	movwf	6
 15918  077B  0187               	clrf	7
 15919  077C  3F40               	moviw [0]fsr1
 15920  077D  00F0               	movwf	i2c_setBuffer@bufferSize
 15921  077E  3F41               	moviw [1]fsr1
 15922  077F  00F1               	movwf	i2c_setBuffer@bufferSize+1
 15923  0780  0879               	movf	rdBlkRegCompleteHandler@p,w
 15924  0781  3E02               	addlw	2
 15925  0782  0086               	movwf	6
 15926  0783  0187               	clrf	7
 15927  0784  0801               	movf	1,w
 15928  0785  318F  279C  3187   	fcall	_i2c_setBuffer
 15929                           
 15930                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 15931  0788  3000               	movlw	0
 15932  0789  00F5               	movwf	i2c_setDataCompleteCallback@cb
 15933  078A  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 15934  078B  01F7               	clrf	i2c_setDataCompleteCallback@p
 15935  078C  318F  2747  3187   	fcall	_i2c_setDataCompleteCallback
 15936  078F                     i1l4145:	
 15937                           
 15938                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
 15939  078F  3002               	movlw	2
 15940  0790                     i1l303:	
 15941  0790  0008               	return
 15942  0791                     __end_of_rdBlkRegCompleteHandler:	
 15943                           
 15944                           	psect	text67
 15945  07E9                     __ptext67:	
 15946 ;; *************** function _rd2RegCompleteHandler *****************
 15947 ;; Defined at:
 15948 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15949 ;; Parameters:    Size  Location     Type
 15950 ;;  p               1    9[COMMON] PTR void 
 15951 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 15952 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 15953 ;; Auto vars:     Size  Location     Type
 15954 ;;		None
 15955 ;; Return value:  Size  Location     Type
 15956 ;;                  1    wreg      enum E358
 15957 ;; Registers used:
 15958 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15959 ;; Tracked objects:
 15960 ;;		On entry : 0/0
 15961 ;;		On exit  : 0/0
 15962 ;;		Unchanged: 0/0
 15963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15964 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15967 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15968 ;;Total ram usage:        1 bytes
 15969 ;; Hardware stack levels used:    1
 15970 ;; Hardware stack levels required when called:    2
 15971 ;; This function calls:
 15972 ;;		_i2c_setBuffer
 15973 ;;		_i2c_setDataCompleteCallback
 15974 ;; This function is called by:
 15975 ;;		_i2c_read2ByteRegister
 15976 ;;		_do_I2C_DO_ADDRESS_NACK
 15977 ;;		_do_I2C_TX
 15978 ;;		_do_I2C_RX
 15979 ;;		_do_I2C_TX_EMPTY
 15980 ;; This function uses a non-reentrant model
 15981 ;;
 15982                           
 15983                           
 15984                           ;psect for function _rd2RegCompleteHandler
 15985  07E9                     _rd2RegCompleteHandler:	
 15986  07E9                     i1l4127:	
 15987                           ;incstack = 0
 15988                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15989                           
 15990                           
 15991                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
 15992  07E9  3002               	movlw	2
 15993  07EA  00F0               	movwf	i2c_setBuffer@bufferSize
 15994  07EB  3000               	movlw	0
 15995  07EC  00F1               	movwf	i2c_setBuffer@bufferSize+1
 15996  07ED  0879               	movf	rd2RegCompleteHandler@p,w
 15997  07EE  318F  279C  3187   	fcall	_i2c_setBuffer
 15998  07F1                     i1l4129:	
 15999                           
 16000                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 16001  07F1  3000               	movlw	0
 16002  07F2  00F5               	movwf	i2c_setDataCompleteCallback@cb
 16003  07F3  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 16004  07F4  01F7               	clrf	i2c_setDataCompleteCallback@p
 16005  07F5  318F  2747  3187   	fcall	_i2c_setDataCompleteCallback
 16006  07F8                     i1l4131:	
 16007                           
 16008                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
 16009  07F8  3002               	movlw	2
 16010  07F9                     i1l279:	
 16011  07F9  0008               	return
 16012  07FA                     __end_of_rd2RegCompleteHandler:	
 16013                           
 16014                           	psect	text68
 16015  0FEF                     __ptext68:	
 16016 ;; *************** function _rd1RegCompleteHandler *****************
 16017 ;; Defined at:
 16018 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16019 ;; Parameters:    Size  Location     Type
 16020 ;;  p               1    9[COMMON] PTR void 
 16021 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16022 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16023 ;; Auto vars:     Size  Location     Type
 16024 ;;		None
 16025 ;; Return value:  Size  Location     Type
 16026 ;;                  1    wreg      enum E358
 16027 ;; Registers used:
 16028 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16029 ;; Tracked objects:
 16030 ;;		On entry : 0/0
 16031 ;;		On exit  : 0/0
 16032 ;;		Unchanged: 0/0
 16033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16034 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16037 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16038 ;;Total ram usage:        1 bytes
 16039 ;; Hardware stack levels used:    1
 16040 ;; Hardware stack levels required when called:    2
 16041 ;; This function calls:
 16042 ;;		_i2c_setBuffer
 16043 ;;		_i2c_setDataCompleteCallback
 16044 ;; This function is called by:
 16045 ;;		_i2c_read1ByteRegister
 16046 ;;		_do_I2C_DO_ADDRESS_NACK
 16047 ;;		_do_I2C_TX
 16048 ;;		_do_I2C_RX
 16049 ;;		_do_I2C_TX_EMPTY
 16050 ;; This function uses a non-reentrant model
 16051 ;;
 16052                           
 16053                           
 16054                           ;psect for function _rd1RegCompleteHandler
 16055  0FEF                     _rd1RegCompleteHandler:	
 16056  0FEF                     i1l4119:	
 16057                           ;incstack = 0
 16058                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16059                           
 16060                           
 16061                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
 16062  0FEF  3001               	movlw	1
 16063  0FF0  00F0               	movwf	i2c_setBuffer@bufferSize
 16064  0FF1  3000               	movlw	0
 16065  0FF2  00F1               	movwf	i2c_setBuffer@bufferSize+1
 16066  0FF3  0879               	movf	rd1RegCompleteHandler@p,w
 16067  0FF4  318F  279C  318F   	fcall	_i2c_setBuffer
 16068  0FF7                     i1l4121:	
 16069                           
 16070                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 16071  0FF7  3000               	movlw	0
 16072  0FF8  00F5               	movwf	i2c_setDataCompleteCallback@cb
 16073  0FF9  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 16074  0FFA  01F7               	clrf	i2c_setDataCompleteCallback@p
 16075  0FFB  318F  2747  318F   	fcall	_i2c_setDataCompleteCallback
 16076  0FFE                     i1l4123:	
 16077                           
 16078                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
 16079  0FFE  3002               	movlw	2
 16080  0FFF                     i1l264:	
 16081  0FFF  0008               	return
 16082  1000                     __end_of_rd1RegCompleteHandler:	
 16083                           
 16084                           	psect	text69
 16085  0FDE                     __ptext69:	
 16086 ;; *************** function _wr1RegCompleteHandler *****************
 16087 ;; Defined at:
 16088 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16089 ;; Parameters:    Size  Location     Type
 16090 ;;  p               1    9[COMMON] PTR void 
 16091 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16092 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16093 ;; Auto vars:     Size  Location     Type
 16094 ;;		None
 16095 ;; Return value:  Size  Location     Type
 16096 ;;                  1    wreg      enum E358
 16097 ;; Registers used:
 16098 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16099 ;; Tracked objects:
 16100 ;;		On entry : 0/0
 16101 ;;		On exit  : 0/0
 16102 ;;		Unchanged: 0/0
 16103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16104 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16107 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16108 ;;Total ram usage:        1 bytes
 16109 ;; Hardware stack levels used:    1
 16110 ;; Hardware stack levels required when called:    2
 16111 ;; This function calls:
 16112 ;;		_i2c_setBuffer
 16113 ;;		_i2c_setDataCompleteCallback
 16114 ;; This function is called by:
 16115 ;;		_i2c_write1ByteRegister
 16116 ;;		_do_I2C_DO_ADDRESS_NACK
 16117 ;;		_do_I2C_TX
 16118 ;;		_do_I2C_RX
 16119 ;;		_do_I2C_TX_EMPTY
 16120 ;; This function uses a non-reentrant model
 16121 ;;
 16122                           
 16123                           
 16124                           ;psect for function _wr1RegCompleteHandler
 16125  0FDE                     _wr1RegCompleteHandler:	
 16126  0FDE                     i1l4111:	
 16127                           ;incstack = 0
 16128                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16129                           
 16130                           
 16131                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
 16132  0FDE  3001               	movlw	1
 16133  0FDF  00F0               	movwf	i2c_setBuffer@bufferSize
 16134  0FE0  3000               	movlw	0
 16135  0FE1  00F1               	movwf	i2c_setBuffer@bufferSize+1
 16136  0FE2  0879               	movf	wr1RegCompleteHandler@p,w
 16137  0FE3  318F  279C  318F   	fcall	_i2c_setBuffer
 16138  0FE6                     i1l4113:	
 16139                           
 16140                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 16141  0FE6  3000               	movlw	0
 16142  0FE7  00F5               	movwf	i2c_setDataCompleteCallback@cb
 16143  0FE8  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 16144  0FE9  01F7               	clrf	i2c_setDataCompleteCallback@p
 16145  0FEA  318F  2747  318F   	fcall	_i2c_setDataCompleteCallback
 16146  0FED                     i1l4115:	
 16147                           
 16148                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
 16149  0FED  3004               	movlw	4
 16150  0FEE                     i1l243:	
 16151  0FEE  0008               	return
 16152  0FEF                     __end_of_wr1RegCompleteHandler:	
 16153                           
 16154                           	psect	text70
 16155  0002                     __ptext70:	
 16156 ;; *************** function _returnReset *****************
 16157 ;; Defined at:
 16158 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 16159 ;; Parameters:    Size  Location     Type
 16160 ;;  p               1    9[COMMON] PTR void 
 16161 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16162 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16163 ;; Auto vars:     Size  Location     Type
 16164 ;;		None
 16165 ;; Return value:  Size  Location     Type
 16166 ;;                  1    wreg      enum E12568
 16167 ;; Registers used:
 16168 ;;		wreg
 16169 ;; Tracked objects:
 16170 ;;		On entry : 0/0
 16171 ;;		On exit  : 0/0
 16172 ;;		Unchanged: 0/0
 16173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16174 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16177 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16178 ;;Total ram usage:        1 bytes
 16179 ;; Hardware stack levels used:    1
 16180 ;; This function calls:
 16181 ;;		Nothing
 16182 ;; This function is called by:
 16183 ;;		_i2c_open
 16184 ;;		_do_I2C_DO_ADDRESS_NACK
 16185 ;;		_do_I2C_TX
 16186 ;;		_do_I2C_RX
 16187 ;;		_do_I2C_TX_EMPTY
 16188 ;; This function uses a non-reentrant model
 16189 ;;
 16190                           
 16191                           
 16192                           ;psect for function _returnReset
 16193  0002                     _returnReset:	
 16194  0002                     i1l4107:	
 16195                           ;incstack = 0
 16196                           ; Regs used in _returnReset: [wreg]
 16197                           
 16198                           
 16199                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 16200  0002  3005               	movlw	5
 16201  0003                     i1l219:	
 16202  0003  0008               	return
 16203  0004                     __end_of_returnReset:	
 16204                           
 16205                           	psect	text71
 16206  0E30                     __ptext71:	
 16207 ;; *************** function _returnStop *****************
 16208 ;; Defined at:
 16209 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 16210 ;; Parameters:    Size  Location     Type
 16211 ;;  p               1    9[COMMON] PTR void 
 16212 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16213 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16214 ;; Auto vars:     Size  Location     Type
 16215 ;;		None
 16216 ;; Return value:  Size  Location     Type
 16217 ;;                  1    wreg      enum E12568
 16218 ;; Registers used:
 16219 ;;		wreg
 16220 ;; Tracked objects:
 16221 ;;		On entry : 0/0
 16222 ;;		On exit  : 0/0
 16223 ;;		Unchanged: 0/0
 16224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16225 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16228 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16229 ;;Total ram usage:        1 bytes
 16230 ;; Hardware stack levels used:    1
 16231 ;; This function calls:
 16232 ;;		Nothing
 16233 ;; This function is called by:
 16234 ;;		_setCallBack
 16235 ;;		_i2c_open
 16236 ;;		_do_I2C_DO_ADDRESS_NACK
 16237 ;;		_do_I2C_TX
 16238 ;;		_do_I2C_RX
 16239 ;;		_do_I2C_TX_EMPTY
 16240 ;; This function uses a non-reentrant model
 16241 ;;
 16242                           
 16243                           
 16244                           ;psect for function _returnStop
 16245  0E30                     _returnStop:	
 16246  0E30                     i1l4103:	
 16247                           ;incstack = 0
 16248                           ; Regs used in _returnStop: [wreg]
 16249                           
 16250                           
 16251                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
 16252  0E30  3001               	movlw	1
 16253  0E31                     i1l216:	
 16254  0E31  0008               	return
 16255  0E32                     __end_of_returnStop:	
 16256                           
 16257                           	psect	text72
 16258  0E2E                     __ptext72:	
 16259 ;; *************** function _i2c_restartWrite *****************
 16260 ;; Defined at:
 16261 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 16262 ;; Parameters:    Size  Location     Type
 16263 ;;  p               1    9[COMMON] PTR void 
 16264 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16265 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16266 ;; Auto vars:     Size  Location     Type
 16267 ;;		None
 16268 ;; Return value:  Size  Location     Type
 16269 ;;                  1    wreg      enum E358
 16270 ;; Registers used:
 16271 ;;		wreg
 16272 ;; Tracked objects:
 16273 ;;		On entry : 0/0
 16274 ;;		On exit  : 0/0
 16275 ;;		Unchanged: 0/0
 16276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16277 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16280 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16281 ;;Total ram usage:        1 bytes
 16282 ;; Hardware stack levels used:    1
 16283 ;; This function calls:
 16284 ;;		Nothing
 16285 ;; This function is called by:
 16286 ;;		_i2c_write1ByteRegister
 16287 ;;		_i2c_writeNBytes
 16288 ;;		_i2c_read1ByteRegister
 16289 ;;		_i2c_read2ByteRegister
 16290 ;;		_i2c_write2ByteRegister
 16291 ;;		_i2c_readDataBlock
 16292 ;;		_do_I2C_DO_ADDRESS_NACK
 16293 ;;		_do_I2C_TX
 16294 ;;		_do_I2C_RX
 16295 ;;		_do_I2C_TX_EMPTY
 16296 ;; This function uses a non-reentrant model
 16297 ;;
 16298                           
 16299                           
 16300                           ;psect for function _i2c_restartWrite
 16301  0E2E                     _i2c_restartWrite:	
 16302  0E2E                     i1l4039:	
 16303                           ;incstack = 0
 16304                           ; Regs used in _i2c_restartWrite: [wreg]
 16305                           
 16306                           
 16307                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
 16308  0E2E  3003               	movlw	3
 16309  0E2F                     i1l9:	
 16310  0E2F  0008               	return
 16311  0E30                     __end_of_i2c_restartWrite:	
 16312                           
 16313                           	psect	text73
 16314  0FCD                     __ptext73:	
 16315 ;; *************** function _wr2RegCompleteHandler *****************
 16316 ;; Defined at:
 16317 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16318 ;; Parameters:    Size  Location     Type
 16319 ;;  p               1    9[COMMON] PTR void 
 16320 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16321 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16322 ;; Auto vars:     Size  Location     Type
 16323 ;;		None
 16324 ;; Return value:  Size  Location     Type
 16325 ;;                  1    wreg      enum E358
 16326 ;; Registers used:
 16327 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16328 ;; Tracked objects:
 16329 ;;		On entry : 0/0
 16330 ;;		On exit  : 0/0
 16331 ;;		Unchanged: 0/0
 16332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16333 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16336 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16337 ;;Total ram usage:        1 bytes
 16338 ;; Hardware stack levels used:    1
 16339 ;; Hardware stack levels required when called:    2
 16340 ;; This function calls:
 16341 ;;		_i2c_setBuffer
 16342 ;;		_i2c_setDataCompleteCallback
 16343 ;; This function is called by:
 16344 ;;		_i2c_write2ByteRegister
 16345 ;;		_do_I2C_DO_ADDRESS_NACK
 16346 ;;		_do_I2C_TX
 16347 ;;		_do_I2C_RX
 16348 ;;		_do_I2C_TX_EMPTY
 16349 ;; This function uses a non-reentrant model
 16350 ;;
 16351                           
 16352                           
 16353                           ;psect for function _wr2RegCompleteHandler
 16354  0FCD                     _wr2RegCompleteHandler:	
 16355  0FCD                     i1l4135:	
 16356                           ;incstack = 0
 16357                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16358                           
 16359                           
 16360                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
 16361  0FCD  3002               	movlw	2
 16362  0FCE  00F0               	movwf	i2c_setBuffer@bufferSize
 16363  0FCF  3000               	movlw	0
 16364  0FD0  00F1               	movwf	i2c_setBuffer@bufferSize+1
 16365  0FD1  0879               	movf	wr2RegCompleteHandler@p,w
 16366  0FD2  318F  279C  318F   	fcall	_i2c_setBuffer
 16367  0FD5                     i1l4137:	
 16368                           
 16369                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 16370  0FD5  3000               	movlw	0
 16371  0FD6  00F5               	movwf	i2c_setDataCompleteCallback@cb
 16372  0FD7  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 16373  0FD8  01F7               	clrf	i2c_setDataCompleteCallback@p
 16374  0FD9  318F  2747  318F   	fcall	_i2c_setDataCompleteCallback
 16375  0FDC                     i1l4139:	
 16376                           
 16377                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
 16378  0FDC  3004               	movlw	4
 16379  0FDD                     i1l291:	
 16380  0FDD  0008               	return
 16381  0FDE                     __end_of_wr2RegCompleteHandler:	
 16382                           
 16383                           	psect	text74
 16384  0F47                     __ptext74:	
 16385 ;; *************** function _i2c_setDataCompleteCallback *****************
 16386 ;; Defined at:
 16387 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 16388 ;; Parameters:    Size  Location     Type
 16389 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 16390 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 16391 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 16392 ;;  p               1    7[COMMON] PTR void 
 16393 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16394 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16395 ;; Auto vars:     Size  Location     Type
 16396 ;;		None
 16397 ;; Return value:  Size  Location     Type
 16398 ;;                  1    wreg      void 
 16399 ;; Registers used:
 16400 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16401 ;; Tracked objects:
 16402 ;;		On entry : 0/0
 16403 ;;		On exit  : 0/0
 16404 ;;		Unchanged: 0/0
 16405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16406 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16408 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16409 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16410 ;;Total ram usage:        4 bytes
 16411 ;; Hardware stack levels used:    1
 16412 ;; Hardware stack levels required when called:    1
 16413 ;; This function calls:
 16414 ;;		_setCallBack
 16415 ;; This function is called by:
 16416 ;;		_wr1RegCompleteHandler
 16417 ;;		_rd1RegCompleteHandler
 16418 ;;		_rd2RegCompleteHandler
 16419 ;;		_wr2RegCompleteHandler
 16420 ;;		_rdBlkRegCompleteHandler
 16421 ;;		_i2c_write1ByteRegister
 16422 ;;		_i2c_read1ByteRegister
 16423 ;;		_i2c_read2ByteRegister
 16424 ;;		_i2c_write2ByteRegister
 16425 ;;		_i2c_readDataBlock
 16426 ;; This function uses a non-reentrant model
 16427 ;;
 16428                           
 16429                           
 16430                           ;psect for function _i2c_setDataCompleteCallback
 16431  0F47                     _i2c_setDataCompleteCallback:	
 16432  0F47                     i1l3945:	
 16433                           ;incstack = 0
 16434                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 16435                           
 16436                           
 16437                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
 16438  0F47  0876               	movf	i2c_setDataCompleteCallback@cb+1,w
 16439  0F48  00F1               	movwf	setCallBack@cb+1
 16440  0F49  0875               	movf	i2c_setDataCompleteCallback@cb,w
 16441  0F4A  00F0               	movwf	setCallBack@cb
 16442  0F4B  0877               	movf	i2c_setDataCompleteCallback@p,w
 16443  0F4C  00F8               	movwf	??_i2c_setDataCompleteCallback
 16444  0F4D  0878               	movf	??_i2c_setDataCompleteCallback,w
 16445  0F4E  00F2               	movwf	setCallBack@p
 16446  0F4F  3000               	movlw	0
 16447  0F50  3186  261A  318F   	fcall	_setCallBack
 16448  0F53                     i1l73:	
 16449  0F53  0008               	return
 16450  0F54                     __end_of_i2c_setDataCompleteCallback:	
 16451                           
 16452                           	psect	text75
 16453  061A                     __ptext75:	
 16454 ;; *************** function _setCallBack *****************
 16455 ;; Defined at:
 16456 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 16457 ;; Parameters:    Size  Location     Type
 16458 ;;  idx             1    wreg     enum E12740
 16459 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 16460 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 16461 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), i2c_restartWrite(1), 
 16462 ;;  p               1    2[COMMON] PTR void 
 16463 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16464 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16465 ;; Auto vars:     Size  Location     Type
 16466 ;;  idx             1    4[COMMON] enum E12740
 16467 ;; Return value:  Size  Location     Type
 16468 ;;                  1    wreg      void 
 16469 ;; Registers used:
 16470 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16471 ;; Tracked objects:
 16472 ;;		On entry : 0/0
 16473 ;;		On exit  : 0/0
 16474 ;;		Unchanged: 0/0
 16475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16476 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16477 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16478 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16479 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16480 ;;Total ram usage:        5 bytes
 16481 ;; Hardware stack levels used:    1
 16482 ;; This function calls:
 16483 ;;		Nothing
 16484 ;; This function is called by:
 16485 ;;		_i2c_setDataCompleteCallback
 16486 ;;		_i2c_setWriteCollisionCallback
 16487 ;;		_i2c_setAddressNACKCallback
 16488 ;;		_i2c_setDataNACKCallback
 16489 ;;		_i2c_setTimeOutCallback
 16490 ;; This function uses a non-reentrant model
 16491 ;;
 16492                           
 16493                           
 16494                           ;psect for function _setCallBack
 16495  061A                     _setCallBack:	
 16496                           
 16497                           ;incstack = 0
 16498                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 16499                           ;setCallBack@idx stored from wreg
 16500  061A  00F4               	movwf	setCallBack@idx
 16501  061B                     i1l3939:	
 16502                           
 16503                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
 16504  061B  0870               	movf	setCallBack@cb,w
 16505  061C  0471               	iorwf	setCallBack@cb+1,w
 16506  061D  1903               	btfsc	3,2
 16507  061E  2E20               	goto	u152_21
 16508  061F  2E21               	goto	u152_20
 16509  0620                     u152_21:	
 16510  0620  2E32               	goto	i1l3943
 16511  0621                     u152_20:	
 16512  0621                     i1l3941:	
 16513                           
 16514                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
 16515  0621  3574               	lslf	setCallBack@idx,w
 16516  0622  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 16517  0623  0086               	movwf	6
 16518  0624  0187               	clrf	7
 16519  0625  0870               	movf	setCallBack@cb,w
 16520  0626  3FC0               	movwi [0]fsr1
 16521  0627  0871               	movf	setCallBack@cb+1,w
 16522  0628  3FC1               	movwi [1]fsr1
 16523                           
 16524                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
 16525  0629  0872               	movf	setCallBack@p,w
 16526  062A  00F3               	movwf	??_setCallBack
 16527  062B  0874               	movf	setCallBack@idx,w
 16528  062C  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 16529  062D  0086               	movwf	6
 16530  062E  0187               	clrf	7
 16531  062F  0873               	movf	??_setCallBack,w
 16532  0630  0081               	movwf	1
 16533                           
 16534                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
 16535  0631  2E3F               	goto	i1l224
 16536  0632                     i1l3943:	
 16537                           
 16538                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
 16539  0632  3574               	lslf	setCallBack@idx,w
 16540  0633  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 16541  0634  0086               	movwf	6
 16542  0635  0187               	clrf	7
 16543  0636  3030               	movlw	low _returnStop
 16544  0637  3FC0               	movwi [0]fsr1
 16545  0638  300E               	movlw	high _returnStop
 16546  0639  3FC1               	movwi [1]fsr1
 16547                           
 16548                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
 16549  063A  0874               	movf	setCallBack@idx,w
 16550  063B  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 16551  063C  0086               	movwf	6
 16552  063D  0187               	clrf	7
 16553  063E  0181               	clrf	1
 16554  063F                     i1l224:	
 16555  063F  0008               	return
 16556  0640                     __end_of_setCallBack:	
 16557                           
 16558                           	psect	text76
 16559  0F9C                     __ptext76:	
 16560 ;; *************** function _i2c_setBuffer *****************
 16561 ;; Defined at:
 16562 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 16563 ;; Parameters:    Size  Location     Type
 16564 ;;  buffer          1    wreg     PTR void 
 16565 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 16566 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 16567 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 16568 ;;  bufferSize      2    0[COMMON] unsigned int 
 16569 ;; Auto vars:     Size  Location     Type
 16570 ;;  buffer          1    3[COMMON] PTR void 
 16571 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 16572 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 16573 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 16574 ;; Return value:  Size  Location     Type
 16575 ;;                  1    wreg      void 
 16576 ;; Registers used:
 16577 ;;		wreg
 16578 ;; Tracked objects:
 16579 ;;		On entry : 0/0
 16580 ;;		On exit  : 0/0
 16581 ;;		Unchanged: 0/0
 16582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16583 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16584 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16585 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16586 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16587 ;;Total ram usage:        4 bytes
 16588 ;; Hardware stack levels used:    1
 16589 ;; This function calls:
 16590 ;;		Nothing
 16591 ;; This function is called by:
 16592 ;;		_wr1RegCompleteHandler
 16593 ;;		_rd1RegCompleteHandler
 16594 ;;		_rd2RegCompleteHandler
 16595 ;;		_wr2RegCompleteHandler
 16596 ;;		_rdBlkRegCompleteHandler
 16597 ;;		_i2c_write1ByteRegister
 16598 ;;		_i2c_writeNBytes
 16599 ;;		_i2c_read1ByteRegister
 16600 ;;		_i2c_read2ByteRegister
 16601 ;;		_i2c_write2ByteRegister
 16602 ;;		_i2c_readDataBlock
 16603 ;;		_i2c_readNBytes
 16604 ;; This function uses a non-reentrant model
 16605 ;;
 16606                           
 16607                           
 16608                           ;psect for function _i2c_setBuffer
 16609  0F9C                     _i2c_setBuffer:	
 16610                           
 16611                           ;incstack = 0
 16612                           ; Regs used in _i2c_setBuffer: [wreg]
 16613                           ;i2c_setBuffer@buffer stored from wreg
 16614  0F9C  00F3               	movwf	i2c_setBuffer@buffer
 16615  0F9D                     i1l3947:	
 16616                           
 16617                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
 16618  0F9D  0021               	movlb	1	; select bank1
 16619  0F9E  1D20               	btfss	_i2c_status^(0+128),2
 16620  0F9F  2FA1               	goto	u153_21
 16621  0FA0  2FA2               	goto	u153_20
 16622  0FA1                     u153_21:	
 16623  0FA1  2FAB               	goto	i1l103
 16624  0FA2                     u153_20:	
 16625  0FA2                     i1l3949:	
 16626                           
 16627                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
 16628  0FA2  0873               	movf	i2c_setBuffer@buffer,w
 16629  0FA3  00F2               	movwf	??_i2c_setBuffer
 16630  0FA4  0872               	movf	??_i2c_setBuffer,w
 16631  0FA5  00A2               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 16632                           
 16633                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
 16634  0FA6  0871               	movf	i2c_setBuffer@bufferSize+1,w
 16635  0FA7  00A4               	movwf	((_i2c_status+1)^(0+128)+3)
 16636  0FA8  0870               	movf	i2c_setBuffer@bufferSize,w
 16637  0FA9  00A3               	movwf	(_i2c_status^(0+128)+3)
 16638  0FAA                     i1l3951:	
 16639                           
 16640                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
 16641  0FAA  1120               	bcf	_i2c_status^(0+128),2
 16642  0FAB                     i1l103:	
 16643  0FAB  0008               	return
 16644  0FAC                     __end_of_i2c_setBuffer:	
 16645                           
 16646                           	psect	text77
 16647  0E38                     __ptext77:	
 16648 ;; *************** function _i2c1_driver_stop *****************
 16649 ;; Defined at:
 16650 ;;		line 157 in file "mcc_generated_files/i2c1_driver.c"
 16651 ;; Parameters:    Size  Location     Type
 16652 ;;		None
 16653 ;; Auto vars:     Size  Location     Type
 16654 ;;		None
 16655 ;; Return value:  Size  Location     Type
 16656 ;;                  1    wreg      void 
 16657 ;; Registers used:
 16658 ;;		None
 16659 ;; Tracked objects:
 16660 ;;		On entry : 0/0
 16661 ;;		On exit  : 0/0
 16662 ;;		Unchanged: 0/0
 16663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16668 ;;Total ram usage:        0 bytes
 16669 ;; Hardware stack levels used:    1
 16670 ;; This function calls:
 16671 ;;		Nothing
 16672 ;; This function is called by:
 16673 ;;		_do_I2C_SEND_STOP
 16674 ;; This function uses a non-reentrant model
 16675 ;;
 16676                           
 16677                           
 16678                           ;psect for function _i2c1_driver_stop
 16679  0E38                     _i2c1_driver_stop:	
 16680  0E38                     i1l3955:	
 16681                           ;incstack = 0
 16682                           ; Regs used in _i2c1_driver_stop: []
 16683                           
 16684                           
 16685                           ;mcc_generated_files/i2c1_driver.c: 159:     SSP1CON2bits.PEN = 1;
 16686  0E38  0023               	movlb	3	; select bank3
 16687  0E39  1511               	bsf	17,2	;volatile
 16688  0E3A                     i1l611:	
 16689  0E3A  0008               	return
 16690  0E3B                     __end_of_i2c1_driver_stop:	
 16691                           
 16692                           	psect	text78
 16693  0E35                     __ptext78:	
 16694 ;; *************** function _i2c1_driver_restart *****************
 16695 ;; Defined at:
 16696 ;;		line 152 in file "mcc_generated_files/i2c1_driver.c"
 16697 ;; Parameters:    Size  Location     Type
 16698 ;;		None
 16699 ;; Auto vars:     Size  Location     Type
 16700 ;;		None
 16701 ;; Return value:  Size  Location     Type
 16702 ;;                  1    wreg      void 
 16703 ;; Registers used:
 16704 ;;		None
 16705 ;; Tracked objects:
 16706 ;;		On entry : 0/0
 16707 ;;		On exit  : 0/0
 16708 ;;		Unchanged: 0/0
 16709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16714 ;;Total ram usage:        0 bytes
 16715 ;; Hardware stack levels used:    1
 16716 ;; This function calls:
 16717 ;;		Nothing
 16718 ;; This function is called by:
 16719 ;;		_do_I2C_SEND_RESTART_READ
 16720 ;;		_do_I2C_SEND_RESTART_WRITE
 16721 ;;		_do_I2C_SEND_RESTART
 16722 ;; This function uses a non-reentrant model
 16723 ;;
 16724                           
 16725                           
 16726                           ;psect for function _i2c1_driver_restart
 16727  0E35                     _i2c1_driver_restart:	
 16728  0E35                     i1l3953:	
 16729                           ;incstack = 0
 16730                           ; Regs used in _i2c1_driver_restart: []
 16731                           
 16732                           
 16733                           ;mcc_generated_files/i2c1_driver.c: 154:     SSP1CON2bits.RSEN = 1;
 16734  0E35  0023               	movlb	3	; select bank3
 16735  0E36  1491               	bsf	17,1	;volatile
 16736  0E37                     i1l608:	
 16737  0E37  0008               	return
 16738  0E38                     __end_of_i2c1_driver_restart:	
 16739                           
 16740                           	psect	text79
 16741  0E4D                     __ptext79:	
 16742 ;; *************** function _i2c1_driver_sendACK *****************
 16743 ;; Defined at:
 16744 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
 16745 ;; Parameters:    Size  Location     Type
 16746 ;;		None
 16747 ;; Auto vars:     Size  Location     Type
 16748 ;;		None
 16749 ;; Return value:  Size  Location     Type
 16750 ;;                  1    wreg      void 
 16751 ;; Registers used:
 16752 ;;		None
 16753 ;; Tracked objects:
 16754 ;;		On entry : 0/0
 16755 ;;		On exit  : 0/0
 16756 ;;		Unchanged: 0/0
 16757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16762 ;;Total ram usage:        0 bytes
 16763 ;; Hardware stack levels used:    1
 16764 ;; This function calls:
 16765 ;;		Nothing
 16766 ;; This function is called by:
 16767 ;;		_do_I2C_DO_ACK
 16768 ;;		_do_I2C_RX
 16769 ;; This function uses a non-reentrant model
 16770 ;;
 16771                           
 16772                           
 16773                           ;psect for function _i2c1_driver_sendACK
 16774  0E4D                     _i2c1_driver_sendACK:	
 16775  0E4D                     i1l4079:	
 16776                           ;incstack = 0
 16777                           ; Regs used in _i2c1_driver_sendACK: []
 16778                           
 16779                           
 16780                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKDT = 0;
 16781  0E4D  0023               	movlb	3	; select bank3
 16782  0E4E  1291               	bcf	17,5	;volatile
 16783                           
 16784                           ;mcc_generated_files/i2c1_driver.c: 200:     SSP1CON2bits.ACKEN = 1;
 16785  0E4F  1611               	bsf	17,4	;volatile
 16786  0E50                     i1l635:	
 16787  0E50  0008               	return
 16788  0E51                     __end_of_i2c1_driver_sendACK:	
 16789                           
 16790                           	psect	text80
 16791  0F7E                     __ptext80:	
 16792 ;; *************** function _TMR2_ISR *****************
 16793 ;; Defined at:
 16794 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 16795 ;; Parameters:    Size  Location     Type
 16796 ;;		None
 16797 ;; Auto vars:     Size  Location     Type
 16798 ;;		None
 16799 ;; Return value:  Size  Location     Type
 16800 ;;                  1    wreg      void 
 16801 ;; Registers used:
 16802 ;;		wreg, status,2, status,0, pclath, cstack
 16803 ;; Tracked objects:
 16804 ;;		On entry : 0/0
 16805 ;;		On exit  : 0/0
 16806 ;;		Unchanged: 0/0
 16807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16812 ;;Total ram usage:        0 bytes
 16813 ;; Hardware stack levels used:    1
 16814 ;; Hardware stack levels required when called:    1
 16815 ;; This function calls:
 16816 ;;		Absolute function
 16817 ;;		_TMR2_DefaultInterruptHandler
 16818 ;;		_handler_clock_ms
 16819 ;; This function is called by:
 16820 ;;		_INTERRUPT_InterruptManager
 16821 ;; This function uses a non-reentrant model
 16822 ;;
 16823                           
 16824                           
 16825                           ;psect for function _TMR2_ISR
 16826  0F7E                     _TMR2_ISR:	
 16827  0F7E                     i1l4799:	
 16828                           ;incstack = 0
 16829                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 16830                           
 16831                           
 16832                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
 16833  0F7E  002E               	movlb	14	; select bank14
 16834  0F7F  1090               	bcf	16,1	;volatile
 16835  0F80                     i1l4801:	
 16836                           
 16837                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
 16838  0F80  0020               	movlb	0	; select bank0
 16839  0F81  084F               	movf	_TMR2_InterruptHandler,w
 16840  0F82  0450               	iorwf	_TMR2_InterruptHandler+1,w
 16841  0F83  1903               	btfsc	3,2
 16842  0F84  2F86               	goto	u205_21
 16843  0F85  2F87               	goto	u205_20
 16844  0F86                     u205_21:	
 16845  0F86  2F8C               	goto	i1l1038
 16846  0F87                     u205_20:	
 16847  0F87                     i1l4803:	
 16848                           
 16849                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
 16850  0F87  0850               	movf	_TMR2_InterruptHandler+1,w
 16851  0F88  008A               	movwf	10
 16852  0F89  084F               	movf	_TMR2_InterruptHandler,w
 16853  0F8A  000A               	callw
 16854  0F8B  318F               	pagesel	$
 16855  0F8C                     i1l1038:	
 16856  0F8C  0008               	return
 16857  0F8D                     __end_of_TMR2_ISR:	
 16858                           
 16859                           	psect	text81
 16860  0E2C                     __ptext81:	
 16861 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 16862 ;; Defined at:
 16863 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 16864 ;; Parameters:    Size  Location     Type
 16865 ;;		None
 16866 ;; Auto vars:     Size  Location     Type
 16867 ;;		None
 16868 ;; Return value:  Size  Location     Type
 16869 ;;                  1    wreg      void 
 16870 ;; Registers used:
 16871 ;;		None
 16872 ;; Tracked objects:
 16873 ;;		On entry : 0/0
 16874 ;;		On exit  : 0/0
 16875 ;;		Unchanged: 0/0
 16876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16881 ;;Total ram usage:        0 bytes
 16882 ;; Hardware stack levels used:    1
 16883 ;; This function calls:
 16884 ;;		Nothing
 16885 ;; This function is called by:
 16886 ;;		_TMR2_Initialize
 16887 ;;		_TMR2_ISR
 16888 ;; This function uses a non-reentrant model
 16889 ;;
 16890                           
 16891                           
 16892                           ;psect for function _TMR2_DefaultInterruptHandler
 16893  0E2C                     _TMR2_DefaultInterruptHandler:	
 16894  0E2C                     i1l1044:	
 16895                           ;incstack = 0
 16896                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 16897                           
 16898  0E2C  0008               	return
 16899  0E2D                     __end_of_TMR2_DefaultInterruptHandler:	
 16900                           
 16901                           	psect	text82
 16902  0F3A                     __ptext82:	
 16903 ;; *************** function _handler_clock_ms *****************
 16904 ;; Defined at:
 16905 ;;		line 417 in file "main.c"
 16906 ;; Parameters:    Size  Location     Type
 16907 ;;		None
 16908 ;; Auto vars:     Size  Location     Type
 16909 ;;		None
 16910 ;; Return value:  Size  Location     Type
 16911 ;;                  1    wreg      void 
 16912 ;; Registers used:
 16913 ;;		wreg, status,2, status,0
 16914 ;; Tracked objects:
 16915 ;;		On entry : 0/0
 16916 ;;		On exit  : 0/0
 16917 ;;		Unchanged: 0/0
 16918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16921 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16922 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16923 ;;Total ram usage:        1 bytes
 16924 ;; Hardware stack levels used:    1
 16925 ;; This function calls:
 16926 ;;		Nothing
 16927 ;; This function is called by:
 16928 ;;		_main
 16929 ;;		_TMR2_ISR
 16930 ;; This function uses a non-reentrant model
 16931 ;;
 16932                           
 16933                           
 16934                           ;psect for function _handler_clock_ms
 16935  0F3A                     _handler_clock_ms:	
 16936  0F3A                     i1l4681:	
 16937                           ;incstack = 0
 16938                           ; Regs used in _handler_clock_ms: [wreg+status,2+status,0]
 16939                           
 16940                           
 16941                           ;main.c: 418:     clkms++;
 16942  0F3A  3001               	movlw	1
 16943  0F3B  00F0               	movwf	??_handler_clock_ms
 16944  0F3C  0870               	movf	??_handler_clock_ms,w
 16945  0F3D  0020               	movlb	0	; select bank0
 16946  0F3E  07B3               	addwf	_clkms,f	;volatile
 16947  0F3F                     i1l4683:	
 16948                           
 16949                           ;main.c: 420:     if(clkms > 200){
 16950  0F3F  30C9               	movlw	201
 16951  0F40  0233               	subwf	_clkms,w	;volatile
 16952  0F41  1C03               	skipc
 16953  0F42  2F44               	goto	u196_21
 16954  0F43  2F45               	goto	u196_20
 16955  0F44                     u196_21:	
 16956  0F44  2F46               	goto	i1l1275
 16957  0F45                     u196_20:	
 16958  0F45                     i1l4685:	
 16959                           
 16960                           ;main.c: 421:         clkms = 0;
 16961  0F45  01B3               	clrf	_clkms	;volatile
 16962  0F46                     i1l1275:	
 16963  0F46  0008               	return
 16964  0F47                     __end_of_handler_clock_ms:	
 16965                           
 16966                           	psect	text83
 16967  0791                     __ptext83:	
 16968 ;; *************** function _TMR1_ISR *****************
 16969 ;; Defined at:
 16970 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 16971 ;; Parameters:    Size  Location     Type
 16972 ;;		None
 16973 ;; Auto vars:     Size  Location     Type
 16974 ;;		None
 16975 ;; Return value:  Size  Location     Type
 16976 ;;                  1    wreg      void 
 16977 ;; Registers used:
 16978 ;;		wreg, status,2, status,0, pclath, cstack
 16979 ;; Tracked objects:
 16980 ;;		On entry : 0/0
 16981 ;;		On exit  : 0/0
 16982 ;;		Unchanged: 0/0
 16983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16988 ;;Total ram usage:        0 bytes
 16989 ;; Hardware stack levels used:    1
 16990 ;; Hardware stack levels required when called:    1
 16991 ;; This function calls:
 16992 ;;		Absolute function
 16993 ;;		_TMR1_DefaultInterruptHandler
 16994 ;;		_TMR1_WriteTimer
 16995 ;;		_handler_clock_hms
 16996 ;; This function is called by:
 16997 ;;		_INTERRUPT_InterruptManager
 16998 ;; This function uses a non-reentrant model
 16999 ;;
 17000                           
 17001                           
 17002                           ;psect for function _TMR1_ISR
 17003  0791                     _TMR1_ISR:	
 17004  0791                     i1l4791:	
 17005                           ;incstack = 0
 17006                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 17007                           
 17008                           
 17009                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 17010  0791  002E               	movlb	14	; select bank14
 17011  0792  1010               	bcf	16,0	;volatile
 17012  0793                     i1l4793:	
 17013                           
 17014                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 17015  0793  0020               	movlb	0	; select bank0
 17016  0794  0854               	movf	_timer1ReloadVal+1,w	;volatile
 17017  0795  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 17018  0796  0853               	movf	_timer1ReloadVal,w	;volatile
 17019  0797  00F0               	movwf	TMR1_WriteTimer@timerVal
 17020  0798  318F  27BC  3187   	fcall	_TMR1_WriteTimer
 17021  079B                     i1l4795:	
 17022                           
 17023                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 17024  079B  0020               	movlb	0	; select bank0
 17025  079C  0851               	movf	_TMR1_InterruptHandler,w
 17026  079D  0452               	iorwf	_TMR1_InterruptHandler+1,w
 17027  079E  1903               	btfsc	3,2
 17028  079F  2FA1               	goto	u204_21
 17029  07A0  2FA2               	goto	u204_20
 17030  07A1                     u204_21:	
 17031  07A1  2FA7               	goto	i1l896
 17032  07A2                     u204_20:	
 17033  07A2                     i1l4797:	
 17034                           
 17035                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 17036  07A2  0852               	movf	_TMR1_InterruptHandler+1,w
 17037  07A3  008A               	movwf	10
 17038  07A4  0851               	movf	_TMR1_InterruptHandler,w
 17039  07A5  000A               	callw
 17040  07A6  3187               	pagesel	$
 17041  07A7                     i1l896:	
 17042  07A7  0008               	return
 17043  07A8                     __end_of_TMR1_ISR:	
 17044                           
 17045                           	psect	text84
 17046  0E2B                     __ptext84:	
 17047 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 17048 ;; Defined at:
 17049 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 17050 ;; Parameters:    Size  Location     Type
 17051 ;;		None
 17052 ;; Auto vars:     Size  Location     Type
 17053 ;;		None
 17054 ;; Return value:  Size  Location     Type
 17055 ;;                  1    wreg      void 
 17056 ;; Registers used:
 17057 ;;		None
 17058 ;; Tracked objects:
 17059 ;;		On entry : 0/0
 17060 ;;		On exit  : 0/0
 17061 ;;		Unchanged: 0/0
 17062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17067 ;;Total ram usage:        0 bytes
 17068 ;; Hardware stack levels used:    1
 17069 ;; This function calls:
 17070 ;;		Nothing
 17071 ;; This function is called by:
 17072 ;;		_TMR1_Initialize
 17073 ;;		_TMR1_ISR
 17074 ;; This function uses a non-reentrant model
 17075 ;;
 17076                           
 17077                           
 17078                           ;psect for function _TMR1_DefaultInterruptHandler
 17079  0E2B                     _TMR1_DefaultInterruptHandler:	
 17080  0E2B                     i1l902:	
 17081                           ;incstack = 0
 17082                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 17083                           
 17084  0E2B  0008               	return
 17085  0E2C                     __end_of_TMR1_DefaultInterruptHandler:	
 17086                           
 17087                           	psect	text85
 17088  0599                     __ptext85:	
 17089 ;; *************** function _handler_clock_hms *****************
 17090 ;; Defined at:
 17091 ;;		line 400 in file "main.c"
 17092 ;; Parameters:    Size  Location     Type
 17093 ;;		None
 17094 ;; Auto vars:     Size  Location     Type
 17095 ;;		None
 17096 ;; Return value:  Size  Location     Type
 17097 ;;                  1    wreg      void 
 17098 ;; Registers used:
 17099 ;;		wreg, status,2, status,0
 17100 ;; Tracked objects:
 17101 ;;		On entry : 0/0
 17102 ;;		On exit  : 0/0
 17103 ;;		Unchanged: 0/0
 17104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17107 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17108 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17109 ;;Total ram usage:        1 bytes
 17110 ;; Hardware stack levels used:    1
 17111 ;; This function calls:
 17112 ;;		Nothing
 17113 ;; This function is called by:
 17114 ;;		_main
 17115 ;;		_TMR1_ISR
 17116 ;; This function uses a non-reentrant model
 17117 ;;
 17118                           
 17119                           
 17120                           ;psect for function _handler_clock_hms
 17121  0599                     _handler_clock_hms:	
 17122  0599                     i1l4663:	
 17123                           ;incstack = 0
 17124                           ; Regs used in _handler_clock_hms: [wreg+status,2+status,0]
 17125                           
 17126                           
 17127                           ;main.c: 402:     if(!config_mode){
 17128  0599  087D               	movf	_config_mode,w	;volatile
 17129  059A  1D03               	btfss	3,2
 17130  059B  2D9D               	goto	u191_21
 17131  059C  2D9E               	goto	u191_20
 17132  059D                     u191_21:	
 17133  059D  2DAA               	goto	i1l4667
 17134  059E                     u191_20:	
 17135  059E                     i1l4665:	
 17136  059E  1003               	clrc
 17137  059F  0020               	movlb	0	; select bank0
 17138  05A0  1F96               	btfss	22,7	;volatile
 17139  05A1  1403               	setc
 17140  05A2  1803               	btfsc	3,0
 17141  05A3  2DA5               	goto	u192_21
 17142  05A4  2DA8               	goto	u192_20
 17143  05A5                     u192_21:	
 17144  05A5  0020               	movlb	0	; select bank0
 17145  05A6  1796               	bsf	22,7	;volatile
 17146  05A7  2DAA               	goto	u193_24
 17147  05A8                     u192_20:	
 17148  05A8  0020               	movlb	0	; select bank0
 17149  05A9  1396               	bcf	22,7	;volatile
 17150  05AA                     u193_24:	
 17151  05AA                     i1l4667:	
 17152                           
 17153                           ;main.c: 406:     seg++;
 17154  05AA  3001               	movlw	1
 17155  05AB  00F0               	movwf	??_handler_clock_hms
 17156  05AC  0870               	movf	??_handler_clock_hms,w
 17157  05AD  0020               	movlb	0	; select bank0
 17158  05AE  07B4               	addwf	_seg,f	;volatile
 17159  05AF                     i1l4669:	
 17160                           
 17161                           ;main.c: 407:     if(seg >= 60) {
 17162  05AF  303C               	movlw	60
 17163  05B0  0234               	subwf	_seg,w	;volatile
 17164  05B1  1C03               	skipc
 17165  05B2  2DB4               	goto	u194_21
 17166  05B3  2DB5               	goto	u194_20
 17167  05B4                     u194_21:	
 17168  05B4  2DC5               	goto	i1l1271
 17169  05B5                     u194_20:	
 17170  05B5                     i1l4671:	
 17171                           
 17172                           ;main.c: 408:         clkm++;
 17173  05B5  3001               	movlw	1
 17174  05B6  00F0               	movwf	??_handler_clock_hms
 17175  05B7  0870               	movf	??_handler_clock_hms,w
 17176  05B8  07B5               	addwf	_clkm,f	;volatile
 17177  05B9                     i1l4673:	
 17178                           
 17179                           ;main.c: 409:         seg = 0;
 17180  05B9  01B4               	clrf	_seg	;volatile
 17181  05BA                     i1l4675:	
 17182                           
 17183                           ;main.c: 410:         if(clkm >= 60) {
 17184  05BA  303C               	movlw	60
 17185  05BB  0235               	subwf	_clkm,w	;volatile
 17186  05BC  1C03               	skipc
 17187  05BD  2DBF               	goto	u195_21
 17188  05BE  2DC0               	goto	u195_20
 17189  05BF                     u195_21:	
 17190  05BF  2DC5               	goto	i1l1271
 17191  05C0                     u195_20:	
 17192  05C0                     i1l4677:	
 17193                           
 17194                           ;main.c: 411:             clkh++;
 17195  05C0  3001               	movlw	1
 17196  05C1  00F0               	movwf	??_handler_clock_hms
 17197  05C2  0870               	movf	??_handler_clock_hms,w
 17198  05C3  07B6               	addwf	_clkh,f	;volatile
 17199  05C4                     i1l4679:	
 17200                           
 17201                           ;main.c: 412:             clkm = 0;
 17202  05C4  01B5               	clrf	_clkm	;volatile
 17203  05C5                     i1l1271:	
 17204  05C5  0008               	return
 17205  05C6                     __end_of_handler_clock_hms:	
 17206                           
 17207                           	psect	text86
 17208  0FBC                     __ptext86:	
 17209 ;; *************** function _TMR1_WriteTimer *****************
 17210 ;; Defined at:
 17211 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 17212 ;; Parameters:    Size  Location     Type
 17213 ;;  timerVal        2    0[COMMON] unsigned short 
 17214 ;; Auto vars:     Size  Location     Type
 17215 ;;		None
 17216 ;; Return value:  Size  Location     Type
 17217 ;;                  1    wreg      void 
 17218 ;; Registers used:
 17219 ;;		wreg, status,2
 17220 ;; Tracked objects:
 17221 ;;		On entry : 0/0
 17222 ;;		On exit  : 0/0
 17223 ;;		Unchanged: 0/0
 17224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17225 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17228 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17229 ;;Total ram usage:        2 bytes
 17230 ;; Hardware stack levels used:    1
 17231 ;; This function calls:
 17232 ;;		Nothing
 17233 ;; This function is called by:
 17234 ;;		_TMR1_ISR
 17235 ;;		_TMR1_Reload
 17236 ;; This function uses a non-reentrant model
 17237 ;;
 17238                           
 17239                           
 17240                           ;psect for function _TMR1_WriteTimer
 17241  0FBC                     _TMR1_WriteTimer:	
 17242  0FBC                     i1l4583:	
 17243                           ;incstack = 0
 17244                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 17245                           
 17246                           
 17247                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 17248  0FBC  0024               	movlb	4	; select bank4
 17249  0FBD  1D0E               	btfss	14,2	;volatile
 17250  0FBE  2FC0               	goto	u184_21
 17251  0FBF  2FC1               	goto	u184_20
 17252  0FC0                     u184_21:	
 17253  0FC0  2FC8               	goto	i1l4593
 17254  0FC1                     u184_20:	
 17255  0FC1                     i1l4585:	
 17256                           
 17257                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 17258  0FC1  100E               	bcf	14,0	;volatile
 17259  0FC2                     i1l4587:	
 17260                           
 17261                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 17262  0FC2  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 17263  0FC3  008D               	movwf	13	;volatile
 17264  0FC4                     i1l4589:	
 17265                           
 17266                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 17267  0FC4  0870               	movf	TMR1_WriteTimer@timerVal,w
 17268  0FC5  008C               	movwf	12	;volatile
 17269  0FC6                     i1l4591:	
 17270                           
 17271                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 17272  0FC6  140E               	bsf	14,0	;volatile
 17273                           
 17274                           ;mcc_generated_files/tmr1.c: 140:     }
 17275  0FC7  2FCC               	goto	i1l883
 17276  0FC8                     i1l4593:	
 17277                           
 17278                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 17279  0FC8  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 17280  0FC9  008D               	movwf	13	;volatile
 17281  0FCA                     i1l4595:	
 17282                           
 17283                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 17284  0FCA  0870               	movf	TMR1_WriteTimer@timerVal,w
 17285  0FCB  008C               	movwf	12	;volatile
 17286  0FCC                     i1l883:	
 17287  0FCC  0008               	return
 17288  0FCD                     __end_of_TMR1_WriteTimer:	
 17289                           
 17290                           	psect	text87
 17291  0F6F                     __ptext87:	
 17292 ;; *************** function _TMR0_ISR *****************
 17293 ;; Defined at:
 17294 ;;		line 123 in file "mcc_generated_files/tmr0.c"
 17295 ;; Parameters:    Size  Location     Type
 17296 ;;		None
 17297 ;; Auto vars:     Size  Location     Type
 17298 ;;		None
 17299 ;; Return value:  Size  Location     Type
 17300 ;;                  1    wreg      void 
 17301 ;; Registers used:
 17302 ;;		wreg, status,2, status,0, pclath, cstack
 17303 ;; Tracked objects:
 17304 ;;		On entry : 0/0
 17305 ;;		On exit  : 0/0
 17306 ;;		Unchanged: 0/0
 17307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17312 ;;Total ram usage:        0 bytes
 17313 ;; Hardware stack levels used:    1
 17314 ;; Hardware stack levels required when called:    2
 17315 ;; This function calls:
 17316 ;;		Absolute function
 17317 ;;		_ISR_3s
 17318 ;;		_TMR0_DefaultInterruptHandler
 17319 ;; This function is called by:
 17320 ;;		_INTERRUPT_InterruptManager
 17321 ;; This function uses a non-reentrant model
 17322 ;;
 17323                           
 17324                           
 17325                           ;psect for function _TMR0_ISR
 17326  0F6F                     _TMR0_ISR:	
 17327  0F6F                     i1l4785:	
 17328                           ;incstack = 0
 17329                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 17330                           
 17331                           
 17332                           ;mcc_generated_files/tmr0.c: 126:     PIR0bits.TMR0IF = 0;
 17333  0F6F  002E               	movlb	14	; select bank14
 17334  0F70  128C               	bcf	12,5	;volatile
 17335  0F71                     i1l4787:	
 17336                           
 17337                           ;mcc_generated_files/tmr0.c: 127:     if(TMR0_InterruptHandler)
 17338  0F71  0020               	movlb	0	; select bank0
 17339  0F72  084D               	movf	_TMR0_InterruptHandler,w
 17340  0F73  044E               	iorwf	_TMR0_InterruptHandler+1,w
 17341  0F74  1903               	btfsc	3,2
 17342  0F75  2F77               	goto	u203_21
 17343  0F76  2F78               	goto	u203_20
 17344  0F77                     u203_21:	
 17345  0F77  2F7D               	goto	i1l1555
 17346  0F78                     u203_20:	
 17347  0F78                     i1l4789:	
 17348                           
 17349                           ;mcc_generated_files/tmr0.c: 128:     {;mcc_generated_files/tmr0.c: 129:         TMR0_In
      +                          terruptHandler();
 17350  0F78  084E               	movf	_TMR0_InterruptHandler+1,w
 17351  0F79  008A               	movwf	10
 17352  0F7A  084D               	movf	_TMR0_InterruptHandler,w
 17353  0F7B  000A               	callw
 17354  0F7C  318F               	pagesel	$
 17355  0F7D                     i1l1555:	
 17356  0F7D  0008               	return
 17357  0F7E                     __end_of_TMR0_ISR:	
 17358                           
 17359                           	psect	text88
 17360  0748                     __ptext88:	
 17361 ;; *************** function _ISR_3s *****************
 17362 ;; Defined at:
 17363 ;;		line 112 in file "main.c"
 17364 ;; Parameters:    Size  Location     Type
 17365 ;;		None
 17366 ;; Auto vars:     Size  Location     Type
 17367 ;;		None
 17368 ;; Return value:  Size  Location     Type
 17369 ;;                  1    wreg      void 
 17370 ;; Registers used:
 17371 ;;		wreg, status,2, status,0, pclath, cstack
 17372 ;; Tracked objects:
 17373 ;;		On entry : 0/0
 17374 ;;		On exit  : 0/0
 17375 ;;		Unchanged: 0/0
 17376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17379 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17380 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17381 ;;Total ram usage:        1 bytes
 17382 ;; Hardware stack levels used:    1
 17383 ;; Hardware stack levels required when called:    1
 17384 ;; This function calls:
 17385 ;;		_TMR0_StopTimer
 17386 ;;		i1_PWM6_LoadDutyValue
 17387 ;; This function is called by:
 17388 ;;		_main
 17389 ;;		_TMR0_ISR
 17390 ;; This function uses a non-reentrant model
 17391 ;;
 17392                           
 17393                           
 17394                           ;psect for function _ISR_3s
 17395  0748                     _ISR_3s:	
 17396  0748                     i1l4597:	
 17397                           ;incstack = 0
 17398                           ; Regs used in _ISR_3s: [wreg+status,2+status,0+pclath+cstack]
 17399                           
 17400                           
 17401                           ;main.c: 114:     if (lum_threshold){
 17402  0748  0020               	movlb	0	; select bank0
 17403  0749  0820               	movf	_lum_threshold,w
 17404  074A  0421               	iorwf	_lum_threshold+1,w
 17405  074B  1903               	btfsc	3,2
 17406  074C  2F4E               	goto	u185_21
 17407  074D  2F4F               	goto	u185_20
 17408  074E                     u185_21:	
 17409  074E  2F5B               	goto	i1l1165
 17410  074F                     u185_20:	
 17411  074F                     i1l4599:	
 17412                           
 17413                           ;main.c: 115:         PWM6_LoadDutyValue(1023);
 17414  074F  30FF               	movlw	255
 17415  0750  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 17416  0751  3003               	movlw	3
 17417  0752  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 17418  0753  3187  27BE  3187   	fcall	i1_PWM6_LoadDutyValue
 17419  0756                     i1l4601:	
 17420                           
 17421                           ;main.c: 116:         alarm = 1;
 17422  0756  3001               	movlw	1
 17423  0757  00F4               	movwf	??_ISR_3s
 17424  0758  0874               	movf	??_ISR_3s,w
 17425  0759  0020               	movlb	0	; select bank0
 17426  075A  00AF               	movwf	_alarm	;volatile
 17427  075B                     i1l1165:	
 17428                           ;main.c: 118:     }
 17429                           
 17430                           
 17431                           ;main.c: 120:     TMR0_StopTimer();
 17432  075B  318E  2632  3187   	fcall	_TMR0_StopTimer
 17433  075E                     i1l4603:	
 17434                           
 17435                           ;main.c: 121:     PIE0bits.TMR0IE = 0;
 17436  075E  002E               	movlb	14	; select bank14
 17437  075F  1296               	bcf	22,5	;volatile
 17438  0760                     i1l1166:	
 17439  0760  0008               	return
 17440  0761                     __end_of_ISR_3s:	
 17441                           
 17442                           	psect	text89
 17443  0E2A                     __ptext89:	
 17444 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 17445 ;; Defined at:
 17446 ;;		line 140 in file "mcc_generated_files/tmr0.c"
 17447 ;; Parameters:    Size  Location     Type
 17448 ;;		None
 17449 ;; Auto vars:     Size  Location     Type
 17450 ;;		None
 17451 ;; Return value:  Size  Location     Type
 17452 ;;                  1    wreg      void 
 17453 ;; Registers used:
 17454 ;;		None
 17455 ;; Tracked objects:
 17456 ;;		On entry : 0/0
 17457 ;;		On exit  : 0/0
 17458 ;;		Unchanged: 0/0
 17459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17464 ;;Total ram usage:        0 bytes
 17465 ;; Hardware stack levels used:    1
 17466 ;; This function calls:
 17467 ;;		Nothing
 17468 ;; This function is called by:
 17469 ;;		_TMR0_Initialize
 17470 ;;		_TMR0_ISR
 17471 ;; This function uses a non-reentrant model
 17472 ;;
 17473                           
 17474                           
 17475                           ;psect for function _TMR0_DefaultInterruptHandler
 17476  0E2A                     _TMR0_DefaultInterruptHandler:	
 17477  0E2A                     i1l1561:	
 17478                           ;incstack = 0
 17479                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 17480                           
 17481  0E2A  0008               	return
 17482  0E2B                     __end_of_TMR0_DefaultInterruptHandler:	
 17483                           
 17484                           	psect	text90
 17485  0E32                     __ptext90:	
 17486 ;; *************** function _TMR0_StopTimer *****************
 17487 ;; Defined at:
 17488 ;;		line 95 in file "mcc_generated_files/tmr0.c"
 17489 ;; Parameters:    Size  Location     Type
 17490 ;;		None
 17491 ;; Auto vars:     Size  Location     Type
 17492 ;;		None
 17493 ;; Return value:  Size  Location     Type
 17494 ;;                  1    wreg      void 
 17495 ;; Registers used:
 17496 ;;		None
 17497 ;; Tracked objects:
 17498 ;;		On entry : 0/0
 17499 ;;		On exit  : 0/0
 17500 ;;		Unchanged: 0/0
 17501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17506 ;;Total ram usage:        0 bytes
 17507 ;; Hardware stack levels used:    1
 17508 ;; This function calls:
 17509 ;;		Nothing
 17510 ;; This function is called by:
 17511 ;;		_ISR_3s
 17512 ;; This function uses a non-reentrant model
 17513 ;;
 17514                           
 17515                           
 17516                           ;psect for function _TMR0_StopTimer
 17517  0E32                     _TMR0_StopTimer:	
 17518  0E32                     i1l4191:	
 17519                           ;incstack = 0
 17520                           ; Regs used in _TMR0_StopTimer: []
 17521                           
 17522                           
 17523                           ;mcc_generated_files/tmr0.c: 98:     T0CON0bits.T0EN = 0;
 17524  0E32  0020               	movlb	0	; select bank0
 17525  0E33  139E               	bcf	30,7	;volatile
 17526  0E34                     i1l1542:	
 17527  0E34  0008               	return
 17528  0E35                     __end_of_TMR0_StopTimer:	
 17529                           
 17530                           	psect	text91
 17531  0E86                     __ptext91:	
 17532 ;; *************** function _INT_ISR *****************
 17533 ;; Defined at:
 17534 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 17535 ;; Parameters:    Size  Location     Type
 17536 ;;		None
 17537 ;; Auto vars:     Size  Location     Type
 17538 ;;		None
 17539 ;; Return value:  Size  Location     Type
 17540 ;;                  1    wreg      void 
 17541 ;; Registers used:
 17542 ;;		wreg, status,2, status,0, pclath, cstack
 17543 ;; Tracked objects:
 17544 ;;		On entry : 0/0
 17545 ;;		On exit  : 0/0
 17546 ;;		Unchanged: 0/0
 17547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17552 ;;Total ram usage:        0 bytes
 17553 ;; Hardware stack levels used:    1
 17554 ;; Hardware stack levels required when called:    3
 17555 ;; This function calls:
 17556 ;;		_INT_CallBack
 17557 ;; This function is called by:
 17558 ;;		_INTERRUPT_InterruptManager
 17559 ;; This function uses a non-reentrant model
 17560 ;;
 17561                           
 17562                           
 17563                           ;psect for function _INT_ISR
 17564  0E86                     _INT_ISR:	
 17565  0E86                     i1l4781:	
 17566                           ;incstack = 0
 17567                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 17568                           
 17569                           
 17570                           ;mcc_generated_files/ext_int.c: 34:     (PIR0bits.INTF = 0);
 17571  0E86  002E               	movlb	14	; select bank14
 17572  0E87  100C               	bcf	12,0	;volatile
 17573  0E88                     i1l4783:	
 17574                           
 17575                           ;mcc_generated_files/ext_int.c: 37:     INT_CallBack();
 17576  0E88  318F  272D  318E   	fcall	_INT_CallBack
 17577  0E8B                     i1l334:	
 17578  0E8B  0008               	return
 17579  0E8C                     __end_of_INT_ISR:	
 17580                           
 17581                           	psect	text92
 17582  0F2D                     __ptext92:	
 17583 ;; *************** function _INT_CallBack *****************
 17584 ;; Defined at:
 17585 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 17586 ;; Parameters:    Size  Location     Type
 17587 ;;		None
 17588 ;; Auto vars:     Size  Location     Type
 17589 ;;		None
 17590 ;; Return value:  Size  Location     Type
 17591 ;;                  1    wreg      void 
 17592 ;; Registers used:
 17593 ;;		wreg, status,2, status,0, pclath, cstack
 17594 ;; Tracked objects:
 17595 ;;		On entry : 0/0
 17596 ;;		On exit  : 0/0
 17597 ;;		Unchanged: 0/0
 17598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17603 ;;Total ram usage:        0 bytes
 17604 ;; Hardware stack levels used:    1
 17605 ;; Hardware stack levels required when called:    2
 17606 ;; This function calls:
 17607 ;;		Absolute function
 17608 ;;		_INT_DefaultInterruptHandler
 17609 ;;		_sw1_EXT
 17610 ;; This function is called by:
 17611 ;;		_INT_ISR
 17612 ;; This function uses a non-reentrant model
 17613 ;;
 17614                           
 17615                           
 17616                           ;psect for function _INT_CallBack
 17617  0F2D                     _INT_CallBack:	
 17618  0F2D                     i1l4441:	
 17619                           ;incstack = 0
 17620                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 17621                           
 17622                           
 17623                           ;mcc_generated_files/ext_int.c: 44:     if(INT_InterruptHandler)
 17624  0F2D  0020               	movlb	0	; select bank0
 17625  0F2E  0855               	movf	_INT_InterruptHandler,w
 17626  0F2F  0456               	iorwf	_INT_InterruptHandler+1,w
 17627  0F30  1903               	btfsc	3,2
 17628  0F31  2F33               	goto	u183_21
 17629  0F32  2F34               	goto	u183_20
 17630  0F33                     u183_21:	
 17631  0F33  2F39               	goto	i1l338
 17632  0F34                     u183_20:	
 17633  0F34                     i1l4443:	
 17634                           
 17635                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          _InterruptHandler();
 17636  0F34  0856               	movf	_INT_InterruptHandler+1,w
 17637  0F35  008A               	movwf	10
 17638  0F36  0855               	movf	_INT_InterruptHandler,w
 17639  0F37  000A               	callw
 17640  0F38  318F               	pagesel	$
 17641  0F39                     i1l338:	
 17642  0F39  0008               	return
 17643  0F3A                     __end_of_INT_CallBack:	
 17644                           
 17645                           	psect	text93
 17646  0E29                     __ptext93:	
 17647 ;; *************** function _INT_DefaultInterruptHandler *****************
 17648 ;; Defined at:
 17649 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 17650 ;; Parameters:    Size  Location     Type
 17651 ;;		None
 17652 ;; Auto vars:     Size  Location     Type
 17653 ;;		None
 17654 ;; Return value:  Size  Location     Type
 17655 ;;                  1    wreg      void 
 17656 ;; Registers used:
 17657 ;;		None
 17658 ;; Tracked objects:
 17659 ;;		On entry : 0/0
 17660 ;;		On exit  : 0/0
 17661 ;;		Unchanged: 0/0
 17662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17667 ;;Total ram usage:        0 bytes
 17668 ;; Hardware stack levels used:    1
 17669 ;; This function calls:
 17670 ;;		Nothing
 17671 ;; This function is called by:
 17672 ;;		_EXT_INT_Initialize
 17673 ;;		_INT_CallBack
 17674 ;; This function uses a non-reentrant model
 17675 ;;
 17676                           
 17677                           
 17678                           ;psect for function _INT_DefaultInterruptHandler
 17679  0E29                     _INT_DefaultInterruptHandler:	
 17680  0E29                     i1l344:	
 17681                           ;incstack = 0
 17682                           ; Regs used in _INT_DefaultInterruptHandler: []
 17683                           
 17684  0E29  0008               	return
 17685  0E2A                     __end_of_INT_DefaultInterruptHandler:	
 17686                           
 17687                           	psect	text94
 17688  05F2                     __ptext94:	
 17689 ;; *************** function _sw1_EXT *****************
 17690 ;; Defined at:
 17691 ;;		line 83 in file "main.c"
 17692 ;; Parameters:    Size  Location     Type
 17693 ;;		None
 17694 ;; Auto vars:     Size  Location     Type
 17695 ;;		None
 17696 ;; Return value:  Size  Location     Type
 17697 ;;                  1    wreg      void 
 17698 ;; Registers used:
 17699 ;;		wreg, status,2, status,0, pclath, cstack
 17700 ;; Tracked objects:
 17701 ;;		On entry : 0/0
 17702 ;;		On exit  : 0/0
 17703 ;;		Unchanged: 0/0
 17704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17707 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17708 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17709 ;;Total ram usage:        1 bytes
 17710 ;; Hardware stack levels used:    1
 17711 ;; Hardware stack levels required when called:    1
 17712 ;; This function calls:
 17713 ;;		i1_PWM6_LoadDutyValue
 17714 ;;		i1_checkDebounceSW1
 17715 ;; This function is called by:
 17716 ;;		_main
 17717 ;;		_INT_CallBack
 17718 ;; This function uses a non-reentrant model
 17719 ;;
 17720                           
 17721                           
 17722                           ;psect for function _sw1_EXT
 17723  05F2                     _sw1_EXT:	
 17724  05F2                     i1l4175:	
 17725                           ;incstack = 0
 17726                           ; Regs used in _sw1_EXT: [wreg+status,2+status,0+pclath+cstack]
 17727                           
 17728                           
 17729                           ;main.c: 86:     if(checkDebounceSW1()){
 17730  05F2  3184  2419  3185   	fcall	i1_checkDebounceSW1
 17731  05F5  3A00               	xorlw	0
 17732  05F6  1903               	skipnz
 17733  05F7  2DF9               	goto	u167_21
 17734  05F8  2DFA               	goto	u167_20
 17735  05F9                     u167_21:	
 17736  05F9  2E19               	goto	i1l1162
 17737  05FA                     u167_20:	
 17738  05FA                     i1l4177:	
 17739                           
 17740                           ;main.c: 87:         if (alarm == 1){
 17741  05FA  0020               	movlb	0	; select bank0
 17742  05FB  032F               	decf	_alarm,w	;volatile
 17743  05FC  1D03               	btfss	3,2
 17744  05FD  2DFF               	goto	u168_21
 17745  05FE  2E00               	goto	u168_20
 17746  05FF                     u168_21:	
 17747  05FF  2E09               	goto	i1l1156
 17748  0600                     u168_20:	
 17749  0600                     i1l4179:	
 17750                           
 17751                           ;main.c: 88:             alarm = 0;
 17752  0600  01AF               	clrf	_alarm	;volatile
 17753  0601                     i1l4181:	
 17754  0601  1316               	bcf	22,6	;volatile
 17755  0602                     i1l4183:	
 17756                           
 17757                           ;main.c: 90:             PWM6_LoadDutyValue(0);
 17758  0602  3000               	movlw	0
 17759  0603  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 17760  0604  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 17761  0605  3187  27BE  3185   	fcall	i1_PWM6_LoadDutyValue
 17762                           
 17763                           ;main.c: 91:         }
 17764  0608  2E19               	goto	i1l1162
 17765  0609                     i1l1156:	
 17766                           ;main.c: 92:         else{
 17767                           
 17768                           
 17769                           ;main.c: 93:             if(!PORTBbits.RB4){
 17770  0609  1A0D               	btfsc	13,4	;volatile
 17771  060A  2E0C               	goto	u169_21
 17772  060B  2E0D               	goto	u169_20
 17773  060C                     u169_21:	
 17774  060C  2E19               	goto	i1l1162
 17775  060D                     u169_20:	
 17776  060D                     i1l4185:	
 17777                           
 17778                           ;main.c: 95:                 if(config_mode == 0){
 17779  060D  087D               	movf	_config_mode,w	;volatile
 17780  060E  1D03               	btfss	3,2
 17781  060F  2E11               	goto	u170_21
 17782  0610  2E12               	goto	u170_20
 17783  0611                     u170_21:	
 17784  0611  2E19               	goto	i1l1159
 17785  0612                     u170_20:	
 17786  0612                     i1l4187:	
 17787                           
 17788                           ;main.c: 96:                     config_mode = 1;
 17789  0612  3001               	movlw	1
 17790  0613  00F7               	movwf	??_sw1_EXT
 17791  0614  0877               	movf	??_sw1_EXT,w
 17792  0615  00FD               	movwf	_config_mode	;volatile
 17793  0616                     i1l4189:	
 17794                           
 17795                           ;main.c: 98:                     (PIE0bits.INTE = 0);
 17796  0616  002E               	movlb	14	; select bank14
 17797  0617  1016               	bcf	22,0	;volatile
 17798  0618  2E19               	goto	i1l1162
 17799  0619                     i1l1159:	
 17800                           ;main.c: 102:             }
 17801                           
 17802  0619                     i1l1162:	
 17803  0619  0008               	return
 17804  061A                     __end_of_sw1_EXT:	
 17805                           
 17806                           	psect	text95
 17807  0419                     __ptext95:	
 17808 ;; *************** function i1_checkDebounceSW1 *****************
 17809 ;; Defined at:
 17810 ;;		line 455 in file "main.c"
 17811 ;; Parameters:    Size  Location     Type
 17812 ;;		None
 17813 ;; Auto vars:     Size  Location     Type
 17814 ;;		None
 17815 ;; Return value:  Size  Location     Type
 17816 ;;                  1    wreg      unsigned char 
 17817 ;; Registers used:
 17818 ;;		wreg, status,2, status,0
 17819 ;; Tracked objects:
 17820 ;;		On entry : 0/0
 17821 ;;		On exit  : 0/0
 17822 ;;		Unchanged: 0/0
 17823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17826 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17827 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17828 ;;Total ram usage:        7 bytes
 17829 ;; Hardware stack levels used:    1
 17830 ;; This function calls:
 17831 ;;		Nothing
 17832 ;; This function is called by:
 17833 ;;		_sw1_EXT
 17834 ;; This function uses a non-reentrant model
 17835 ;;
 17836                           
 17837                           
 17838                           ;psect for function i1_checkDebounceSW1
 17839  0419                     i1_checkDebounceSW1:	
 17840  0419                     i1l4019:	
 17841                           ;incstack = 0
 17842                           ; Regs used in i1_checkDebounceSW1: [wreg+status,2+status,0]
 17843                           
 17844                           
 17845                           ;main.c: 458:     if(clkms - last_ms < 0){
 17846  0419  0020               	movlb	0	; select bank0
 17847  041A  0833               	movf	_clkms,w	;volatile
 17848  041B  00F0               	movwf	??i1_checkDebounceSW1
 17849  041C  01F1               	clrf	??i1_checkDebounceSW1+1
 17850  041D  0871               	movf	??i1_checkDebounceSW1+1,w
 17851  041E  00F3               	movwf	??i1_checkDebounceSW1+3
 17852  041F  0832               	movf	_last_ms,w
 17853  0420  0270               	subwf	??i1_checkDebounceSW1,w
 17854  0421  00F2               	movwf	??i1_checkDebounceSW1+2
 17855  0422  1C03               	skipc
 17856  0423  03F3               	decf	??i1_checkDebounceSW1+3,f
 17857  0424  1FF3               	btfss	??i1_checkDebounceSW1+3,7
 17858  0425  2C27               	goto	u162_21
 17859  0426  2C28               	goto	u162_20
 17860  0427                     u162_21:	
 17861  0427  2C4C               	goto	i1l4027
 17862  0428                     u162_20:	
 17863  0428                     i1l4021:	
 17864                           
 17865                           ;main.c: 460:         if ((200 - last_ms)+ clkms > 10 ){
 17866  0428  0833               	movf	_clkms,w	;volatile
 17867  0429  00F0               	movwf	??i1_checkDebounceSW1
 17868  042A  01F1               	clrf	??i1_checkDebounceSW1+1
 17869  042B  0871               	movf	??i1_checkDebounceSW1+1,w
 17870  042C  00F3               	movwf	??i1_checkDebounceSW1+3
 17871  042D  0832               	movf	_last_ms,w
 17872  042E  0270               	subwf	??i1_checkDebounceSW1,w
 17873  042F  00F2               	movwf	??i1_checkDebounceSW1+2
 17874  0430  1C03               	skipc
 17875  0431  03F3               	decf	??i1_checkDebounceSW1+3,f
 17876  0432  0872               	movf	??i1_checkDebounceSW1+2,w
 17877  0433  3EC8               	addlw	200
 17878  0434  00F4               	movwf	??i1_checkDebounceSW1+4
 17879  0435  3000               	movlw	0
 17880  0436  3D73               	addwfc	??i1_checkDebounceSW1+3,w
 17881  0437  00F5               	movwf	??i1_checkDebounceSW1+5
 17882  0438  0875               	movf	??i1_checkDebounceSW1+5,w
 17883  0439  3A80               	xorlw	128
 17884  043A  00F6               	movwf	??i1_checkDebounceSW1+6
 17885  043B  3080               	movlw	128
 17886  043C  0276               	subwf	??i1_checkDebounceSW1+6,w
 17887  043D  1D03               	skipz
 17888  043E  2C41               	goto	u163_25
 17889  043F  300B               	movlw	11
 17890  0440  0274               	subwf	??i1_checkDebounceSW1+4,w
 17891  0441                     u163_25:	
 17892  0441  1C03               	skipc
 17893  0442  2C44               	goto	u163_21
 17894  0443  2C45               	goto	u163_20
 17895  0444                     u163_21:	
 17896  0444  2C4C               	goto	i1l4027
 17897  0445                     u163_20:	
 17898  0445                     i1l4023:	
 17899                           
 17900                           ;main.c: 461:             last_ms = clkms;
 17901  0445  0020               	movlb	0	; select bank0
 17902  0446  0833               	movf	_clkms,w	;volatile
 17903  0447  00F0               	movwf	??i1_checkDebounceSW1
 17904  0448  0870               	movf	??i1_checkDebounceSW1,w
 17905  0449  00B2               	movwf	_last_ms
 17906                           
 17907                           ;main.c: 462:             return 1;
 17908  044A  3001               	movlw	1
 17909  044B  2C65               	goto	i1l1301
 17910  044C                     i1l4027:	
 17911                           
 17912                           ;main.c: 466:     if(clkms - last_ms < 10){
 17913  044C  0020               	movlb	0	; select bank0
 17914  044D  0833               	movf	_clkms,w	;volatile
 17915  044E  00F0               	movwf	??i1_checkDebounceSW1
 17916  044F  01F1               	clrf	??i1_checkDebounceSW1+1
 17917  0450  0871               	movf	??i1_checkDebounceSW1+1,w
 17918  0451  00F3               	movwf	??i1_checkDebounceSW1+3
 17919  0452  0832               	movf	_last_ms,w
 17920  0453  0270               	subwf	??i1_checkDebounceSW1,w
 17921  0454  00F2               	movwf	??i1_checkDebounceSW1+2
 17922  0455  1C03               	skipc
 17923  0456  03F3               	decf	??i1_checkDebounceSW1+3,f
 17924  0457  0873               	movf	??i1_checkDebounceSW1+3,w
 17925  0458  3A80               	xorlw	128
 17926  0459  00F4               	movwf	??i1_checkDebounceSW1+4
 17927  045A  3080               	movlw	128
 17928  045B  0274               	subwf	??i1_checkDebounceSW1+4,w
 17929  045C  1D03               	skipz
 17930  045D  2C60               	goto	u164_25
 17931  045E  300A               	movlw	10
 17932  045F  0272               	subwf	??i1_checkDebounceSW1+2,w
 17933  0460                     u164_25:	
 17934  0460  1803               	skipnc
 17935  0461  2C63               	goto	u164_21
 17936  0462  2C64               	goto	u164_20
 17937  0463                     u164_21:	
 17938  0463  2C45               	goto	i1l4023
 17939  0464                     u164_20:	
 17940  0464                     i1l4029:	
 17941                           
 17942                           ;main.c: 467:         return 0;
 17943  0464  3000               	movlw	0
 17944  0465                     i1l1301:	
 17945  0465  0008               	return
 17946  0466                     __end_ofi1_checkDebounceSW1:	
 17947                           
 17948                           	psect	text96
 17949  07BE                     __ptext96:	
 17950 ;; *************** function i1_PWM6_LoadDutyValue *****************
 17951 ;; Defined at:
 17952 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 17953 ;; Parameters:    Size  Location     Type
 17954 ;;  dutyValue       2    0[COMMON] unsigned short 
 17955 ;; Auto vars:     Size  Location     Type
 17956 ;;		None
 17957 ;; Return value:  Size  Location     Type
 17958 ;;                  1    wreg      void 
 17959 ;; Registers used:
 17960 ;;		wreg, status,2, status,0
 17961 ;; Tracked objects:
 17962 ;;		On entry : 0/0
 17963 ;;		On exit  : 0/0
 17964 ;;		Unchanged: 0/0
 17965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17966 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17968 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17969 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17970 ;;Total ram usage:        4 bytes
 17971 ;; Hardware stack levels used:    1
 17972 ;; This function calls:
 17973 ;;		Nothing
 17974 ;; This function is called by:
 17975 ;;		_sw1_EXT
 17976 ;;		_ISR_3s
 17977 ;; This function uses a non-reentrant model
 17978 ;;
 17979                           
 17980                           
 17981                           ;psect for function i1_PWM6_LoadDutyValue
 17982  07BE                     i1_PWM6_LoadDutyValue:	
 17983  07BE                     i1l4017:	
 17984                           ;incstack = 0
 17985                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 17986                           
 17987                           
 17988                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 17989  07BE  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 17990  07BF  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 17991  07C0  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 17992  07C1  00F2               	movwf	??i1_PWM6_LoadDutyValue
 17993  07C2  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 17994  07C3  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 17995  07C4  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 17996  07C5  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 17997  07C6  0872               	movf	??i1_PWM6_LoadDutyValue,w
 17998  07C7  0027               	movlb	7	; select bank7
 17999  07C8  008D               	movwf	13	;volatile
 18000                           
 18001                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 18002  07C9  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 18003  07CA  3903               	andlw	3
 18004  07CB  00F2               	movwf	??i1_PWM6_LoadDutyValue
 18005  07CC  3005               	movlw	5
 18006  07CD                     u161_25:	
 18007  07CD  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 18008  07CE  3EFF               	addlw	-1
 18009  07CF  1D03               	skipz
 18010  07D0  2FCD               	goto	u161_25
 18011  07D1  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 18012  07D2  008C               	movwf	12	;volatile
 18013  07D3                     i1l916:	
 18014  07D3  0008               	return
 18015  07D4                     __end_ofi1_PWM6_LoadDutyValue:	
 18016  007E                     btemp	set	126	;btemp
 18017  007E                     int$flags	set	126
 18018  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    32
    Data        7
    BSS         53
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     24      64
    BANK1            80      0      29
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$3574$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$3580	const PTR FTN()enum E12722 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX$3579	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$3574	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), ISR_3s(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), ISR_3s(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), Absolute function(), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S383$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), i2c_restartWrite(), 

    fsmStateTable	const PTR FTN()enum E12722[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S66$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    S66$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _i2c_ISR->_do_I2C_DO_ADDRESS_NACK
    _i2c_ISR->_do_I2C_RX
    _i2c_ISR->_do_I2C_TX
    _i2c_ISR->_do_I2C_TX_EMPTY
    _do_I2C_TX_EMPTY->_i2c_restartWrite
    _do_I2C_TX_EMPTY->_rd1RegCompleteHandler
    _do_I2C_TX_EMPTY->_rd2RegCompleteHandler
    _do_I2C_TX_EMPTY->_rdBlkRegCompleteHandler
    _do_I2C_TX_EMPTY->_returnReset
    _do_I2C_TX_EMPTY->_returnStop
    _do_I2C_TX_EMPTY->_wr1RegCompleteHandler
    _do_I2C_TX_EMPTY->_wr2RegCompleteHandler
    _do_I2C_TX->_i2c_restartWrite
    _do_I2C_TX->_rd1RegCompleteHandler
    _do_I2C_TX->_rd2RegCompleteHandler
    _do_I2C_TX->_rdBlkRegCompleteHandler
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_TX->_wr1RegCompleteHandler
    _do_I2C_TX->_wr2RegCompleteHandler
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_RX->_i2c_restartWrite
    _do_I2C_RX->_rd1RegCompleteHandler
    _do_I2C_RX->_rd2RegCompleteHandler
    _do_I2C_RX->_rdBlkRegCompleteHandler
    _do_I2C_RX->_returnReset
    _do_I2C_RX->_returnStop
    _do_I2C_RX->_wr1RegCompleteHandler
    _do_I2C_RX->_wr2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_i2c_restartWrite
    _do_I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_returnReset
    _do_I2C_DO_ADDRESS_NACK->_returnStop
    _do_I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _TMR2_ISR->_handler_clock_ms
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR0_ISR->_ISR_3s
    _ISR_3s->i1_PWM6_LoadDutyValue
    _INT_CallBack->_sw1_EXT
    _sw1_EXT->i1_checkDebounceSW1

Critical Paths under _main in BANK0

    _main->_config_routine
    _recoverData->_reset_recv
    _reset_recv->_DATAEE_WriteByte
    _cksum_w->_DATAEE_WriteByte
    _cksum->_DATAEE_ReadByte
    _DATAEE_WriteByte->_cksum
    _config_routine->_clock_subfields
    _clock_subfields->_increment_subfield
    _mod4_LED->_PWM6_LoadDutyValue
    _mod3_LED->_PWM6_LoadDutyValue
    _mod2_LED->_PWM6_LoadDutyValue
    _mod1_LED->_PWM6_LoadDutyValue
    _increment_subfield->_checkDebounceSW1
    _increment_subfield->_checkDebounceSW2
    _all_LED->_PWM6_LoadDutyValue
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _ADC_read->_ADCC_GetConversionResult

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_i2c_ISR

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   20537
                                             20 BANK0      4     4      0
                           _ADC_read
            _INT_SetInterruptHandler
                            _LED_bin
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
           _TMR1_SetInterruptHandler
           _TMR2_SetInterruptHandler
                     _config_routine
                        _recoverData
 ---------------------------------------------------------------------------------
 (1) _recoverData                                          1     1      0    6123
                                             15 BANK0      1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                              _cksum
                            _cksum_w
                         _reset_recv
 ---------------------------------------------------------------------------------
 (2) _reset_recv                                           2     2      0    1221
                                             13 BANK0      2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _cksum_w                                              1     1      0    2049
                                             13 BANK0      1     1      0
                   _DATAEE_WriteByte
                              _cksum
 ---------------------------------------------------------------------------------
 (3) _cksum                                                4     4      0     896
                                              5 BANK0      4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2     804
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3    1153
                                              9 BANK0      4     1      3
                              _cksum (ARG)
 ---------------------------------------------------------------------------------
 (1) _config_routine                                       3     3      0   11823
                                             17 BANK0      3     3      0
                 _PWM6_LoadDutyValue
                            _all_LED
                   _checkDebounceSW1
                   _checkDebounceSW2
                    _clock_subfields
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
 ---------------------------------------------------------------------------------
 (2) _clock_subfields                                      3     3      0    5396
                                             14 BANK0      3     3      0
                   _checkDebounceSW1
                   _checkDebounceSW2
                 _increment_subfield
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
 ---------------------------------------------------------------------------------
 (2) _mod4_LED                                             0     0      0    1056
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mod3_LED                                             0     0      0    1056
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mod2_LED                                             0     0      0    1056
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mod1_LED                                             0     0      0    1056
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _increment_subfield                                   4     4      0    1104
                                             10 BANK0      4     4      0
                 _PWM6_LoadDutyValue
                   _checkDebounceSW1
                   _checkDebounceSW2
 ---------------------------------------------------------------------------------
 (4) _checkDebounceSW2                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (4) _checkDebounceSW1                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) _all_LED                                              1     1      0    1056
                                              7 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _PWM6_LoadDutyValue                                   4     2      2    1056
                                              3 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     696
                    _ADCC_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     174
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     174
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_bin                                              5     3      2     120
                                              3 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             2     0      2      22
                                              5 BANK0      2     0      2
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      22
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             2     0      2       0
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0   78474
                   Absolute function *
                            _INT_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (6) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _i2c_ISR                                              3     3      0   78042
                                              0 BANK0      3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (7) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX_EMPTY                                      3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX                                            3     3      0   19516
                                             10 COMMON     3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_TXData                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RX                                            3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ADDRESS_NACK                               3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _returnStop                                           1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _returnReset                                          1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              1     0      1    4086
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _i2c_setDataCompleteCallback                          4     1      3    2478
                                              5 COMMON     4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (10) _setCallBack                                         5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (9) _i2c_setBuffer                                        4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _i2c_restartWrite                                     1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                   _handler_clock_ms *
 ---------------------------------------------------------------------------------
 (7) _handler_clock_ms                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _handler_clock_hms *
 ---------------------------------------------------------------------------------
 (7) _handler_clock_hms                                    1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0      96
                   Absolute function *
                             _ISR_3s *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ISR_3s                                               1     1      0      96
                                              4 COMMON     1     1      0
                     _TMR0_StopTimer
               i1_PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (8) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT_ISR                                              0     0      0      96
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (7) _INT_CallBack                                         0     0      0      96
                   Absolute function *
        _INT_DefaultInterruptHandler *
                            _sw1_EXT *
 ---------------------------------------------------------------------------------
 (8) _sw1_EXT                                              1     1      0      96
                                              7 COMMON     1     1      0
               i1_PWM6_LoadDutyValue
                 i1_checkDebounceSW1
 ---------------------------------------------------------------------------------
 (9) i1_checkDebounceSW1                                   7     7      0       0
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (8) i1_PWM6_LoadDutyValue                                 4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_read
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
   _INT_SetInterruptHandler
   _LED_bin
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _TMR1_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _config_routine
     _PWM6_LoadDutyValue
     _all_LED
       _PWM6_LoadDutyValue
     _checkDebounceSW1
     _checkDebounceSW2
     _clock_subfields
       _checkDebounceSW1
       _checkDebounceSW2
       _increment_subfield
         _PWM6_LoadDutyValue
         _checkDebounceSW1
         _checkDebounceSW2
       _mod1_LED
         _PWM6_LoadDutyValue
       _mod2_LED
         _PWM6_LoadDutyValue
       _mod3_LED
         _PWM6_LoadDutyValue
       _mod4_LED
         _PWM6_LoadDutyValue
     _mod1_LED
       _PWM6_LoadDutyValue
     _mod2_LED
       _PWM6_LoadDutyValue
     _mod3_LED
       _PWM6_LoadDutyValue
     _mod4_LED
       _PWM6_LoadDutyValue
   _recoverData
     _DATAEE_ReadByte
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
     _cksum_w
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
       _cksum
         _DATAEE_ReadByte
     _reset_recv
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _INT_ISR *
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _sw1_EXT *
         i1_PWM6_LoadDutyValue
         i1_checkDebounceSW1
   _TMR0_ISR *
     Absolute function(Fake) *
     _ISR_3s *
       _TMR0_StopTimer
       i1_PWM6_LoadDutyValue
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _handler_clock_hms *
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _handler_clock_ms *
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c1_driver_sendNACK
       _i2c1_driver_getRXData *
       _i2c1_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c1_driver_restart
     _do_I2C_SEND_STOP *
       _i2c1_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c1_driver_TXData *
       _i2c1_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _mssp1_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      1D       7       36.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      6B      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      6B      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Nov  3 15:58:46 2019

                            returnReset@p 0079          __end_of_TMR2_SetInterruptHandler 0EA4  
                             __CFG_CP$OFF 0000                      __size_of_do_I2C_IDLE 0005  
                     _do_I2C_SEND_RESTART 0E6D                      __size_of_do_I2C_RCEN 0007  
             __size_of_PWM6_LoadDutyValue 0019                    increment_subfield@exit 0043  
                  increment_subfield@plus 0041                               __CFG_LVP$ON 0000  
                                     l341 0E91                                       l442 0F01  
                                     l530 04F8                                       l347 0F6E  
                                     l445 0EE6                                       l439 06FA  
                                     l760 0EDE                                       l913 0F60  
                                     l763 0EB7                                       l916 0747  
                                     l757 07BD                                       l766 0EF8  
                                     l960 0663                                       l963 0F9B  
                                     l869 06C2                                       l957 0658  
                                     l959 065C                                       l899 0E9D  
                                     l998 0778                                       _PR2 028D  
                            __CFG_CPD$OFF 0000                                       i1l9 0E2F  
                         _timer1ReloadVal 0053                                       _seg 0034  
           i2c_setDataCompleteCallback@cb 0075                   __size_of_PMD_Initialize 0008  
                         _TMR2_Initialize 0761                     __size_of_do_I2C_RESET 0008  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                            __CFG_ZCD$OFF 0000                           __end_of_LED_bin 0715  
                                    l1041 0EA3                   ??_rd2RegCompleteHandler 007A  
                                    l1301 0418                                      l1213 01D4  
                                    l1223 0538                                      l1231 02AC  
                                    l1217 0507                                      l1242 02D0  
                                    l1308 03CB                                      l1228 0283  
                                    l1180 0119                                      l1245 02DD  
                                    l1254 032A                                      l1263 072E  
                                    l1239 02CF                                      l1503 0FBB  
                                    l1257 0714                                      l4001 03AB  
                                    l1513 06DE                                      l1283 0F16  
                                    l1291 0F21                                      l1508 06A3  
                                    l4005 03B2                                      l1286 0F0B  
                                    l4007 03CA                                      l1536 07E8  
                                    l1296 0F2C                                      l4201 0F02  
                                    l1539 0E4C                                      l4203 0F04  
                                    l4211 0F22                                      l4221 0500  
                                    l4205 0F17                                      l4213 0F24  
                                    l5101 00AD                                      l1558 0E97  
                                    l1486 026C                                      l4151 0E98  
                                    l4231 0524                                      l4223 050B  
                                    l4207 0F19                                      l4215 0F2A  
                                    l5111 00BE                                      l5103 00AF  
                                    l4233 052C                                      l4225 0513  
                                    l4217 04F9                                      l4209 0F1F  
                                    l4161 0651                                      l4153 0640  
                                    l5121 00EE                                      l5113 00C9  
                                    l5105 00B0                                      l4227 0518  
                                    l4235 0531                                      l4219 04FE  
                                    l4171 065D                                      l4163 0652  
                                    l4155 0648                                      l4251 06A2  
                                    l5131 0104                                      l5123 00F2  
                                    l5115 00D0                                      l5107 00B1  
                                    l4149 0E8C                                      l4501 04F1  
                                    l4173 0E9E                                      l4229 051F  
                                    l4165 0653                                      l4157 064C  
                                    l4245 068A                                      l4237 0684  
                                    l5141 011F                                      l5125 00FA  
                                    l5133 010A                                      l5117 00E2  
                                    l5109 00B6                      _ADCC_StartConversion 0ED7  
                                    l4511 0EFD                                      l4503 04F3  
                                    l4167 0655                                      l4159 0650  
                                    l4247 0695                                      l4239 0686  
                                    l5143 0121                                      l5135 0110  
                                    l5127 00FF                                      l5119 00E8  
                                    l4521 07BA                                      l4513 0F00  
                                    l4505 04F5                                      l4193 0E92  
                                    l4169 0657                                      l4249 0699  
                                    l5145 0124                                      l5137 0116  
                                    l5129 0101                                      l4523 07BC  
                                    l4507 0EF9                                      l4451 0EDF  
                                    l4515 0F54                                      l4531 076A  
                                    l4611 02EE                                      l4195 0F0C  
                                    l5147 0126                                      l5139 011A  
                                    l5091 007E                                      l4445 0F61  
                                    l4509 0EFC                                      l4461 04BC  
                                    l4453 04B0                                      l4517 0F5B  
                                    l4541 06A7                                      l4533 076C  
                                    l4525 0761                                      l4621 0314  
                                    l4613 02FE                                      l4605 02D2  
                                    l4197 0F0E                                      l5093 00A1  
                                    l4519 07A8                                      l4447 0F64  
                                    l4471 04C7                                      l4463 04BE  
                                    l4455 04B6                                      l4551 06B6  
                                    l4543 06A9                                      l4535 076D  
                                    l4527 0766                                      l4623 031D  
                                    l4615 0307                                      l4607 02DB  
                                    l4199 0F14                                      l4631 0272  
                                    l5343 0177                                      l5095 00A1  
                                    l4449 0F6C                                      l4481 04DB  
                                    l4473 04C9                                      l4465 04C0  
                                    l4457 04B8                                      l4561 07DA  
                                    l4553 06B7                                      l4545 06AB  
                                    l4537 0775                                      l4529 0767  
                                    l4625 031F                                      l4617 0309  
                                    l4609 02E6                                      l5345 029E  
                                    l4641 0291                                      l4633 0276  
                                    l5097 00A4                                      l4571 0EDC  
                                    l4491 04E5                                      l4483 04DD  
                                    l4475 04D5                                      l4467 04C3  
                                    l4459 04BA                                      l4563 07DC  
                                    l4555 06BF                                      l4547 06AD  
                                    l4539 06A4                                      l4811 06E8  
                                    l4627 0328                                      l4619 0312  
                                    l4651 02B9                                      l4643 0295  
                                    l4635 027E                                      l5099 00AB  
                                    l4573 0EDD                                      l4493 04E7  
                                    l4485 04DF                                      l4477 04D7  
                                    l4469 04C5                                      l4565 07DD  
                                    l4557 07D4                                      l4549 06B4  
                                    l4821 06F7                                      l4813 06EB  
                                    l4805 06DF                                      l4653 02BE  
                                    l4637 0289                                      l4629 026D  
                                    l4901 01AC                                      l4575 0EB1  
                                    l4495 04E9                                      l4487 04E1  
                                    l4479 04D9                                      l4567 07E5  
                                    l4559 07D9                                      l4815 06EE  
                                    l4807 06E2                                      l4655 02C1  
                                    l4639 028D                                      l4647 0299  
                                    l4911 01BF                                      l4903 01AE  
                                    l4831 0239                                      l4823 01D5  
                                    l4569 0ED9                                      l4841 0715  
                                    l4497 04EC                                      l4489 04E3  
                                    l4817 06F1                                      l4809 06E5  
                                    l4657 02C5                                      l4649 02B1  
                                    l4905 01B6                                      l4913 01C2  
                                    l3961 0F8D                                      l4833 0245  
                                    l4825 01E2                                      l4579 0EF0  
                                    l4843 071A                                      l4851 06FB  
                                    l4499 04EE                                      l4819 06F4  
                                    l4915 01C6                                      l4907 01B8  
                                    l3971 0F98                                      l3963 0F91  
                                    l4691 06C8                                      l4835 0251  
                                    l4827 01F4                                      l4845 071E  
                                    l4853 0E4A                                      l3981 03F8  
                                    l4917 01CB                                      l4909 01B9  
                                    l4861 0138                                      l3973 0F99  
                                    l3965 0F95                                      l4693 06D0  
                                    l4837 025D                                      l4829 0236  
                                    l4847 0726                                      l3959 072F  
                                    l4871 0157                                      l4863 0141  
                                    l4855 012D                                      l3967 0F96  
                                    l4695 06D5                                      l4687 06C3  
                                    l4839 0269                                      l3985 03FF  
                                    l3977 03CC                                      l4881 016D  
                                    l4873 015D                                      l4865 0147  
                                    l4857 0130                                      l3969 0F97  
                                    l4697 0FAC                                      l3987 0417  
                                    l3979 03DB                                      l4891 018E  
                                    l4875 0161                                      l4867 014A  
                                    l4859 0134                                      l3997 037F  
                                    l4893 0196                                      l4877 0165  
                                    l4885 0172                                      l4869 014F  
                                    l3999 038E                                      l4895 019B  
                                    l4879 0169                                      l4887 0185  
                                    l4897 01A2                                      l4889 018A  
                                    l4899 01A4                                      u2100 0147  
                                    u2101 0146                                      u2110 014F  
                                    u2111 014E                                      u2120 0157  
                                    u2121 0156                                      u2130 018E  
                                    u2131 018D                                      u2140 0196  
                                    u2060 01E2                                      u2141 0195  
                                    u2061 01E1                                      _LATA 0016  
                                    u2150 01BF                                      u2070 01F4  
                                    _LATB 0017                           __end_of_INT_ISR 0E8C  
                                    u2151 01BE                                      u2071 01F3  
                                    _LATC 0018                                      u2080 0726  
                                    u1600 03CA                                      u2160 01CB  
                                    _LATD 0019                                      u2081 0725  
                                    u1601 03C9                                      u2161 01CA  
                                    _LATE 001A                                      u2090 0141  
                                    u2091 0140                                      u2500 00DC  
                                    u1605 03C6                                      u1550 03DB  
                                    u1710 050B                                      u2510 00E8  
                                    u1551 03DA                                      u1711 050A  
                                    u2511 00E7                                      u1560 03F8  
                                    u1720 0513                                      u2520 00EE  
                                    u1545 0740                                      u1561 03F7  
                                    u1721 0512                                      u2521 00ED  
                                    u1570 0417                                      u1730 0524  
                                    u2530 00FF                                      _T2PR 028D  
                                    u1571 0416                                      u1731 0523  
                                    u2531 00FE                                      u1580 038E  
                                    u1740 052C                                      u1900 02CF  
                                    u1660 065C                                      u2540 0110  
                                    u1565 03F4                                      u1581 038D  
                                    u1741 052B                                      u1901 02CE  
                                    u1661 065B                                      u2541 010F  
                                    u1590 03AB                                      u1750 0538  
                                    u2550 011F                                      u1575 0413  
                                    u1591 03AA                                      u1751 0537  
                                    u2607 0127                                      u2551 011E  
                                    u1760 06A2                                      u2480 00B6  
                                    u2617 01A8                                      u1761 06A1  
                                    u2481 00B5                                      u2490 00DB  
                                    u2707 0318                                      u1595 03A7  
                                    u2627 01B2                                      u2491 00D9  
                                    u1860 0276                                      u2717 0323  
                                    u1861 0275                                      u2637 01C3  
                                    u1870 027E                                      u2727 071B  
                                    u2647 02C2                                      u1871 027D  
                                    u1880 02B1                                      u2657 02D6  
                                    u1881 02B0                                      u1890 02B9  
                                    u1970 06DE                                      u2667 02E1  
                                    u1891 02B8                                      u1971 06DD  
                                    _PMD0 0796                                      u2677 02F2  
                                    _PMD1 0797                                      _PMD2 0798  
                                    u2687 0302                                      _PMD3 0799  
                                    _PMD4 079A                                      u2697 030D  
                                    _PMD5 079B                                      i1l73 0F53  
                    ?_do_I2C_SEND_RESTART 0070                                      _TMR2 028C  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                                      _WPUD 0F5A  
                                    _WPUE 0F65                   ??_wr2RegCompleteHandler 007A  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
       __size_of_do_I2C_SEND_RESTART_READ 0005                                      _clkh 0036  
               ?_do_I2C_SEND_RESTART_READ 0070                                      _clkm 0035  
                                    _main 007E                                      _tala 005B  
               __size_of_do_I2C_SEND_STOP 0005                    __size_of_do_I2C_DO_ACK 0005  
                                    _nreg 005D                           _TMR0_StartTimer 0E4A  
                                    _pmon 005C                        _increment_subfield 04F9  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
     __end_of_INT_DefaultInterruptHandler 0E2A               _INT_DefaultInterruptHandler 0E29  
                   ?_do_I2C_SEND_ADR_READ 0070           ??_i2c1_driver_clearBusCollision 0070  
                                    start 005B                          __end_of_ADC_read 072F  
         __end_of_INT_SetInterruptHandler 0E92                             _i2c_setBuffer 0F9C  
              ??_TMR1_SetInterruptHandler 003C                             __CFG_CSWEN$ON 0000  
                           __CFG_MCLRE$ON 0000                           __end_of_i2c_ISR 0599  
                     ?_increment_subfield 0070          __size_of_rdBlkRegCompleteHandler 0018  
                ??_do_I2C_DO_NACK_RESTART 0070                 config_routine@select_mode 0049  
               __size_of_DATAEE_WriteByte 0024                   __end_of_TMR0_Initialize 07E9  
                            _do_I2C_RESET 0EC7            ??_TMR0_DefaultInterruptHandler 0070  
          __size_of_OSCILLATOR_Initialize 0009             __end_of_OSCILLATOR_Initialize 0F02  
                       ??_clock_subfields 0045                                     _ADACQ 009D  
                                   _ADCAP 009B                                     _ADACT 0099  
                                   ?_main 0070                                     _ADCLK 0098  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                  __end_of_i2c1_driver_stop 0E3B  
                                   _ADPRE 009C                             __CFG_WDTE$OFF 0000  
                                   _ADRPT 010D                                     _T1CLK 0211  
                                   _T1CON 020E                                     _T2CON 028E  
                                   _T2HLT 028F                __end_of_i2c1_driver_TXData 0E5E  
                          __CFG_DEBUG$OFF 0000                                     i1l103 0FAB  
                                   i1l200 056B                                     i1l210 0598  
                                   i1l131 0E67                                     i1l140 0E76  
                                   _T2TMR 028C                                     i1l125 0ECE  
                                   i1l213 0E58                                     i1l134 0E6C  
                                   i1l303 0790                                     i1l143 0EEF  
                                   i1l224 063F                                     i1l216 0E31  
                                   i1l128 0E62                                     i1l152 0E7B  
                                   i1l137 0E71                                     i1l146 0ED6  
                                   _T2RST 0291                                     i1l219 0003  
                                   i1l243 0FEE                                     i1l155 0E80  
                                   i1l164 05F1                                     i1l172 037E  
                                   i1l149 0EB0                                     i1l334 0E8B  
                                   i1l158 0E85                                     i1l344 0E29  
                                   i1l264 0FFF                                     i1l169 0362  
                                   i1l185 0483                                     i1l338 0F39  
                                   i1l602 0E2D                                     i1l186 04AF  
                                   i1l611 0E3A                                     i1l291 0FDD  
                                   i1l620 0E40                                     i1l380 001F  
                                   i1l614 0EC6                                     i1l279 07F9  
                                   i1l383 0032                                     i1l608 0E37  
                                   i1l392 0059                                     i1l617 0E3D  
                                   i1l385 0041                                     i1l386 0059  
                                   i1l378 0013                                     i1l635 0E50  
                                   i1l387 004D                                     i1l629 0E5D  
                                   i1l902 0E2B                                     i1l638 0E54  
                                   i1l576 0E46                                     i1l672 0E49  
                                   i1l579 0E43                                     i1l916 07D3  
                                   i1l883 0FCC                                     i1l896 07A7  
                                   _OSCEN 0891                           __end_of_all_LED 032B  
                                   _TMR0H 001D                                     _TMR1H 020D  
                                   _TMR0L 001C                                     _TMR1L 020C  
                                   _TRISA 0011                                     _TRISB 0012  
                                   _TRISC 0013                                     _TRISD 0014  
                                   _TRISE 0015                                     _WPUC3 7A7B  
                                   _WPUC4 7A7C         __size_of_TMR0_SetInterruptHandler 0006  
                         _PWM6_Initialize 0F54                 ?_TMR0_SetInterruptHandler 003A  
                 ??_ADCC_IsConversionDone 003A                          __end_of_TMR0_ISR 0F7E  
                        __end_of_TMR1_ISR 07A8                          __end_of_TMR2_ISR 0F8D  
                         __end_of_sw1_EXT 061A                           __end_of_cksum_w 0FBC  
                    ??_increment_subfield 0041                           _DATAEE_ReadByte 0F8D  
                                   _alarm 002F                                     _clkms 0033  
              __end_of_i2c1_driver_isNACK 0EC7                                     _cksum 0684  
                   ?_ADCC_StartConversion 0070                ?_do_I2C_SEND_RESTART_WRITE 0070  
                                   _value 0028                         ?_checkDebounceSW1 0070  
                       ?_checkDebounceSW2 0070                     ??_do_I2C_SEND_RESTART 0070  
                 __end_of_TMR1_Initialize 06C3                                     pclath 000A  
                 __size_of_mssp1_clearIRQ 0003                        ??_checkDebounceSW1 003A  
                      ??_checkDebounceSW2 003A                    ?_do_I2C_SEND_ADR_WRITE 0070  
                                   status 0003                                     wtemp0 007E  
                         _TMR1_WriteTimer 0FBC                            ?_i2c_setBuffer 0070  
                            ?_setCallBack 0070                             _fsmStateTable 0664  
                         __initialization 005D                                _i2c_status 00A0  
                            __end_of_main 012D                   __end_of_TMR2_Initialize 0779  
             ?_INTERRUPT_InterruptManager 0070                              ?_recoverData 0070  
                           setCallBack@cb 0070                             _do_I2C_DO_ACK 0E77  
                _TMR2_SetInterruptHandler 0E9E                                    ??_main 004B  
                       ?_i2c_restartWrite 0079             __size_of_i2c1_driver_sendNACK 0004  
                               ??_LED_bin 003C                        ??_i2c_restartWrite 007A  
               __size_of_handler_clock_ms 000D             __size_of_i2c1_driver_resetBus 0001  
                               ??_INT_ISR 0078                   ?_do_I2C_DO_ADDRESS_NACK 0070  
                          _convertedValue 0026                                    _ADACCH 0091  
                                  _ADACCL 0090                   __end_of_TMR0_StartTimer 0E4D  
             __size_ofi1_checkDebounceSW1 004D                                    _ADCON0 0093  
                                  _ADCON1 0094                                    _ADCON2 0095  
                                  _ADCON3 0096                                    ?_cksum 0070  
                                  _ADERRH 0117                                    _ADERRL 0116  
                                  _ADLTHH 010F                                    _ADLTHL 010E  
                                  _ADRESH 008D                                    _ADRESL 008C  
                                  _ADSTAT 0097                                    _ADUTHH 0111  
                                  _ADUTHL 0110                                    _ANSELA 0F38  
                                  _ANSELB 0F43                                    _ANSELC 0F4E  
                                  _ANSELD 0F59                                    _ANSELE 0F64  
                      __CFG_RSTOSC$HFINT1 0000                                    _T0CON0 001E  
                                  _T0CON1 001F                                    _T1GATE 0210  
                                  _T1GCON 020F                                    _RA6PPS 0F16  
                                  _RC3PPS 0F23                   TMR1_WriteTimer@timerVal 0070  
                                  _RC4PPS 0F24                                    i1l1044 0E2C  
                                  i1l1301 0465                                    i1l1038 0F8C  
                                  i1l1162 0619                                    i1l1156 0609  
                                  i1l1165 075B                                    i1l1166 0760  
                                  i1l1159 0619                                    i1l1271 05C5  
                                  _ODCONA 0F3A                                    _ODCONB 0F45  
                                  i1l1275 0F46                                    _ODCONC 0F50  
                                  _ODCOND 0F5B                                    i1l4021 0428  
                                  i1l4101 0E41                                    _ODCONE 0F66  
                                  i1l1542 0E34                                    i1l4023 0445  
                                  i1l4103 0E30                                    i1l4111 0FDE  
                                  u201_20 0574                                    i1l4017 07BE  
                                  i1l1561 0E2A                                    i1l4113 0FE6  
                                  i1l4121 0FF7                                    u201_21 0573  
                                  i1l4027 044C                                    i1l4019 0419  
                                  i1l1555 0F7D                                    i1l4107 0002  
                                  i1l4115 0FED                                    i1l4123 0FFE  
                                  i1l4131 07F8                                    i1l4051 0E63  
                                  i1l4029 0464                                    i1l4053 0E66  
                                  i1l4135 0FCD                                    i1l4039 0E2E  
                                  i1l4119 0FEF                                    i1l4127 07E9  
                                  i1l4143 0779                                    i1l4063 0E6D  
                                  i1l4071 0E75                                    i1l4303 0ECF  
                                  i1l4311 0EAA                                    u202_20 057B  
                                  i1l4137 0FD5                                    i1l4129 07F1  
                                  i1l4145 078F                                    i1l4057 0E68  
                                  i1l4065 0E70                                    i1l4305 0ED1  
                                  i1l4313 0EAC                                    i1l4321 0E7A  
                                  i1l4081 0E7C                                    u202_21 057A  
                                  i1l4139 0FDC                                    i1l4075 0E5A  
                                  i1l4059 0E6B                                    i1l4307 0ED5  
                                  i1l4315 0EAF                                    i1l4083 0E7F  
                                  i1l4181 0601                                    i1l4077 0E3B  
                                  i1l4093 0EBF                                    i1l4421 0543  
                                  i1l4413 0539                                    i1l4069 0E72  
                                  i1l4333 05D1                                    i1l4325 05C6  
                                  i1l4405 048D                                    i1l5061 0006  
                                  i1l4183 0602                                    i1l4175 05F2  
                                  i1l4191 0E32                                    i1l4079 0E4D  
                                  i1l4415 053C                                    i1l4431 0549  
                                  i1l4319 0E77                                    i1l4087 0E81  
                                  i1l4327 05C8                                    i1l4351 0333  
                                  i1l4255 0E44                                    i1l5071 0023  
                                  i1l5063 000B                                    u203_20 0F78  
                                  i1l4185 060D                                    i1l4177 05FA  
                                  i1l4441 0F2D                                    i1l4601 0756  
                                  u203_21 0F77                                    i1l4097 0E3E  
                                  i1l4425 0545                                    i1l4281 0ECC  
                                  i1l4089 0E84                                    i1l4329 05CD  
                                  i1l5081 0045                                    i1l5073 0027  
                                  i1l5065 000F                                    i1l4187 0612  
                                  i1l4179 0600                                    i1l4443 0F34  
                                  i1l4603 075E                                    i1l4419 0540  
                                  i1l4283 0ECD                                    i1l4291 0E61  
                                  i1l4339 05D5                                    i1l4371 037B  
                                  i1l4355 0337                                    i1l4347 032B  
                                  i1l5083 0049                                    i1l5075 002B  
                                  i1l5067 0017                                    i1l4189 0616  
                                  i1l4277 0EC7                                    i1l4373 037D  
                                  i1l4365 033F                                    i1l4381 0466  
                                  i1l5085 0051                                    i1l5077 0036  
                                  i1l5069 001B                                    i1l4279 0ECA  
                                  i1l4287 0E5E                                    i1l4295 0EE7  
                                  i1l5351 05E9                                    i1l4367 0364  
                                  i1l4359 033B                                    i1l4383 0470  
                                  i1l4439 0E47                                    i1l5087 0055  
                                  i1l5079 003A                                    u204_20 07A2  
                                  u204_21 07A1                                    i1l4801 0F80  
                                  i1l5353 055D                                    i1l4289 0E60  
                                  i1l4297 0EE9                                    i1l4369 0370  
                                  i1l4385 0474                                    i1l4803 0F87  
                                  i1l4299 0EEE                                    i1l5347 04A1  
                                  i1l4395 0485                                    i1l4387 047E  
                                  i1l3941 0621                                    i1l5349 0354  
                                  i1l4389 0481                                    i1l4591 0FC6  
                                  i1l4583 0FBC                                    i1l4671 05B5  
                                  i1l4663 0599                                    i1l3951 0FAA  
                                  i1l3943 0632                                    i1l4399 0489  
                                  u205_20 0F87                                    i1l4585 0FC1  
                                  i1l4593 0FC8                                    i1l4673 05B9  
                                  i1l4665 059E                                    i1l4681 0F3A  
                                  u205_21 0F86                                    i1l3953 0E35  
                                  i1l3945 0F47                                    i1l4595 0FCA  
                                  i1l4587 0FC2                                    i1l4675 05BA  
                                  i1l4667 05AA                                    i1l4683 0F3F  
                                  i1l3955 0E38                                    i1l3947 0F9D  
                                  i1l3939 061B                                    i1l4771 056F  
                                  i1l4781 0E86                                    i1l4597 0748  
                                  i1l4589 0FC4                                    i1l4677 05C0  
                                  i1l4669 05AF                                    i1l4685 0F45  
                                  i1l3949 0FA2                                    i1l3957 0E51  
                                  i1l4773 0574                                    i1l4783 0E88  
                                  i1l4599 074F                                    i1l4679 05C4  
                                  i1l4791 0791                                    i1l4775 057B  
                                  i1l4785 0F6F                                    i1l4793 0793  
                                  i1l4777 0581                                    i1l4769 056C  
                                  i1l4787 0F71                                    i1l4795 079B  
                                  i1l4779 0E55                                    i1l4789 0F78  
                                  i1l4797 07A2                                    i1l4799 0F7E  
                                  u152_20 0621                                    u240_20 0027  
                                  u152_21 0620                                    u240_21 0026  
                                  _INLVLA 0F3C                                    _INLVLB 0F47  
                                  _INLVLC 0F52                                    _INLVLD 0F5D  
                                  _INLVLE 0F68                                    u153_20 0FA2  
                                  u241_20 002B                                    u153_21 0FA1  
                                  u241_21 002A                                    u161_25 07CD  
                                  u162_20 0428                                    u170_20 0612  
                                  u242_20 0036                                    u162_21 0427  
                                  u170_21 0611                                    u242_21 0035  
                                  u163_20 0445                                    u243_20 003A  
                                  u235_20 000B                                    u163_21 0444  
                                  u243_21 0039                                    u235_21 000A  
                                  u163_25 0441                                    u164_20 0464  
                                  u180_20 0332                                    u244_20 0045  
                                  u236_20 000F                                    u164_21 0463  
                                  u180_21 0331                                    u244_21 0044  
                                  u236_21 000E                                    u164_25 0460  
                                  u181_20 037B                                    u245_20 0049  
                                  u237_20 0017                                    u181_21 037A  
                                  u245_21 0048                                    u237_21 0016  
                                  u182_20 047E                                    u246_20 0051  
                                  u238_20 001B                                    u182_21 047D  
                                  u246_21 0050                                    u238_21 001A  
                                  u167_20 05FA                                    u183_20 0F34  
                                  u191_20 059E                                    u247_20 0055  
                                  u239_20 0023                                    u167_21 05F9  
                                  u183_21 0F33                                    u191_21 059D  
                                  u247_21 0054                                    u239_21 0022  
                                  u168_20 0600                                    u184_20 0FC1  
                                  u192_20 05A8                                    u168_21 05FF  
                                  u184_21 0FC0                                    u192_21 05A5  
                                  _INTPPS 0E90                                    u169_20 060D  
                                  u185_20 074F                                    u169_21 060C  
                                  u185_21 074E                                    u193_24 05AA  
                                  u194_20 05B5                                    u194_21 05B4  
                                  u195_20 05C0                                    u195_21 05BF  
                                  u196_20 0F45                                    u196_21 0F44  
                                  _OSCFRQ 0893                                    _ISR_3s 0748  
                  ??_do_I2C_SEND_ADR_READ 0070                  rdBlkRegCompleteHandler@p 0079  
                               ??_i2c_ISR 0037                ??_ADCC_GetConversionResult 003C  
                          __CFG_PWRTE$OFF 0000              __end_ofi1_PWM6_LoadDutyValue 07D4  
                   _i2c1_driver_getRXData 0E3E                          __end_of_mod1_LED 0F17  
                        __end_of_mod2_LED 0F0C                          __end_of_mod3_LED 0F22  
                        __end_of_mod4_LED 0F2D      __end_of_TMR1_DefaultInterruptHandler 0E2C  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 0E2B  
                            _CCPTMRS1bits 021F               __end_of_do_I2C_DO_NACK_STOP 0E81  
     __end_of_i2c_setDataCompleteCallback 0F54               _i2c_setDataCompleteCallback 0F47  
   __end_of_i2c1_driver_clearBusCollision 0E4A    __size_of_i2c1_driver_clearBusCollision 0003  
           _i2c1_driver_clearBusCollision 0E47                            __CFG_STVREN$ON 0000  
         __size_of_do_I2C_DO_NACK_RESTART 0005                                 ??_all_LED 003E  
                        ?_TMR0_Initialize 0070                   __end_of_PWM6_Initialize 0F61  
                          ?_do_I2C_DO_ACK 0070                                    cksum@i 003E  
                           ?_INT_CallBack 0070                   __end_of_DATAEE_ReadByte 0F9C  
                               ??_sw1_EXT 0077                                 ??_cksum_w 0044  
                         _ADCC_Initialize 07A8               __end_of_i2c1_driver_sendACK 0E51  
                          _PMD_Initialize 0EDF            __end_of_do_I2C_DO_ADDRESS_NACK 05F2  
             __end_of_i2c1_driver_restart 0E38                              ?_returnReset 0079  
                               ?_ADC_read 003C                    ??_ADCC_StartConversion 003A  
             __end_of_i2c1_driver_startRX 0E3E          __size_of_INT_SetInterruptHandler 0006  
TMR0_SetInterruptHandler@InterruptHandler 003A  TMR2_SetInterruptHandler@InterruptHandler 003A  
TMR1_SetInterruptHandler@InterruptHandler 003A   INT_SetInterruptHandler@InterruptHandler 003A  
                 __end_of_TMR1_WriteTimer 0FCD                          ??_config_routine 0048  
                        ?_TMR1_Initialize 0070                         _SYSTEM_Initialize 06DF  
                 __end_of__initialization 007A                           ??_i2c_setBuffer 0072  
                        _do_I2C_SEND_STOP 0E72                        __size_of_do_I2C_RX 004A  
                      __size_of_do_I2C_TX 0054                        ?_SYSTEM_Initialize 0070  
                __size_of_do_I2C_TX_EMPTY 0033                   _rdBlkRegCompleteHandler 0779  
                          __pcstackCOMMON 0070                              __pidataBANK0 0EB8  
                     ??_SYSTEM_Initialize 003C                                 ?_TMR0_ISR 0070  
                               ?_TMR1_ISR 0070                                 ?_TMR2_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                             __end_of_cksum 06A4  
                        _DATAEE_WriteByte 0640                          ?_TMR2_Initialize 0070  
                            LED_bin@value 003A                            ??_INT_CallBack 0078  
                  __end_of_PMD_Initialize 0EE7               __size_of_EXT_INT_Initialize 000E  
                              ??_ADC_read 003E               ADCC_StartConversion@channel 003A  
                          setCallBack@idx 0074                                   ??_cksum 003C  
                        ?_TMR0_StartTimer 0070                    _do_I2C_DO_NACK_RESTART 0E81  
               __end_of_SYSTEM_Initialize 06FB                            _mssp1_clearIRQ 0E44  
                              __pbssBANK0 0020                                __pbssBANK1 00A0  
          __size_of_rd2RegCompleteHandler 0011                                   ?_ISR_3s 0070  
           __end_of_rd2RegCompleteHandler 07FA            __size_of_wr2RegCompleteHandler 0011  
           __end_of_wr2RegCompleteHandler 0FDE                     _rd1RegCompleteHandler 0FEF  
                  ?_i2c1_driver_getRXData 0070                           _clock_subfields 026D  
                   _wr1RegCompleteHandler 0FDE              __size_of_i2c_busCollisionISR 0004  
                              __pmaintext 007E                             ??_do_I2C_IDLE 0070  
                    __size_of_setCallBack 0026                             ??_do_I2C_RCEN 0070  
        __end_of_TMR0_SetInterruptHandler 0E98                   __size_of_TMR0_StopTimer 0003  
                              ??_TMR0_ISR 0075                                ??_TMR1_ISR 0072  
                         __CFG_PPS1WAY$ON 0000                                ??_TMR2_ISR 0071  
                 __end_of_ADCC_Initialize 07BE                __end_of_PWM6_LoadDutyValue 0748  
                         ??_do_I2C_DO_ACK 0070                                __pintentry 0004  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                                 _ADPREVH 008F                                   _ADPREVL 008E  
                        ?_PWM6_Initialize 0070                       i2c_setBuffer@buffer 0073  
                                 _ADSTPTH 0113                                   _ADSTPTL 0112  
                         ?_PMD_Initialize 0070            ?_i2c1_driver_clearBusCollision 0070  
                        ?_DATAEE_ReadByte 003A                         __end_of_do_I2C_RX 04B0  
                       __end_of_do_I2C_TX 037F                         ?_i2c1_driver_stop 0070  
           i1PWM6_LoadDutyValue@dutyValue 0070                      __size_of_recoverData 0098  
                                 _LED_bin 06FB                          _handler_clock_ms 0F3A  
                                 _INT_ISR 0E86                        ??_i2c1_driver_stop 0070  
                                 _OSCCON1 088D                                   _OSCCON3 088F  
                           ?_mssp1_setIRQ 0070                      i1_PWM6_LoadDutyValue 07BE  
                                 _NVMADRH 081B                                   _NVMADRL 081A  
                                 _NVMDATH 081D                                   _OSCTUNE 0892  
                                 _NVMDATL 081C                                   _NVMCON2 081F  
                                 _PWM6DCH 038D                                   _PWM6DCL 038C  
                                 _PWM6CON 038E                                   _SSP1ADD 018D  
                                 _SLRCONA 0F3B                                   _SLRCONB 0F46  
                                 _SLRCONC 0F51                                   _SLRCOND 0F5C  
                                 _SLRCONE 0F67                                   _SSP1BUF 018C  
                  __end_of_mssp1_clearIRQ 0E47                                   _SSP1MSK 018E  
          __size_of_ADCC_IsConversionDone 0007                                 ?_mod1_LED 0070  
                               ?_mod2_LED 0070                                 ?_mod3_LED 0070  
                               ?_mod4_LED 0070             __end_of_ADCC_IsConversionDone 0EB8  
                 ??_do_I2C_SEND_ADR_WRITE 0071                          ?_TMR1_WriteTimer 0070  
             ??_do_I2C_SEND_RESTART_WRITE 0070                        _i2c1_driver_TXData 0E59  
                    DATAEE_WriteByte@bAdd 0040                        _i2c1_driver_i2cISR 002A  
                         __size_of_ISR_3s 0019                                   _i2c_ISR 056C  
               ??_rdBlkRegCompleteHandler 007A                        _i2c1_driver_isNACK 0EBF  
                     ?_i2c1_driver_TXData 0070                ??_TMR2_SetInterruptHandler 003C  
                    __CFG_SCANE$available 0000                 __size_of_checkDebounceSW1 004D  
               __size_of_checkDebounceSW2 004D                         ??_do_I2C_TX_EMPTY 007A  
                                 _all_LED 02D0                       ?_i2c1_driver_isNACK 0070  
                                 __ptext1 01D5                                   __ptext2 06C3  
                                 __ptext3 0FAC                                   __ptext4 0684  
                                 __ptext5 0F8D                                   __ptext6 0640  
                                 __ptext7 012D                                   __ptext8 026D  
                                 __ptext9 0F22                       __end_of_do_I2C_IDLE 0E63  
                     __end_of_do_I2C_RCEN 0EB1                                   _sw1_EXT 05F2  
          ??_TMR1_DefaultInterruptHandler 0070                                   _cksum_w 0FAC  
                               _T1CONbits 020E                     _OSCILLATOR_Initialize 0EF9  
                                 _last_ms 0032                                 _T2CONbits 028E  
             __end_of_do_I2C_SEND_RESTART 0E72                            ??_mssp1_setIRQ 0070  
                              _duty_cycle 0024                               reset_recv@i 0044  
       __size_of_TMR1_SetInterruptHandler 0006                     ?i1_PWM6_LoadDutyValue 0070  
                    ??_i2c1_driver_TXData 0070                  ??_PIN_MANAGER_Initialize 003A  
               ?_TMR1_SetInterruptHandler 003A                                 _T2HLTbits 028F  
                                 _nreg_pt 002E                   _INT_SetInterruptHandler 0E8C  
             __size_of_increment_subfield 0040                           ?_mssp1_clearIRQ 0070  
                              ??_mod1_LED 003E                                ??_mod2_LED 003E  
                              ??_mod3_LED 003E                                ??_mod4_LED 003E  
                _do_I2C_SEND_RESTART_READ 0E63                __size_of_SYSTEM_Initialize 001C  
                                 clrloop0 0EA5                      __size_of_returnReset 0002  
                    end_of_initialization 007A                   __end_of_clock_subfields 02D0  
                               _T2RSTbits 0291                      ??_i2c1_driver_isNACK 0070  
               __size_of_i2c_restartWrite 0002                                   init_ram 07FA  
            __end_of_i2c1_driver_sendNACK 0E55                    ?_rd1RegCompleteHandler 0079  
                                 initloop 07FB                      __end_of_INT_CallBack 0F3A  
                  ?_wr1RegCompleteHandler 0079              __end_of_i2c1_driver_resetBus 0E2E  
                              _reset_recv 06C3                 _do_I2C_SEND_RESTART_WRITE 0E68  
                        ?_ADCC_Initialize 0070                     __CFG_WDTCPS$WDTCPS_14 0000  
                              _returnStop 0E30                  _TMR0_SetInterruptHandler 0E92  
                               _PORTBbits 000D                                 _PORTCbits 000E  
         __end_of_rdBlkRegCompleteHandler 0791                  __end_of_do_I2C_SEND_STOP 0E77  
                    __CFG_WDTCCS$HFINTOSC 0000                __end_ofi1_checkDebounceSW1 0466  
                               _TRISCbits 0013      __size_of_i2c_setDataCompleteCallback 000D  
                             returnStop@p 0079                          __CFG_FEXTOSC$OFF 0000  
                       __size_of_ADC_read 001A                  __end_of_DATAEE_WriteByte 0664  
            i2c_setDataCompleteCallback@p 0077                            __end_of_ISR_3s 0761  
           __size_of_do_I2C_SEND_ADR_READ 0009                            _TMR0_StopTimer 0E32  
                             _do_I2C_IDLE 0E5E                               _do_I2C_RCEN 0EAA  
    __end_of_TMR2_DefaultInterruptHandler 0E2D     __size_of_TMR2_DefaultInterruptHandler 0001  
            _TMR2_DefaultInterruptHandler 0E2C                         __size_of_TMR0_ISR 000F  
                       __size_of_TMR1_ISR 0017                         __size_of_TMR2_ISR 000F  
                  ?_OSCILLATOR_Initialize 0070         __size_of_ADCC_GetConversionResult 0009  
               ??_INT_SetInterruptHandler 003C              __size_of_do_I2C_DO_NACK_STOP 0005  
               ?_ADCC_GetConversionResult 003A                    ??i1_PWM6_LoadDutyValue 0072  
                 ?_do_I2C_DO_NACK_RESTART 0070                       start_initialization 005D  
                     _i2c_busCollisionISR 0E55                  __size_of_TMR0_Initialize 0015  
         __size_of_PIN_MANAGER_Initialize 0049             __size_of_ADCC_StartConversion 0008  
                            setCallBack@p 0072              __size_of_i2c1_driver_sendACK 0004  
                        ?_clock_subfields 0070                   i2c_setBuffer@bufferSize 0070  
                 ??_i2c1_driver_getRXData 0070                    rd1RegCompleteHandler@p 0079  
                                ??_ISR_3s 0074              __size_of_i2c1_driver_restart 0003  
                 clock_subfields@subfield 0046              __size_of_i2c1_driver_startRX 0003  
                     DATAEE_ReadByte@bAdd 003A                     __end_of_i2c_setBuffer 0FAC  
            ?_INT_DefaultInterruptHandler 0070                    __end_of_TMR0_StopTimer 0E35  
                __end_of_handler_clock_ms 0F47                      ?_i2c_busCollisionISR 0070  
                        __CFG_LPBOREN$OFF 0000                               ?_reset_recv 0070  
                    __end_of_mssp1_setIRQ 0E44                  __size_of_TMR1_Initialize 001F  
                        ??_PMD_Initialize 003A                          _checkDebounceSW1 03CC  
                        _checkDebounceSW2 037F                    wr1RegCompleteHandler@p 0079  
                           ?_do_I2C_RESET 0070                               __pdataBANK0 0057  
              __end_of_EXT_INT_Initialize 0F6F             ?_TMR2_DefaultInterruptHandler 0070  
                             ?_returnStop 0079            __end_of_do_I2C_DO_NACK_RESTART 0E86  
                    _i2c1_driver_sendNACK 0E51                                  ?_LED_bin 003A  
                             __pbssCOMMON 007D                                 ___latbits 0002  
                    _i2c1_driver_resetBus 0E2D                                  ?_INT_ISR 0070  
                           __pcstackBANK0 0037                        _PWM6_LoadDutyValue 072F  
                __size_of_TMR2_Initialize 0018                                 _do_I2C_RX 0466  
                               _do_I2C_TX 032B                     __size_of_INT_CallBack 000D  
          __size_of_do_I2C_SEND_ADR_WRITE 0008                         __size_of_mod1_LED 000B  
                       __size_of_mod2_LED 000A             __end_of_do_I2C_SEND_ADR_WRITE 0ED7  
                       __size_of_mod3_LED 000B                         __size_of_mod4_LED 000B  
                     ?_PWM6_LoadDutyValue 003A                          _i2c_restartWrite 0E2E  
               __size_of_i2c1_driver_stop 0003                                  ?_i2c_ISR 0070  
                         _do_I2C_TX_EMPTY 0539                     _TMR0_InterruptHandler 004D  
                           ??_setCallBack 0073                                 __pnvBANK0 004D  
                   _rd2RegCompleteHandler 07E9                  __size_of_TMR0_StartTimer 0003  
                         ?_TMR0_StopTimer 0070                     ??_i2c_busCollisionISR 0070  
                   __end_of_fsmStateTable 0684                    _PIN_MANAGER_Initialize 04B0  
                   _wr2RegCompleteHandler 0FCD             ??_INT_DefaultInterruptHandler 0070  
                 __size_of_config_routine 00A8          __end_of_TMR1_SetInterruptHandler 0E9E  
                          ??_do_I2C_RESET 0070                  ??_do_I2C_DO_ADDRESS_NACK 007A  
             _i2c1_driver_busCollisionISR 002C                                  ?_all_LED 0070  
                   __end_of_do_I2C_DO_ACK 0E7C                      ??_PWM6_LoadDutyValue 003C  
                           ??_recoverData 0046              ??_INTERRUPT_InterruptManager 007D  
              ??_do_I2C_SEND_RESTART_READ 0070                     ?_i2c1_driver_sendNACK 0070  
                                ?_sw1_EXT 0070                                  ?_cksum_w 0070  
                            _INT_CallBack 0F2D                          ??_mssp1_clearIRQ 0070  
                   ?_i2c1_driver_resetBus 0070        __size_of_do_I2C_SEND_RESTART_WRITE 0005  
                                _ADC_read 0715                                ?_do_I2C_RX 0070  
                              ?_do_I2C_TX 0070                  __size_of_PWM6_Initialize 000D  
                     __size_of_reset_recv 001C                            __size_of_cksum 0020  
                               _level_bin 0022                                  _T2CLKCON 0290  
                __size_of_DATAEE_ReadByte 000F                   ??_rd1RegCompleteHandler 007A  
                 ??_wr1RegCompleteHandler 007A                     _ADCC_IsConversionDone 0EB1  
                       ??_TMR0_Initialize 003C                                  _LATAbits 0016  
                     __size_of_returnStop 0002                                 clear_ram0 0EA4  
                                _PIE0bits 0716                         _handler_clock_hms 0599  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 0057  
                           _lum_threshold 0020                ??_TMR0_SetInterruptHandler 003C  
                                _PIR0bits 070C                               _config_mode 007D  
                                _PIR3bits 070F                                  _PIR4bits 0710  
                      ?_handler_clock_hms 0070                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR0_ISR 0F6F  
                                _TMR1_ISR 0791                                  _TMR2_ISR 0F7E  
            ?_i2c_setDataCompleteCallback 0075                                  _SSP1STAT 018F  
                     __end_of_setCallBack 0640                       ??_handler_clock_hms 0070  
                       ??_TMR1_Initialize 003C                                _ADCON0bits 0093  
                              _ADCON1bits 0094                                _ADCON2bits 0095  
                              _ADCON3bits 0096                         ?_do_I2C_SEND_STOP 0070  
                                _WPUBbits 0F44                __end_of_increment_subfield 0539  
    __size_of_INT_DefaultInterruptHandler 0001            ??_TMR2_DefaultInterruptHandler 0070  
       __size_of_TMR2_SetInterruptHandler 0006                             ??_returnReset 007A  
               ?_TMR2_SetInterruptHandler 003A                        ??_do_I2C_SEND_STOP 0070  
             __size_of_i2c1_driver_TXData 0005                          __size_of_LED_bin 001A  
                   DATAEE_WriteByte@bData 0042                       __end_of_recoverData 026D  
       __end_of_do_I2C_SEND_RESTART_WRITE 0E6D                          __size_of_INT_ISR 0006  
                 __end_of_do_I2C_TX_EMPTY 056C                  ?_rdBlkRegCompleteHandler 0079  
                       ?_DATAEE_WriteByte 0040              __size_of_do_I2C_SEND_RESTART 0005  
             __size_of_i2c1_driver_isNACK 0008                 __end_of_handler_clock_hms 05C6  
                   __size_of_mssp1_setIRQ 0003                         ??_TMR2_Initialize 003C  
                  ?_rd2RegCompleteHandler 0079                        ??_DATAEE_WriteByte 0043  
                      i1_checkDebounceSW1 0419                       _do_I2C_DO_NACK_STOP 0E7C  
                        __size_of_i2c_ISR 002D                    ?_wr2RegCompleteHandler 0079  
                              _ADSTATbits 0097          __end_of_ADCC_GetConversionResult 0EF9  
                            ?_do_I2C_IDLE 0070                       ?i1_checkDebounceSW1 0070  
                            ?_do_I2C_RCEN 0070                   ??_OSCILLATOR_Initialize 003A  
                       ??_TMR0_StartTimer 003A                       _i2c1_driver_sendACK 0E4D  
         __size_of_do_I2C_DO_ADDRESS_NACK 002C                       i2c1_driver_TXData@d 0070  
                  ??_i2c1_driver_sendNACK 0070             ??_i2c_setDataCompleteCallback 0078  
                        __size_of_all_LED 005B                       _i2c1_driver_restart 0E35  
                _TMR1_SetInterruptHandler 0E98                      ?_do_I2C_DO_NACK_STOP 0070  
                     _i2c1_driver_startRX 0E3B              __end_of_do_I2C_SEND_ADR_READ 0EF0  
                  ??_i2c1_driver_resetBus 0070                     _TMR1_InterruptHandler 0051  
                        __size_of_sw1_EXT 0028                          __size_of_cksum_w 0010  
                              _T0CON0bits 001E                  __size_of_ADCC_Initialize 0016  
                            _mssp1_setIRQ 0E41                               ??_do_I2C_RX 007A  
                             ??_do_I2C_TX 007A                      ??i1_checkDebounceSW1 0070  
                                __ptext10 0F17                                  __ptext11 0F02  
                                __ptext20 0761                                  __ptext12 0F0C  
                                __ptext21 0E9E                                  __ptext13 04F9  
                              _T1GCONbits 020F                                  __ptext30 0F61  
                                __ptext22 06A4                                  __ptext14 037F  
                                __ptext31 0E8C                                  __ptext23 0E98  
                                __ptext15 03CC                                  __ptext40 0E47  
                                __ptext32 07A8                                  __ptext24 07D4  
                                __ptext16 02D0                                  __ptext41 056C  
                                __ptext33 06FB                                  __ptext25 0E92  
                                __ptext17 072F                                  __ptext50 0ECF  
                                __ptext42 0E44                                  __ptext34 0715  
                                __ptext26 0F54                                  __ptext18 0E4A  
                                __ptext51 0EE7                                  __ptext43 0466  
                                __ptext35 0ED7                                  __ptext27 0EDF  
                                __ptext19 06DF                                  __ptext60 0EBF  
                                __ptext52 0E72                                  __ptext44 032B  
                                __ptext36 0EB1                                  __ptext28 04B0  
                                __ptext61 0E59                                  __ptext53 0E6D  
                                __ptext45 05C6                                  __ptext37 0EF0  
                                __ptext29 0EF9                                  __ptext70 0002  
                                __ptext62 0E3E                                  __ptext54 0E68  
                                __ptext46 0E81                                  __ptext71 0E30  
                                __ptext63 0E51                                  __ptext55 0E63  
                                __ptext47 0E7C                                  __ptext39 0E55  
                                __ptext80 0F7E                                  __ptext72 0E2E  
                                __ptext64 0E2D                                  __ptext56 0E5E  
                                __ptext48 0E77                                  __ptext81 0E2C  
                                __ptext73 0FCD                                  __ptext65 0E3B  
                                __ptext57 0EC7                                  __ptext49 0EAA  
                                __ptext90 0E32                                  __ptext82 0F3A  
                                __ptext74 0F47                                  __ptext66 0779  
                                __ptext58 0539                                  __ptext91 0E86  
                                __ptext83 0791                                  __ptext75 061A  
                                __ptext67 07E9                                  __ptext59 0E41  
                                __ptext92 0F2D                                  __ptext84 0E2B  
                                __ptext76 0F9C                                  __ptext68 0FEF  
                                __ptext93 0E29                                  __ptext85 0599  
                                __ptext77 0E38                                  __ptext69 0FDE  
                                __ptext94 05F2                                  __ptext86 0FBC  
                                __ptext78 0E35                                  __ptext95 0419  
                                __ptext87 0F6F                                  __ptext79 0E4D  
                                __ptext96 07BE                                  __ptext88 0748  
                                __ptext89 0E2A                                  _mod1_LED 0F0C  
                            _SSP1CON1bits 0190                                  _mod2_LED 0F02  
                __end_of_checkDebounceSW1 0419                              _SSP1CON2bits 0191  
                __end_of_checkDebounceSW2 03CC                                  _mod3_LED 0F17  
                                _mod4_LED 0F22                    ?_ADCC_IsConversionDone 0070  
                    ?_i2c1_driver_sendACK 0070                      __end_of_do_I2C_RESET 0ECF  
             DATAEE_WriteByte@GIEBitValue 0043                      ?_i2c1_driver_restart 0070  
                     __end_of_returnReset 0004                                  _last_ms2 0031  
                       ??_PWM6_Initialize 003A                          _i2c1_driver_stop 0E38  
                           __size_of_main 00AF                      ?_i2c1_driver_startRX 0070  
          __size_of_i2c1_driver_getRXData 0003             __end_of_i2c1_driver_getRXData 0E41  
    __end_of_TMR0_DefaultInterruptHandler 0E2B     __size_of_TMR0_DefaultInterruptHandler 0001  
            _TMR0_DefaultInterruptHandler 0E2A                         ??_DATAEE_ReadByte 003C  
                    __CFG_WDTCWS$WDTCWS_7 0000                               _setCallBack 061A  
                            ??_reset_recv 0044                         ?_handler_clock_ms 0070  
                                _set_mode 0030                            _config_routine 012D  
            __end_of_ADCC_StartConversion 0EDF                                  int$flags 007E  
                      ??_handler_clock_ms 0070        __end_of_INTERRUPT_InterruptManager 005B  
              _INTERRUPT_InterruptManager 0004                       _mode_field_subfield 0057  
                            _SSP1STATbits 018F                         ??_TMR1_WriteTimer 0072  
                                cksum@res 003D          __end_of_do_I2C_SEND_RESTART_READ 0E68  
                            ??_returnStop 007A                  __end_of_i2c_restartWrite 0E30  
                   ??_do_I2C_DO_NACK_STOP 0070                               _recoverData 01D5  
                              _INTCONbits 000B                               _NVMCON1bits 081E  
           __size_ofi1_PWM6_LoadDutyValue 0016                      _INT_InterruptHandler 0055  
                      __end_of_reset_recv 06DF                     ??_i2c1_driver_sendACK 0070  
                      _EXT_INT_Initialize 0F61                          ?_do_I2C_TX_EMPTY 0070  
                  _do_I2C_DO_ADDRESS_NACK 05C6                                  intlevel1 0000  
                        ??_TMR0_StopTimer 0070                     ??_i2c1_driver_restart 0070  
              __size_of_handler_clock_hms 002D                    rd2RegCompleteHandler@p 0079  
                   ??_i2c1_driver_startRX 0070                   ?_PIN_MANAGER_Initialize 0070  
                       i2c_restartWrite@p 0079                         __CFG_CLKOUTEN$OFF 0000  
                     ?_EXT_INT_Initialize 0070                        __end_of_returnStop 0E32  
                  __end_of_config_routine 01D5             ?_TMR0_DefaultInterruptHandler 0070  
                __size_of_clock_subfields 0063                    wr2RegCompleteHandler@p 0079  
                ?_INT_SetInterruptHandler 003A                  _ADCC_GetConversionResult 0EF0  
                           __pstringtext1 0664                      ??_EXT_INT_Initialize 003C  
                              _SSP1DATPPS 0EC6                                _SSP1CLKPPS 0EC5  
                         _TMR0_Initialize 07D4                    __size_of_i2c_setBuffer 0010  
                             _returnReset 0002               PWM6_LoadDutyValue@dutyValue 003A  
          __end_of_PIN_MANAGER_Initialize 04F9                         ??_ADCC_Initialize 003A  
             __end_of_i2c_busCollisionISR 0E59            __size_of_rd1RegCompleteHandler 0011  
           __end_of_rd1RegCompleteHandler 1000            __size_of_wr1RegCompleteHandler 0011  
           __end_of_wr1RegCompleteHandler 0FEF                     _TMR2_InterruptHandler 004F  
                   _do_I2C_SEND_ADR_WRITE 0ECF                      _do_I2C_SEND_ADR_READ 0EE7  
                         ?_config_routine 0070                           _TMR1_Initialize 06A4  
