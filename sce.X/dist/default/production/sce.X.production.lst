

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
<<<<<<< HEAD
                                                                                               Thu Oct 31 17:10:46 2019
=======
                                                                                               Wed Oct 30 12:20:19 2019
>>>>>>> 8a784acfeed5fb28f801f16fe528231cbb0c7541

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
<<<<<<< HEAD
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,inline,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,delta=2
    62                           	psect	text50,local,class=CODE,merge=1,delta=2
    63                           	psect	text51,local,class=CODE,merge=1,delta=2
    64                           	psect	text52,local,class=CODE,merge=1,delta=2
    65                           	psect	text53,local,class=CODE,merge=1,delta=2
    66                           	psect	text54,local,class=CODE,merge=1,delta=2
    67                           	psect	text55,local,class=CODE,merge=1,inline,delta=2
    68                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text58,local,class=CODE,merge=1,delta=2
    71                           	psect	text59,local,class=CODE,merge=1,delta=2
    72                           	psect	text60,local,class=CODE,merge=1,delta=2
    73                           	psect	text61,local,class=CODE,merge=1,delta=2
    74                           	psect	text62,local,class=CODE,merge=1,delta=2
    75                           	dabs	1,0x7E,2
    76  0000                     
    77                           ; Version 2.10
    78                           ; Generated 31/07/2019 GMT
    79                           ; 
    80                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC16F18875 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001C                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  008C                     	;# 
   145  008C                     	;# 
   146  008D                     	;# 
   147  008E                     	;# 
   148  008E                     	;# 
   149  008F                     	;# 
   150  0090                     	;# 
   151  0090                     	;# 
   152  0091                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0095                     	;# 
   156  0096                     	;# 
   157  0097                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009A                     	;# 
   161  009B                     	;# 
   162  009C                     	;# 
   163  009D                     	;# 
   164  009E                     	;# 
   165  010C                     	;# 
   166  010D                     	;# 
   167  010E                     	;# 
   168  010E                     	;# 
   169  010F                     	;# 
   170  0110                     	;# 
   171  0110                     	;# 
   172  0111                     	;# 
   173  0112                     	;# 
   174  0112                     	;# 
   175  0113                     	;# 
   176  0114                     	;# 
   177  0114                     	;# 
   178  0115                     	;# 
   179  0116                     	;# 
   180  0116                     	;# 
   181  0117                     	;# 
   182  0119                     	;# 
   183  0119                     	;# 
   184  0119                     	;# 
   185  011A                     	;# 
   186  011A                     	;# 
   187  011A                     	;# 
   188  011B                     	;# 
   189  011B                     	;# 
   190  011B                     	;# 
   191  011B                     	;# 
   192  011B                     	;# 
   193  011C                     	;# 
   194  011C                     	;# 
   195  011C                     	;# 
   196  011D                     	;# 
   197  011D                     	;# 
   198  011D                     	;# 
   199  011E                     	;# 
   200  011E                     	;# 
   201  011E                     	;# 
   202  011F                     	;# 
   203  011F                     	;# 
   204  011F                     	;# 
   205  011F                     	;# 
   206  011F                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  018E                     	;# 
   210  018F                     	;# 
   211  0190                     	;# 
   212  0191                     	;# 
   213  0192                     	;# 
   214  0196                     	;# 
   215  0197                     	;# 
   216  0198                     	;# 
   217  0199                     	;# 
   218  019A                     	;# 
   219  019B                     	;# 
   220  019C                     	;# 
   221  020C                     	;# 
   222  020C                     	;# 
   223  020D                     	;# 
   224  020E                     	;# 
   225  020F                     	;# 
   226  020F                     	;# 
   227  0210                     	;# 
   228  0210                     	;# 
   229  0211                     	;# 
   230  0211                     	;# 
   231  0212                     	;# 
   232  0212                     	;# 
   233  0213                     	;# 
   234  0214                     	;# 
   235  0215                     	;# 
   236  0215                     	;# 
   237  0216                     	;# 
   238  0216                     	;# 
   239  0217                     	;# 
   240  0217                     	;# 
   241  0218                     	;# 
   242  0218                     	;# 
   243  0219                     	;# 
   244  021A                     	;# 
   245  021B                     	;# 
   246  021B                     	;# 
   247  021C                     	;# 
   248  021C                     	;# 
   249  021D                     	;# 
   250  021D                     	;# 
   251  021E                     	;# 
   252  021F                     	;# 
   253  028C                     	;# 
   254  028C                     	;# 
   255  028D                     	;# 
   256  028D                     	;# 
   257  028E                     	;# 
   258  028F                     	;# 
   259  0290                     	;# 
   260  0290                     	;# 
   261  0291                     	;# 
   262  0292                     	;# 
   263  0292                     	;# 
   264  0293                     	;# 
   265  0293                     	;# 
   266  0294                     	;# 
   267  0295                     	;# 
   268  0296                     	;# 
   269  0296                     	;# 
   270  0297                     	;# 
   271  0298                     	;# 
   272  0298                     	;# 
   273  0299                     	;# 
   274  0299                     	;# 
   275  029A                     	;# 
   276  029B                     	;# 
   277  029C                     	;# 
   278  029C                     	;# 
   279  029D                     	;# 
   280  030C                     	;# 
   281  030C                     	;# 
   282  030D                     	;# 
   283  030E                     	;# 
   284  030F                     	;# 
   285  0310                     	;# 
   286  0310                     	;# 
   287  0311                     	;# 
   288  0312                     	;# 
   289  0313                     	;# 
   290  0314                     	;# 
   291  0314                     	;# 
   292  0315                     	;# 
   293  0316                     	;# 
   294  0317                     	;# 
   295  0318                     	;# 
   296  0318                     	;# 
   297  0319                     	;# 
   298  031A                     	;# 
   299  031B                     	;# 
   300  031C                     	;# 
   301  031C                     	;# 
   302  031D                     	;# 
   303  031E                     	;# 
   304  031F                     	;# 
   305  038C                     	;# 
   306  038C                     	;# 
   307  038D                     	;# 
   308  038E                     	;# 
   309  0390                     	;# 
   310  0390                     	;# 
   311  0391                     	;# 
   312  0392                     	;# 
   313  040C                     	;# 
   314  040D                     	;# 
   315  040E                     	;# 
   316  040F                     	;# 
   317  0410                     	;# 
   318  0411                     	;# 
   319  0416                     	;# 
   320  0416                     	;# 
   321  0417                     	;# 
   322  0418                     	;# 
   323  0418                     	;# 
   324  0419                     	;# 
   325  041A                     	;# 
   326  041A                     	;# 
   327  041B                     	;# 
   328  041C                     	;# 
   329  041C                     	;# 
   330  041D                     	;# 
   331  041E                     	;# 
   332  041F                     	;# 
   333  048C                     	;# 
   334  048C                     	;# 
   335  048D                     	;# 
   336  048E                     	;# 
   337  048F                     	;# 
   338  048F                     	;# 
   339  0490                     	;# 
   340  0491                     	;# 
   341  0492                     	;# 
   342  0492                     	;# 
   343  0493                     	;# 
   344  0494                     	;# 
   345  0495                     	;# 
   346  0495                     	;# 
   347  0496                     	;# 
   348  0497                     	;# 
   349  0498                     	;# 
   350  0499                     	;# 
   351  049A                     	;# 
   352  049B                     	;# 
   353  049C                     	;# 
   354  049D                     	;# 
   355  050C                     	;# 
   356  050C                     	;# 
   357  050D                     	;# 
   358  050E                     	;# 
   359  050F                     	;# 
   360  050F                     	;# 
   361  0510                     	;# 
   362  0511                     	;# 
   363  0512                     	;# 
   364  0512                     	;# 
   365  0513                     	;# 
   366  0514                     	;# 
   367  0515                     	;# 
   368  0515                     	;# 
   369  0516                     	;# 
   370  0517                     	;# 
   371  0518                     	;# 
   372  0519                     	;# 
   373  051A                     	;# 
   374  051B                     	;# 
   375  051C                     	;# 
   376  051D                     	;# 
   377  058C                     	;# 
   378  058C                     	;# 
   379  058D                     	;# 
   380  058E                     	;# 
   381  058F                     	;# 
   382  058F                     	;# 
   383  0590                     	;# 
   384  0591                     	;# 
   385  0592                     	;# 
   386  0593                     	;# 
   387  060C                     	;# 
   388  060D                     	;# 
   389  060E                     	;# 
   390  060F                     	;# 
   391  0610                     	;# 
   392  0611                     	;# 
   393  0612                     	;# 
   394  0613                     	;# 
   395  0614                     	;# 
   396  0616                     	;# 
   397  0617                     	;# 
   398  0618                     	;# 
   399  0619                     	;# 
   400  061A                     	;# 
   401  061B                     	;# 
   402  061C                     	;# 
   403  061D                     	;# 
   404  061E                     	;# 
   405  068C                     	;# 
   406  068D                     	;# 
   407  068E                     	;# 
   408  068F                     	;# 
   409  0690                     	;# 
   410  0691                     	;# 
   411  0692                     	;# 
   412  0693                     	;# 
   413  0694                     	;# 
   414  070C                     	;# 
   415  070D                     	;# 
   416  070E                     	;# 
   417  070F                     	;# 
   418  0710                     	;# 
   419  0711                     	;# 
   420  0712                     	;# 
   421  0713                     	;# 
   422  0714                     	;# 
   423  0716                     	;# 
   424  0717                     	;# 
   425  0718                     	;# 
   426  0719                     	;# 
   427  071A                     	;# 
   428  071B                     	;# 
   429  071C                     	;# 
   430  071D                     	;# 
   431  071E                     	;# 
   432  0796                     	;# 
   433  0797                     	;# 
   434  0798                     	;# 
   435  0799                     	;# 
   436  079A                     	;# 
   437  079B                     	;# 
   438  080C                     	;# 
   439  080D                     	;# 
   440  080E                     	;# 
   441  080F                     	;# 
   442  0810                     	;# 
   443  0811                     	;# 
   444  0812                     	;# 
   445  0813                     	;# 
   446  0814                     	;# 
   447  081A                     	;# 
   448  081B                     	;# 
   449  081C                     	;# 
   450  081D                     	;# 
   451  081E                     	;# 
   452  081F                     	;# 
   453  088C                     	;# 
   454  088D                     	;# 
   455  088E                     	;# 
   456  088F                     	;# 
   457  0890                     	;# 
   458  0891                     	;# 
   459  0892                     	;# 
   460  0893                     	;# 
   461  0895                     	;# 
   462  0896                     	;# 
   463  0897                     	;# 
   464  0898                     	;# 
   465  0899                     	;# 
   466  089A                     	;# 
   467  089B                     	;# 
   468  090C                     	;# 
   469  090E                     	;# 
   470  090F                     	;# 
   471  091F                     	;# 
   472  091F                     	;# 
   473  098F                     	;# 
   474  098F                     	;# 
   475  0990                     	;# 
   476  0991                     	;# 
   477  0992                     	;# 
   478  0993                     	;# 
   479  0994                     	;# 
   480  0995                     	;# 
   481  0996                     	;# 
   482  0997                     	;# 
   483  0E0F                     	;# 
   484  0E10                     	;# 
   485  0E11                     	;# 
   486  0E12                     	;# 
   487  0E13                     	;# 
   488  0E14                     	;# 
   489  0E15                     	;# 
   490  0E16                     	;# 
   491  0E17                     	;# 
   492  0E18                     	;# 
   493  0E19                     	;# 
   494  0E1A                     	;# 
   495  0E1B                     	;# 
   496  0E1C                     	;# 
   497  0E1D                     	;# 
   498  0E1E                     	;# 
   499  0E1F                     	;# 
   500  0E20                     	;# 
   501  0E21                     	;# 
   502  0E22                     	;# 
   503  0E23                     	;# 
   504  0E24                     	;# 
   505  0E25                     	;# 
   506  0E26                     	;# 
   507  0E27                     	;# 
   508  0E28                     	;# 
   509  0E29                     	;# 
   510  0E2A                     	;# 
   511  0E2B                     	;# 
   512  0E2C                     	;# 
   513  0E2D                     	;# 
   514  0E2E                     	;# 
   515  0E2F                     	;# 
   516  0E30                     	;# 
   517  0E31                     	;# 
   518  0E32                     	;# 
   519  0E33                     	;# 
   520  0E34                     	;# 
   521  0E35                     	;# 
   522  0E36                     	;# 
   523  0E37                     	;# 
   524  0E8F                     	;# 
   525  0E90                     	;# 
   526  0E91                     	;# 
   527  0E92                     	;# 
   528  0E93                     	;# 
   529  0E94                     	;# 
   530  0E95                     	;# 
   531  0E96                     	;# 
   532  0E97                     	;# 
   533  0E9C                     	;# 
   534  0E9D                     	;# 
   535  0E9E                     	;# 
   536  0EA1                     	;# 
   537  0EA2                     	;# 
   538  0EA3                     	;# 
   539  0EA4                     	;# 
   540  0EA5                     	;# 
   541  0EA9                     	;# 
   542  0EAA                     	;# 
   543  0EAB                     	;# 
   544  0EAC                     	;# 
   545  0EB1                     	;# 
   546  0EB2                     	;# 
   547  0EB3                     	;# 
   548  0EB8                     	;# 
   549  0EB9                     	;# 
   550  0EBA                     	;# 
   551  0EBB                     	;# 
   552  0EBC                     	;# 
   553  0EBD                     	;# 
   554  0EBE                     	;# 
   555  0EC3                     	;# 
   556  0EC5                     	;# 
   557  0EC6                     	;# 
   558  0EC7                     	;# 
   559  0EC8                     	;# 
   560  0EC9                     	;# 
   561  0ECA                     	;# 
   562  0ECB                     	;# 
   563  0ECC                     	;# 
   564  0F10                     	;# 
   565  0F11                     	;# 
   566  0F12                     	;# 
   567  0F13                     	;# 
   568  0F14                     	;# 
   569  0F15                     	;# 
   570  0F16                     	;# 
   571  0F17                     	;# 
   572  0F18                     	;# 
   573  0F19                     	;# 
   574  0F1A                     	;# 
   575  0F1B                     	;# 
   576  0F1C                     	;# 
   577  0F1D                     	;# 
   578  0F1E                     	;# 
   579  0F1F                     	;# 
   580  0F20                     	;# 
   581  0F21                     	;# 
   582  0F22                     	;# 
   583  0F23                     	;# 
   584  0F24                     	;# 
   585  0F25                     	;# 
   586  0F26                     	;# 
   587  0F27                     	;# 
   588  0F28                     	;# 
   589  0F29                     	;# 
   590  0F2A                     	;# 
   591  0F2B                     	;# 
   592  0F2C                     	;# 
   593  0F2D                     	;# 
   594  0F2E                     	;# 
   595  0F2F                     	;# 
   596  0F30                     	;# 
   597  0F31                     	;# 
   598  0F32                     	;# 
   599  0F38                     	;# 
   600  0F39                     	;# 
   601  0F3A                     	;# 
   602  0F3B                     	;# 
   603  0F3C                     	;# 
   604  0F3D                     	;# 
   605  0F3E                     	;# 
   606  0F3F                     	;# 
   607  0F40                     	;# 
   608  0F41                     	;# 
   609  0F43                     	;# 
   610  0F44                     	;# 
   611  0F45                     	;# 
   612  0F46                     	;# 
   613  0F47                     	;# 
   614  0F48                     	;# 
   615  0F49                     	;# 
   616  0F4A                     	;# 
   617  0F4B                     	;# 
   618  0F4C                     	;# 
   619  0F4E                     	;# 
   620  0F4F                     	;# 
   621  0F50                     	;# 
   622  0F51                     	;# 
   623  0F52                     	;# 
   624  0F53                     	;# 
   625  0F54                     	;# 
   626  0F55                     	;# 
   627  0F56                     	;# 
   628  0F57                     	;# 
   629  0F59                     	;# 
   630  0F5A                     	;# 
   631  0F5B                     	;# 
   632  0F5C                     	;# 
   633  0F5D                     	;# 
   634  0F61                     	;# 
   635  0F62                     	;# 
   636  0F64                     	;# 
   637  0F65                     	;# 
   638  0F66                     	;# 
   639  0F67                     	;# 
   640  0F68                     	;# 
   641  0F69                     	;# 
   642  0F6A                     	;# 
   643  0F6B                     	;# 
   644  0F6C                     	;# 
   645  0F6D                     	;# 
   646  0FE4                     	;# 
   647  0FE5                     	;# 
   648  0FE6                     	;# 
   649  0FE7                     	;# 
   650  0FE8                     	;# 
   651  0FE9                     	;# 
   652  0FEA                     	;# 
   653  0FEB                     	;# 
   654  0FED                     	;# 
   655  0FEE                     	;# 
   656  0FEF                     	;# 
   657  0000                     	;# 
   658  0001                     	;# 
   659  0002                     	;# 
   660  0003                     	;# 
   661  0004                     	;# 
   662  0005                     	;# 
   663  0006                     	;# 
   664  0007                     	;# 
   665  0008                     	;# 
   666  0009                     	;# 
   667  000A                     	;# 
   668  000B                     	;# 
   669  000C                     	;# 
   670  000D                     	;# 
   671  000E                     	;# 
   672  000F                     	;# 
   673  0010                     	;# 
   674  0011                     	;# 
   675  0012                     	;# 
   676  0013                     	;# 
   677  0014                     	;# 
   678  0015                     	;# 
   679  0016                     	;# 
   680  0017                     	;# 
   681  0018                     	;# 
   682  0019                     	;# 
   683  001A                     	;# 
   684  001C                     	;# 
   685  001C                     	;# 
   686  001D                     	;# 
   687  001D                     	;# 
   688  001E                     	;# 
   689  001F                     	;# 
   690  008C                     	;# 
   691  008C                     	;# 
   692  008D                     	;# 
   693  008E                     	;# 
   694  008E                     	;# 
   695  008F                     	;# 
   696  0090                     	;# 
   697  0090                     	;# 
   698  0091                     	;# 
   699  0093                     	;# 
   700  0094                     	;# 
   701  0095                     	;# 
   702  0096                     	;# 
   703  0097                     	;# 
   704  0098                     	;# 
   705  0099                     	;# 
   706  009A                     	;# 
   707  009B                     	;# 
   708  009C                     	;# 
   709  009D                     	;# 
   710  009E                     	;# 
   711  010C                     	;# 
   712  010D                     	;# 
   713  010E                     	;# 
   714  010E                     	;# 
   715  010F                     	;# 
   716  0110                     	;# 
   717  0110                     	;# 
   718  0111                     	;# 
   719  0112                     	;# 
   720  0112                     	;# 
   721  0113                     	;# 
   722  0114                     	;# 
   723  0114                     	;# 
   724  0115                     	;# 
   725  0116                     	;# 
   726  0116                     	;# 
   727  0117                     	;# 
   728  0119                     	;# 
   729  0119                     	;# 
   730  0119                     	;# 
   731  011A                     	;# 
   732  011A                     	;# 
   733  011A                     	;# 
   734  011B                     	;# 
   735  011B                     	;# 
   736  011B                     	;# 
   737  011B                     	;# 
   738  011B                     	;# 
   739  011C                     	;# 
   740  011C                     	;# 
   741  011C                     	;# 
   742  011D                     	;# 
   743  011D                     	;# 
   744  011D                     	;# 
   745  011E                     	;# 
   746  011E                     	;# 
   747  011E                     	;# 
   748  011F                     	;# 
   749  011F                     	;# 
   750  011F                     	;# 
   751  011F                     	;# 
   752  011F                     	;# 
   753  018C                     	;# 
   754  018D                     	;# 
   755  018E                     	;# 
   756  018F                     	;# 
   757  0190                     	;# 
   758  0191                     	;# 
   759  0192                     	;# 
   760  0196                     	;# 
   761  0197                     	;# 
   762  0198                     	;# 
   763  0199                     	;# 
   764  019A                     	;# 
   765  019B                     	;# 
   766  019C                     	;# 
   767  020C                     	;# 
   768  020C                     	;# 
   769  020D                     	;# 
   770  020E                     	;# 
   771  020F                     	;# 
   772  020F                     	;# 
   773  0210                     	;# 
   774  0210                     	;# 
   775  0211                     	;# 
   776  0211                     	;# 
   777  0212                     	;# 
   778  0212                     	;# 
   779  0213                     	;# 
   780  0214                     	;# 
   781  0215                     	;# 
   782  0215                     	;# 
   783  0216                     	;# 
   784  0216                     	;# 
   785  0217                     	;# 
   786  0217                     	;# 
   787  0218                     	;# 
   788  0218                     	;# 
   789  0219                     	;# 
   790  021A                     	;# 
   791  021B                     	;# 
   792  021B                     	;# 
   793  021C                     	;# 
   794  021C                     	;# 
   795  021D                     	;# 
   796  021D                     	;# 
   797  021E                     	;# 
   798  021F                     	;# 
   799  028C                     	;# 
   800  028C                     	;# 
   801  028D                     	;# 
   802  028D                     	;# 
   803  028E                     	;# 
   804  028F                     	;# 
   805  0290                     	;# 
   806  0290                     	;# 
   807  0291                     	;# 
   808  0292                     	;# 
   809  0292                     	;# 
   810  0293                     	;# 
   811  0293                     	;# 
   812  0294                     	;# 
   813  0295                     	;# 
   814  0296                     	;# 
   815  0296                     	;# 
   816  0297                     	;# 
   817  0298                     	;# 
   818  0298                     	;# 
   819  0299                     	;# 
   820  0299                     	;# 
   821  029A                     	;# 
   822  029B                     	;# 
   823  029C                     	;# 
   824  029C                     	;# 
   825  029D                     	;# 
   826  030C                     	;# 
   827  030C                     	;# 
   828  030D                     	;# 
   829  030E                     	;# 
   830  030F                     	;# 
   831  0310                     	;# 
   832  0310                     	;# 
   833  0311                     	;# 
   834  0312                     	;# 
   835  0313                     	;# 
   836  0314                     	;# 
   837  0314                     	;# 
   838  0315                     	;# 
   839  0316                     	;# 
   840  0317                     	;# 
   841  0318                     	;# 
   842  0318                     	;# 
   843  0319                     	;# 
   844  031A                     	;# 
   845  031B                     	;# 
   846  031C                     	;# 
   847  031C                     	;# 
   848  031D                     	;# 
   849  031E                     	;# 
   850  031F                     	;# 
   851  038C                     	;# 
   852  038C                     	;# 
   853  038D                     	;# 
   854  038E                     	;# 
   855  0390                     	;# 
   856  0390                     	;# 
   857  0391                     	;# 
   858  0392                     	;# 
   859  040C                     	;# 
   860  040D                     	;# 
   861  040E                     	;# 
   862  040F                     	;# 
   863  0410                     	;# 
   864  0411                     	;# 
   865  0416                     	;# 
   866  0416                     	;# 
   867  0417                     	;# 
   868  0418                     	;# 
   869  0418                     	;# 
   870  0419                     	;# 
   871  041A                     	;# 
   872  041A                     	;# 
   873  041B                     	;# 
   874  041C                     	;# 
   875  041C                     	;# 
   876  041D                     	;# 
   877  041E                     	;# 
   878  041F                     	;# 
   879  048C                     	;# 
   880  048C                     	;# 
   881  048D                     	;# 
   882  048E                     	;# 
   883  048F                     	;# 
   884  048F                     	;# 
   885  0490                     	;# 
   886  0491                     	;# 
   887  0492                     	;# 
   888  0492                     	;# 
   889  0493                     	;# 
   890  0494                     	;# 
   891  0495                     	;# 
   892  0495                     	;# 
   893  0496                     	;# 
   894  0497                     	;# 
   895  0498                     	;# 
   896  0499                     	;# 
   897  049A                     	;# 
   898  049B                     	;# 
   899  049C                     	;# 
   900  049D                     	;# 
   901  050C                     	;# 
   902  050C                     	;# 
   903  050D                     	;# 
   904  050E                     	;# 
   905  050F                     	;# 
   906  050F                     	;# 
   907  0510                     	;# 
   908  0511                     	;# 
   909  0512                     	;# 
   910  0512                     	;# 
   911  0513                     	;# 
   912  0514                     	;# 
   913  0515                     	;# 
   914  0515                     	;# 
   915  0516                     	;# 
   916  0517                     	;# 
   917  0518                     	;# 
   918  0519                     	;# 
   919  051A                     	;# 
   920  051B                     	;# 
   921  051C                     	;# 
   922  051D                     	;# 
   923  058C                     	;# 
   924  058C                     	;# 
   925  058D                     	;# 
   926  058E                     	;# 
   927  058F                     	;# 
   928  058F                     	;# 
   929  0590                     	;# 
   930  0591                     	;# 
   931  0592                     	;# 
   932  0593                     	;# 
   933  060C                     	;# 
   934  060D                     	;# 
   935  060E                     	;# 
   936  060F                     	;# 
   937  0610                     	;# 
   938  0611                     	;# 
   939  0612                     	;# 
   940  0613                     	;# 
   941  0614                     	;# 
   942  0616                     	;# 
   943  0617                     	;# 
   944  0618                     	;# 
   945  0619                     	;# 
   946  061A                     	;# 
   947  061B                     	;# 
   948  061C                     	;# 
   949  061D                     	;# 
   950  061E                     	;# 
   951  068C                     	;# 
   952  068D                     	;# 
   953  068E                     	;# 
   954  068F                     	;# 
   955  0690                     	;# 
   956  0691                     	;# 
   957  0692                     	;# 
   958  0693                     	;# 
   959  0694                     	;# 
   960  070C                     	;# 
   961  070D                     	;# 
   962  070E                     	;# 
   963  070F                     	;# 
   964  0710                     	;# 
   965  0711                     	;# 
   966  0712                     	;# 
   967  0713                     	;# 
   968  0714                     	;# 
   969  0716                     	;# 
   970  0717                     	;# 
   971  0718                     	;# 
   972  0719                     	;# 
   973  071A                     	;# 
   974  071B                     	;# 
   975  071C                     	;# 
   976  071D                     	;# 
   977  071E                     	;# 
   978  0796                     	;# 
   979  0797                     	;# 
   980  0798                     	;# 
   981  0799                     	;# 
   982  079A                     	;# 
   983  079B                     	;# 
   984  080C                     	;# 
   985  080D                     	;# 
   986  080E                     	;# 
   987  080F                     	;# 
   988  0810                     	;# 
   989  0811                     	;# 
   990  0812                     	;# 
   991  0813                     	;# 
   992  0814                     	;# 
   993  081A                     	;# 
   994  081B                     	;# 
   995  081C                     	;# 
   996  081D                     	;# 
   997  081E                     	;# 
   998  081F                     	;# 
   999  088C                     	;# 
  1000  088D                     	;# 
  1001  088E                     	;# 
  1002  088F                     	;# 
  1003  0890                     	;# 
  1004  0891                     	;# 
  1005  0892                     	;# 
  1006  0893                     	;# 
  1007  0895                     	;# 
  1008  0896                     	;# 
  1009  0897                     	;# 
  1010  0898                     	;# 
  1011  0899                     	;# 
  1012  089A                     	;# 
  1013  089B                     	;# 
  1014  090C                     	;# 
  1015  090E                     	;# 
  1016  090F                     	;# 
  1017  091F                     	;# 
  1018  091F                     	;# 
  1019  098F                     	;# 
  1020  098F                     	;# 
  1021  0990                     	;# 
  1022  0991                     	;# 
  1023  0992                     	;# 
  1024  0993                     	;# 
  1025  0994                     	;# 
  1026  0995                     	;# 
  1027  0996                     	;# 
  1028  0997                     	;# 
  1029  0E0F                     	;# 
  1030  0E10                     	;# 
  1031  0E11                     	;# 
  1032  0E12                     	;# 
  1033  0E13                     	;# 
  1034  0E14                     	;# 
  1035  0E15                     	;# 
  1036  0E16                     	;# 
  1037  0E17                     	;# 
  1038  0E18                     	;# 
  1039  0E19                     	;# 
  1040  0E1A                     	;# 
  1041  0E1B                     	;# 
  1042  0E1C                     	;# 
  1043  0E1D                     	;# 
  1044  0E1E                     	;# 
  1045  0E1F                     	;# 
  1046  0E20                     	;# 
  1047  0E21                     	;# 
  1048  0E22                     	;# 
  1049  0E23                     	;# 
  1050  0E24                     	;# 
  1051  0E25                     	;# 
  1052  0E26                     	;# 
  1053  0E27                     	;# 
  1054  0E28                     	;# 
  1055  0E29                     	;# 
  1056  0E2A                     	;# 
  1057  0E2B                     	;# 
  1058  0E2C                     	;# 
  1059  0E2D                     	;# 
  1060  0E2E                     	;# 
  1061  0E2F                     	;# 
  1062  0E30                     	;# 
  1063  0E31                     	;# 
  1064  0E32                     	;# 
  1065  0E33                     	;# 
  1066  0E34                     	;# 
  1067  0E35                     	;# 
  1068  0E36                     	;# 
  1069  0E37                     	;# 
  1070  0E8F                     	;# 
  1071  0E90                     	;# 
  1072  0E91                     	;# 
  1073  0E92                     	;# 
  1074  0E93                     	;# 
  1075  0E94                     	;# 
  1076  0E95                     	;# 
  1077  0E96                     	;# 
  1078  0E97                     	;# 
  1079  0E9C                     	;# 
  1080  0E9D                     	;# 
  1081  0E9E                     	;# 
  1082  0EA1                     	;# 
  1083  0EA2                     	;# 
  1084  0EA3                     	;# 
  1085  0EA4                     	;# 
  1086  0EA5                     	;# 
  1087  0EA9                     	;# 
  1088  0EAA                     	;# 
  1089  0EAB                     	;# 
  1090  0EAC                     	;# 
  1091  0EB1                     	;# 
  1092  0EB2                     	;# 
  1093  0EB3                     	;# 
  1094  0EB8                     	;# 
  1095  0EB9                     	;# 
  1096  0EBA                     	;# 
  1097  0EBB                     	;# 
  1098  0EBC                     	;# 
  1099  0EBD                     	;# 
  1100  0EBE                     	;# 
  1101  0EC3                     	;# 
  1102  0EC5                     	;# 
  1103  0EC6                     	;# 
  1104  0EC7                     	;# 
  1105  0EC8                     	;# 
  1106  0EC9                     	;# 
  1107  0ECA                     	;# 
  1108  0ECB                     	;# 
  1109  0ECC                     	;# 
  1110  0F10                     	;# 
  1111  0F11                     	;# 
  1112  0F12                     	;# 
  1113  0F13                     	;# 
  1114  0F14                     	;# 
  1115  0F15                     	;# 
  1116  0F16                     	;# 
  1117  0F17                     	;# 
  1118  0F18                     	;# 
  1119  0F19                     	;# 
  1120  0F1A                     	;# 
  1121  0F1B                     	;# 
  1122  0F1C                     	;# 
  1123  0F1D                     	;# 
  1124  0F1E                     	;# 
  1125  0F1F                     	;# 
  1126  0F20                     	;# 
  1127  0F21                     	;# 
  1128  0F22                     	;# 
  1129  0F23                     	;# 
  1130  0F24                     	;# 
  1131  0F25                     	;# 
  1132  0F26                     	;# 
  1133  0F27                     	;# 
  1134  0F28                     	;# 
  1135  0F29                     	;# 
  1136  0F2A                     	;# 
  1137  0F2B                     	;# 
  1138  0F2C                     	;# 
  1139  0F2D                     	;# 
  1140  0F2E                     	;# 
  1141  0F2F                     	;# 
  1142  0F30                     	;# 
  1143  0F31                     	;# 
  1144  0F32                     	;# 
  1145  0F38                     	;# 
  1146  0F39                     	;# 
  1147  0F3A                     	;# 
  1148  0F3B                     	;# 
  1149  0F3C                     	;# 
  1150  0F3D                     	;# 
  1151  0F3E                     	;# 
  1152  0F3F                     	;# 
  1153  0F40                     	;# 
  1154  0F41                     	;# 
  1155  0F43                     	;# 
  1156  0F44                     	;# 
  1157  0F45                     	;# 
  1158  0F46                     	;# 
  1159  0F47                     	;# 
  1160  0F48                     	;# 
  1161  0F49                     	;# 
  1162  0F4A                     	;# 
  1163  0F4B                     	;# 
  1164  0F4C                     	;# 
  1165  0F4E                     	;# 
  1166  0F4F                     	;# 
  1167  0F50                     	;# 
  1168  0F51                     	;# 
  1169  0F52                     	;# 
  1170  0F53                     	;# 
  1171  0F54                     	;# 
  1172  0F55                     	;# 
  1173  0F56                     	;# 
  1174  0F57                     	;# 
  1175  0F59                     	;# 
  1176  0F5A                     	;# 
  1177  0F5B                     	;# 
  1178  0F5C                     	;# 
  1179  0F5D                     	;# 
  1180  0F61                     	;# 
  1181  0F62                     	;# 
  1182  0F64                     	;# 
  1183  0F65                     	;# 
  1184  0F66                     	;# 
  1185  0F67                     	;# 
  1186  0F68                     	;# 
  1187  0F69                     	;# 
  1188  0F6A                     	;# 
  1189  0F6B                     	;# 
  1190  0F6C                     	;# 
  1191  0F6D                     	;# 
  1192  0FE4                     	;# 
  1193  0FE5                     	;# 
  1194  0FE6                     	;# 
  1195  0FE7                     	;# 
  1196  0FE8                     	;# 
  1197  0FE9                     	;# 
  1198  0FEA                     	;# 
  1199  0FEB                     	;# 
  1200  0FED                     	;# 
  1201  0FEE                     	;# 
  1202  0FEF                     	;# 
  1203  0000                     	;# 
  1204  0001                     	;# 
  1205  0002                     	;# 
  1206  0003                     	;# 
  1207  0004                     	;# 
  1208  0005                     	;# 
  1209  0006                     	;# 
  1210  0007                     	;# 
  1211  0008                     	;# 
  1212  0009                     	;# 
  1213  000A                     	;# 
  1214  000B                     	;# 
  1215  000C                     	;# 
  1216  000D                     	;# 
  1217  000E                     	;# 
  1218  000F                     	;# 
  1219  0010                     	;# 
  1220  0011                     	;# 
  1221  0012                     	;# 
  1222  0013                     	;# 
  1223  0014                     	;# 
  1224  0015                     	;# 
  1225  0016                     	;# 
  1226  0017                     	;# 
  1227  0018                     	;# 
  1228  0019                     	;# 
  1229  001A                     	;# 
  1230  001C                     	;# 
  1231  001C                     	;# 
  1232  001D                     	;# 
  1233  001D                     	;# 
  1234  001E                     	;# 
  1235  001F                     	;# 
  1236  008C                     	;# 
  1237  008C                     	;# 
  1238  008D                     	;# 
  1239  008E                     	;# 
  1240  008E                     	;# 
  1241  008F                     	;# 
  1242  0090                     	;# 
  1243  0090                     	;# 
  1244  0091                     	;# 
  1245  0093                     	;# 
  1246  0094                     	;# 
  1247  0095                     	;# 
  1248  0096                     	;# 
  1249  0097                     	;# 
  1250  0098                     	;# 
  1251  0099                     	;# 
  1252  009A                     	;# 
  1253  009B                     	;# 
  1254  009C                     	;# 
  1255  009D                     	;# 
  1256  009E                     	;# 
  1257  010C                     	;# 
  1258  010D                     	;# 
  1259  010E                     	;# 
  1260  010E                     	;# 
  1261  010F                     	;# 
  1262  0110                     	;# 
  1263  0110                     	;# 
  1264  0111                     	;# 
  1265  0112                     	;# 
  1266  0112                     	;# 
  1267  0113                     	;# 
  1268  0114                     	;# 
  1269  0114                     	;# 
  1270  0115                     	;# 
  1271  0116                     	;# 
  1272  0116                     	;# 
  1273  0117                     	;# 
  1274  0119                     	;# 
  1275  0119                     	;# 
  1276  0119                     	;# 
  1277  011A                     	;# 
  1278  011A                     	;# 
  1279  011A                     	;# 
  1280  011B                     	;# 
  1281  011B                     	;# 
  1282  011B                     	;# 
  1283  011B                     	;# 
  1284  011B                     	;# 
  1285  011C                     	;# 
  1286  011C                     	;# 
  1287  011C                     	;# 
  1288  011D                     	;# 
  1289  011D                     	;# 
  1290  011D                     	;# 
  1291  011E                     	;# 
  1292  011E                     	;# 
  1293  011E                     	;# 
  1294  011F                     	;# 
  1295  011F                     	;# 
  1296  011F                     	;# 
  1297  011F                     	;# 
  1298  011F                     	;# 
  1299  018C                     	;# 
  1300  018D                     	;# 
  1301  018E                     	;# 
  1302  018F                     	;# 
  1303  0190                     	;# 
  1304  0191                     	;# 
  1305  0192                     	;# 
  1306  0196                     	;# 
  1307  0197                     	;# 
  1308  0198                     	;# 
  1309  0199                     	;# 
  1310  019A                     	;# 
  1311  019B                     	;# 
  1312  019C                     	;# 
  1313  020C                     	;# 
  1314  020C                     	;# 
  1315  020D                     	;# 
  1316  020E                     	;# 
  1317  020F                     	;# 
  1318  020F                     	;# 
  1319  0210                     	;# 
  1320  0210                     	;# 
  1321  0211                     	;# 
  1322  0211                     	;# 
  1323  0212                     	;# 
  1324  0212                     	;# 
  1325  0213                     	;# 
  1326  0214                     	;# 
  1327  0215                     	;# 
  1328  0215                     	;# 
  1329  0216                     	;# 
  1330  0216                     	;# 
  1331  0217                     	;# 
  1332  0217                     	;# 
  1333  0218                     	;# 
  1334  0218                     	;# 
  1335  0219                     	;# 
  1336  021A                     	;# 
  1337  021B                     	;# 
  1338  021B                     	;# 
  1339  021C                     	;# 
  1340  021C                     	;# 
  1341  021D                     	;# 
  1342  021D                     	;# 
  1343  021E                     	;# 
  1344  021F                     	;# 
  1345  028C                     	;# 
  1346  028C                     	;# 
  1347  028D                     	;# 
  1348  028D                     	;# 
  1349  028E                     	;# 
  1350  028F                     	;# 
  1351  0290                     	;# 
  1352  0290                     	;# 
  1353  0291                     	;# 
  1354  0292                     	;# 
  1355  0292                     	;# 
  1356  0293                     	;# 
  1357  0293                     	;# 
  1358  0294                     	;# 
  1359  0295                     	;# 
  1360  0296                     	;# 
  1361  0296                     	;# 
  1362  0297                     	;# 
  1363  0298                     	;# 
  1364  0298                     	;# 
  1365  0299                     	;# 
  1366  0299                     	;# 
  1367  029A                     	;# 
  1368  029B                     	;# 
  1369  029C                     	;# 
  1370  029C                     	;# 
  1371  029D                     	;# 
  1372  030C                     	;# 
  1373  030C                     	;# 
  1374  030D                     	;# 
  1375  030E                     	;# 
  1376  030F                     	;# 
  1377  0310                     	;# 
  1378  0310                     	;# 
  1379  0311                     	;# 
  1380  0312                     	;# 
  1381  0313                     	;# 
  1382  0314                     	;# 
  1383  0314                     	;# 
  1384  0315                     	;# 
  1385  0316                     	;# 
  1386  0317                     	;# 
  1387  0318                     	;# 
  1388  0318                     	;# 
  1389  0319                     	;# 
  1390  031A                     	;# 
  1391  031B                     	;# 
  1392  031C                     	;# 
  1393  031C                     	;# 
  1394  031D                     	;# 
  1395  031E                     	;# 
  1396  031F                     	;# 
  1397  038C                     	;# 
  1398  038C                     	;# 
  1399  038D                     	;# 
  1400  038E                     	;# 
  1401  0390                     	;# 
  1402  0390                     	;# 
  1403  0391                     	;# 
  1404  0392                     	;# 
  1405  040C                     	;# 
  1406  040D                     	;# 
  1407  040E                     	;# 
  1408  040F                     	;# 
  1409  0410                     	;# 
  1410  0411                     	;# 
  1411  0416                     	;# 
  1412  0416                     	;# 
  1413  0417                     	;# 
  1414  0418                     	;# 
  1415  0418                     	;# 
  1416  0419                     	;# 
  1417  041A                     	;# 
  1418  041A                     	;# 
  1419  041B                     	;# 
  1420  041C                     	;# 
  1421  041C                     	;# 
  1422  041D                     	;# 
  1423  041E                     	;# 
  1424  041F                     	;# 
  1425  048C                     	;# 
  1426  048C                     	;# 
  1427  048D                     	;# 
  1428  048E                     	;# 
  1429  048F                     	;# 
  1430  048F                     	;# 
  1431  0490                     	;# 
  1432  0491                     	;# 
  1433  0492                     	;# 
  1434  0492                     	;# 
  1435  0493                     	;# 
  1436  0494                     	;# 
  1437  0495                     	;# 
  1438  0495                     	;# 
  1439  0496                     	;# 
  1440  0497                     	;# 
  1441  0498                     	;# 
  1442  0499                     	;# 
  1443  049A                     	;# 
  1444  049B                     	;# 
  1445  049C                     	;# 
  1446  049D                     	;# 
  1447  050C                     	;# 
  1448  050C                     	;# 
  1449  050D                     	;# 
  1450  050E                     	;# 
  1451  050F                     	;# 
  1452  050F                     	;# 
  1453  0510                     	;# 
  1454  0511                     	;# 
  1455  0512                     	;# 
  1456  0512                     	;# 
  1457  0513                     	;# 
  1458  0514                     	;# 
  1459  0515                     	;# 
  1460  0515                     	;# 
  1461  0516                     	;# 
  1462  0517                     	;# 
  1463  0518                     	;# 
  1464  0519                     	;# 
  1465  051A                     	;# 
  1466  051B                     	;# 
  1467  051C                     	;# 
  1468  051D                     	;# 
  1469  058C                     	;# 
  1470  058C                     	;# 
  1471  058D                     	;# 
  1472  058E                     	;# 
  1473  058F                     	;# 
  1474  058F                     	;# 
  1475  0590                     	;# 
  1476  0591                     	;# 
  1477  0592                     	;# 
  1478  0593                     	;# 
  1479  060C                     	;# 
  1480  060D                     	;# 
  1481  060E                     	;# 
  1482  060F                     	;# 
  1483  0610                     	;# 
  1484  0611                     	;# 
  1485  0612                     	;# 
  1486  0613                     	;# 
  1487  0614                     	;# 
  1488  0616                     	;# 
  1489  0617                     	;# 
  1490  0618                     	;# 
  1491  0619                     	;# 
  1492  061A                     	;# 
  1493  061B                     	;# 
  1494  061C                     	;# 
  1495  061D                     	;# 
  1496  061E                     	;# 
  1497  068C                     	;# 
  1498  068D                     	;# 
  1499  068E                     	;# 
  1500  068F                     	;# 
  1501  0690                     	;# 
  1502  0691                     	;# 
  1503  0692                     	;# 
  1504  0693                     	;# 
  1505  0694                     	;# 
  1506  070C                     	;# 
  1507  070D                     	;# 
  1508  070E                     	;# 
  1509  070F                     	;# 
  1510  0710                     	;# 
  1511  0711                     	;# 
  1512  0712                     	;# 
  1513  0713                     	;# 
  1514  0714                     	;# 
  1515  0716                     	;# 
  1516  0717                     	;# 
  1517  0718                     	;# 
  1518  0719                     	;# 
  1519  071A                     	;# 
  1520  071B                     	;# 
  1521  071C                     	;# 
  1522  071D                     	;# 
  1523  071E                     	;# 
  1524  0796                     	;# 
  1525  0797                     	;# 
  1526  0798                     	;# 
  1527  0799                     	;# 
  1528  079A                     	;# 
  1529  079B                     	;# 
  1530  080C                     	;# 
  1531  080D                     	;# 
  1532  080E                     	;# 
  1533  080F                     	;# 
  1534  0810                     	;# 
  1535  0811                     	;# 
  1536  0812                     	;# 
  1537  0813                     	;# 
  1538  0814                     	;# 
  1539  081A                     	;# 
  1540  081B                     	;# 
  1541  081C                     	;# 
  1542  081D                     	;# 
  1543  081E                     	;# 
  1544  081F                     	;# 
  1545  088C                     	;# 
  1546  088D                     	;# 
  1547  088E                     	;# 
  1548  088F                     	;# 
  1549  0890                     	;# 
  1550  0891                     	;# 
  1551  0892                     	;# 
  1552  0893                     	;# 
  1553  0895                     	;# 
  1554  0896                     	;# 
  1555  0897                     	;# 
  1556  0898                     	;# 
  1557  0899                     	;# 
  1558  089A                     	;# 
  1559  089B                     	;# 
  1560  090C                     	;# 
  1561  090E                     	;# 
  1562  090F                     	;# 
  1563  091F                     	;# 
  1564  091F                     	;# 
  1565  098F                     	;# 
  1566  098F                     	;# 
  1567  0990                     	;# 
  1568  0991                     	;# 
  1569  0992                     	;# 
  1570  0993                     	;# 
  1571  0994                     	;# 
  1572  0995                     	;# 
  1573  0996                     	;# 
  1574  0997                     	;# 
  1575  0E0F                     	;# 
  1576  0E10                     	;# 
  1577  0E11                     	;# 
  1578  0E12                     	;# 
  1579  0E13                     	;# 
  1580  0E14                     	;# 
  1581  0E15                     	;# 
  1582  0E16                     	;# 
  1583  0E17                     	;# 
  1584  0E18                     	;# 
  1585  0E19                     	;# 
  1586  0E1A                     	;# 
  1587  0E1B                     	;# 
  1588  0E1C                     	;# 
  1589  0E1D                     	;# 
  1590  0E1E                     	;# 
  1591  0E1F                     	;# 
  1592  0E20                     	;# 
  1593  0E21                     	;# 
  1594  0E22                     	;# 
  1595  0E23                     	;# 
  1596  0E24                     	;# 
  1597  0E25                     	;# 
  1598  0E26                     	;# 
  1599  0E27                     	;# 
  1600  0E28                     	;# 
  1601  0E29                     	;# 
  1602  0E2A                     	;# 
  1603  0E2B                     	;# 
  1604  0E2C                     	;# 
  1605  0E2D                     	;# 
  1606  0E2E                     	;# 
  1607  0E2F                     	;# 
  1608  0E30                     	;# 
  1609  0E31                     	;# 
  1610  0E32                     	;# 
  1611  0E33                     	;# 
  1612  0E34                     	;# 
  1613  0E35                     	;# 
  1614  0E36                     	;# 
  1615  0E37                     	;# 
  1616  0E8F                     	;# 
  1617  0E90                     	;# 
  1618  0E91                     	;# 
  1619  0E92                     	;# 
  1620  0E93                     	;# 
  1621  0E94                     	;# 
  1622  0E95                     	;# 
  1623  0E96                     	;# 
  1624  0E97                     	;# 
  1625  0E9C                     	;# 
  1626  0E9D                     	;# 
  1627  0E9E                     	;# 
  1628  0EA1                     	;# 
  1629  0EA2                     	;# 
  1630  0EA3                     	;# 
  1631  0EA4                     	;# 
  1632  0EA5                     	;# 
  1633  0EA9                     	;# 
  1634  0EAA                     	;# 
  1635  0EAB                     	;# 
  1636  0EAC                     	;# 
  1637  0EB1                     	;# 
  1638  0EB2                     	;# 
  1639  0EB3                     	;# 
  1640  0EB8                     	;# 
  1641  0EB9                     	;# 
  1642  0EBA                     	;# 
  1643  0EBB                     	;# 
  1644  0EBC                     	;# 
  1645  0EBD                     	;# 
  1646  0EBE                     	;# 
  1647  0EC3                     	;# 
  1648  0EC5                     	;# 
  1649  0EC6                     	;# 
  1650  0EC7                     	;# 
  1651  0EC8                     	;# 
  1652  0EC9                     	;# 
  1653  0ECA                     	;# 
  1654  0ECB                     	;# 
  1655  0ECC                     	;# 
  1656  0F10                     	;# 
  1657  0F11                     	;# 
  1658  0F12                     	;# 
  1659  0F13                     	;# 
  1660  0F14                     	;# 
  1661  0F15                     	;# 
  1662  0F16                     	;# 
  1663  0F17                     	;# 
  1664  0F18                     	;# 
  1665  0F19                     	;# 
  1666  0F1A                     	;# 
  1667  0F1B                     	;# 
  1668  0F1C                     	;# 
  1669  0F1D                     	;# 
  1670  0F1E                     	;# 
  1671  0F1F                     	;# 
  1672  0F20                     	;# 
  1673  0F21                     	;# 
  1674  0F22                     	;# 
  1675  0F23                     	;# 
  1676  0F24                     	;# 
  1677  0F25                     	;# 
  1678  0F26                     	;# 
  1679  0F27                     	;# 
  1680  0F28                     	;# 
  1681  0F29                     	;# 
  1682  0F2A                     	;# 
  1683  0F2B                     	;# 
  1684  0F2C                     	;# 
  1685  0F2D                     	;# 
  1686  0F2E                     	;# 
  1687  0F2F                     	;# 
  1688  0F30                     	;# 
  1689  0F31                     	;# 
  1690  0F32                     	;# 
  1691  0F38                     	;# 
  1692  0F39                     	;# 
  1693  0F3A                     	;# 
  1694  0F3B                     	;# 
  1695  0F3C                     	;# 
  1696  0F3D                     	;# 
  1697  0F3E                     	;# 
  1698  0F3F                     	;# 
  1699  0F40                     	;# 
  1700  0F41                     	;# 
  1701  0F43                     	;# 
  1702  0F44                     	;# 
  1703  0F45                     	;# 
  1704  0F46                     	;# 
  1705  0F47                     	;# 
  1706  0F48                     	;# 
  1707  0F49                     	;# 
  1708  0F4A                     	;# 
  1709  0F4B                     	;# 
  1710  0F4C                     	;# 
  1711  0F4E                     	;# 
  1712  0F4F                     	;# 
  1713  0F50                     	;# 
  1714  0F51                     	;# 
  1715  0F52                     	;# 
  1716  0F53                     	;# 
  1717  0F54                     	;# 
  1718  0F55                     	;# 
  1719  0F56                     	;# 
  1720  0F57                     	;# 
  1721  0F59                     	;# 
  1722  0F5A                     	;# 
  1723  0F5B                     	;# 
  1724  0F5C                     	;# 
  1725  0F5D                     	;# 
  1726  0F61                     	;# 
  1727  0F62                     	;# 
  1728  0F64                     	;# 
  1729  0F65                     	;# 
  1730  0F66                     	;# 
  1731  0F67                     	;# 
  1732  0F68                     	;# 
  1733  0F69                     	;# 
  1734  0F6A                     	;# 
  1735  0F6B                     	;# 
  1736  0F6C                     	;# 
  1737  0F6D                     	;# 
  1738  0FE4                     	;# 
  1739  0FE5                     	;# 
  1740  0FE6                     	;# 
  1741  0FE7                     	;# 
  1742  0FE8                     	;# 
  1743  0FE9                     	;# 
  1744  0FEA                     	;# 
  1745  0FEB                     	;# 
  1746  0FED                     	;# 
  1747  0FEE                     	;# 
  1748  0FEF                     	;# 
  1749  0000                     	;# 
  1750  0001                     	;# 
  1751  0002                     	;# 
  1752  0003                     	;# 
  1753  0004                     	;# 
  1754  0005                     	;# 
  1755  0006                     	;# 
  1756  0007                     	;# 
  1757  0008                     	;# 
  1758  0009                     	;# 
  1759  000A                     	;# 
  1760  000B                     	;# 
  1761  000C                     	;# 
  1762  000D                     	;# 
  1763  000E                     	;# 
  1764  000F                     	;# 
  1765  0010                     	;# 
  1766  0011                     	;# 
  1767  0012                     	;# 
  1768  0013                     	;# 
  1769  0014                     	;# 
  1770  0015                     	;# 
  1771  0016                     	;# 
  1772  0017                     	;# 
  1773  0018                     	;# 
  1774  0019                     	;# 
  1775  001A                     	;# 
  1776  001C                     	;# 
  1777  001C                     	;# 
  1778  001D                     	;# 
  1779  001D                     	;# 
  1780  001E                     	;# 
  1781  001F                     	;# 
  1782  008C                     	;# 
  1783  008C                     	;# 
  1784  008D                     	;# 
  1785  008E                     	;# 
  1786  008E                     	;# 
  1787  008F                     	;# 
  1788  0090                     	;# 
  1789  0090                     	;# 
  1790  0091                     	;# 
  1791  0093                     	;# 
  1792  0094                     	;# 
  1793  0095                     	;# 
  1794  0096                     	;# 
  1795  0097                     	;# 
  1796  0098                     	;# 
  1797  0099                     	;# 
  1798  009A                     	;# 
  1799  009B                     	;# 
  1800  009C                     	;# 
  1801  009D                     	;# 
  1802  009E                     	;# 
  1803  010C                     	;# 
  1804  010D                     	;# 
  1805  010E                     	;# 
  1806  010E                     	;# 
  1807  010F                     	;# 
  1808  0110                     	;# 
  1809  0110                     	;# 
  1810  0111                     	;# 
  1811  0112                     	;# 
  1812  0112                     	;# 
  1813  0113                     	;# 
  1814  0114                     	;# 
  1815  0114                     	;# 
  1816  0115                     	;# 
  1817  0116                     	;# 
  1818  0116                     	;# 
  1819  0117                     	;# 
  1820  0119                     	;# 
  1821  0119                     	;# 
  1822  0119                     	;# 
  1823  011A                     	;# 
  1824  011A                     	;# 
  1825  011A                     	;# 
  1826  011B                     	;# 
  1827  011B                     	;# 
  1828  011B                     	;# 
  1829  011B                     	;# 
  1830  011B                     	;# 
  1831  011C                     	;# 
  1832  011C                     	;# 
  1833  011C                     	;# 
  1834  011D                     	;# 
  1835  011D                     	;# 
  1836  011D                     	;# 
  1837  011E                     	;# 
  1838  011E                     	;# 
  1839  011E                     	;# 
  1840  011F                     	;# 
  1841  011F                     	;# 
  1842  011F                     	;# 
  1843  011F                     	;# 
  1844  011F                     	;# 
  1845  018C                     	;# 
  1846  018D                     	;# 
  1847  018E                     	;# 
  1848  018F                     	;# 
  1849  0190                     	;# 
  1850  0191                     	;# 
  1851  0192                     	;# 
  1852  0196                     	;# 
  1853  0197                     	;# 
  1854  0198                     	;# 
  1855  0199                     	;# 
  1856  019A                     	;# 
  1857  019B                     	;# 
  1858  019C                     	;# 
  1859  020C                     	;# 
  1860  020C                     	;# 
  1861  020D                     	;# 
  1862  020E                     	;# 
  1863  020F                     	;# 
  1864  020F                     	;# 
  1865  0210                     	;# 
  1866  0210                     	;# 
  1867  0211                     	;# 
  1868  0211                     	;# 
  1869  0212                     	;# 
  1870  0212                     	;# 
  1871  0213                     	;# 
  1872  0214                     	;# 
  1873  0215                     	;# 
  1874  0215                     	;# 
  1875  0216                     	;# 
  1876  0216                     	;# 
  1877  0217                     	;# 
  1878  0217                     	;# 
  1879  0218                     	;# 
  1880  0218                     	;# 
  1881  0219                     	;# 
  1882  021A                     	;# 
  1883  021B                     	;# 
  1884  021B                     	;# 
  1885  021C                     	;# 
  1886  021C                     	;# 
  1887  021D                     	;# 
  1888  021D                     	;# 
  1889  021E                     	;# 
  1890  021F                     	;# 
  1891  028C                     	;# 
  1892  028C                     	;# 
  1893  028D                     	;# 
  1894  028D                     	;# 
  1895  028E                     	;# 
  1896  028F                     	;# 
  1897  0290                     	;# 
  1898  0290                     	;# 
  1899  0291                     	;# 
  1900  0292                     	;# 
  1901  0292                     	;# 
  1902  0293                     	;# 
  1903  0293                     	;# 
  1904  0294                     	;# 
  1905  0295                     	;# 
  1906  0296                     	;# 
  1907  0296                     	;# 
  1908  0297                     	;# 
  1909  0298                     	;# 
  1910  0298                     	;# 
  1911  0299                     	;# 
  1912  0299                     	;# 
  1913  029A                     	;# 
  1914  029B                     	;# 
  1915  029C                     	;# 
  1916  029C                     	;# 
  1917  029D                     	;# 
  1918  030C                     	;# 
  1919  030C                     	;# 
  1920  030D                     	;# 
  1921  030E                     	;# 
  1922  030F                     	;# 
  1923  0310                     	;# 
  1924  0310                     	;# 
  1925  0311                     	;# 
  1926  0312                     	;# 
  1927  0313                     	;# 
  1928  0314                     	;# 
  1929  0314                     	;# 
  1930  0315                     	;# 
  1931  0316                     	;# 
  1932  0317                     	;# 
  1933  0318                     	;# 
  1934  0318                     	;# 
  1935  0319                     	;# 
  1936  031A                     	;# 
  1937  031B                     	;# 
  1938  031C                     	;# 
  1939  031C                     	;# 
  1940  031D                     	;# 
  1941  031E                     	;# 
  1942  031F                     	;# 
  1943  038C                     	;# 
  1944  038C                     	;# 
  1945  038D                     	;# 
  1946  038E                     	;# 
  1947  0390                     	;# 
  1948  0390                     	;# 
  1949  0391                     	;# 
  1950  0392                     	;# 
  1951  040C                     	;# 
  1952  040D                     	;# 
  1953  040E                     	;# 
  1954  040F                     	;# 
  1955  0410                     	;# 
  1956  0411                     	;# 
  1957  0416                     	;# 
  1958  0416                     	;# 
  1959  0417                     	;# 
  1960  0418                     	;# 
  1961  0418                     	;# 
  1962  0419                     	;# 
  1963  041A                     	;# 
  1964  041A                     	;# 
  1965  041B                     	;# 
  1966  041C                     	;# 
  1967  041C                     	;# 
  1968  041D                     	;# 
  1969  041E                     	;# 
  1970  041F                     	;# 
  1971  048C                     	;# 
  1972  048C                     	;# 
  1973  048D                     	;# 
  1974  048E                     	;# 
  1975  048F                     	;# 
  1976  048F                     	;# 
  1977  0490                     	;# 
  1978  0491                     	;# 
  1979  0492                     	;# 
  1980  0492                     	;# 
  1981  0493                     	;# 
  1982  0494                     	;# 
  1983  0495                     	;# 
  1984  0495                     	;# 
  1985  0496                     	;# 
  1986  0497                     	;# 
  1987  0498                     	;# 
  1988  0499                     	;# 
  1989  049A                     	;# 
  1990  049B                     	;# 
  1991  049C                     	;# 
  1992  049D                     	;# 
  1993  050C                     	;# 
  1994  050C                     	;# 
  1995  050D                     	;# 
  1996  050E                     	;# 
  1997  050F                     	;# 
  1998  050F                     	;# 
  1999  0510                     	;# 
  2000  0511                     	;# 
  2001  0512                     	;# 
  2002  0512                     	;# 
  2003  0513                     	;# 
  2004  0514                     	;# 
  2005  0515                     	;# 
  2006  0515                     	;# 
  2007  0516                     	;# 
  2008  0517                     	;# 
  2009  0518                     	;# 
  2010  0519                     	;# 
  2011  051A                     	;# 
  2012  051B                     	;# 
  2013  051C                     	;# 
  2014  051D                     	;# 
  2015  058C                     	;# 
  2016  058C                     	;# 
  2017  058D                     	;# 
  2018  058E                     	;# 
  2019  058F                     	;# 
  2020  058F                     	;# 
  2021  0590                     	;# 
  2022  0591                     	;# 
  2023  0592                     	;# 
  2024  0593                     	;# 
  2025  060C                     	;# 
  2026  060D                     	;# 
  2027  060E                     	;# 
  2028  060F                     	;# 
  2029  0610                     	;# 
  2030  0611                     	;# 
  2031  0612                     	;# 
  2032  0613                     	;# 
  2033  0614                     	;# 
  2034  0616                     	;# 
  2035  0617                     	;# 
  2036  0618                     	;# 
  2037  0619                     	;# 
  2038  061A                     	;# 
  2039  061B                     	;# 
  2040  061C                     	;# 
  2041  061D                     	;# 
  2042  061E                     	;# 
  2043  068C                     	;# 
  2044  068D                     	;# 
  2045  068E                     	;# 
  2046  068F                     	;# 
  2047  0690                     	;# 
  2048  0691                     	;# 
  2049  0692                     	;# 
  2050  0693                     	;# 
  2051  0694                     	;# 
  2052  070C                     	;# 
  2053  070D                     	;# 
  2054  070E                     	;# 
  2055  070F                     	;# 
  2056  0710                     	;# 
  2057  0711                     	;# 
  2058  0712                     	;# 
  2059  0713                     	;# 
  2060  0714                     	;# 
  2061  0716                     	;# 
  2062  0717                     	;# 
  2063  0718                     	;# 
  2064  0719                     	;# 
  2065  071A                     	;# 
  2066  071B                     	;# 
  2067  071C                     	;# 
  2068  071D                     	;# 
  2069  071E                     	;# 
  2070  0796                     	;# 
  2071  0797                     	;# 
  2072  0798                     	;# 
  2073  0799                     	;# 
  2074  079A                     	;# 
  2075  079B                     	;# 
  2076  080C                     	;# 
  2077  080D                     	;# 
  2078  080E                     	;# 
  2079  080F                     	;# 
  2080  0810                     	;# 
  2081  0811                     	;# 
  2082  0812                     	;# 
  2083  0813                     	;# 
  2084  0814                     	;# 
  2085  081A                     	;# 
  2086  081B                     	;# 
  2087  081C                     	;# 
  2088  081D                     	;# 
  2089  081E                     	;# 
  2090  081F                     	;# 
  2091  088C                     	;# 
  2092  088D                     	;# 
  2093  088E                     	;# 
  2094  088F                     	;# 
  2095  0890                     	;# 
  2096  0891                     	;# 
  2097  0892                     	;# 
  2098  0893                     	;# 
  2099  0895                     	;# 
  2100  0896                     	;# 
  2101  0897                     	;# 
  2102  0898                     	;# 
  2103  0899                     	;# 
  2104  089A                     	;# 
  2105  089B                     	;# 
  2106  090C                     	;# 
  2107  090E                     	;# 
  2108  090F                     	;# 
  2109  091F                     	;# 
  2110  091F                     	;# 
  2111  098F                     	;# 
  2112  098F                     	;# 
  2113  0990                     	;# 
  2114  0991                     	;# 
  2115  0992                     	;# 
  2116  0993                     	;# 
  2117  0994                     	;# 
  2118  0995                     	;# 
  2119  0996                     	;# 
  2120  0997                     	;# 
  2121  0E0F                     	;# 
  2122  0E10                     	;# 
  2123  0E11                     	;# 
  2124  0E12                     	;# 
  2125  0E13                     	;# 
  2126  0E14                     	;# 
  2127  0E15                     	;# 
  2128  0E16                     	;# 
  2129  0E17                     	;# 
  2130  0E18                     	;# 
  2131  0E19                     	;# 
  2132  0E1A                     	;# 
  2133  0E1B                     	;# 
  2134  0E1C                     	;# 
  2135  0E1D                     	;# 
  2136  0E1E                     	;# 
  2137  0E1F                     	;# 
  2138  0E20                     	;# 
  2139  0E21                     	;# 
  2140  0E22                     	;# 
  2141  0E23                     	;# 
  2142  0E24                     	;# 
  2143  0E25                     	;# 
  2144  0E26                     	;# 
  2145  0E27                     	;# 
  2146  0E28                     	;# 
  2147  0E29                     	;# 
  2148  0E2A                     	;# 
  2149  0E2B                     	;# 
  2150  0E2C                     	;# 
  2151  0E2D                     	;# 
  2152  0E2E                     	;# 
  2153  0E2F                     	;# 
  2154  0E30                     	;# 
  2155  0E31                     	;# 
  2156  0E32                     	;# 
  2157  0E33                     	;# 
  2158  0E34                     	;# 
  2159  0E35                     	;# 
  2160  0E36                     	;# 
  2161  0E37                     	;# 
  2162  0E8F                     	;# 
  2163  0E90                     	;# 
  2164  0E91                     	;# 
  2165  0E92                     	;# 
  2166  0E93                     	;# 
  2167  0E94                     	;# 
  2168  0E95                     	;# 
  2169  0E96                     	;# 
  2170  0E97                     	;# 
  2171  0E9C                     	;# 
  2172  0E9D                     	;# 
  2173  0E9E                     	;# 
  2174  0EA1                     	;# 
  2175  0EA2                     	;# 
  2176  0EA3                     	;# 
  2177  0EA4                     	;# 
  2178  0EA5                     	;# 
  2179  0EA9                     	;# 
  2180  0EAA                     	;# 
  2181  0EAB                     	;# 
  2182  0EAC                     	;# 
  2183  0EB1                     	;# 
  2184  0EB2                     	;# 
  2185  0EB3                     	;# 
  2186  0EB8                     	;# 
  2187  0EB9                     	;# 
  2188  0EBA                     	;# 
  2189  0EBB                     	;# 
  2190  0EBC                     	;# 
  2191  0EBD                     	;# 
  2192  0EBE                     	;# 
  2193  0EC3                     	;# 
  2194  0EC5                     	;# 
  2195  0EC6                     	;# 
  2196  0EC7                     	;# 
  2197  0EC8                     	;# 
  2198  0EC9                     	;# 
  2199  0ECA                     	;# 
  2200  0ECB                     	;# 
  2201  0ECC                     	;# 
  2202  0F10                     	;# 
  2203  0F11                     	;# 
  2204  0F12                     	;# 
  2205  0F13                     	;# 
  2206  0F14                     	;# 
  2207  0F15                     	;# 
  2208  0F16                     	;# 
  2209  0F17                     	;# 
  2210  0F18                     	;# 
  2211  0F19                     	;# 
  2212  0F1A                     	;# 
  2213  0F1B                     	;# 
  2214  0F1C                     	;# 
  2215  0F1D                     	;# 
  2216  0F1E                     	;# 
  2217  0F1F                     	;# 
  2218  0F20                     	;# 
  2219  0F21                     	;# 
  2220  0F22                     	;# 
  2221  0F23                     	;# 
  2222  0F24                     	;# 
  2223  0F25                     	;# 
  2224  0F26                     	;# 
  2225  0F27                     	;# 
  2226  0F28                     	;# 
  2227  0F29                     	;# 
  2228  0F2A                     	;# 
  2229  0F2B                     	;# 
  2230  0F2C                     	;# 
  2231  0F2D                     	;# 
  2232  0F2E                     	;# 
  2233  0F2F                     	;# 
  2234  0F30                     	;# 
  2235  0F31                     	;# 
  2236  0F32                     	;# 
  2237  0F38                     	;# 
  2238  0F39                     	;# 
  2239  0F3A                     	;# 
  2240  0F3B                     	;# 
  2241  0F3C                     	;# 
  2242  0F3D                     	;# 
  2243  0F3E                     	;# 
  2244  0F3F                     	;# 
  2245  0F40                     	;# 
  2246  0F41                     	;# 
  2247  0F43                     	;# 
  2248  0F44                     	;# 
  2249  0F45                     	;# 
  2250  0F46                     	;# 
  2251  0F47                     	;# 
  2252  0F48                     	;# 
  2253  0F49                     	;# 
  2254  0F4A                     	;# 
  2255  0F4B                     	;# 
  2256  0F4C                     	;# 
  2257  0F4E                     	;# 
  2258  0F4F                     	;# 
  2259  0F50                     	;# 
  2260  0F51                     	;# 
  2261  0F52                     	;# 
  2262  0F53                     	;# 
  2263  0F54                     	;# 
  2264  0F55                     	;# 
  2265  0F56                     	;# 
  2266  0F57                     	;# 
  2267  0F59                     	;# 
  2268  0F5A                     	;# 
  2269  0F5B                     	;# 
  2270  0F5C                     	;# 
  2271  0F5D                     	;# 
  2272  0F61                     	;# 
  2273  0F62                     	;# 
  2274  0F64                     	;# 
  2275  0F65                     	;# 
  2276  0F66                     	;# 
  2277  0F67                     	;# 
  2278  0F68                     	;# 
  2279  0F69                     	;# 
  2280  0F6A                     	;# 
  2281  0F6B                     	;# 
  2282  0F6C                     	;# 
  2283  0F6D                     	;# 
  2284  0FE4                     	;# 
  2285  0FE5                     	;# 
  2286  0FE6                     	;# 
  2287  0FE7                     	;# 
  2288  0FE8                     	;# 
  2289  0FE9                     	;# 
  2290  0FEA                     	;# 
  2291  0FEB                     	;# 
  2292  0FED                     	;# 
  2293  0FEE                     	;# 
  2294  0FEF                     	;# 
  2295  0000                     	;# 
  2296  0001                     	;# 
  2297  0002                     	;# 
  2298  0003                     	;# 
  2299  0004                     	;# 
  2300  0005                     	;# 
  2301  0006                     	;# 
  2302  0007                     	;# 
  2303  0008                     	;# 
  2304  0009                     	;# 
  2305  000A                     	;# 
  2306  000B                     	;# 
  2307  000C                     	;# 
  2308  000D                     	;# 
  2309  000E                     	;# 
  2310  000F                     	;# 
  2311  0010                     	;# 
  2312  0011                     	;# 
  2313  0012                     	;# 
  2314  0013                     	;# 
  2315  0014                     	;# 
  2316  0015                     	;# 
  2317  0016                     	;# 
  2318  0017                     	;# 
  2319  0018                     	;# 
  2320  0019                     	;# 
  2321  001A                     	;# 
  2322  001C                     	;# 
  2323  001C                     	;# 
  2324  001D                     	;# 
  2325  001D                     	;# 
  2326  001E                     	;# 
  2327  001F                     	;# 
  2328  008C                     	;# 
  2329  008C                     	;# 
  2330  008D                     	;# 
  2331  008E                     	;# 
  2332  008E                     	;# 
  2333  008F                     	;# 
  2334  0090                     	;# 
  2335  0090                     	;# 
  2336  0091                     	;# 
  2337  0093                     	;# 
  2338  0094                     	;# 
  2339  0095                     	;# 
  2340  0096                     	;# 
  2341  0097                     	;# 
  2342  0098                     	;# 
  2343  0099                     	;# 
  2344  009A                     	;# 
  2345  009B                     	;# 
  2346  009C                     	;# 
  2347  009D                     	;# 
  2348  009E                     	;# 
  2349  010C                     	;# 
  2350  010D                     	;# 
  2351  010E                     	;# 
  2352  010E                     	;# 
  2353  010F                     	;# 
  2354  0110                     	;# 
  2355  0110                     	;# 
  2356  0111                     	;# 
  2357  0112                     	;# 
  2358  0112                     	;# 
  2359  0113                     	;# 
  2360  0114                     	;# 
  2361  0114                     	;# 
  2362  0115                     	;# 
  2363  0116                     	;# 
  2364  0116                     	;# 
  2365  0117                     	;# 
  2366  0119                     	;# 
  2367  0119                     	;# 
  2368  0119                     	;# 
  2369  011A                     	;# 
  2370  011A                     	;# 
  2371  011A                     	;# 
  2372  011B                     	;# 
  2373  011B                     	;# 
  2374  011B                     	;# 
  2375  011B                     	;# 
  2376  011B                     	;# 
  2377  011C                     	;# 
  2378  011C                     	;# 
  2379  011C                     	;# 
  2380  011D                     	;# 
  2381  011D                     	;# 
  2382  011D                     	;# 
  2383  011E                     	;# 
  2384  011E                     	;# 
  2385  011E                     	;# 
  2386  011F                     	;# 
  2387  011F                     	;# 
  2388  011F                     	;# 
  2389  011F                     	;# 
  2390  011F                     	;# 
  2391  018C                     	;# 
  2392  018D                     	;# 
  2393  018E                     	;# 
  2394  018F                     	;# 
  2395  0190                     	;# 
  2396  0191                     	;# 
  2397  0192                     	;# 
  2398  0196                     	;# 
  2399  0197                     	;# 
  2400  0198                     	;# 
  2401  0199                     	;# 
  2402  019A                     	;# 
  2403  019B                     	;# 
  2404  019C                     	;# 
  2405  020C                     	;# 
  2406  020C                     	;# 
  2407  020D                     	;# 
  2408  020E                     	;# 
  2409  020F                     	;# 
  2410  020F                     	;# 
  2411  0210                     	;# 
  2412  0210                     	;# 
  2413  0211                     	;# 
  2414  0211                     	;# 
  2415  0212                     	;# 
  2416  0212                     	;# 
  2417  0213                     	;# 
  2418  0214                     	;# 
  2419  0215                     	;# 
  2420  0215                     	;# 
  2421  0216                     	;# 
  2422  0216                     	;# 
  2423  0217                     	;# 
  2424  0217                     	;# 
  2425  0218                     	;# 
  2426  0218                     	;# 
  2427  0219                     	;# 
  2428  021A                     	;# 
  2429  021B                     	;# 
  2430  021B                     	;# 
  2431  021C                     	;# 
  2432  021C                     	;# 
  2433  021D                     	;# 
  2434  021D                     	;# 
  2435  021E                     	;# 
  2436  021F                     	;# 
  2437  028C                     	;# 
  2438  028C                     	;# 
  2439  028D                     	;# 
  2440  028D                     	;# 
  2441  028E                     	;# 
  2442  028F                     	;# 
  2443  0290                     	;# 
  2444  0290                     	;# 
  2445  0291                     	;# 
  2446  0292                     	;# 
  2447  0292                     	;# 
  2448  0293                     	;# 
  2449  0293                     	;# 
  2450  0294                     	;# 
  2451  0295                     	;# 
  2452  0296                     	;# 
  2453  0296                     	;# 
  2454  0297                     	;# 
  2455  0298                     	;# 
  2456  0298                     	;# 
  2457  0299                     	;# 
  2458  0299                     	;# 
  2459  029A                     	;# 
  2460  029B                     	;# 
  2461  029C                     	;# 
  2462  029C                     	;# 
  2463  029D                     	;# 
  2464  030C                     	;# 
  2465  030C                     	;# 
  2466  030D                     	;# 
  2467  030E                     	;# 
  2468  030F                     	;# 
  2469  0310                     	;# 
  2470  0310                     	;# 
  2471  0311                     	;# 
  2472  0312                     	;# 
  2473  0313                     	;# 
  2474  0314                     	;# 
  2475  0314                     	;# 
  2476  0315                     	;# 
  2477  0316                     	;# 
  2478  0317                     	;# 
  2479  0318                     	;# 
  2480  0318                     	;# 
  2481  0319                     	;# 
  2482  031A                     	;# 
  2483  031B                     	;# 
  2484  031C                     	;# 
  2485  031C                     	;# 
  2486  031D                     	;# 
  2487  031E                     	;# 
  2488  031F                     	;# 
  2489  038C                     	;# 
  2490  038C                     	;# 
  2491  038D                     	;# 
  2492  038E                     	;# 
  2493  0390                     	;# 
  2494  0390                     	;# 
  2495  0391                     	;# 
  2496  0392                     	;# 
  2497  040C                     	;# 
  2498  040D                     	;# 
  2499  040E                     	;# 
  2500  040F                     	;# 
  2501  0410                     	;# 
  2502  0411                     	;# 
  2503  0416                     	;# 
  2504  0416                     	;# 
  2505  0417                     	;# 
  2506  0418                     	;# 
  2507  0418                     	;# 
  2508  0419                     	;# 
  2509  041A                     	;# 
  2510  041A                     	;# 
  2511  041B                     	;# 
  2512  041C                     	;# 
  2513  041C                     	;# 
  2514  041D                     	;# 
  2515  041E                     	;# 
  2516  041F                     	;# 
  2517  048C                     	;# 
  2518  048C                     	;# 
  2519  048D                     	;# 
  2520  048E                     	;# 
  2521  048F                     	;# 
  2522  048F                     	;# 
  2523  0490                     	;# 
  2524  0491                     	;# 
  2525  0492                     	;# 
  2526  0492                     	;# 
  2527  0493                     	;# 
  2528  0494                     	;# 
  2529  0495                     	;# 
  2530  0495                     	;# 
  2531  0496                     	;# 
  2532  0497                     	;# 
  2533  0498                     	;# 
  2534  0499                     	;# 
  2535  049A                     	;# 
  2536  049B                     	;# 
  2537  049C                     	;# 
  2538  049D                     	;# 
  2539  050C                     	;# 
  2540  050C                     	;# 
  2541  050D                     	;# 
  2542  050E                     	;# 
  2543  050F                     	;# 
  2544  050F                     	;# 
  2545  0510                     	;# 
  2546  0511                     	;# 
  2547  0512                     	;# 
  2548  0512                     	;# 
  2549  0513                     	;# 
  2550  0514                     	;# 
  2551  0515                     	;# 
  2552  0515                     	;# 
  2553  0516                     	;# 
  2554  0517                     	;# 
  2555  0518                     	;# 
  2556  0519                     	;# 
  2557  051A                     	;# 
  2558  051B                     	;# 
  2559  051C                     	;# 
  2560  051D                     	;# 
  2561  058C                     	;# 
  2562  058C                     	;# 
  2563  058D                     	;# 
  2564  058E                     	;# 
  2565  058F                     	;# 
  2566  058F                     	;# 
  2567  0590                     	;# 
  2568  0591                     	;# 
  2569  0592                     	;# 
  2570  0593                     	;# 
  2571  060C                     	;# 
  2572  060D                     	;# 
  2573  060E                     	;# 
  2574  060F                     	;# 
  2575  0610                     	;# 
  2576  0611                     	;# 
  2577  0612                     	;# 
  2578  0613                     	;# 
  2579  0614                     	;# 
  2580  0616                     	;# 
  2581  0617                     	;# 
  2582  0618                     	;# 
  2583  0619                     	;# 
  2584  061A                     	;# 
  2585  061B                     	;# 
  2586  061C                     	;# 
  2587  061D                     	;# 
  2588  061E                     	;# 
  2589  068C                     	;# 
  2590  068D                     	;# 
  2591  068E                     	;# 
  2592  068F                     	;# 
  2593  0690                     	;# 
  2594  0691                     	;# 
  2595  0692                     	;# 
  2596  0693                     	;# 
  2597  0694                     	;# 
  2598  070C                     	;# 
  2599  070D                     	;# 
  2600  070E                     	;# 
  2601  070F                     	;# 
  2602  0710                     	;# 
  2603  0711                     	;# 
  2604  0712                     	;# 
  2605  0713                     	;# 
  2606  0714                     	;# 
  2607  0716                     	;# 
  2608  0717                     	;# 
  2609  0718                     	;# 
  2610  0719                     	;# 
  2611  071A                     	;# 
  2612  071B                     	;# 
  2613  071C                     	;# 
  2614  071D                     	;# 
  2615  071E                     	;# 
  2616  0796                     	;# 
  2617  0797                     	;# 
  2618  0798                     	;# 
  2619  0799                     	;# 
  2620  079A                     	;# 
  2621  079B                     	;# 
  2622  080C                     	;# 
  2623  080D                     	;# 
  2624  080E                     	;# 
  2625  080F                     	;# 
  2626  0810                     	;# 
  2627  0811                     	;# 
  2628  0812                     	;# 
  2629  0813                     	;# 
  2630  0814                     	;# 
  2631  081A                     	;# 
  2632  081B                     	;# 
  2633  081C                     	;# 
  2634  081D                     	;# 
  2635  081E                     	;# 
  2636  081F                     	;# 
  2637  088C                     	;# 
  2638  088D                     	;# 
  2639  088E                     	;# 
  2640  088F                     	;# 
  2641  0890                     	;# 
  2642  0891                     	;# 
  2643  0892                     	;# 
  2644  0893                     	;# 
  2645  0895                     	;# 
  2646  0896                     	;# 
  2647  0897                     	;# 
  2648  0898                     	;# 
  2649  0899                     	;# 
  2650  089A                     	;# 
  2651  089B                     	;# 
  2652  090C                     	;# 
  2653  090E                     	;# 
  2654  090F                     	;# 
  2655  091F                     	;# 
  2656  091F                     	;# 
  2657  098F                     	;# 
  2658  098F                     	;# 
  2659  0990                     	;# 
  2660  0991                     	;# 
  2661  0992                     	;# 
  2662  0993                     	;# 
  2663  0994                     	;# 
  2664  0995                     	;# 
  2665  0996                     	;# 
  2666  0997                     	;# 
  2667  0E0F                     	;# 
  2668  0E10                     	;# 
  2669  0E11                     	;# 
  2670  0E12                     	;# 
  2671  0E13                     	;# 
  2672  0E14                     	;# 
  2673  0E15                     	;# 
  2674  0E16                     	;# 
  2675  0E17                     	;# 
  2676  0E18                     	;# 
  2677  0E19                     	;# 
  2678  0E1A                     	;# 
  2679  0E1B                     	;# 
  2680  0E1C                     	;# 
  2681  0E1D                     	;# 
  2682  0E1E                     	;# 
  2683  0E1F                     	;# 
  2684  0E20                     	;# 
  2685  0E21                     	;# 
  2686  0E22                     	;# 
  2687  0E23                     	;# 
  2688  0E24                     	;# 
  2689  0E25                     	;# 
  2690  0E26                     	;# 
  2691  0E27                     	;# 
  2692  0E28                     	;# 
  2693  0E29                     	;# 
  2694  0E2A                     	;# 
  2695  0E2B                     	;# 
  2696  0E2C                     	;# 
  2697  0E2D                     	;# 
  2698  0E2E                     	;# 
  2699  0E2F                     	;# 
  2700  0E30                     	;# 
  2701  0E31                     	;# 
  2702  0E32                     	;# 
  2703  0E33                     	;# 
  2704  0E34                     	;# 
  2705  0E35                     	;# 
  2706  0E36                     	;# 
  2707  0E37                     	;# 
  2708  0E8F                     	;# 
  2709  0E90                     	;# 
  2710  0E91                     	;# 
  2711  0E92                     	;# 
  2712  0E93                     	;# 
  2713  0E94                     	;# 
  2714  0E95                     	;# 
  2715  0E96                     	;# 
  2716  0E97                     	;# 
  2717  0E9C                     	;# 
  2718  0E9D                     	;# 
  2719  0E9E                     	;# 
  2720  0EA1                     	;# 
  2721  0EA2                     	;# 
  2722  0EA3                     	;# 
  2723  0EA4                     	;# 
  2724  0EA5                     	;# 
  2725  0EA9                     	;# 
  2726  0EAA                     	;# 
  2727  0EAB                     	;# 
  2728  0EAC                     	;# 
  2729  0EB1                     	;# 
  2730  0EB2                     	;# 
  2731  0EB3                     	;# 
  2732  0EB8                     	;# 
  2733  0EB9                     	;# 
  2734  0EBA                     	;# 
  2735  0EBB                     	;# 
  2736  0EBC                     	;# 
  2737  0EBD                     	;# 
  2738  0EBE                     	;# 
  2739  0EC3                     	;# 
  2740  0EC5                     	;# 
  2741  0EC6                     	;# 
  2742  0EC7                     	;# 
  2743  0EC8                     	;# 
  2744  0EC9                     	;# 
  2745  0ECA                     	;# 
  2746  0ECB                     	;# 
  2747  0ECC                     	;# 
  2748  0F10                     	;# 
  2749  0F11                     	;# 
  2750  0F12                     	;# 
  2751  0F13                     	;# 
  2752  0F14                     	;# 
  2753  0F15                     	;# 
  2754  0F16                     	;# 
  2755  0F17                     	;# 
  2756  0F18                     	;# 
  2757  0F19                     	;# 
  2758  0F1A                     	;# 
  2759  0F1B                     	;# 
  2760  0F1C                     	;# 
  2761  0F1D                     	;# 
  2762  0F1E                     	;# 
  2763  0F1F                     	;# 
  2764  0F20                     	;# 
  2765  0F21                     	;# 
  2766  0F22                     	;# 
  2767  0F23                     	;# 
  2768  0F24                     	;# 
  2769  0F25                     	;# 
  2770  0F26                     	;# 
  2771  0F27                     	;# 
  2772  0F28                     	;# 
  2773  0F29                     	;# 
  2774  0F2A                     	;# 
  2775  0F2B                     	;# 
  2776  0F2C                     	;# 
  2777  0F2D                     	;# 
  2778  0F2E                     	;# 
  2779  0F2F                     	;# 
  2780  0F30                     	;# 
  2781  0F31                     	;# 
  2782  0F32                     	;# 
  2783  0F38                     	;# 
  2784  0F39                     	;# 
  2785  0F3A                     	;# 
  2786  0F3B                     	;# 
  2787  0F3C                     	;# 
  2788  0F3D                     	;# 
  2789  0F3E                     	;# 
  2790  0F3F                     	;# 
  2791  0F40                     	;# 
  2792  0F41                     	;# 
  2793  0F43                     	;# 
  2794  0F44                     	;# 
  2795  0F45                     	;# 
  2796  0F46                     	;# 
  2797  0F47                     	;# 
  2798  0F48                     	;# 
  2799  0F49                     	;# 
  2800  0F4A                     	;# 
  2801  0F4B                     	;# 
  2802  0F4C                     	;# 
  2803  0F4E                     	;# 
  2804  0F4F                     	;# 
  2805  0F50                     	;# 
  2806  0F51                     	;# 
  2807  0F52                     	;# 
  2808  0F53                     	;# 
  2809  0F54                     	;# 
  2810  0F55                     	;# 
  2811  0F56                     	;# 
  2812  0F57                     	;# 
  2813  0F59                     	;# 
  2814  0F5A                     	;# 
  2815  0F5B                     	;# 
  2816  0F5C                     	;# 
  2817  0F5D                     	;# 
  2818  0F61                     	;# 
  2819  0F62                     	;# 
  2820  0F64                     	;# 
  2821  0F65                     	;# 
  2822  0F66                     	;# 
  2823  0F67                     	;# 
  2824  0F68                     	;# 
  2825  0F69                     	;# 
  2826  0F6A                     	;# 
  2827  0F6B                     	;# 
  2828  0F6C                     	;# 
  2829  0F6D                     	;# 
  2830  0FE4                     	;# 
  2831  0FE5                     	;# 
  2832  0FE6                     	;# 
  2833  0FE7                     	;# 
  2834  0FE8                     	;# 
  2835  0FE9                     	;# 
  2836  0FEA                     	;# 
  2837  0FEB                     	;# 
  2838  0FED                     	;# 
  2839  0FEE                     	;# 
  2840  0FEF                     	;# 
  2841  0000                     	;# 
  2842  0001                     	;# 
  2843  0002                     	;# 
  2844  0003                     	;# 
  2845  0004                     	;# 
  2846  0005                     	;# 
  2847  0006                     	;# 
  2848  0007                     	;# 
  2849  0008                     	;# 
  2850  0009                     	;# 
  2851  000A                     	;# 
  2852  000B                     	;# 
  2853  000C                     	;# 
  2854  000D                     	;# 
  2855  000E                     	;# 
  2856  000F                     	;# 
  2857  0010                     	;# 
  2858  0011                     	;# 
  2859  0012                     	;# 
  2860  0013                     	;# 
  2861  0014                     	;# 
  2862  0015                     	;# 
  2863  0016                     	;# 
  2864  0017                     	;# 
  2865  0018                     	;# 
  2866  0019                     	;# 
  2867  001A                     	;# 
  2868  001C                     	;# 
  2869  001C                     	;# 
  2870  001D                     	;# 
  2871  001D                     	;# 
  2872  001E                     	;# 
  2873  001F                     	;# 
  2874  008C                     	;# 
  2875  008C                     	;# 
  2876  008D                     	;# 
  2877  008E                     	;# 
  2878  008E                     	;# 
  2879  008F                     	;# 
  2880  0090                     	;# 
  2881  0090                     	;# 
  2882  0091                     	;# 
  2883  0093                     	;# 
  2884  0094                     	;# 
  2885  0095                     	;# 
  2886  0096                     	;# 
  2887  0097                     	;# 
  2888  0098                     	;# 
  2889  0099                     	;# 
  2890  009A                     	;# 
  2891  009B                     	;# 
  2892  009C                     	;# 
  2893  009D                     	;# 
  2894  009E                     	;# 
  2895  010C                     	;# 
  2896  010D                     	;# 
  2897  010E                     	;# 
  2898  010E                     	;# 
  2899  010F                     	;# 
  2900  0110                     	;# 
  2901  0110                     	;# 
  2902  0111                     	;# 
  2903  0112                     	;# 
  2904  0112                     	;# 
  2905  0113                     	;# 
  2906  0114                     	;# 
  2907  0114                     	;# 
  2908  0115                     	;# 
  2909  0116                     	;# 
  2910  0116                     	;# 
  2911  0117                     	;# 
  2912  0119                     	;# 
  2913  0119                     	;# 
  2914  0119                     	;# 
  2915  011A                     	;# 
  2916  011A                     	;# 
  2917  011A                     	;# 
  2918  011B                     	;# 
  2919  011B                     	;# 
  2920  011B                     	;# 
  2921  011B                     	;# 
  2922  011B                     	;# 
  2923  011C                     	;# 
  2924  011C                     	;# 
  2925  011C                     	;# 
  2926  011D                     	;# 
  2927  011D                     	;# 
  2928  011D                     	;# 
  2929  011E                     	;# 
  2930  011E                     	;# 
  2931  011E                     	;# 
  2932  011F                     	;# 
  2933  011F                     	;# 
  2934  011F                     	;# 
  2935  011F                     	;# 
  2936  011F                     	;# 
  2937  018C                     	;# 
  2938  018D                     	;# 
  2939  018E                     	;# 
  2940  018F                     	;# 
  2941  0190                     	;# 
  2942  0191                     	;# 
  2943  0192                     	;# 
  2944  0196                     	;# 
  2945  0197                     	;# 
  2946  0198                     	;# 
  2947  0199                     	;# 
  2948  019A                     	;# 
  2949  019B                     	;# 
  2950  019C                     	;# 
  2951  020C                     	;# 
  2952  020C                     	;# 
  2953  020D                     	;# 
  2954  020E                     	;# 
  2955  020F                     	;# 
  2956  020F                     	;# 
  2957  0210                     	;# 
  2958  0210                     	;# 
  2959  0211                     	;# 
  2960  0211                     	;# 
  2961  0212                     	;# 
  2962  0212                     	;# 
  2963  0213                     	;# 
  2964  0214                     	;# 
  2965  0215                     	;# 
  2966  0215                     	;# 
  2967  0216                     	;# 
  2968  0216                     	;# 
  2969  0217                     	;# 
  2970  0217                     	;# 
  2971  0218                     	;# 
  2972  0218                     	;# 
  2973  0219                     	;# 
  2974  021A                     	;# 
  2975  021B                     	;# 
  2976  021B                     	;# 
  2977  021C                     	;# 
  2978  021C                     	;# 
  2979  021D                     	;# 
  2980  021D                     	;# 
  2981  021E                     	;# 
  2982  021F                     	;# 
  2983  028C                     	;# 
  2984  028C                     	;# 
  2985  028D                     	;# 
  2986  028D                     	;# 
  2987  028E                     	;# 
  2988  028F                     	;# 
  2989  0290                     	;# 
  2990  0290                     	;# 
  2991  0291                     	;# 
  2992  0292                     	;# 
  2993  0292                     	;# 
  2994  0293                     	;# 
  2995  0293                     	;# 
  2996  0294                     	;# 
  2997  0295                     	;# 
  2998  0296                     	;# 
  2999  0296                     	;# 
  3000  0297                     	;# 
  3001  0298                     	;# 
  3002  0298                     	;# 
  3003  0299                     	;# 
  3004  0299                     	;# 
  3005  029A                     	;# 
  3006  029B                     	;# 
  3007  029C                     	;# 
  3008  029C                     	;# 
  3009  029D                     	;# 
  3010  030C                     	;# 
  3011  030C                     	;# 
  3012  030D                     	;# 
  3013  030E                     	;# 
  3014  030F                     	;# 
  3015  0310                     	;# 
  3016  0310                     	;# 
  3017  0311                     	;# 
  3018  0312                     	;# 
  3019  0313                     	;# 
  3020  0314                     	;# 
  3021  0314                     	;# 
  3022  0315                     	;# 
  3023  0316                     	;# 
  3024  0317                     	;# 
  3025  0318                     	;# 
  3026  0318                     	;# 
  3027  0319                     	;# 
  3028  031A                     	;# 
  3029  031B                     	;# 
  3030  031C                     	;# 
  3031  031C                     	;# 
  3032  031D                     	;# 
  3033  031E                     	;# 
  3034  031F                     	;# 
  3035  038C                     	;# 
  3036  038C                     	;# 
  3037  038D                     	;# 
  3038  038E                     	;# 
  3039  0390                     	;# 
  3040  0390                     	;# 
  3041  0391                     	;# 
  3042  0392                     	;# 
  3043  040C                     	;# 
  3044  040D                     	;# 
  3045  040E                     	;# 
  3046  040F                     	;# 
  3047  0410                     	;# 
  3048  0411                     	;# 
  3049  0416                     	;# 
  3050  0416                     	;# 
  3051  0417                     	;# 
  3052  0418                     	;# 
  3053  0418                     	;# 
  3054  0419                     	;# 
  3055  041A                     	;# 
  3056  041A                     	;# 
  3057  041B                     	;# 
  3058  041C                     	;# 
  3059  041C                     	;# 
  3060  041D                     	;# 
  3061  041E                     	;# 
  3062  041F                     	;# 
  3063  048C                     	;# 
  3064  048C                     	;# 
  3065  048D                     	;# 
  3066  048E                     	;# 
  3067  048F                     	;# 
  3068  048F                     	;# 
  3069  0490                     	;# 
  3070  0491                     	;# 
  3071  0492                     	;# 
  3072  0492                     	;# 
  3073  0493                     	;# 
  3074  0494                     	;# 
  3075  0495                     	;# 
  3076  0495                     	;# 
  3077  0496                     	;# 
  3078  0497                     	;# 
  3079  0498                     	;# 
  3080  0499                     	;# 
  3081  049A                     	;# 
  3082  049B                     	;# 
  3083  049C                     	;# 
  3084  049D                     	;# 
  3085  050C                     	;# 
  3086  050C                     	;# 
  3087  050D                     	;# 
  3088  050E                     	;# 
  3089  050F                     	;# 
  3090  050F                     	;# 
  3091  0510                     	;# 
  3092  0511                     	;# 
  3093  0512                     	;# 
  3094  0512                     	;# 
  3095  0513                     	;# 
  3096  0514                     	;# 
  3097  0515                     	;# 
  3098  0515                     	;# 
  3099  0516                     	;# 
  3100  0517                     	;# 
  3101  0518                     	;# 
  3102  0519                     	;# 
  3103  051A                     	;# 
  3104  051B                     	;# 
  3105  051C                     	;# 
  3106  051D                     	;# 
  3107  058C                     	;# 
  3108  058C                     	;# 
  3109  058D                     	;# 
  3110  058E                     	;# 
  3111  058F                     	;# 
  3112  058F                     	;# 
  3113  0590                     	;# 
  3114  0591                     	;# 
  3115  0592                     	;# 
  3116  0593                     	;# 
  3117  060C                     	;# 
  3118  060D                     	;# 
  3119  060E                     	;# 
  3120  060F                     	;# 
  3121  0610                     	;# 
  3122  0611                     	;# 
  3123  0612                     	;# 
  3124  0613                     	;# 
  3125  0614                     	;# 
  3126  0616                     	;# 
  3127  0617                     	;# 
  3128  0618                     	;# 
  3129  0619                     	;# 
  3130  061A                     	;# 
  3131  061B                     	;# 
  3132  061C                     	;# 
  3133  061D                     	;# 
  3134  061E                     	;# 
  3135  068C                     	;# 
  3136  068D                     	;# 
  3137  068E                     	;# 
  3138  068F                     	;# 
  3139  0690                     	;# 
  3140  0691                     	;# 
  3141  0692                     	;# 
  3142  0693                     	;# 
  3143  0694                     	;# 
  3144  070C                     	;# 
  3145  070D                     	;# 
  3146  070E                     	;# 
  3147  070F                     	;# 
  3148  0710                     	;# 
  3149  0711                     	;# 
  3150  0712                     	;# 
  3151  0713                     	;# 
  3152  0714                     	;# 
  3153  0716                     	;# 
  3154  0717                     	;# 
  3155  0718                     	;# 
  3156  0719                     	;# 
  3157  071A                     	;# 
  3158  071B                     	;# 
  3159  071C                     	;# 
  3160  071D                     	;# 
  3161  071E                     	;# 
  3162  0796                     	;# 
  3163  0797                     	;# 
  3164  0798                     	;# 
  3165  0799                     	;# 
  3166  079A                     	;# 
  3167  079B                     	;# 
  3168  080C                     	;# 
  3169  080D                     	;# 
  3170  080E                     	;# 
  3171  080F                     	;# 
  3172  0810                     	;# 
  3173  0811                     	;# 
  3174  0812                     	;# 
  3175  0813                     	;# 
  3176  0814                     	;# 
  3177  081A                     	;# 
  3178  081B                     	;# 
  3179  081C                     	;# 
  3180  081D                     	;# 
  3181  081E                     	;# 
  3182  081F                     	;# 
  3183  088C                     	;# 
  3184  088D                     	;# 
  3185  088E                     	;# 
  3186  088F                     	;# 
  3187  0890                     	;# 
  3188  0891                     	;# 
  3189  0892                     	;# 
  3190  0893                     	;# 
  3191  0895                     	;# 
  3192  0896                     	;# 
  3193  0897                     	;# 
  3194  0898                     	;# 
  3195  0899                     	;# 
  3196  089A                     	;# 
  3197  089B                     	;# 
  3198  090C                     	;# 
  3199  090E                     	;# 
  3200  090F                     	;# 
  3201  091F                     	;# 
  3202  091F                     	;# 
  3203  098F                     	;# 
  3204  098F                     	;# 
  3205  0990                     	;# 
  3206  0991                     	;# 
  3207  0992                     	;# 
  3208  0993                     	;# 
  3209  0994                     	;# 
  3210  0995                     	;# 
  3211  0996                     	;# 
  3212  0997                     	;# 
  3213  0E0F                     	;# 
  3214  0E10                     	;# 
  3215  0E11                     	;# 
  3216  0E12                     	;# 
  3217  0E13                     	;# 
  3218  0E14                     	;# 
  3219  0E15                     	;# 
  3220  0E16                     	;# 
  3221  0E17                     	;# 
  3222  0E18                     	;# 
  3223  0E19                     	;# 
  3224  0E1A                     	;# 
  3225  0E1B                     	;# 
  3226  0E1C                     	;# 
  3227  0E1D                     	;# 
  3228  0E1E                     	;# 
  3229  0E1F                     	;# 
  3230  0E20                     	;# 
  3231  0E21                     	;# 
  3232  0E22                     	;# 
  3233  0E23                     	;# 
  3234  0E24                     	;# 
  3235  0E25                     	;# 
  3236  0E26                     	;# 
  3237  0E27                     	;# 
  3238  0E28                     	;# 
  3239  0E29                     	;# 
  3240  0E2A                     	;# 
  3241  0E2B                     	;# 
  3242  0E2C                     	;# 
  3243  0E2D                     	;# 
  3244  0E2E                     	;# 
  3245  0E2F                     	;# 
  3246  0E30                     	;# 
  3247  0E31                     	;# 
  3248  0E32                     	;# 
  3249  0E33                     	;# 
  3250  0E34                     	;# 
  3251  0E35                     	;# 
  3252  0E36                     	;# 
  3253  0E37                     	;# 
  3254  0E8F                     	;# 
  3255  0E90                     	;# 
  3256  0E91                     	;# 
  3257  0E92                     	;# 
  3258  0E93                     	;# 
  3259  0E94                     	;# 
  3260  0E95                     	;# 
  3261  0E96                     	;# 
  3262  0E97                     	;# 
  3263  0E9C                     	;# 
  3264  0E9D                     	;# 
  3265  0E9E                     	;# 
  3266  0EA1                     	;# 
  3267  0EA2                     	;# 
  3268  0EA3                     	;# 
  3269  0EA4                     	;# 
  3270  0EA5                     	;# 
  3271  0EA9                     	;# 
  3272  0EAA                     	;# 
  3273  0EAB                     	;# 
  3274  0EAC                     	;# 
  3275  0EB1                     	;# 
  3276  0EB2                     	;# 
  3277  0EB3                     	;# 
  3278  0EB8                     	;# 
  3279  0EB9                     	;# 
  3280  0EBA                     	;# 
  3281  0EBB                     	;# 
  3282  0EBC                     	;# 
  3283  0EBD                     	;# 
  3284  0EBE                     	;# 
  3285  0EC3                     	;# 
  3286  0EC5                     	;# 
  3287  0EC6                     	;# 
  3288  0EC7                     	;# 
  3289  0EC8                     	;# 
  3290  0EC9                     	;# 
  3291  0ECA                     	;# 
  3292  0ECB                     	;# 
  3293  0ECC                     	;# 
  3294  0F10                     	;# 
  3295  0F11                     	;# 
  3296  0F12                     	;# 
  3297  0F13                     	;# 
  3298  0F14                     	;# 
  3299  0F15                     	;# 
  3300  0F16                     	;# 
  3301  0F17                     	;# 
  3302  0F18                     	;# 
  3303  0F19                     	;# 
  3304  0F1A                     	;# 
  3305  0F1B                     	;# 
  3306  0F1C                     	;# 
  3307  0F1D                     	;# 
  3308  0F1E                     	;# 
  3309  0F1F                     	;# 
  3310  0F20                     	;# 
  3311  0F21                     	;# 
  3312  0F22                     	;# 
  3313  0F23                     	;# 
  3314  0F24                     	;# 
  3315  0F25                     	;# 
  3316  0F26                     	;# 
  3317  0F27                     	;# 
  3318  0F28                     	;# 
  3319  0F29                     	;# 
  3320  0F2A                     	;# 
  3321  0F2B                     	;# 
  3322  0F2C                     	;# 
  3323  0F2D                     	;# 
  3324  0F2E                     	;# 
  3325  0F2F                     	;# 
  3326  0F30                     	;# 
  3327  0F31                     	;# 
  3328  0F32                     	;# 
  3329  0F38                     	;# 
  3330  0F39                     	;# 
  3331  0F3A                     	;# 
  3332  0F3B                     	;# 
  3333  0F3C                     	;# 
  3334  0F3D                     	;# 
  3335  0F3E                     	;# 
  3336  0F3F                     	;# 
  3337  0F40                     	;# 
  3338  0F41                     	;# 
  3339  0F43                     	;# 
  3340  0F44                     	;# 
  3341  0F45                     	;# 
  3342  0F46                     	;# 
  3343  0F47                     	;# 
  3344  0F48                     	;# 
  3345  0F49                     	;# 
  3346  0F4A                     	;# 
  3347  0F4B                     	;# 
  3348  0F4C                     	;# 
  3349  0F4E                     	;# 
  3350  0F4F                     	;# 
  3351  0F50                     	;# 
  3352  0F51                     	;# 
  3353  0F52                     	;# 
  3354  0F53                     	;# 
  3355  0F54                     	;# 
  3356  0F55                     	;# 
  3357  0F56                     	;# 
  3358  0F57                     	;# 
  3359  0F59                     	;# 
  3360  0F5A                     	;# 
  3361  0F5B                     	;# 
  3362  0F5C                     	;# 
  3363  0F5D                     	;# 
  3364  0F61                     	;# 
  3365  0F62                     	;# 
  3366  0F64                     	;# 
  3367  0F65                     	;# 
  3368  0F66                     	;# 
  3369  0F67                     	;# 
  3370  0F68                     	;# 
  3371  0F69                     	;# 
  3372  0F6A                     	;# 
  3373  0F6B                     	;# 
  3374  0F6C                     	;# 
  3375  0F6D                     	;# 
  3376  0FE4                     	;# 
  3377  0FE5                     	;# 
  3378  0FE6                     	;# 
  3379  0FE7                     	;# 
  3380  0FE8                     	;# 
  3381  0FE9                     	;# 
  3382  0FEA                     	;# 
  3383  0FEB                     	;# 
  3384  0FED                     	;# 
  3385  0FEE                     	;# 
  3386  0FEF                     	;# 
  3387  0000                     	;# 
  3388  0001                     	;# 
  3389  0002                     	;# 
  3390  0003                     	;# 
  3391  0004                     	;# 
  3392  0005                     	;# 
  3393  0006                     	;# 
  3394  0007                     	;# 
  3395  0008                     	;# 
  3396  0009                     	;# 
  3397  000A                     	;# 
  3398  000B                     	;# 
  3399  000C                     	;# 
  3400  000D                     	;# 
  3401  000E                     	;# 
  3402  000F                     	;# 
  3403  0010                     	;# 
  3404  0011                     	;# 
  3405  0012                     	;# 
  3406  0013                     	;# 
  3407  0014                     	;# 
  3408  0015                     	;# 
  3409  0016                     	;# 
  3410  0017                     	;# 
  3411  0018                     	;# 
  3412  0019                     	;# 
  3413  001A                     	;# 
  3414  001C                     	;# 
  3415  001C                     	;# 
  3416  001D                     	;# 
  3417  001D                     	;# 
  3418  001E                     	;# 
  3419  001F                     	;# 
  3420  008C                     	;# 
  3421  008C                     	;# 
  3422  008D                     	;# 
  3423  008E                     	;# 
  3424  008E                     	;# 
  3425  008F                     	;# 
  3426  0090                     	;# 
  3427  0090                     	;# 
  3428  0091                     	;# 
  3429  0093                     	;# 
  3430  0094                     	;# 
  3431  0095                     	;# 
  3432  0096                     	;# 
  3433  0097                     	;# 
  3434  0098                     	;# 
  3435  0099                     	;# 
  3436  009A                     	;# 
  3437  009B                     	;# 
  3438  009C                     	;# 
  3439  009D                     	;# 
  3440  009E                     	;# 
  3441  010C                     	;# 
  3442  010D                     	;# 
  3443  010E                     	;# 
  3444  010E                     	;# 
  3445  010F                     	;# 
  3446  0110                     	;# 
  3447  0110                     	;# 
  3448  0111                     	;# 
  3449  0112                     	;# 
  3450  0112                     	;# 
  3451  0113                     	;# 
  3452  0114                     	;# 
  3453  0114                     	;# 
  3454  0115                     	;# 
  3455  0116                     	;# 
  3456  0116                     	;# 
  3457  0117                     	;# 
  3458  0119                     	;# 
  3459  0119                     	;# 
  3460  0119                     	;# 
  3461  011A                     	;# 
  3462  011A                     	;# 
  3463  011A                     	;# 
  3464  011B                     	;# 
  3465  011B                     	;# 
  3466  011B                     	;# 
  3467  011B                     	;# 
  3468  011B                     	;# 
  3469  011C                     	;# 
  3470  011C                     	;# 
  3471  011C                     	;# 
  3472  011D                     	;# 
  3473  011D                     	;# 
  3474  011D                     	;# 
  3475  011E                     	;# 
  3476  011E                     	;# 
  3477  011E                     	;# 
  3478  011F                     	;# 
  3479  011F                     	;# 
  3480  011F                     	;# 
  3481  011F                     	;# 
  3482  011F                     	;# 
  3483  018C                     	;# 
  3484  018D                     	;# 
  3485  018E                     	;# 
  3486  018F                     	;# 
  3487  0190                     	;# 
  3488  0191                     	;# 
  3489  0192                     	;# 
  3490  0196                     	;# 
  3491  0197                     	;# 
  3492  0198                     	;# 
  3493  0199                     	;# 
  3494  019A                     	;# 
  3495  019B                     	;# 
  3496  019C                     	;# 
  3497  020C                     	;# 
  3498  020C                     	;# 
  3499  020D                     	;# 
  3500  020E                     	;# 
  3501  020F                     	;# 
  3502  020F                     	;# 
  3503  0210                     	;# 
  3504  0210                     	;# 
  3505  0211                     	;# 
  3506  0211                     	;# 
  3507  0212                     	;# 
  3508  0212                     	;# 
  3509  0213                     	;# 
  3510  0214                     	;# 
  3511  0215                     	;# 
  3512  0215                     	;# 
  3513  0216                     	;# 
  3514  0216                     	;# 
  3515  0217                     	;# 
  3516  0217                     	;# 
  3517  0218                     	;# 
  3518  0218                     	;# 
  3519  0219                     	;# 
  3520  021A                     	;# 
  3521  021B                     	;# 
  3522  021B                     	;# 
  3523  021C                     	;# 
  3524  021C                     	;# 
  3525  021D                     	;# 
  3526  021D                     	;# 
  3527  021E                     	;# 
  3528  021F                     	;# 
  3529  028C                     	;# 
  3530  028C                     	;# 
  3531  028D                     	;# 
  3532  028D                     	;# 
  3533  028E                     	;# 
  3534  028F                     	;# 
  3535  0290                     	;# 
  3536  0290                     	;# 
  3537  0291                     	;# 
  3538  0292                     	;# 
  3539  0292                     	;# 
  3540  0293                     	;# 
  3541  0293                     	;# 
  3542  0294                     	;# 
  3543  0295                     	;# 
  3544  0296                     	;# 
  3545  0296                     	;# 
  3546  0297                     	;# 
  3547  0298                     	;# 
  3548  0298                     	;# 
  3549  0299                     	;# 
  3550  0299                     	;# 
  3551  029A                     	;# 
  3552  029B                     	;# 
  3553  029C                     	;# 
  3554  029C                     	;# 
  3555  029D                     	;# 
  3556  030C                     	;# 
  3557  030C                     	;# 
  3558  030D                     	;# 
  3559  030E                     	;# 
  3560  030F                     	;# 
  3561  0310                     	;# 
  3562  0310                     	;# 
  3563  0311                     	;# 
  3564  0312                     	;# 
  3565  0313                     	;# 
  3566  0314                     	;# 
  3567  0314                     	;# 
  3568  0315                     	;# 
  3569  0316                     	;# 
  3570  0317                     	;# 
  3571  0318                     	;# 
  3572  0318                     	;# 
  3573  0319                     	;# 
  3574  031A                     	;# 
  3575  031B                     	;# 
  3576  031C                     	;# 
  3577  031C                     	;# 
  3578  031D                     	;# 
  3579  031E                     	;# 
  3580  031F                     	;# 
  3581  038C                     	;# 
  3582  038C                     	;# 
  3583  038D                     	;# 
  3584  038E                     	;# 
  3585  0390                     	;# 
  3586  0390                     	;# 
  3587  0391                     	;# 
  3588  0392                     	;# 
  3589  040C                     	;# 
  3590  040D                     	;# 
  3591  040E                     	;# 
  3592  040F                     	;# 
  3593  0410                     	;# 
  3594  0411                     	;# 
  3595  0416                     	;# 
  3596  0416                     	;# 
  3597  0417                     	;# 
  3598  0418                     	;# 
  3599  0418                     	;# 
  3600  0419                     	;# 
  3601  041A                     	;# 
  3602  041A                     	;# 
  3603  041B                     	;# 
  3604  041C                     	;# 
  3605  041C                     	;# 
  3606  041D                     	;# 
  3607  041E                     	;# 
  3608  041F                     	;# 
  3609  048C                     	;# 
  3610  048C                     	;# 
  3611  048D                     	;# 
  3612  048E                     	;# 
  3613  048F                     	;# 
  3614  048F                     	;# 
  3615  0490                     	;# 
  3616  0491                     	;# 
  3617  0492                     	;# 
  3618  0492                     	;# 
  3619  0493                     	;# 
  3620  0494                     	;# 
  3621  0495                     	;# 
  3622  0495                     	;# 
  3623  0496                     	;# 
  3624  0497                     	;# 
  3625  0498                     	;# 
  3626  0499                     	;# 
  3627  049A                     	;# 
  3628  049B                     	;# 
  3629  049C                     	;# 
  3630  049D                     	;# 
  3631  050C                     	;# 
  3632  050C                     	;# 
  3633  050D                     	;# 
  3634  050E                     	;# 
  3635  050F                     	;# 
  3636  050F                     	;# 
  3637  0510                     	;# 
  3638  0511                     	;# 
  3639  0512                     	;# 
  3640  0512                     	;# 
  3641  0513                     	;# 
  3642  0514                     	;# 
  3643  0515                     	;# 
  3644  0515                     	;# 
  3645  0516                     	;# 
  3646  0517                     	;# 
  3647  0518                     	;# 
  3648  0519                     	;# 
  3649  051A                     	;# 
  3650  051B                     	;# 
  3651  051C                     	;# 
  3652  051D                     	;# 
  3653  058C                     	;# 
  3654  058C                     	;# 
  3655  058D                     	;# 
  3656  058E                     	;# 
  3657  058F                     	;# 
  3658  058F                     	;# 
  3659  0590                     	;# 
  3660  0591                     	;# 
  3661  0592                     	;# 
  3662  0593                     	;# 
  3663  060C                     	;# 
  3664  060D                     	;# 
  3665  060E                     	;# 
  3666  060F                     	;# 
  3667  0610                     	;# 
  3668  0611                     	;# 
  3669  0612                     	;# 
  3670  0613                     	;# 
  3671  0614                     	;# 
  3672  0616                     	;# 
  3673  0617                     	;# 
  3674  0618                     	;# 
  3675  0619                     	;# 
  3676  061A                     	;# 
  3677  061B                     	;# 
  3678  061C                     	;# 
  3679  061D                     	;# 
  3680  061E                     	;# 
  3681  068C                     	;# 
  3682  068D                     	;# 
  3683  068E                     	;# 
  3684  068F                     	;# 
  3685  0690                     	;# 
  3686  0691                     	;# 
  3687  0692                     	;# 
  3688  0693                     	;# 
  3689  0694                     	;# 
  3690  070C                     	;# 
  3691  070D                     	;# 
  3692  070E                     	;# 
  3693  070F                     	;# 
  3694  0710                     	;# 
  3695  0711                     	;# 
  3696  0712                     	;# 
  3697  0713                     	;# 
  3698  0714                     	;# 
  3699  0716                     	;# 
  3700  0717                     	;# 
  3701  0718                     	;# 
  3702  0719                     	;# 
  3703  071A                     	;# 
  3704  071B                     	;# 
  3705  071C                     	;# 
  3706  071D                     	;# 
  3707  071E                     	;# 
  3708  0796                     	;# 
  3709  0797                     	;# 
  3710  0798                     	;# 
  3711  0799                     	;# 
  3712  079A                     	;# 
  3713  079B                     	;# 
  3714  080C                     	;# 
  3715  080D                     	;# 
  3716  080E                     	;# 
  3717  080F                     	;# 
  3718  0810                     	;# 
  3719  0811                     	;# 
  3720  0812                     	;# 
  3721  0813                     	;# 
  3722  0814                     	;# 
  3723  081A                     	;# 
  3724  081B                     	;# 
  3725  081C                     	;# 
  3726  081D                     	;# 
  3727  081E                     	;# 
  3728  081F                     	;# 
  3729  088C                     	;# 
  3730  088D                     	;# 
  3731  088E                     	;# 
  3732  088F                     	;# 
  3733  0890                     	;# 
  3734  0891                     	;# 
  3735  0892                     	;# 
  3736  0893                     	;# 
  3737  0895                     	;# 
  3738  0896                     	;# 
  3739  0897                     	;# 
  3740  0898                     	;# 
  3741  0899                     	;# 
  3742  089A                     	;# 
  3743  089B                     	;# 
  3744  090C                     	;# 
  3745  090E                     	;# 
  3746  090F                     	;# 
  3747  091F                     	;# 
  3748  091F                     	;# 
  3749  098F                     	;# 
  3750  098F                     	;# 
  3751  0990                     	;# 
  3752  0991                     	;# 
  3753  0992                     	;# 
  3754  0993                     	;# 
  3755  0994                     	;# 
  3756  0995                     	;# 
  3757  0996                     	;# 
  3758  0997                     	;# 
  3759  0E0F                     	;# 
  3760  0E10                     	;# 
  3761  0E11                     	;# 
  3762  0E12                     	;# 
  3763  0E13                     	;# 
  3764  0E14                     	;# 
  3765  0E15                     	;# 
  3766  0E16                     	;# 
  3767  0E17                     	;# 
  3768  0E18                     	;# 
  3769  0E19                     	;# 
  3770  0E1A                     	;# 
  3771  0E1B                     	;# 
  3772  0E1C                     	;# 
  3773  0E1D                     	;# 
  3774  0E1E                     	;# 
  3775  0E1F                     	;# 
  3776  0E20                     	;# 
  3777  0E21                     	;# 
  3778  0E22                     	;# 
  3779  0E23                     	;# 
  3780  0E24                     	;# 
  3781  0E25                     	;# 
  3782  0E26                     	;# 
  3783  0E27                     	;# 
  3784  0E28                     	;# 
  3785  0E29                     	;# 
  3786  0E2A                     	;# 
  3787  0E2B                     	;# 
  3788  0E2C                     	;# 
  3789  0E2D                     	;# 
  3790  0E2E                     	;# 
  3791  0E2F                     	;# 
  3792  0E30                     	;# 
  3793  0E31                     	;# 
  3794  0E32                     	;# 
  3795  0E33                     	;# 
  3796  0E34                     	;# 
  3797  0E35                     	;# 
  3798  0E36                     	;# 
  3799  0E37                     	;# 
  3800  0E8F                     	;# 
  3801  0E90                     	;# 
  3802  0E91                     	;# 
  3803  0E92                     	;# 
  3804  0E93                     	;# 
  3805  0E94                     	;# 
  3806  0E95                     	;# 
  3807  0E96                     	;# 
  3808  0E97                     	;# 
  3809  0E9C                     	;# 
  3810  0E9D                     	;# 
  3811  0E9E                     	;# 
  3812  0EA1                     	;# 
  3813  0EA2                     	;# 
  3814  0EA3                     	;# 
  3815  0EA4                     	;# 
  3816  0EA5                     	;# 
  3817  0EA9                     	;# 
  3818  0EAA                     	;# 
  3819  0EAB                     	;# 
  3820  0EAC                     	;# 
  3821  0EB1                     	;# 
  3822  0EB2                     	;# 
  3823  0EB3                     	;# 
  3824  0EB8                     	;# 
  3825  0EB9                     	;# 
  3826  0EBA                     	;# 
  3827  0EBB                     	;# 
  3828  0EBC                     	;# 
  3829  0EBD                     	;# 
  3830  0EBE                     	;# 
  3831  0EC3                     	;# 
  3832  0EC5                     	;# 
  3833  0EC6                     	;# 
  3834  0EC7                     	;# 
  3835  0EC8                     	;# 
  3836  0EC9                     	;# 
  3837  0ECA                     	;# 
  3838  0ECB                     	;# 
  3839  0ECC                     	;# 
  3840  0F10                     	;# 
  3841  0F11                     	;# 
  3842  0F12                     	;# 
  3843  0F13                     	;# 
  3844  0F14                     	;# 
  3845  0F15                     	;# 
  3846  0F16                     	;# 
  3847  0F17                     	;# 
  3848  0F18                     	;# 
  3849  0F19                     	;# 
  3850  0F1A                     	;# 
  3851  0F1B                     	;# 
  3852  0F1C                     	;# 
  3853  0F1D                     	;# 
  3854  0F1E                     	;# 
  3855  0F1F                     	;# 
  3856  0F20                     	;# 
  3857  0F21                     	;# 
  3858  0F22                     	;# 
  3859  0F23                     	;# 
  3860  0F24                     	;# 
  3861  0F25                     	;# 
  3862  0F26                     	;# 
  3863  0F27                     	;# 
  3864  0F28                     	;# 
  3865  0F29                     	;# 
  3866  0F2A                     	;# 
  3867  0F2B                     	;# 
  3868  0F2C                     	;# 
  3869  0F2D                     	;# 
  3870  0F2E                     	;# 
  3871  0F2F                     	;# 
  3872  0F30                     	;# 
  3873  0F31                     	;# 
  3874  0F32                     	;# 
  3875  0F38                     	;# 
  3876  0F39                     	;# 
  3877  0F3A                     	;# 
  3878  0F3B                     	;# 
  3879  0F3C                     	;# 
  3880  0F3D                     	;# 
  3881  0F3E                     	;# 
  3882  0F3F                     	;# 
  3883  0F40                     	;# 
  3884  0F41                     	;# 
  3885  0F43                     	;# 
  3886  0F44                     	;# 
  3887  0F45                     	;# 
  3888  0F46                     	;# 
  3889  0F47                     	;# 
  3890  0F48                     	;# 
  3891  0F49                     	;# 
  3892  0F4A                     	;# 
  3893  0F4B                     	;# 
  3894  0F4C                     	;# 
  3895  0F4E                     	;# 
  3896  0F4F                     	;# 
  3897  0F50                     	;# 
  3898  0F51                     	;# 
  3899  0F52                     	;# 
  3900  0F53                     	;# 
  3901  0F54                     	;# 
  3902  0F55                     	;# 
  3903  0F56                     	;# 
  3904  0F57                     	;# 
  3905  0F59                     	;# 
  3906  0F5A                     	;# 
  3907  0F5B                     	;# 
  3908  0F5C                     	;# 
  3909  0F5D                     	;# 
  3910  0F61                     	;# 
  3911  0F62                     	;# 
  3912  0F64                     	;# 
  3913  0F65                     	;# 
  3914  0F66                     	;# 
  3915  0F67                     	;# 
  3916  0F68                     	;# 
  3917  0F69                     	;# 
  3918  0F6A                     	;# 
  3919  0F6B                     	;# 
  3920  0F6C                     	;# 
  3921  0F6D                     	;# 
  3922  0FE4                     	;# 
  3923  0FE5                     	;# 
  3924  0FE6                     	;# 
  3925  0FE7                     	;# 
  3926  0FE8                     	;# 
  3927  0FE9                     	;# 
  3928  0FEA                     	;# 
  3929  0FEB                     	;# 
  3930  0FED                     	;# 
  3931  0FEE                     	;# 
  3932  0FEF                     	;# 
  3933  0000                     	;# 
  3934  0001                     	;# 
  3935  0002                     	;# 
  3936  0003                     	;# 
  3937  0004                     	;# 
  3938  0005                     	;# 
  3939  0006                     	;# 
  3940  0007                     	;# 
  3941  0008                     	;# 
  3942  0009                     	;# 
  3943  000A                     	;# 
  3944  000B                     	;# 
  3945  000C                     	;# 
  3946  000D                     	;# 
  3947  000E                     	;# 
  3948  000F                     	;# 
  3949  0010                     	;# 
  3950  0011                     	;# 
  3951  0012                     	;# 
  3952  0013                     	;# 
  3953  0014                     	;# 
  3954  0015                     	;# 
  3955  0016                     	;# 
  3956  0017                     	;# 
  3957  0018                     	;# 
  3958  0019                     	;# 
  3959  001A                     	;# 
  3960  001C                     	;# 
  3961  001C                     	;# 
  3962  001D                     	;# 
  3963  001D                     	;# 
  3964  001E                     	;# 
  3965  001F                     	;# 
  3966  008C                     	;# 
  3967  008C                     	;# 
  3968  008D                     	;# 
  3969  008E                     	;# 
  3970  008E                     	;# 
  3971  008F                     	;# 
  3972  0090                     	;# 
  3973  0090                     	;# 
  3974  0091                     	;# 
  3975  0093                     	;# 
  3976  0094                     	;# 
  3977  0095                     	;# 
  3978  0096                     	;# 
  3979  0097                     	;# 
  3980  0098                     	;# 
  3981  0099                     	;# 
  3982  009A                     	;# 
  3983  009B                     	;# 
  3984  009C                     	;# 
  3985  009D                     	;# 
  3986  009E                     	;# 
  3987  010C                     	;# 
  3988  010D                     	;# 
  3989  010E                     	;# 
  3990  010E                     	;# 
  3991  010F                     	;# 
  3992  0110                     	;# 
  3993  0110                     	;# 
  3994  0111                     	;# 
  3995  0112                     	;# 
  3996  0112                     	;# 
  3997  0113                     	;# 
  3998  0114                     	;# 
  3999  0114                     	;# 
  4000  0115                     	;# 
  4001  0116                     	;# 
  4002  0116                     	;# 
  4003  0117                     	;# 
  4004  0119                     	;# 
  4005  0119                     	;# 
  4006  0119                     	;# 
  4007  011A                     	;# 
  4008  011A                     	;# 
  4009  011A                     	;# 
  4010  011B                     	;# 
  4011  011B                     	;# 
  4012  011B                     	;# 
  4013  011B                     	;# 
  4014  011B                     	;# 
  4015  011C                     	;# 
  4016  011C                     	;# 
  4017  011C                     	;# 
  4018  011D                     	;# 
  4019  011D                     	;# 
  4020  011D                     	;# 
  4021  011E                     	;# 
  4022  011E                     	;# 
  4023  011E                     	;# 
  4024  011F                     	;# 
  4025  011F                     	;# 
  4026  011F                     	;# 
  4027  011F                     	;# 
  4028  011F                     	;# 
  4029  018C                     	;# 
  4030  018D                     	;# 
  4031  018E                     	;# 
  4032  018F                     	;# 
  4033  0190                     	;# 
  4034  0191                     	;# 
  4035  0192                     	;# 
  4036  0196                     	;# 
  4037  0197                     	;# 
  4038  0198                     	;# 
  4039  0199                     	;# 
  4040  019A                     	;# 
  4041  019B                     	;# 
  4042  019C                     	;# 
  4043  020C                     	;# 
  4044  020C                     	;# 
  4045  020D                     	;# 
  4046  020E                     	;# 
  4047  020F                     	;# 
  4048  020F                     	;# 
  4049  0210                     	;# 
  4050  0210                     	;# 
  4051  0211                     	;# 
  4052  0211                     	;# 
  4053  0212                     	;# 
  4054  0212                     	;# 
  4055  0213                     	;# 
  4056  0214                     	;# 
  4057  0215                     	;# 
  4058  0215                     	;# 
  4059  0216                     	;# 
  4060  0216                     	;# 
  4061  0217                     	;# 
  4062  0217                     	;# 
  4063  0218                     	;# 
  4064  0218                     	;# 
  4065  0219                     	;# 
  4066  021A                     	;# 
  4067  021B                     	;# 
  4068  021B                     	;# 
  4069  021C                     	;# 
  4070  021C                     	;# 
  4071  021D                     	;# 
  4072  021D                     	;# 
  4073  021E                     	;# 
  4074  021F                     	;# 
  4075  028C                     	;# 
  4076  028C                     	;# 
  4077  028D                     	;# 
  4078  028D                     	;# 
  4079  028E                     	;# 
  4080  028F                     	;# 
  4081  0290                     	;# 
  4082  0290                     	;# 
  4083  0291                     	;# 
  4084  0292                     	;# 
  4085  0292                     	;# 
  4086  0293                     	;# 
  4087  0293                     	;# 
  4088  0294                     	;# 
  4089  0295                     	;# 
  4090  0296                     	;# 
  4091  0296                     	;# 
  4092  0297                     	;# 
  4093  0298                     	;# 
  4094  0298                     	;# 
  4095  0299                     	;# 
  4096  0299                     	;# 
  4097  029A                     	;# 
  4098  029B                     	;# 
  4099  029C                     	;# 
  4100  029C                     	;# 
  4101  029D                     	;# 
  4102  030C                     	;# 
  4103  030C                     	;# 
  4104  030D                     	;# 
  4105  030E                     	;# 
  4106  030F                     	;# 
  4107  0310                     	;# 
  4108  0310                     	;# 
  4109  0311                     	;# 
  4110  0312                     	;# 
  4111  0313                     	;# 
  4112  0314                     	;# 
  4113  0314                     	;# 
  4114  0315                     	;# 
  4115  0316                     	;# 
  4116  0317                     	;# 
  4117  0318                     	;# 
  4118  0318                     	;# 
  4119  0319                     	;# 
  4120  031A                     	;# 
  4121  031B                     	;# 
  4122  031C                     	;# 
  4123  031C                     	;# 
  4124  031D                     	;# 
  4125  031E                     	;# 
  4126  031F                     	;# 
  4127  038C                     	;# 
  4128  038C                     	;# 
  4129  038D                     	;# 
  4130  038E                     	;# 
  4131  0390                     	;# 
  4132  0390                     	;# 
  4133  0391                     	;# 
  4134  0392                     	;# 
  4135  040C                     	;# 
  4136  040D                     	;# 
  4137  040E                     	;# 
  4138  040F                     	;# 
  4139  0410                     	;# 
  4140  0411                     	;# 
  4141  0416                     	;# 
  4142  0416                     	;# 
  4143  0417                     	;# 
  4144  0418                     	;# 
  4145  0418                     	;# 
  4146  0419                     	;# 
  4147  041A                     	;# 
  4148  041A                     	;# 
  4149  041B                     	;# 
  4150  041C                     	;# 
  4151  041C                     	;# 
  4152  041D                     	;# 
  4153  041E                     	;# 
  4154  041F                     	;# 
  4155  048C                     	;# 
  4156  048C                     	;# 
  4157  048D                     	;# 
  4158  048E                     	;# 
  4159  048F                     	;# 
  4160  048F                     	;# 
  4161  0490                     	;# 
  4162  0491                     	;# 
  4163  0492                     	;# 
  4164  0492                     	;# 
  4165  0493                     	;# 
  4166  0494                     	;# 
  4167  0495                     	;# 
  4168  0495                     	;# 
  4169  0496                     	;# 
  4170  0497                     	;# 
  4171  0498                     	;# 
  4172  0499                     	;# 
  4173  049A                     	;# 
  4174  049B                     	;# 
  4175  049C                     	;# 
  4176  049D                     	;# 
  4177  050C                     	;# 
  4178  050C                     	;# 
  4179  050D                     	;# 
  4180  050E                     	;# 
  4181  050F                     	;# 
  4182  050F                     	;# 
  4183  0510                     	;# 
  4184  0511                     	;# 
  4185  0512                     	;# 
  4186  0512                     	;# 
  4187  0513                     	;# 
  4188  0514                     	;# 
  4189  0515                     	;# 
  4190  0515                     	;# 
  4191  0516                     	;# 
  4192  0517                     	;# 
  4193  0518                     	;# 
  4194  0519                     	;# 
  4195  051A                     	;# 
  4196  051B                     	;# 
  4197  051C                     	;# 
  4198  051D                     	;# 
  4199  058C                     	;# 
  4200  058C                     	;# 
  4201  058D                     	;# 
  4202  058E                     	;# 
  4203  058F                     	;# 
  4204  058F                     	;# 
  4205  0590                     	;# 
  4206  0591                     	;# 
  4207  0592                     	;# 
  4208  0593                     	;# 
  4209  060C                     	;# 
  4210  060D                     	;# 
  4211  060E                     	;# 
  4212  060F                     	;# 
  4213  0610                     	;# 
  4214  0611                     	;# 
  4215  0612                     	;# 
  4216  0613                     	;# 
  4217  0614                     	;# 
  4218  0616                     	;# 
  4219  0617                     	;# 
  4220  0618                     	;# 
  4221  0619                     	;# 
  4222  061A                     	;# 
  4223  061B                     	;# 
  4224  061C                     	;# 
  4225  061D                     	;# 
  4226  061E                     	;# 
  4227  068C                     	;# 
  4228  068D                     	;# 
  4229  068E                     	;# 
  4230  068F                     	;# 
  4231  0690                     	;# 
  4232  0691                     	;# 
  4233  0692                     	;# 
  4234  0693                     	;# 
  4235  0694                     	;# 
  4236  070C                     	;# 
  4237  070D                     	;# 
  4238  070E                     	;# 
  4239  070F                     	;# 
  4240  0710                     	;# 
  4241  0711                     	;# 
  4242  0712                     	;# 
  4243  0713                     	;# 
  4244  0714                     	;# 
  4245  0716                     	;# 
  4246  0717                     	;# 
  4247  0718                     	;# 
  4248  0719                     	;# 
  4249  071A                     	;# 
  4250  071B                     	;# 
  4251  071C                     	;# 
  4252  071D                     	;# 
  4253  071E                     	;# 
  4254  0796                     	;# 
  4255  0797                     	;# 
  4256  0798                     	;# 
  4257  0799                     	;# 
  4258  079A                     	;# 
  4259  079B                     	;# 
  4260  080C                     	;# 
  4261  080D                     	;# 
  4262  080E                     	;# 
  4263  080F                     	;# 
  4264  0810                     	;# 
  4265  0811                     	;# 
  4266  0812                     	;# 
  4267  0813                     	;# 
  4268  0814                     	;# 
  4269  081A                     	;# 
  4270  081B                     	;# 
  4271  081C                     	;# 
  4272  081D                     	;# 
  4273  081E                     	;# 
  4274  081F                     	;# 
  4275  088C                     	;# 
  4276  088D                     	;# 
  4277  088E                     	;# 
  4278  088F                     	;# 
  4279  0890                     	;# 
  4280  0891                     	;# 
  4281  0892                     	;# 
  4282  0893                     	;# 
  4283  0895                     	;# 
  4284  0896                     	;# 
  4285  0897                     	;# 
  4286  0898                     	;# 
  4287  0899                     	;# 
  4288  089A                     	;# 
  4289  089B                     	;# 
  4290  090C                     	;# 
  4291  090E                     	;# 
  4292  090F                     	;# 
  4293  091F                     	;# 
  4294  091F                     	;# 
  4295  098F                     	;# 
  4296  098F                     	;# 
  4297  0990                     	;# 
  4298  0991                     	;# 
  4299  0992                     	;# 
  4300  0993                     	;# 
  4301  0994                     	;# 
  4302  0995                     	;# 
  4303  0996                     	;# 
  4304  0997                     	;# 
  4305  0E0F                     	;# 
  4306  0E10                     	;# 
  4307  0E11                     	;# 
  4308  0E12                     	;# 
  4309  0E13                     	;# 
  4310  0E14                     	;# 
  4311  0E15                     	;# 
  4312  0E16                     	;# 
  4313  0E17                     	;# 
  4314  0E18                     	;# 
  4315  0E19                     	;# 
  4316  0E1A                     	;# 
  4317  0E1B                     	;# 
  4318  0E1C                     	;# 
  4319  0E1D                     	;# 
  4320  0E1E                     	;# 
  4321  0E1F                     	;# 
  4322  0E20                     	;# 
  4323  0E21                     	;# 
  4324  0E22                     	;# 
  4325  0E23                     	;# 
  4326  0E24                     	;# 
  4327  0E25                     	;# 
  4328  0E26                     	;# 
  4329  0E27                     	;# 
  4330  0E28                     	;# 
  4331  0E29                     	;# 
  4332  0E2A                     	;# 
  4333  0E2B                     	;# 
  4334  0E2C                     	;# 
  4335  0E2D                     	;# 
  4336  0E2E                     	;# 
  4337  0E2F                     	;# 
  4338  0E30                     	;# 
  4339  0E31                     	;# 
  4340  0E32                     	;# 
  4341  0E33                     	;# 
  4342  0E34                     	;# 
  4343  0E35                     	;# 
  4344  0E36                     	;# 
  4345  0E37                     	;# 
  4346  0E8F                     	;# 
  4347  0E90                     	;# 
  4348  0E91                     	;# 
  4349  0E92                     	;# 
  4350  0E93                     	;# 
  4351  0E94                     	;# 
  4352  0E95                     	;# 
  4353  0E96                     	;# 
  4354  0E97                     	;# 
  4355  0E9C                     	;# 
  4356  0E9D                     	;# 
  4357  0E9E                     	;# 
  4358  0EA1                     	;# 
  4359  0EA2                     	;# 
  4360  0EA3                     	;# 
  4361  0EA4                     	;# 
  4362  0EA5                     	;# 
  4363  0EA9                     	;# 
  4364  0EAA                     	;# 
  4365  0EAB                     	;# 
  4366  0EAC                     	;# 
  4367  0EB1                     	;# 
  4368  0EB2                     	;# 
  4369  0EB3                     	;# 
  4370  0EB8                     	;# 
  4371  0EB9                     	;# 
  4372  0EBA                     	;# 
  4373  0EBB                     	;# 
  4374  0EBC                     	;# 
  4375  0EBD                     	;# 
  4376  0EBE                     	;# 
  4377  0EC3                     	;# 
  4378  0EC5                     	;# 
  4379  0EC6                     	;# 
  4380  0EC7                     	;# 
  4381  0EC8                     	;# 
  4382  0EC9                     	;# 
  4383  0ECA                     	;# 
  4384  0ECB                     	;# 
  4385  0ECC                     	;# 
  4386  0F10                     	;# 
  4387  0F11                     	;# 
  4388  0F12                     	;# 
  4389  0F13                     	;# 
  4390  0F14                     	;# 
  4391  0F15                     	;# 
  4392  0F16                     	;# 
  4393  0F17                     	;# 
  4394  0F18                     	;# 
  4395  0F19                     	;# 
  4396  0F1A                     	;# 
  4397  0F1B                     	;# 
  4398  0F1C                     	;# 
  4399  0F1D                     	;# 
  4400  0F1E                     	;# 
  4401  0F1F                     	;# 
  4402  0F20                     	;# 
  4403  0F21                     	;# 
  4404  0F22                     	;# 
  4405  0F23                     	;# 
  4406  0F24                     	;# 
  4407  0F25                     	;# 
  4408  0F26                     	;# 
  4409  0F27                     	;# 
  4410  0F28                     	;# 
  4411  0F29                     	;# 
  4412  0F2A                     	;# 
  4413  0F2B                     	;# 
  4414  0F2C                     	;# 
  4415  0F2D                     	;# 
  4416  0F2E                     	;# 
  4417  0F2F                     	;# 
  4418  0F30                     	;# 
  4419  0F31                     	;# 
  4420  0F32                     	;# 
  4421  0F38                     	;# 
  4422  0F39                     	;# 
  4423  0F3A                     	;# 
  4424  0F3B                     	;# 
  4425  0F3C                     	;# 
  4426  0F3D                     	;# 
  4427  0F3E                     	;# 
  4428  0F3F                     	;# 
  4429  0F40                     	;# 
  4430  0F41                     	;# 
  4431  0F43                     	;# 
  4432  0F44                     	;# 
  4433  0F45                     	;# 
  4434  0F46                     	;# 
  4435  0F47                     	;# 
  4436  0F48                     	;# 
  4437  0F49                     	;# 
  4438  0F4A                     	;# 
  4439  0F4B                     	;# 
  4440  0F4C                     	;# 
  4441  0F4E                     	;# 
  4442  0F4F                     	;# 
  4443  0F50                     	;# 
  4444  0F51                     	;# 
  4445  0F52                     	;# 
  4446  0F53                     	;# 
  4447  0F54                     	;# 
  4448  0F55                     	;# 
  4449  0F56                     	;# 
  4450  0F57                     	;# 
  4451  0F59                     	;# 
  4452  0F5A                     	;# 
  4453  0F5B                     	;# 
  4454  0F5C                     	;# 
  4455  0F5D                     	;# 
  4456  0F61                     	;# 
  4457  0F62                     	;# 
  4458  0F64                     	;# 
  4459  0F65                     	;# 
  4460  0F66                     	;# 
  4461  0F67                     	;# 
  4462  0F68                     	;# 
  4463  0F69                     	;# 
  4464  0F6A                     	;# 
  4465  0F6B                     	;# 
  4466  0F6C                     	;# 
  4467  0F6D                     	;# 
  4468  0FE4                     	;# 
  4469  0FE5                     	;# 
  4470  0FE6                     	;# 
  4471  0FE7                     	;# 
  4472  0FE8                     	;# 
  4473  0FE9                     	;# 
  4474  0FEA                     	;# 
  4475  0FEB                     	;# 
  4476  0FED                     	;# 
  4477  0FEE                     	;# 
  4478  0FEF                     	;# 
  4479  0000                     	;# 
  4480  0001                     	;# 
  4481  0002                     	;# 
  4482  0003                     	;# 
  4483  0004                     	;# 
  4484  0005                     	;# 
  4485  0006                     	;# 
  4486  0007                     	;# 
  4487  0008                     	;# 
  4488  0009                     	;# 
  4489  000A                     	;# 
  4490  000B                     	;# 
  4491  000C                     	;# 
  4492  000D                     	;# 
  4493  000E                     	;# 
  4494  000F                     	;# 
  4495  0010                     	;# 
  4496  0011                     	;# 
  4497  0012                     	;# 
  4498  0013                     	;# 
  4499  0014                     	;# 
  4500  0015                     	;# 
  4501  0016                     	;# 
  4502  0017                     	;# 
  4503  0018                     	;# 
  4504  0019                     	;# 
  4505  001A                     	;# 
  4506  001C                     	;# 
  4507  001C                     	;# 
  4508  001D                     	;# 
  4509  001D                     	;# 
  4510  001E                     	;# 
  4511  001F                     	;# 
  4512  008C                     	;# 
  4513  008C                     	;# 
  4514  008D                     	;# 
  4515  008E                     	;# 
  4516  008E                     	;# 
  4517  008F                     	;# 
  4518  0090                     	;# 
  4519  0090                     	;# 
  4520  0091                     	;# 
  4521  0093                     	;# 
  4522  0094                     	;# 
  4523  0095                     	;# 
  4524  0096                     	;# 
  4525  0097                     	;# 
  4526  0098                     	;# 
  4527  0099                     	;# 
  4528  009A                     	;# 
  4529  009B                     	;# 
  4530  009C                     	;# 
  4531  009D                     	;# 
  4532  009E                     	;# 
  4533  010C                     	;# 
  4534  010D                     	;# 
  4535  010E                     	;# 
  4536  010E                     	;# 
  4537  010F                     	;# 
  4538  0110                     	;# 
  4539  0110                     	;# 
  4540  0111                     	;# 
  4541  0112                     	;# 
  4542  0112                     	;# 
  4543  0113                     	;# 
  4544  0114                     	;# 
  4545  0114                     	;# 
  4546  0115                     	;# 
  4547  0116                     	;# 
  4548  0116                     	;# 
  4549  0117                     	;# 
  4550  0119                     	;# 
  4551  0119                     	;# 
  4552  0119                     	;# 
  4553  011A                     	;# 
  4554  011A                     	;# 
  4555  011A                     	;# 
  4556  011B                     	;# 
  4557  011B                     	;# 
  4558  011B                     	;# 
  4559  011B                     	;# 
  4560  011B                     	;# 
  4561  011C                     	;# 
  4562  011C                     	;# 
  4563  011C                     	;# 
  4564  011D                     	;# 
  4565  011D                     	;# 
  4566  011D                     	;# 
  4567  011E                     	;# 
  4568  011E                     	;# 
  4569  011E                     	;# 
  4570  011F                     	;# 
  4571  011F                     	;# 
  4572  011F                     	;# 
  4573  011F                     	;# 
  4574  011F                     	;# 
  4575  018C                     	;# 
  4576  018D                     	;# 
  4577  018E                     	;# 
  4578  018F                     	;# 
  4579  0190                     	;# 
  4580  0191                     	;# 
  4581  0192                     	;# 
  4582  0196                     	;# 
  4583  0197                     	;# 
  4584  0198                     	;# 
  4585  0199                     	;# 
  4586  019A                     	;# 
  4587  019B                     	;# 
  4588  019C                     	;# 
  4589  020C                     	;# 
  4590  020C                     	;# 
  4591  020D                     	;# 
  4592  020E                     	;# 
  4593  020F                     	;# 
  4594  020F                     	;# 
  4595  0210                     	;# 
  4596  0210                     	;# 
  4597  0211                     	;# 
  4598  0211                     	;# 
  4599  0212                     	;# 
  4600  0212                     	;# 
  4601  0213                     	;# 
  4602  0214                     	;# 
  4603  0215                     	;# 
  4604  0215                     	;# 
  4605  0216                     	;# 
  4606  0216                     	;# 
  4607  0217                     	;# 
  4608  0217                     	;# 
  4609  0218                     	;# 
  4610  0218                     	;# 
  4611  0219                     	;# 
  4612  021A                     	;# 
  4613  021B                     	;# 
  4614  021B                     	;# 
  4615  021C                     	;# 
  4616  021C                     	;# 
  4617  021D                     	;# 
  4618  021D                     	;# 
  4619  021E                     	;# 
  4620  021F                     	;# 
  4621  028C                     	;# 
  4622  028C                     	;# 
  4623  028D                     	;# 
  4624  028D                     	;# 
  4625  028E                     	;# 
  4626  028F                     	;# 
  4627  0290                     	;# 
  4628  0290                     	;# 
  4629  0291                     	;# 
  4630  0292                     	;# 
  4631  0292                     	;# 
  4632  0293                     	;# 
  4633  0293                     	;# 
  4634  0294                     	;# 
  4635  0295                     	;# 
  4636  0296                     	;# 
  4637  0296                     	;# 
  4638  0297                     	;# 
  4639  0298                     	;# 
  4640  0298                     	;# 
  4641  0299                     	;# 
  4642  0299                     	;# 
  4643  029A                     	;# 
  4644  029B                     	;# 
  4645  029C                     	;# 
  4646  029C                     	;# 
  4647  029D                     	;# 
  4648  030C                     	;# 
  4649  030C                     	;# 
  4650  030D                     	;# 
  4651  030E                     	;# 
  4652  030F                     	;# 
  4653  0310                     	;# 
  4654  0310                     	;# 
  4655  0311                     	;# 
  4656  0312                     	;# 
  4657  0313                     	;# 
  4658  0314                     	;# 
  4659  0314                     	;# 
  4660  0315                     	;# 
  4661  0316                     	;# 
  4662  0317                     	;# 
  4663  0318                     	;# 
  4664  0318                     	;# 
  4665  0319                     	;# 
  4666  031A                     	;# 
  4667  031B                     	;# 
  4668  031C                     	;# 
  4669  031C                     	;# 
  4670  031D                     	;# 
  4671  031E                     	;# 
  4672  031F                     	;# 
  4673  038C                     	;# 
  4674  038C                     	;# 
  4675  038D                     	;# 
  4676  038E                     	;# 
  4677  0390                     	;# 
  4678  0390                     	;# 
  4679  0391                     	;# 
  4680  0392                     	;# 
  4681  040C                     	;# 
  4682  040D                     	;# 
  4683  040E                     	;# 
  4684  040F                     	;# 
  4685  0410                     	;# 
  4686  0411                     	;# 
  4687  0416                     	;# 
  4688  0416                     	;# 
  4689  0417                     	;# 
  4690  0418                     	;# 
  4691  0418                     	;# 
  4692  0419                     	;# 
  4693  041A                     	;# 
  4694  041A                     	;# 
  4695  041B                     	;# 
  4696  041C                     	;# 
  4697  041C                     	;# 
  4698  041D                     	;# 
  4699  041E                     	;# 
  4700  041F                     	;# 
  4701  048C                     	;# 
  4702  048C                     	;# 
  4703  048D                     	;# 
  4704  048E                     	;# 
  4705  048F                     	;# 
  4706  048F                     	;# 
  4707  0490                     	;# 
  4708  0491                     	;# 
  4709  0492                     	;# 
  4710  0492                     	;# 
  4711  0493                     	;# 
  4712  0494                     	;# 
  4713  0495                     	;# 
  4714  0495                     	;# 
  4715  0496                     	;# 
  4716  0497                     	;# 
  4717  0498                     	;# 
  4718  0499                     	;# 
  4719  049A                     	;# 
  4720  049B                     	;# 
  4721  049C                     	;# 
  4722  049D                     	;# 
  4723  050C                     	;# 
  4724  050C                     	;# 
  4725  050D                     	;# 
  4726  050E                     	;# 
  4727  050F                     	;# 
  4728  050F                     	;# 
  4729  0510                     	;# 
  4730  0511                     	;# 
  4731  0512                     	;# 
  4732  0512                     	;# 
  4733  0513                     	;# 
  4734  0514                     	;# 
  4735  0515                     	;# 
  4736  0515                     	;# 
  4737  0516                     	;# 
  4738  0517                     	;# 
  4739  0518                     	;# 
  4740  0519                     	;# 
  4741  051A                     	;# 
  4742  051B                     	;# 
  4743  051C                     	;# 
  4744  051D                     	;# 
  4745  058C                     	;# 
  4746  058C                     	;# 
  4747  058D                     	;# 
  4748  058E                     	;# 
  4749  058F                     	;# 
  4750  058F                     	;# 
  4751  0590                     	;# 
  4752  0591                     	;# 
  4753  0592                     	;# 
  4754  0593                     	;# 
  4755  060C                     	;# 
  4756  060D                     	;# 
  4757  060E                     	;# 
  4758  060F                     	;# 
  4759  0610                     	;# 
  4760  0611                     	;# 
  4761  0612                     	;# 
  4762  0613                     	;# 
  4763  0614                     	;# 
  4764  0616                     	;# 
  4765  0617                     	;# 
  4766  0618                     	;# 
  4767  0619                     	;# 
  4768  061A                     	;# 
  4769  061B                     	;# 
  4770  061C                     	;# 
  4771  061D                     	;# 
  4772  061E                     	;# 
  4773  068C                     	;# 
  4774  068D                     	;# 
  4775  068E                     	;# 
  4776  068F                     	;# 
  4777  0690                     	;# 
  4778  0691                     	;# 
  4779  0692                     	;# 
  4780  0693                     	;# 
  4781  0694                     	;# 
  4782  070C                     	;# 
  4783  070D                     	;# 
  4784  070E                     	;# 
  4785  070F                     	;# 
  4786  0710                     	;# 
  4787  0711                     	;# 
  4788  0712                     	;# 
  4789  0713                     	;# 
  4790  0714                     	;# 
  4791  0716                     	;# 
  4792  0717                     	;# 
  4793  0718                     	;# 
  4794  0719                     	;# 
  4795  071A                     	;# 
  4796  071B                     	;# 
  4797  071C                     	;# 
  4798  071D                     	;# 
  4799  071E                     	;# 
  4800  0796                     	;# 
  4801  0797                     	;# 
  4802  0798                     	;# 
  4803  0799                     	;# 
  4804  079A                     	;# 
  4805  079B                     	;# 
  4806  080C                     	;# 
  4807  080D                     	;# 
  4808  080E                     	;# 
  4809  080F                     	;# 
  4810  0810                     	;# 
  4811  0811                     	;# 
  4812  0812                     	;# 
  4813  0813                     	;# 
  4814  0814                     	;# 
  4815  081A                     	;# 
  4816  081B                     	;# 
  4817  081C                     	;# 
  4818  081D                     	;# 
  4819  081E                     	;# 
  4820  081F                     	;# 
  4821  088C                     	;# 
  4822  088D                     	;# 
  4823  088E                     	;# 
  4824  088F                     	;# 
  4825  0890                     	;# 
  4826  0891                     	;# 
  4827  0892                     	;# 
  4828  0893                     	;# 
  4829  0895                     	;# 
  4830  0896                     	;# 
  4831  0897                     	;# 
  4832  0898                     	;# 
  4833  0899                     	;# 
  4834  089A                     	;# 
  4835  089B                     	;# 
  4836  090C                     	;# 
  4837  090E                     	;# 
  4838  090F                     	;# 
  4839  091F                     	;# 
  4840  091F                     	;# 
  4841  098F                     	;# 
  4842  098F                     	;# 
  4843  0990                     	;# 
  4844  0991                     	;# 
  4845  0992                     	;# 
  4846  0993                     	;# 
  4847  0994                     	;# 
  4848  0995                     	;# 
  4849  0996                     	;# 
  4850  0997                     	;# 
  4851  0E0F                     	;# 
  4852  0E10                     	;# 
  4853  0E11                     	;# 
  4854  0E12                     	;# 
  4855  0E13                     	;# 
  4856  0E14                     	;# 
  4857  0E15                     	;# 
  4858  0E16                     	;# 
  4859  0E17                     	;# 
  4860  0E18                     	;# 
  4861  0E19                     	;# 
  4862  0E1A                     	;# 
  4863  0E1B                     	;# 
  4864  0E1C                     	;# 
  4865  0E1D                     	;# 
  4866  0E1E                     	;# 
  4867  0E1F                     	;# 
  4868  0E20                     	;# 
  4869  0E21                     	;# 
  4870  0E22                     	;# 
  4871  0E23                     	;# 
  4872  0E24                     	;# 
  4873  0E25                     	;# 
  4874  0E26                     	;# 
  4875  0E27                     	;# 
  4876  0E28                     	;# 
  4877  0E29                     	;# 
  4878  0E2A                     	;# 
  4879  0E2B                     	;# 
  4880  0E2C                     	;# 
  4881  0E2D                     	;# 
  4882  0E2E                     	;# 
  4883  0E2F                     	;# 
  4884  0E30                     	;# 
  4885  0E31                     	;# 
  4886  0E32                     	;# 
  4887  0E33                     	;# 
  4888  0E34                     	;# 
  4889  0E35                     	;# 
  4890  0E36                     	;# 
  4891  0E37                     	;# 
  4892  0E8F                     	;# 
  4893  0E90                     	;# 
  4894  0E91                     	;# 
  4895  0E92                     	;# 
  4896  0E93                     	;# 
  4897  0E94                     	;# 
  4898  0E95                     	;# 
  4899  0E96                     	;# 
  4900  0E97                     	;# 
  4901  0E9C                     	;# 
  4902  0E9D                     	;# 
  4903  0E9E                     	;# 
  4904  0EA1                     	;# 
  4905  0EA2                     	;# 
  4906  0EA3                     	;# 
  4907  0EA4                     	;# 
  4908  0EA5                     	;# 
  4909  0EA9                     	;# 
  4910  0EAA                     	;# 
  4911  0EAB                     	;# 
  4912  0EAC                     	;# 
  4913  0EB1                     	;# 
  4914  0EB2                     	;# 
  4915  0EB3                     	;# 
  4916  0EB8                     	;# 
  4917  0EB9                     	;# 
  4918  0EBA                     	;# 
  4919  0EBB                     	;# 
  4920  0EBC                     	;# 
  4921  0EBD                     	;# 
  4922  0EBE                     	;# 
  4923  0EC3                     	;# 
  4924  0EC5                     	;# 
  4925  0EC6                     	;# 
  4926  0EC7                     	;# 
  4927  0EC8                     	;# 
  4928  0EC9                     	;# 
  4929  0ECA                     	;# 
  4930  0ECB                     	;# 
  4931  0ECC                     	;# 
  4932  0F10                     	;# 
  4933  0F11                     	;# 
  4934  0F12                     	;# 
  4935  0F13                     	;# 
  4936  0F14                     	;# 
  4937  0F15                     	;# 
  4938  0F16                     	;# 
  4939  0F17                     	;# 
  4940  0F18                     	;# 
  4941  0F19                     	;# 
  4942  0F1A                     	;# 
  4943  0F1B                     	;# 
  4944  0F1C                     	;# 
  4945  0F1D                     	;# 
  4946  0F1E                     	;# 
  4947  0F1F                     	;# 
  4948  0F20                     	;# 
  4949  0F21                     	;# 
  4950  0F22                     	;# 
  4951  0F23                     	;# 
  4952  0F24                     	;# 
  4953  0F25                     	;# 
  4954  0F26                     	;# 
  4955  0F27                     	;# 
  4956  0F28                     	;# 
  4957  0F29                     	;# 
  4958  0F2A                     	;# 
  4959  0F2B                     	;# 
  4960  0F2C                     	;# 
  4961  0F2D                     	;# 
  4962  0F2E                     	;# 
  4963  0F2F                     	;# 
  4964  0F30                     	;# 
  4965  0F31                     	;# 
  4966  0F32                     	;# 
  4967  0F38                     	;# 
  4968  0F39                     	;# 
  4969  0F3A                     	;# 
  4970  0F3B                     	;# 
  4971  0F3C                     	;# 
  4972  0F3D                     	;# 
  4973  0F3E                     	;# 
  4974  0F3F                     	;# 
  4975  0F40                     	;# 
  4976  0F41                     	;# 
  4977  0F43                     	;# 
  4978  0F44                     	;# 
  4979  0F45                     	;# 
  4980  0F46                     	;# 
  4981  0F47                     	;# 
  4982  0F48                     	;# 
  4983  0F49                     	;# 
  4984  0F4A                     	;# 
  4985  0F4B                     	;# 
  4986  0F4C                     	;# 
  4987  0F4E                     	;# 
  4988  0F4F                     	;# 
  4989  0F50                     	;# 
  4990  0F51                     	;# 
  4991  0F52                     	;# 
  4992  0F53                     	;# 
  4993  0F54                     	;# 
  4994  0F55                     	;# 
  4995  0F56                     	;# 
  4996  0F57                     	;# 
  4997  0F59                     	;# 
  4998  0F5A                     	;# 
  4999  0F5B                     	;# 
  5000  0F5C                     	;# 
  5001  0F5D                     	;# 
  5002  0F61                     	;# 
  5003  0F62                     	;# 
  5004  0F64                     	;# 
  5005  0F65                     	;# 
  5006  0F66                     	;# 
  5007  0F67                     	;# 
  5008  0F68                     	;# 
  5009  0F69                     	;# 
  5010  0F6A                     	;# 
  5011  0F6B                     	;# 
  5012  0F6C                     	;# 
  5013  0F6D                     	;# 
  5014  0FE4                     	;# 
  5015  0FE5                     	;# 
  5016  0FE6                     	;# 
  5017  0FE7                     	;# 
  5018  0FE8                     	;# 
  5019  0FE9                     	;# 
  5020  0FEA                     	;# 
  5021  0FEB                     	;# 
  5022  0FED                     	;# 
  5023  0FEE                     	;# 
  5024  0FEF                     	;# 
  5025  0000                     	;# 
  5026  0001                     	;# 
  5027  0002                     	;# 
  5028  0003                     	;# 
  5029  0004                     	;# 
  5030  0005                     	;# 
  5031  0006                     	;# 
  5032  0007                     	;# 
  5033  0008                     	;# 
  5034  0009                     	;# 
  5035  000A                     	;# 
  5036  000B                     	;# 
  5037  000C                     	;# 
  5038  000D                     	;# 
  5039  000E                     	;# 
  5040  000F                     	;# 
  5041  0010                     	;# 
  5042  0011                     	;# 
  5043  0012                     	;# 
  5044  0013                     	;# 
  5045  0014                     	;# 
  5046  0015                     	;# 
  5047  0016                     	;# 
  5048  0017                     	;# 
  5049  0018                     	;# 
  5050  0019                     	;# 
  5051  001A                     	;# 
  5052  001C                     	;# 
  5053  001C                     	;# 
  5054  001D                     	;# 
  5055  001D                     	;# 
  5056  001E                     	;# 
  5057  001F                     	;# 
  5058  008C                     	;# 
  5059  008C                     	;# 
  5060  008D                     	;# 
  5061  008E                     	;# 
  5062  008E                     	;# 
  5063  008F                     	;# 
  5064  0090                     	;# 
  5065  0090                     	;# 
  5066  0091                     	;# 
  5067  0093                     	;# 
  5068  0094                     	;# 
  5069  0095                     	;# 
  5070  0096                     	;# 
  5071  0097                     	;# 
  5072  0098                     	;# 
  5073  0099                     	;# 
  5074  009A                     	;# 
  5075  009B                     	;# 
  5076  009C                     	;# 
  5077  009D                     	;# 
  5078  009E                     	;# 
  5079  010C                     	;# 
  5080  010D                     	;# 
  5081  010E                     	;# 
  5082  010E                     	;# 
  5083  010F                     	;# 
  5084  0110                     	;# 
  5085  0110                     	;# 
  5086  0111                     	;# 
  5087  0112                     	;# 
  5088  0112                     	;# 
  5089  0113                     	;# 
  5090  0114                     	;# 
  5091  0114                     	;# 
  5092  0115                     	;# 
  5093  0116                     	;# 
  5094  0116                     	;# 
  5095  0117                     	;# 
  5096  0119                     	;# 
  5097  0119                     	;# 
  5098  0119                     	;# 
  5099  011A                     	;# 
  5100  011A                     	;# 
  5101  011A                     	;# 
  5102  011B                     	;# 
  5103  011B                     	;# 
  5104  011B                     	;# 
  5105  011B                     	;# 
  5106  011B                     	;# 
  5107  011C                     	;# 
  5108  011C                     	;# 
  5109  011C                     	;# 
  5110  011D                     	;# 
  5111  011D                     	;# 
  5112  011D                     	;# 
  5113  011E                     	;# 
  5114  011E                     	;# 
  5115  011E                     	;# 
  5116  011F                     	;# 
  5117  011F                     	;# 
  5118  011F                     	;# 
  5119  011F                     	;# 
  5120  011F                     	;# 
  5121  018C                     	;# 
  5122  018D                     	;# 
  5123  018E                     	;# 
  5124  018F                     	;# 
  5125  0190                     	;# 
  5126  0191                     	;# 
  5127  0192                     	;# 
  5128  0196                     	;# 
  5129  0197                     	;# 
  5130  0198                     	;# 
  5131  0199                     	;# 
  5132  019A                     	;# 
  5133  019B                     	;# 
  5134  019C                     	;# 
  5135  020C                     	;# 
  5136  020C                     	;# 
  5137  020D                     	;# 
  5138  020E                     	;# 
  5139  020F                     	;# 
  5140  020F                     	;# 
  5141  0210                     	;# 
  5142  0210                     	;# 
  5143  0211                     	;# 
  5144  0211                     	;# 
  5145  0212                     	;# 
  5146  0212                     	;# 
  5147  0213                     	;# 
  5148  0214                     	;# 
  5149  0215                     	;# 
  5150  0215                     	;# 
  5151  0216                     	;# 
  5152  0216                     	;# 
  5153  0217                     	;# 
  5154  0217                     	;# 
  5155  0218                     	;# 
  5156  0218                     	;# 
  5157  0219                     	;# 
  5158  021A                     	;# 
  5159  021B                     	;# 
  5160  021B                     	;# 
  5161  021C                     	;# 
  5162  021C                     	;# 
  5163  021D                     	;# 
  5164  021D                     	;# 
  5165  021E                     	;# 
  5166  021F                     	;# 
  5167  028C                     	;# 
  5168  028C                     	;# 
  5169  028D                     	;# 
  5170  028D                     	;# 
  5171  028E                     	;# 
  5172  028F                     	;# 
  5173  0290                     	;# 
  5174  0290                     	;# 
  5175  0291                     	;# 
  5176  0292                     	;# 
  5177  0292                     	;# 
  5178  0293                     	;# 
  5179  0293                     	;# 
  5180  0294                     	;# 
  5181  0295                     	;# 
  5182  0296                     	;# 
  5183  0296                     	;# 
  5184  0297                     	;# 
  5185  0298                     	;# 
  5186  0298                     	;# 
  5187  0299                     	;# 
  5188  0299                     	;# 
  5189  029A                     	;# 
  5190  029B                     	;# 
  5191  029C                     	;# 
  5192  029C                     	;# 
  5193  029D                     	;# 
  5194  030C                     	;# 
  5195  030C                     	;# 
  5196  030D                     	;# 
  5197  030E                     	;# 
  5198  030F                     	;# 
  5199  0310                     	;# 
  5200  0310                     	;# 
  5201  0311                     	;# 
  5202  0312                     	;# 
  5203  0313                     	;# 
  5204  0314                     	;# 
  5205  0314                     	;# 
  5206  0315                     	;# 
  5207  0316                     	;# 
  5208  0317                     	;# 
  5209  0318                     	;# 
  5210  0318                     	;# 
  5211  0319                     	;# 
  5212  031A                     	;# 
  5213  031B                     	;# 
  5214  031C                     	;# 
  5215  031C                     	;# 
  5216  031D                     	;# 
  5217  031E                     	;# 
  5218  031F                     	;# 
  5219  038C                     	;# 
  5220  038C                     	;# 
  5221  038D                     	;# 
  5222  038E                     	;# 
  5223  0390                     	;# 
  5224  0390                     	;# 
  5225  0391                     	;# 
  5226  0392                     	;# 
  5227  040C                     	;# 
  5228  040D                     	;# 
  5229  040E                     	;# 
  5230  040F                     	;# 
  5231  0410                     	;# 
  5232  0411                     	;# 
  5233  0416                     	;# 
  5234  0416                     	;# 
  5235  0417                     	;# 
  5236  0418                     	;# 
  5237  0418                     	;# 
  5238  0419                     	;# 
  5239  041A                     	;# 
  5240  041A                     	;# 
  5241  041B                     	;# 
  5242  041C                     	;# 
  5243  041C                     	;# 
  5244  041D                     	;# 
  5245  041E                     	;# 
  5246  041F                     	;# 
  5247  048C                     	;# 
  5248  048C                     	;# 
  5249  048D                     	;# 
  5250  048E                     	;# 
  5251  048F                     	;# 
  5252  048F                     	;# 
  5253  0490                     	;# 
  5254  0491                     	;# 
  5255  0492                     	;# 
  5256  0492                     	;# 
  5257  0493                     	;# 
  5258  0494                     	;# 
  5259  0495                     	;# 
  5260  0495                     	;# 
  5261  0496                     	;# 
  5262  0497                     	;# 
  5263  0498                     	;# 
  5264  0499                     	;# 
  5265  049A                     	;# 
  5266  049B                     	;# 
  5267  049C                     	;# 
  5268  049D                     	;# 
  5269  050C                     	;# 
  5270  050C                     	;# 
  5271  050D                     	;# 
  5272  050E                     	;# 
  5273  050F                     	;# 
  5274  050F                     	;# 
  5275  0510                     	;# 
  5276  0511                     	;# 
  5277  0512                     	;# 
  5278  0512                     	;# 
  5279  0513                     	;# 
  5280  0514                     	;# 
  5281  0515                     	;# 
  5282  0515                     	;# 
  5283  0516                     	;# 
  5284  0517                     	;# 
  5285  0518                     	;# 
  5286  0519                     	;# 
  5287  051A                     	;# 
  5288  051B                     	;# 
  5289  051C                     	;# 
  5290  051D                     	;# 
  5291  058C                     	;# 
  5292  058C                     	;# 
  5293  058D                     	;# 
  5294  058E                     	;# 
  5295  058F                     	;# 
  5296  058F                     	;# 
  5297  0590                     	;# 
  5298  0591                     	;# 
  5299  0592                     	;# 
  5300  0593                     	;# 
  5301  060C                     	;# 
  5302  060D                     	;# 
  5303  060E                     	;# 
  5304  060F                     	;# 
  5305  0610                     	;# 
  5306  0611                     	;# 
  5307  0612                     	;# 
  5308  0613                     	;# 
  5309  0614                     	;# 
  5310  0616                     	;# 
  5311  0617                     	;# 
  5312  0618                     	;# 
  5313  0619                     	;# 
  5314  061A                     	;# 
  5315  061B                     	;# 
  5316  061C                     	;# 
  5317  061D                     	;# 
  5318  061E                     	;# 
  5319  068C                     	;# 
  5320  068D                     	;# 
  5321  068E                     	;# 
  5322  068F                     	;# 
  5323  0690                     	;# 
  5324  0691                     	;# 
  5325  0692                     	;# 
  5326  0693                     	;# 
  5327  0694                     	;# 
  5328  070C                     	;# 
  5329  070D                     	;# 
  5330  070E                     	;# 
  5331  070F                     	;# 
  5332  0710                     	;# 
  5333  0711                     	;# 
  5334  0712                     	;# 
  5335  0713                     	;# 
  5336  0714                     	;# 
  5337  0716                     	;# 
  5338  0717                     	;# 
  5339  0718                     	;# 
  5340  0719                     	;# 
  5341  071A                     	;# 
  5342  071B                     	;# 
  5343  071C                     	;# 
  5344  071D                     	;# 
  5345  071E                     	;# 
  5346  0796                     	;# 
  5347  0797                     	;# 
  5348  0798                     	;# 
  5349  0799                     	;# 
  5350  079A                     	;# 
  5351  079B                     	;# 
  5352  080C                     	;# 
  5353  080D                     	;# 
  5354  080E                     	;# 
  5355  080F                     	;# 
  5356  0810                     	;# 
  5357  0811                     	;# 
  5358  0812                     	;# 
  5359  0813                     	;# 
  5360  0814                     	;# 
  5361  081A                     	;# 
  5362  081B                     	;# 
  5363  081C                     	;# 
  5364  081D                     	;# 
  5365  081E                     	;# 
  5366  081F                     	;# 
  5367  088C                     	;# 
  5368  088D                     	;# 
  5369  088E                     	;# 
  5370  088F                     	;# 
  5371  0890                     	;# 
  5372  0891                     	;# 
  5373  0892                     	;# 
  5374  0893                     	;# 
  5375  0895                     	;# 
  5376  0896                     	;# 
  5377  0897                     	;# 
  5378  0898                     	;# 
  5379  0899                     	;# 
  5380  089A                     	;# 
  5381  089B                     	;# 
  5382  090C                     	;# 
  5383  090E                     	;# 
  5384  090F                     	;# 
  5385  091F                     	;# 
  5386  091F                     	;# 
  5387  098F                     	;# 
  5388  098F                     	;# 
  5389  0990                     	;# 
  5390  0991                     	;# 
  5391  0992                     	;# 
  5392  0993                     	;# 
  5393  0994                     	;# 
  5394  0995                     	;# 
  5395  0996                     	;# 
  5396  0997                     	;# 
  5397  0E0F                     	;# 
  5398  0E10                     	;# 
  5399  0E11                     	;# 
  5400  0E12                     	;# 
  5401  0E13                     	;# 
  5402  0E14                     	;# 
  5403  0E15                     	;# 
  5404  0E16                     	;# 
  5405  0E17                     	;# 
  5406  0E18                     	;# 
  5407  0E19                     	;# 
  5408  0E1A                     	;# 
  5409  0E1B                     	;# 
  5410  0E1C                     	;# 
  5411  0E1D                     	;# 
  5412  0E1E                     	;# 
  5413  0E1F                     	;# 
  5414  0E20                     	;# 
  5415  0E21                     	;# 
  5416  0E22                     	;# 
  5417  0E23                     	;# 
  5418  0E24                     	;# 
  5419  0E25                     	;# 
  5420  0E26                     	;# 
  5421  0E27                     	;# 
  5422  0E28                     	;# 
  5423  0E29                     	;# 
  5424  0E2A                     	;# 
  5425  0E2B                     	;# 
  5426  0E2C                     	;# 
  5427  0E2D                     	;# 
  5428  0E2E                     	;# 
  5429  0E2F                     	;# 
  5430  0E30                     	;# 
  5431  0E31                     	;# 
  5432  0E32                     	;# 
  5433  0E33                     	;# 
  5434  0E34                     	;# 
  5435  0E35                     	;# 
  5436  0E36                     	;# 
  5437  0E37                     	;# 
  5438  0E8F                     	;# 
  5439  0E90                     	;# 
  5440  0E91                     	;# 
  5441  0E92                     	;# 
  5442  0E93                     	;# 
  5443  0E94                     	;# 
  5444  0E95                     	;# 
  5445  0E96                     	;# 
  5446  0E97                     	;# 
  5447  0E9C                     	;# 
  5448  0E9D                     	;# 
  5449  0E9E                     	;# 
  5450  0EA1                     	;# 
  5451  0EA2                     	;# 
  5452  0EA3                     	;# 
  5453  0EA4                     	;# 
  5454  0EA5                     	;# 
  5455  0EA9                     	;# 
  5456  0EAA                     	;# 
  5457  0EAB                     	;# 
  5458  0EAC                     	;# 
  5459  0EB1                     	;# 
  5460  0EB2                     	;# 
  5461  0EB3                     	;# 
  5462  0EB8                     	;# 
  5463  0EB9                     	;# 
  5464  0EBA                     	;# 
  5465  0EBB                     	;# 
  5466  0EBC                     	;# 
  5467  0EBD                     	;# 
  5468  0EBE                     	;# 
  5469  0EC3                     	;# 
  5470  0EC5                     	;# 
  5471  0EC6                     	;# 
  5472  0EC7                     	;# 
  5473  0EC8                     	;# 
  5474  0EC9                     	;# 
  5475  0ECA                     	;# 
  5476  0ECB                     	;# 
  5477  0ECC                     	;# 
  5478  0F10                     	;# 
  5479  0F11                     	;# 
  5480  0F12                     	;# 
  5481  0F13                     	;# 
  5482  0F14                     	;# 
  5483  0F15                     	;# 
  5484  0F16                     	;# 
  5485  0F17                     	;# 
  5486  0F18                     	;# 
  5487  0F19                     	;# 
  5488  0F1A                     	;# 
  5489  0F1B                     	;# 
  5490  0F1C                     	;# 
  5491  0F1D                     	;# 
  5492  0F1E                     	;# 
  5493  0F1F                     	;# 
  5494  0F20                     	;# 
  5495  0F21                     	;# 
  5496  0F22                     	;# 
  5497  0F23                     	;# 
  5498  0F24                     	;# 
  5499  0F25                     	;# 
  5500  0F26                     	;# 
  5501  0F27                     	;# 
  5502  0F28                     	;# 
  5503  0F29                     	;# 
  5504  0F2A                     	;# 
  5505  0F2B                     	;# 
  5506  0F2C                     	;# 
  5507  0F2D                     	;# 
  5508  0F2E                     	;# 
  5509  0F2F                     	;# 
  5510  0F30                     	;# 
  5511  0F31                     	;# 
  5512  0F32                     	;# 
  5513  0F38                     	;# 
  5514  0F39                     	;# 
  5515  0F3A                     	;# 
  5516  0F3B                     	;# 
  5517  0F3C                     	;# 
  5518  0F3D                     	;# 
  5519  0F3E                     	;# 
  5520  0F3F                     	;# 
  5521  0F40                     	;# 
  5522  0F41                     	;# 
  5523  0F43                     	;# 
  5524  0F44                     	;# 
  5525  0F45                     	;# 
  5526  0F46                     	;# 
  5527  0F47                     	;# 
  5528  0F48                     	;# 
  5529  0F49                     	;# 
  5530  0F4A                     	;# 
  5531  0F4B                     	;# 
  5532  0F4C                     	;# 
  5533  0F4E                     	;# 
  5534  0F4F                     	;# 
  5535  0F50                     	;# 
  5536  0F51                     	;# 
  5537  0F52                     	;# 
  5538  0F53                     	;# 
  5539  0F54                     	;# 
  5540  0F55                     	;# 
  5541  0F56                     	;# 
  5542  0F57                     	;# 
  5543  0F59                     	;# 
  5544  0F5A                     	;# 
  5545  0F5B                     	;# 
  5546  0F5C                     	;# 
  5547  0F5D                     	;# 
  5548  0F61                     	;# 
  5549  0F62                     	;# 
  5550  0F64                     	;# 
  5551  0F65                     	;# 
  5552  0F66                     	;# 
  5553  0F67                     	;# 
  5554  0F68                     	;# 
  5555  0F69                     	;# 
  5556  0F6A                     	;# 
  5557  0F6B                     	;# 
  5558  0F6C                     	;# 
  5559  0F6D                     	;# 
  5560  0FE4                     	;# 
  5561  0FE5                     	;# 
  5562  0FE6                     	;# 
  5563  0FE7                     	;# 
  5564  0FE8                     	;# 
  5565  0FE9                     	;# 
  5566  0FEA                     	;# 
  5567  0FEB                     	;# 
  5568  0FED                     	;# 
  5569  0FEE                     	;# 
  5570  0FEF                     	;# 
  5571                           
  5572                           	psect	stringtext1
  5573  03A9                     __pstringtext1:	
  5574  03A9                     _fsmStateTable:	
  5575  03A9  3493               	retlw	low _do_I2C_IDLE
  5576  03AA  3405               	retlw	high _do_I2C_IDLE
  5577  03AB  3434               	retlw	low _do_I2C_SEND_ADR_READ
  5578  03AC  3405               	retlw	high _do_I2C_SEND_ADR_READ
  5579  03AD  3445               	retlw	low _do_I2C_SEND_ADR_WRITE
  5580  03AE  3405               	retlw	high _do_I2C_SEND_ADR_WRITE
  5581  03AF  3461               	retlw	low _do_I2C_TX
  5582  03B0  3401               	retlw	high _do_I2C_TX
  5583  03B1  34B5               	retlw	low _do_I2C_RX
  5584  03B2  3401               	retlw	high _do_I2C_RX
  5585  03B3  345D               	retlw	low _do_I2C_RCEN
  5586  03B4  3405               	retlw	high _do_I2C_RCEN
  5587  03B5  3482               	retlw	low _do_I2C_TX_EMPTY
  5588  03B6  3402               	retlw	high _do_I2C_TX_EMPTY
  5589  03B7  348E               	retlw	low _do_I2C_SEND_RESTART_READ
  5590  03B8  3405               	retlw	high _do_I2C_SEND_RESTART_READ
  5591  03B9  3489               	retlw	low _do_I2C_SEND_RESTART_WRITE
  5592  03BA  3405               	retlw	high _do_I2C_SEND_RESTART_WRITE
  5593  03BB  3484               	retlw	low _do_I2C_SEND_RESTART
  5594  03BC  3405               	retlw	high _do_I2C_SEND_RESTART
  5595  03BD  347F               	retlw	low _do_I2C_SEND_STOP
  5596  03BE  3405               	retlw	high _do_I2C_SEND_STOP
  5597  03BF  347A               	retlw	low _do_I2C_DO_ACK
  5598  03C0  3405               	retlw	high _do_I2C_DO_ACK
  5599  03C1  3475               	retlw	low _do_I2C_DO_NACK_STOP
  5600  03C2  3405               	retlw	high _do_I2C_DO_NACK_STOP
  5601  03C3  3470               	retlw	low _do_I2C_DO_NACK_RESTART
  5602  03C4  3405               	retlw	high _do_I2C_DO_NACK_RESTART
  5603  03C5  344D               	retlw	low _do_I2C_RESET
  5604  03C6  3405               	retlw	high _do_I2C_RESET
  5605  03C7  34E5               	retlw	low _do_I2C_DO_ADDRESS_NACK
  5606  03C8  3402               	retlw	high _do_I2C_DO_ADDRESS_NACK
  5607  03C9                     __end_of_fsmStateTable:	
  5608  0013                     _TRISCbits	set	19
  5609  0016                     _LATAbits	set	22
  5610  0014                     _TRISD	set	20
  5611  0013                     _TRISC	set	19
  5612  0012                     _TRISB	set	18
  5613  0011                     _TRISA	set	17
  5614  0015                     _TRISE	set	21
  5615  0018                     _LATC	set	24
  5616  0017                     _LATB	set	23
  5617  0016                     _LATA	set	22
  5618  0019                     _LATD	set	25
  5619  001A                     _LATE	set	26
  5620  000B                     _INTCONbits	set	11
  5621  018E                     _SSP1MSK	set	398
  5622  018D                     _SSP1ADD	set	397
  5623  018F                     _SSP1STAT	set	399
  5624  0191                     _SSP1CON2	set	401
  5625  0190                     _SSP1CON1bits	set	400
  5626  018C                     _SSP1BUF	set	396
  5627  018F                     _SSP1STATbits	set	399
  5628  0191                     _SSP1CON2bits	set	401
  5629  0190                     _SSP1CON1	set	400
  5630  020F                     _T1GCONbits	set	527
  5631  020E                     _T1CONbits	set	526
  5632  020E                     _T1CON	set	526
  5633  020C                     _TMR1L	set	524
  5634  020D                     _TMR1H	set	525
  5635  0211                     _T1CLK	set	529
  5636  0210                     _T1GATE	set	528
  5637  020F                     _T1GCON	set	527
  5638  0719                     _PIE3bits	set	1817
  5639  071A                     _PIE4bits	set	1818
  5640  0710                     _PIR4bits	set	1808
  5641  070F                     _PIR3bits	set	1807
  5642  079B                     _PMD5	set	1947
  5643  079A                     _PMD4	set	1946
  5644  0799                     _PMD3	set	1945
  5645  0798                     _PMD2	set	1944
  5646  0797                     _PMD1	set	1943
  5647  0796                     _PMD0	set	1942
  5648  081F                     _NVMCON2	set	2079
  5649  081C                     _NVMDATL	set	2076
  5650  081D                     _NVMDATH	set	2077
  5651  081E                     _NVMCON1bits	set	2078
  5652  081B                     _NVMADRH	set	2075
  5653  081A                     _NVMADRL	set	2074
  5654  0892                     _OSCTUNE	set	2194
  5655  0893                     _OSCFRQ	set	2195
  5656  0891                     _OSCEN	set	2193
  5657  088F                     _OSCCON3	set	2191
  5658  088D                     _OSCCON1	set	2189
  5659  0EC6                     _SSP1DATPPS	set	3782
  5660  0EC5                     _SSP1CLKPPS	set	3781
  5661  0F24                     _RC4PPS	set	3876
  5662  0F23                     _RC3PPS	set	3875
  5663  0F68                     _INLVLE	set	3944
  5664  0F5D                     _INLVLD	set	3933
  5665  0F52                     _INLVLC	set	3922
  5666  0F47                     _INLVLB	set	3911
  5667  0F3C                     _INLVLA	set	3900
  5668  0F67                     _SLRCONE	set	3943
  5669  0F5C                     _SLRCOND	set	3932
  5670  0F51                     _SLRCONC	set	3921
  5671  0F46                     _SLRCONB	set	3910
  5672  0F3B                     _SLRCONA	set	3899
  5673  0F5B                     _ODCOND	set	3931
  5674  0F50                     _ODCONC	set	3920
  5675  0F45                     _ODCONB	set	3909
  5676  0F3A                     _ODCONA	set	3898
  5677  0F66                     _ODCONE	set	3942
  5678  0F4F                     _WPUC	set	3919
  5679  0F39                     _WPUA	set	3897
  5680  0F44                     _WPUB	set	3908
  5681  0F65                     _WPUE	set	3941
  5682  0F5A                     _WPUD	set	3930
  5683  0F38                     _ANSELA	set	3896
  5684  0F64                     _ANSELE	set	3940
  5685  0F43                     _ANSELB	set	3907
  5686  0F4E                     _ANSELC	set	3918
  5687  0F59                     _ANSELD	set	3929
  5688  7A7C                     _WPUC4	set	31356
  5689  7A7B                     _WPUC3	set	31355
  5690                           
  5691                           ; #config settings
  5692  0000                     
  5693                           	psect	cinit
  5694  0038                     start_initialization:	
  5695  0038                     __initialization:	
  5696                           
  5697                           ; Clear objects allocated to BITCOMMON
  5698  0038  01FD               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  5699                           
  5700                           ; Clear objects allocated to COMMON
  5701  0039  01F7               	clrf	__pbssCOMMON& (0+127)
  5702  003A  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  5703  003B  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  5704  003C  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
  5705  003D  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
  5706  003E  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
  5707                           
  5708                           ; Clear objects allocated to BANK0
  5709  003F  3020               	movlw	low __pbssBANK0
  5710  0040  0084               	movwf	4
  5711  0041  3000               	movlw	high __pbssBANK0
  5712  0042  0085               	movwf	5
  5713  0043  3030               	movlw	48
  5714  0044  3185  2564  3180   	fcall	clear_ram0
  5715  0047                     end_of_initialization:	
  5716                           ;End of C runtime variable initialization code
  5717                           
  5718  0047                     __end_of__initialization:	
  5719  0047  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5720  0048  0020               	movlb	0
  5721  0049  3180  284B         	ljmp	_main	;jump to C main() function
  5722                           
  5723                           	psect	bitbssCOMMON
  5724  03E8                     __pbitbssCOMMON:	
  5725  03E8                     _running:	
  5726  03E8                     	ds	1
  5727  03E9                     _nreg_init:	
  5728  03E9                     	ds	1
  5729  03EA                     _configuration_mode:	
  5730  03EA                     	ds	1
  5731  03EB                     _half:	
  5732  03EB                     	ds	1
  5733                           
  5734                           	psect	bssCOMMON
  5735  0077                     __pbssCOMMON:	
  5736  0077                     _TMR1_InterruptHandler:	
  5737  0077                     	ds	2
  5738  0079                     _timer1ReloadVal:	
  5739  0079                     	ds	2
  5740  007B                     _i2c1_driver_busCollisionISR:	
  5741  007B                     	ds	2
  5742                           
  5743                           	psect	bssBANK0
  5744  0020                     __pbssBANK0:	
  5745  0020                     _i2c_status:	
  5746  0020                     	ds	29
  5747  003D                     _ring_byte:	
  5748  003D                     	ds	5
  5749  0042                     _i2c1_driver_i2cISR:	
  5750  0042                     	ds	2
  5751  0044                     _aux1:	
  5752  0044                     	ds	1
  5753  0045                     _aux:	
  5754  0045                     	ds	1
  5755  0046                     _lum:	
  5756  0046                     	ds	1
  5757  0047                     _temp:	
  5758  0047                     	ds	1
  5759  0048                     _pmon:	
  5760  0048                     	ds	1
  5761  0049                     _nreg_pt:	
  5762  0049                     	ds	1
  5763  004A                     _nreg:	
  5764  004A                     	ds	1
  5765  004B                     _last1m:	
  5766  004B                     	ds	1
  5767  004C                     _last5s:	
  5768  004C                     	ds	1
  5769  004D                     _seg:	
  5770  004D                     	ds	1
  5771  004E                     _clkm:	
  5772  004E                     	ds	1
  5773  004F                     _clkh:	
  5774  004F                     	ds	1
  5775                           
  5776                           	psect	clrtext
  5777  0564                     clear_ram0:	
  5778                           ;	Called with FSR0 containing the base address, and
  5779                           ;	WREG with the size to clear
  5780                           
  5781  0564  0064               	clrwdt	;clear the watchdog before getting into this loop
  5782  0565                     clrloop0:	
  5783  0565  0180               	clrf	0	;clear RAM location pointed to by FSR
  5784  0566  3101               	addfsr 0,1
  5785  0567  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5786  0568  2D65               	goto	clrloop0	;have we reached the end yet?
  5787  0569  3400               	retlw	0	;all done for this memory range, return
  5788                           
  5789                           	psect	cstackCOMMON
  5790  0070                     __pcstackCOMMON:	
  5791  0070                     ?_i2c1_driver_open:	
  5792  0070                     ?_i2c1_driver_isNACK:	
  5793                           ; 1 bit 
  5794                           
  5795  0070                     ?_setCallBack:	
  5796                           ; 1 bit 
  5797                           
  5798  0070                     ?_mssp1_clearIRQ:	
  5799                           ; 1 bytes @ 0x0
  5800                           
  5801  0070                     ??_mssp1_clearIRQ:	
  5802                           ; 1 bytes @ 0x0
  5803                           
  5804  0070                     ?_i2c_busCollisionISR:	
  5805                           ; 1 bytes @ 0x0
  5806                           
  5807  0070                     ??_i2c_busCollisionISR:	
  5808                           ; 1 bytes @ 0x0
  5809                           
  5810  0070                     ?_i2c_ISR:	
  5811                           ; 1 bytes @ 0x0
  5812                           
  5813  0070                     ?_i2c1_driver_resetBus:	
  5814                           ; 1 bytes @ 0x0
  5815                           
  5816  0070                     ??_i2c1_driver_resetBus:	
  5817                           ; 1 bytes @ 0x0
  5818                           
  5819  0070                     ?_i2c1_driver_restart:	
  5820                           ; 1 bytes @ 0x0
  5821                           
  5822  0070                     ??_i2c1_driver_restart:	
  5823                           ; 1 bytes @ 0x0
  5824                           
  5825  0070                     ?_i2c1_driver_stop:	
  5826                           ; 1 bytes @ 0x0
  5827                           
  5828  0070                     ??_i2c1_driver_stop:	
  5829                           ; 1 bytes @ 0x0
  5830                           
  5831  0070                     ?_i2c1_driver_TXData:	
  5832                           ; 1 bytes @ 0x0
  5833                           
  5834  0070                     ??_i2c1_driver_TXData:	
  5835                           ; 1 bytes @ 0x0
  5836                           
  5837  0070                     ?_i2c1_driver_startRX:	
  5838                           ; 1 bytes @ 0x0
  5839                           
  5840  0070                     ??_i2c1_driver_startRX:	
  5841                           ; 1 bytes @ 0x0
  5842                           
  5843  0070                     ?_i2c1_driver_sendACK:	
  5844                           ; 1 bytes @ 0x0
  5845                           
  5846  0070                     ??_i2c1_driver_sendACK:	
  5847                           ; 1 bytes @ 0x0
  5848                           
  5849  0070                     ?_i2c1_driver_sendNACK:	
  5850                           ; 1 bytes @ 0x0
  5851                           
  5852  0070                     ??_i2c1_driver_sendNACK:	
  5853                           ; 1 bytes @ 0x0
  5854                           
  5855  0070                     ??_i2c1_driver_isNACK:	
  5856                           ; 1 bytes @ 0x0
  5857                           
  5858  0070                     ?_i2c1_driver_getRXData:	
  5859                           ; 1 bytes @ 0x0
  5860                           
  5861  0070                     ??_i2c1_driver_getRXData:	
  5862                           ; 1 bytes @ 0x0
  5863                           
  5864  0070                     ?_mssp1_setIRQ:	
  5865                           ; 1 bytes @ 0x0
  5866                           
  5867  0070                     ??_mssp1_setIRQ:	
  5868                           ; 1 bytes @ 0x0
  5869                           
  5870  0070                     ?_i2c1_driver_clearBusCollision:	
  5871                           ; 1 bytes @ 0x0
  5872                           
  5873  0070                     ??_i2c1_driver_clearBusCollision:	
  5874                           ; 1 bytes @ 0x0
  5875                           
  5876  0070                     ?_TMR1_DefaultInterruptHandler:	
  5877                           ; 1 bytes @ 0x0
  5878                           
  5879  0070                     ??_TMR1_DefaultInterruptHandler:	
  5880                           ; 1 bytes @ 0x0
  5881                           
  5882  0070                     ?_PMD_Initialize:	
  5883                           ; 1 bytes @ 0x0
  5884                           
  5885  0070                     ?_PIN_MANAGER_Initialize:	
  5886                           ; 1 bytes @ 0x0
  5887                           
  5888  0070                     ?_OSCILLATOR_Initialize:	
  5889                           ; 1 bytes @ 0x0
  5890                           
  5891  0070                     ?_update_clock:	
  5892                           ; 1 bytes @ 0x0
  5893                           
  5894  0070                     ??_update_clock:	
  5895                           ; 1 bytes @ 0x0
  5896                           
  5897  0070                     ?_cksum:	
  5898                           ; 1 bytes @ 0x0
  5899                           
  5900  0070                     ?_reset_recv:	
  5901                           ; 1 bytes @ 0x0
  5902                           
  5903  0070                     ?_push_ring:	
  5904                           ; 1 bytes @ 0x0
  5905                           
  5906  0070                     ?_cksum_w:	
  5907                           ; 1 bytes @ 0x0
  5908                           
  5909  0070                     ?_i2c_setBuffer:	
  5910                           ; 1 bytes @ 0x0
  5911                           
  5912  0070                     ?_do_I2C_RESET:	
  5913                           ; 1 bytes @ 0x0
  5914                           
  5915  0070                     ??_do_I2C_RESET:	
  5916                           ; 1 bytes @ 0x0
  5917                           
  5918  0070                     ?_do_I2C_IDLE:	
  5919                           ; 1 bytes @ 0x0
  5920                           
  5921  0070                     ??_do_I2C_IDLE:	
  5922                           ; 1 bytes @ 0x0
  5923                           
  5924  0070                     ?_do_I2C_SEND_RESTART_READ:	
  5925                           ; 1 bytes @ 0x0
  5926                           
  5927  0070                     ??_do_I2C_SEND_RESTART_READ:	
  5928                           ; 1 bytes @ 0x0
  5929                           
  5930  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  5931                           ; 1 bytes @ 0x0
  5932                           
  5933  0070                     ??_do_I2C_SEND_RESTART_WRITE:	
  5934                           ; 1 bytes @ 0x0
  5935                           
  5936  0070                     ?_do_I2C_SEND_RESTART:	
  5937                           ; 1 bytes @ 0x0
  5938                           
  5939  0070                     ??_do_I2C_SEND_RESTART:	
  5940                           ; 1 bytes @ 0x0
  5941                           
  5942  0070                     ?_do_I2C_SEND_STOP:	
  5943                           ; 1 bytes @ 0x0
  5944                           
  5945  0070                     ??_do_I2C_SEND_STOP:	
  5946                           ; 1 bytes @ 0x0
  5947                           
  5948  0070                     ?_do_I2C_SEND_ADR_READ:	
  5949                           ; 1 bytes @ 0x0
  5950                           
  5951  0070                     ??_do_I2C_SEND_ADR_READ:	
  5952                           ; 1 bytes @ 0x0
  5953                           
  5954  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  5955                           ; 1 bytes @ 0x0
  5956                           
  5957  0070                     ?_do_I2C_RCEN:	
  5958                           ; 1 bytes @ 0x0
  5959                           
  5960  0070                     ??_do_I2C_RCEN:	
  5961                           ; 1 bytes @ 0x0
  5962                           
  5963  0070                     ?_do_I2C_DO_ACK:	
  5964                           ; 1 bytes @ 0x0
  5965                           
  5966  0070                     ??_do_I2C_DO_ACK:	
  5967                           ; 1 bytes @ 0x0
  5968                           
  5969  0070                     ?_do_I2C_DO_NACK_STOP:	
  5970                           ; 1 bytes @ 0x0
  5971                           
  5972  0070                     ??_do_I2C_DO_NACK_STOP:	
  5973                           ; 1 bytes @ 0x0
  5974                           
  5975  0070                     ?_do_I2C_DO_NACK_RESTART:	
  5976                           ; 1 bytes @ 0x0
  5977                           
  5978  0070                     ??_do_I2C_DO_NACK_RESTART:	
  5979                           ; 1 bytes @ 0x0
  5980                           
  5981  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  5982                           ; 1 bytes @ 0x0
  5983                           
  5984  0070                     ??_do_I2C_DO_ADDRESS_NACK:	
  5985                           ; 1 bytes @ 0x0
  5986                           
  5987  0070                     ?_do_I2C_TX:	
  5988                           ; 1 bytes @ 0x0
  5989                           
  5990  0070                     ?_do_I2C_RX:	
  5991                           ; 1 bytes @ 0x0
  5992                           
  5993  0070                     ??_do_I2C_RX:	
  5994                           ; 1 bytes @ 0x0
  5995                           
  5996  0070                     ?_do_I2C_TX_EMPTY:	
  5997                           ; 1 bytes @ 0x0
  5998                           
  5999  0070                     ??_do_I2C_TX_EMPTY:	
  6000                           ; 1 bytes @ 0x0
  6001                           
  6002  0070                     ?_TMR1_Initialize:	
  6003                           ; 1 bytes @ 0x0
  6004                           
  6005  0070                     ?_TMR1_WriteTimer:	
  6006                           ; 1 bytes @ 0x0
  6007                           
  6008  0070                     ?_TMR1_ISR:	
  6009                           ; 1 bytes @ 0x0
  6010                           
  6011  0070                     ?_INTERRUPT_InterruptManager:	
  6012                           ; 1 bytes @ 0x0
  6013                           
  6014  0070                     ?_SYSTEM_Initialize:	
  6015                           ; 1 bytes @ 0x0
  6016                           
  6017  0070                     ?_h_clock:	
  6018                           ; 1 bytes @ 0x0
  6019                           
  6020  0070                     ?_main:	
  6021                           ; 1 bytes @ 0x0
  6022                           
  6023  0070                     i2c1_driver_TXData@d:	
  6024                           ; 1 bytes @ 0x0
  6025                           
  6026  0070                     i2c_setBuffer@bufferSize:	
  6027                           ; 1 bytes @ 0x0
  6028                           
  6029  0070                     setCallBack@cb:	
  6030                           ; 2 bytes @ 0x0
  6031                           
  6032  0070                     TMR1_WriteTimer@timerVal:	
  6033                           ; 2 bytes @ 0x0
  6034                           
  6035                           
  6036                           ; 2 bytes @ 0x0
  6037  0070                     	ds	1
  6038  0071                     ??_do_I2C_SEND_ADR_WRITE:	
  6039  0071                     ??_do_I2C_TX:	
  6040                           ; 1 bytes @ 0x1
  6041                           
  6042  0071                     ??_h_clock:	
  6043                           ; 1 bytes @ 0x1
  6044                           
  6045                           
  6046                           ; 1 bytes @ 0x1
  6047  0071                     	ds	1
  6048  0072                     ??_i2c_setBuffer:	
  6049  0072                     ??_TMR1_WriteTimer:	
  6050                           ; 1 bytes @ 0x2
  6051                           
  6052  0072                     ??_TMR1_ISR:	
  6053                           ; 1 bytes @ 0x2
  6054                           
  6055  0072                     setCallBack@p:	
  6056                           ; 1 bytes @ 0x2
  6057                           
  6058                           
  6059                           ; 1 bytes @ 0x2
  6060  0072                     	ds	1
  6061  0073                     ??_setCallBack:	
  6062  0073                     i2c_setBuffer@buffer:	
  6063                           ; 1 bytes @ 0x3
  6064                           
  6065                           
  6066                           ; 1 bytes @ 0x3
  6067  0073                     	ds	1
  6068  0074                     ??_i2c_ISR:	
  6069  0074                     setCallBack@idx:	
  6070                           ; 1 bytes @ 0x4
  6071                           
  6072                           
  6073                           ; 1 bytes @ 0x4
  6074  0074                     	ds	1
  6075  0075                     ??_i2c_setDataCompleteCallback:	
  6076                           
  6077                           ; 1 bytes @ 0x5
  6078  0075                     	ds	1
  6079  0076                     ?_returnStop:	
  6080  0076                     ?_returnReset:	
  6081                           ; 1 bytes @ 0x6
  6082                           
  6083  0076                     ?_i2c_restartWrite:	
  6084                           ; 1 bytes @ 0x6
  6085                           
  6086  0076                     ?_wr1RegCompleteHandler:	
  6087                           ; 1 bytes @ 0x6
  6088                           
  6089  0076                     ?_rd1RegCompleteHandler:	
  6090                           ; 1 bytes @ 0x6
  6091                           
  6092  0076                     ?_rd2RegCompleteHandler:	
  6093                           ; 1 bytes @ 0x6
  6094                           
  6095  0076                     ?_wr2RegCompleteHandler:	
  6096                           ; 1 bytes @ 0x6
  6097                           
  6098  0076                     ?_rdBlkRegCompleteHandler:	
  6099                           ; 1 bytes @ 0x6
  6100                           
  6101  0076                     returnStop@p:	
  6102                           ; 1 bytes @ 0x6
  6103                           
  6104  0076                     returnReset@p:	
  6105                           ; 1 bytes @ 0x6
  6106                           
  6107  0076                     wr1RegCompleteHandler@p:	
  6108                           ; 1 bytes @ 0x6
  6109                           
  6110  0076                     rd1RegCompleteHandler@p:	
  6111                           ; 1 bytes @ 0x6
  6112                           
  6113  0076                     rd2RegCompleteHandler@p:	
  6114                           ; 1 bytes @ 0x6
  6115                           
  6116  0076                     wr2RegCompleteHandler@p:	
  6117                           ; 1 bytes @ 0x6
  6118                           
  6119  0076                     rdBlkRegCompleteHandler@p:	
  6120                           ; 1 bytes @ 0x6
  6121                           
  6122  0076                     i2c_restartWrite@p:	
  6123                           ; 1 bytes @ 0x6
  6124                           
  6125                           
  6126                           ; 1 bytes @ 0x6
  6127  0076                     	ds	1
  6128  0077                     ??_returnStop:	
  6129  0077                     ??_returnReset:	
  6130                           ; 1 bytes @ 0x7
  6131                           
  6132  0077                     ??_i2c_restartWrite:	
  6133                           ; 1 bytes @ 0x7
  6134                           
  6135  0077                     ??_wr1RegCompleteHandler:	
  6136                           ; 1 bytes @ 0x7
  6137                           
  6138  0077                     ??_rd1RegCompleteHandler:	
  6139                           ; 1 bytes @ 0x7
  6140                           
  6141  0077                     ??_rd2RegCompleteHandler:	
  6142                           ; 1 bytes @ 0x7
  6143                           
  6144  0077                     ??_wr2RegCompleteHandler:	
  6145                           ; 1 bytes @ 0x7
  6146                           
  6147  0077                     ??_rdBlkRegCompleteHandler:	
  6148                           ; 1 bytes @ 0x7
  6149                           
  6150  0077                     ??_INTERRUPT_InterruptManager:	
  6151                           ; 1 bytes @ 0x7
  6152                           
  6153                           
  6154                           	psect	cstackBANK0
  6155  0050                     __pcstackBANK0:	
  6156                           ; 1 bytes @ 0x7
  6157                           
  6158  0050                     ??_i2c1_driver_open:	
  6159  0050                     ?_TMR1_SetInterruptHandler:	
  6160                           ; 1 bytes @ 0x0
  6161                           
  6162  0050                     ??_PMD_Initialize:	
  6163                           ; 1 bytes @ 0x0
  6164                           
  6165  0050                     ??_PIN_MANAGER_Initialize:	
  6166                           ; 1 bytes @ 0x0
  6167                           
  6168  0050                     ??_OSCILLATOR_Initialize:	
  6169                           ; 1 bytes @ 0x0
  6170                           
  6171  0050                     ?_i2c_setDataCompleteCallback:	
  6172                           ; 1 bytes @ 0x0
  6173                           
  6174  0050                     ?_DATAEE_ReadByte:	
  6175                           ; 1 bytes @ 0x0
  6176                           
  6177  0050                     ?___bmul:	
  6178                           ; 1 bytes @ 0x0
  6179                           
  6180  0050                     ___bmul@multiplicand:	
  6181                           ; 1 bytes @ 0x0
  6182                           
  6183  0050                     i2c_setDataCompleteCallback@cb:	
  6184                           ; 1 bytes @ 0x0
  6185                           
  6186  0050                     TMR1_SetInterruptHandler@InterruptHandler:	
  6187                           ; 2 bytes @ 0x0
  6188                           
  6189  0050                     DATAEE_ReadByte@bAdd:	
  6190                           ; 2 bytes @ 0x0
  6191                           
  6192                           
  6193                           ; 2 bytes @ 0x0
  6194  0050                     	ds	1
  6195  0051                     ??___bmul:	
  6196                           
  6197                           ; 1 bytes @ 0x1
  6198  0051                     	ds	1
  6199  0052                     ??_TMR1_SetInterruptHandler:	
  6200  0052                     ??_cksum:	
  6201                           ; 1 bytes @ 0x2
  6202                           
  6203  0052                     ??_TMR1_Initialize:	
  6204                           ; 1 bytes @ 0x2
  6205                           
  6206  0052                     ??_SYSTEM_Initialize:	
  6207                           ; 1 bytes @ 0x2
  6208                           
  6209  0052                     ??_DATAEE_ReadByte:	
  6210                           ; 1 bytes @ 0x2
  6211                           
  6212  0052                     i2c_setDataCompleteCallback@p:	
  6213                           ; 1 bytes @ 0x2
  6214                           
  6215  0052                     ___bmul@product:	
  6216                           ; 1 bytes @ 0x2
  6217                           
  6218                           
  6219                           ; 1 bytes @ 0x2
  6220  0052                     	ds	1
  6221  0053                     cksum@res:	
  6222  0053                     ___bmul@multiplier:	
  6223                           ; 1 bytes @ 0x3
  6224                           
  6225                           
  6226                           ; 1 bytes @ 0x3
  6227  0053                     	ds	1
  6228  0054                     ?_read_ring:	
  6229  0054                     read_ring@subindex:	
  6230                           ; 1 bytes @ 0x4
  6231                           
  6232  0054                     cksum@i:	
  6233                           ; 1 bytes @ 0x4
  6234                           
  6235                           
  6236                           ; 2 bytes @ 0x4
  6237  0054                     	ds	1
  6238  0055                     ??_read_ring:	
  6239                           
  6240                           ; 1 bytes @ 0x5
  6241  0055                     	ds	1
  6242  0056                     ?_DATAEE_WriteByte:	
  6243  0056                     DATAEE_WriteByte@bAdd:	
  6244                           ; 1 bytes @ 0x6
  6245                           
  6246                           
  6247                           ; 2 bytes @ 0x6
  6248  0056                     	ds	1
  6249  0057                     read_ring@i:	
  6250                           
  6251                           ; 1 bytes @ 0x7
  6252  0057                     	ds	1
  6253  0058                     DATAEE_WriteByte@bData:	
  6254  0058                     read_ring@index:	
  6255                           ; 1 bytes @ 0x8
  6256                           
  6257                           
  6258                           ; 1 bytes @ 0x8
  6259  0058                     	ds	1
  6260  0059                     ??_DATAEE_WriteByte:	
  6261  0059                     DATAEE_WriteByte@GIEBitValue:	
  6262                           ; 1 bytes @ 0x9
  6263                           
  6264  0059                     read_ring@absindex:	
  6265                           ; 1 bytes @ 0x9
  6266                           
  6267                           
  6268                           ; 1 bytes @ 0x9
  6269  0059                     	ds	1
  6270  005A                     ??_reset_recv:	
  6271  005A                     ??_push_ring:	
  6272                           ; 1 bytes @ 0xA
  6273                           
  6274  005A                     ??_cksum_w:	
  6275                           ; 1 bytes @ 0xA
  6276                           
  6277  005A                     reset_recv@i:	
  6278                           ; 1 bytes @ 0xA
  6279                           
  6280                           
  6281                           ; 2 bytes @ 0xA
  6282  005A                     	ds	1
  6283  005B                     push_ring@i:	
  6284                           
  6285                           ; 1 bytes @ 0xB
  6286  005B                     	ds	1
  6287  005C                     ??_main:	
  6288                           
  6289                           ; 1 bytes @ 0xC
  6290  005C                     	ds	2
  6291                           
  6292                           	psect	maintext
  6293  004B                     __pmaintext:	
  6294 ;;
  6295 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  6296 ;;
  6297 ;; *************** function _main *****************
  6298 ;; Defined at:
  6299 ;;		line 63 in file "main.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;		None
  6302 ;; Auto vars:     Size  Location     Type
  6303 ;;		None
  6304 ;; Return value:  Size  Location     Type
  6305 ;;                  1    wreg      void 
  6306 ;; Registers used:
  6307 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6308 ;; Tracked objects:
  6309 ;;		On entry : B1F/0
  6310 ;;		On exit  : 0/0
  6311 ;;		Unchanged: 0/0
  6312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6314 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6315 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6316 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6317 ;;Total ram usage:        4 bytes
  6318 ;; Hardware stack levels required when called:    9
  6319 ;; This function calls:
  6320 ;;		_DATAEE_ReadByte
  6321 ;;		_DATAEE_WriteByte
  6322 ;;		_SYSTEM_Initialize
  6323 ;;		_TMR1_SetInterruptHandler
  6324 ;;		_cksum
  6325 ;;		_cksum_w
  6326 ;;		_i2c1_driver_open
  6327 ;;		_push_ring
  6328 ;;		_read_ring
  6329 ;;		_reset_recv
  6330 ;; This function is called by:
  6331 ;;		Startup code after reset
  6332 ;; This function uses a non-reentrant model
  6333 ;;
  6334                           
  6335                           
  6336                           ;psect for function _main
  6337  004B                     _main:	
  6338  004B                     l4387:	
  6339                           ;incstack = 0
  6340                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6341                           
  6342                           
  6343                           ;main.c: 65:     clkh = 0; clkm = 0; seg = 0;
  6344  004B  0020               	movlb	0	; select bank0
  6345  004C  01CF               	clrf	_clkh	;volatile
  6346  004D  01CE               	clrf	_clkm	;volatile
  6347  004E  01CD               	clrf	_seg	;volatile
  6348                           
  6349                           ;main.c: 66:     last5s = 0; last1m = 0;
  6350  004F  01CC               	clrf	_last5s	;volatile
  6351  0050  01CB               	clrf	_last1m	;volatile
  6352  0051                     l4389:	
  6353                           
  6354                           ;main.c: 70:     nreg = 0xF000 + 5 * 30 >= 0xF0FF - 10 ? 256 : 5 * 30;
  6355  0051  117D               	bcf	_configuration_mode/(0+8),_configuration_mode& (0+7)
  6356  0052                     l4391:	
  6357  0052                     l881:	
  6358  0052  3096               	movlw	150
  6359  0053  00DC               	movwf	??_main
  6360  0054  085C               	movf	??_main,w
  6361  0055  00CA               	movwf	_nreg
  6362  0056                     l4395:	
  6363                           
  6364                           ;main.c: 71:     nreg_pt = 0;
  6365  0056  01C9               	clrf	_nreg_pt
  6366  0057                     l4397:	
  6367                           
  6368                           ;main.c: 72:     nreg_init = 0;
  6369  0057  10FD               	bcf	_nreg_init/(0+8),_nreg_init& (0+7)
  6370  0058                     l4399:	
  6371                           
  6372                           ;main.c: 74:     pmon = 5;
  6373  0058  3005               	movlw	5
  6374  0059  00DC               	movwf	??_main
  6375  005A  085C               	movf	??_main,w
  6376  005B  00C8               	movwf	_pmon
  6377  005C                     l4401:	
  6378                           
  6379                           ;main.c: 75:     running = 1;
  6380  005C  147D               	bsf	_running/(0+8),_running& (0+7)
  6381                           
  6382                           ;main.c: 76:     temp = 0;
  6383  005D  01C7               	clrf	_temp
  6384                           
  6385                           ;main.c: 77:     lum = 0;
  6386  005E  01C6               	clrf	_lum
  6387  005F                     l4403:	
  6388                           
  6389                           ;main.c: 80:     if(DATAEE_ReadByte(0xF0FF - 10) == 0xAB) {
  6390  005F  30F5               	movlw	245
  6391  0060  00D0               	movwf	DATAEE_ReadByte@bAdd
  6392  0061  30F0               	movlw	240
  6393  0062  00D1               	movwf	DATAEE_ReadByte@bAdd+1
  6394  0063  3184  24F5  3180   	fcall	_DATAEE_ReadByte
  6395  0066  3AAB               	xorlw	171
  6396  0067  1D03               	skipz
  6397  0068  286A               	goto	u2141
  6398  0069  286B               	goto	u2140
  6399  006A                     u2141:	
  6400  006A  289E               	goto	l4409
  6401  006B                     u2140:	
  6402  006B                     l4405:	
  6403                           
  6404                           ;main.c: 81:         if(DATAEE_ReadByte(0xF0FF) == cksum()) {
  6405  006B  3183  23C9  3180   	fcall	_cksum
  6406  006E  0020               	movlb	0	; select bank0
  6407  006F  00DC               	movwf	??_main
  6408  0070  30FF               	movlw	255
  6409  0071  00D0               	movwf	DATAEE_ReadByte@bAdd
  6410  0072  30F0               	movlw	240
  6411  0073  00D1               	movwf	DATAEE_ReadByte@bAdd+1
  6412  0074  3184  24F5  3180   	fcall	_DATAEE_ReadByte
  6413  0077  0020               	movlb	0	; select bank0
  6414  0078  065C               	xorwf	??_main,w
  6415  0079  1D03               	skipz
  6416  007A  287C               	goto	u2151
  6417  007B  287D               	goto	u2150
  6418  007C                     u2151:	
  6419  007C  289E               	goto	l4409
  6420  007D                     u2150:	
  6421  007D                     l4407:	
  6422                           
  6423                           ;main.c: 82:             clkh = DATAEE_ReadByte(0xF0FF - 10 + 1);
  6424  007D  30F6               	movlw	246
  6425  007E  00D0               	movwf	DATAEE_ReadByte@bAdd
  6426  007F  30F0               	movlw	240
  6427  0080  00D1               	movwf	DATAEE_ReadByte@bAdd+1
  6428  0081  3184  24F5  3180   	fcall	_DATAEE_ReadByte
  6429  0084  0020               	movlb	0	; select bank0
  6430  0085  00DC               	movwf	??_main
  6431  0086  085C               	movf	??_main,w
  6432  0087  00CF               	movwf	_clkh	;volatile
  6433                           
  6434                           ;main.c: 83:             clkm = DATAEE_ReadByte(0xF0FF - 10 + 2);;
  6435  0088  30F7               	movlw	247
  6436  0089  00D0               	movwf	DATAEE_ReadByte@bAdd
  6437  008A  30F0               	movlw	240
  6438  008B  00D1               	movwf	DATAEE_ReadByte@bAdd+1
  6439  008C  3184  24F5  3180   	fcall	_DATAEE_ReadByte
  6440  008F  0020               	movlb	0	; select bank0
  6441  0090  00DC               	movwf	??_main
  6442  0091  085C               	movf	??_main,w
  6443  0092  00CE               	movwf	_clkm	;volatile
  6444                           
  6445                           ;main.c: 84:             nreg_pt = DATAEE_ReadByte(0xF0FF - 10 + 3);;
  6446  0093  30F8               	movlw	248
  6447  0094  00D0               	movwf	DATAEE_ReadByte@bAdd
  6448  0095  30F0               	movlw	240
  6449  0096  00D1               	movwf	DATAEE_ReadByte@bAdd+1
  6450  0097  3184  24F5  3180   	fcall	_DATAEE_ReadByte
  6451  009A  0020               	movlb	0	; select bank0
  6452  009B  00DC               	movwf	??_main
  6453  009C  085C               	movf	??_main,w
  6454  009D  00C9               	movwf	_nreg_pt
  6455  009E                     l4409:	
  6456                           
  6457                           ;main.c: 88:     reset_recv();
  6458  009E  3183  23E9  3180   	fcall	_reset_recv
  6459  00A1                     l4411:	
  6460                           
  6461                           ;main.c: 91:     DATAEE_WriteByte(0xF0FF - 10, 0xAB);
  6462  00A1  30F5               	movlw	245
  6463  00A2  0020               	movlb	0	; select bank0
  6464  00A3  00D6               	movwf	DATAEE_WriteByte@bAdd
  6465  00A4  30F0               	movlw	240
  6466  00A5  00D7               	movwf	DATAEE_WriteByte@bAdd+1
  6467  00A6  30AB               	movlw	171
  6468  00A7  00DC               	movwf	??_main
  6469  00A8  085C               	movf	??_main,w
  6470  00A9  00D8               	movwf	DATAEE_WriteByte@bData
  6471  00AA  3183  2361  3180   	fcall	_DATAEE_WriteByte
  6472  00AD                     l4413:	
  6473                           
  6474                           ;main.c: 94:     _delay((unsigned long)((16000)*(4000000/4000.0)));
  6475  00AD  3052               	movlw	82
  6476  00AE  0020               	movlb	0	; select bank0
  6477  00AF  00DD               	movwf	??_main+1
  6478  00B0  302B               	movlw	43
  6479  00B1  00DC               	movwf	??_main
  6480  00B2  3000               	movlw	0
  6481  00B3                     u2227:	
  6482  00B3  0B89               	decfsz	9,f
  6483  00B4  28B3               	goto	u2227
  6484  00B5  0BDC               	decfsz	??_main,f
  6485  00B6  28B3               	goto	u2227
  6486  00B7  0BDD               	decfsz	??_main+1,f
  6487  00B8  28B3               	goto	u2227
  6488  00B9  0000               	nop
  6489  00BA                     l4415:	
  6490                           
  6491                           ;main.c: 96:     SYSTEM_Initialize();
  6492  00BA  3185  2512  3180   	fcall	_SYSTEM_Initialize
  6493  00BD                     l4417:	
  6494                           
  6495                           ;main.c: 97:     (INTCONbits.GIE = 1);
  6496  00BD  178B               	bsf	11,7	;volatile
  6497  00BE                     l4419:	
  6498                           
  6499                           ;main.c: 98:     (INTCONbits.PEIE = 1);
  6500  00BE  170B               	bsf	11,6	;volatile
  6501  00BF                     l4421:	
  6502                           
  6503                           ;main.c: 100:     TMR1_SetInterruptHandler(h_clock);
  6504  00BF  303A               	movlw	low _h_clock
  6505  00C0  0020               	movlb	0	; select bank0
  6506  00C1  00D0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  6507  00C2  3004               	movlw	high _h_clock
  6508  00C3  00D1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  6509  00C4  3185  256A  3180   	fcall	_TMR1_SetInterruptHandler
  6510  00C7                     l4423:	
  6511                           
  6512                           ;main.c: 103:     i2c1_driver_open();
  6513  00C7  3185  251F  3180   	fcall	_i2c1_driver_open
  6514  00CA                     l4425:	
  6515                           
  6516                           ;main.c: 104:     TRISCbits.TRISC3 = 1;
  6517  00CA  0020               	movlb	0	; select bank0
  6518  00CB  1593               	bsf	19,3	;volatile
  6519  00CC                     l4427:	
  6520                           
  6521                           ;main.c: 105:     TRISCbits.TRISC4 = 1;
  6522  00CC  1613               	bsf	19,4	;volatile
  6523  00CD                     l4429:	
  6524                           
  6525                           ;main.c: 106:     WPUC3 = 1;
  6526  00CD  003E               	movlb	30	; select bank30
  6527  00CE  15CF               	bsf	79,3	;volatile
  6528  00CF                     l4431:	
  6529                           
  6530                           ;main.c: 107:     WPUC4 = 1;
  6531  00CF  164F               	bsf	79,4	;volatile
  6532                           
  6533                           ;main.c: 109:     while (running)
  6534  00D0  295B               	goto	l884
  6535  00D1                     l4433:	
  6536                           
  6537                           ;main.c: 115:         if(pmon) {
  6538  00D1  0020               	movlb	0	; select bank0
  6539  00D2  0848               	movf	_pmon,w
  6540  00D3  1903               	btfsc	3,2
  6541  00D4  28D6               	goto	u2161
  6542  00D5  28D7               	goto	u2160
  6543  00D6                     u2161:	
  6544  00D6  292E               	goto	l887
  6545  00D7                     u2160:	
  6546  00D7                     l4435:	
  6547                           
  6548                           ;main.c: 116:             (INTCONbits.GIE = 0);
  6549  00D7  138B               	bcf	11,7	;volatile
  6550  00D8                     l4437:	
  6551                           
  6552                           ;main.c: 117:             if(last5s >= pmon) {
  6553  00D8  0848               	movf	_pmon,w
  6554  00D9  024C               	subwf	_last5s,w	;volatile
  6555  00DA  1C03               	skipc
  6556  00DB  28DD               	goto	u2171
  6557  00DC  28DE               	goto	u2170
  6558  00DD                     u2171:	
  6559  00DD  292D               	goto	l888
  6560  00DE                     u2170:	
  6561  00DE                     l4439:	
  6562                           
  6563                           ;main.c: 118:                 last5s = 0;
  6564  00DE  01CC               	clrf	_last5s	;volatile
  6565  00DF                     l4441:	
  6566                           
  6567                           ;main.c: 119:                (INTCONbits.GIE = 1);
  6568  00DF  178B               	bsf	11,7	;volatile
  6569  00E0                     l4443:	
  6570                           
  6571                           ;main.c: 122:                 __nop();
  6572  00E0  0000               	nop
  6573  00E1                     l4445:	
  6574                           
  6575                           ;main.c: 123:                 temp++;
  6576  00E1  3001               	movlw	1
  6577  00E2  0020               	movlb	0	; select bank0
  6578  00E3  00DC               	movwf	??_main
  6579  00E4  085C               	movf	??_main,w
  6580  00E5  07C7               	addwf	_temp,f
  6581  00E6                     l4447:	
  6582                           
  6583                           ;main.c: 124:                 __nop();
  6584  00E6  0000               	nop
  6585  00E7                     l4449:	
  6586                           
  6587                           ;main.c: 129:                 if (temp != read_ring(0, 3) || lum != read_ring(0, 4)) {
  6588  00E7  3003               	movlw	3
  6589  00E8  0020               	movlb	0	; select bank0
  6590  00E9  00DC               	movwf	??_main
  6591  00EA  085C               	movf	??_main,w
  6592  00EB  00D4               	movwf	read_ring@subindex
  6593  00EC  3000               	movlw	0
  6594  00ED  3182  2244  3180   	fcall	_read_ring
  6595  00F0  0020               	movlb	0	; select bank0
  6596  00F1  0647               	xorwf	_temp,w
  6597  00F2  1D03               	skipz
  6598  00F3  28F5               	goto	u2181
  6599  00F4  28F6               	goto	u2180
  6600  00F5                     u2181:	
  6601  00F5  2904               	goto	l891
  6602  00F6                     u2180:	
  6603  00F6                     l4451:	
  6604  00F6  3004               	movlw	4
  6605  00F7  00DC               	movwf	??_main
  6606  00F8  085C               	movf	??_main,w
  6607  00F9  00D4               	movwf	read_ring@subindex
  6608  00FA  3000               	movlw	0
  6609  00FB  3182  2244  3180   	fcall	_read_ring
  6610  00FE  0020               	movlb	0	; select bank0
  6611  00FF  0646               	xorwf	_lum,w
  6612  0100  1903               	skipnz
  6613  0101  2903               	goto	u2191
  6614  0102  2904               	goto	u2190
  6615  0103                     u2191:	
  6616  0103  292E               	goto	l887
  6617  0104                     u2190:	
  6618  0104                     l891:	
  6619                           
  6620                           ;main.c: 130:                     (INTCONbits.GIE = 0);
  6621  0104  138B               	bcf	11,7	;volatile
  6622  0105                     l4453:	
  6623                           
  6624                           ;main.c: 131:                     ring_byte[0] = clkh;
  6625  0105  084F               	movf	_clkh,w	;volatile
  6626  0106  00DC               	movwf	??_main
  6627  0107  085C               	movf	??_main,w
  6628  0108  00BD               	movwf	_ring_byte
  6629                           
  6630                           ;main.c: 132:                     ring_byte[1] = clkm;
  6631  0109  084E               	movf	_clkm,w	;volatile
  6632  010A  00DC               	movwf	??_main
  6633  010B  085C               	movf	??_main,w
  6634  010C  00BE               	movwf	_ring_byte+1
  6635                           
  6636                           ;main.c: 133:                     ring_byte[2] = seg;
  6637  010D  084D               	movf	_seg,w	;volatile
  6638  010E  00DC               	movwf	??_main
  6639  010F  085C               	movf	??_main,w
  6640  0110  00BF               	movwf	_ring_byte+2
  6641  0111                     l4455:	
  6642                           
  6643                           ;main.c: 134:                     (INTCONbits.GIE = 1);
  6644  0111  178B               	bsf	11,7	;volatile
  6645                           
  6646                           ;main.c: 135:                     ring_byte[3] = temp;
  6647  0112  0847               	movf	_temp,w
  6648  0113  00DC               	movwf	??_main
  6649  0114  085C               	movf	??_main,w
  6650  0115  00C0               	movwf	_ring_byte+3
  6651                           
  6652                           ;main.c: 136:                     ring_byte[4] = lum;
  6653  0116  0846               	movf	_lum,w
  6654  0117  00DC               	movwf	??_main
  6655  0118  085C               	movf	??_main,w
  6656  0119  00C1               	movwf	_ring_byte+4
  6657  011A                     l4457:	
  6658                           
  6659                           ;main.c: 137:                     push_ring();
  6660  011A  3182  22B5  3180   	fcall	_push_ring
  6661  011D                     l4459:	
  6662                           
  6663                           ;main.c: 140:                     DATAEE_WriteByte(0xF0FF - 10 + 3, nreg_pt);
  6664  011D  30F8               	movlw	248
  6665  011E  0020               	movlb	0	; select bank0
  6666  011F  00D6               	movwf	DATAEE_WriteByte@bAdd
  6667  0120  30F0               	movlw	240
  6668  0121  00D7               	movwf	DATAEE_WriteByte@bAdd+1
  6669  0122  0849               	movf	_nreg_pt,w
  6670  0123  00DC               	movwf	??_main
  6671  0124  085C               	movf	??_main,w
  6672  0125  00D8               	movwf	DATAEE_WriteByte@bData
  6673  0126  3183  2361  3180   	fcall	_DATAEE_WriteByte
  6674  0129                     l4461:	
  6675                           
  6676                           ;main.c: 141:                     cksum_w();
  6677  0129  3184  24D5  3180   	fcall	_cksum_w
  6678  012C  292E               	goto	l887
  6679  012D                     l888:	
  6680                           ;main.c: 144:             else
  6681                           
  6682                           
  6683                           ;main.c: 145:                 (INTCONbits.GIE = 1);
  6684  012D  178B               	bsf	11,7	;volatile
  6685  012E                     l887:	
  6686                           ;main.c: 146:         }
  6687                           
  6688                           
  6689                           ;main.c: 149:         (INTCONbits.GIE = 0);
  6690  012E  138B               	bcf	11,7	;volatile
  6691  012F                     l4463:	
  6692                           
  6693                           ;main.c: 150:         if (last1m >= 1) {
  6694  012F  0020               	movlb	0	; select bank0
  6695  0130  084B               	movf	_last1m,w	;volatile
  6696  0131  1903               	btfsc	3,2
  6697  0132  2934               	goto	u2201
  6698  0133  2935               	goto	u2200
  6699  0134                     u2201:	
  6700  0134  295A               	goto	l893
  6701  0135                     u2200:	
  6702  0135                     l4465:	
  6703                           
  6704                           ;main.c: 152:             last1m = 0;
  6705  0135  01CB               	clrf	_last1m	;volatile
  6706  0136                     l4467:	
  6707                           
  6708                           ;main.c: 153:             aux = clkh;
  6709  0136  084F               	movf	_clkh,w	;volatile
  6710  0137  00DC               	movwf	??_main
  6711  0138  085C               	movf	??_main,w
  6712  0139  00C5               	movwf	_aux
  6713  013A                     l4469:	
  6714                           
  6715                           ;main.c: 154:             aux1 = clkm;
  6716  013A  084E               	movf	_clkm,w	;volatile
  6717  013B  00DC               	movwf	??_main
  6718  013C  085C               	movf	??_main,w
  6719  013D  00C4               	movwf	_aux1
  6720  013E                     l4471:	
  6721                           
  6722                           ;main.c: 155:             (INTCONbits.GIE = 1);
  6723  013E  178B               	bsf	11,7	;volatile
  6724  013F                     l4473:	
  6725                           
  6726                           ;main.c: 156:             DATAEE_WriteByte(0xF0FF - 10 + 1, aux);
  6727  013F  30F6               	movlw	246
  6728  0140  00D6               	movwf	DATAEE_WriteByte@bAdd
  6729  0141  30F0               	movlw	240
  6730  0142  00D7               	movwf	DATAEE_WriteByte@bAdd+1
  6731  0143  0845               	movf	_aux,w
  6732  0144  00DC               	movwf	??_main
  6733  0145  085C               	movf	??_main,w
  6734  0146  00D8               	movwf	DATAEE_WriteByte@bData
  6735  0147  3183  2361  3180   	fcall	_DATAEE_WriteByte
  6736  014A                     l4475:	
  6737                           
  6738                           ;main.c: 157:             DATAEE_WriteByte(0xF0FF - 10 + 2, aux1);
  6739  014A  30F7               	movlw	247
  6740  014B  0020               	movlb	0	; select bank0
  6741  014C  00D6               	movwf	DATAEE_WriteByte@bAdd
  6742  014D  30F0               	movlw	240
  6743  014E  00D7               	movwf	DATAEE_WriteByte@bAdd+1
  6744  014F  0844               	movf	_aux1,w
  6745  0150  00DC               	movwf	??_main
  6746  0151  085C               	movf	??_main,w
  6747  0152  00D8               	movwf	DATAEE_WriteByte@bData
  6748  0153  3183  2361  3180   	fcall	_DATAEE_WriteByte
  6749  0156                     l4477:	
  6750                           
  6751                           ;main.c: 158:             cksum_w();
  6752  0156  3184  24D5  3180   	fcall	_cksum_w
  6753                           
  6754                           ;main.c: 159:         }
  6755  0159  295B               	goto	l884
  6756  015A                     l893:	
  6757                           ;main.c: 160:         else
  6758                           
  6759                           
  6760                           ;main.c: 161:             (INTCONbits.GIE = 1);
  6761  015A  178B               	bsf	11,7	;volatile
  6762  015B                     l884:	
  6763                           ;main.c: 162:     }
  6764                           
  6765                           
  6766                           ;main.c: 109:     while (running)
  6767  015B  187D               	btfsc	_running/(0+8),_running& (0+7)
  6768  015C  295E               	goto	u2211
  6769  015D  295F               	goto	u2210
  6770  015E                     u2211:	
  6771  015E  28D1               	goto	l4433
  6772  015F                     u2210:	
  6773  015F                     l896:	
  6774  015F  3180  2836         	ljmp	start
  6775  0161                     __end_of_main:	
  6776                           
  6777                           	psect	text1
  6778  03E9                     __ptext1:	
  6779 ;; *************** function _reset_recv *****************
  6780 ;; Defined at:
  6781 ;;		line 165 in file "main.c"
  6782 ;; Parameters:    Size  Location     Type
  6783 ;;		None
  6784 ;; Auto vars:     Size  Location     Type
  6785 ;;  i               2   10[BANK0 ] unsigned int 
  6786 ;; Return value:  Size  Location     Type
  6787 ;;                  1    wreg      void 
  6788 ;; Registers used:
  6789 ;;		wreg, status,2, status,0, pclath, cstack
  6790 ;; Tracked objects:
  6791 ;;		On entry : 0/0
  6792 ;;		On exit  : 0/0
  6793 ;;		Unchanged: 0/0
  6794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6796 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6798 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6799 ;;Total ram usage:        2 bytes
  6800 ;; Hardware stack levels used:    1
  6801 ;; Hardware stack levels required when called:    7
  6802 ;; This function calls:
  6803 ;;		_DATAEE_WriteByte
  6804 ;; This function is called by:
  6805 ;;		_main
  6806 ;; This function uses a non-reentrant model
  6807 ;;
  6808                           
  6809                           
  6810                           ;psect for function _reset_recv
  6811  03E9                     _reset_recv:	
  6812  03E9                     l4211:	
  6813                           ;incstack = 0
  6814                           ; Regs used in _reset_recv: [wreg+status,2+status,0+pclath+cstack]
  6815                           
  6816                           
  6817                           ;main.c: 166:     for(unsigned int i = 0xF0FF - 10; i <= 0xF0FF; i ++)
  6818  03E9  30F5               	movlw	245
  6819  03EA  0020               	movlb	0	; select bank0
  6820  03EB  00DA               	movwf	reset_recv@i
  6821  03EC  30F0               	movlw	240
  6822  03ED  00DB               	movwf	reset_recv@i+1
  6823  03EE                     l4215:	
  6824                           
  6825                           ;main.c: 167:         DATAEE_WriteByte(i, 0);
  6826  03EE  085B               	movf	reset_recv@i+1,w
  6827  03EF  00D7               	movwf	DATAEE_WriteByte@bAdd+1
  6828  03F0  085A               	movf	reset_recv@i,w
  6829  03F1  00D6               	movwf	DATAEE_WriteByte@bAdd
  6830  03F2  01D8               	clrf	DATAEE_WriteByte@bData
  6831  03F3  3183  2361  3183   	fcall	_DATAEE_WriteByte
  6832  03F6                     l4217:	
  6833  03F6  3001               	movlw	1
  6834  03F7  0020               	movlb	0	; select bank0
  6835  03F8  07DA               	addwf	reset_recv@i,f
  6836  03F9  3000               	movlw	0
  6837  03FA  3DDB               	addwfc	reset_recv@i+1,f
  6838  03FB                     l4219:	
  6839  03FB  30F1               	movlw	241
  6840  03FC  025B               	subwf	reset_recv@i+1,w
  6841  03FD  3000               	movlw	0
  6842  03FE  1903               	skipnz
  6843  03FF  025A               	subwf	reset_recv@i,w
  6844  0400  1C03               	skipc
  6845  0401  2C03               	goto	u1841
  6846  0402  2C04               	goto	u1840
  6847  0403                     u1841:	
  6848  0403  2BEE               	goto	l4215
  6849  0404                     u1840:	
  6850  0404                     l901:	
  6851  0404  0008               	return
  6852  0405                     __end_of_reset_recv:	
  6853                           
  6854                           	psect	text2
  6855  0244                     __ptext2:	
  6856 ;; *************** function _read_ring *****************
  6857 ;; Defined at:
  6858 ;;		line 184 in file "main.c"
  6859 ;; Parameters:    Size  Location     Type
  6860 ;;  index           1    wreg     unsigned char 
  6861 ;;  subindex        1    4[BANK0 ] unsigned char 
  6862 ;; Auto vars:     Size  Location     Type
  6863 ;;  index           1    8[BANK0 ] unsigned char 
  6864 ;;  absindex        1    9[BANK0 ] unsigned char 
  6865 ;;  i               1    7[BANK0 ] unsigned char 
  6866 ;; Return value:  Size  Location     Type
  6867 ;;                  1    wreg      unsigned char 
  6868 ;; Registers used:
  6869 ;;		wreg, status,2, status,0, pclath, cstack
  6870 ;; Tracked objects:
  6871 ;;		On entry : 0/0
  6872 ;;		On exit  : 0/0
  6873 ;;		Unchanged: 0/0
  6874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6875 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6876 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6877 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6878 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6879 ;;Total ram usage:        6 bytes
  6880 ;; Hardware stack levels used:    1
  6881 ;; Hardware stack levels required when called:    7
  6882 ;; This function calls:
  6883 ;;		_DATAEE_ReadByte
  6884 ;;		___bmul
  6885 ;; This function is called by:
  6886 ;;		_main
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           
  6890                           
  6891                           ;psect for function _read_ring
  6892  0244                     _read_ring:	
  6893                           
  6894                           ;incstack = 0
  6895                           ; Regs used in _read_ring: [wreg+status,2+status,0+pclath+cstack]
  6896                           ;read_ring@index stored from wreg
  6897  0244  0020               	movlb	0	; select bank0
  6898  0245  00D8               	movwf	read_ring@index
  6899  0246                     l4221:	
  6900  0246                     l4223:	
  6901                           
  6902                           ;main.c: 189:     if(index <= nreg && nreg_init) {
  6903  0246  0858               	movf	read_ring@index,w
  6904  0247  024A               	subwf	_nreg,w
  6905  0248  1C03               	skipc
  6906  0249  2A4B               	goto	u1851
  6907  024A  2A4C               	goto	u1850
  6908  024B                     u1851:	
  6909  024B  2A75               	goto	l4235
  6910  024C                     u1850:	
  6911  024C                     l4225:	
  6912  024C  1CFD               	btfss	_nreg_init/(0+8),_nreg_init& (0+7)
  6913  024D  2A4F               	goto	u1861
  6914  024E  2A50               	goto	u1860
  6915  024F                     u1861:	
  6916  024F  2A75               	goto	l4235
  6917  0250                     u1860:	
  6918  0250                     l4227:	
  6919                           
  6920                           ;main.c: 190:         absindex = 5 * index + subindex;
  6921  0250  3005               	movlw	5
  6922  0251  00D5               	movwf	??_read_ring
  6923  0252  0855               	movf	??_read_ring,w
  6924  0253  00D0               	movwf	___bmul@multiplicand
  6925  0254  0858               	movf	read_ring@index,w
  6926  0255  3184  2451  3182   	fcall	___bmul
  6927  0258  0020               	movlb	0	; select bank0
  6928  0259  0754               	addwf	read_ring@subindex,w
  6929  025A  00D6               	movwf	??_read_ring+1
  6930  025B  0856               	movf	??_read_ring+1,w
  6931  025C  00D9               	movwf	read_ring@absindex
  6932  025D                     l4229:	
  6933                           
  6934                           ;main.c: 191:         if(absindex <= nreg_pt)
  6935  025D  0859               	movf	read_ring@absindex,w
  6936  025E  0249               	subwf	_nreg_pt,w
  6937  025F  1C03               	skipc
  6938  0260  2A62               	goto	u1871
  6939  0261  2A63               	goto	u1870
  6940  0262                     u1871:	
  6941  0262  2A6A               	goto	l4233
  6942  0263                     u1870:	
  6943  0263                     l4231:	
  6944                           
  6945                           ;main.c: 192:             i = nreg_pt - 5 + absindex;
  6946  0263  0849               	movf	_nreg_pt,w
  6947  0264  0759               	addwf	read_ring@absindex,w
  6948  0265  3EFB               	addlw	251
  6949  0266  00D5               	movwf	??_read_ring
  6950  0267  0855               	movf	??_read_ring,w
  6951  0268  00D7               	movwf	read_ring@i
  6952  0269  2A77               	goto	l4239
  6953  026A                     l4233:	
  6954                           
  6955                           ;main.c: 194:             i = nreg - (nreg_pt - 5 + absindex);
  6956  026A  0349               	decf	_nreg_pt,w
  6957  026B  3AFF               	xorlw	255
  6958  026C  00D5               	movwf	??_read_ring
  6959  026D  0859               	movf	read_ring@absindex,w
  6960  026E  0255               	subwf	??_read_ring,w
  6961  026F  074A               	addwf	_nreg,w
  6962  0270  3E05               	addlw	5
  6963  0271  00D6               	movwf	??_read_ring+1
  6964  0272  0856               	movf	??_read_ring+1,w
  6965  0273  00D7               	movwf	read_ring@i
  6966  0274  2A77               	goto	l4239
  6967  0275                     l4235:	
  6968                           
  6969                           ;main.c: 197:         return 0;
  6970  0275  3000               	movlw	0
  6971  0276  2A81               	goto	l916
  6972  0277                     l4239:	
  6973                           
  6974                           ;main.c: 199:     return DATAEE_ReadByte(0xF000 + i);
  6975  0277  0857               	movf	read_ring@i,w
  6976  0278  3E00               	addlw	0
  6977  0279  00D0               	movwf	DATAEE_ReadByte@bAdd
  6978  027A  30F0               	movlw	240
  6979  027B  1803               	skipnc
  6980  027C  30F1               	movlw	241
  6981  027D  00D1               	movwf	DATAEE_ReadByte@bAdd+1
  6982  027E  3184  24F5  3182   	fcall	_DATAEE_ReadByte
  6983  0281                     l916:	
  6984  0281  0008               	return
  6985  0282                     __end_of_read_ring:	
  6986                           
  6987                           	psect	text3
  6988  0451                     __ptext3:	
  6989 ;; *************** function ___bmul *****************
  6990 ;; Defined at:
  6991 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul8.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;  multiplier      1    wreg     unsigned char 
  6994 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  6995 ;; Auto vars:     Size  Location     Type
  6996 ;;  multiplier      1    3[BANK0 ] unsigned char 
  6997 ;;  product         1    2[BANK0 ] unsigned char 
  6998 ;; Return value:  Size  Location     Type
  6999 ;;                  1    wreg      unsigned char 
  7000 ;; Registers used:
  7001 ;;		wreg, status,2, status,0
  7002 ;; Tracked objects:
  7003 ;;		On entry : 0/0
  7004 ;;		On exit  : 0/0
  7005 ;;		Unchanged: 0/0
  7006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7007 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7008 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7009 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7010 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7011 ;;Total ram usage:        4 bytes
  7012 ;; Hardware stack levels used:    1
  7013 ;; Hardware stack levels required when called:    6
  7014 ;; This function calls:
  7015 ;;		Nothing
  7016 ;; This function is called by:
  7017 ;;		_read_ring
  7018 ;; This function uses a non-reentrant model
  7019 ;;
  7020                           
  7021                           
  7022                           ;psect for function ___bmul
  7023  0451                     ___bmul:	
  7024                           
  7025                           ;incstack = 0
  7026                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7027                           ;___bmul@multiplier stored from wreg
  7028  0451  0020               	movlb	0	; select bank0
  7029  0452  00D3               	movwf	___bmul@multiplier
  7030  0453                     l3357:	
  7031  0453  01D2               	clrf	___bmul@product
  7032  0454                     l3359:	
  7033  0454  1C53               	btfss	___bmul@multiplier,0
  7034  0455  2C57               	goto	u1251
  7035  0456  2C58               	goto	u1250
  7036  0457                     u1251:	
  7037  0457  2C5C               	goto	l3363
  7038  0458                     u1250:	
  7039  0458                     l3361:	
  7040  0458  0850               	movf	___bmul@multiplicand,w
  7041  0459  00D1               	movwf	??___bmul
  7042  045A  0851               	movf	??___bmul,w
  7043  045B  07D2               	addwf	___bmul@product,f
  7044  045C                     l3363:	
  7045  045C  1003               	clrc
  7046  045D  0DD0               	rlf	___bmul@multiplicand,f
  7047  045E                     l3365:	
  7048  045E  1003               	clrc
  7049  045F  0CD3               	rrf	___bmul@multiplier,f
  7050  0460  0853               	movf	___bmul@multiplier,w
  7051  0461  1D03               	btfss	3,2
  7052  0462  2C64               	goto	u1261
  7053  0463  2C65               	goto	u1260
  7054  0464                     u1261:	
  7055  0464  2C54               	goto	l3359
  7056  0465                     u1260:	
  7057  0465                     l3367:	
  7058  0465  0852               	movf	___bmul@product,w
  7059  0466                     l1183:	
  7060  0466  0008               	return
  7061  0467                     __end_of___bmul:	
  7062                           
  7063                           	psect	text4
  7064  02B5                     __ptext4:	
  7065 ;; *************** function _push_ring *****************
  7066 ;; Defined at:
  7067 ;;		line 202 in file "main.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;		None
  7070 ;; Auto vars:     Size  Location     Type
  7071 ;;  i               1   11[BANK0 ] unsigned char 
  7072 ;; Return value:  Size  Location     Type
  7073 ;;                  1    wreg      void 
  7074 ;; Registers used:
  7075 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7076 ;; Tracked objects:
  7077 ;;		On entry : 0/0
  7078 ;;		On exit  : 0/0
  7079 ;;		Unchanged: 0/0
  7080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7082 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7083 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7084 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7085 ;;Total ram usage:        2 bytes
  7086 ;; Hardware stack levels used:    1
  7087 ;; Hardware stack levels required when called:    7
  7088 ;; This function calls:
  7089 ;;		_DATAEE_WriteByte
  7090 ;; This function is called by:
  7091 ;;		_main
  7092 ;; This function uses a non-reentrant model
  7093 ;;
  7094                           
  7095                           
  7096                           ;psect for function _push_ring
  7097  02B5                     _push_ring:	
  7098  02B5                     l4243:	
  7099                           ;incstack = 0
  7100                           ; Regs used in _push_ring: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7101                           
  7102  02B5  18FD               	btfsc	_nreg_init/(0+8),_nreg_init& (0+7)
  7103  02B6  2AB8               	goto	u1881
  7104  02B7  2AB9               	goto	u1880
  7105  02B8                     u1881:	
  7106  02B8  2ABA               	goto	l4247
  7107  02B9                     u1880:	
  7108  02B9                     l4245:	
  7109  02B9  14FD               	bsf	_nreg_init/(0+8),_nreg_init& (0+7)
  7110  02BA                     l4247:	
  7111                           
  7112                           ;main.c: 204:     for(unsigned char i = 0; i < 5; i++) {
  7113  02BA  0020               	movlb	0	; select bank0
  7114  02BB  01DB               	clrf	push_ring@i
  7115  02BC                     l4253:	
  7116                           
  7117                           ;main.c: 205:         if(nreg_pt >= nreg) nreg_pt = 0;
  7118  02BC  084A               	movf	_nreg,w
  7119  02BD  0249               	subwf	_nreg_pt,w
  7120  02BE  1C03               	skipc
  7121  02BF  2AC1               	goto	u1891
  7122  02C0  2AC2               	goto	u1890
  7123  02C1                     u1891:	
  7124  02C1  2AC3               	goto	l4257
  7125  02C2                     u1890:	
  7126  02C2                     l4255:	
  7127  02C2  01C9               	clrf	_nreg_pt
  7128  02C3                     l4257:	
  7129                           
  7130                           ;main.c: 206:         DATAEE_WriteByte(0xF000 + nreg_pt, ring_byte[i]);
  7131  02C3  0849               	movf	_nreg_pt,w
  7132  02C4  3E00               	addlw	0
  7133  02C5  00D6               	movwf	DATAEE_WriteByte@bAdd
  7134  02C6  30F0               	movlw	240
  7135  02C7  1803               	skipnc
  7136  02C8  30F1               	movlw	241
  7137  02C9  00D7               	movwf	DATAEE_WriteByte@bAdd+1
  7138  02CA  085B               	movf	push_ring@i,w
  7139  02CB  3E3D               	addlw	(low (_ring_byte| 0))& (0+255)
  7140  02CC  0086               	movwf	6
  7141  02CD  0187               	clrf	7
  7142  02CE  0801               	movf	1,w
  7143  02CF  00DA               	movwf	??_push_ring
  7144  02D0  085A               	movf	??_push_ring,w
  7145  02D1  00D8               	movwf	DATAEE_WriteByte@bData
  7146  02D2  3183  2361  3182   	fcall	_DATAEE_WriteByte
  7147  02D5                     l4259:	
  7148                           
  7149                           ;main.c: 207:         nreg_pt ++;
  7150  02D5  3001               	movlw	1
  7151  02D6  0020               	movlb	0	; select bank0
  7152  02D7  00DA               	movwf	??_push_ring
  7153  02D8  085A               	movf	??_push_ring,w
  7154  02D9  07C9               	addwf	_nreg_pt,f
  7155  02DA                     l4261:	
  7156                           
  7157                           ;main.c: 208:     }
  7158  02DA  3001               	movlw	1
  7159  02DB  00DA               	movwf	??_push_ring
  7160  02DC  085A               	movf	??_push_ring,w
  7161  02DD  07DB               	addwf	push_ring@i,f
  7162  02DE                     l4263:	
  7163  02DE  3005               	movlw	5
  7164  02DF  025B               	subwf	push_ring@i,w
  7165  02E0  1C03               	skipc
  7166  02E1  2AE3               	goto	u1901
  7167  02E2  2AE4               	goto	u1900
  7168  02E3                     u1901:	
  7169  02E3  2ABC               	goto	l4253
  7170  02E4                     u1900:	
  7171  02E4                     l923:	
  7172  02E4  0008               	return
  7173  02E5                     __end_of_push_ring:	
  7174                           
  7175                           	psect	text5
  7176  051F                     __ptext5:	
  7177 ;; *************** function _i2c1_driver_open *****************
  7178 ;; Defined at:
  7179 ;;		line 84 in file "mcc_generated_files/i2c1_driver.c"
  7180 ;; Parameters:    Size  Location     Type
  7181 ;;		None
  7182 ;; Auto vars:     Size  Location     Type
  7183 ;;		None
  7184 ;; Return value:  Size  Location     Type
  7185 ;;		None               void
  7186 ;; Registers used:
  7187 ;;		wreg, status,2
  7188 ;; Tracked objects:
  7189 ;;		On entry : 0/0
  7190 ;;		On exit  : 0/0
  7191 ;;		Unchanged: 0/0
  7192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7197 ;;Total ram usage:        0 bytes
  7198 ;; Hardware stack levels used:    1
  7199 ;; Hardware stack levels required when called:    6
  7200 ;; This function calls:
  7201 ;;		Nothing
  7202 ;; This function is called by:
  7203 ;;		_main
  7204 ;;		_i2c_open
  7205 ;; This function uses a non-reentrant model
  7206 ;;
  7207                           
  7208                           
  7209                           ;psect for function _i2c1_driver_open
  7210  051F                     _i2c1_driver_open:	
  7211  051F                     l4173:	
  7212                           ;incstack = 0
  7213                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
  7214                           
  7215  051F  0023               	movlb	3	; select bank3
  7216  0520  1A90               	btfsc	16,5	;volatile
  7217  0521  2D23               	goto	u1811
  7218  0522  2D24               	goto	u1810
  7219  0523                     u1811:	
  7220  0523  2D2A               	goto	l651
  7221  0524                     u1810:	
  7222  0524                     l4175:	
  7223  0524  018F               	clrf	15	;volatile
  7224  0525                     l4177:	
  7225  0525  3028               	movlw	40
  7226  0526  0090               	movwf	16	;volatile
  7227  0527                     l4179:	
  7228  0527  0191               	clrf	17	;volatile
  7229  0528  3009               	movlw	9
  7230  0529  008D               	movwf	13	;volatile
  7231  052A                     l651:	
  7232  052A  0008               	return
  7233  052B                     __end_of_i2c1_driver_open:	
  7234                           
  7235                           	psect	text6
  7236  04D5                     __ptext6:	
  7237 ;; *************** function _cksum_w *****************
  7238 ;; Defined at:
  7239 ;;		line 170 in file "main.c"
  7240 ;; Parameters:    Size  Location     Type
  7241 ;;		None
  7242 ;; Auto vars:     Size  Location     Type
  7243 ;;		None
  7244 ;; Return value:  Size  Location     Type
  7245 ;;                  1    wreg      void 
  7246 ;; Registers used:
  7247 ;;		wreg, status,2, status,0, pclath, cstack
  7248 ;; Tracked objects:
  7249 ;;		On entry : 0/0
  7250 ;;		On exit  : 0/0
  7251 ;;		Unchanged: 0/0
  7252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7255 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7256 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7257 ;;Total ram usage:        1 bytes
  7258 ;; Hardware stack levels used:    1
  7259 ;; Hardware stack levels required when called:    8
  7260 ;; This function calls:
  7261 ;;		_DATAEE_WriteByte
  7262 ;;		_cksum
  7263 ;; This function is called by:
  7264 ;;		_main
  7265 ;; This function uses a non-reentrant model
  7266 ;;
  7267                           
  7268                           
  7269                           ;psect for function _cksum_w
  7270  04D5                     _cksum_w:	
  7271  04D5                     l4265:	
  7272                           ;incstack = 0
  7273                           ; Regs used in _cksum_w: [wreg+status,2+status,0+pclath+cstack]
  7274                           
  7275                           
  7276                           ;main.c: 172:     DATAEE_WriteByte(0xF0FF, cksum());
  7277  04D5  30FF               	movlw	255
  7278  04D6  0020               	movlb	0	; select bank0
  7279  04D7  00D6               	movwf	DATAEE_WriteByte@bAdd
  7280  04D8  30F0               	movlw	240
  7281  04D9  00D7               	movwf	DATAEE_WriteByte@bAdd+1
  7282  04DA  3183  23C9  3184   	fcall	_cksum
  7283  04DD  0020               	movlb	0	; select bank0
  7284  04DE  00DA               	movwf	??_cksum_w
  7285  04DF  085A               	movf	??_cksum_w,w
  7286  04E0  00D8               	movwf	DATAEE_WriteByte@bData
  7287  04E1  3183  2361  3184   	fcall	_DATAEE_WriteByte
  7288  04E4                     l904:	
  7289  04E4  0008               	return
  7290  04E5                     __end_of_cksum_w:	
  7291                           
  7292                           	psect	text7
  7293  03C9                     __ptext7:	
  7294 ;; *************** function _cksum *****************
  7295 ;; Defined at:
  7296 ;;		line 175 in file "main.c"
  7297 ;; Parameters:    Size  Location     Type
  7298 ;;		None
  7299 ;; Auto vars:     Size  Location     Type
  7300 ;;  i               2    4[BANK0 ] unsigned int 
  7301 ;;  res             1    3[BANK0 ] unsigned char 
  7302 ;; Return value:  Size  Location     Type
  7303 ;;                  1    wreg      unsigned char 
  7304 ;; Registers used:
  7305 ;;		wreg, status,2, status,0, pclath, cstack
  7306 ;; Tracked objects:
  7307 ;;		On entry : 0/0
  7308 ;;		On exit  : 0/0
  7309 ;;		Unchanged: 0/0
  7310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7312 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7313 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7314 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7315 ;;Total ram usage:        4 bytes
  7316 ;; Hardware stack levels used:    1
  7317 ;; Hardware stack levels required when called:    7
  7318 ;; This function calls:
  7319 ;;		_DATAEE_ReadByte
  7320 ;; This function is called by:
  7321 ;;		_main
  7322 ;;		_cksum_w
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326                           
  7327                           ;psect for function _cksum
  7328  03C9                     _cksum:	
  7329  03C9                     l4119:	
  7330                           ;incstack = 0
  7331                           ; Regs used in _cksum: [wreg+status,2+status,0+pclath+cstack]
  7332                           
  7333                           
  7334                           ;main.c: 177:     unsigned char res = 0;
  7335  03C9  0020               	movlb	0	; select bank0
  7336  03CA  01D3               	clrf	cksum@res
  7337  03CB                     l4121:	
  7338                           
  7339                           ;main.c: 178:     for(unsigned int i = 0xF0FF - 10; i < 0xF0FF; i ++) {
  7340  03CB  30F5               	movlw	245
  7341  03CC  00D4               	movwf	cksum@i
  7342  03CD  30F0               	movlw	240
  7343  03CE  00D5               	movwf	cksum@i+1
  7344  03CF                     l4127:	
  7345                           
  7346                           ;main.c: 179:         res += DATAEE_ReadByte(i);
  7347  03CF  0855               	movf	cksum@i+1,w
  7348  03D0  00D1               	movwf	DATAEE_ReadByte@bAdd+1
  7349  03D1  0854               	movf	cksum@i,w
  7350  03D2  00D0               	movwf	DATAEE_ReadByte@bAdd
  7351  03D3  3184  24F5  3183   	fcall	_DATAEE_ReadByte
  7352  03D6  0020               	movlb	0	; select bank0
  7353  03D7  00D2               	movwf	??_cksum
  7354  03D8  0852               	movf	??_cksum,w
  7355  03D9  07D3               	addwf	cksum@res,f
  7356  03DA                     l4129:	
  7357                           
  7358                           ;main.c: 180:     }
  7359  03DA  3001               	movlw	1
  7360  03DB  07D4               	addwf	cksum@i,f
  7361  03DC  3000               	movlw	0
  7362  03DD  3DD5               	addwfc	cksum@i+1,f
  7363  03DE                     l4131:	
  7364  03DE  30F0               	movlw	240
  7365  03DF  0255               	subwf	cksum@i+1,w
  7366  03E0  30FF               	movlw	255
  7367  03E1  1903               	skipnz
  7368  03E2  0254               	subwf	cksum@i,w
  7369  03E3  1C03               	skipc
  7370  03E4  2BE6               	goto	u1791
  7371  03E5  2BE7               	goto	u1790
  7372  03E6                     u1791:	
  7373  03E6  2BCF               	goto	l4127
  7374  03E7                     u1790:	
  7375  03E7                     l4133:	
  7376                           
  7377                           ;main.c: 181:     return res;
  7378  03E7  0853               	movf	cksum@res,w
  7379  03E8                     l909:	
  7380  03E8  0008               	return
  7381  03E9                     __end_of_cksum:	
  7382                           
  7383                           	psect	text8
  7384  04F5                     __ptext8:	
  7385 ;; *************** function _DATAEE_ReadByte *****************
  7386 ;; Defined at:
  7387 ;;		line 202 in file "mcc_generated_files/memory.c"
  7388 ;; Parameters:    Size  Location     Type
  7389 ;;  bAdd            2    0[BANK0 ] unsigned short 
  7390 ;; Auto vars:     Size  Location     Type
  7391 ;;		None
  7392 ;; Return value:  Size  Location     Type
  7393 ;;                  1    wreg      unsigned char 
  7394 ;; Registers used:
  7395 ;;		wreg, status,2
  7396 ;; Tracked objects:
  7397 ;;		On entry : 0/0
  7398 ;;		On exit  : 0/0
  7399 ;;		Unchanged: 0/0
  7400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7401 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7404 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7405 ;;Total ram usage:        2 bytes
  7406 ;; Hardware stack levels used:    1
  7407 ;; Hardware stack levels required when called:    6
  7408 ;; This function calls:
  7409 ;;		Nothing
  7410 ;; This function is called by:
  7411 ;;		_main
  7412 ;;		_cksum
  7413 ;;		_read_ring
  7414 ;; This function uses a non-reentrant model
  7415 ;;
  7416                           
  7417                           
  7418                           ;psect for function _DATAEE_ReadByte
  7419  04F5                     _DATAEE_ReadByte:	
  7420  04F5                     l3877:	
  7421                           ;incstack = 0
  7422                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
  7423                           
  7424                           
  7425                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
  7426  04F5  0020               	movlb	0	; select bank0
  7427  04F6  0851               	movf	DATAEE_ReadByte@bAdd+1,w
  7428  04F7  0030               	movlb	16	; select bank16
  7429  04F8  009B               	movwf	27	;volatile
  7430  04F9                     l3879:	
  7431                           
  7432                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
  7433  04F9  0020               	movlb	0	; select bank0
  7434  04FA  0850               	movf	DATAEE_ReadByte@bAdd,w
  7435  04FB  0030               	movlb	16	; select bank16
  7436  04FC  009A               	movwf	26	;volatile
  7437  04FD                     l3881:	
  7438                           
  7439                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
  7440  04FD  171E               	bsf	30,6	;volsfr
  7441  04FE                     l3883:	
  7442                           
  7443                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
  7444  04FE  141E               	bsf	30,0	;volsfr
  7445  04FF                     l3885:	
  7446                           
  7447                           ;mcc_generated_files/memory.c: 208:     __nop();
  7448  04FF  0000               	nop
  7449  0500                     l3887:	
  7450                           
  7451                           ;mcc_generated_files/memory.c: 209:     __nop();
  7452  0500  0000               	nop
  7453  0501                     l3889:	
  7454                           
  7455                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
  7456  0501  0030               	movlb	16	; select bank16
  7457  0502  081C               	movf	28,w	;volatile
  7458  0503                     l782:	
  7459  0503  0008               	return
  7460  0504                     __end_of_DATAEE_ReadByte:	
  7461                           
  7462                           	psect	text9
  7463  0361                     __ptext9:	
  7464 ;; *************** function _DATAEE_WriteByte *****************
  7465 ;; Defined at:
  7466 ;;		line 180 in file "mcc_generated_files/memory.c"
  7467 ;; Parameters:    Size  Location     Type
  7468 ;;  bAdd            2    6[BANK0 ] unsigned short 
  7469 ;;  bData           1    8[BANK0 ] unsigned char 
  7470 ;; Auto vars:     Size  Location     Type
  7471 ;;  GIEBitValue     1    9[BANK0 ] unsigned char 
  7472 ;; Return value:  Size  Location     Type
  7473 ;;                  1    wreg      void 
  7474 ;; Registers used:
  7475 ;;		wreg, status,2, status,0
  7476 ;; Tracked objects:
  7477 ;;		On entry : 0/0
  7478 ;;		On exit  : 0/0
  7479 ;;		Unchanged: 0/0
  7480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7481 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7482 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7484 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7485 ;;Total ram usage:        4 bytes
  7486 ;; Hardware stack levels used:    1
  7487 ;; Hardware stack levels required when called:    6
  7488 ;; This function calls:
  7489 ;;		Nothing
  7490 ;; This function is called by:
  7491 ;;		_main
  7492 ;;		_reset_recv
  7493 ;;		_cksum_w
  7494 ;;		_push_ring
  7495 ;; This function uses a non-reentrant model
  7496 ;;
  7497                           
  7498                           
  7499                           ;psect for function _DATAEE_WriteByte
  7500  0361                     _DATAEE_WriteByte:	
  7501  0361                     l4099:	
  7502                           ;incstack = 0
  7503                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
  7504                           
  7505                           
  7506                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
  7507  0361  3000               	movlw	0
  7508  0362  1B8B               	btfsc	11,7	;volatile
  7509  0363  3001               	movlw	1
  7510  0364  0020               	movlb	0	; select bank0
  7511  0365  00D9               	movwf	DATAEE_WriteByte@GIEBitValue
  7512                           
  7513                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
  7514  0366  0857               	movf	DATAEE_WriteByte@bAdd+1,w
  7515  0367  0030               	movlb	16	; select bank16
  7516  0368  009B               	movwf	27	;volatile
  7517  0369                     l4101:	
  7518                           
  7519                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
  7520  0369  0020               	movlb	0	; select bank0
  7521  036A  0856               	movf	DATAEE_WriteByte@bAdd,w
  7522  036B  0030               	movlb	16	; select bank16
  7523  036C  009A               	movwf	26	;volatile
  7524  036D                     l4103:	
  7525                           
  7526                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
  7527  036D  0020               	movlb	0	; select bank0
  7528  036E  0858               	movf	DATAEE_WriteByte@bData,w
  7529  036F  0030               	movlb	16	; select bank16
  7530  0370  009C               	movwf	28	;volatile
  7531  0371                     l4105:	
  7532                           
  7533                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
  7534  0371  171E               	bsf	30,6	;volsfr
  7535  0372                     l4107:	
  7536                           
  7537                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
  7538  0372  151E               	bsf	30,2	;volsfr
  7539  0373                     l4109:	
  7540                           
  7541                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
  7542  0373  138B               	bcf	11,7	;volatile
  7543  0374                     l4111:	
  7544                           
  7545                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
  7546  0374  3055               	movlw	85
  7547  0375  009F               	movwf	31	;volsfr
  7548  0376                     l4113:	
  7549                           
  7550                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
  7551  0376  30AA               	movlw	170
  7552  0377  009F               	movwf	31	;volsfr
  7553  0378                     l4115:	
  7554                           
  7555                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
  7556  0378  149E               	bsf	30,1	;volsfr
  7557  0379                     l776:	
  7558                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
  7559                           
  7560                           
  7561                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
  7562  0379  189E               	btfsc	30,1	;volsfr
  7563  037A  2B7C               	goto	u1781
  7564  037B  2B7D               	goto	u1780
  7565  037C                     u1781:	
  7566  037C  2B79               	goto	l776
  7567  037D                     u1780:	
  7568  037D                     l778:	
  7569                           
  7570                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
  7571  037D  111E               	bcf	30,2	;volsfr
  7572  037E                     l4117:	
  7573                           
  7574                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
  7575  037E  0020               	movlb	0	; select bank0
  7576  037F  0C59               	rrf	DATAEE_WriteByte@GIEBitValue,w
  7577  0380  1C03               	skipc
  7578  0381  138B               	bcf	11,7	;volatile
  7579  0382  1803               	skipnc
  7580  0383  178B               	bsf	11,7	;volatile
  7581  0384                     l779:	
  7582  0384  0008               	return
  7583  0385                     __end_of_DATAEE_WriteByte:	
  7584                           
  7585                           	psect	text10
  7586  0512                     __ptext10:	
  7587 ;; *************** function _SYSTEM_Initialize *****************
  7588 ;; Defined at:
  7589 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7590 ;; Parameters:    Size  Location     Type
  7591 ;;		None
  7592 ;; Auto vars:     Size  Location     Type
  7593 ;;		None
  7594 ;; Return value:  Size  Location     Type
  7595 ;;                  1    wreg      void 
  7596 ;; Registers used:
  7597 ;;		wreg, status,2, status,0, pclath, cstack
  7598 ;; Tracked objects:
  7599 ;;		On entry : 0/0
  7600 ;;		On exit  : 0/0
  7601 ;;		Unchanged: 0/0
  7602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7607 ;;Total ram usage:        0 bytes
  7608 ;; Hardware stack levels used:    1
  7609 ;; Hardware stack levels required when called:    8
  7610 ;; This function calls:
  7611 ;;		_OSCILLATOR_Initialize
  7612 ;;		_PIN_MANAGER_Initialize
  7613 ;;		_PMD_Initialize
  7614 ;;		_TMR1_Initialize
  7615 ;; This function is called by:
  7616 ;;		_main
  7617 ;; This function uses a non-reentrant model
  7618 ;;
  7619                           
  7620                           
  7621                           ;psect for function _SYSTEM_Initialize
  7622  0512                     _SYSTEM_Initialize:	
  7623  0512                     l4203:	
  7624                           ;incstack = 0
  7625                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7626                           
  7627                           
  7628                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  7629  0512  3185  253D  3185   	fcall	_PMD_Initialize
  7630  0515                     l4205:	
  7631                           
  7632                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  7633  0515  3181  21FF  3185   	fcall	_PIN_MANAGER_Initialize
  7634  0518                     l4207:	
  7635                           
  7636                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  7637  0518  3185  252B  3185   	fcall	_OSCILLATOR_Initialize
  7638  051B                     l4209:	
  7639                           
  7640                           ;mcc_generated_files/mcc.c: 55:     TMR1_Initialize();
  7641  051B  3184  2405  3185   	fcall	_TMR1_Initialize
  7642  051E                     l500:	
  7643  051E  0008               	return
  7644  051F                     __end_of_SYSTEM_Initialize:	
  7645                           
  7646                           	psect	text11
  7647  0405                     __ptext11:	
  7648 ;; *************** function _TMR1_Initialize *****************
  7649 ;; Defined at:
  7650 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  7651 ;; Parameters:    Size  Location     Type
  7652 ;;		None
  7653 ;; Auto vars:     Size  Location     Type
  7654 ;;		None
  7655 ;; Return value:  Size  Location     Type
  7656 ;;                  1    wreg      void 
  7657 ;; Registers used:
  7658 ;;		wreg, status,2, status,0, pclath, cstack
  7659 ;; Tracked objects:
  7660 ;;		On entry : 0/0
  7661 ;;		On exit  : 0/0
  7662 ;;		Unchanged: 0/0
  7663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7668 ;;Total ram usage:        0 bytes
  7669 ;; Hardware stack levels used:    1
  7670 ;; Hardware stack levels required when called:    7
  7671 ;; This function calls:
  7672 ;;		_TMR1_SetInterruptHandler
  7673 ;; This function is called by:
  7674 ;;		_SYSTEM_Initialize
  7675 ;; This function uses a non-reentrant model
  7676 ;;
  7677                           
  7678                           
  7679                           ;psect for function _TMR1_Initialize
  7680  0405                     _TMR1_Initialize:	
  7681  0405                     l4021:	
  7682                           ;incstack = 0
  7683                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7684                           
  7685                           
  7686                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  7687  0405  0024               	movlb	4	; select bank4
  7688  0406  018F               	clrf	15	;volatile
  7689                           
  7690                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
  7691  0407  0190               	clrf	16	;volatile
  7692  0408                     l4023:	
  7693                           
  7694                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
  7695  0408  3004               	movlw	4
  7696  0409  0091               	movwf	17	;volatile
  7697  040A                     l4025:	
  7698                           
  7699                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xC3;
  7700  040A  30C3               	movlw	195
  7701  040B  008D               	movwf	13	;volatile
  7702  040C                     l4027:	
  7703                           
  7704                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0x74;
  7705  040C  3074               	movlw	116
  7706  040D  008C               	movwf	12	;volatile
  7707  040E                     l4029:	
  7708                           
  7709                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  7710  040E  080D               	movf	13,w	;volatile
  7711  040F  00FA               	movwf	_timer1ReloadVal+1	;volatile
  7712  0410  080C               	movf	12,w	;volatile
  7713  0411  00F9               	movwf	_timer1ReloadVal	;volatile
  7714  0412                     l4031:	
  7715                           
  7716                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
  7717  0412  002E               	movlb	14	; select bank14
  7718  0413  1010               	bcf	16,0	;volatile
  7719  0414                     l4033:	
  7720                           
  7721                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
  7722  0414  141A               	bsf	26,0	;volatile
  7723  0415                     l4035:	
  7724                           
  7725                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  7726  0415  30C5               	movlw	low _TMR1_DefaultInterruptHandler
  7727  0416  0020               	movlb	0	; select bank0
  7728  0417  00D0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  7729  0418  3005               	movlw	high _TMR1_DefaultInterruptHandler
  7730  0419  00D1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  7731  041A  3185  256A  3184   	fcall	_TMR1_SetInterruptHandler
  7732  041D                     l4037:	
  7733                           
  7734                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x05;
  7735  041D  3005               	movlw	5
  7736  041E  0024               	movlb	4	; select bank4
  7737  041F  008E               	movwf	14	;volatile
  7738  0420                     l401:	
  7739  0420  0008               	return
  7740  0421                     __end_of_TMR1_Initialize:	
  7741                           
  7742                           	psect	text12
  7743  056A                     __ptext12:	
  7744 ;; *************** function _TMR1_SetInterruptHandler *****************
  7745 ;; Defined at:
  7746 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  7747 ;; Parameters:    Size  Location     Type
  7748 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  7749 ;;		 -> h_clock(1), TMR1_DefaultInterruptHandler(1), 
  7750 ;; Auto vars:     Size  Location     Type
  7751 ;;		None
  7752 ;; Return value:  Size  Location     Type
  7753 ;;                  1    wreg      void 
  7754 ;; Registers used:
  7755 ;;		wreg
  7756 ;; Tracked objects:
  7757 ;;		On entry : 0/0
  7758 ;;		On exit  : 0/0
  7759 ;;		Unchanged: 0/0
  7760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7761 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7764 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7765 ;;Total ram usage:        2 bytes
  7766 ;; Hardware stack levels used:    1
  7767 ;; Hardware stack levels required when called:    6
  7768 ;; This function calls:
  7769 ;;		Nothing
  7770 ;; This function is called by:
  7771 ;;		_TMR1_Initialize
  7772 ;;		_main
  7773 ;; This function uses a non-reentrant model
  7774 ;;
  7775                           
  7776                           
  7777                           ;psect for function _TMR1_SetInterruptHandler
  7778  056A                     _TMR1_SetInterruptHandler:	
  7779  056A                     l3875:	
  7780                           ;incstack = 0
  7781                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  7782                           
  7783                           
  7784                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  7785  056A  0020               	movlb	0	; select bank0
  7786  056B  0851               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  7787  056C  00F8               	movwf	_TMR1_InterruptHandler+1
  7788  056D  0850               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  7789  056E  00F7               	movwf	_TMR1_InterruptHandler
  7790  056F                     l431:	
  7791  056F  0008               	return
  7792  0570                     __end_of_TMR1_SetInterruptHandler:	
  7793                           
  7794                           	psect	text13
  7795  053D                     __ptext13:	
  7796 ;; *************** function _PMD_Initialize *****************
  7797 ;; Defined at:
  7798 ;;		line 72 in file "mcc_generated_files/mcc.c"
  7799 ;; Parameters:    Size  Location     Type
  7800 ;;		None
  7801 ;; Auto vars:     Size  Location     Type
  7802 ;;		None
  7803 ;; Return value:  Size  Location     Type
  7804 ;;                  1    wreg      void 
  7805 ;; Registers used:
  7806 ;;		status,2
  7807 ;; Tracked objects:
  7808 ;;		On entry : 0/0
  7809 ;;		On exit  : 0/0
  7810 ;;		Unchanged: 0/0
  7811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7816 ;;Total ram usage:        0 bytes
  7817 ;; Hardware stack levels used:    1
  7818 ;; Hardware stack levels required when called:    6
  7819 ;; This function calls:
  7820 ;;		Nothing
  7821 ;; This function is called by:
  7822 ;;		_SYSTEM_Initialize
  7823 ;; This function uses a non-reentrant model
  7824 ;;
  7825                           
  7826                           
  7827                           ;psect for function _PMD_Initialize
  7828  053D                     _PMD_Initialize:	
  7829  053D                     l4039:	
  7830                           ;incstack = 0
  7831                           ; Regs used in _PMD_Initialize: [status,2]
  7832                           
  7833                           
  7834                           ;mcc_generated_files/mcc.c: 75:     PMD0 = 0x00;
  7835  053D  002F               	movlb	15	; select bank15
  7836  053E  0196               	clrf	22	;volatile
  7837                           
  7838                           ;mcc_generated_files/mcc.c: 77:     PMD1 = 0x00;
  7839  053F  0197               	clrf	23	;volatile
  7840                           
  7841                           ;mcc_generated_files/mcc.c: 79:     PMD2 = 0x00;
  7842  0540  0198               	clrf	24	;volatile
  7843                           
  7844                           ;mcc_generated_files/mcc.c: 81:     PMD3 = 0x00;
  7845  0541  0199               	clrf	25	;volatile
  7846                           
  7847                           ;mcc_generated_files/mcc.c: 83:     PMD4 = 0x00;
  7848  0542  019A               	clrf	26	;volatile
  7849                           
  7850                           ;mcc_generated_files/mcc.c: 85:     PMD5 = 0x00;
  7851  0543  019B               	clrf	27	;volatile
  7852  0544                     l506:	
  7853  0544  0008               	return
  7854  0545                     __end_of_PMD_Initialize:	
  7855                           
  7856                           	psect	text14
  7857  01FF                     __ptext14:	
  7858 ;; *************** function _PIN_MANAGER_Initialize *****************
  7859 ;; Defined at:
  7860 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7861 ;; Parameters:    Size  Location     Type
  7862 ;;		None
  7863 ;; Auto vars:     Size  Location     Type
  7864 ;;		None
  7865 ;; Return value:  Size  Location     Type
  7866 ;;                  1    wreg      void 
  7867 ;; Registers used:
  7868 ;;		wreg, status,2
  7869 ;; Tracked objects:
  7870 ;;		On entry : 0/0
  7871 ;;		On exit  : 0/0
  7872 ;;		Unchanged: 0/0
  7873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7878 ;;Total ram usage:        0 bytes
  7879 ;; Hardware stack levels used:    1
  7880 ;; Hardware stack levels required when called:    6
  7881 ;; This function calls:
  7882 ;;		Nothing
  7883 ;; This function is called by:
  7884 ;;		_SYSTEM_Initialize
  7885 ;; This function uses a non-reentrant model
  7886 ;;
  7887                           
  7888                           
  7889                           ;psect for function _PIN_MANAGER_Initialize
  7890  01FF                     _PIN_MANAGER_Initialize:	
  7891  01FF                     l4041:	
  7892                           ;incstack = 0
  7893                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7894                           
  7895                           
  7896                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  7897  01FF  0020               	movlb	0	; select bank0
  7898  0200  019A               	clrf	26	;volatile
  7899                           
  7900                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  7901  0201  0199               	clrf	25	;volatile
  7902                           
  7903                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  7904  0202  0196               	clrf	22	;volatile
  7905                           
  7906                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  7907  0203  0197               	clrf	23	;volatile
  7908                           
  7909                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  7910  0204  0198               	clrf	24	;volatile
  7911  0205                     l4043:	
  7912                           
  7913                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  7914  0205  3007               	movlw	7
  7915  0206  0095               	movwf	21	;volatile
  7916  0207                     l4045:	
  7917                           
  7918                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x6F;
  7919  0207  306F               	movlw	111
  7920  0208  0091               	movwf	17	;volatile
  7921  0209                     l4047:	
  7922                           
  7923                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  7924  0209  30FF               	movlw	255
  7925  020A  0092               	movwf	18	;volatile
  7926  020B                     l4049:	
  7927                           
  7928                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  7929  020B  30FF               	movlw	255
  7930  020C  0093               	movwf	19	;volatile
  7931  020D                     l4051:	
  7932                           
  7933                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  7934  020D  30FF               	movlw	255
  7935  020E  0094               	movwf	20	;volatile
  7936  020F                     l4053:	
  7937                           
  7938                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  7939  020F  30FF               	movlw	255
  7940  0210  003E               	movlb	30	; select bank30
  7941  0211  00D9               	movwf	89	;volatile
  7942  0212                     l4055:	
  7943                           
  7944                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xE7;
  7945  0212  30E7               	movlw	231
  7946  0213  00CE               	movwf	78	;volatile
  7947  0214                     l4057:	
  7948                           
  7949                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xFF;
  7950  0214  30FF               	movlw	255
  7951  0215  00C3               	movwf	67	;volatile
  7952  0216                     l4059:	
  7953                           
  7954                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  7955  0216  3007               	movlw	7
  7956  0217  00E4               	movwf	100	;volatile
  7957  0218                     l4061:	
  7958                           
  7959                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  7960  0218  30FF               	movlw	255
  7961  0219  00B8               	movwf	56	;volatile
  7962                           
  7963                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  7964  021A  01DA               	clrf	90	;volatile
  7965                           
  7966                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  7967  021B  01E5               	clrf	101	;volatile
  7968                           
  7969                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  7970  021C  01C4               	clrf	68	;volatile
  7971                           
  7972                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  7973  021D  01B9               	clrf	57	;volatile
  7974                           
  7975                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  7976  021E  01CF               	clrf	79	;volatile
  7977                           
  7978                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  7979  021F  01E6               	clrf	102	;volatile
  7980                           
  7981                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  7982  0220  01BA               	clrf	58	;volatile
  7983                           
  7984                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  7985  0221  01C5               	clrf	69	;volatile
  7986                           
  7987                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  7988  0222  01D0               	clrf	80	;volatile
  7989                           
  7990                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  7991  0223  01DB               	clrf	91	;volatile
  7992  0224                     l4063:	
  7993                           
  7994                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  7995  0224  30FF               	movlw	255
  7996  0225  00BB               	movwf	59	;volatile
  7997  0226                     l4065:	
  7998                           
  7999                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  8000  0226  30FF               	movlw	255
  8001  0227  00C6               	movwf	70	;volatile
  8002  0228                     l4067:	
  8003                           
  8004                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  8005  0228  30FF               	movlw	255
  8006  0229  00D1               	movwf	81	;volatile
  8007  022A                     l4069:	
  8008                           
  8009                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  8010  022A  30FF               	movlw	255
  8011  022B  00DC               	movwf	92	;volatile
  8012  022C                     l4071:	
  8013                           
  8014                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  8015  022C  3007               	movlw	7
  8016  022D  00E7               	movwf	103	;volatile
  8017  022E                     l4073:	
  8018                           
  8019                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  8020  022E  30FF               	movlw	255
  8021  022F  00BC               	movwf	60	;volatile
  8022  0230                     l4075:	
  8023                           
  8024                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  8025  0230  30FF               	movlw	255
  8026  0231  00C7               	movwf	71	;volatile
  8027  0232                     l4077:	
  8028                           
  8029                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  8030  0232  30FF               	movlw	255
  8031  0233  00D2               	movwf	82	;volatile
  8032  0234                     l4079:	
  8033                           
  8034                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  8035  0234  30FF               	movlw	255
  8036  0235  00DD               	movwf	93	;volatile
  8037  0236                     l4081:	
  8038                           
  8039                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
  8040  0236  3007               	movlw	7
  8041  0237  00E8               	movwf	104	;volatile
  8042  0238                     l4083:	
  8043                           
  8044                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
  8045  0238  3013               	movlw	19
  8046  0239  003D               	movlb	29	; select bank29
  8047  023A  00C5               	movwf	69	;volatile
  8048  023B                     l4085:	
  8049                           
  8050                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x14;
  8051  023B  3014               	movlw	20
  8052  023C  003E               	movlb	30	; select bank30
  8053  023D  00A3               	movwf	35	;volatile
  8054  023E                     l4087:	
  8055                           
  8056                           ;mcc_generated_files/pin_manager.c: 129:     RC4PPS = 0x15;
  8057  023E  3015               	movlw	21
  8058  023F  00A4               	movwf	36	;volatile
  8059  0240                     l4089:	
  8060                           
  8061                           ;mcc_generated_files/pin_manager.c: 130:     SSP1DATPPS = 0x14;
  8062  0240  3014               	movlw	20
  8063  0241  003D               	movlb	29	; select bank29
  8064  0242  00C6               	movwf	70	;volatile
  8065  0243                     l587:	
  8066  0243  0008               	return
  8067  0244                     __end_of_PIN_MANAGER_Initialize:	
  8068                           
  8069                           	psect	text15
  8070  052B                     __ptext15:	
  8071 ;; *************** function _OSCILLATOR_Initialize *****************
  8072 ;; Defined at:
  8073 ;;		line 58 in file "mcc_generated_files/mcc.c"
  8074 ;; Parameters:    Size  Location     Type
  8075 ;;		None
  8076 ;; Auto vars:     Size  Location     Type
  8077 ;;		None
  8078 ;; Return value:  Size  Location     Type
  8079 ;;                  1    wreg      void 
  8080 ;; Registers used:
  8081 ;;		wreg, status,2
  8082 ;; Tracked objects:
  8083 ;;		On entry : 0/0
  8084 ;;		On exit  : 0/0
  8085 ;;		Unchanged: 0/0
  8086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8091 ;;Total ram usage:        0 bytes
  8092 ;; Hardware stack levels used:    1
  8093 ;; Hardware stack levels required when called:    6
  8094 ;; This function calls:
  8095 ;;		Nothing
  8096 ;; This function is called by:
  8097 ;;		_SYSTEM_Initialize
  8098 ;; This function uses a non-reentrant model
  8099 ;;
  8100                           
  8101                           
  8102                           ;psect for function _OSCILLATOR_Initialize
  8103  052B                     _OSCILLATOR_Initialize:	
  8104  052B                     l4091:	
  8105                           ;incstack = 0
  8106                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8107                           
  8108                           
  8109                           ;mcc_generated_files/mcc.c: 61:     OSCCON1 = 0x60;
  8110  052B  3060               	movlw	96
  8111  052C  0031               	movlb	17	; select bank17
  8112  052D  008D               	movwf	13	;volatile
  8113  052E                     l4093:	
  8114                           
  8115                           ;mcc_generated_files/mcc.c: 63:     OSCCON3 = 0x00;
  8116  052E  018F               	clrf	15	;volatile
  8117  052F                     l4095:	
  8118                           
  8119                           ;mcc_generated_files/mcc.c: 65:     OSCEN = 0x00;
  8120  052F  0191               	clrf	17	;volatile
  8121                           
  8122                           ;mcc_generated_files/mcc.c: 67:     OSCFRQ = 0x02;
  8123  0530  3002               	movlw	2
  8124  0531  0093               	movwf	19	;volatile
  8125  0532                     l4097:	
  8126                           
  8127                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
  8128  0532  0192               	clrf	18	;volatile
  8129  0533                     l503:	
  8130  0533  0008               	return
  8131  0534                     __end_of_OSCILLATOR_Initialize:	
  8132                           
  8133                           	psect	intentry
  8134  0004                     __pintentry:	
  8135 ;; *************** function _INTERRUPT_InterruptManager *****************
  8136 ;; Defined at:
  8137 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8138 ;; Parameters:    Size  Location     Type
  8139 ;;		None
  8140 ;; Auto vars:     Size  Location     Type
  8141 ;;		None
  8142 ;; Return value:  Size  Location     Type
  8143 ;;                  1    wreg      void 
  8144 ;; Registers used:
  8145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8146 ;; Tracked objects:
  8147 ;;		On entry : 0/0
  8148 ;;		On exit  : 0/0
  8149 ;;		Unchanged: 0/0
  8150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8155 ;;Total ram usage:        0 bytes
  8156 ;; Hardware stack levels used:    1
  8157 ;; Hardware stack levels required when called:    5
  8158 ;; This function calls:
  8159 ;;		Absolute function
  8160 ;;		_TMR1_ISR
  8161 ;;		_i2c_ISR
  8162 ;;		_i2c_busCollisionISR
  8163 ;; This function is called by:
  8164 ;;		Interrupt level 1
  8165 ;; This function uses a non-reentrant model
  8166 ;;
  8167                           
  8168  0004                     _INTERRUPT_InterruptManager:	
  8169                           
  8170                           ;incstack = 0
  8171  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8172                           
  8173                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8174  0005  3180               	pagesel	$
  8175  0006                     i1l4371:	
  8176                           
  8177                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  8178  0006  1F0B               	btfss	11,6	;volatile
  8179  0007  2809               	goto	u207_21
  8180  0008  280A               	goto	u207_20
  8181  0009                     u207_21:	
  8182  0009  2834               	goto	i1l463
  8183  000A                     u207_20:	
  8184  000A                     i1l4373:	
  8185                           
  8186                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
  8187  000A  002E               	movlb	14	; select bank14
  8188  000B  1C99               	btfss	25,1	;volatile
  8189  000C  280E               	goto	u208_21
  8190  000D  280F               	goto	u208_20
  8191  000E                     u208_21:	
  8192  000E  2819               	goto	i1l456
  8193  000F                     u208_20:	
  8194  000F                     i1l4375:	
  8195  000F  1C8F               	btfss	15,1	;volatile
  8196  0010  2812               	goto	u209_21
  8197  0011  2813               	goto	u209_20
  8198  0012                     u209_21:	
  8199  0012  2819               	goto	i1l456
  8200  0013                     u209_20:	
  8201  0013                     i1l4377:	
  8202                           
  8203                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             i2c1_driver_busCollisionISR();
  8204  0013  087C               	movf	_i2c1_driver_busCollisionISR+1,w
  8205  0014  008A               	movwf	10
  8206  0015  087B               	movf	_i2c1_driver_busCollisionISR,w
  8207  0016  000A               	callw
  8208  0017  3180               	pagesel	$
  8209                           
  8210                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  8211  0018  2834               	goto	i1l463
  8212  0019                     i1l456:	
  8213                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
  8214                           
  8215  0019  1C19               	btfss	25,0	;volatile
  8216  001A  281C               	goto	u210_21
  8217  001B  281D               	goto	u210_20
  8218  001C                     u210_21:	
  8219  001C  2828               	goto	i1l458
  8220  001D                     u210_20:	
  8221  001D                     i1l4379:	
  8222  001D  1C0F               	btfss	15,0	;volatile
  8223  001E  2820               	goto	u211_21
  8224  001F  2821               	goto	u211_20
  8225  0020                     u211_21:	
  8226  0020  2828               	goto	i1l458
  8227  0021                     u211_20:	
  8228  0021                     i1l4381:	
  8229                           
  8230                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             i2c1_driver_i2cISR();
  8231  0021  0020               	movlb	0	; select bank0
  8232  0022  0843               	movf	_i2c1_driver_i2cISR+1,w
  8233  0023  008A               	movwf	10
  8234  0024  0842               	movf	_i2c1_driver_i2cISR,w
  8235  0025  000A               	callw
  8236  0026  3180               	pagesel	$
  8237                           
  8238                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  8239  0027  2834               	goto	i1l463
  8240  0028                     i1l458:	
  8241                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE4bits.TMR1IE == 1 && PI
      +                          R4bits.TMR1IF == 1)
  8242                           
  8243  0028  1C1A               	btfss	26,0	;volatile
  8244  0029  282B               	goto	u212_21
  8245  002A  282C               	goto	u212_20
  8246  002B                     u212_21:	
  8247  002B  2834               	goto	i1l457
  8248  002C                     u212_20:	
  8249  002C                     i1l4383:	
  8250  002C  1C10               	btfss	16,0	;volatile
  8251  002D  282F               	goto	u213_21
  8252  002E  2830               	goto	u213_20
  8253  002F                     u213_21:	
  8254  002F  2834               	goto	i1l457
  8255  0030                     u213_20:	
  8256  0030                     i1l4385:	
  8257                           
  8258                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR1_ISR();
  8259  0030  3184  2467  3180   	fcall	_TMR1_ISR
  8260                           
  8261                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  8262  0033  2834               	goto	i1l463
  8263  0034                     i1l457:	
  8264  0034                     i1l463:	
  8265                           ;mcc_generated_files/interrupt_manager.c: 73:     }
  8266                           
  8267  0034  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8268  0035  0009               	retfie
  8269  0036                     __end_of_INTERRUPT_InterruptManager:	
  8270                           
  8271                           	psect	text17
  8272  059D                     __ptext17:	
  8273 ;; *************** function _i2c_busCollisionISR *****************
  8274 ;; Defined at:
  8275 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
  8276 ;; Parameters:    Size  Location     Type
  8277 ;;		None
  8278 ;; Auto vars:     Size  Location     Type
  8279 ;;		None
  8280 ;; Return value:  Size  Location     Type
  8281 ;;                  1    wreg      void 
  8282 ;; Registers used:
  8283 ;;		status,2, status,0, pclath, cstack
  8284 ;; Tracked objects:
  8285 ;;		On entry : 0/0
  8286 ;;		On exit  : 0/0
  8287 ;;		Unchanged: 0/0
  8288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8293 ;;Total ram usage:        0 bytes
  8294 ;; Hardware stack levels used:    1
  8295 ;; Hardware stack levels required when called:    1
  8296 ;; This function calls:
  8297 ;;		_i2c1_driver_clearBusCollision
  8298 ;; This function is called by:
  8299 ;;		_i2c_open
  8300 ;;		_INTERRUPT_InterruptManager
  8301 ;; This function uses a non-reentrant model
  8302 ;;
  8303                           
  8304                           
  8305                           ;psect for function _i2c_busCollisionISR
  8306  059D                     _i2c_busCollisionISR:	
  8307  059D                     i1l3451:	
  8308                           ;incstack = 0
  8309                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
  8310                           
  8311                           
  8312                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
  8313  059D  3185  25A9  3185   	fcall	_i2c1_driver_clearBusCollision
  8314  05A0                     i1l250:	
  8315  05A0  0008               	return
  8316  05A1                     __end_of_i2c_busCollisionISR:	
  8317                           
  8318                           	psect	text18
  8319  05A9                     __ptext18:	
  8320 ;; *************** function _i2c1_driver_clearBusCollision *****************
  8321 ;; Defined at:
  8322 ;;		line 254 in file "mcc_generated_files/i2c1_driver.c"
  8323 ;; Parameters:    Size  Location     Type
  8324 ;;		None
  8325 ;; Auto vars:     Size  Location     Type
  8326 ;;		None
  8327 ;; Return value:  Size  Location     Type
  8328 ;;                  1    wreg      void 
  8329 ;; Registers used:
  8330 ;;		None
  8331 ;; Tracked objects:
  8332 ;;		On entry : 0/0
  8333 ;;		On exit  : 0/0
  8334 ;;		Unchanged: 0/0
  8335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8340 ;;Total ram usage:        0 bytes
  8341 ;; Hardware stack levels used:    1
  8342 ;; This function calls:
  8343 ;;		Nothing
  8344 ;; This function is called by:
  8345 ;;		_i2c_busCollisionISR
  8346 ;; This function uses a non-reentrant model
  8347 ;;
  8348                           
  8349                           
  8350                           ;psect for function _i2c1_driver_clearBusCollision
  8351  05A9                     _i2c1_driver_clearBusCollision:	
  8352  05A9                     i1l3217:	
  8353                           ;incstack = 0
  8354                           ; Regs used in _i2c1_driver_clearBusCollision: []
  8355                           
  8356                           
  8357                           ;mcc_generated_files/i2c1_driver.c: 256:     PIR3bits.BCL1IF = 0;
  8358  05A9  002E               	movlb	14	; select bank14
  8359  05AA  108F               	bcf	15,1	;volatile
  8360  05AB                     i1l729:	
  8361  05AB  0008               	return
  8362  05AC                     __end_of_i2c1_driver_clearBusCollision:	
  8363                           
  8364                           	psect	text19
  8365  0311                     __ptext19:	
  8366 ;; *************** function _i2c_ISR *****************
  8367 ;; Defined at:
  8368 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
  8369 ;; Parameters:    Size  Location     Type
  8370 ;;		None
  8371 ;; Auto vars:     Size  Location     Type
  8372 ;;		None
  8373 ;; Return value:  Size  Location     Type
  8374 ;;                  1    wreg      void 
  8375 ;; Registers used:
  8376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8377 ;; Tracked objects:
  8378 ;;		On entry : 0/0
  8379 ;;		On exit  : 0/0
  8380 ;;		Unchanged: 0/0
  8381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8384 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8385 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8386 ;;Total ram usage:        3 bytes
  8387 ;; Hardware stack levels used:    1
  8388 ;; Hardware stack levels required when called:    4
  8389 ;; This function calls:
  8390 ;;		_do_I2C_DO_ACK
  8391 ;;		_do_I2C_DO_ADDRESS_NACK
  8392 ;;		_do_I2C_DO_NACK_RESTART
  8393 ;;		_do_I2C_DO_NACK_STOP
  8394 ;;		_do_I2C_IDLE
  8395 ;;		_do_I2C_RCEN
  8396 ;;		_do_I2C_RESET
  8397 ;;		_do_I2C_RX
  8398 ;;		_do_I2C_SEND_ADR_READ
  8399 ;;		_do_I2C_SEND_ADR_WRITE
  8400 ;;		_do_I2C_SEND_RESTART
  8401 ;;		_do_I2C_SEND_RESTART_READ
  8402 ;;		_do_I2C_SEND_RESTART_WRITE
  8403 ;;		_do_I2C_SEND_STOP
  8404 ;;		_do_I2C_TX
  8405 ;;		_do_I2C_TX_EMPTY
  8406 ;;		_i2c1_driver_isNACK
  8407 ;;		_mssp1_clearIRQ
  8408 ;; This function is called by:
  8409 ;;		_i2c_open
  8410 ;;		_i2c_poller
  8411 ;;		_INTERRUPT_InterruptManager
  8412 ;; This function uses a non-reentrant model
  8413 ;;
  8414                           
  8415                           
  8416                           ;psect for function _i2c_ISR
  8417  0311                     _i2c_ISR:	
  8418  0311                     i1l4193:	
  8419                           ;incstack = 0
  8420                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8421                           
  8422                           
  8423                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
  8424  0311  3185  25AC  3183   	fcall	_mssp1_clearIRQ
  8425  0314                     i1l4195:	
  8426                           
  8427                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
  8428  0314  0020               	movlb	0	; select bank0
  8429  0315  1DA0               	btfss	_i2c_status,3
  8430  0316  2B18               	goto	u182_21
  8431  0317  2B19               	goto	u182_20
  8432  0318                     u182_21:	
  8433  0318  2B25               	goto	i1l4201
  8434  0319                     u182_20:	
  8435  0319                     i1l4197:	
  8436  0319  3185  2555  3183   	fcall	_i2c1_driver_isNACK
  8437  031C  1C03               	btfss	3,0
  8438  031D  2B1F               	goto	u183_21
  8439  031E  2B20               	goto	u183_20
  8440  031F                     u183_21:	
  8441  031F  2B25               	goto	i1l4201
  8442  0320                     u183_20:	
  8443  0320                     i1l4199:	
  8444                           
  8445                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
  8446  0320  300F               	movlw	15
  8447  0321  00F4               	movwf	??_i2c_ISR
  8448  0322  0874               	movf	??_i2c_ISR,w
  8449  0323  0020               	movlb	0	; select bank0
  8450  0324  00A9               	movwf	_i2c_status+9
  8451  0325                     i1l4201:	
  8452                           
  8453                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
  8454  0325  0020               	movlb	0	; select bank0
  8455  0326  0829               	movf	_i2c_status+9,w
  8456  0327  00F4               	movwf	??_i2c_ISR
  8457  0328  01F5               	clrf	??_i2c_ISR+1
  8458  0329  35F4               	lslf	??_i2c_ISR,f
  8459  032A  0DF5               	rlf	??_i2c_ISR+1,f
  8460  032B  30A9               	movlw	low (_fsmStateTable| (0+32768))
  8461  032C  0774               	addwf	??_i2c_ISR,w
  8462  032D  0084               	movwf	4
  8463  032E  3083               	movlw	high (_fsmStateTable| (0+32768))
  8464  032F  3D75               	addwfc	??_i2c_ISR+1,w
  8465  0330  0085               	movwf	5
  8466  0331  3F01               	moviw [1]fsr0
  8467  0332  008A               	movwf	10
  8468  0333  3F00               	moviw [0]fsr0
  8469  0334  000A               	callw
  8470  0335  3183               	pagesel	$
  8471  0336  00F6               	movwf	??_i2c_ISR+2
  8472  0337  0876               	movf	??_i2c_ISR+2,w
  8473  0338  0020               	movlb	0	; select bank0
  8474  0339  00A9               	movwf	_i2c_status+9
  8475  033A                     i1l247:	
  8476  033A  0008               	return
  8477  033B                     __end_of_i2c_ISR:	
  8478                           
  8479                           	psect	text20
  8480  05AC                     __ptext20:	
  8481 ;; *************** function _mssp1_clearIRQ *****************
  8482 ;; Defined at:
  8483 ;;		line 54 in file "mcc_generated_files/i2c1_driver.c"
  8484 ;; Parameters:    Size  Location     Type
  8485 ;;		None
  8486 ;; Auto vars:     Size  Location     Type
  8487 ;;		None
  8488 ;; Return value:  Size  Location     Type
  8489 ;;                  1    wreg      void 
  8490 ;; Registers used:
  8491 ;;		None
  8492 ;; Tracked objects:
  8493 ;;		On entry : 0/0
  8494 ;;		On exit  : 0/0
  8495 ;;		Unchanged: 0/0
  8496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8501 ;;Total ram usage:        0 bytes
  8502 ;; Hardware stack levels used:    1
  8503 ;; This function calls:
  8504 ;;		Nothing
  8505 ;; This function is called by:
  8506 ;;		_i2c_ISR
  8507 ;;		_i2c_open
  8508 ;;		_i2c_close
  8509 ;; This function uses a non-reentrant model
  8510 ;;
  8511                           
  8512                           
  8513                           ;psect for function _mssp1_clearIRQ
  8514  05AC                     _mssp1_clearIRQ:	
  8515  05AC                     i1l3039:	
  8516                           ;incstack = 0
  8517                           ; Regs used in _mssp1_clearIRQ: []
  8518                           
  8519                           
  8520                           ;mcc_generated_files/i2c1_driver.c: 56:         SSP1CON1 = 0x28;
  8521  05AC  002E               	movlb	14	; select bank14
  8522  05AD  100F               	bcf	15,0	;volatile
  8523  05AE                     i1l633:	
  8524  05AE  0008               	return
  8525  05AF                     __end_of_mssp1_clearIRQ:	
  8526                           
  8527                           	psect	text21
  8528  01B5                     __ptext21:	
  8529 ;; *************** function _do_I2C_RX *****************
  8530 ;; Defined at:
  8531 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;		None
  8534 ;; Auto vars:     Size  Location     Type
  8535 ;;		None
  8536 ;; Return value:  Size  Location     Type
  8537 ;;                  1    wreg      enum E12722
  8538 ;; Registers used:
  8539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8540 ;; Tracked objects:
  8541 ;;		On entry : 0/0
  8542 ;;		On exit  : 0/0
  8543 ;;		Unchanged: 0/0
  8544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8547 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8548 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8549 ;;Total ram usage:        3 bytes
  8550 ;; Hardware stack levels used:    1
  8551 ;; Hardware stack levels required when called:    3
  8552 ;; This function calls:
  8553 ;;		Absolute function
  8554 ;;		_do_I2C_DO_NACK_RESTART
  8555 ;;		_do_I2C_DO_NACK_STOP
  8556 ;;		_i2c1_driver_getRXData
  8557 ;;		_i2c1_driver_sendACK
  8558 ;;		_i2c_restartWrite
  8559 ;;		_rd1RegCompleteHandler
  8560 ;;		_rd2RegCompleteHandler
  8561 ;;		_rdBlkRegCompleteHandler
  8562 ;;		_returnReset
  8563 ;;		_returnStop
  8564 ;;		_wr1RegCompleteHandler
  8565 ;;		_wr2RegCompleteHandler
  8566 ;; This function is called by:
  8567 ;;		_i2c_ISR
  8568 ;; This function uses a non-reentrant model
  8569 ;;
  8570                           
  8571                           
  8572                           ;psect for function _do_I2C_RX
  8573  01B5                     _do_I2C_RX:	
  8574  01B5                     i1l3967:	
  8575                           ;incstack = 0
  8576                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8577                           
  8578                           
  8579                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
  8580  01B5  3185  25B2  3181   	fcall	_i2c1_driver_getRXData
  8581  01B8  00F0               	movwf	??_do_I2C_RX
  8582  01B9  0020               	movlb	0	; select bank0
  8583  01BA  0822               	movf	low ((_i2c_status| 0+2)),w
  8584  01BB  0086               	movwf	6
  8585  01BC  0187               	clrf	7
  8586  01BD  0870               	movf	??_do_I2C_RX,w
  8587  01BE  0081               	movwf	1
  8588  01BF                     i1l3969:	
  8589  01BF  3001               	movlw	1
  8590  01C0  00F0               	movwf	??_do_I2C_RX
  8591  01C1  0870               	movf	??_do_I2C_RX,w
  8592  01C2  07A2               	addwf	low ((_i2c_status| 0+2)),f
  8593  01C3                     i1l3971:	
  8594                           
  8595                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
  8596  01C3  3001               	movlw	1
  8597  01C4  02A3               	subwf	_i2c_status+3,f
  8598  01C5  3000               	movlw	0
  8599  01C6  3BA4               	subwfb	_i2c_status+4,f
  8600  01C7  0823               	movf	_i2c_status+3,w
  8601  01C8  0424               	iorwf	_i2c_status+4,w
  8602  01C9  1903               	btfsc	3,2
  8603  01CA  29CC               	goto	u177_21
  8604  01CB  29CD               	goto	u177_20
  8605  01CC                     u177_21:	
  8606  01CC  29D2               	goto	i1l222
  8607  01CD                     u177_20:	
  8608  01CD                     i1l3973:	
  8609                           
  8610                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
  8611  01CD  3185  25A5  3181   	fcall	_i2c1_driver_sendACK
  8612  01D0                     i1l3975:	
  8613                           
  8614                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
  8615  01D0  3005               	movlw	5
  8616  01D1  29FE               	goto	i1l223
  8617  01D2                     i1l222:	
  8618                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
  8619                           
  8620                           
  8621                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
  8622  01D2  1520               	bsf	_i2c_status,2
  8623                           
  8624                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
  8625  01D3  29DC               	goto	i1l3991
  8626  01D4                     i1l3981:	
  8627                           
  8628                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
  8629  01D4  3185  2570  3181   	fcall	_do_I2C_DO_NACK_RESTART
  8630  01D7  29FE               	goto	i1l223
  8631  01D8                     i1l3985:	
  8632                           
  8633                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
  8634  01D8  3185  2575  3181   	fcall	_do_I2C_DO_NACK_STOP
  8635  01DB  29FE               	goto	i1l223
  8636  01DC                     i1l3991:	
  8637  01DC  0837               	movf	low ((_i2c_status| 0+23)),w
  8638  01DD  00F0               	movwf	??_do_I2C_RX
  8639  01DE  0870               	movf	??_do_I2C_RX,w
  8640  01DF  00F6               	movwf	rdBlkRegCompleteHandler@p
  8641  01E0  300B               	movlw	11
  8642  01E1  3E20               	addlw	(low (_i2c_status| 0))& (0+255)
  8643  01E2  0086               	movwf	6
  8644  01E3  0187               	clrf	7
  8645  01E4  3F41               	moviw [1]fsr1
  8646  01E5  008A               	movwf	10
  8647  01E6  3F40               	moviw [0]fsr1
  8648  01E7  000A               	callw
  8649  01E8  3181               	pagesel	$
  8650  01E9  00F1               	movwf	??_do_I2C_RX+1
  8651  01EA  01F2               	clrf	??_do_I2C_RX+2
  8652                           
  8653                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8654                           ; Switch size 1, requested type "simple"
  8655                           ; Number of cases is 1, Range of values is 0 to 0
  8656                           ; switch strategies available:
  8657                           ; Name         Instructions Cycles
  8658                           ; simple_byte            4     3 (average)
  8659                           ; direct_byte            8     6 (fixed)
  8660                           ; jumptable            260     6 (fixed)
  8661                           ;	Chosen strategy is simple_byte
  8662  01EB  0872               	movf	??_do_I2C_RX+2,w
  8663  01EC  3A00               	xorlw	0	; case 0
  8664  01ED  1903               	skipnz
  8665  01EE  29F0               	goto	i1l4559
  8666  01EF  29D8               	goto	i1l3985
  8667  01F0                     i1l4559:	
  8668                           
  8669                           ; Switch size 1, requested type "simple"
  8670                           ; Number of cases is 4, Range of values is 1 to 4
  8671                           ; switch strategies available:
  8672                           ; Name         Instructions Cycles
  8673                           ; simple_byte           13     7 (average)
  8674                           ; direct_byte           17     9 (fixed)
  8675                           ; jumptable            263     9 (fixed)
  8676                           ;	Chosen strategy is simple_byte
  8677  01F0  0871               	movf	??_do_I2C_RX+1,w
  8678  01F1  3A01               	xorlw	1	; case 1
  8679  01F2  1903               	skipnz
  8680  01F3  29D8               	goto	i1l3985
  8681  01F4  3A03               	xorlw	3	; case 2
  8682  01F5  1903               	skipnz
  8683  01F6  29D4               	goto	i1l3981
  8684  01F7  3A01               	xorlw	1	; case 3
  8685  01F8  1903               	skipnz
  8686  01F9  29D4               	goto	i1l3981
  8687  01FA  3A07               	xorlw	7	; case 4
  8688  01FB  1903               	skipnz
  8689  01FC  29D8               	goto	i1l3985
  8690  01FD  29D8               	goto	i1l3985
  8691  01FE                     i1l223:	
  8692  01FE  0008               	return
  8693  01FF                     __end_of_do_I2C_RX:	
  8694                           
  8695                           	psect	text22
  8696  0161                     __ptext22:	
  8697 ;; *************** function _do_I2C_TX *****************
  8698 ;; Defined at:
  8699 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
  8700 ;; Parameters:    Size  Location     Type
  8701 ;;		None
  8702 ;; Auto vars:     Size  Location     Type
  8703 ;;		None
  8704 ;; Return value:  Size  Location     Type
  8705 ;;                  1    wreg      enum E12722
  8706 ;; Registers used:
  8707 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8708 ;; Tracked objects:
  8709 ;;		On entry : 0/0
  8710 ;;		On exit  : 0/0
  8711 ;;		Unchanged: 0/0
  8712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8715 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8716 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8717 ;;Total ram usage:        3 bytes
  8718 ;; Hardware stack levels used:    1
  8719 ;; Hardware stack levels required when called:    3
  8720 ;; This function calls:
  8721 ;;		Absolute function
  8722 ;;		_do_I2C_SEND_RESTART_READ
  8723 ;;		_do_I2C_SEND_RESTART_WRITE
  8724 ;;		_do_I2C_SEND_STOP
  8725 ;;		_i2c1_driver_TXData
  8726 ;;		_i2c1_driver_isNACK
  8727 ;;		_i2c_restartWrite
  8728 ;;		_rd1RegCompleteHandler
  8729 ;;		_rd2RegCompleteHandler
  8730 ;;		_rdBlkRegCompleteHandler
  8731 ;;		_returnReset
  8732 ;;		_returnStop
  8733 ;;		_wr1RegCompleteHandler
  8734 ;;		_wr2RegCompleteHandler
  8735 ;; This function is called by:
  8736 ;;		_i2c_ISR
  8737 ;; This function uses a non-reentrant model
  8738 ;;
  8739                           
  8740                           
  8741                           ;psect for function _do_I2C_TX
  8742  0161                     _do_I2C_TX:	
  8743  0161                     i1l3933:	
  8744                           ;incstack = 0
  8745                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8746                           
  8747                           
  8748                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
  8749  0161  3185  2555  3181   	fcall	_i2c1_driver_isNACK
  8750  0164  1C03               	btfss	3,0
  8751  0165  2967               	goto	u175_21
  8752  0166  2968               	goto	u175_20
  8753  0167                     u175_21:	
  8754  0167  2998               	goto	i1l206
  8755  0168                     u175_20:	
  8756  0168  2975               	goto	i1l3951
  8757  0169                     i1l3937:	
  8758                           
  8759                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
  8760  0169  3185  258E  3181   	fcall	_do_I2C_SEND_RESTART_READ
  8761  016C  29B4               	goto	i1l209
  8762  016D                     i1l3941:	
  8763                           
  8764                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
  8765  016D  3185  2589  3181   	fcall	_do_I2C_SEND_RESTART_WRITE
  8766  0170  29B4               	goto	i1l209
  8767  0171                     i1l3945:	
  8768                           
  8769                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
  8770  0171  3185  257F  3181   	fcall	_do_I2C_SEND_STOP
  8771  0174  29B4               	goto	i1l209
  8772  0175                     i1l3951:	
  8773  0175  0020               	movlb	0	; select bank0
  8774  0176  083A               	movf	low ((_i2c_status| 0+26)),w
  8775  0177  00F1               	movwf	??_do_I2C_TX
  8776  0178  0871               	movf	??_do_I2C_TX,w
  8777  0179  00F6               	movwf	rdBlkRegCompleteHandler@p
  8778  017A  3011               	movlw	17
  8779  017B  3E20               	addlw	(low (_i2c_status| 0))& (0+255)
  8780  017C  0086               	movwf	6
  8781  017D  0187               	clrf	7
  8782  017E  3F41               	moviw [1]fsr1
  8783  017F  008A               	movwf	10
  8784  0180  3F40               	moviw [0]fsr1
  8785  0181  000A               	callw
  8786  0182  3181               	pagesel	$
  8787  0183  00F2               	movwf	??_do_I2C_TX+1
  8788  0184  01F3               	clrf	??_do_I2C_TX+2
  8789                           
  8790                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8791                           ; Switch size 1, requested type "simple"
  8792                           ; Number of cases is 1, Range of values is 0 to 0
  8793                           ; switch strategies available:
  8794                           ; Name         Instructions Cycles
  8795                           ; simple_byte            4     3 (average)
  8796                           ; direct_byte            8     6 (fixed)
  8797                           ; jumptable            260     6 (fixed)
  8798                           ;	Chosen strategy is simple_byte
  8799  0185  0873               	movf	??_do_I2C_TX+2,w
  8800  0186  3A00               	xorlw	0	; case 0
  8801  0187  1903               	skipnz
  8802  0188  298A               	goto	i1l4561
  8803  0189  2971               	goto	i1l3945
  8804  018A                     i1l4561:	
  8805                           
  8806                           ; Switch size 1, requested type "simple"
  8807                           ; Number of cases is 4, Range of values is 1 to 4
  8808                           ; switch strategies available:
  8809                           ; Name         Instructions Cycles
  8810                           ; simple_byte           13     7 (average)
  8811                           ; direct_byte           17     9 (fixed)
  8812                           ; jumptable            263     9 (fixed)
  8813                           ;	Chosen strategy is simple_byte
  8814  018A  0872               	movf	??_do_I2C_TX+1,w
  8815  018B  3A01               	xorlw	1	; case 1
  8816  018C  1903               	skipnz
  8817  018D  2971               	goto	i1l3945
  8818  018E  3A03               	xorlw	3	; case 2
  8819  018F  1903               	skipnz
  8820  0190  2969               	goto	i1l3937
  8821  0191  3A01               	xorlw	1	; case 3
  8822  0192  1903               	skipnz
  8823  0193  296D               	goto	i1l3941
  8824  0194  3A07               	xorlw	7	; case 4
  8825  0195  1903               	skipnz
  8826  0196  2971               	goto	i1l3945
  8827  0197  2971               	goto	i1l3945
  8828  0198                     i1l206:	
  8829                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
  8830                           
  8831                           
  8832                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
  8833  0198  0020               	movlb	0	; select bank0
  8834  0199  11A0               	bcf	_i2c_status,3
  8835  019A                     i1l3953:	
  8836                           
  8837                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
  8838  019A  3002               	movlw	2
  8839  019B  3E20               	addlw	(low (_i2c_status| 0))& (0+255)
  8840  019C  0086               	movwf	6
  8841  019D  0187               	clrf	7
  8842  019E  3F40               	moviw [0]fsr1
  8843  019F  0084               	movwf	4
  8844  01A0  0185               	clrf	5
  8845  01A1  0A81               	incf	1,f
  8846  01A2  0800               	movf	0,w
  8847  01A3  3185  2598  3181   	fcall	_i2c1_driver_TXData
  8848  01A6                     i1l3955:	
  8849                           
  8850                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
  8851  01A6  3001               	movlw	1
  8852  01A7  0020               	movlb	0	; select bank0
  8853  01A8  02A3               	subwf	_i2c_status+3,f
  8854  01A9  3000               	movlw	0
  8855  01AA  3BA4               	subwfb	_i2c_status+4,f
  8856  01AB  0823               	movf	_i2c_status+3,w
  8857  01AC  0424               	iorwf	_i2c_status+4,w
  8858  01AD  1D03               	btfss	3,2
  8859  01AE  29B0               	goto	u176_21
  8860  01AF  29B1               	goto	u176_20
  8861  01B0                     u176_21:	
  8862  01B0  29B3               	goto	i1l3959
  8863  01B1                     u176_20:	
  8864  01B1                     i1l3957:	
  8865  01B1  3006               	movlw	6
  8866  01B2  29B4               	goto	i1l209
  8867  01B3                     i1l3959:	
  8868  01B3  3003               	movlw	3
  8869  01B4                     i1l209:	
  8870  01B4  0008               	return
  8871  01B5                     __end_of_do_I2C_TX:	
  8872                           
  8873                           	psect	text23
  8874  02E5                     __ptext23:	
  8875 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
  8876 ;; Defined at:
  8877 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
  8878 ;; Parameters:    Size  Location     Type
  8879 ;;		None
  8880 ;; Auto vars:     Size  Location     Type
  8881 ;;		None
  8882 ;; Return value:  Size  Location     Type
  8883 ;;                  1    wreg      enum E12722
  8884 ;; Registers used:
  8885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8886 ;; Tracked objects:
  8887 ;;		On entry : 0/0
  8888 ;;		On exit  : 0/0
  8889 ;;		Unchanged: 0/0
  8890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8893 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8894 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8895 ;;Total ram usage:        3 bytes
  8896 ;; Hardware stack levels used:    1
  8897 ;; Hardware stack levels required when called:    3
  8898 ;; This function calls:
  8899 ;;		Absolute function
  8900 ;;		_do_I2C_SEND_RESTART
  8901 ;;		_do_I2C_SEND_STOP
  8902 ;;		_i2c_restartWrite
  8903 ;;		_rd1RegCompleteHandler
  8904 ;;		_rd2RegCompleteHandler
  8905 ;;		_rdBlkRegCompleteHandler
  8906 ;;		_returnReset
  8907 ;;		_returnStop
  8908 ;;		_wr1RegCompleteHandler
  8909 ;;		_wr2RegCompleteHandler
  8910 ;; This function is called by:
  8911 ;;		_i2c_ISR
  8912 ;; This function uses a non-reentrant model
  8913 ;;
  8914                           
  8915                           
  8916                           ;psect for function _do_I2C_DO_ADDRESS_NACK
  8917  02E5                     _do_I2C_DO_ADDRESS_NACK:	
  8918  02E5                     i1l3913:	
  8919                           ;incstack = 0
  8920                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8921                           
  8922                           
  8923                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
  8924  02E5  0020               	movlb	0	; select bank0
  8925  02E6  11A0               	bcf	_i2c_status,3
  8926  02E7                     i1l3915:	
  8927                           
  8928                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
  8929  02E7  3002               	movlw	2
  8930  02E8  00F0               	movwf	??_do_I2C_DO_ADDRESS_NACK
  8931  02E9  0870               	movf	??_do_I2C_DO_ADDRESS_NACK,w
  8932  02EA  00AA               	movwf	_i2c_status+10
  8933                           
  8934                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
  8935  02EB  2AF4               	goto	i1l3927
  8936  02EC                     i1l3917:	
  8937                           
  8938                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
  8939  02EC  3185  2584  3182   	fcall	_do_I2C_SEND_RESTART
  8940  02EF  2B10               	goto	i1l201
  8941  02F0                     i1l3921:	
  8942                           
  8943                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
  8944  02F0  3185  257F  3182   	fcall	_do_I2C_SEND_STOP
  8945  02F3  2B10               	goto	i1l201
  8946  02F4                     i1l3927:	
  8947  02F4  0839               	movf	low ((_i2c_status| 0+25)),w
  8948  02F5  00F0               	movwf	??_do_I2C_DO_ADDRESS_NACK
  8949  02F6  0870               	movf	??_do_I2C_DO_ADDRESS_NACK,w
  8950  02F7  00F6               	movwf	rdBlkRegCompleteHandler@p
  8951  02F8  300F               	movlw	15
  8952  02F9  3E20               	addlw	(low (_i2c_status| 0))& (0+255)
  8953  02FA  0086               	movwf	6
  8954  02FB  0187               	clrf	7
  8955  02FC  3F41               	moviw [1]fsr1
  8956  02FD  008A               	movwf	10
  8957  02FE  3F40               	moviw [0]fsr1
  8958  02FF  000A               	callw
  8959  0300  3182               	pagesel	$
  8960  0301  00F1               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
  8961  0302  01F2               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
  8962                           
  8963                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8964                           ; Switch size 1, requested type "simple"
  8965                           ; Number of cases is 1, Range of values is 0 to 0
  8966                           ; switch strategies available:
  8967                           ; Name         Instructions Cycles
  8968                           ; simple_byte            4     3 (average)
  8969                           ; direct_byte            8     6 (fixed)
  8970                           ; jumptable            260     6 (fixed)
  8971                           ;	Chosen strategy is simple_byte
  8972  0303  0872               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
  8973  0304  3A00               	xorlw	0	; case 0
  8974  0305  1903               	skipnz
  8975  0306  2B08               	goto	i1l4563
  8976  0307  2AF0               	goto	i1l3921
  8977  0308                     i1l4563:	
  8978                           
  8979                           ; Switch size 1, requested type "simple"
  8980                           ; Number of cases is 2, Range of values is 2 to 3
  8981                           ; switch strategies available:
  8982                           ; Name         Instructions Cycles
  8983                           ; simple_byte            7     4 (average)
  8984                           ; direct_byte           13     9 (fixed)
  8985                           ; jumptable            263     9 (fixed)
  8986                           ;	Chosen strategy is simple_byte
  8987  0308  0871               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
  8988  0309  3A02               	xorlw	2	; case 2
  8989  030A  1903               	skipnz
  8990  030B  2AEC               	goto	i1l3917
  8991  030C  3A01               	xorlw	1	; case 3
  8992  030D  1903               	skipnz
  8993  030E  2AEC               	goto	i1l3917
  8994  030F  2AF0               	goto	i1l3921
  8995  0310                     i1l201:	
  8996  0310  0008               	return
  8997  0311                     __end_of_do_I2C_DO_ADDRESS_NACK:	
  8998                           
  8999                           	psect	text24
  9000  0570                     __ptext24:	
  9001 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
  9002 ;; Defined at:
  9003 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
  9004 ;; Parameters:    Size  Location     Type
  9005 ;;		None
  9006 ;; Auto vars:     Size  Location     Type
  9007 ;;		None
  9008 ;; Return value:  Size  Location     Type
  9009 ;;                  1    wreg      enum E12722
  9010 ;; Registers used:
  9011 ;;		wreg, status,2, status,0, pclath, cstack
  9012 ;; Tracked objects:
  9013 ;;		On entry : 0/0
  9014 ;;		On exit  : 0/0
  9015 ;;		Unchanged: 0/0
  9016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9021 ;;Total ram usage:        0 bytes
  9022 ;; Hardware stack levels used:    1
  9023 ;; Hardware stack levels required when called:    1
  9024 ;; This function calls:
  9025 ;;		_i2c1_driver_sendNACK
  9026 ;; This function is called by:
  9027 ;;		_do_I2C_RX
  9028 ;;		_i2c_ISR
  9029 ;; This function uses a non-reentrant model
  9030 ;;
  9031                           
  9032                           
  9033                           ;psect for function _do_I2C_DO_NACK_RESTART
  9034  0570                     _do_I2C_DO_NACK_RESTART:	
  9035  0570                     i1l2941:	
  9036                           ;incstack = 0
  9037                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  9038                           
  9039                           
  9040                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
  9041  0570  3185  25A1  3185   	fcall	_i2c1_driver_sendNACK
  9042  0573                     i1l2943:	
  9043                           
  9044                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
  9045  0573  3009               	movlw	9
  9046  0574                     i1l195:	
  9047  0574  0008               	return
  9048  0575                     __end_of_do_I2C_DO_NACK_RESTART:	
  9049                           
  9050                           	psect	text25
  9051  0575                     __ptext25:	
  9052 ;; *************** function _do_I2C_DO_NACK_STOP *****************
  9053 ;; Defined at:
  9054 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
  9055 ;; Parameters:    Size  Location     Type
  9056 ;;		None
  9057 ;; Auto vars:     Size  Location     Type
  9058 ;;		None
  9059 ;; Return value:  Size  Location     Type
  9060 ;;                  1    wreg      enum E12722
  9061 ;; Registers used:
  9062 ;;		wreg, status,2, status,0, pclath, cstack
  9063 ;; Tracked objects:
  9064 ;;		On entry : 0/0
  9065 ;;		On exit  : 0/0
  9066 ;;		Unchanged: 0/0
  9067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9072 ;;Total ram usage:        0 bytes
  9073 ;; Hardware stack levels used:    1
  9074 ;; Hardware stack levels required when called:    1
  9075 ;; This function calls:
  9076 ;;		_i2c1_driver_sendNACK
  9077 ;; This function is called by:
  9078 ;;		_do_I2C_RX
  9079 ;;		_i2c_ISR
  9080 ;; This function uses a non-reentrant model
  9081 ;;
  9082                           
  9083                           
  9084                           ;psect for function _do_I2C_DO_NACK_STOP
  9085  0575                     _do_I2C_DO_NACK_STOP:	
  9086  0575                     i1l2935:	
  9087                           ;incstack = 0
  9088                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  9089                           
  9090                           
  9091                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
  9092  0575  3185  25A1  3185   	fcall	_i2c1_driver_sendNACK
  9093  0578                     i1l2937:	
  9094                           
  9095                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
  9096  0578  300A               	movlw	10
  9097  0579                     i1l192:	
  9098  0579  0008               	return
  9099  057A                     __end_of_do_I2C_DO_NACK_STOP:	
  9100                           
  9101                           	psect	text26
  9102  057A                     __ptext26:	
  9103 ;; *************** function _do_I2C_DO_ACK *****************
  9104 ;; Defined at:
  9105 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
  9106 ;; Parameters:    Size  Location     Type
  9107 ;;		None
  9108 ;; Auto vars:     Size  Location     Type
  9109 ;;		None
  9110 ;; Return value:  Size  Location     Type
  9111 ;;                  1    wreg      enum E12722
  9112 ;; Registers used:
  9113 ;;		wreg, status,2, status,0, pclath, cstack
  9114 ;; Tracked objects:
  9115 ;;		On entry : 0/0
  9116 ;;		On exit  : 0/0
  9117 ;;		Unchanged: 0/0
  9118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9123 ;;Total ram usage:        0 bytes
  9124 ;; Hardware stack levels used:    1
  9125 ;; Hardware stack levels required when called:    1
  9126 ;; This function calls:
  9127 ;;		_i2c1_driver_sendACK
  9128 ;; This function is called by:
  9129 ;;		_i2c_ISR
  9130 ;; This function uses a non-reentrant model
  9131 ;;
  9132                           
  9133                           
  9134                           ;psect for function _do_I2C_DO_ACK
  9135  057A                     _do_I2C_DO_ACK:	
  9136  057A                     i1l3103:	
  9137                           ;incstack = 0
  9138                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
  9139                           
  9140                           
  9141                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
  9142  057A  3185  25A5  3185   	fcall	_i2c1_driver_sendACK
  9143  057D                     i1l3105:	
  9144                           
  9145                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
  9146  057D  3005               	movlw	5
  9147  057E                     i1l189:	
  9148  057E  0008               	return
  9149  057F                     __end_of_do_I2C_DO_ACK:	
  9150                           
  9151                           	psect	text27
  9152  055D                     __ptext27:	
  9153 ;; *************** function _do_I2C_RCEN *****************
  9154 ;; Defined at:
  9155 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
  9156 ;; Parameters:    Size  Location     Type
  9157 ;;		None
  9158 ;; Auto vars:     Size  Location     Type
  9159 ;;		None
  9160 ;; Return value:  Size  Location     Type
  9161 ;;                  1    wreg      enum E12722
  9162 ;; Registers used:
  9163 ;;		wreg, status,2, status,0, pclath, cstack
  9164 ;; Tracked objects:
  9165 ;;		On entry : 0/0
  9166 ;;		On exit  : 0/0
  9167 ;;		Unchanged: 0/0
  9168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9173 ;;Total ram usage:        0 bytes
  9174 ;; Hardware stack levels used:    1
  9175 ;; Hardware stack levels required when called:    1
  9176 ;; This function calls:
  9177 ;;		_i2c1_driver_startRX
  9178 ;; This function is called by:
  9179 ;;		_i2c_ISR
  9180 ;; This function uses a non-reentrant model
  9181 ;;
  9182                           
  9183                           
  9184                           ;psect for function _do_I2C_RCEN
  9185  055D                     _do_I2C_RCEN:	
  9186  055D                     i1l3095:	
  9187                           ;incstack = 0
  9188                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
  9189                           
  9190                           
  9191                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
  9192  055D  0020               	movlb	0	; select bank0
  9193  055E  11A0               	bcf	_i2c_status,3
  9194  055F                     i1l3097:	
  9195                           
  9196                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
  9197  055F  3185  25B5  3185   	fcall	_i2c1_driver_startRX
  9198  0562                     i1l3099:	
  9199                           
  9200                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
  9201  0562  3004               	movlw	4
  9202  0563                     i1l186:	
  9203  0563  0008               	return
  9204  0564                     __end_of_do_I2C_RCEN:	
  9205                           
  9206                           	psect	text28
  9207  0545                     __ptext28:	
  9208 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
  9209 ;; Defined at:
  9210 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
  9211 ;; Parameters:    Size  Location     Type
  9212 ;;		None
  9213 ;; Auto vars:     Size  Location     Type
  9214 ;;		None
  9215 ;; Return value:  Size  Location     Type
  9216 ;;                  1    wreg      enum E12722
  9217 ;; Registers used:
  9218 ;;		wreg, status,2, status,0, pclath, cstack
  9219 ;; Tracked objects:
  9220 ;;		On entry : 0/0
  9221 ;;		On exit  : 0/0
  9222 ;;		Unchanged: 0/0
  9223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9228 ;;Total ram usage:        0 bytes
  9229 ;; Hardware stack levels used:    1
  9230 ;; Hardware stack levels required when called:    1
  9231 ;; This function calls:
  9232 ;;		_i2c1_driver_TXData
  9233 ;; This function is called by:
  9234 ;;		_i2c_ISR
  9235 ;; This function uses a non-reentrant model
  9236 ;;
  9237                           
  9238                           
  9239                           ;psect for function _do_I2C_SEND_ADR_WRITE
  9240  0545                     _do_I2C_SEND_ADR_WRITE:	
  9241  0545                     i1l3087:	
  9242                           ;incstack = 0
  9243                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  9244                           
  9245                           
  9246                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
  9247  0545  0020               	movlb	0	; select bank0
  9248  0546  15A0               	bsf	_i2c_status,3
  9249  0547                     i1l3089:	
  9250                           
  9251                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
  9252  0547  3521               	lslf	_i2c_status+1,w
  9253  0548  3185  2598  3185   	fcall	_i2c1_driver_TXData
  9254  054B                     i1l3091:	
  9255                           
  9256                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
  9257  054B  3003               	movlw	3
  9258  054C                     i1l183:	
  9259  054C  0008               	return
  9260  054D                     __end_of_do_I2C_SEND_ADR_WRITE:	
  9261                           
  9262                           	psect	text29
  9263  0534                     __ptext29:	
  9264 ;; *************** function _do_I2C_SEND_ADR_READ *****************
  9265 ;; Defined at:
  9266 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
  9267 ;; Parameters:    Size  Location     Type
  9268 ;;		None
  9269 ;; Auto vars:     Size  Location     Type
  9270 ;;		None
  9271 ;; Return value:  Size  Location     Type
  9272 ;;                  1    wreg      enum E12722
  9273 ;; Registers used:
  9274 ;;		wreg, status,2, status,0, pclath, cstack
  9275 ;; Tracked objects:
  9276 ;;		On entry : 0/0
  9277 ;;		On exit  : 0/0
  9278 ;;		Unchanged: 0/0
  9279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9284 ;;Total ram usage:        0 bytes
  9285 ;; Hardware stack levels used:    1
  9286 ;; Hardware stack levels required when called:    1
  9287 ;; This function calls:
  9288 ;;		_i2c1_driver_TXData
  9289 ;; This function is called by:
  9290 ;;		_i2c_ISR
  9291 ;; This function uses a non-reentrant model
  9292 ;;
  9293                           
  9294                           
  9295                           ;psect for function _do_I2C_SEND_ADR_READ
  9296  0534                     _do_I2C_SEND_ADR_READ:	
  9297  0534                     i1l3079:	
  9298                           ;incstack = 0
  9299                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  9300                           
  9301                           
  9302                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
  9303  0534  0020               	movlb	0	; select bank0
  9304  0535  15A0               	bsf	_i2c_status,3
  9305  0536                     i1l3081:	
  9306                           
  9307                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
  9308  0536  1403               	setc
  9309  0537  0D21               	rlf	_i2c_status+1,w
  9310  0538  3185  2598  3185   	fcall	_i2c1_driver_TXData
  9311  053B                     i1l3083:	
  9312                           
  9313                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
  9314  053B  3005               	movlw	5
  9315  053C                     i1l180:	
  9316  053C  0008               	return
  9317  053D                     __end_of_do_I2C_SEND_ADR_READ:	
  9318                           
  9319                           	psect	text30
  9320  057F                     __ptext30:	
  9321 ;; *************** function _do_I2C_SEND_STOP *****************
  9322 ;; Defined at:
  9323 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
  9324 ;; Parameters:    Size  Location     Type
  9325 ;;		None
  9326 ;; Auto vars:     Size  Location     Type
  9327 ;;		None
  9328 ;; Return value:  Size  Location     Type
  9329 ;;                  1    wreg      enum E12722
  9330 ;; Registers used:
  9331 ;;		wreg, status,2, status,0, pclath, cstack
  9332 ;; Tracked objects:
  9333 ;;		On entry : 0/0
  9334 ;;		On exit  : 0/0
  9335 ;;		Unchanged: 0/0
  9336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9341 ;;Total ram usage:        0 bytes
  9342 ;; Hardware stack levels used:    1
  9343 ;; Hardware stack levels required when called:    1
  9344 ;; This function calls:
  9345 ;;		_i2c1_driver_stop
  9346 ;; This function is called by:
  9347 ;;		_do_I2C_DO_ADDRESS_NACK
  9348 ;;		_do_I2C_TX
  9349 ;;		_do_I2C_TX_EMPTY
  9350 ;;		_i2c_ISR
  9351 ;; This function uses a non-reentrant model
  9352 ;;
  9353                           
  9354                           
  9355                           ;psect for function _do_I2C_SEND_STOP
  9356  057F                     _do_I2C_SEND_STOP:	
  9357  057F                     i1l2923:	
  9358                           ;incstack = 0
  9359                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  9360                           
  9361                           
  9362                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
  9363  057F  3185  25B8  3185   	fcall	_i2c1_driver_stop
  9364  0582                     i1l2925:	
  9365                           
  9366                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
  9367  0582  3000               	movlw	0
  9368  0583                     i1l177:	
  9369  0583  0008               	return
  9370  0584                     __end_of_do_I2C_SEND_STOP:	
  9371                           
  9372                           	psect	text31
  9373  0584                     __ptext31:	
  9374 ;; *************** function _do_I2C_SEND_RESTART *****************
  9375 ;; Defined at:
  9376 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
  9377 ;; Parameters:    Size  Location     Type
  9378 ;;		None
  9379 ;; Auto vars:     Size  Location     Type
  9380 ;;		None
  9381 ;; Return value:  Size  Location     Type
  9382 ;;                  1    wreg      enum E12722
  9383 ;; Registers used:
  9384 ;;		wreg, status,2, status,0, pclath, cstack
  9385 ;; Tracked objects:
  9386 ;;		On entry : 0/0
  9387 ;;		On exit  : 0/0
  9388 ;;		Unchanged: 0/0
  9389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9394 ;;Total ram usage:        0 bytes
  9395 ;; Hardware stack levels used:    1
  9396 ;; Hardware stack levels required when called:    1
  9397 ;; This function calls:
  9398 ;;		_i2c1_driver_restart
  9399 ;; This function is called by:
  9400 ;;		_do_I2C_DO_ADDRESS_NACK
  9401 ;;		_do_I2C_TX_EMPTY
  9402 ;;		_i2c_ISR
  9403 ;; This function uses a non-reentrant model
  9404 ;;
  9405                           
  9406                           
  9407                           ;psect for function _do_I2C_SEND_RESTART
  9408  0584                     _do_I2C_SEND_RESTART:	
  9409  0584                     i1l2917:	
  9410                           ;incstack = 0
  9411                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  9412                           
  9413                           
  9414                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
  9415  0584  3185  25BB  3185   	fcall	_i2c1_driver_restart
  9416  0587                     i1l2919:	
  9417                           
  9418                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
  9419  0587  3001               	movlw	1
  9420  0588                     i1l174:	
  9421  0588  0008               	return
  9422  0589                     __end_of_do_I2C_SEND_RESTART:	
  9423                           
  9424                           	psect	text32
  9425  0589                     __ptext32:	
  9426 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
  9427 ;; Defined at:
  9428 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
  9429 ;; Parameters:    Size  Location     Type
  9430 ;;		None
  9431 ;; Auto vars:     Size  Location     Type
  9432 ;;		None
  9433 ;; Return value:  Size  Location     Type
  9434 ;;                  1    wreg      enum E12722
  9435 ;; Registers used:
  9436 ;;		wreg, status,2, status,0, pclath, cstack
  9437 ;; Tracked objects:
  9438 ;;		On entry : 0/0
  9439 ;;		On exit  : 0/0
  9440 ;;		Unchanged: 0/0
  9441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9446 ;;Total ram usage:        0 bytes
  9447 ;; Hardware stack levels used:    1
  9448 ;; Hardware stack levels required when called:    1
  9449 ;; This function calls:
  9450 ;;		_i2c1_driver_restart
  9451 ;; This function is called by:
  9452 ;;		_do_I2C_TX
  9453 ;;		_i2c_ISR
  9454 ;; This function uses a non-reentrant model
  9455 ;;
  9456                           
  9457                           
  9458                           ;psect for function _do_I2C_SEND_RESTART_WRITE
  9459  0589                     _do_I2C_SEND_RESTART_WRITE:	
  9460  0589                     i1l2911:	
  9461                           ;incstack = 0
  9462                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  9463                           
  9464                           
  9465                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
  9466  0589  3185  25BB  3185   	fcall	_i2c1_driver_restart
  9467  058C                     i1l2913:	
  9468                           
  9469                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
  9470  058C  3002               	movlw	2
  9471  058D                     i1l171:	
  9472  058D  0008               	return
  9473  058E                     __end_of_do_I2C_SEND_RESTART_WRITE:	
  9474                           
  9475                           	psect	text33
  9476  058E                     __ptext33:	
  9477 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
  9478 ;; Defined at:
  9479 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
  9480 ;; Parameters:    Size  Location     Type
  9481 ;;		None
  9482 ;; Auto vars:     Size  Location     Type
  9483 ;;		None
  9484 ;; Return value:  Size  Location     Type
  9485 ;;                  1    wreg      enum E12722
  9486 ;; Registers used:
  9487 ;;		wreg, status,2, status,0, pclath, cstack
  9488 ;; Tracked objects:
  9489 ;;		On entry : 0/0
  9490 ;;		On exit  : 0/0
  9491 ;;		Unchanged: 0/0
  9492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9497 ;;Total ram usage:        0 bytes
  9498 ;; Hardware stack levels used:    1
  9499 ;; Hardware stack levels required when called:    1
  9500 ;; This function calls:
  9501 ;;		_i2c1_driver_restart
  9502 ;; This function is called by:
  9503 ;;		_do_I2C_TX
  9504 ;;		_i2c_ISR
  9505 ;; This function uses a non-reentrant model
  9506 ;;
  9507                           
  9508                           
  9509                           ;psect for function _do_I2C_SEND_RESTART_READ
  9510  058E                     _do_I2C_SEND_RESTART_READ:	
  9511  058E                     i1l2905:	
  9512                           ;incstack = 0
  9513                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  9514                           
  9515                           
  9516                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
  9517  058E  3185  25BB  3185   	fcall	_i2c1_driver_restart
  9518  0591                     i1l2907:	
  9519                           
  9520                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
  9521  0591  3001               	movlw	1
  9522  0592                     i1l168:	
  9523  0592  0008               	return
  9524  0593                     __end_of_do_I2C_SEND_RESTART_READ:	
  9525                           
  9526                           	psect	text34
  9527  0593                     __ptext34:	
  9528 ;; *************** function _do_I2C_IDLE *****************
  9529 ;; Defined at:
  9530 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
  9531 ;; Parameters:    Size  Location     Type
  9532 ;;		None
  9533 ;; Auto vars:     Size  Location     Type
  9534 ;;		None
  9535 ;; Return value:  Size  Location     Type
  9536 ;;                  1    wreg      enum E12722
  9537 ;; Registers used:
  9538 ;;		wreg, status,2
  9539 ;; Tracked objects:
  9540 ;;		On entry : 0/0
  9541 ;;		On exit  : 0/0
  9542 ;;		Unchanged: 0/0
  9543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9548 ;;Total ram usage:        0 bytes
  9549 ;; Hardware stack levels used:    1
  9550 ;; This function calls:
  9551 ;;		Nothing
  9552 ;; This function is called by:
  9553 ;;		_i2c_ISR
  9554 ;; This function uses a non-reentrant model
  9555 ;;
  9556                           
  9557                           
  9558                           ;psect for function _do_I2C_IDLE
  9559  0593                     _do_I2C_IDLE:	
  9560  0593                     i1l3071:	
  9561                           ;incstack = 0
  9562                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
  9563                           
  9564                           
  9565                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
  9566  0593  0020               	movlb	0	; select bank0
  9567  0594  1020               	bcf	_i2c_status,0
  9568  0595                     i1l3073:	
  9569                           
  9570                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
  9571  0595  01AA               	clrf	_i2c_status+10
  9572  0596                     i1l3075:	
  9573                           
  9574                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
  9575  0596  300E               	movlw	14
  9576  0597                     i1l165:	
  9577  0597  0008               	return
  9578  0598                     __end_of_do_I2C_IDLE:	
  9579                           
  9580                           	psect	text35
  9581  054D                     __ptext35:	
  9582 ;; *************** function _do_I2C_RESET *****************
  9583 ;; Defined at:
  9584 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
  9585 ;; Parameters:    Size  Location     Type
  9586 ;;		None
  9587 ;; Auto vars:     Size  Location     Type
  9588 ;;		None
  9589 ;; Return value:  Size  Location     Type
  9590 ;;                  1    wreg      enum E12722
  9591 ;; Registers used:
  9592 ;;		wreg, status,2, status,0, pclath, cstack
  9593 ;; Tracked objects:
  9594 ;;		On entry : 0/0
  9595 ;;		On exit  : 0/0
  9596 ;;		Unchanged: 0/0
  9597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9602 ;;Total ram usage:        0 bytes
  9603 ;; Hardware stack levels used:    1
  9604 ;; Hardware stack levels required when called:    1
  9605 ;; This function calls:
  9606 ;;		_i2c1_driver_resetBus
  9607 ;; This function is called by:
  9608 ;;		_i2c_ISR
  9609 ;; This function uses a non-reentrant model
  9610 ;;
  9611                           
  9612                           
  9613                           ;psect for function _do_I2C_RESET
  9614  054D                     _do_I2C_RESET:	
  9615  054D                     i1l3061:	
  9616                           ;incstack = 0
  9617                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
  9618                           
  9619                           
  9620                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
  9621  054D  3185  25C4  3185   	fcall	_i2c1_driver_resetBus
  9622  0550                     i1l3063:	
  9623                           
  9624                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
  9625  0550  0020               	movlb	0	; select bank0
  9626  0551  1020               	bcf	_i2c_status,0
  9627  0552                     i1l3065:	
  9628                           
  9629                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
  9630  0552  01AA               	clrf	_i2c_status+10
  9631  0553                     i1l3067:	
  9632                           
  9633                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
  9634  0553  300E               	movlw	14
  9635  0554                     i1l162:	
  9636  0554  0008               	return
  9637  0555                     __end_of_do_I2C_RESET:	
  9638                           
  9639                           	psect	text36
  9640  0282                     __ptext36:	
  9641 ;; *************** function _do_I2C_TX_EMPTY *****************
  9642 ;; Defined at:
  9643 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
  9644 ;; Parameters:    Size  Location     Type
  9645 ;;		None
  9646 ;; Auto vars:     Size  Location     Type
  9647 ;;		None
  9648 ;; Return value:  Size  Location     Type
  9649 ;;                  1    wreg      enum E12722
  9650 ;; Registers used:
  9651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9652 ;; Tracked objects:
  9653 ;;		On entry : 0/0
  9654 ;;		On exit  : 0/0
  9655 ;;		Unchanged: 0/0
  9656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9659 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9660 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9661 ;;Total ram usage:        3 bytes
  9662 ;; Hardware stack levels used:    1
  9663 ;; Hardware stack levels required when called:    3
  9664 ;; This function calls:
  9665 ;;		Absolute function
  9666 ;;		_do_I2C_SEND_RESTART
  9667 ;;		_do_I2C_SEND_STOP
  9668 ;;		_i2c_restartWrite
  9669 ;;		_mssp1_setIRQ
  9670 ;;		_rd1RegCompleteHandler
  9671 ;;		_rd2RegCompleteHandler
  9672 ;;		_rdBlkRegCompleteHandler
  9673 ;;		_returnReset
  9674 ;;		_returnStop
  9675 ;;		_wr1RegCompleteHandler
  9676 ;;		_wr2RegCompleteHandler
  9677 ;; This function is called by:
  9678 ;;		_i2c_ISR
  9679 ;; This function uses a non-reentrant model
  9680 ;;
  9681                           
  9682                           
  9683                           ;psect for function _do_I2C_TX_EMPTY
  9684  0282                     _do_I2C_TX_EMPTY:	
  9685  0282                     i1l3997:	
  9686                           ;incstack = 0
  9687                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9688                           
  9689                           
  9690                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
  9691  0282  0020               	movlb	0	; select bank0
  9692  0283  1520               	bsf	_i2c_status,2
  9693                           
  9694                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
  9695  0284  2A92               	goto	i1l4015
  9696  0285                     i1l3999:	
  9697                           
  9698                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
  9699  0285  3185  2584  3182   	fcall	_do_I2C_SEND_RESTART
  9700  0288  2AB4               	goto	i1l237
  9701  0289                     i1l4003:	
  9702                           
  9703                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
  9704  0289  3185  25AF  3182   	fcall	_mssp1_setIRQ
  9705  028C                     i1l4005:	
  9706                           
  9707                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
  9708  028C  3003               	movlw	3
  9709  028D  2AB4               	goto	i1l237
  9710  028E                     i1l4009:	
  9711                           
  9712                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
  9713  028E  3185  257F  3182   	fcall	_do_I2C_SEND_STOP
  9714  0291  2AB4               	goto	i1l237
  9715  0292                     i1l4015:	
  9716  0292  0837               	movf	low ((_i2c_status| 0+23)),w
  9717  0293  00F0               	movwf	??_do_I2C_TX_EMPTY
  9718  0294  0870               	movf	??_do_I2C_TX_EMPTY,w
  9719  0295  00F6               	movwf	rdBlkRegCompleteHandler@p
  9720  0296  300B               	movlw	11
  9721  0297  3E20               	addlw	(low (_i2c_status| 0))& (0+255)
  9722  0298  0086               	movwf	6
  9723  0299  0187               	clrf	7
  9724  029A  3F41               	moviw [1]fsr1
  9725  029B  008A               	movwf	10
  9726  029C  3F40               	moviw [0]fsr1
  9727  029D  000A               	callw
  9728  029E  3182               	pagesel	$
  9729  029F  00F1               	movwf	??_do_I2C_TX_EMPTY+1
  9730  02A0  01F2               	clrf	??_do_I2C_TX_EMPTY+2
  9731                           
  9732                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9733                           ; Switch size 1, requested type "simple"
  9734                           ; Number of cases is 1, Range of values is 0 to 0
  9735                           ; switch strategies available:
  9736                           ; Name         Instructions Cycles
  9737                           ; simple_byte            4     3 (average)
  9738                           ; direct_byte            8     6 (fixed)
  9739                           ; jumptable            260     6 (fixed)
  9740                           ;	Chosen strategy is simple_byte
  9741  02A1  0872               	movf	??_do_I2C_TX_EMPTY+2,w
  9742  02A2  3A00               	xorlw	0	; case 0
  9743  02A3  1903               	skipnz
  9744  02A4  2AA6               	goto	i1l4565
  9745  02A5  2A8E               	goto	i1l4009
  9746  02A6                     i1l4565:	
  9747                           
  9748                           ; Switch size 1, requested type "simple"
  9749                           ; Number of cases is 4, Range of values is 1 to 4
  9750                           ; switch strategies available:
  9751                           ; Name         Instructions Cycles
  9752                           ; simple_byte           13     7 (average)
  9753                           ; direct_byte           17     9 (fixed)
  9754                           ; jumptable            263     9 (fixed)
  9755                           ;	Chosen strategy is simple_byte
  9756  02A6  0871               	movf	??_do_I2C_TX_EMPTY+1,w
  9757  02A7  3A01               	xorlw	1	; case 1
  9758  02A8  1903               	skipnz
  9759  02A9  2A8E               	goto	i1l4009
  9760  02AA  3A03               	xorlw	3	; case 2
  9761  02AB  1903               	skipnz
  9762  02AC  2A85               	goto	i1l3999
  9763  02AD  3A01               	xorlw	1	; case 3
  9764  02AE  1903               	skipnz
  9765  02AF  2A85               	goto	i1l3999
  9766  02B0  3A07               	xorlw	7	; case 4
  9767  02B1  1903               	skipnz
  9768  02B2  2A89               	goto	i1l4003
  9769  02B3  2A8E               	goto	i1l4009
  9770  02B4                     i1l237:	
  9771  02B4  0008               	return
  9772  02B5                     __end_of_do_I2C_TX_EMPTY:	
  9773                           
  9774                           	psect	text37
  9775  05AF                     __ptext37:	
  9776 ;; *************** function _mssp1_setIRQ *****************
  9777 ;; Defined at:
  9778 ;;		line 59 in file "mcc_generated_files/i2c1_driver.c"
  9779 ;; Parameters:    Size  Location     Type
  9780 ;;		None
  9781 ;; Auto vars:     Size  Location     Type
  9782 ;;		None
  9783 ;; Return value:  Size  Location     Type
  9784 ;;                  1    wreg      void 
  9785 ;; Registers used:
  9786 ;;		None
  9787 ;; Tracked objects:
  9788 ;;		On entry : 0/0
  9789 ;;		On exit  : 0/0
  9790 ;;		Unchanged: 0/0
  9791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9796 ;;Total ram usage:        0 bytes
  9797 ;; Hardware stack levels used:    1
  9798 ;; This function calls:
  9799 ;;		Nothing
  9800 ;; This function is called by:
  9801 ;;		_do_I2C_TX_EMPTY
  9802 ;; This function uses a non-reentrant model
  9803 ;;
  9804                           
  9805                           
  9806                           ;psect for function _mssp1_setIRQ
  9807  05AF                     _mssp1_setIRQ:	
  9808  05AF                     i1l2955:	
  9809                           ;incstack = 0
  9810                           ; Regs used in _mssp1_setIRQ: []
  9811                           
  9812                           
  9813                           ;mcc_generated_files/i2c1_driver.c: 61:     else
  9814  05AF  002E               	movlb	14	; select bank14
  9815  05B0  140F               	bsf	15,0	;volatile
  9816  05B1                     i1l636:	
  9817  05B1  0008               	return
  9818  05B2                     __end_of_mssp1_setIRQ:	
  9819                           
  9820                           	psect	text38
  9821  0555                     __ptext38:	
  9822 ;; *************** function _i2c1_driver_isNACK *****************
  9823 ;; Defined at:
  9824 ;;		line 162 in file "mcc_generated_files/i2c1_driver.c"
  9825 ;; Parameters:    Size  Location     Type
  9826 ;;		None
  9827 ;; Auto vars:     Size  Location     Type
  9828 ;;		None
  9829 ;; Return value:  Size  Location     Type
  9830 ;;		None               void
  9831 ;; Registers used:
  9832 ;;		wreg, status,2, status,0
  9833 ;; Tracked objects:
  9834 ;;		On entry : 0/0
  9835 ;;		On exit  : 0/0
  9836 ;;		Unchanged: 0/0
  9837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9840 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9841 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9842 ;;Total ram usage:        1 bytes
  9843 ;; Hardware stack levels used:    1
  9844 ;; This function calls:
  9845 ;;		Nothing
  9846 ;; This function is called by:
  9847 ;;		_do_I2C_TX
  9848 ;;		_i2c_ISR
  9849 ;; This function uses a non-reentrant model
  9850 ;;
  9851                           
  9852                           
  9853                           ;psect for function _i2c1_driver_isNACK
  9854  0555                     _i2c1_driver_isNACK:	
  9855  0555                     i1l2947:	
  9856                           ;incstack = 0
  9857                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
  9858                           
  9859                           
  9860                           ;mcc_generated_files/i2c1_driver.c: 164:     return SSP1CON2bits.ACKSTAT;
  9861  0555  0023               	movlb	3	; select bank3
  9862  0556  0E11               	swapf	17,w	;volatile
  9863  0557  0C89               	rrf	9,f
  9864  0558  0C89               	rrf	9,f
  9865  0559  3901               	andlw	1
  9866  055A  00F0               	movwf	??_i2c1_driver_isNACK
  9867  055B  0C70               	rrf	??_i2c1_driver_isNACK,w
  9868  055C                     i1l671:	
  9869  055C  0008               	return
  9870  055D                     __end_of_i2c1_driver_isNACK:	
  9871                           
  9872                           	psect	text39
  9873  0598                     __ptext39:	
  9874 ;; *************** function _i2c1_driver_TXData *****************
  9875 ;; Defined at:
  9876 ;;		line 187 in file "mcc_generated_files/i2c1_driver.c"
  9877 ;; Parameters:    Size  Location     Type
  9878 ;;  d               1    wreg     unsigned char 
  9879 ;; Auto vars:     Size  Location     Type
  9880 ;;  d               1    0[COMMON] unsigned char 
  9881 ;; Return value:  Size  Location     Type
  9882 ;;                  1    wreg      void 
  9883 ;; Registers used:
  9884 ;;		wreg
  9885 ;; Tracked objects:
  9886 ;;		On entry : 0/0
  9887 ;;		On exit  : 0/0
  9888 ;;		Unchanged: 0/0
  9889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9891 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9893 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9894 ;;Total ram usage:        1 bytes
  9895 ;; Hardware stack levels used:    1
  9896 ;; This function calls:
  9897 ;;		Nothing
  9898 ;; This function is called by:
  9899 ;;		_do_I2C_SEND_ADR_READ
  9900 ;;		_do_I2C_SEND_ADR_WRITE
  9901 ;;		_do_I2C_TX
  9902 ;; This function uses a non-reentrant model
  9903 ;;
  9904                           
  9905                           
  9906                           ;psect for function _i2c1_driver_TXData
  9907  0598                     _i2c1_driver_TXData:	
  9908                           
  9909                           ;incstack = 0
  9910                           ; Regs used in _i2c1_driver_TXData: [wreg]
  9911                           ;i2c1_driver_TXData@d stored from wreg
  9912  0598  00F0               	movwf	i2c1_driver_TXData@d
  9913  0599                     i1l2929:	
  9914                           
  9915                           ;mcc_generated_files/i2c1_driver.c: 187: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 188: {;mcc_generated_files/i2c1_driver.c: 18
      +                          9:     SSP1BUF = d;
  9916  0599  0870               	movf	i2c1_driver_TXData@d,w
  9917  059A  0023               	movlb	3	; select bank3
  9918  059B  008C               	movwf	12	;volatile
  9919  059C                     i1l686:	
  9920  059C  0008               	return
  9921  059D                     __end_of_i2c1_driver_TXData:	
  9922                           
  9923                           	psect	text40
  9924  05B2                     __ptext40:	
  9925 ;; *************** function _i2c1_driver_getRXData *****************
  9926 ;; Defined at:
  9927 ;;		line 172 in file "mcc_generated_files/i2c1_driver.c"
  9928 ;; Parameters:    Size  Location     Type
  9929 ;;		None
  9930 ;; Auto vars:     Size  Location     Type
  9931 ;;		None
  9932 ;; Return value:  Size  Location     Type
  9933 ;;                  1    wreg      unsigned char 
  9934 ;; Registers used:
  9935 ;;		wreg
  9936 ;; Tracked objects:
  9937 ;;		On entry : 0/0
  9938 ;;		On exit  : 0/0
  9939 ;;		Unchanged: 0/0
  9940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9945 ;;Total ram usage:        0 bytes
  9946 ;; Hardware stack levels used:    1
  9947 ;; This function calls:
  9948 ;;		Nothing
  9949 ;; This function is called by:
  9950 ;;		_do_I2C_RX
  9951 ;; This function uses a non-reentrant model
  9952 ;;
  9953                           
  9954                           
  9955                           ;psect for function _i2c1_driver_getRXData
  9956  05B2                     _i2c1_driver_getRXData:	
  9957  05B2                     i1l2951:	
  9958                           ;incstack = 0
  9959                           ; Regs used in _i2c1_driver_getRXData: [wreg]
  9960                           
  9961                           
  9962                           ;mcc_generated_files/i2c1_driver.c: 174:     return SSP1BUF;
  9963  05B2  0023               	movlb	3	; select bank3
  9964  05B3  080C               	movf	12,w	;volatile
  9965  05B4                     i1l677:	
  9966  05B4  0008               	return
  9967  05B5                     __end_of_i2c1_driver_getRXData:	
  9968                           
  9969                           	psect	text41
  9970  05A1                     __ptext41:	
  9971 ;; *************** function _i2c1_driver_sendNACK *****************
  9972 ;; Defined at:
  9973 ;;		line 203 in file "mcc_generated_files/i2c1_driver.c"
  9974 ;; Parameters:    Size  Location     Type
  9975 ;;		None
  9976 ;; Auto vars:     Size  Location     Type
  9977 ;;		None
  9978 ;; Return value:  Size  Location     Type
  9979 ;;                  1    wreg      void 
  9980 ;; Registers used:
  9981 ;;		None
  9982 ;; Tracked objects:
  9983 ;;		On entry : 0/0
  9984 ;;		On exit  : 0/0
  9985 ;;		Unchanged: 0/0
  9986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9991 ;;Total ram usage:        0 bytes
  9992 ;; Hardware stack levels used:    1
  9993 ;; This function calls:
  9994 ;;		Nothing
  9995 ;; This function is called by:
  9996 ;;		_do_I2C_DO_NACK_STOP
  9997 ;;		_do_I2C_DO_NACK_RESTART
  9998 ;; This function uses a non-reentrant model
  9999 ;;
 10000                           
 10001                           
 10002                           ;psect for function _i2c1_driver_sendNACK
 10003  05A1                     _i2c1_driver_sendNACK:	
 10004  05A1                     i1l2895:	
 10005                           ;incstack = 0
 10006                           ; Regs used in _i2c1_driver_sendNACK: []
 10007                           
 10008                           
 10009                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKDT = 1;
 10010  05A1  0023               	movlb	3	; select bank3
 10011  05A2  1691               	bsf	17,5	;volatile
 10012                           
 10013                           ;mcc_generated_files/i2c1_driver.c: 206:     SSP1CON2bits.ACKEN = 1;
 10014  05A3  1611               	bsf	17,4	;volatile
 10015  05A4                     i1l695:	
 10016  05A4  0008               	return
 10017  05A5                     __end_of_i2c1_driver_sendNACK:	
 10018                           
 10019                           	psect	text42
 10020  05C4                     __ptext42:	
 10021 ;; *************** function _i2c1_driver_resetBus *****************
 10022 ;; Defined at:
 10023 ;;		line 142 in file "mcc_generated_files/i2c1_driver.c"
 10024 ;; Parameters:    Size  Location     Type
 10025 ;;		None
 10026 ;; Auto vars:     Size  Location     Type
 10027 ;;		None
 10028 ;; Return value:  Size  Location     Type
 10029 ;;                  1    wreg      void 
 10030 ;; Registers used:
 10031 ;;		None
 10032 ;; Tracked objects:
 10033 ;;		On entry : 0/0
 10034 ;;		On exit  : 0/0
 10035 ;;		Unchanged: 0/0
 10036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10041 ;;Total ram usage:        0 bytes
 10042 ;; Hardware stack levels used:    1
 10043 ;; This function calls:
 10044 ;;		Nothing
 10045 ;; This function is called by:
 10046 ;;		_do_I2C_RESET
 10047 ;; This function uses a non-reentrant model
 10048 ;;
 10049                           
 10050                           
 10051                           ;psect for function _i2c1_driver_resetBus
 10052  05C4                     _i2c1_driver_resetBus:	
 10053  05C4                     i1l659:	
 10054                           ;incstack = 0
 10055                           ; Regs used in _i2c1_driver_resetBus: []
 10056                           
 10057  05C4  0008               	return
 10058  05C5                     __end_of_i2c1_driver_resetBus:	
 10059                           
 10060                           	psect	text43
 10061  05B5                     __ptext43:	
 10062 ;; *************** function _i2c1_driver_startRX *****************
 10063 ;; Defined at:
 10064 ;;		line 167 in file "mcc_generated_files/i2c1_driver.c"
 10065 ;; Parameters:    Size  Location     Type
 10066 ;;		None
 10067 ;; Auto vars:     Size  Location     Type
 10068 ;;		None
 10069 ;; Return value:  Size  Location     Type
 10070 ;;                  1    wreg      void 
 10071 ;; Registers used:
 10072 ;;		None
 10073 ;; Tracked objects:
 10074 ;;		On entry : 0/0
 10075 ;;		On exit  : 0/0
 10076 ;;		Unchanged: 0/0
 10077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10082 ;;Total ram usage:        0 bytes
 10083 ;; Hardware stack levels used:    1
 10084 ;; This function calls:
 10085 ;;		Nothing
 10086 ;; This function is called by:
 10087 ;;		_do_I2C_RCEN
 10088 ;; This function uses a non-reentrant model
 10089 ;;
 10090                           
 10091                           
 10092                           ;psect for function _i2c1_driver_startRX
 10093  05B5                     _i2c1_driver_startRX:	
 10094  05B5                     i1l2931:	
 10095                           ;incstack = 0
 10096                           ; Regs used in _i2c1_driver_startRX: []
 10097                           
 10098                           
 10099                           ;mcc_generated_files/i2c1_driver.c: 169:     SSP1CON2bits.RCEN = 1;
 10100  05B5  0023               	movlb	3	; select bank3
 10101  05B6  1591               	bsf	17,3	;volatile
 10102  05B7                     i1l674:	
 10103  05B7  0008               	return
 10104  05B8                     __end_of_i2c1_driver_startRX:	
 10105                           
 10106                           	psect	text44
 10107  0421                     __ptext44:	
 10108 ;; *************** function _rdBlkRegCompleteHandler *****************
 10109 ;; Defined at:
 10110 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10111 ;; Parameters:    Size  Location     Type
 10112 ;;  p               1    6[COMMON] PTR void 
 10113 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10114 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10115 ;; Auto vars:     Size  Location     Type
 10116 ;;		None
 10117 ;; Return value:  Size  Location     Type
 10118 ;;                  1    wreg      enum E358
 10119 ;; Registers used:
 10120 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10121 ;; Tracked objects:
 10122 ;;		On entry : 0/0
 10123 ;;		On exit  : 0/0
 10124 ;;		Unchanged: 0/0
 10125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10126 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10129 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10130 ;;Total ram usage:        1 bytes
 10131 ;; Hardware stack levels used:    1
 10132 ;; Hardware stack levels required when called:    2
 10133 ;; This function calls:
 10134 ;;		_i2c_setBuffer
 10135 ;;		_i2c_setDataCompleteCallback
 10136 ;; This function is called by:
 10137 ;;		_i2c_readDataBlock
 10138 ;;		_do_I2C_DO_ADDRESS_NACK
 10139 ;;		_do_I2C_TX
 10140 ;;		_do_I2C_RX
 10141 ;;		_do_I2C_TX_EMPTY
 10142 ;; This function uses a non-reentrant model
 10143 ;;
 10144                           
 10145                           
 10146                           ;psect for function _rdBlkRegCompleteHandler
 10147  0421                     _rdBlkRegCompleteHandler:	
 10148  0421                     i1l3869:	
 10149                           ;incstack = 0
 10150                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 10151                           
 10152                           
 10153                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
 10154  0421  0876               	movf	rdBlkRegCompleteHandler@p,w
 10155  0422  0086               	movwf	6
 10156  0423  0187               	clrf	7
 10157  0424  3F40               	moviw [0]fsr1
 10158  0425  00F0               	movwf	i2c_setBuffer@bufferSize
 10159  0426  3F41               	moviw [1]fsr1
 10160  0427  00F1               	movwf	i2c_setBuffer@bufferSize+1
 10161  0428  0876               	movf	rdBlkRegCompleteHandler@p,w
 10162  0429  3E02               	addlw	2
 10163  042A  0086               	movwf	6
 10164  042B  0187               	clrf	7
 10165  042C  0801               	movf	1,w
 10166  042D  3184  24E5  3184   	fcall	_i2c_setBuffer
 10167                           
 10168                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 10169  0430  3000               	movlw	0
 10170  0431  0020               	movlb	0	; select bank0
 10171  0432  00D0               	movwf	i2c_setDataCompleteCallback@cb
 10172  0433  00D1               	movwf	i2c_setDataCompleteCallback@cb+1
 10173  0434  01D2               	clrf	i2c_setDataCompleteCallback@p
 10174  0435  3185  2504  3184   	fcall	_i2c_setDataCompleteCallback
 10175  0438                     i1l3871:	
 10176                           
 10177                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
 10178  0438  3002               	movlw	2
 10179  0439                     i1l340:	
 10180  0439  0008               	return
 10181  043A                     __end_of_rdBlkRegCompleteHandler:	
 10182                           
 10183                           	psect	text45
 10184  047C                     __ptext45:	
 10185 ;; *************** function _rd2RegCompleteHandler *****************
 10186 ;; Defined at:
 10187 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10188 ;; Parameters:    Size  Location     Type
 10189 ;;  p               1    6[COMMON] PTR void 
 10190 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10191 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10192 ;; Auto vars:     Size  Location     Type
 10193 ;;		None
 10194 ;; Return value:  Size  Location     Type
 10195 ;;                  1    wreg      enum E358
 10196 ;; Registers used:
 10197 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10198 ;; Tracked objects:
 10199 ;;		On entry : 0/0
 10200 ;;		On exit  : 0/0
 10201 ;;		Unchanged: 0/0
 10202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10203 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10206 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10207 ;;Total ram usage:        1 bytes
 10208 ;; Hardware stack levels used:    1
 10209 ;; Hardware stack levels required when called:    2
 10210 ;; This function calls:
 10211 ;;		_i2c_setBuffer
 10212 ;;		_i2c_setDataCompleteCallback
 10213 ;; This function is called by:
 10214 ;;		_i2c_read2ByteRegister
 10215 ;;		_do_I2C_DO_ADDRESS_NACK
 10216 ;;		_do_I2C_TX
 10217 ;;		_do_I2C_RX
 10218 ;;		_do_I2C_TX_EMPTY
 10219 ;; This function uses a non-reentrant model
 10220 ;;
 10221                           
 10222                           
 10223                           ;psect for function _rd2RegCompleteHandler
 10224  047C                     _rd2RegCompleteHandler:	
 10225  047C                     i1l3853:	
 10226                           ;incstack = 0
 10227                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10228                           
 10229                           
 10230                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
 10231  047C  3002               	movlw	2
 10232  047D  00F0               	movwf	i2c_setBuffer@bufferSize
 10233  047E  3000               	movlw	0
 10234  047F  00F1               	movwf	i2c_setBuffer@bufferSize+1
 10235  0480  0876               	movf	rd2RegCompleteHandler@p,w
 10236  0481  3184  24E5  3184   	fcall	_i2c_setBuffer
 10237  0484                     i1l3855:	
 10238                           
 10239                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 10240  0484  3000               	movlw	0
 10241  0485  0020               	movlb	0	; select bank0
 10242  0486  00D0               	movwf	i2c_setDataCompleteCallback@cb
 10243  0487  00D1               	movwf	i2c_setDataCompleteCallback@cb+1
 10244  0488  01D2               	clrf	i2c_setDataCompleteCallback@p
 10245  0489  3185  2504  3184   	fcall	_i2c_setDataCompleteCallback
 10246  048C                     i1l3857:	
 10247                           
 10248                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
 10249  048C  3002               	movlw	2
 10250  048D                     i1l316:	
 10251  048D  0008               	return
 10252  048E                     __end_of_rd2RegCompleteHandler:	
 10253                           
 10254                           	psect	text46
 10255  048E                     __ptext46:	
 10256 ;; *************** function _rd1RegCompleteHandler *****************
 10257 ;; Defined at:
 10258 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10259 ;; Parameters:    Size  Location     Type
 10260 ;;  p               1    6[COMMON] PTR void 
 10261 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10262 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10263 ;; Auto vars:     Size  Location     Type
 10264 ;;		None
 10265 ;; Return value:  Size  Location     Type
 10266 ;;                  1    wreg      enum E358
 10267 ;; Registers used:
 10268 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10269 ;; Tracked objects:
 10270 ;;		On entry : 0/0
 10271 ;;		On exit  : 0/0
 10272 ;;		Unchanged: 0/0
 10273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10274 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10277 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10278 ;;Total ram usage:        1 bytes
 10279 ;; Hardware stack levels used:    1
 10280 ;; Hardware stack levels required when called:    2
 10281 ;; This function calls:
 10282 ;;		_i2c_setBuffer
 10283 ;;		_i2c_setDataCompleteCallback
 10284 ;; This function is called by:
 10285 ;;		_i2c_read1ByteRegister
 10286 ;;		_do_I2C_DO_ADDRESS_NACK
 10287 ;;		_do_I2C_TX
 10288 ;;		_do_I2C_RX
 10289 ;;		_do_I2C_TX_EMPTY
 10290 ;; This function uses a non-reentrant model
 10291 ;;
 10292                           
 10293                           
 10294                           ;psect for function _rd1RegCompleteHandler
 10295  048E                     _rd1RegCompleteHandler:	
 10296  048E                     i1l3845:	
 10297                           ;incstack = 0
 10298                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10299                           
 10300                           
 10301                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
 10302  048E  3001               	movlw	1
 10303  048F  00F0               	movwf	i2c_setBuffer@bufferSize
 10304  0490  3000               	movlw	0
 10305  0491  00F1               	movwf	i2c_setBuffer@bufferSize+1
 10306  0492  0876               	movf	rd1RegCompleteHandler@p,w
 10307  0493  3184  24E5  3184   	fcall	_i2c_setBuffer
 10308  0496                     i1l3847:	
 10309                           
 10310                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 10311  0496  3000               	movlw	0
 10312  0497  0020               	movlb	0	; select bank0
 10313  0498  00D0               	movwf	i2c_setDataCompleteCallback@cb
 10314  0499  00D1               	movwf	i2c_setDataCompleteCallback@cb+1
 10315  049A  01D2               	clrf	i2c_setDataCompleteCallback@p
 10316  049B  3185  2504  3184   	fcall	_i2c_setDataCompleteCallback
 10317  049E                     i1l3849:	
 10318                           
 10319                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
 10320  049E  3002               	movlw	2
 10321  049F                     i1l301:	
 10322  049F  0008               	return
 10323  04A0                     __end_of_rd1RegCompleteHandler:	
 10324                           
 10325                           	psect	text47
 10326  04A0                     __ptext47:	
 10327 ;; *************** function _wr1RegCompleteHandler *****************
 10328 ;; Defined at:
 10329 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10330 ;; Parameters:    Size  Location     Type
 10331 ;;  p               1    6[COMMON] PTR void 
 10332 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10333 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10334 ;; Auto vars:     Size  Location     Type
 10335 ;;		None
 10336 ;; Return value:  Size  Location     Type
 10337 ;;                  1    wreg      enum E358
 10338 ;; Registers used:
 10339 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10340 ;; Tracked objects:
 10341 ;;		On entry : 0/0
 10342 ;;		On exit  : 0/0
 10343 ;;		Unchanged: 0/0
 10344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10345 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10348 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10349 ;;Total ram usage:        1 bytes
 10350 ;; Hardware stack levels used:    1
 10351 ;; Hardware stack levels required when called:    2
 10352 ;; This function calls:
 10353 ;;		_i2c_setBuffer
 10354 ;;		_i2c_setDataCompleteCallback
 10355 ;; This function is called by:
 10356 ;;		_i2c_write1ByteRegister
 10357 ;;		_do_I2C_DO_ADDRESS_NACK
 10358 ;;		_do_I2C_TX
 10359 ;;		_do_I2C_RX
 10360 ;;		_do_I2C_TX_EMPTY
 10361 ;; This function uses a non-reentrant model
 10362 ;;
 10363                           
 10364                           
 10365                           ;psect for function _wr1RegCompleteHandler
 10366  04A0                     _wr1RegCompleteHandler:	
 10367  04A0                     i1l3837:	
 10368                           ;incstack = 0
 10369                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10370                           
 10371                           
 10372                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
 10373  04A0  3001               	movlw	1
 10374  04A1  00F0               	movwf	i2c_setBuffer@bufferSize
 10375  04A2  3000               	movlw	0
 10376  04A3  00F1               	movwf	i2c_setBuffer@bufferSize+1
 10377  04A4  0876               	movf	wr1RegCompleteHandler@p,w
 10378  04A5  3184  24E5  3184   	fcall	_i2c_setBuffer
 10379  04A8                     i1l3839:	
 10380                           
 10381                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 10382  04A8  3000               	movlw	0
 10383  04A9  0020               	movlb	0	; select bank0
 10384  04AA  00D0               	movwf	i2c_setDataCompleteCallback@cb
 10385  04AB  00D1               	movwf	i2c_setDataCompleteCallback@cb+1
 10386  04AC  01D2               	clrf	i2c_setDataCompleteCallback@p
 10387  04AD  3185  2504  3184   	fcall	_i2c_setDataCompleteCallback
 10388  04B0                     i1l3841:	
 10389                           
 10390                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
 10391  04B0  3004               	movlw	4
 10392  04B1                     i1l280:	
 10393  04B1  0008               	return
 10394  04B2                     __end_of_wr1RegCompleteHandler:	
 10395                           
 10396                           	psect	text48
 10397  05BE                     __ptext48:	
 10398 ;; *************** function _i2c_restartWrite *****************
 10399 ;; Defined at:
 10400 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 10401 ;; Parameters:    Size  Location     Type
 10402 ;;  p               1    6[COMMON] PTR void 
 10403 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10404 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10405 ;; Auto vars:     Size  Location     Type
 10406 ;;		None
 10407 ;; Return value:  Size  Location     Type
 10408 ;;                  1    wreg      enum E358
 10409 ;; Registers used:
 10410 ;;		wreg
 10411 ;; Tracked objects:
 10412 ;;		On entry : 0/0
 10413 ;;		On exit  : 0/0
 10414 ;;		Unchanged: 0/0
 10415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10416 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10419 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10420 ;;Total ram usage:        1 bytes
 10421 ;; Hardware stack levels used:    1
 10422 ;; This function calls:
 10423 ;;		Nothing
 10424 ;; This function is called by:
 10425 ;;		_i2c_write1ByteRegister
 10426 ;;		_i2c_writeNBytes
 10427 ;;		_i2c_read1ByteRegister
 10428 ;;		_i2c_read2ByteRegister
 10429 ;;		_i2c_write2ByteRegister
 10430 ;;		_i2c_readDataBlock
 10431 ;;		_do_I2C_DO_ADDRESS_NACK
 10432 ;;		_do_I2C_TX
 10433 ;;		_do_I2C_RX
 10434 ;;		_do_I2C_TX_EMPTY
 10435 ;; This function uses a non-reentrant model
 10436 ;;
 10437                           
 10438                           
 10439                           ;psect for function _i2c_restartWrite
 10440  05BE                     _i2c_restartWrite:	
 10441  05BE                     i1l3003:	
 10442                           ;incstack = 0
 10443                           ; Regs used in _i2c_restartWrite: [wreg]
 10444                           
 10445                           
 10446                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
 10447  05BE  3003               	movlw	3
 10448  05BF                     i1l367:	
 10449  05BF  0008               	return
 10450  05C0                     __end_of_i2c_restartWrite:	
 10451                           
 10452                           	psect	text49
 10453  05C0                     __ptext49:	
 10454 ;; *************** function _returnReset *****************
 10455 ;; Defined at:
 10456 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 10457 ;; Parameters:    Size  Location     Type
 10458 ;;  p               1    6[COMMON] PTR void 
 10459 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10460 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10461 ;; Auto vars:     Size  Location     Type
 10462 ;;		None
 10463 ;; Return value:  Size  Location     Type
 10464 ;;                  1    wreg      enum E12568
 10465 ;; Registers used:
 10466 ;;		wreg
 10467 ;; Tracked objects:
 10468 ;;		On entry : 0/0
 10469 ;;		On exit  : 0/0
 10470 ;;		Unchanged: 0/0
 10471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10472 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10475 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10476 ;;Total ram usage:        1 bytes
 10477 ;; Hardware stack levels used:    1
 10478 ;; This function calls:
 10479 ;;		Nothing
 10480 ;; This function is called by:
 10481 ;;		_i2c_open
 10482 ;;		_do_I2C_DO_ADDRESS_NACK
 10483 ;;		_do_I2C_TX
 10484 ;;		_do_I2C_RX
 10485 ;;		_do_I2C_TX_EMPTY
 10486 ;; This function uses a non-reentrant model
 10487 ;;
 10488                           
 10489                           
 10490                           ;psect for function _returnReset
 10491  05C0                     _returnReset:	
 10492  05C0                     i1l2961:	
 10493                           ;incstack = 0
 10494                           ; Regs used in _returnReset: [wreg]
 10495                           
 10496                           
 10497                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 10498  05C0  3005               	movlw	5
 10499  05C1                     i1l256:	
 10500  05C1  0008               	return
 10501  05C2                     __end_of_returnReset:	
 10502                           
 10503                           	psect	text50
 10504  05C2                     __ptext50:	
 10505 ;; *************** function _returnStop *****************
 10506 ;; Defined at:
 10507 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 10508 ;; Parameters:    Size  Location     Type
 10509 ;;  p               1    6[COMMON] PTR void 
 10510 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10511 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10512 ;; Auto vars:     Size  Location     Type
 10513 ;;		None
 10514 ;; Return value:  Size  Location     Type
 10515 ;;                  1    wreg      enum E12568
 10516 ;; Registers used:
 10517 ;;		wreg
 10518 ;; Tracked objects:
 10519 ;;		On entry : 0/0
 10520 ;;		On exit  : 0/0
 10521 ;;		Unchanged: 0/0
 10522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10523 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10526 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10527 ;;Total ram usage:        1 bytes
 10528 ;; Hardware stack levels used:    1
 10529 ;; This function calls:
 10530 ;;		Nothing
 10531 ;; This function is called by:
 10532 ;;		_setCallBack
 10533 ;;		_i2c_open
 10534 ;;		_do_I2C_DO_ADDRESS_NACK
 10535 ;;		_do_I2C_TX
 10536 ;;		_do_I2C_RX
 10537 ;;		_do_I2C_TX_EMPTY
 10538 ;; This function uses a non-reentrant model
 10539 ;;
 10540                           
 10541                           
 10542                           ;psect for function _returnStop
 10543  05C2                     _returnStop:	
 10544  05C2                     i1l2957:	
 10545                           ;incstack = 0
 10546                           ; Regs used in _returnStop: [wreg]
 10547                           
 10548                           
 10549                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
 10550  05C2  3001               	movlw	1
 10551  05C3                     i1l253:	
 10552  05C3  0008               	return
 10553  05C4                     __end_of_returnStop:	
 10554                           
 10555                           	psect	text51
 10556  04B2                     __ptext51:	
 10557 ;; *************** function _wr2RegCompleteHandler *****************
 10558 ;; Defined at:
 10559 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10560 ;; Parameters:    Size  Location     Type
 10561 ;;  p               1    6[COMMON] PTR void 
 10562 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10563 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10564 ;; Auto vars:     Size  Location     Type
 10565 ;;		None
 10566 ;; Return value:  Size  Location     Type
 10567 ;;                  1    wreg      enum E358
 10568 ;; Registers used:
 10569 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10570 ;; Tracked objects:
 10571 ;;		On entry : 0/0
 10572 ;;		On exit  : 0/0
 10573 ;;		Unchanged: 0/0
 10574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10575 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10578 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10579 ;;Total ram usage:        1 bytes
 10580 ;; Hardware stack levels used:    1
 10581 ;; Hardware stack levels required when called:    2
 10582 ;; This function calls:
 10583 ;;		_i2c_setBuffer
 10584 ;;		_i2c_setDataCompleteCallback
 10585 ;; This function is called by:
 10586 ;;		_i2c_write2ByteRegister
 10587 ;;		_do_I2C_DO_ADDRESS_NACK
 10588 ;;		_do_I2C_TX
 10589 ;;		_do_I2C_RX
 10590 ;;		_do_I2C_TX_EMPTY
 10591 ;; This function uses a non-reentrant model
 10592 ;;
 10593                           
 10594                           
 10595                           ;psect for function _wr2RegCompleteHandler
 10596  04B2                     _wr2RegCompleteHandler:	
 10597  04B2                     i1l3861:	
 10598                           ;incstack = 0
 10599                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10600                           
 10601                           
 10602                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
 10603  04B2  3002               	movlw	2
 10604  04B3  00F0               	movwf	i2c_setBuffer@bufferSize
 10605  04B4  3000               	movlw	0
 10606  04B5  00F1               	movwf	i2c_setBuffer@bufferSize+1
 10607  04B6  0876               	movf	wr2RegCompleteHandler@p,w
 10608  04B7  3184  24E5  3184   	fcall	_i2c_setBuffer
 10609  04BA                     i1l3863:	
 10610                           
 10611                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 10612  04BA  3000               	movlw	0
 10613  04BB  0020               	movlb	0	; select bank0
 10614  04BC  00D0               	movwf	i2c_setDataCompleteCallback@cb
 10615  04BD  00D1               	movwf	i2c_setDataCompleteCallback@cb+1
 10616  04BE  01D2               	clrf	i2c_setDataCompleteCallback@p
 10617  04BF  3185  2504  3184   	fcall	_i2c_setDataCompleteCallback
 10618  04C2                     i1l3865:	
 10619                           
 10620                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
 10621  04C2  3004               	movlw	4
 10622  04C3                     i1l328:	
 10623  04C3  0008               	return
 10624  04C4                     __end_of_wr2RegCompleteHandler:	
 10625                           
 10626                           	psect	text52
 10627  0504                     __ptext52:	
 10628 ;; *************** function _i2c_setDataCompleteCallback *****************
 10629 ;; Defined at:
 10630 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 10631 ;; Parameters:    Size  Location     Type
 10632 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
 10633 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 10634 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 10635 ;;  p               1    2[BANK0 ] PTR void 
 10636 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10637 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10638 ;; Auto vars:     Size  Location     Type
 10639 ;;		None
 10640 ;; Return value:  Size  Location     Type
 10641 ;;                  1    wreg      void 
 10642 ;; Registers used:
 10643 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10644 ;; Tracked objects:
 10645 ;;		On entry : 0/0
 10646 ;;		On exit  : 0/0
 10647 ;;		Unchanged: 0/0
 10648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10649 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10651 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10652 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10653 ;;Total ram usage:        4 bytes
 10654 ;; Hardware stack levels used:    1
 10655 ;; Hardware stack levels required when called:    1
 10656 ;; This function calls:
 10657 ;;		_setCallBack
 10658 ;; This function is called by:
 10659 ;;		_wr1RegCompleteHandler
 10660 ;;		_rd1RegCompleteHandler
 10661 ;;		_rd2RegCompleteHandler
 10662 ;;		_wr2RegCompleteHandler
 10663 ;;		_rdBlkRegCompleteHandler
 10664 ;;		_i2c_write1ByteRegister
 10665 ;;		_i2c_read1ByteRegister
 10666 ;;		_i2c_read2ByteRegister
 10667 ;;		_i2c_write2ByteRegister
 10668 ;;		_i2c_readDataBlock
 10669 ;; This function uses a non-reentrant model
 10670 ;;
 10671                           
 10672                           
 10673                           ;psect for function _i2c_setDataCompleteCallback
 10674  0504                     _i2c_setDataCompleteCallback:	
 10675  0504                     i1l3827:	
 10676                           ;incstack = 0
 10677                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 10678                           
 10679                           
 10680                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
 10681  0504  0020               	movlb	0	; select bank0
 10682  0505  0851               	movf	i2c_setDataCompleteCallback@cb+1,w
 10683  0506  00F1               	movwf	setCallBack@cb+1
 10684  0507  0850               	movf	i2c_setDataCompleteCallback@cb,w
 10685  0508  00F0               	movwf	setCallBack@cb
 10686  0509  0852               	movf	i2c_setDataCompleteCallback@p,w
 10687  050A  00F5               	movwf	??_i2c_setDataCompleteCallback
 10688  050B  0875               	movf	??_i2c_setDataCompleteCallback,w
 10689  050C  00F2               	movwf	setCallBack@p
 10690  050D  3000               	movlw	0
 10691  050E  3183  233B  3185   	fcall	_setCallBack
 10692  0511                     i1l110:	
 10693  0511  0008               	return
 10694  0512                     __end_of_i2c_setDataCompleteCallback:	
 10695                           
 10696                           	psect	text53
 10697  033B                     __ptext53:	
 10698 ;; *************** function _setCallBack *****************
 10699 ;; Defined at:
 10700 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 10701 ;; Parameters:    Size  Location     Type
 10702 ;;  idx             1    wreg     enum E12740
 10703 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 10704 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 10705 ;;		 -> i2c_restartWrite(1), wr1RegCompleteHandler(1), Absolute function(1), 
 10706 ;;  p               1    2[COMMON] PTR void 
 10707 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10708 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10709 ;; Auto vars:     Size  Location     Type
 10710 ;;  idx             1    4[COMMON] enum E12740
 10711 ;; Return value:  Size  Location     Type
 10712 ;;                  1    wreg      void 
 10713 ;; Registers used:
 10714 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10715 ;; Tracked objects:
 10716 ;;		On entry : 0/0
 10717 ;;		On exit  : 0/0
 10718 ;;		Unchanged: 0/0
 10719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10720 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10721 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10722 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10723 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10724 ;;Total ram usage:        5 bytes
 10725 ;; Hardware stack levels used:    1
 10726 ;; This function calls:
 10727 ;;		Nothing
 10728 ;; This function is called by:
 10729 ;;		_i2c_setDataCompleteCallback
 10730 ;;		_i2c_setWriteCollisionCallback
 10731 ;;		_i2c_setAddressNACKCallback
 10732 ;;		_i2c_setDataNACKCallback
 10733 ;;		_i2c_setTimeOutCallback
 10734 ;; This function uses a non-reentrant model
 10735 ;;
 10736                           
 10737                           
 10738                           ;psect for function _setCallBack
 10739  033B                     _setCallBack:	
 10740                           
 10741                           ;incstack = 0
 10742                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 10743                           ;setCallBack@idx stored from wreg
 10744  033B  00F4               	movwf	setCallBack@idx
 10745  033C                     i1l2877:	
 10746                           
 10747                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
 10748  033C  0870               	movf	setCallBack@cb,w
 10749  033D  0471               	iorwf	setCallBack@cb+1,w
 10750  033E  1903               	btfsc	3,2
 10751  033F  2B41               	goto	u108_21
 10752  0340  2B42               	goto	u108_20
 10753  0341                     u108_21:	
 10754  0341  2B53               	goto	i1l2881
 10755  0342                     u108_20:	
 10756  0342                     i1l2879:	
 10757                           
 10758                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
 10759  0342  3574               	lslf	setCallBack@idx,w
 10760  0343  3E2B               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 10761  0344  0086               	movwf	6
 10762  0345  0187               	clrf	7
 10763  0346  0870               	movf	setCallBack@cb,w
 10764  0347  3FC0               	movwi [0]fsr1
 10765  0348  0871               	movf	setCallBack@cb+1,w
 10766  0349  3FC1               	movwi [1]fsr1
 10767                           
 10768                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
 10769  034A  0872               	movf	setCallBack@p,w
 10770  034B  00F3               	movwf	??_setCallBack
 10771  034C  0874               	movf	setCallBack@idx,w
 10772  034D  3E37               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 10773  034E  0086               	movwf	6
 10774  034F  0187               	clrf	7
 10775  0350  0873               	movf	??_setCallBack,w
 10776  0351  0081               	movwf	1
 10777                           
 10778                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
 10779  0352  2B60               	goto	i1l261
 10780  0353                     i1l2881:	
 10781                           
 10782                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
 10783  0353  3574               	lslf	setCallBack@idx,w
 10784  0354  3E2B               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 10785  0355  0086               	movwf	6
 10786  0356  0187               	clrf	7
 10787  0357  30C2               	movlw	low _returnStop
 10788  0358  3FC0               	movwi [0]fsr1
 10789  0359  3005               	movlw	high _returnStop
 10790  035A  3FC1               	movwi [1]fsr1
 10791                           
 10792                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
 10793  035B  0874               	movf	setCallBack@idx,w
 10794  035C  3E37               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 10795  035D  0086               	movwf	6
 10796  035E  0187               	clrf	7
 10797  035F  0181               	clrf	1
 10798  0360                     i1l261:	
 10799  0360  0008               	return
 10800  0361                     __end_of_setCallBack:	
 10801                           
 10802                           	psect	text54
 10803  04E5                     __ptext54:	
 10804 ;; *************** function _i2c_setBuffer *****************
 10805 ;; Defined at:
 10806 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 10807 ;; Parameters:    Size  Location     Type
 10808 ;;  buffer          1    wreg     PTR void 
 10809 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 10810 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 10811 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 10812 ;;  bufferSize      2    0[COMMON] unsigned int 
 10813 ;; Auto vars:     Size  Location     Type
 10814 ;;  buffer          1    3[COMMON] PTR void 
 10815 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 10816 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 10817 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 10818 ;; Return value:  Size  Location     Type
 10819 ;;                  1    wreg      void 
 10820 ;; Registers used:
 10821 ;;		wreg
 10822 ;; Tracked objects:
 10823 ;;		On entry : 0/0
 10824 ;;		On exit  : 0/0
 10825 ;;		Unchanged: 0/0
 10826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10827 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10828 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10829 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10830 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10831 ;;Total ram usage:        4 bytes
 10832 ;; Hardware stack levels used:    1
 10833 ;; This function calls:
 10834 ;;		Nothing
 10835 ;; This function is called by:
 10836 ;;		_wr1RegCompleteHandler
 10837 ;;		_rd1RegCompleteHandler
 10838 ;;		_rd2RegCompleteHandler
 10839 ;;		_wr2RegCompleteHandler
 10840 ;;		_rdBlkRegCompleteHandler
 10841 ;;		_i2c_write1ByteRegister
 10842 ;;		_i2c_writeNBytes
 10843 ;;		_i2c_read1ByteRegister
 10844 ;;		_i2c_read2ByteRegister
 10845 ;;		_i2c_write2ByteRegister
 10846 ;;		_i2c_readDataBlock
 10847 ;;		_i2c_readNBytes
 10848 ;; This function uses a non-reentrant model
 10849 ;;
 10850                           
 10851                           
 10852                           ;psect for function _i2c_setBuffer
 10853  04E5                     _i2c_setBuffer:	
 10854                           
 10855                           ;incstack = 0
 10856                           ; Regs used in _i2c_setBuffer: [wreg]
 10857                           ;i2c_setBuffer@buffer stored from wreg
 10858  04E5  00F3               	movwf	i2c_setBuffer@buffer
 10859  04E6                     i1l2885:	
 10860                           
 10861                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
 10862  04E6  0020               	movlb	0	; select bank0
 10863  04E7  1D20               	btfss	_i2c_status,2
 10864  04E8  2CEA               	goto	u109_21
 10865  04E9  2CEB               	goto	u109_20
 10866  04EA                     u109_21:	
 10867  04EA  2CF4               	goto	i1l140
 10868  04EB                     u109_20:	
 10869  04EB                     i1l2887:	
 10870                           
 10871                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
 10872  04EB  0873               	movf	i2c_setBuffer@buffer,w
 10873  04EC  00F2               	movwf	??_i2c_setBuffer
 10874  04ED  0872               	movf	??_i2c_setBuffer,w
 10875  04EE  00A2               	movwf	low ((_i2c_status| 0+2))
 10876                           
 10877                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
 10878  04EF  0871               	movf	i2c_setBuffer@bufferSize+1,w
 10879  04F0  00A4               	movwf	_i2c_status+4
 10880  04F1  0870               	movf	i2c_setBuffer@bufferSize,w
 10881  04F2  00A3               	movwf	_i2c_status+3
 10882  04F3                     i1l2889:	
 10883                           
 10884                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
 10885  04F3  1120               	bcf	_i2c_status,2
 10886  04F4                     i1l140:	
 10887  04F4  0008               	return
 10888  04F5                     __end_of_i2c_setBuffer:	
 10889                           
 10890                           	psect	text55
 10891  05B8                     __ptext55:	
 10892 ;; *************** function _i2c1_driver_stop *****************
 10893 ;; Defined at:
 10894 ;;		line 157 in file "mcc_generated_files/i2c1_driver.c"
 10895 ;; Parameters:    Size  Location     Type
 10896 ;;		None
 10897 ;; Auto vars:     Size  Location     Type
 10898 ;;		None
 10899 ;; Return value:  Size  Location     Type
 10900 ;;                  1    wreg      void 
 10901 ;; Registers used:
 10902 ;;		None
 10903 ;; Tracked objects:
 10904 ;;		On entry : 0/0
 10905 ;;		On exit  : 0/0
 10906 ;;		Unchanged: 0/0
 10907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10912 ;;Total ram usage:        0 bytes
 10913 ;; Hardware stack levels used:    1
 10914 ;; This function calls:
 10915 ;;		Nothing
 10916 ;; This function is called by:
 10917 ;;		_do_I2C_SEND_STOP
 10918 ;; This function uses a non-reentrant model
 10919 ;;
 10920                           
 10921                           
 10922                           ;psect for function _i2c1_driver_stop
 10923  05B8                     _i2c1_driver_stop:	
 10924  05B8                     i1l2893:	
 10925                           ;incstack = 0
 10926                           ; Regs used in _i2c1_driver_stop: []
 10927                           
 10928                           
 10929                           ;mcc_generated_files/i2c1_driver.c: 159:     SSP1CON2bits.PEN = 1;
 10930  05B8  0023               	movlb	3	; select bank3
 10931  05B9  1511               	bsf	17,2	;volatile
 10932  05BA                     i1l668:	
 10933  05BA  0008               	return
 10934  05BB                     __end_of_i2c1_driver_stop:	
 10935                           
 10936                           	psect	text56
 10937  05BB                     __ptext56:	
 10938 ;; *************** function _i2c1_driver_restart *****************
 10939 ;; Defined at:
 10940 ;;		line 152 in file "mcc_generated_files/i2c1_driver.c"
 10941 ;; Parameters:    Size  Location     Type
 10942 ;;		None
 10943 ;; Auto vars:     Size  Location     Type
 10944 ;;		None
 10945 ;; Return value:  Size  Location     Type
 10946 ;;                  1    wreg      void 
 10947 ;; Registers used:
 10948 ;;		None
 10949 ;; Tracked objects:
 10950 ;;		On entry : 0/0
 10951 ;;		On exit  : 0/0
 10952 ;;		Unchanged: 0/0
 10953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10958 ;;Total ram usage:        0 bytes
 10959 ;; Hardware stack levels used:    1
 10960 ;; This function calls:
 10961 ;;		Nothing
 10962 ;; This function is called by:
 10963 ;;		_do_I2C_SEND_RESTART_READ
 10964 ;;		_do_I2C_SEND_RESTART_WRITE
 10965 ;;		_do_I2C_SEND_RESTART
 10966 ;; This function uses a non-reentrant model
 10967 ;;
 10968                           
 10969                           
 10970                           ;psect for function _i2c1_driver_restart
 10971  05BB                     _i2c1_driver_restart:	
 10972  05BB                     i1l2891:	
 10973                           ;incstack = 0
 10974                           ; Regs used in _i2c1_driver_restart: []
 10975                           
 10976                           
 10977                           ;mcc_generated_files/i2c1_driver.c: 154:     SSP1CON2bits.RSEN = 1;
 10978  05BB  0023               	movlb	3	; select bank3
 10979  05BC  1491               	bsf	17,1	;volatile
 10980  05BD                     i1l665:	
 10981  05BD  0008               	return
 10982  05BE                     __end_of_i2c1_driver_restart:	
 10983                           
 10984                           	psect	text57
 10985  05A5                     __ptext57:	
 10986 ;; *************** function _i2c1_driver_sendACK *****************
 10987 ;; Defined at:
 10988 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
 10989 ;; Parameters:    Size  Location     Type
 10990 ;;		None
 10991 ;; Auto vars:     Size  Location     Type
 10992 ;;		None
 10993 ;; Return value:  Size  Location     Type
 10994 ;;                  1    wreg      void 
 10995 ;; Registers used:
 10996 ;;		None
 10997 ;; Tracked objects:
 10998 ;;		On entry : 0/0
 10999 ;;		On exit  : 0/0
 11000 ;;		Unchanged: 0/0
 11001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11006 ;;Total ram usage:        0 bytes
 11007 ;; Hardware stack levels used:    1
 11008 ;; This function calls:
 11009 ;;		Nothing
 11010 ;; This function is called by:
 11011 ;;		_do_I2C_DO_ACK
 11012 ;;		_do_I2C_RX
 11013 ;; This function uses a non-reentrant model
 11014 ;;
 11015                           
 11016                           
 11017                           ;psect for function _i2c1_driver_sendACK
 11018  05A5                     _i2c1_driver_sendACK:	
 11019  05A5                     i1l2933:	
 11020                           ;incstack = 0
 11021                           ; Regs used in _i2c1_driver_sendACK: []
 11022                           
 11023                           
 11024                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKDT = 0;
 11025  05A5  0023               	movlb	3	; select bank3
 11026  05A6  1291               	bcf	17,5	;volatile
 11027                           
 11028                           ;mcc_generated_files/i2c1_driver.c: 200:     SSP1CON2bits.ACKEN = 1;
 11029  05A7  1611               	bsf	17,4	;volatile
 11030  05A8                     i1l692:	
 11031  05A8  0008               	return
 11032  05A9                     __end_of_i2c1_driver_sendACK:	
 11033                           
 11034                           	psect	text58
 11035  0467                     __ptext58:	
 11036 ;; *************** function _TMR1_ISR *****************
 11037 ;; Defined at:
 11038 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 11039 ;; Parameters:    Size  Location     Type
 11040 ;;		None
 11041 ;; Auto vars:     Size  Location     Type
 11042 ;;		None
 11043 ;; Return value:  Size  Location     Type
 11044 ;;                  1    wreg      void 
 11045 ;; Registers used:
 11046 ;;		wreg, status,2, status,0, pclath, cstack
 11047 ;; Tracked objects:
 11048 ;;		On entry : 0/0
 11049 ;;		On exit  : 0/0
 11050 ;;		Unchanged: 0/0
 11051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11056 ;;Total ram usage:        0 bytes
 11057 ;; Hardware stack levels used:    1
 11058 ;; Hardware stack levels required when called:    2
 11059 ;; This function calls:
 11060 ;;		Absolute function
 11061 ;;		_TMR1_DefaultInterruptHandler
 11062 ;;		_TMR1_WriteTimer
 11063 ;;		_h_clock
 11064 ;; This function is called by:
 11065 ;;		_INTERRUPT_InterruptManager
 11066 ;; This function uses a non-reentrant model
 11067 ;;
 11068                           
 11069                           
 11070                           ;psect for function _TMR1_ISR
 11071  0467                     _TMR1_ISR:	
 11072  0467                     i1l3453:	
 11073                           ;incstack = 0
 11074                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 11075                           
 11076                           
 11077                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 11078  0467  002E               	movlb	14	; select bank14
 11079  0468  1010               	bcf	16,0	;volatile
 11080  0469                     i1l3455:	
 11081                           
 11082                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 11083  0469  087A               	movf	_timer1ReloadVal+1,w	;volatile
 11084  046A  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 11085  046B  0879               	movf	_timer1ReloadVal,w	;volatile
 11086  046C  00F0               	movwf	TMR1_WriteTimer@timerVal
 11087  046D  3184  24C4  3184   	fcall	_TMR1_WriteTimer
 11088  0470                     i1l3457:	
 11089                           
 11090                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 11091  0470  0877               	movf	_TMR1_InterruptHandler,w
 11092  0471  0478               	iorwf	_TMR1_InterruptHandler+1,w
 11093  0472  1903               	btfsc	3,2
 11094  0473  2C75               	goto	u132_21
 11095  0474  2C76               	goto	u132_20
 11096  0475                     u132_21:	
 11097  0475  2C7B               	goto	i1l428
 11098  0476                     u132_20:	
 11099  0476                     i1l3459:	
 11100                           
 11101                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 11102  0476  0878               	movf	_TMR1_InterruptHandler+1,w
 11103  0477  008A               	movwf	10
 11104  0478  0877               	movf	_TMR1_InterruptHandler,w
 11105  0479  000A               	callw
 11106  047A  3184               	pagesel	$
 11107  047B                     i1l428:	
 11108  047B  0008               	return
 11109  047C                     __end_of_TMR1_ISR:	
 11110                           
 11111                           	psect	text59
 11112  05C5                     __ptext59:	
 11113 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 11114 ;; Defined at:
 11115 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 11116 ;; Parameters:    Size  Location     Type
 11117 ;;		None
 11118 ;; Auto vars:     Size  Location     Type
 11119 ;;		None
 11120 ;; Return value:  Size  Location     Type
 11121 ;;                  1    wreg      void 
 11122 ;; Registers used:
 11123 ;;		None
 11124 ;; Tracked objects:
 11125 ;;		On entry : 0/0
 11126 ;;		On exit  : 0/0
 11127 ;;		Unchanged: 0/0
 11128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11133 ;;Total ram usage:        0 bytes
 11134 ;; Hardware stack levels used:    1
 11135 ;; This function calls:
 11136 ;;		Nothing
 11137 ;; This function is called by:
 11138 ;;		_TMR1_Initialize
 11139 ;;		_TMR1_ISR
 11140 ;; This function uses a non-reentrant model
 11141 ;;
 11142                           
 11143                           
 11144                           ;psect for function _TMR1_DefaultInterruptHandler
 11145  05C5                     _TMR1_DefaultInterruptHandler:	
 11146  05C5                     i1l434:	
 11147                           ;incstack = 0
 11148                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 11149                           
 11150  05C5  0008               	return
 11151  05C6                     __end_of_TMR1_DefaultInterruptHandler:	
 11152                           
 11153                           	psect	text60
 11154  043A                     __ptext60:	
 11155 ;; *************** function _h_clock *****************
 11156 ;; Defined at:
 11157 ;;		line 36 in file "main.c"
 11158 ;; Parameters:    Size  Location     Type
 11159 ;;		None
 11160 ;; Auto vars:     Size  Location     Type
 11161 ;;		None
 11162 ;; Return value:  Size  Location     Type
 11163 ;;                  1    wreg      void 
 11164 ;; Registers used:
 11165 ;;		wreg, status,2, status,0, pclath, cstack
 11166 ;; Tracked objects:
 11167 ;;		On entry : 0/0
 11168 ;;		On exit  : 0/0
 11169 ;;		Unchanged: 0/0
 11170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11175 ;;Total ram usage:        0 bytes
 11176 ;; Hardware stack levels used:    1
 11177 ;; Hardware stack levels required when called:    1
 11178 ;; This function calls:
 11179 ;;		_update_clock
 11180 ;; This function is called by:
 11181 ;;		_main
 11182 ;;		_TMR1_ISR
 11183 ;; This function uses a non-reentrant model
 11184 ;;
 11185                           
 11186                           
 11187                           ;psect for function _h_clock
 11188  043A                     _h_clock:	
 11189  043A                     i1l837:	
 11190                           ;incstack = 0
 11191                           ; Regs used in _h_clock: [wreg+status,2+status,0+pclath+cstack]
 11192                           ;main.c: 37:     do { LATAbits.LATA7 = ~LATAbits.LATA7; } while(0);
 11193                           
 11194  043A                     i1l3331:	
 11195  043A  1003               	clrc
 11196  043B  0020               	movlb	0	; select bank0
 11197  043C  1F96               	btfss	22,7	;volatile
 11198  043D  1403               	setc
 11199  043E  1803               	btfsc	3,0
 11200  043F  2C41               	goto	u121_21
 11201  0440  2C44               	goto	u121_20
 11202  0441                     u121_21:	
 11203  0441  0020               	movlb	0	; select bank0
 11204  0442  1796               	bsf	22,7	;volatile
 11205  0443  2C46               	goto	u122_24
 11206  0444                     u121_20:	
 11207  0444  0020               	movlb	0	; select bank0
 11208  0445  1396               	bcf	22,7	;volatile
 11209  0446                     u122_24:	
 11210  0446                     i1l3333:	
 11211                           
 11212                           ;main.c: 38:     if(!half) {
 11213  0446  19FD               	btfsc	_half/(0+8),_half& (0+7)	;volatile
 11214  0447  2C49               	goto	u123_21
 11215  0448  2C4A               	goto	u123_20
 11216  0449                     u123_21:	
 11217  0449  2C4F               	goto	i1l839
 11218  044A                     u123_20:	
 11219  044A                     i1l3335:	
 11220                           
 11221                           ;main.c: 39:         update_clock();
 11222  044A  3183  2385  3184   	fcall	_update_clock
 11223  044D                     i1l3337:	
 11224                           
 11225                           ;main.c: 40:         half = 1;
 11226  044D  15FD               	bsf	_half/(0+8),_half& (0+7)	;volatile
 11227                           
 11228                           ;main.c: 41:     }
 11229  044E  2C50               	goto	i1l841
 11230  044F                     i1l839:	
 11231                           ;main.c: 42:     else {
 11232                           
 11233                           
 11234                           ;main.c: 43:         half = 0;
 11235  044F  11FD               	bcf	_half/(0+8),_half& (0+7)	;volatile
 11236  0450                     i1l841:	
 11237  0450  0008               	return
 11238  0451                     __end_of_h_clock:	
 11239                           
 11240                           	psect	text61
 11241  0385                     __ptext61:	
 11242 ;; *************** function _update_clock *****************
 11243 ;; Defined at:
 11244 ;;		line 211 in file "main.c"
 11245 ;; Parameters:    Size  Location     Type
 11246 ;;		None
 11247 ;; Auto vars:     Size  Location     Type
 11248 ;;		None
 11249 ;; Return value:  Size  Location     Type
 11250 ;;                  1    wreg      void 
 11251 ;; Registers used:
 11252 ;;		wreg, status,2, status,0
 11253 ;; Tracked objects:
 11254 ;;		On entry : 0/0
 11255 ;;		On exit  : 0/0
 11256 ;;		Unchanged: 0/0
 11257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11260 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11261 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11262 ;;Total ram usage:        1 bytes
 11263 ;; Hardware stack levels used:    1
 11264 ;; This function calls:
 11265 ;;		Nothing
 11266 ;; This function is called by:
 11267 ;;		_h_clock
 11268 ;; This function uses a non-reentrant model
 11269 ;;
 11270                           
 11271                           
 11272                           ;psect for function _update_clock
 11273  0385                     _update_clock:	
 11274  0385                     i1l3025:	
 11275                           ;incstack = 0
 11276                           ; Regs used in _update_clock: [wreg+status,2+status,0]
 11277                           
 11278                           
 11279                           ;main.c: 212:     seg++;
 11280  0385  3001               	movlw	1
 11281  0386  00F0               	movwf	??_update_clock
 11282  0387  0870               	movf	??_update_clock,w
 11283  0388  0020               	movlb	0	; select bank0
 11284  0389  07CD               	addwf	_seg,f	;volatile
 11285                           
 11286                           ;main.c: 213:     last5s++;
 11287  038A  3001               	movlw	1
 11288  038B  00F0               	movwf	??_update_clock
 11289  038C  0870               	movf	??_update_clock,w
 11290  038D  07CC               	addwf	_last5s,f	;volatile
 11291  038E                     i1l3027:	
 11292                           
 11293                           ;main.c: 214:     if(seg >= 60) {
 11294  038E  303C               	movlw	60
 11295  038F  024D               	subwf	_seg,w	;volatile
 11296  0390  1C03               	skipc
 11297  0391  2B93               	goto	u111_21
 11298  0392  2B94               	goto	u111_20
 11299  0393                     u111_21:	
 11300  0393  2BA8               	goto	i1l928
 11301  0394                     u111_20:	
 11302  0394                     i1l3029:	
 11303                           
 11304                           ;main.c: 215:         clkm++;
 11305  0394  3001               	movlw	1
 11306  0395  00F0               	movwf	??_update_clock
 11307  0396  0870               	movf	??_update_clock,w
 11308  0397  07CE               	addwf	_clkm,f	;volatile
 11309                           
 11310                           ;main.c: 216:         last1m++;
 11311  0398  3001               	movlw	1
 11312  0399  00F0               	movwf	??_update_clock
 11313  039A  0870               	movf	??_update_clock,w
 11314  039B  07CB               	addwf	_last1m,f	;volatile
 11315  039C                     i1l3031:	
 11316                           
 11317                           ;main.c: 217:         seg = 0;
 11318  039C  01CD               	clrf	_seg	;volatile
 11319  039D                     i1l3033:	
 11320                           
 11321                           ;main.c: 218:         if(clkm >= 60) {
 11322  039D  303C               	movlw	60
 11323  039E  024E               	subwf	_clkm,w	;volatile
 11324  039F  1C03               	skipc
 11325  03A0  2BA2               	goto	u112_21
 11326  03A1  2BA3               	goto	u112_20
 11327  03A2                     u112_21:	
 11328  03A2  2BA8               	goto	i1l928
 11329  03A3                     u112_20:	
 11330  03A3                     i1l3035:	
 11331                           
 11332                           ;main.c: 219:             clkh++;
 11333  03A3  3001               	movlw	1
 11334  03A4  00F0               	movwf	??_update_clock
 11335  03A5  0870               	movf	??_update_clock,w
 11336  03A6  07CF               	addwf	_clkh,f	;volatile
 11337  03A7                     i1l3037:	
 11338                           
 11339                           ;main.c: 220:             clkm = 0;
 11340  03A7  01CE               	clrf	_clkm	;volatile
 11341  03A8                     i1l928:	
 11342  03A8  0008               	return
 11343  03A9                     __end_of_update_clock:	
 11344                           
 11345                           	psect	text62
 11346  04C4                     __ptext62:	
 11347 ;; *************** function _TMR1_WriteTimer *****************
 11348 ;; Defined at:
 11349 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 11350 ;; Parameters:    Size  Location     Type
 11351 ;;  timerVal        2    0[COMMON] unsigned short 
 11352 ;; Auto vars:     Size  Location     Type
 11353 ;;		None
 11354 ;; Return value:  Size  Location     Type
 11355 ;;                  1    wreg      void 
 11356 ;; Registers used:
 11357 ;;		wreg, status,2
 11358 ;; Tracked objects:
 11359 ;;		On entry : 0/0
 11360 ;;		On exit  : 0/0
 11361 ;;		Unchanged: 0/0
 11362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11363 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11366 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11367 ;;Total ram usage:        2 bytes
 11368 ;; Hardware stack levels used:    1
 11369 ;; This function calls:
 11370 ;;		Nothing
 11371 ;; This function is called by:
 11372 ;;		_TMR1_ISR
 11373 ;;		_TMR1_Reload
 11374 ;; This function uses a non-reentrant model
 11375 ;;
 11376                           
 11377                           
 11378                           ;psect for function _TMR1_WriteTimer
 11379  04C4                     _TMR1_WriteTimer:	
 11380  04C4                     i1l3237:	
 11381                           ;incstack = 0
 11382                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 11383                           
 11384                           
 11385                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 11386  04C4  0024               	movlb	4	; select bank4
 11387  04C5  1D0E               	btfss	14,2	;volatile
 11388  04C6  2CC8               	goto	u119_21
 11389  04C7  2CC9               	goto	u119_20
 11390  04C8                     u119_21:	
 11391  04C8  2CD0               	goto	i1l3247
 11392  04C9                     u119_20:	
 11393  04C9                     i1l3239:	
 11394                           
 11395                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 11396  04C9  100E               	bcf	14,0	;volatile
 11397  04CA                     i1l3241:	
 11398                           
 11399                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 11400  04CA  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 11401  04CB  008D               	movwf	13	;volatile
 11402  04CC                     i1l3243:	
 11403                           
 11404                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 11405  04CC  0870               	movf	TMR1_WriteTimer@timerVal,w
 11406  04CD  008C               	movwf	12	;volatile
 11407  04CE                     i1l3245:	
 11408                           
 11409                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 11410  04CE  140E               	bsf	14,0	;volatile
 11411                           
 11412                           ;mcc_generated_files/tmr1.c: 140:     }
 11413  04CF  2CD4               	goto	i1l415
 11414  04D0                     i1l3247:	
 11415                           
 11416                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 11417  04D0  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 11418  04D1  008D               	movwf	13	;volatile
 11419  04D2                     i1l3249:	
 11420                           
 11421                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 11422  04D2  0870               	movf	TMR1_WriteTimer@timerVal,w
 11423  04D3  008C               	movwf	12	;volatile
 11424  04D4                     i1l415:	
 11425  04D4  0008               	return
 11426  04D5                     __end_of_TMR1_WriteTimer:	
 11427  007E                     btemp	set	126	;btemp
 11428  007E                     int$flags	set	126
 11429  007E                     wtemp0	set	126
=======
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	bitnvCOMMON,global,bit,class=COMMON,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssEEDATA,global,class=EEDATA,space=3,delta=2
    10                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,inline,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,inline,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,delta=2
    73                           	psect	text55,local,class=CODE,merge=1,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	text62,local,class=CODE,merge=1,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,delta=2
    83                           	psect	text65,local,class=CODE,merge=1,delta=2
    84                           	dabs	1,0x620,48
    85                           	dabs	1,0x5A0,80
    86                           	dabs	1,0x55A,22
    87                           	dabs	1,0x235A,0,_buffer
    88                           	dabs	1,0x7E,2
    89  0000                     
    90                           ; Version 2.10
    91                           ; Generated 31/07/2019 GMT
    92                           ; 
    93                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    94                           ; All rights reserved.
    95                           ; 
    96                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    97                           ; 
    98                           ; Redistribution and use in source and binary forms, with or without modification, are
    99                           ; permitted provided that the following conditions are met:
   100                           ; 
   101                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   102                           ;        conditions and the following disclaimer.
   103                           ; 
   104                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   105                           ;        of conditions and the following disclaimer in the documentation and/or other
   106                           ;        materials provided with the distribution.
   107                           ; 
   108                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   109                           ;        software without specific prior written permission.
   110                           ; 
   111                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   112                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   113                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   114                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   115                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   116                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   117                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   118                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   119                           ; 
   120                           ; 
   121                           ; Code-generator required, PIC16F18875 Definitions
   122                           ; 
   123                           ; SFR Addresses
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0015                     	;# 
   146  0016                     	;# 
   147  0017                     	;# 
   148  0018                     	;# 
   149  0019                     	;# 
   150  001A                     	;# 
   151  001C                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001D                     	;# 
   155  001E                     	;# 
   156  001F                     	;# 
   157  008C                     	;# 
   158  008C                     	;# 
   159  008D                     	;# 
   160  008E                     	;# 
   161  008E                     	;# 
   162  008F                     	;# 
   163  0090                     	;# 
   164  0090                     	;# 
   165  0091                     	;# 
   166  0093                     	;# 
   167  0094                     	;# 
   168  0095                     	;# 
   169  0096                     	;# 
   170  0097                     	;# 
   171  0098                     	;# 
   172  0099                     	;# 
   173  009A                     	;# 
   174  009B                     	;# 
   175  009C                     	;# 
   176  009D                     	;# 
   177  009E                     	;# 
   178  010C                     	;# 
   179  010D                     	;# 
   180  010E                     	;# 
   181  010E                     	;# 
   182  010F                     	;# 
   183  0110                     	;# 
   184  0110                     	;# 
   185  0111                     	;# 
   186  0112                     	;# 
   187  0112                     	;# 
   188  0113                     	;# 
   189  0114                     	;# 
   190  0114                     	;# 
   191  0115                     	;# 
   192  0116                     	;# 
   193  0116                     	;# 
   194  0117                     	;# 
   195  0119                     	;# 
   196  0119                     	;# 
   197  0119                     	;# 
   198  011A                     	;# 
   199  011A                     	;# 
   200  011A                     	;# 
   201  011B                     	;# 
   202  011B                     	;# 
   203  011B                     	;# 
   204  011B                     	;# 
   205  011B                     	;# 
   206  011C                     	;# 
   207  011C                     	;# 
   208  011C                     	;# 
   209  011D                     	;# 
   210  011D                     	;# 
   211  011D                     	;# 
   212  011E                     	;# 
   213  011E                     	;# 
   214  011E                     	;# 
   215  011F                     	;# 
   216  011F                     	;# 
   217  011F                     	;# 
   218  011F                     	;# 
   219  011F                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  018E                     	;# 
   223  018F                     	;# 
   224  0190                     	;# 
   225  0191                     	;# 
   226  0192                     	;# 
   227  0196                     	;# 
   228  0197                     	;# 
   229  0198                     	;# 
   230  0199                     	;# 
   231  019A                     	;# 
   232  019B                     	;# 
   233  019C                     	;# 
   234  020C                     	;# 
   235  020C                     	;# 
   236  020D                     	;# 
   237  020E                     	;# 
   238  020F                     	;# 
   239  020F                     	;# 
   240  0210                     	;# 
   241  0210                     	;# 
   242  0211                     	;# 
   243  0211                     	;# 
   244  0212                     	;# 
   245  0212                     	;# 
   246  0213                     	;# 
   247  0214                     	;# 
   248  0215                     	;# 
   249  0215                     	;# 
   250  0216                     	;# 
   251  0216                     	;# 
   252  0217                     	;# 
   253  0217                     	;# 
   254  0218                     	;# 
   255  0218                     	;# 
   256  0219                     	;# 
   257  021A                     	;# 
   258  021B                     	;# 
   259  021B                     	;# 
   260  021C                     	;# 
   261  021C                     	;# 
   262  021D                     	;# 
   263  021D                     	;# 
   264  021E                     	;# 
   265  021F                     	;# 
   266  028C                     	;# 
   267  028C                     	;# 
   268  028D                     	;# 
   269  028D                     	;# 
   270  028E                     	;# 
   271  028F                     	;# 
   272  0290                     	;# 
   273  0290                     	;# 
   274  0291                     	;# 
   275  0292                     	;# 
   276  0292                     	;# 
   277  0293                     	;# 
   278  0293                     	;# 
   279  0294                     	;# 
   280  0295                     	;# 
   281  0296                     	;# 
   282  0296                     	;# 
   283  0297                     	;# 
   284  0298                     	;# 
   285  0298                     	;# 
   286  0299                     	;# 
   287  0299                     	;# 
   288  029A                     	;# 
   289  029B                     	;# 
   290  029C                     	;# 
   291  029C                     	;# 
   292  029D                     	;# 
   293  030C                     	;# 
   294  030C                     	;# 
   295  030D                     	;# 
   296  030E                     	;# 
   297  030F                     	;# 
   298  0310                     	;# 
   299  0310                     	;# 
   300  0311                     	;# 
   301  0312                     	;# 
   302  0313                     	;# 
   303  0314                     	;# 
   304  0314                     	;# 
   305  0315                     	;# 
   306  0316                     	;# 
   307  0317                     	;# 
   308  0318                     	;# 
   309  0318                     	;# 
   310  0319                     	;# 
   311  031A                     	;# 
   312  031B                     	;# 
   313  031C                     	;# 
   314  031C                     	;# 
   315  031D                     	;# 
   316  031E                     	;# 
   317  031F                     	;# 
   318  038C                     	;# 
   319  038C                     	;# 
   320  038D                     	;# 
   321  038E                     	;# 
   322  0390                     	;# 
   323  0390                     	;# 
   324  0391                     	;# 
   325  0392                     	;# 
   326  040C                     	;# 
   327  040D                     	;# 
   328  040E                     	;# 
   329  040F                     	;# 
   330  0410                     	;# 
   331  0411                     	;# 
   332  0416                     	;# 
   333  0416                     	;# 
   334  0417                     	;# 
   335  0418                     	;# 
   336  0418                     	;# 
   337  0419                     	;# 
   338  041A                     	;# 
   339  041A                     	;# 
   340  041B                     	;# 
   341  041C                     	;# 
   342  041C                     	;# 
   343  041D                     	;# 
   344  041E                     	;# 
   345  041F                     	;# 
   346  048C                     	;# 
   347  048C                     	;# 
   348  048D                     	;# 
   349  048E                     	;# 
   350  048F                     	;# 
   351  048F                     	;# 
   352  0490                     	;# 
   353  0491                     	;# 
   354  0492                     	;# 
   355  0492                     	;# 
   356  0493                     	;# 
   357  0494                     	;# 
   358  0495                     	;# 
   359  0495                     	;# 
   360  0496                     	;# 
   361  0497                     	;# 
   362  0498                     	;# 
   363  0499                     	;# 
   364  049A                     	;# 
   365  049B                     	;# 
   366  049C                     	;# 
   367  049D                     	;# 
   368  050C                     	;# 
   369  050C                     	;# 
   370  050D                     	;# 
   371  050E                     	;# 
   372  050F                     	;# 
   373  050F                     	;# 
   374  0510                     	;# 
   375  0511                     	;# 
   376  0512                     	;# 
   377  0512                     	;# 
   378  0513                     	;# 
   379  0514                     	;# 
   380  0515                     	;# 
   381  0515                     	;# 
   382  0516                     	;# 
   383  0517                     	;# 
   384  0518                     	;# 
   385  0519                     	;# 
   386  051A                     	;# 
   387  051B                     	;# 
   388  051C                     	;# 
   389  051D                     	;# 
   390  058C                     	;# 
   391  058C                     	;# 
   392  058D                     	;# 
   393  058E                     	;# 
   394  058F                     	;# 
   395  058F                     	;# 
   396  0590                     	;# 
   397  0591                     	;# 
   398  0592                     	;# 
   399  0593                     	;# 
   400  060C                     	;# 
   401  060D                     	;# 
   402  060E                     	;# 
   403  060F                     	;# 
   404  0610                     	;# 
   405  0611                     	;# 
   406  0612                     	;# 
   407  0613                     	;# 
   408  0614                     	;# 
   409  0616                     	;# 
   410  0617                     	;# 
   411  0618                     	;# 
   412  0619                     	;# 
   413  061A                     	;# 
   414  061B                     	;# 
   415  061C                     	;# 
   416  061D                     	;# 
   417  061E                     	;# 
   418  068C                     	;# 
   419  068D                     	;# 
   420  068E                     	;# 
   421  068F                     	;# 
   422  0690                     	;# 
   423  0691                     	;# 
   424  0692                     	;# 
   425  0693                     	;# 
   426  0694                     	;# 
   427  070C                     	;# 
   428  070D                     	;# 
   429  070E                     	;# 
   430  070F                     	;# 
   431  0710                     	;# 
   432  0711                     	;# 
   433  0712                     	;# 
   434  0713                     	;# 
   435  0714                     	;# 
   436  0716                     	;# 
   437  0717                     	;# 
   438  0718                     	;# 
   439  0719                     	;# 
   440  071A                     	;# 
   441  071B                     	;# 
   442  071C                     	;# 
   443  071D                     	;# 
   444  071E                     	;# 
   445  0796                     	;# 
   446  0797                     	;# 
   447  0798                     	;# 
   448  0799                     	;# 
   449  079A                     	;# 
   450  079B                     	;# 
   451  080C                     	;# 
   452  080D                     	;# 
   453  080E                     	;# 
   454  080F                     	;# 
   455  0810                     	;# 
   456  0811                     	;# 
   457  0812                     	;# 
   458  0813                     	;# 
   459  0814                     	;# 
   460  081A                     	;# 
   461  081B                     	;# 
   462  081C                     	;# 
   463  081D                     	;# 
   464  081E                     	;# 
   465  081F                     	;# 
   466  088C                     	;# 
   467  088D                     	;# 
   468  088E                     	;# 
   469  088F                     	;# 
   470  0890                     	;# 
   471  0891                     	;# 
   472  0892                     	;# 
   473  0893                     	;# 
   474  0895                     	;# 
   475  0896                     	;# 
   476  0897                     	;# 
   477  0898                     	;# 
   478  0899                     	;# 
   479  089A                     	;# 
   480  089B                     	;# 
   481  090C                     	;# 
   482  090E                     	;# 
   483  090F                     	;# 
   484  091F                     	;# 
   485  091F                     	;# 
   486  098F                     	;# 
   487  098F                     	;# 
   488  0990                     	;# 
   489  0991                     	;# 
   490  0992                     	;# 
   491  0993                     	;# 
   492  0994                     	;# 
   493  0995                     	;# 
   494  0996                     	;# 
   495  0997                     	;# 
   496  0E0F                     	;# 
   497  0E10                     	;# 
   498  0E11                     	;# 
   499  0E12                     	;# 
   500  0E13                     	;# 
   501  0E14                     	;# 
   502  0E15                     	;# 
   503  0E16                     	;# 
   504  0E17                     	;# 
   505  0E18                     	;# 
   506  0E19                     	;# 
   507  0E1A                     	;# 
   508  0E1B                     	;# 
   509  0E1C                     	;# 
   510  0E1D                     	;# 
   511  0E1E                     	;# 
   512  0E1F                     	;# 
   513  0E20                     	;# 
   514  0E21                     	;# 
   515  0E22                     	;# 
   516  0E23                     	;# 
   517  0E24                     	;# 
   518  0E25                     	;# 
   519  0E26                     	;# 
   520  0E27                     	;# 
   521  0E28                     	;# 
   522  0E29                     	;# 
   523  0E2A                     	;# 
   524  0E2B                     	;# 
   525  0E2C                     	;# 
   526  0E2D                     	;# 
   527  0E2E                     	;# 
   528  0E2F                     	;# 
   529  0E30                     	;# 
   530  0E31                     	;# 
   531  0E32                     	;# 
   532  0E33                     	;# 
   533  0E34                     	;# 
   534  0E35                     	;# 
   535  0E36                     	;# 
   536  0E37                     	;# 
   537  0E8F                     	;# 
   538  0E90                     	;# 
   539  0E91                     	;# 
   540  0E92                     	;# 
   541  0E93                     	;# 
   542  0E94                     	;# 
   543  0E95                     	;# 
   544  0E96                     	;# 
   545  0E97                     	;# 
   546  0E9C                     	;# 
   547  0E9D                     	;# 
   548  0E9E                     	;# 
   549  0EA1                     	;# 
   550  0EA2                     	;# 
   551  0EA3                     	;# 
   552  0EA4                     	;# 
   553  0EA5                     	;# 
   554  0EA9                     	;# 
   555  0EAA                     	;# 
   556  0EAB                     	;# 
   557  0EAC                     	;# 
   558  0EB1                     	;# 
   559  0EB2                     	;# 
   560  0EB3                     	;# 
   561  0EB8                     	;# 
   562  0EB9                     	;# 
   563  0EBA                     	;# 
   564  0EBB                     	;# 
   565  0EBC                     	;# 
   566  0EBD                     	;# 
   567  0EBE                     	;# 
   568  0EC3                     	;# 
   569  0EC5                     	;# 
   570  0EC6                     	;# 
   571  0EC7                     	;# 
   572  0EC8                     	;# 
   573  0EC9                     	;# 
   574  0ECA                     	;# 
   575  0ECB                     	;# 
   576  0ECC                     	;# 
   577  0F10                     	;# 
   578  0F11                     	;# 
   579  0F12                     	;# 
   580  0F13                     	;# 
   581  0F14                     	;# 
   582  0F15                     	;# 
   583  0F16                     	;# 
   584  0F17                     	;# 
   585  0F18                     	;# 
   586  0F19                     	;# 
   587  0F1A                     	;# 
   588  0F1B                     	;# 
   589  0F1C                     	;# 
   590  0F1D                     	;# 
   591  0F1E                     	;# 
   592  0F1F                     	;# 
   593  0F20                     	;# 
   594  0F21                     	;# 
   595  0F22                     	;# 
   596  0F23                     	;# 
   597  0F24                     	;# 
   598  0F25                     	;# 
   599  0F26                     	;# 
   600  0F27                     	;# 
   601  0F28                     	;# 
   602  0F29                     	;# 
   603  0F2A                     	;# 
   604  0F2B                     	;# 
   605  0F2C                     	;# 
   606  0F2D                     	;# 
   607  0F2E                     	;# 
   608  0F2F                     	;# 
   609  0F30                     	;# 
   610  0F31                     	;# 
   611  0F32                     	;# 
   612  0F38                     	;# 
   613  0F39                     	;# 
   614  0F3A                     	;# 
   615  0F3B                     	;# 
   616  0F3C                     	;# 
   617  0F3D                     	;# 
   618  0F3E                     	;# 
   619  0F3F                     	;# 
   620  0F40                     	;# 
   621  0F41                     	;# 
   622  0F43                     	;# 
   623  0F44                     	;# 
   624  0F45                     	;# 
   625  0F46                     	;# 
   626  0F47                     	;# 
   627  0F48                     	;# 
   628  0F49                     	;# 
   629  0F4A                     	;# 
   630  0F4B                     	;# 
   631  0F4C                     	;# 
   632  0F4E                     	;# 
   633  0F4F                     	;# 
   634  0F50                     	;# 
   635  0F51                     	;# 
   636  0F52                     	;# 
   637  0F53                     	;# 
   638  0F54                     	;# 
   639  0F55                     	;# 
   640  0F56                     	;# 
   641  0F57                     	;# 
   642  0F59                     	;# 
   643  0F5A                     	;# 
   644  0F5B                     	;# 
   645  0F5C                     	;# 
   646  0F5D                     	;# 
   647  0F61                     	;# 
   648  0F62                     	;# 
   649  0F64                     	;# 
   650  0F65                     	;# 
   651  0F66                     	;# 
   652  0F67                     	;# 
   653  0F68                     	;# 
   654  0F69                     	;# 
   655  0F6A                     	;# 
   656  0F6B                     	;# 
   657  0F6C                     	;# 
   658  0F6D                     	;# 
   659  0FE4                     	;# 
   660  0FE5                     	;# 
   661  0FE6                     	;# 
   662  0FE7                     	;# 
   663  0FE8                     	;# 
   664  0FE9                     	;# 
   665  0FEA                     	;# 
   666  0FEB                     	;# 
   667  0FED                     	;# 
   668  0FEE                     	;# 
   669  0FEF                     	;# 
   670  0000                     	;# 
   671  0001                     	;# 
   672  0002                     	;# 
   673  0003                     	;# 
   674  0004                     	;# 
   675  0005                     	;# 
   676  0006                     	;# 
   677  0007                     	;# 
   678  0008                     	;# 
   679  0009                     	;# 
   680  000A                     	;# 
   681  000B                     	;# 
   682  000C                     	;# 
   683  000D                     	;# 
   684  000E                     	;# 
   685  000F                     	;# 
   686  0010                     	;# 
   687  0011                     	;# 
   688  0012                     	;# 
   689  0013                     	;# 
   690  0014                     	;# 
   691  0015                     	;# 
   692  0016                     	;# 
   693  0017                     	;# 
   694  0018                     	;# 
   695  0019                     	;# 
   696  001A                     	;# 
   697  001C                     	;# 
   698  001C                     	;# 
   699  001D                     	;# 
   700  001D                     	;# 
   701  001E                     	;# 
   702  001F                     	;# 
   703  008C                     	;# 
   704  008C                     	;# 
   705  008D                     	;# 
   706  008E                     	;# 
   707  008E                     	;# 
   708  008F                     	;# 
   709  0090                     	;# 
   710  0090                     	;# 
   711  0091                     	;# 
   712  0093                     	;# 
   713  0094                     	;# 
   714  0095                     	;# 
   715  0096                     	;# 
   716  0097                     	;# 
   717  0098                     	;# 
   718  0099                     	;# 
   719  009A                     	;# 
   720  009B                     	;# 
   721  009C                     	;# 
   722  009D                     	;# 
   723  009E                     	;# 
   724  010C                     	;# 
   725  010D                     	;# 
   726  010E                     	;# 
   727  010E                     	;# 
   728  010F                     	;# 
   729  0110                     	;# 
   730  0110                     	;# 
   731  0111                     	;# 
   732  0112                     	;# 
   733  0112                     	;# 
   734  0113                     	;# 
   735  0114                     	;# 
   736  0114                     	;# 
   737  0115                     	;# 
   738  0116                     	;# 
   739  0116                     	;# 
   740  0117                     	;# 
   741  0119                     	;# 
   742  0119                     	;# 
   743  0119                     	;# 
   744  011A                     	;# 
   745  011A                     	;# 
   746  011A                     	;# 
   747  011B                     	;# 
   748  011B                     	;# 
   749  011B                     	;# 
   750  011B                     	;# 
   751  011B                     	;# 
   752  011C                     	;# 
   753  011C                     	;# 
   754  011C                     	;# 
   755  011D                     	;# 
   756  011D                     	;# 
   757  011D                     	;# 
   758  011E                     	;# 
   759  011E                     	;# 
   760  011E                     	;# 
   761  011F                     	;# 
   762  011F                     	;# 
   763  011F                     	;# 
   764  011F                     	;# 
   765  011F                     	;# 
   766  018C                     	;# 
   767  018D                     	;# 
   768  018E                     	;# 
   769  018F                     	;# 
   770  0190                     	;# 
   771  0191                     	;# 
   772  0192                     	;# 
   773  0196                     	;# 
   774  0197                     	;# 
   775  0198                     	;# 
   776  0199                     	;# 
   777  019A                     	;# 
   778  019B                     	;# 
   779  019C                     	;# 
   780  020C                     	;# 
   781  020C                     	;# 
   782  020D                     	;# 
   783  020E                     	;# 
   784  020F                     	;# 
   785  020F                     	;# 
   786  0210                     	;# 
   787  0210                     	;# 
   788  0211                     	;# 
   789  0211                     	;# 
   790  0212                     	;# 
   791  0212                     	;# 
   792  0213                     	;# 
   793  0214                     	;# 
   794  0215                     	;# 
   795  0215                     	;# 
   796  0216                     	;# 
   797  0216                     	;# 
   798  0217                     	;# 
   799  0217                     	;# 
   800  0218                     	;# 
   801  0218                     	;# 
   802  0219                     	;# 
   803  021A                     	;# 
   804  021B                     	;# 
   805  021B                     	;# 
   806  021C                     	;# 
   807  021C                     	;# 
   808  021D                     	;# 
   809  021D                     	;# 
   810  021E                     	;# 
   811  021F                     	;# 
   812  028C                     	;# 
   813  028C                     	;# 
   814  028D                     	;# 
   815  028D                     	;# 
   816  028E                     	;# 
   817  028F                     	;# 
   818  0290                     	;# 
   819  0290                     	;# 
   820  0291                     	;# 
   821  0292                     	;# 
   822  0292                     	;# 
   823  0293                     	;# 
   824  0293                     	;# 
   825  0294                     	;# 
   826  0295                     	;# 
   827  0296                     	;# 
   828  0296                     	;# 
   829  0297                     	;# 
   830  0298                     	;# 
   831  0298                     	;# 
   832  0299                     	;# 
   833  0299                     	;# 
   834  029A                     	;# 
   835  029B                     	;# 
   836  029C                     	;# 
   837  029C                     	;# 
   838  029D                     	;# 
   839  030C                     	;# 
   840  030C                     	;# 
   841  030D                     	;# 
   842  030E                     	;# 
   843  030F                     	;# 
   844  0310                     	;# 
   845  0310                     	;# 
   846  0311                     	;# 
   847  0312                     	;# 
   848  0313                     	;# 
   849  0314                     	;# 
   850  0314                     	;# 
   851  0315                     	;# 
   852  0316                     	;# 
   853  0317                     	;# 
   854  0318                     	;# 
   855  0318                     	;# 
   856  0319                     	;# 
   857  031A                     	;# 
   858  031B                     	;# 
   859  031C                     	;# 
   860  031C                     	;# 
   861  031D                     	;# 
   862  031E                     	;# 
   863  031F                     	;# 
   864  038C                     	;# 
   865  038C                     	;# 
   866  038D                     	;# 
   867  038E                     	;# 
   868  0390                     	;# 
   869  0390                     	;# 
   870  0391                     	;# 
   871  0392                     	;# 
   872  040C                     	;# 
   873  040D                     	;# 
   874  040E                     	;# 
   875  040F                     	;# 
   876  0410                     	;# 
   877  0411                     	;# 
   878  0416                     	;# 
   879  0416                     	;# 
   880  0417                     	;# 
   881  0418                     	;# 
   882  0418                     	;# 
   883  0419                     	;# 
   884  041A                     	;# 
   885  041A                     	;# 
   886  041B                     	;# 
   887  041C                     	;# 
   888  041C                     	;# 
   889  041D                     	;# 
   890  041E                     	;# 
   891  041F                     	;# 
   892  048C                     	;# 
   893  048C                     	;# 
   894  048D                     	;# 
   895  048E                     	;# 
   896  048F                     	;# 
   897  048F                     	;# 
   898  0490                     	;# 
   899  0491                     	;# 
   900  0492                     	;# 
   901  0492                     	;# 
   902  0493                     	;# 
   903  0494                     	;# 
   904  0495                     	;# 
   905  0495                     	;# 
   906  0496                     	;# 
   907  0497                     	;# 
   908  0498                     	;# 
   909  0499                     	;# 
   910  049A                     	;# 
   911  049B                     	;# 
   912  049C                     	;# 
   913  049D                     	;# 
   914  050C                     	;# 
   915  050C                     	;# 
   916  050D                     	;# 
   917  050E                     	;# 
   918  050F                     	;# 
   919  050F                     	;# 
   920  0510                     	;# 
   921  0511                     	;# 
   922  0512                     	;# 
   923  0512                     	;# 
   924  0513                     	;# 
   925  0514                     	;# 
   926  0515                     	;# 
   927  0515                     	;# 
   928  0516                     	;# 
   929  0517                     	;# 
   930  0518                     	;# 
   931  0519                     	;# 
   932  051A                     	;# 
   933  051B                     	;# 
   934  051C                     	;# 
   935  051D                     	;# 
   936  058C                     	;# 
   937  058C                     	;# 
   938  058D                     	;# 
   939  058E                     	;# 
   940  058F                     	;# 
   941  058F                     	;# 
   942  0590                     	;# 
   943  0591                     	;# 
   944  0592                     	;# 
   945  0593                     	;# 
   946  060C                     	;# 
   947  060D                     	;# 
   948  060E                     	;# 
   949  060F                     	;# 
   950  0610                     	;# 
   951  0611                     	;# 
   952  0612                     	;# 
   953  0613                     	;# 
   954  0614                     	;# 
   955  0616                     	;# 
   956  0617                     	;# 
   957  0618                     	;# 
   958  0619                     	;# 
   959  061A                     	;# 
   960  061B                     	;# 
   961  061C                     	;# 
   962  061D                     	;# 
   963  061E                     	;# 
   964  068C                     	;# 
   965  068D                     	;# 
   966  068E                     	;# 
   967  068F                     	;# 
   968  0690                     	;# 
   969  0691                     	;# 
   970  0692                     	;# 
   971  0693                     	;# 
   972  0694                     	;# 
   973  070C                     	;# 
   974  070D                     	;# 
   975  070E                     	;# 
   976  070F                     	;# 
   977  0710                     	;# 
   978  0711                     	;# 
   979  0712                     	;# 
   980  0713                     	;# 
   981  0714                     	;# 
   982  0716                     	;# 
   983  0717                     	;# 
   984  0718                     	;# 
   985  0719                     	;# 
   986  071A                     	;# 
   987  071B                     	;# 
   988  071C                     	;# 
   989  071D                     	;# 
   990  071E                     	;# 
   991  0796                     	;# 
   992  0797                     	;# 
   993  0798                     	;# 
   994  0799                     	;# 
   995  079A                     	;# 
   996  079B                     	;# 
   997  080C                     	;# 
   998  080D                     	;# 
   999  080E                     	;# 
  1000  080F                     	;# 
  1001  0810                     	;# 
  1002  0811                     	;# 
  1003  0812                     	;# 
  1004  0813                     	;# 
  1005  0814                     	;# 
  1006  081A                     	;# 
  1007  081B                     	;# 
  1008  081C                     	;# 
  1009  081D                     	;# 
  1010  081E                     	;# 
  1011  081F                     	;# 
  1012  088C                     	;# 
  1013  088D                     	;# 
  1014  088E                     	;# 
  1015  088F                     	;# 
  1016  0890                     	;# 
  1017  0891                     	;# 
  1018  0892                     	;# 
  1019  0893                     	;# 
  1020  0895                     	;# 
  1021  0896                     	;# 
  1022  0897                     	;# 
  1023  0898                     	;# 
  1024  0899                     	;# 
  1025  089A                     	;# 
  1026  089B                     	;# 
  1027  090C                     	;# 
  1028  090E                     	;# 
  1029  090F                     	;# 
  1030  091F                     	;# 
  1031  091F                     	;# 
  1032  098F                     	;# 
  1033  098F                     	;# 
  1034  0990                     	;# 
  1035  0991                     	;# 
  1036  0992                     	;# 
  1037  0993                     	;# 
  1038  0994                     	;# 
  1039  0995                     	;# 
  1040  0996                     	;# 
  1041  0997                     	;# 
  1042  0E0F                     	;# 
  1043  0E10                     	;# 
  1044  0E11                     	;# 
  1045  0E12                     	;# 
  1046  0E13                     	;# 
  1047  0E14                     	;# 
  1048  0E15                     	;# 
  1049  0E16                     	;# 
  1050  0E17                     	;# 
  1051  0E18                     	;# 
  1052  0E19                     	;# 
  1053  0E1A                     	;# 
  1054  0E1B                     	;# 
  1055  0E1C                     	;# 
  1056  0E1D                     	;# 
  1057  0E1E                     	;# 
  1058  0E1F                     	;# 
  1059  0E20                     	;# 
  1060  0E21                     	;# 
  1061  0E22                     	;# 
  1062  0E23                     	;# 
  1063  0E24                     	;# 
  1064  0E25                     	;# 
  1065  0E26                     	;# 
  1066  0E27                     	;# 
  1067  0E28                     	;# 
  1068  0E29                     	;# 
  1069  0E2A                     	;# 
  1070  0E2B                     	;# 
  1071  0E2C                     	;# 
  1072  0E2D                     	;# 
  1073  0E2E                     	;# 
  1074  0E2F                     	;# 
  1075  0E30                     	;# 
  1076  0E31                     	;# 
  1077  0E32                     	;# 
  1078  0E33                     	;# 
  1079  0E34                     	;# 
  1080  0E35                     	;# 
  1081  0E36                     	;# 
  1082  0E37                     	;# 
  1083  0E8F                     	;# 
  1084  0E90                     	;# 
  1085  0E91                     	;# 
  1086  0E92                     	;# 
  1087  0E93                     	;# 
  1088  0E94                     	;# 
  1089  0E95                     	;# 
  1090  0E96                     	;# 
  1091  0E97                     	;# 
  1092  0E9C                     	;# 
  1093  0E9D                     	;# 
  1094  0E9E                     	;# 
  1095  0EA1                     	;# 
  1096  0EA2                     	;# 
  1097  0EA3                     	;# 
  1098  0EA4                     	;# 
  1099  0EA5                     	;# 
  1100  0EA9                     	;# 
  1101  0EAA                     	;# 
  1102  0EAB                     	;# 
  1103  0EAC                     	;# 
  1104  0EB1                     	;# 
  1105  0EB2                     	;# 
  1106  0EB3                     	;# 
  1107  0EB8                     	;# 
  1108  0EB9                     	;# 
  1109  0EBA                     	;# 
  1110  0EBB                     	;# 
  1111  0EBC                     	;# 
  1112  0EBD                     	;# 
  1113  0EBE                     	;# 
  1114  0EC3                     	;# 
  1115  0EC5                     	;# 
  1116  0EC6                     	;# 
  1117  0EC7                     	;# 
  1118  0EC8                     	;# 
  1119  0EC9                     	;# 
  1120  0ECA                     	;# 
  1121  0ECB                     	;# 
  1122  0ECC                     	;# 
  1123  0F10                     	;# 
  1124  0F11                     	;# 
  1125  0F12                     	;# 
  1126  0F13                     	;# 
  1127  0F14                     	;# 
  1128  0F15                     	;# 
  1129  0F16                     	;# 
  1130  0F17                     	;# 
  1131  0F18                     	;# 
  1132  0F19                     	;# 
  1133  0F1A                     	;# 
  1134  0F1B                     	;# 
  1135  0F1C                     	;# 
  1136  0F1D                     	;# 
  1137  0F1E                     	;# 
  1138  0F1F                     	;# 
  1139  0F20                     	;# 
  1140  0F21                     	;# 
  1141  0F22                     	;# 
  1142  0F23                     	;# 
  1143  0F24                     	;# 
  1144  0F25                     	;# 
  1145  0F26                     	;# 
  1146  0F27                     	;# 
  1147  0F28                     	;# 
  1148  0F29                     	;# 
  1149  0F2A                     	;# 
  1150  0F2B                     	;# 
  1151  0F2C                     	;# 
  1152  0F2D                     	;# 
  1153  0F2E                     	;# 
  1154  0F2F                     	;# 
  1155  0F30                     	;# 
  1156  0F31                     	;# 
  1157  0F32                     	;# 
  1158  0F38                     	;# 
  1159  0F39                     	;# 
  1160  0F3A                     	;# 
  1161  0F3B                     	;# 
  1162  0F3C                     	;# 
  1163  0F3D                     	;# 
  1164  0F3E                     	;# 
  1165  0F3F                     	;# 
  1166  0F40                     	;# 
  1167  0F41                     	;# 
  1168  0F43                     	;# 
  1169  0F44                     	;# 
  1170  0F45                     	;# 
  1171  0F46                     	;# 
  1172  0F47                     	;# 
  1173  0F48                     	;# 
  1174  0F49                     	;# 
  1175  0F4A                     	;# 
  1176  0F4B                     	;# 
  1177  0F4C                     	;# 
  1178  0F4E                     	;# 
  1179  0F4F                     	;# 
  1180  0F50                     	;# 
  1181  0F51                     	;# 
  1182  0F52                     	;# 
  1183  0F53                     	;# 
  1184  0F54                     	;# 
  1185  0F55                     	;# 
  1186  0F56                     	;# 
  1187  0F57                     	;# 
  1188  0F59                     	;# 
  1189  0F5A                     	;# 
  1190  0F5B                     	;# 
  1191  0F5C                     	;# 
  1192  0F5D                     	;# 
  1193  0F61                     	;# 
  1194  0F62                     	;# 
  1195  0F64                     	;# 
  1196  0F65                     	;# 
  1197  0F66                     	;# 
  1198  0F67                     	;# 
  1199  0F68                     	;# 
  1200  0F69                     	;# 
  1201  0F6A                     	;# 
  1202  0F6B                     	;# 
  1203  0F6C                     	;# 
  1204  0F6D                     	;# 
  1205  0FE4                     	;# 
  1206  0FE5                     	;# 
  1207  0FE6                     	;# 
  1208  0FE7                     	;# 
  1209  0FE8                     	;# 
  1210  0FE9                     	;# 
  1211  0FEA                     	;# 
  1212  0FEB                     	;# 
  1213  0FED                     	;# 
  1214  0FEE                     	;# 
  1215  0FEF                     	;# 
  1216  0000                     	;# 
  1217  0001                     	;# 
  1218  0002                     	;# 
  1219  0003                     	;# 
  1220  0004                     	;# 
  1221  0005                     	;# 
  1222  0006                     	;# 
  1223  0007                     	;# 
  1224  0008                     	;# 
  1225  0009                     	;# 
  1226  000A                     	;# 
  1227  000B                     	;# 
  1228  000C                     	;# 
  1229  000D                     	;# 
  1230  000E                     	;# 
  1231  000F                     	;# 
  1232  0010                     	;# 
  1233  0011                     	;# 
  1234  0012                     	;# 
  1235  0013                     	;# 
  1236  0014                     	;# 
  1237  0015                     	;# 
  1238  0016                     	;# 
  1239  0017                     	;# 
  1240  0018                     	;# 
  1241  0019                     	;# 
  1242  001A                     	;# 
  1243  001C                     	;# 
  1244  001C                     	;# 
  1245  001D                     	;# 
  1246  001D                     	;# 
  1247  001E                     	;# 
  1248  001F                     	;# 
  1249  008C                     	;# 
  1250  008C                     	;# 
  1251  008D                     	;# 
  1252  008E                     	;# 
  1253  008E                     	;# 
  1254  008F                     	;# 
  1255  0090                     	;# 
  1256  0090                     	;# 
  1257  0091                     	;# 
  1258  0093                     	;# 
  1259  0094                     	;# 
  1260  0095                     	;# 
  1261  0096                     	;# 
  1262  0097                     	;# 
  1263  0098                     	;# 
  1264  0099                     	;# 
  1265  009A                     	;# 
  1266  009B                     	;# 
  1267  009C                     	;# 
  1268  009D                     	;# 
  1269  009E                     	;# 
  1270  010C                     	;# 
  1271  010D                     	;# 
  1272  010E                     	;# 
  1273  010E                     	;# 
  1274  010F                     	;# 
  1275  0110                     	;# 
  1276  0110                     	;# 
  1277  0111                     	;# 
  1278  0112                     	;# 
  1279  0112                     	;# 
  1280  0113                     	;# 
  1281  0114                     	;# 
  1282  0114                     	;# 
  1283  0115                     	;# 
  1284  0116                     	;# 
  1285  0116                     	;# 
  1286  0117                     	;# 
  1287  0119                     	;# 
  1288  0119                     	;# 
  1289  0119                     	;# 
  1290  011A                     	;# 
  1291  011A                     	;# 
  1292  011A                     	;# 
  1293  011B                     	;# 
  1294  011B                     	;# 
  1295  011B                     	;# 
  1296  011B                     	;# 
  1297  011B                     	;# 
  1298  011C                     	;# 
  1299  011C                     	;# 
  1300  011C                     	;# 
  1301  011D                     	;# 
  1302  011D                     	;# 
  1303  011D                     	;# 
  1304  011E                     	;# 
  1305  011E                     	;# 
  1306  011E                     	;# 
  1307  011F                     	;# 
  1308  011F                     	;# 
  1309  011F                     	;# 
  1310  011F                     	;# 
  1311  011F                     	;# 
  1312  018C                     	;# 
  1313  018D                     	;# 
  1314  018E                     	;# 
  1315  018F                     	;# 
  1316  0190                     	;# 
  1317  0191                     	;# 
  1318  0192                     	;# 
  1319  0196                     	;# 
  1320  0197                     	;# 
  1321  0198                     	;# 
  1322  0199                     	;# 
  1323  019A                     	;# 
  1324  019B                     	;# 
  1325  019C                     	;# 
  1326  020C                     	;# 
  1327  020C                     	;# 
  1328  020D                     	;# 
  1329  020E                     	;# 
  1330  020F                     	;# 
  1331  020F                     	;# 
  1332  0210                     	;# 
  1333  0210                     	;# 
  1334  0211                     	;# 
  1335  0211                     	;# 
  1336  0212                     	;# 
  1337  0212                     	;# 
  1338  0213                     	;# 
  1339  0214                     	;# 
  1340  0215                     	;# 
  1341  0215                     	;# 
  1342  0216                     	;# 
  1343  0216                     	;# 
  1344  0217                     	;# 
  1345  0217                     	;# 
  1346  0218                     	;# 
  1347  0218                     	;# 
  1348  0219                     	;# 
  1349  021A                     	;# 
  1350  021B                     	;# 
  1351  021B                     	;# 
  1352  021C                     	;# 
  1353  021C                     	;# 
  1354  021D                     	;# 
  1355  021D                     	;# 
  1356  021E                     	;# 
  1357  021F                     	;# 
  1358  028C                     	;# 
  1359  028C                     	;# 
  1360  028D                     	;# 
  1361  028D                     	;# 
  1362  028E                     	;# 
  1363  028F                     	;# 
  1364  0290                     	;# 
  1365  0290                     	;# 
  1366  0291                     	;# 
  1367  0292                     	;# 
  1368  0292                     	;# 
  1369  0293                     	;# 
  1370  0293                     	;# 
  1371  0294                     	;# 
  1372  0295                     	;# 
  1373  0296                     	;# 
  1374  0296                     	;# 
  1375  0297                     	;# 
  1376  0298                     	;# 
  1377  0298                     	;# 
  1378  0299                     	;# 
  1379  0299                     	;# 
  1380  029A                     	;# 
  1381  029B                     	;# 
  1382  029C                     	;# 
  1383  029C                     	;# 
  1384  029D                     	;# 
  1385  030C                     	;# 
  1386  030C                     	;# 
  1387  030D                     	;# 
  1388  030E                     	;# 
  1389  030F                     	;# 
  1390  0310                     	;# 
  1391  0310                     	;# 
  1392  0311                     	;# 
  1393  0312                     	;# 
  1394  0313                     	;# 
  1395  0314                     	;# 
  1396  0314                     	;# 
  1397  0315                     	;# 
  1398  0316                     	;# 
  1399  0317                     	;# 
  1400  0318                     	;# 
  1401  0318                     	;# 
  1402  0319                     	;# 
  1403  031A                     	;# 
  1404  031B                     	;# 
  1405  031C                     	;# 
  1406  031C                     	;# 
  1407  031D                     	;# 
  1408  031E                     	;# 
  1409  031F                     	;# 
  1410  038C                     	;# 
  1411  038C                     	;# 
  1412  038D                     	;# 
  1413  038E                     	;# 
  1414  0390                     	;# 
  1415  0390                     	;# 
  1416  0391                     	;# 
  1417  0392                     	;# 
  1418  040C                     	;# 
  1419  040D                     	;# 
  1420  040E                     	;# 
  1421  040F                     	;# 
  1422  0410                     	;# 
  1423  0411                     	;# 
  1424  0416                     	;# 
  1425  0416                     	;# 
  1426  0417                     	;# 
  1427  0418                     	;# 
  1428  0418                     	;# 
  1429  0419                     	;# 
  1430  041A                     	;# 
  1431  041A                     	;# 
  1432  041B                     	;# 
  1433  041C                     	;# 
  1434  041C                     	;# 
  1435  041D                     	;# 
  1436  041E                     	;# 
  1437  041F                     	;# 
  1438  048C                     	;# 
  1439  048C                     	;# 
  1440  048D                     	;# 
  1441  048E                     	;# 
  1442  048F                     	;# 
  1443  048F                     	;# 
  1444  0490                     	;# 
  1445  0491                     	;# 
  1446  0492                     	;# 
  1447  0492                     	;# 
  1448  0493                     	;# 
  1449  0494                     	;# 
  1450  0495                     	;# 
  1451  0495                     	;# 
  1452  0496                     	;# 
  1453  0497                     	;# 
  1454  0498                     	;# 
  1455  0499                     	;# 
  1456  049A                     	;# 
  1457  049B                     	;# 
  1458  049C                     	;# 
  1459  049D                     	;# 
  1460  050C                     	;# 
  1461  050C                     	;# 
  1462  050D                     	;# 
  1463  050E                     	;# 
  1464  050F                     	;# 
  1465  050F                     	;# 
  1466  0510                     	;# 
  1467  0511                     	;# 
  1468  0512                     	;# 
  1469  0512                     	;# 
  1470  0513                     	;# 
  1471  0514                     	;# 
  1472  0515                     	;# 
  1473  0515                     	;# 
  1474  0516                     	;# 
  1475  0517                     	;# 
  1476  0518                     	;# 
  1477  0519                     	;# 
  1478  051A                     	;# 
  1479  051B                     	;# 
  1480  051C                     	;# 
  1481  051D                     	;# 
  1482  058C                     	;# 
  1483  058C                     	;# 
  1484  058D                     	;# 
  1485  058E                     	;# 
  1486  058F                     	;# 
  1487  058F                     	;# 
  1488  0590                     	;# 
  1489  0591                     	;# 
  1490  0592                     	;# 
  1491  0593                     	;# 
  1492  060C                     	;# 
  1493  060D                     	;# 
  1494  060E                     	;# 
  1495  060F                     	;# 
  1496  0610                     	;# 
  1497  0611                     	;# 
  1498  0612                     	;# 
  1499  0613                     	;# 
  1500  0614                     	;# 
  1501  0616                     	;# 
  1502  0617                     	;# 
  1503  0618                     	;# 
  1504  0619                     	;# 
  1505  061A                     	;# 
  1506  061B                     	;# 
  1507  061C                     	;# 
  1508  061D                     	;# 
  1509  061E                     	;# 
  1510  068C                     	;# 
  1511  068D                     	;# 
  1512  068E                     	;# 
  1513  068F                     	;# 
  1514  0690                     	;# 
  1515  0691                     	;# 
  1516  0692                     	;# 
  1517  0693                     	;# 
  1518  0694                     	;# 
  1519  070C                     	;# 
  1520  070D                     	;# 
  1521  070E                     	;# 
  1522  070F                     	;# 
  1523  0710                     	;# 
  1524  0711                     	;# 
  1525  0712                     	;# 
  1526  0713                     	;# 
  1527  0714                     	;# 
  1528  0716                     	;# 
  1529  0717                     	;# 
  1530  0718                     	;# 
  1531  0719                     	;# 
  1532  071A                     	;# 
  1533  071B                     	;# 
  1534  071C                     	;# 
  1535  071D                     	;# 
  1536  071E                     	;# 
  1537  0796                     	;# 
  1538  0797                     	;# 
  1539  0798                     	;# 
  1540  0799                     	;# 
  1541  079A                     	;# 
  1542  079B                     	;# 
  1543  080C                     	;# 
  1544  080D                     	;# 
  1545  080E                     	;# 
  1546  080F                     	;# 
  1547  0810                     	;# 
  1548  0811                     	;# 
  1549  0812                     	;# 
  1550  0813                     	;# 
  1551  0814                     	;# 
  1552  081A                     	;# 
  1553  081B                     	;# 
  1554  081C                     	;# 
  1555  081D                     	;# 
  1556  081E                     	;# 
  1557  081F                     	;# 
  1558  088C                     	;# 
  1559  088D                     	;# 
  1560  088E                     	;# 
  1561  088F                     	;# 
  1562  0890                     	;# 
  1563  0891                     	;# 
  1564  0892                     	;# 
  1565  0893                     	;# 
  1566  0895                     	;# 
  1567  0896                     	;# 
  1568  0897                     	;# 
  1569  0898                     	;# 
  1570  0899                     	;# 
  1571  089A                     	;# 
  1572  089B                     	;# 
  1573  090C                     	;# 
  1574  090E                     	;# 
  1575  090F                     	;# 
  1576  091F                     	;# 
  1577  091F                     	;# 
  1578  098F                     	;# 
  1579  098F                     	;# 
  1580  0990                     	;# 
  1581  0991                     	;# 
  1582  0992                     	;# 
  1583  0993                     	;# 
  1584  0994                     	;# 
  1585  0995                     	;# 
  1586  0996                     	;# 
  1587  0997                     	;# 
  1588  0E0F                     	;# 
  1589  0E10                     	;# 
  1590  0E11                     	;# 
  1591  0E12                     	;# 
  1592  0E13                     	;# 
  1593  0E14                     	;# 
  1594  0E15                     	;# 
  1595  0E16                     	;# 
  1596  0E17                     	;# 
  1597  0E18                     	;# 
  1598  0E19                     	;# 
  1599  0E1A                     	;# 
  1600  0E1B                     	;# 
  1601  0E1C                     	;# 
  1602  0E1D                     	;# 
  1603  0E1E                     	;# 
  1604  0E1F                     	;# 
  1605  0E20                     	;# 
  1606  0E21                     	;# 
  1607  0E22                     	;# 
  1608  0E23                     	;# 
  1609  0E24                     	;# 
  1610  0E25                     	;# 
  1611  0E26                     	;# 
  1612  0E27                     	;# 
  1613  0E28                     	;# 
  1614  0E29                     	;# 
  1615  0E2A                     	;# 
  1616  0E2B                     	;# 
  1617  0E2C                     	;# 
  1618  0E2D                     	;# 
  1619  0E2E                     	;# 
  1620  0E2F                     	;# 
  1621  0E30                     	;# 
  1622  0E31                     	;# 
  1623  0E32                     	;# 
  1624  0E33                     	;# 
  1625  0E34                     	;# 
  1626  0E35                     	;# 
  1627  0E36                     	;# 
  1628  0E37                     	;# 
  1629  0E8F                     	;# 
  1630  0E90                     	;# 
  1631  0E91                     	;# 
  1632  0E92                     	;# 
  1633  0E93                     	;# 
  1634  0E94                     	;# 
  1635  0E95                     	;# 
  1636  0E96                     	;# 
  1637  0E97                     	;# 
  1638  0E9C                     	;# 
  1639  0E9D                     	;# 
  1640  0E9E                     	;# 
  1641  0EA1                     	;# 
  1642  0EA2                     	;# 
  1643  0EA3                     	;# 
  1644  0EA4                     	;# 
  1645  0EA5                     	;# 
  1646  0EA9                     	;# 
  1647  0EAA                     	;# 
  1648  0EAB                     	;# 
  1649  0EAC                     	;# 
  1650  0EB1                     	;# 
  1651  0EB2                     	;# 
  1652  0EB3                     	;# 
  1653  0EB8                     	;# 
  1654  0EB9                     	;# 
  1655  0EBA                     	;# 
  1656  0EBB                     	;# 
  1657  0EBC                     	;# 
  1658  0EBD                     	;# 
  1659  0EBE                     	;# 
  1660  0EC3                     	;# 
  1661  0EC5                     	;# 
  1662  0EC6                     	;# 
  1663  0EC7                     	;# 
  1664  0EC8                     	;# 
  1665  0EC9                     	;# 
  1666  0ECA                     	;# 
  1667  0ECB                     	;# 
  1668  0ECC                     	;# 
  1669  0F10                     	;# 
  1670  0F11                     	;# 
  1671  0F12                     	;# 
  1672  0F13                     	;# 
  1673  0F14                     	;# 
  1674  0F15                     	;# 
  1675  0F16                     	;# 
  1676  0F17                     	;# 
  1677  0F18                     	;# 
  1678  0F19                     	;# 
  1679  0F1A                     	;# 
  1680  0F1B                     	;# 
  1681  0F1C                     	;# 
  1682  0F1D                     	;# 
  1683  0F1E                     	;# 
  1684  0F1F                     	;# 
  1685  0F20                     	;# 
  1686  0F21                     	;# 
  1687  0F22                     	;# 
  1688  0F23                     	;# 
  1689  0F24                     	;# 
  1690  0F25                     	;# 
  1691  0F26                     	;# 
  1692  0F27                     	;# 
  1693  0F28                     	;# 
  1694  0F29                     	;# 
  1695  0F2A                     	;# 
  1696  0F2B                     	;# 
  1697  0F2C                     	;# 
  1698  0F2D                     	;# 
  1699  0F2E                     	;# 
  1700  0F2F                     	;# 
  1701  0F30                     	;# 
  1702  0F31                     	;# 
  1703  0F32                     	;# 
  1704  0F38                     	;# 
  1705  0F39                     	;# 
  1706  0F3A                     	;# 
  1707  0F3B                     	;# 
  1708  0F3C                     	;# 
  1709  0F3D                     	;# 
  1710  0F3E                     	;# 
  1711  0F3F                     	;# 
  1712  0F40                     	;# 
  1713  0F41                     	;# 
  1714  0F43                     	;# 
  1715  0F44                     	;# 
  1716  0F45                     	;# 
  1717  0F46                     	;# 
  1718  0F47                     	;# 
  1719  0F48                     	;# 
  1720  0F49                     	;# 
  1721  0F4A                     	;# 
  1722  0F4B                     	;# 
  1723  0F4C                     	;# 
  1724  0F4E                     	;# 
  1725  0F4F                     	;# 
  1726  0F50                     	;# 
  1727  0F51                     	;# 
  1728  0F52                     	;# 
  1729  0F53                     	;# 
  1730  0F54                     	;# 
  1731  0F55                     	;# 
  1732  0F56                     	;# 
  1733  0F57                     	;# 
  1734  0F59                     	;# 
  1735  0F5A                     	;# 
  1736  0F5B                     	;# 
  1737  0F5C                     	;# 
  1738  0F5D                     	;# 
  1739  0F61                     	;# 
  1740  0F62                     	;# 
  1741  0F64                     	;# 
  1742  0F65                     	;# 
  1743  0F66                     	;# 
  1744  0F67                     	;# 
  1745  0F68                     	;# 
  1746  0F69                     	;# 
  1747  0F6A                     	;# 
  1748  0F6B                     	;# 
  1749  0F6C                     	;# 
  1750  0F6D                     	;# 
  1751  0FE4                     	;# 
  1752  0FE5                     	;# 
  1753  0FE6                     	;# 
  1754  0FE7                     	;# 
  1755  0FE8                     	;# 
  1756  0FE9                     	;# 
  1757  0FEA                     	;# 
  1758  0FEB                     	;# 
  1759  0FED                     	;# 
  1760  0FEE                     	;# 
  1761  0FEF                     	;# 
  1762  0000                     	;# 
  1763  0001                     	;# 
  1764  0002                     	;# 
  1765  0003                     	;# 
  1766  0004                     	;# 
  1767  0005                     	;# 
  1768  0006                     	;# 
  1769  0007                     	;# 
  1770  0008                     	;# 
  1771  0009                     	;# 
  1772  000A                     	;# 
  1773  000B                     	;# 
  1774  000C                     	;# 
  1775  000D                     	;# 
  1776  000E                     	;# 
  1777  000F                     	;# 
  1778  0010                     	;# 
  1779  0011                     	;# 
  1780  0012                     	;# 
  1781  0013                     	;# 
  1782  0014                     	;# 
  1783  0015                     	;# 
  1784  0016                     	;# 
  1785  0017                     	;# 
  1786  0018                     	;# 
  1787  0019                     	;# 
  1788  001A                     	;# 
  1789  001C                     	;# 
  1790  001C                     	;# 
  1791  001D                     	;# 
  1792  001D                     	;# 
  1793  001E                     	;# 
  1794  001F                     	;# 
  1795  008C                     	;# 
  1796  008C                     	;# 
  1797  008D                     	;# 
  1798  008E                     	;# 
  1799  008E                     	;# 
  1800  008F                     	;# 
  1801  0090                     	;# 
  1802  0090                     	;# 
  1803  0091                     	;# 
  1804  0093                     	;# 
  1805  0094                     	;# 
  1806  0095                     	;# 
  1807  0096                     	;# 
  1808  0097                     	;# 
  1809  0098                     	;# 
  1810  0099                     	;# 
  1811  009A                     	;# 
  1812  009B                     	;# 
  1813  009C                     	;# 
  1814  009D                     	;# 
  1815  009E                     	;# 
  1816  010C                     	;# 
  1817  010D                     	;# 
  1818  010E                     	;# 
  1819  010E                     	;# 
  1820  010F                     	;# 
  1821  0110                     	;# 
  1822  0110                     	;# 
  1823  0111                     	;# 
  1824  0112                     	;# 
  1825  0112                     	;# 
  1826  0113                     	;# 
  1827  0114                     	;# 
  1828  0114                     	;# 
  1829  0115                     	;# 
  1830  0116                     	;# 
  1831  0116                     	;# 
  1832  0117                     	;# 
  1833  0119                     	;# 
  1834  0119                     	;# 
  1835  0119                     	;# 
  1836  011A                     	;# 
  1837  011A                     	;# 
  1838  011A                     	;# 
  1839  011B                     	;# 
  1840  011B                     	;# 
  1841  011B                     	;# 
  1842  011B                     	;# 
  1843  011B                     	;# 
  1844  011C                     	;# 
  1845  011C                     	;# 
  1846  011C                     	;# 
  1847  011D                     	;# 
  1848  011D                     	;# 
  1849  011D                     	;# 
  1850  011E                     	;# 
  1851  011E                     	;# 
  1852  011E                     	;# 
  1853  011F                     	;# 
  1854  011F                     	;# 
  1855  011F                     	;# 
  1856  011F                     	;# 
  1857  011F                     	;# 
  1858  018C                     	;# 
  1859  018D                     	;# 
  1860  018E                     	;# 
  1861  018F                     	;# 
  1862  0190                     	;# 
  1863  0191                     	;# 
  1864  0192                     	;# 
  1865  0196                     	;# 
  1866  0197                     	;# 
  1867  0198                     	;# 
  1868  0199                     	;# 
  1869  019A                     	;# 
  1870  019B                     	;# 
  1871  019C                     	;# 
  1872  020C                     	;# 
  1873  020C                     	;# 
  1874  020D                     	;# 
  1875  020E                     	;# 
  1876  020F                     	;# 
  1877  020F                     	;# 
  1878  0210                     	;# 
  1879  0210                     	;# 
  1880  0211                     	;# 
  1881  0211                     	;# 
  1882  0212                     	;# 
  1883  0212                     	;# 
  1884  0213                     	;# 
  1885  0214                     	;# 
  1886  0215                     	;# 
  1887  0215                     	;# 
  1888  0216                     	;# 
  1889  0216                     	;# 
  1890  0217                     	;# 
  1891  0217                     	;# 
  1892  0218                     	;# 
  1893  0218                     	;# 
  1894  0219                     	;# 
  1895  021A                     	;# 
  1896  021B                     	;# 
  1897  021B                     	;# 
  1898  021C                     	;# 
  1899  021C                     	;# 
  1900  021D                     	;# 
  1901  021D                     	;# 
  1902  021E                     	;# 
  1903  021F                     	;# 
  1904  028C                     	;# 
  1905  028C                     	;# 
  1906  028D                     	;# 
  1907  028D                     	;# 
  1908  028E                     	;# 
  1909  028F                     	;# 
  1910  0290                     	;# 
  1911  0290                     	;# 
  1912  0291                     	;# 
  1913  0292                     	;# 
  1914  0292                     	;# 
  1915  0293                     	;# 
  1916  0293                     	;# 
  1917  0294                     	;# 
  1918  0295                     	;# 
  1919  0296                     	;# 
  1920  0296                     	;# 
  1921  0297                     	;# 
  1922  0298                     	;# 
  1923  0298                     	;# 
  1924  0299                     	;# 
  1925  0299                     	;# 
  1926  029A                     	;# 
  1927  029B                     	;# 
  1928  029C                     	;# 
  1929  029C                     	;# 
  1930  029D                     	;# 
  1931  030C                     	;# 
  1932  030C                     	;# 
  1933  030D                     	;# 
  1934  030E                     	;# 
  1935  030F                     	;# 
  1936  0310                     	;# 
  1937  0310                     	;# 
  1938  0311                     	;# 
  1939  0312                     	;# 
  1940  0313                     	;# 
  1941  0314                     	;# 
  1942  0314                     	;# 
  1943  0315                     	;# 
  1944  0316                     	;# 
  1945  0317                     	;# 
  1946  0318                     	;# 
  1947  0318                     	;# 
  1948  0319                     	;# 
  1949  031A                     	;# 
  1950  031B                     	;# 
  1951  031C                     	;# 
  1952  031C                     	;# 
  1953  031D                     	;# 
  1954  031E                     	;# 
  1955  031F                     	;# 
  1956  038C                     	;# 
  1957  038C                     	;# 
  1958  038D                     	;# 
  1959  038E                     	;# 
  1960  0390                     	;# 
  1961  0390                     	;# 
  1962  0391                     	;# 
  1963  0392                     	;# 
  1964  040C                     	;# 
  1965  040D                     	;# 
  1966  040E                     	;# 
  1967  040F                     	;# 
  1968  0410                     	;# 
  1969  0411                     	;# 
  1970  0416                     	;# 
  1971  0416                     	;# 
  1972  0417                     	;# 
  1973  0418                     	;# 
  1974  0418                     	;# 
  1975  0419                     	;# 
  1976  041A                     	;# 
  1977  041A                     	;# 
  1978  041B                     	;# 
  1979  041C                     	;# 
  1980  041C                     	;# 
  1981  041D                     	;# 
  1982  041E                     	;# 
  1983  041F                     	;# 
  1984  048C                     	;# 
  1985  048C                     	;# 
  1986  048D                     	;# 
  1987  048E                     	;# 
  1988  048F                     	;# 
  1989  048F                     	;# 
  1990  0490                     	;# 
  1991  0491                     	;# 
  1992  0492                     	;# 
  1993  0492                     	;# 
  1994  0493                     	;# 
  1995  0494                     	;# 
  1996  0495                     	;# 
  1997  0495                     	;# 
  1998  0496                     	;# 
  1999  0497                     	;# 
  2000  0498                     	;# 
  2001  0499                     	;# 
  2002  049A                     	;# 
  2003  049B                     	;# 
  2004  049C                     	;# 
  2005  049D                     	;# 
  2006  050C                     	;# 
  2007  050C                     	;# 
  2008  050D                     	;# 
  2009  050E                     	;# 
  2010  050F                     	;# 
  2011  050F                     	;# 
  2012  0510                     	;# 
  2013  0511                     	;# 
  2014  0512                     	;# 
  2015  0512                     	;# 
  2016  0513                     	;# 
  2017  0514                     	;# 
  2018  0515                     	;# 
  2019  0515                     	;# 
  2020  0516                     	;# 
  2021  0517                     	;# 
  2022  0518                     	;# 
  2023  0519                     	;# 
  2024  051A                     	;# 
  2025  051B                     	;# 
  2026  051C                     	;# 
  2027  051D                     	;# 
  2028  058C                     	;# 
  2029  058C                     	;# 
  2030  058D                     	;# 
  2031  058E                     	;# 
  2032  058F                     	;# 
  2033  058F                     	;# 
  2034  0590                     	;# 
  2035  0591                     	;# 
  2036  0592                     	;# 
  2037  0593                     	;# 
  2038  060C                     	;# 
  2039  060D                     	;# 
  2040  060E                     	;# 
  2041  060F                     	;# 
  2042  0610                     	;# 
  2043  0611                     	;# 
  2044  0612                     	;# 
  2045  0613                     	;# 
  2046  0614                     	;# 
  2047  0616                     	;# 
  2048  0617                     	;# 
  2049  0618                     	;# 
  2050  0619                     	;# 
  2051  061A                     	;# 
  2052  061B                     	;# 
  2053  061C                     	;# 
  2054  061D                     	;# 
  2055  061E                     	;# 
  2056  068C                     	;# 
  2057  068D                     	;# 
  2058  068E                     	;# 
  2059  068F                     	;# 
  2060  0690                     	;# 
  2061  0691                     	;# 
  2062  0692                     	;# 
  2063  0693                     	;# 
  2064  0694                     	;# 
  2065  070C                     	;# 
  2066  070D                     	;# 
  2067  070E                     	;# 
  2068  070F                     	;# 
  2069  0710                     	;# 
  2070  0711                     	;# 
  2071  0712                     	;# 
  2072  0713                     	;# 
  2073  0714                     	;# 
  2074  0716                     	;# 
  2075  0717                     	;# 
  2076  0718                     	;# 
  2077  0719                     	;# 
  2078  071A                     	;# 
  2079  071B                     	;# 
  2080  071C                     	;# 
  2081  071D                     	;# 
  2082  071E                     	;# 
  2083  0796                     	;# 
  2084  0797                     	;# 
  2085  0798                     	;# 
  2086  0799                     	;# 
  2087  079A                     	;# 
  2088  079B                     	;# 
  2089  080C                     	;# 
  2090  080D                     	;# 
  2091  080E                     	;# 
  2092  080F                     	;# 
  2093  0810                     	;# 
  2094  0811                     	;# 
  2095  0812                     	;# 
  2096  0813                     	;# 
  2097  0814                     	;# 
  2098  081A                     	;# 
  2099  081B                     	;# 
  2100  081C                     	;# 
  2101  081D                     	;# 
  2102  081E                     	;# 
  2103  081F                     	;# 
  2104  088C                     	;# 
  2105  088D                     	;# 
  2106  088E                     	;# 
  2107  088F                     	;# 
  2108  0890                     	;# 
  2109  0891                     	;# 
  2110  0892                     	;# 
  2111  0893                     	;# 
  2112  0895                     	;# 
  2113  0896                     	;# 
  2114  0897                     	;# 
  2115  0898                     	;# 
  2116  0899                     	;# 
  2117  089A                     	;# 
  2118  089B                     	;# 
  2119  090C                     	;# 
  2120  090E                     	;# 
  2121  090F                     	;# 
  2122  091F                     	;# 
  2123  091F                     	;# 
  2124  098F                     	;# 
  2125  098F                     	;# 
  2126  0990                     	;# 
  2127  0991                     	;# 
  2128  0992                     	;# 
  2129  0993                     	;# 
  2130  0994                     	;# 
  2131  0995                     	;# 
  2132  0996                     	;# 
  2133  0997                     	;# 
  2134  0E0F                     	;# 
  2135  0E10                     	;# 
  2136  0E11                     	;# 
  2137  0E12                     	;# 
  2138  0E13                     	;# 
  2139  0E14                     	;# 
  2140  0E15                     	;# 
  2141  0E16                     	;# 
  2142  0E17                     	;# 
  2143  0E18                     	;# 
  2144  0E19                     	;# 
  2145  0E1A                     	;# 
  2146  0E1B                     	;# 
  2147  0E1C                     	;# 
  2148  0E1D                     	;# 
  2149  0E1E                     	;# 
  2150  0E1F                     	;# 
  2151  0E20                     	;# 
  2152  0E21                     	;# 
  2153  0E22                     	;# 
  2154  0E23                     	;# 
  2155  0E24                     	;# 
  2156  0E25                     	;# 
  2157  0E26                     	;# 
  2158  0E27                     	;# 
  2159  0E28                     	;# 
  2160  0E29                     	;# 
  2161  0E2A                     	;# 
  2162  0E2B                     	;# 
  2163  0E2C                     	;# 
  2164  0E2D                     	;# 
  2165  0E2E                     	;# 
  2166  0E2F                     	;# 
  2167  0E30                     	;# 
  2168  0E31                     	;# 
  2169  0E32                     	;# 
  2170  0E33                     	;# 
  2171  0E34                     	;# 
  2172  0E35                     	;# 
  2173  0E36                     	;# 
  2174  0E37                     	;# 
  2175  0E8F                     	;# 
  2176  0E90                     	;# 
  2177  0E91                     	;# 
  2178  0E92                     	;# 
  2179  0E93                     	;# 
  2180  0E94                     	;# 
  2181  0E95                     	;# 
  2182  0E96                     	;# 
  2183  0E97                     	;# 
  2184  0E9C                     	;# 
  2185  0E9D                     	;# 
  2186  0E9E                     	;# 
  2187  0EA1                     	;# 
  2188  0EA2                     	;# 
  2189  0EA3                     	;# 
  2190  0EA4                     	;# 
  2191  0EA5                     	;# 
  2192  0EA9                     	;# 
  2193  0EAA                     	;# 
  2194  0EAB                     	;# 
  2195  0EAC                     	;# 
  2196  0EB1                     	;# 
  2197  0EB2                     	;# 
  2198  0EB3                     	;# 
  2199  0EB8                     	;# 
  2200  0EB9                     	;# 
  2201  0EBA                     	;# 
  2202  0EBB                     	;# 
  2203  0EBC                     	;# 
  2204  0EBD                     	;# 
  2205  0EBE                     	;# 
  2206  0EC3                     	;# 
  2207  0EC5                     	;# 
  2208  0EC6                     	;# 
  2209  0EC7                     	;# 
  2210  0EC8                     	;# 
  2211  0EC9                     	;# 
  2212  0ECA                     	;# 
  2213  0ECB                     	;# 
  2214  0ECC                     	;# 
  2215  0F10                     	;# 
  2216  0F11                     	;# 
  2217  0F12                     	;# 
  2218  0F13                     	;# 
  2219  0F14                     	;# 
  2220  0F15                     	;# 
  2221  0F16                     	;# 
  2222  0F17                     	;# 
  2223  0F18                     	;# 
  2224  0F19                     	;# 
  2225  0F1A                     	;# 
  2226  0F1B                     	;# 
  2227  0F1C                     	;# 
  2228  0F1D                     	;# 
  2229  0F1E                     	;# 
  2230  0F1F                     	;# 
  2231  0F20                     	;# 
  2232  0F21                     	;# 
  2233  0F22                     	;# 
  2234  0F23                     	;# 
  2235  0F24                     	;# 
  2236  0F25                     	;# 
  2237  0F26                     	;# 
  2238  0F27                     	;# 
  2239  0F28                     	;# 
  2240  0F29                     	;# 
  2241  0F2A                     	;# 
  2242  0F2B                     	;# 
  2243  0F2C                     	;# 
  2244  0F2D                     	;# 
  2245  0F2E                     	;# 
  2246  0F2F                     	;# 
  2247  0F30                     	;# 
  2248  0F31                     	;# 
  2249  0F32                     	;# 
  2250  0F38                     	;# 
  2251  0F39                     	;# 
  2252  0F3A                     	;# 
  2253  0F3B                     	;# 
  2254  0F3C                     	;# 
  2255  0F3D                     	;# 
  2256  0F3E                     	;# 
  2257  0F3F                     	;# 
  2258  0F40                     	;# 
  2259  0F41                     	;# 
  2260  0F43                     	;# 
  2261  0F44                     	;# 
  2262  0F45                     	;# 
  2263  0F46                     	;# 
  2264  0F47                     	;# 
  2265  0F48                     	;# 
  2266  0F49                     	;# 
  2267  0F4A                     	;# 
  2268  0F4B                     	;# 
  2269  0F4C                     	;# 
  2270  0F4E                     	;# 
  2271  0F4F                     	;# 
  2272  0F50                     	;# 
  2273  0F51                     	;# 
  2274  0F52                     	;# 
  2275  0F53                     	;# 
  2276  0F54                     	;# 
  2277  0F55                     	;# 
  2278  0F56                     	;# 
  2279  0F57                     	;# 
  2280  0F59                     	;# 
  2281  0F5A                     	;# 
  2282  0F5B                     	;# 
  2283  0F5C                     	;# 
  2284  0F5D                     	;# 
  2285  0F61                     	;# 
  2286  0F62                     	;# 
  2287  0F64                     	;# 
  2288  0F65                     	;# 
  2289  0F66                     	;# 
  2290  0F67                     	;# 
  2291  0F68                     	;# 
  2292  0F69                     	;# 
  2293  0F6A                     	;# 
  2294  0F6B                     	;# 
  2295  0F6C                     	;# 
  2296  0F6D                     	;# 
  2297  0FE4                     	;# 
  2298  0FE5                     	;# 
  2299  0FE6                     	;# 
  2300  0FE7                     	;# 
  2301  0FE8                     	;# 
  2302  0FE9                     	;# 
  2303  0FEA                     	;# 
  2304  0FEB                     	;# 
  2305  0FED                     	;# 
  2306  0FEE                     	;# 
  2307  0FEF                     	;# 
  2308  0000                     	;# 
  2309  0001                     	;# 
  2310  0002                     	;# 
  2311  0003                     	;# 
  2312  0004                     	;# 
  2313  0005                     	;# 
  2314  0006                     	;# 
  2315  0007                     	;# 
  2316  0008                     	;# 
  2317  0009                     	;# 
  2318  000A                     	;# 
  2319  000B                     	;# 
  2320  000C                     	;# 
  2321  000D                     	;# 
  2322  000E                     	;# 
  2323  000F                     	;# 
  2324  0010                     	;# 
  2325  0011                     	;# 
  2326  0012                     	;# 
  2327  0013                     	;# 
  2328  0014                     	;# 
  2329  0015                     	;# 
  2330  0016                     	;# 
  2331  0017                     	;# 
  2332  0018                     	;# 
  2333  0019                     	;# 
  2334  001A                     	;# 
  2335  001C                     	;# 
  2336  001C                     	;# 
  2337  001D                     	;# 
  2338  001D                     	;# 
  2339  001E                     	;# 
  2340  001F                     	;# 
  2341  008C                     	;# 
  2342  008C                     	;# 
  2343  008D                     	;# 
  2344  008E                     	;# 
  2345  008E                     	;# 
  2346  008F                     	;# 
  2347  0090                     	;# 
  2348  0090                     	;# 
  2349  0091                     	;# 
  2350  0093                     	;# 
  2351  0094                     	;# 
  2352  0095                     	;# 
  2353  0096                     	;# 
  2354  0097                     	;# 
  2355  0098                     	;# 
  2356  0099                     	;# 
  2357  009A                     	;# 
  2358  009B                     	;# 
  2359  009C                     	;# 
  2360  009D                     	;# 
  2361  009E                     	;# 
  2362  010C                     	;# 
  2363  010D                     	;# 
  2364  010E                     	;# 
  2365  010E                     	;# 
  2366  010F                     	;# 
  2367  0110                     	;# 
  2368  0110                     	;# 
  2369  0111                     	;# 
  2370  0112                     	;# 
  2371  0112                     	;# 
  2372  0113                     	;# 
  2373  0114                     	;# 
  2374  0114                     	;# 
  2375  0115                     	;# 
  2376  0116                     	;# 
  2377  0116                     	;# 
  2378  0117                     	;# 
  2379  0119                     	;# 
  2380  0119                     	;# 
  2381  0119                     	;# 
  2382  011A                     	;# 
  2383  011A                     	;# 
  2384  011A                     	;# 
  2385  011B                     	;# 
  2386  011B                     	;# 
  2387  011B                     	;# 
  2388  011B                     	;# 
  2389  011B                     	;# 
  2390  011C                     	;# 
  2391  011C                     	;# 
  2392  011C                     	;# 
  2393  011D                     	;# 
  2394  011D                     	;# 
  2395  011D                     	;# 
  2396  011E                     	;# 
  2397  011E                     	;# 
  2398  011E                     	;# 
  2399  011F                     	;# 
  2400  011F                     	;# 
  2401  011F                     	;# 
  2402  011F                     	;# 
  2403  011F                     	;# 
  2404  018C                     	;# 
  2405  018D                     	;# 
  2406  018E                     	;# 
  2407  018F                     	;# 
  2408  0190                     	;# 
  2409  0191                     	;# 
  2410  0192                     	;# 
  2411  0196                     	;# 
  2412  0197                     	;# 
  2413  0198                     	;# 
  2414  0199                     	;# 
  2415  019A                     	;# 
  2416  019B                     	;# 
  2417  019C                     	;# 
  2418  020C                     	;# 
  2419  020C                     	;# 
  2420  020D                     	;# 
  2421  020E                     	;# 
  2422  020F                     	;# 
  2423  020F                     	;# 
  2424  0210                     	;# 
  2425  0210                     	;# 
  2426  0211                     	;# 
  2427  0211                     	;# 
  2428  0212                     	;# 
  2429  0212                     	;# 
  2430  0213                     	;# 
  2431  0214                     	;# 
  2432  0215                     	;# 
  2433  0215                     	;# 
  2434  0216                     	;# 
  2435  0216                     	;# 
  2436  0217                     	;# 
  2437  0217                     	;# 
  2438  0218                     	;# 
  2439  0218                     	;# 
  2440  0219                     	;# 
  2441  021A                     	;# 
  2442  021B                     	;# 
  2443  021B                     	;# 
  2444  021C                     	;# 
  2445  021C                     	;# 
  2446  021D                     	;# 
  2447  021D                     	;# 
  2448  021E                     	;# 
  2449  021F                     	;# 
  2450  028C                     	;# 
  2451  028C                     	;# 
  2452  028D                     	;# 
  2453  028D                     	;# 
  2454  028E                     	;# 
  2455  028F                     	;# 
  2456  0290                     	;# 
  2457  0290                     	;# 
  2458  0291                     	;# 
  2459  0292                     	;# 
  2460  0292                     	;# 
  2461  0293                     	;# 
  2462  0293                     	;# 
  2463  0294                     	;# 
  2464  0295                     	;# 
  2465  0296                     	;# 
  2466  0296                     	;# 
  2467  0297                     	;# 
  2468  0298                     	;# 
  2469  0298                     	;# 
  2470  0299                     	;# 
  2471  0299                     	;# 
  2472  029A                     	;# 
  2473  029B                     	;# 
  2474  029C                     	;# 
  2475  029C                     	;# 
  2476  029D                     	;# 
  2477  030C                     	;# 
  2478  030C                     	;# 
  2479  030D                     	;# 
  2480  030E                     	;# 
  2481  030F                     	;# 
  2482  0310                     	;# 
  2483  0310                     	;# 
  2484  0311                     	;# 
  2485  0312                     	;# 
  2486  0313                     	;# 
  2487  0314                     	;# 
  2488  0314                     	;# 
  2489  0315                     	;# 
  2490  0316                     	;# 
  2491  0317                     	;# 
  2492  0318                     	;# 
  2493  0318                     	;# 
  2494  0319                     	;# 
  2495  031A                     	;# 
  2496  031B                     	;# 
  2497  031C                     	;# 
  2498  031C                     	;# 
  2499  031D                     	;# 
  2500  031E                     	;# 
  2501  031F                     	;# 
  2502  038C                     	;# 
  2503  038C                     	;# 
  2504  038D                     	;# 
  2505  038E                     	;# 
  2506  0390                     	;# 
  2507  0390                     	;# 
  2508  0391                     	;# 
  2509  0392                     	;# 
  2510  040C                     	;# 
  2511  040D                     	;# 
  2512  040E                     	;# 
  2513  040F                     	;# 
  2514  0410                     	;# 
  2515  0411                     	;# 
  2516  0416                     	;# 
  2517  0416                     	;# 
  2518  0417                     	;# 
  2519  0418                     	;# 
  2520  0418                     	;# 
  2521  0419                     	;# 
  2522  041A                     	;# 
  2523  041A                     	;# 
  2524  041B                     	;# 
  2525  041C                     	;# 
  2526  041C                     	;# 
  2527  041D                     	;# 
  2528  041E                     	;# 
  2529  041F                     	;# 
  2530  048C                     	;# 
  2531  048C                     	;# 
  2532  048D                     	;# 
  2533  048E                     	;# 
  2534  048F                     	;# 
  2535  048F                     	;# 
  2536  0490                     	;# 
  2537  0491                     	;# 
  2538  0492                     	;# 
  2539  0492                     	;# 
  2540  0493                     	;# 
  2541  0494                     	;# 
  2542  0495                     	;# 
  2543  0495                     	;# 
  2544  0496                     	;# 
  2545  0497                     	;# 
  2546  0498                     	;# 
  2547  0499                     	;# 
  2548  049A                     	;# 
  2549  049B                     	;# 
  2550  049C                     	;# 
  2551  049D                     	;# 
  2552  050C                     	;# 
  2553  050C                     	;# 
  2554  050D                     	;# 
  2555  050E                     	;# 
  2556  050F                     	;# 
  2557  050F                     	;# 
  2558  0510                     	;# 
  2559  0511                     	;# 
  2560  0512                     	;# 
  2561  0512                     	;# 
  2562  0513                     	;# 
  2563  0514                     	;# 
  2564  0515                     	;# 
  2565  0515                     	;# 
  2566  0516                     	;# 
  2567  0517                     	;# 
  2568  0518                     	;# 
  2569  0519                     	;# 
  2570  051A                     	;# 
  2571  051B                     	;# 
  2572  051C                     	;# 
  2573  051D                     	;# 
  2574  058C                     	;# 
  2575  058C                     	;# 
  2576  058D                     	;# 
  2577  058E                     	;# 
  2578  058F                     	;# 
  2579  058F                     	;# 
  2580  0590                     	;# 
  2581  0591                     	;# 
  2582  0592                     	;# 
  2583  0593                     	;# 
  2584  060C                     	;# 
  2585  060D                     	;# 
  2586  060E                     	;# 
  2587  060F                     	;# 
  2588  0610                     	;# 
  2589  0611                     	;# 
  2590  0612                     	;# 
  2591  0613                     	;# 
  2592  0614                     	;# 
  2593  0616                     	;# 
  2594  0617                     	;# 
  2595  0618                     	;# 
  2596  0619                     	;# 
  2597  061A                     	;# 
  2598  061B                     	;# 
  2599  061C                     	;# 
  2600  061D                     	;# 
  2601  061E                     	;# 
  2602  068C                     	;# 
  2603  068D                     	;# 
  2604  068E                     	;# 
  2605  068F                     	;# 
  2606  0690                     	;# 
  2607  0691                     	;# 
  2608  0692                     	;# 
  2609  0693                     	;# 
  2610  0694                     	;# 
  2611  070C                     	;# 
  2612  070D                     	;# 
  2613  070E                     	;# 
  2614  070F                     	;# 
  2615  0710                     	;# 
  2616  0711                     	;# 
  2617  0712                     	;# 
  2618  0713                     	;# 
  2619  0714                     	;# 
  2620  0716                     	;# 
  2621  0717                     	;# 
  2622  0718                     	;# 
  2623  0719                     	;# 
  2624  071A                     	;# 
  2625  071B                     	;# 
  2626  071C                     	;# 
  2627  071D                     	;# 
  2628  071E                     	;# 
  2629  0796                     	;# 
  2630  0797                     	;# 
  2631  0798                     	;# 
  2632  0799                     	;# 
  2633  079A                     	;# 
  2634  079B                     	;# 
  2635  080C                     	;# 
  2636  080D                     	;# 
  2637  080E                     	;# 
  2638  080F                     	;# 
  2639  0810                     	;# 
  2640  0811                     	;# 
  2641  0812                     	;# 
  2642  0813                     	;# 
  2643  0814                     	;# 
  2644  081A                     	;# 
  2645  081B                     	;# 
  2646  081C                     	;# 
  2647  081D                     	;# 
  2648  081E                     	;# 
  2649  081F                     	;# 
  2650  088C                     	;# 
  2651  088D                     	;# 
  2652  088E                     	;# 
  2653  088F                     	;# 
  2654  0890                     	;# 
  2655  0891                     	;# 
  2656  0892                     	;# 
  2657  0893                     	;# 
  2658  0895                     	;# 
  2659  0896                     	;# 
  2660  0897                     	;# 
  2661  0898                     	;# 
  2662  0899                     	;# 
  2663  089A                     	;# 
  2664  089B                     	;# 
  2665  090C                     	;# 
  2666  090E                     	;# 
  2667  090F                     	;# 
  2668  091F                     	;# 
  2669  091F                     	;# 
  2670  098F                     	;# 
  2671  098F                     	;# 
  2672  0990                     	;# 
  2673  0991                     	;# 
  2674  0992                     	;# 
  2675  0993                     	;# 
  2676  0994                     	;# 
  2677  0995                     	;# 
  2678  0996                     	;# 
  2679  0997                     	;# 
  2680  0E0F                     	;# 
  2681  0E10                     	;# 
  2682  0E11                     	;# 
  2683  0E12                     	;# 
  2684  0E13                     	;# 
  2685  0E14                     	;# 
  2686  0E15                     	;# 
  2687  0E16                     	;# 
  2688  0E17                     	;# 
  2689  0E18                     	;# 
  2690  0E19                     	;# 
  2691  0E1A                     	;# 
  2692  0E1B                     	;# 
  2693  0E1C                     	;# 
  2694  0E1D                     	;# 
  2695  0E1E                     	;# 
  2696  0E1F                     	;# 
  2697  0E20                     	;# 
  2698  0E21                     	;# 
  2699  0E22                     	;# 
  2700  0E23                     	;# 
  2701  0E24                     	;# 
  2702  0E25                     	;# 
  2703  0E26                     	;# 
  2704  0E27                     	;# 
  2705  0E28                     	;# 
  2706  0E29                     	;# 
  2707  0E2A                     	;# 
  2708  0E2B                     	;# 
  2709  0E2C                     	;# 
  2710  0E2D                     	;# 
  2711  0E2E                     	;# 
  2712  0E2F                     	;# 
  2713  0E30                     	;# 
  2714  0E31                     	;# 
  2715  0E32                     	;# 
  2716  0E33                     	;# 
  2717  0E34                     	;# 
  2718  0E35                     	;# 
  2719  0E36                     	;# 
  2720  0E37                     	;# 
  2721  0E8F                     	;# 
  2722  0E90                     	;# 
  2723  0E91                     	;# 
  2724  0E92                     	;# 
  2725  0E93                     	;# 
  2726  0E94                     	;# 
  2727  0E95                     	;# 
  2728  0E96                     	;# 
  2729  0E97                     	;# 
  2730  0E9C                     	;# 
  2731  0E9D                     	;# 
  2732  0E9E                     	;# 
  2733  0EA1                     	;# 
  2734  0EA2                     	;# 
  2735  0EA3                     	;# 
  2736  0EA4                     	;# 
  2737  0EA5                     	;# 
  2738  0EA9                     	;# 
  2739  0EAA                     	;# 
  2740  0EAB                     	;# 
  2741  0EAC                     	;# 
  2742  0EB1                     	;# 
  2743  0EB2                     	;# 
  2744  0EB3                     	;# 
  2745  0EB8                     	;# 
  2746  0EB9                     	;# 
  2747  0EBA                     	;# 
  2748  0EBB                     	;# 
  2749  0EBC                     	;# 
  2750  0EBD                     	;# 
  2751  0EBE                     	;# 
  2752  0EC3                     	;# 
  2753  0EC5                     	;# 
  2754  0EC6                     	;# 
  2755  0EC7                     	;# 
  2756  0EC8                     	;# 
  2757  0EC9                     	;# 
  2758  0ECA                     	;# 
  2759  0ECB                     	;# 
  2760  0ECC                     	;# 
  2761  0F10                     	;# 
  2762  0F11                     	;# 
  2763  0F12                     	;# 
  2764  0F13                     	;# 
  2765  0F14                     	;# 
  2766  0F15                     	;# 
  2767  0F16                     	;# 
  2768  0F17                     	;# 
  2769  0F18                     	;# 
  2770  0F19                     	;# 
  2771  0F1A                     	;# 
  2772  0F1B                     	;# 
  2773  0F1C                     	;# 
  2774  0F1D                     	;# 
  2775  0F1E                     	;# 
  2776  0F1F                     	;# 
  2777  0F20                     	;# 
  2778  0F21                     	;# 
  2779  0F22                     	;# 
  2780  0F23                     	;# 
  2781  0F24                     	;# 
  2782  0F25                     	;# 
  2783  0F26                     	;# 
  2784  0F27                     	;# 
  2785  0F28                     	;# 
  2786  0F29                     	;# 
  2787  0F2A                     	;# 
  2788  0F2B                     	;# 
  2789  0F2C                     	;# 
  2790  0F2D                     	;# 
  2791  0F2E                     	;# 
  2792  0F2F                     	;# 
  2793  0F30                     	;# 
  2794  0F31                     	;# 
  2795  0F32                     	;# 
  2796  0F38                     	;# 
  2797  0F39                     	;# 
  2798  0F3A                     	;# 
  2799  0F3B                     	;# 
  2800  0F3C                     	;# 
  2801  0F3D                     	;# 
  2802  0F3E                     	;# 
  2803  0F3F                     	;# 
  2804  0F40                     	;# 
  2805  0F41                     	;# 
  2806  0F43                     	;# 
  2807  0F44                     	;# 
  2808  0F45                     	;# 
  2809  0F46                     	;# 
  2810  0F47                     	;# 
  2811  0F48                     	;# 
  2812  0F49                     	;# 
  2813  0F4A                     	;# 
  2814  0F4B                     	;# 
  2815  0F4C                     	;# 
  2816  0F4E                     	;# 
  2817  0F4F                     	;# 
  2818  0F50                     	;# 
  2819  0F51                     	;# 
  2820  0F52                     	;# 
  2821  0F53                     	;# 
  2822  0F54                     	;# 
  2823  0F55                     	;# 
  2824  0F56                     	;# 
  2825  0F57                     	;# 
  2826  0F59                     	;# 
  2827  0F5A                     	;# 
  2828  0F5B                     	;# 
  2829  0F5C                     	;# 
  2830  0F5D                     	;# 
  2831  0F61                     	;# 
  2832  0F62                     	;# 
  2833  0F64                     	;# 
  2834  0F65                     	;# 
  2835  0F66                     	;# 
  2836  0F67                     	;# 
  2837  0F68                     	;# 
  2838  0F69                     	;# 
  2839  0F6A                     	;# 
  2840  0F6B                     	;# 
  2841  0F6C                     	;# 
  2842  0F6D                     	;# 
  2843  0FE4                     	;# 
  2844  0FE5                     	;# 
  2845  0FE6                     	;# 
  2846  0FE7                     	;# 
  2847  0FE8                     	;# 
  2848  0FE9                     	;# 
  2849  0FEA                     	;# 
  2850  0FEB                     	;# 
  2851  0FED                     	;# 
  2852  0FEE                     	;# 
  2853  0FEF                     	;# 
  2854  0000                     	;# 
  2855  0001                     	;# 
  2856  0002                     	;# 
  2857  0003                     	;# 
  2858  0004                     	;# 
  2859  0005                     	;# 
  2860  0006                     	;# 
  2861  0007                     	;# 
  2862  0008                     	;# 
  2863  0009                     	;# 
  2864  000A                     	;# 
  2865  000B                     	;# 
  2866  000C                     	;# 
  2867  000D                     	;# 
  2868  000E                     	;# 
  2869  000F                     	;# 
  2870  0010                     	;# 
  2871  0011                     	;# 
  2872  0012                     	;# 
  2873  0013                     	;# 
  2874  0014                     	;# 
  2875  0015                     	;# 
  2876  0016                     	;# 
  2877  0017                     	;# 
  2878  0018                     	;# 
  2879  0019                     	;# 
  2880  001A                     	;# 
  2881  001C                     	;# 
  2882  001C                     	;# 
  2883  001D                     	;# 
  2884  001D                     	;# 
  2885  001E                     	;# 
  2886  001F                     	;# 
  2887  008C                     	;# 
  2888  008C                     	;# 
  2889  008D                     	;# 
  2890  008E                     	;# 
  2891  008E                     	;# 
  2892  008F                     	;# 
  2893  0090                     	;# 
  2894  0090                     	;# 
  2895  0091                     	;# 
  2896  0093                     	;# 
  2897  0094                     	;# 
  2898  0095                     	;# 
  2899  0096                     	;# 
  2900  0097                     	;# 
  2901  0098                     	;# 
  2902  0099                     	;# 
  2903  009A                     	;# 
  2904  009B                     	;# 
  2905  009C                     	;# 
  2906  009D                     	;# 
  2907  009E                     	;# 
  2908  010C                     	;# 
  2909  010D                     	;# 
  2910  010E                     	;# 
  2911  010E                     	;# 
  2912  010F                     	;# 
  2913  0110                     	;# 
  2914  0110                     	;# 
  2915  0111                     	;# 
  2916  0112                     	;# 
  2917  0112                     	;# 
  2918  0113                     	;# 
  2919  0114                     	;# 
  2920  0114                     	;# 
  2921  0115                     	;# 
  2922  0116                     	;# 
  2923  0116                     	;# 
  2924  0117                     	;# 
  2925  0119                     	;# 
  2926  0119                     	;# 
  2927  0119                     	;# 
  2928  011A                     	;# 
  2929  011A                     	;# 
  2930  011A                     	;# 
  2931  011B                     	;# 
  2932  011B                     	;# 
  2933  011B                     	;# 
  2934  011B                     	;# 
  2935  011B                     	;# 
  2936  011C                     	;# 
  2937  011C                     	;# 
  2938  011C                     	;# 
  2939  011D                     	;# 
  2940  011D                     	;# 
  2941  011D                     	;# 
  2942  011E                     	;# 
  2943  011E                     	;# 
  2944  011E                     	;# 
  2945  011F                     	;# 
  2946  011F                     	;# 
  2947  011F                     	;# 
  2948  011F                     	;# 
  2949  011F                     	;# 
  2950  018C                     	;# 
  2951  018D                     	;# 
  2952  018E                     	;# 
  2953  018F                     	;# 
  2954  0190                     	;# 
  2955  0191                     	;# 
  2956  0192                     	;# 
  2957  0196                     	;# 
  2958  0197                     	;# 
  2959  0198                     	;# 
  2960  0199                     	;# 
  2961  019A                     	;# 
  2962  019B                     	;# 
  2963  019C                     	;# 
  2964  020C                     	;# 
  2965  020C                     	;# 
  2966  020D                     	;# 
  2967  020E                     	;# 
  2968  020F                     	;# 
  2969  020F                     	;# 
  2970  0210                     	;# 
  2971  0210                     	;# 
  2972  0211                     	;# 
  2973  0211                     	;# 
  2974  0212                     	;# 
  2975  0212                     	;# 
  2976  0213                     	;# 
  2977  0214                     	;# 
  2978  0215                     	;# 
  2979  0215                     	;# 
  2980  0216                     	;# 
  2981  0216                     	;# 
  2982  0217                     	;# 
  2983  0217                     	;# 
  2984  0218                     	;# 
  2985  0218                     	;# 
  2986  0219                     	;# 
  2987  021A                     	;# 
  2988  021B                     	;# 
  2989  021B                     	;# 
  2990  021C                     	;# 
  2991  021C                     	;# 
  2992  021D                     	;# 
  2993  021D                     	;# 
  2994  021E                     	;# 
  2995  021F                     	;# 
  2996  028C                     	;# 
  2997  028C                     	;# 
  2998  028D                     	;# 
  2999  028D                     	;# 
  3000  028E                     	;# 
  3001  028F                     	;# 
  3002  0290                     	;# 
  3003  0290                     	;# 
  3004  0291                     	;# 
  3005  0292                     	;# 
  3006  0292                     	;# 
  3007  0293                     	;# 
  3008  0293                     	;# 
  3009  0294                     	;# 
  3010  0295                     	;# 
  3011  0296                     	;# 
  3012  0296                     	;# 
  3013  0297                     	;# 
  3014  0298                     	;# 
  3015  0298                     	;# 
  3016  0299                     	;# 
  3017  0299                     	;# 
  3018  029A                     	;# 
  3019  029B                     	;# 
  3020  029C                     	;# 
  3021  029C                     	;# 
  3022  029D                     	;# 
  3023  030C                     	;# 
  3024  030C                     	;# 
  3025  030D                     	;# 
  3026  030E                     	;# 
  3027  030F                     	;# 
  3028  0310                     	;# 
  3029  0310                     	;# 
  3030  0311                     	;# 
  3031  0312                     	;# 
  3032  0313                     	;# 
  3033  0314                     	;# 
  3034  0314                     	;# 
  3035  0315                     	;# 
  3036  0316                     	;# 
  3037  0317                     	;# 
  3038  0318                     	;# 
  3039  0318                     	;# 
  3040  0319                     	;# 
  3041  031A                     	;# 
  3042  031B                     	;# 
  3043  031C                     	;# 
  3044  031C                     	;# 
  3045  031D                     	;# 
  3046  031E                     	;# 
  3047  031F                     	;# 
  3048  038C                     	;# 
  3049  038C                     	;# 
  3050  038D                     	;# 
  3051  038E                     	;# 
  3052  0390                     	;# 
  3053  0390                     	;# 
  3054  0391                     	;# 
  3055  0392                     	;# 
  3056  040C                     	;# 
  3057  040D                     	;# 
  3058  040E                     	;# 
  3059  040F                     	;# 
  3060  0410                     	;# 
  3061  0411                     	;# 
  3062  0416                     	;# 
  3063  0416                     	;# 
  3064  0417                     	;# 
  3065  0418                     	;# 
  3066  0418                     	;# 
  3067  0419                     	;# 
  3068  041A                     	;# 
  3069  041A                     	;# 
  3070  041B                     	;# 
  3071  041C                     	;# 
  3072  041C                     	;# 
  3073  041D                     	;# 
  3074  041E                     	;# 
  3075  041F                     	;# 
  3076  048C                     	;# 
  3077  048C                     	;# 
  3078  048D                     	;# 
  3079  048E                     	;# 
  3080  048F                     	;# 
  3081  048F                     	;# 
  3082  0490                     	;# 
  3083  0491                     	;# 
  3084  0492                     	;# 
  3085  0492                     	;# 
  3086  0493                     	;# 
  3087  0494                     	;# 
  3088  0495                     	;# 
  3089  0495                     	;# 
  3090  0496                     	;# 
  3091  0497                     	;# 
  3092  0498                     	;# 
  3093  0499                     	;# 
  3094  049A                     	;# 
  3095  049B                     	;# 
  3096  049C                     	;# 
  3097  049D                     	;# 
  3098  050C                     	;# 
  3099  050C                     	;# 
  3100  050D                     	;# 
  3101  050E                     	;# 
  3102  050F                     	;# 
  3103  050F                     	;# 
  3104  0510                     	;# 
  3105  0511                     	;# 
  3106  0512                     	;# 
  3107  0512                     	;# 
  3108  0513                     	;# 
  3109  0514                     	;# 
  3110  0515                     	;# 
  3111  0515                     	;# 
  3112  0516                     	;# 
  3113  0517                     	;# 
  3114  0518                     	;# 
  3115  0519                     	;# 
  3116  051A                     	;# 
  3117  051B                     	;# 
  3118  051C                     	;# 
  3119  051D                     	;# 
  3120  058C                     	;# 
  3121  058C                     	;# 
  3122  058D                     	;# 
  3123  058E                     	;# 
  3124  058F                     	;# 
  3125  058F                     	;# 
  3126  0590                     	;# 
  3127  0591                     	;# 
  3128  0592                     	;# 
  3129  0593                     	;# 
  3130  060C                     	;# 
  3131  060D                     	;# 
  3132  060E                     	;# 
  3133  060F                     	;# 
  3134  0610                     	;# 
  3135  0611                     	;# 
  3136  0612                     	;# 
  3137  0613                     	;# 
  3138  0614                     	;# 
  3139  0616                     	;# 
  3140  0617                     	;# 
  3141  0618                     	;# 
  3142  0619                     	;# 
  3143  061A                     	;# 
  3144  061B                     	;# 
  3145  061C                     	;# 
  3146  061D                     	;# 
  3147  061E                     	;# 
  3148  068C                     	;# 
  3149  068D                     	;# 
  3150  068E                     	;# 
  3151  068F                     	;# 
  3152  0690                     	;# 
  3153  0691                     	;# 
  3154  0692                     	;# 
  3155  0693                     	;# 
  3156  0694                     	;# 
  3157  070C                     	;# 
  3158  070D                     	;# 
  3159  070E                     	;# 
  3160  070F                     	;# 
  3161  0710                     	;# 
  3162  0711                     	;# 
  3163  0712                     	;# 
  3164  0713                     	;# 
  3165  0714                     	;# 
  3166  0716                     	;# 
  3167  0717                     	;# 
  3168  0718                     	;# 
  3169  0719                     	;# 
  3170  071A                     	;# 
  3171  071B                     	;# 
  3172  071C                     	;# 
  3173  071D                     	;# 
  3174  071E                     	;# 
  3175  0796                     	;# 
  3176  0797                     	;# 
  3177  0798                     	;# 
  3178  0799                     	;# 
  3179  079A                     	;# 
  3180  079B                     	;# 
  3181  080C                     	;# 
  3182  080D                     	;# 
  3183  080E                     	;# 
  3184  080F                     	;# 
  3185  0810                     	;# 
  3186  0811                     	;# 
  3187  0812                     	;# 
  3188  0813                     	;# 
  3189  0814                     	;# 
  3190  081A                     	;# 
  3191  081B                     	;# 
  3192  081C                     	;# 
  3193  081D                     	;# 
  3194  081E                     	;# 
  3195  081F                     	;# 
  3196  088C                     	;# 
  3197  088D                     	;# 
  3198  088E                     	;# 
  3199  088F                     	;# 
  3200  0890                     	;# 
  3201  0891                     	;# 
  3202  0892                     	;# 
  3203  0893                     	;# 
  3204  0895                     	;# 
  3205  0896                     	;# 
  3206  0897                     	;# 
  3207  0898                     	;# 
  3208  0899                     	;# 
  3209  089A                     	;# 
  3210  089B                     	;# 
  3211  090C                     	;# 
  3212  090E                     	;# 
  3213  090F                     	;# 
  3214  091F                     	;# 
  3215  091F                     	;# 
  3216  098F                     	;# 
  3217  098F                     	;# 
  3218  0990                     	;# 
  3219  0991                     	;# 
  3220  0992                     	;# 
  3221  0993                     	;# 
  3222  0994                     	;# 
  3223  0995                     	;# 
  3224  0996                     	;# 
  3225  0997                     	;# 
  3226  0E0F                     	;# 
  3227  0E10                     	;# 
  3228  0E11                     	;# 
  3229  0E12                     	;# 
  3230  0E13                     	;# 
  3231  0E14                     	;# 
  3232  0E15                     	;# 
  3233  0E16                     	;# 
  3234  0E17                     	;# 
  3235  0E18                     	;# 
  3236  0E19                     	;# 
  3237  0E1A                     	;# 
  3238  0E1B                     	;# 
  3239  0E1C                     	;# 
  3240  0E1D                     	;# 
  3241  0E1E                     	;# 
  3242  0E1F                     	;# 
  3243  0E20                     	;# 
  3244  0E21                     	;# 
  3245  0E22                     	;# 
  3246  0E23                     	;# 
  3247  0E24                     	;# 
  3248  0E25                     	;# 
  3249  0E26                     	;# 
  3250  0E27                     	;# 
  3251  0E28                     	;# 
  3252  0E29                     	;# 
  3253  0E2A                     	;# 
  3254  0E2B                     	;# 
  3255  0E2C                     	;# 
  3256  0E2D                     	;# 
  3257  0E2E                     	;# 
  3258  0E2F                     	;# 
  3259  0E30                     	;# 
  3260  0E31                     	;# 
  3261  0E32                     	;# 
  3262  0E33                     	;# 
  3263  0E34                     	;# 
  3264  0E35                     	;# 
  3265  0E36                     	;# 
  3266  0E37                     	;# 
  3267  0E8F                     	;# 
  3268  0E90                     	;# 
  3269  0E91                     	;# 
  3270  0E92                     	;# 
  3271  0E93                     	;# 
  3272  0E94                     	;# 
  3273  0E95                     	;# 
  3274  0E96                     	;# 
  3275  0E97                     	;# 
  3276  0E9C                     	;# 
  3277  0E9D                     	;# 
  3278  0E9E                     	;# 
  3279  0EA1                     	;# 
  3280  0EA2                     	;# 
  3281  0EA3                     	;# 
  3282  0EA4                     	;# 
  3283  0EA5                     	;# 
  3284  0EA9                     	;# 
  3285  0EAA                     	;# 
  3286  0EAB                     	;# 
  3287  0EAC                     	;# 
  3288  0EB1                     	;# 
  3289  0EB2                     	;# 
  3290  0EB3                     	;# 
  3291  0EB8                     	;# 
  3292  0EB9                     	;# 
  3293  0EBA                     	;# 
  3294  0EBB                     	;# 
  3295  0EBC                     	;# 
  3296  0EBD                     	;# 
  3297  0EBE                     	;# 
  3298  0EC3                     	;# 
  3299  0EC5                     	;# 
  3300  0EC6                     	;# 
  3301  0EC7                     	;# 
  3302  0EC8                     	;# 
  3303  0EC9                     	;# 
  3304  0ECA                     	;# 
  3305  0ECB                     	;# 
  3306  0ECC                     	;# 
  3307  0F10                     	;# 
  3308  0F11                     	;# 
  3309  0F12                     	;# 
  3310  0F13                     	;# 
  3311  0F14                     	;# 
  3312  0F15                     	;# 
  3313  0F16                     	;# 
  3314  0F17                     	;# 
  3315  0F18                     	;# 
  3316  0F19                     	;# 
  3317  0F1A                     	;# 
  3318  0F1B                     	;# 
  3319  0F1C                     	;# 
  3320  0F1D                     	;# 
  3321  0F1E                     	;# 
  3322  0F1F                     	;# 
  3323  0F20                     	;# 
  3324  0F21                     	;# 
  3325  0F22                     	;# 
  3326  0F23                     	;# 
  3327  0F24                     	;# 
  3328  0F25                     	;# 
  3329  0F26                     	;# 
  3330  0F27                     	;# 
  3331  0F28                     	;# 
  3332  0F29                     	;# 
  3333  0F2A                     	;# 
  3334  0F2B                     	;# 
  3335  0F2C                     	;# 
  3336  0F2D                     	;# 
  3337  0F2E                     	;# 
  3338  0F2F                     	;# 
  3339  0F30                     	;# 
  3340  0F31                     	;# 
  3341  0F32                     	;# 
  3342  0F38                     	;# 
  3343  0F39                     	;# 
  3344  0F3A                     	;# 
  3345  0F3B                     	;# 
  3346  0F3C                     	;# 
  3347  0F3D                     	;# 
  3348  0F3E                     	;# 
  3349  0F3F                     	;# 
  3350  0F40                     	;# 
  3351  0F41                     	;# 
  3352  0F43                     	;# 
  3353  0F44                     	;# 
  3354  0F45                     	;# 
  3355  0F46                     	;# 
  3356  0F47                     	;# 
  3357  0F48                     	;# 
  3358  0F49                     	;# 
  3359  0F4A                     	;# 
  3360  0F4B                     	;# 
  3361  0F4C                     	;# 
  3362  0F4E                     	;# 
  3363  0F4F                     	;# 
  3364  0F50                     	;# 
  3365  0F51                     	;# 
  3366  0F52                     	;# 
  3367  0F53                     	;# 
  3368  0F54                     	;# 
  3369  0F55                     	;# 
  3370  0F56                     	;# 
  3371  0F57                     	;# 
  3372  0F59                     	;# 
  3373  0F5A                     	;# 
  3374  0F5B                     	;# 
  3375  0F5C                     	;# 
  3376  0F5D                     	;# 
  3377  0F61                     	;# 
  3378  0F62                     	;# 
  3379  0F64                     	;# 
  3380  0F65                     	;# 
  3381  0F66                     	;# 
  3382  0F67                     	;# 
  3383  0F68                     	;# 
  3384  0F69                     	;# 
  3385  0F6A                     	;# 
  3386  0F6B                     	;# 
  3387  0F6C                     	;# 
  3388  0F6D                     	;# 
  3389  0FE4                     	;# 
  3390  0FE5                     	;# 
  3391  0FE6                     	;# 
  3392  0FE7                     	;# 
  3393  0FE8                     	;# 
  3394  0FE9                     	;# 
  3395  0FEA                     	;# 
  3396  0FEB                     	;# 
  3397  0FED                     	;# 
  3398  0FEE                     	;# 
  3399  0FEF                     	;# 
  3400  0000                     	;# 
  3401  0001                     	;# 
  3402  0002                     	;# 
  3403  0003                     	;# 
  3404  0004                     	;# 
  3405  0005                     	;# 
  3406  0006                     	;# 
  3407  0007                     	;# 
  3408  0008                     	;# 
  3409  0009                     	;# 
  3410  000A                     	;# 
  3411  000B                     	;# 
  3412  000C                     	;# 
  3413  000D                     	;# 
  3414  000E                     	;# 
  3415  000F                     	;# 
  3416  0010                     	;# 
  3417  0011                     	;# 
  3418  0012                     	;# 
  3419  0013                     	;# 
  3420  0014                     	;# 
  3421  0015                     	;# 
  3422  0016                     	;# 
  3423  0017                     	;# 
  3424  0018                     	;# 
  3425  0019                     	;# 
  3426  001A                     	;# 
  3427  001C                     	;# 
  3428  001C                     	;# 
  3429  001D                     	;# 
  3430  001D                     	;# 
  3431  001E                     	;# 
  3432  001F                     	;# 
  3433  008C                     	;# 
  3434  008C                     	;# 
  3435  008D                     	;# 
  3436  008E                     	;# 
  3437  008E                     	;# 
  3438  008F                     	;# 
  3439  0090                     	;# 
  3440  0090                     	;# 
  3441  0091                     	;# 
  3442  0093                     	;# 
  3443  0094                     	;# 
  3444  0095                     	;# 
  3445  0096                     	;# 
  3446  0097                     	;# 
  3447  0098                     	;# 
  3448  0099                     	;# 
  3449  009A                     	;# 
  3450  009B                     	;# 
  3451  009C                     	;# 
  3452  009D                     	;# 
  3453  009E                     	;# 
  3454  010C                     	;# 
  3455  010D                     	;# 
  3456  010E                     	;# 
  3457  010E                     	;# 
  3458  010F                     	;# 
  3459  0110                     	;# 
  3460  0110                     	;# 
  3461  0111                     	;# 
  3462  0112                     	;# 
  3463  0112                     	;# 
  3464  0113                     	;# 
  3465  0114                     	;# 
  3466  0114                     	;# 
  3467  0115                     	;# 
  3468  0116                     	;# 
  3469  0116                     	;# 
  3470  0117                     	;# 
  3471  0119                     	;# 
  3472  0119                     	;# 
  3473  0119                     	;# 
  3474  011A                     	;# 
  3475  011A                     	;# 
  3476  011A                     	;# 
  3477  011B                     	;# 
  3478  011B                     	;# 
  3479  011B                     	;# 
  3480  011B                     	;# 
  3481  011B                     	;# 
  3482  011C                     	;# 
  3483  011C                     	;# 
  3484  011C                     	;# 
  3485  011D                     	;# 
  3486  011D                     	;# 
  3487  011D                     	;# 
  3488  011E                     	;# 
  3489  011E                     	;# 
  3490  011E                     	;# 
  3491  011F                     	;# 
  3492  011F                     	;# 
  3493  011F                     	;# 
  3494  011F                     	;# 
  3495  011F                     	;# 
  3496  018C                     	;# 
  3497  018D                     	;# 
  3498  018E                     	;# 
  3499  018F                     	;# 
  3500  0190                     	;# 
  3501  0191                     	;# 
  3502  0192                     	;# 
  3503  0196                     	;# 
  3504  0197                     	;# 
  3505  0198                     	;# 
  3506  0199                     	;# 
  3507  019A                     	;# 
  3508  019B                     	;# 
  3509  019C                     	;# 
  3510  020C                     	;# 
  3511  020C                     	;# 
  3512  020D                     	;# 
  3513  020E                     	;# 
  3514  020F                     	;# 
  3515  020F                     	;# 
  3516  0210                     	;# 
  3517  0210                     	;# 
  3518  0211                     	;# 
  3519  0211                     	;# 
  3520  0212                     	;# 
  3521  0212                     	;# 
  3522  0213                     	;# 
  3523  0214                     	;# 
  3524  0215                     	;# 
  3525  0215                     	;# 
  3526  0216                     	;# 
  3527  0216                     	;# 
  3528  0217                     	;# 
  3529  0217                     	;# 
  3530  0218                     	;# 
  3531  0218                     	;# 
  3532  0219                     	;# 
  3533  021A                     	;# 
  3534  021B                     	;# 
  3535  021B                     	;# 
  3536  021C                     	;# 
  3537  021C                     	;# 
  3538  021D                     	;# 
  3539  021D                     	;# 
  3540  021E                     	;# 
  3541  021F                     	;# 
  3542  028C                     	;# 
  3543  028C                     	;# 
  3544  028D                     	;# 
  3545  028D                     	;# 
  3546  028E                     	;# 
  3547  028F                     	;# 
  3548  0290                     	;# 
  3549  0290                     	;# 
  3550  0291                     	;# 
  3551  0292                     	;# 
  3552  0292                     	;# 
  3553  0293                     	;# 
  3554  0293                     	;# 
  3555  0294                     	;# 
  3556  0295                     	;# 
  3557  0296                     	;# 
  3558  0296                     	;# 
  3559  0297                     	;# 
  3560  0298                     	;# 
  3561  0298                     	;# 
  3562  0299                     	;# 
  3563  0299                     	;# 
  3564  029A                     	;# 
  3565  029B                     	;# 
  3566  029C                     	;# 
  3567  029C                     	;# 
  3568  029D                     	;# 
  3569  030C                     	;# 
  3570  030C                     	;# 
  3571  030D                     	;# 
  3572  030E                     	;# 
  3573  030F                     	;# 
  3574  0310                     	;# 
  3575  0310                     	;# 
  3576  0311                     	;# 
  3577  0312                     	;# 
  3578  0313                     	;# 
  3579  0314                     	;# 
  3580  0314                     	;# 
  3581  0315                     	;# 
  3582  0316                     	;# 
  3583  0317                     	;# 
  3584  0318                     	;# 
  3585  0318                     	;# 
  3586  0319                     	;# 
  3587  031A                     	;# 
  3588  031B                     	;# 
  3589  031C                     	;# 
  3590  031C                     	;# 
  3591  031D                     	;# 
  3592  031E                     	;# 
  3593  031F                     	;# 
  3594  038C                     	;# 
  3595  038C                     	;# 
  3596  038D                     	;# 
  3597  038E                     	;# 
  3598  0390                     	;# 
  3599  0390                     	;# 
  3600  0391                     	;# 
  3601  0392                     	;# 
  3602  040C                     	;# 
  3603  040D                     	;# 
  3604  040E                     	;# 
  3605  040F                     	;# 
  3606  0410                     	;# 
  3607  0411                     	;# 
  3608  0416                     	;# 
  3609  0416                     	;# 
  3610  0417                     	;# 
  3611  0418                     	;# 
  3612  0418                     	;# 
  3613  0419                     	;# 
  3614  041A                     	;# 
  3615  041A                     	;# 
  3616  041B                     	;# 
  3617  041C                     	;# 
  3618  041C                     	;# 
  3619  041D                     	;# 
  3620  041E                     	;# 
  3621  041F                     	;# 
  3622  048C                     	;# 
  3623  048C                     	;# 
  3624  048D                     	;# 
  3625  048E                     	;# 
  3626  048F                     	;# 
  3627  048F                     	;# 
  3628  0490                     	;# 
  3629  0491                     	;# 
  3630  0492                     	;# 
  3631  0492                     	;# 
  3632  0493                     	;# 
  3633  0494                     	;# 
  3634  0495                     	;# 
  3635  0495                     	;# 
  3636  0496                     	;# 
  3637  0497                     	;# 
  3638  0498                     	;# 
  3639  0499                     	;# 
  3640  049A                     	;# 
  3641  049B                     	;# 
  3642  049C                     	;# 
  3643  049D                     	;# 
  3644  050C                     	;# 
  3645  050C                     	;# 
  3646  050D                     	;# 
  3647  050E                     	;# 
  3648  050F                     	;# 
  3649  050F                     	;# 
  3650  0510                     	;# 
  3651  0511                     	;# 
  3652  0512                     	;# 
  3653  0512                     	;# 
  3654  0513                     	;# 
  3655  0514                     	;# 
  3656  0515                     	;# 
  3657  0515                     	;# 
  3658  0516                     	;# 
  3659  0517                     	;# 
  3660  0518                     	;# 
  3661  0519                     	;# 
  3662  051A                     	;# 
  3663  051B                     	;# 
  3664  051C                     	;# 
  3665  051D                     	;# 
  3666  058C                     	;# 
  3667  058C                     	;# 
  3668  058D                     	;# 
  3669  058E                     	;# 
  3670  058F                     	;# 
  3671  058F                     	;# 
  3672  0590                     	;# 
  3673  0591                     	;# 
  3674  0592                     	;# 
  3675  0593                     	;# 
  3676  060C                     	;# 
  3677  060D                     	;# 
  3678  060E                     	;# 
  3679  060F                     	;# 
  3680  0610                     	;# 
  3681  0611                     	;# 
  3682  0612                     	;# 
  3683  0613                     	;# 
  3684  0614                     	;# 
  3685  0616                     	;# 
  3686  0617                     	;# 
  3687  0618                     	;# 
  3688  0619                     	;# 
  3689  061A                     	;# 
  3690  061B                     	;# 
  3691  061C                     	;# 
  3692  061D                     	;# 
  3693  061E                     	;# 
  3694  068C                     	;# 
  3695  068D                     	;# 
  3696  068E                     	;# 
  3697  068F                     	;# 
  3698  0690                     	;# 
  3699  0691                     	;# 
  3700  0692                     	;# 
  3701  0693                     	;# 
  3702  0694                     	;# 
  3703  070C                     	;# 
  3704  070D                     	;# 
  3705  070E                     	;# 
  3706  070F                     	;# 
  3707  0710                     	;# 
  3708  0711                     	;# 
  3709  0712                     	;# 
  3710  0713                     	;# 
  3711  0714                     	;# 
  3712  0716                     	;# 
  3713  0717                     	;# 
  3714  0718                     	;# 
  3715  0719                     	;# 
  3716  071A                     	;# 
  3717  071B                     	;# 
  3718  071C                     	;# 
  3719  071D                     	;# 
  3720  071E                     	;# 
  3721  0796                     	;# 
  3722  0797                     	;# 
  3723  0798                     	;# 
  3724  0799                     	;# 
  3725  079A                     	;# 
  3726  079B                     	;# 
  3727  080C                     	;# 
  3728  080D                     	;# 
  3729  080E                     	;# 
  3730  080F                     	;# 
  3731  0810                     	;# 
  3732  0811                     	;# 
  3733  0812                     	;# 
  3734  0813                     	;# 
  3735  0814                     	;# 
  3736  081A                     	;# 
  3737  081B                     	;# 
  3738  081C                     	;# 
  3739  081D                     	;# 
  3740  081E                     	;# 
  3741  081F                     	;# 
  3742  088C                     	;# 
  3743  088D                     	;# 
  3744  088E                     	;# 
  3745  088F                     	;# 
  3746  0890                     	;# 
  3747  0891                     	;# 
  3748  0892                     	;# 
  3749  0893                     	;# 
  3750  0895                     	;# 
  3751  0896                     	;# 
  3752  0897                     	;# 
  3753  0898                     	;# 
  3754  0899                     	;# 
  3755  089A                     	;# 
  3756  089B                     	;# 
  3757  090C                     	;# 
  3758  090E                     	;# 
  3759  090F                     	;# 
  3760  091F                     	;# 
  3761  091F                     	;# 
  3762  098F                     	;# 
  3763  098F                     	;# 
  3764  0990                     	;# 
  3765  0991                     	;# 
  3766  0992                     	;# 
  3767  0993                     	;# 
  3768  0994                     	;# 
  3769  0995                     	;# 
  3770  0996                     	;# 
  3771  0997                     	;# 
  3772  0E0F                     	;# 
  3773  0E10                     	;# 
  3774  0E11                     	;# 
  3775  0E12                     	;# 
  3776  0E13                     	;# 
  3777  0E14                     	;# 
  3778  0E15                     	;# 
  3779  0E16                     	;# 
  3780  0E17                     	;# 
  3781  0E18                     	;# 
  3782  0E19                     	;# 
  3783  0E1A                     	;# 
  3784  0E1B                     	;# 
  3785  0E1C                     	;# 
  3786  0E1D                     	;# 
  3787  0E1E                     	;# 
  3788  0E1F                     	;# 
  3789  0E20                     	;# 
  3790  0E21                     	;# 
  3791  0E22                     	;# 
  3792  0E23                     	;# 
  3793  0E24                     	;# 
  3794  0E25                     	;# 
  3795  0E26                     	;# 
  3796  0E27                     	;# 
  3797  0E28                     	;# 
  3798  0E29                     	;# 
  3799  0E2A                     	;# 
  3800  0E2B                     	;# 
  3801  0E2C                     	;# 
  3802  0E2D                     	;# 
  3803  0E2E                     	;# 
  3804  0E2F                     	;# 
  3805  0E30                     	;# 
  3806  0E31                     	;# 
  3807  0E32                     	;# 
  3808  0E33                     	;# 
  3809  0E34                     	;# 
  3810  0E35                     	;# 
  3811  0E36                     	;# 
  3812  0E37                     	;# 
  3813  0E8F                     	;# 
  3814  0E90                     	;# 
  3815  0E91                     	;# 
  3816  0E92                     	;# 
  3817  0E93                     	;# 
  3818  0E94                     	;# 
  3819  0E95                     	;# 
  3820  0E96                     	;# 
  3821  0E97                     	;# 
  3822  0E9C                     	;# 
  3823  0E9D                     	;# 
  3824  0E9E                     	;# 
  3825  0EA1                     	;# 
  3826  0EA2                     	;# 
  3827  0EA3                     	;# 
  3828  0EA4                     	;# 
  3829  0EA5                     	;# 
  3830  0EA9                     	;# 
  3831  0EAA                     	;# 
  3832  0EAB                     	;# 
  3833  0EAC                     	;# 
  3834  0EB1                     	;# 
  3835  0EB2                     	;# 
  3836  0EB3                     	;# 
  3837  0EB8                     	;# 
  3838  0EB9                     	;# 
  3839  0EBA                     	;# 
  3840  0EBB                     	;# 
  3841  0EBC                     	;# 
  3842  0EBD                     	;# 
  3843  0EBE                     	;# 
  3844  0EC3                     	;# 
  3845  0EC5                     	;# 
  3846  0EC6                     	;# 
  3847  0EC7                     	;# 
  3848  0EC8                     	;# 
  3849  0EC9                     	;# 
  3850  0ECA                     	;# 
  3851  0ECB                     	;# 
  3852  0ECC                     	;# 
  3853  0F10                     	;# 
  3854  0F11                     	;# 
  3855  0F12                     	;# 
  3856  0F13                     	;# 
  3857  0F14                     	;# 
  3858  0F15                     	;# 
  3859  0F16                     	;# 
  3860  0F17                     	;# 
  3861  0F18                     	;# 
  3862  0F19                     	;# 
  3863  0F1A                     	;# 
  3864  0F1B                     	;# 
  3865  0F1C                     	;# 
  3866  0F1D                     	;# 
  3867  0F1E                     	;# 
  3868  0F1F                     	;# 
  3869  0F20                     	;# 
  3870  0F21                     	;# 
  3871  0F22                     	;# 
  3872  0F23                     	;# 
  3873  0F24                     	;# 
  3874  0F25                     	;# 
  3875  0F26                     	;# 
  3876  0F27                     	;# 
  3877  0F28                     	;# 
  3878  0F29                     	;# 
  3879  0F2A                     	;# 
  3880  0F2B                     	;# 
  3881  0F2C                     	;# 
  3882  0F2D                     	;# 
  3883  0F2E                     	;# 
  3884  0F2F                     	;# 
  3885  0F30                     	;# 
  3886  0F31                     	;# 
  3887  0F32                     	;# 
  3888  0F38                     	;# 
  3889  0F39                     	;# 
  3890  0F3A                     	;# 
  3891  0F3B                     	;# 
  3892  0F3C                     	;# 
  3893  0F3D                     	;# 
  3894  0F3E                     	;# 
  3895  0F3F                     	;# 
  3896  0F40                     	;# 
  3897  0F41                     	;# 
  3898  0F43                     	;# 
  3899  0F44                     	;# 
  3900  0F45                     	;# 
  3901  0F46                     	;# 
  3902  0F47                     	;# 
  3903  0F48                     	;# 
  3904  0F49                     	;# 
  3905  0F4A                     	;# 
  3906  0F4B                     	;# 
  3907  0F4C                     	;# 
  3908  0F4E                     	;# 
  3909  0F4F                     	;# 
  3910  0F50                     	;# 
  3911  0F51                     	;# 
  3912  0F52                     	;# 
  3913  0F53                     	;# 
  3914  0F54                     	;# 
  3915  0F55                     	;# 
  3916  0F56                     	;# 
  3917  0F57                     	;# 
  3918  0F59                     	;# 
  3919  0F5A                     	;# 
  3920  0F5B                     	;# 
  3921  0F5C                     	;# 
  3922  0F5D                     	;# 
  3923  0F61                     	;# 
  3924  0F62                     	;# 
  3925  0F64                     	;# 
  3926  0F65                     	;# 
  3927  0F66                     	;# 
  3928  0F67                     	;# 
  3929  0F68                     	;# 
  3930  0F69                     	;# 
  3931  0F6A                     	;# 
  3932  0F6B                     	;# 
  3933  0F6C                     	;# 
  3934  0F6D                     	;# 
  3935  0FE4                     	;# 
  3936  0FE5                     	;# 
  3937  0FE6                     	;# 
  3938  0FE7                     	;# 
  3939  0FE8                     	;# 
  3940  0FE9                     	;# 
  3941  0FEA                     	;# 
  3942  0FEB                     	;# 
  3943  0FED                     	;# 
  3944  0FEE                     	;# 
  3945  0FEF                     	;# 
  3946  0000                     	;# 
  3947  0001                     	;# 
  3948  0002                     	;# 
  3949  0003                     	;# 
  3950  0004                     	;# 
  3951  0005                     	;# 
  3952  0006                     	;# 
  3953  0007                     	;# 
  3954  0008                     	;# 
  3955  0009                     	;# 
  3956  000A                     	;# 
  3957  000B                     	;# 
  3958  000C                     	;# 
  3959  000D                     	;# 
  3960  000E                     	;# 
  3961  000F                     	;# 
  3962  0010                     	;# 
  3963  0011                     	;# 
  3964  0012                     	;# 
  3965  0013                     	;# 
  3966  0014                     	;# 
  3967  0015                     	;# 
  3968  0016                     	;# 
  3969  0017                     	;# 
  3970  0018                     	;# 
  3971  0019                     	;# 
  3972  001A                     	;# 
  3973  001C                     	;# 
  3974  001C                     	;# 
  3975  001D                     	;# 
  3976  001D                     	;# 
  3977  001E                     	;# 
  3978  001F                     	;# 
  3979  008C                     	;# 
  3980  008C                     	;# 
  3981  008D                     	;# 
  3982  008E                     	;# 
  3983  008E                     	;# 
  3984  008F                     	;# 
  3985  0090                     	;# 
  3986  0090                     	;# 
  3987  0091                     	;# 
  3988  0093                     	;# 
  3989  0094                     	;# 
  3990  0095                     	;# 
  3991  0096                     	;# 
  3992  0097                     	;# 
  3993  0098                     	;# 
  3994  0099                     	;# 
  3995  009A                     	;# 
  3996  009B                     	;# 
  3997  009C                     	;# 
  3998  009D                     	;# 
  3999  009E                     	;# 
  4000  010C                     	;# 
  4001  010D                     	;# 
  4002  010E                     	;# 
  4003  010E                     	;# 
  4004  010F                     	;# 
  4005  0110                     	;# 
  4006  0110                     	;# 
  4007  0111                     	;# 
  4008  0112                     	;# 
  4009  0112                     	;# 
  4010  0113                     	;# 
  4011  0114                     	;# 
  4012  0114                     	;# 
  4013  0115                     	;# 
  4014  0116                     	;# 
  4015  0116                     	;# 
  4016  0117                     	;# 
  4017  0119                     	;# 
  4018  0119                     	;# 
  4019  0119                     	;# 
  4020  011A                     	;# 
  4021  011A                     	;# 
  4022  011A                     	;# 
  4023  011B                     	;# 
  4024  011B                     	;# 
  4025  011B                     	;# 
  4026  011B                     	;# 
  4027  011B                     	;# 
  4028  011C                     	;# 
  4029  011C                     	;# 
  4030  011C                     	;# 
  4031  011D                     	;# 
  4032  011D                     	;# 
  4033  011D                     	;# 
  4034  011E                     	;# 
  4035  011E                     	;# 
  4036  011E                     	;# 
  4037  011F                     	;# 
  4038  011F                     	;# 
  4039  011F                     	;# 
  4040  011F                     	;# 
  4041  011F                     	;# 
  4042  018C                     	;# 
  4043  018D                     	;# 
  4044  018E                     	;# 
  4045  018F                     	;# 
  4046  0190                     	;# 
  4047  0191                     	;# 
  4048  0192                     	;# 
  4049  0196                     	;# 
  4050  0197                     	;# 
  4051  0198                     	;# 
  4052  0199                     	;# 
  4053  019A                     	;# 
  4054  019B                     	;# 
  4055  019C                     	;# 
  4056  020C                     	;# 
  4057  020C                     	;# 
  4058  020D                     	;# 
  4059  020E                     	;# 
  4060  020F                     	;# 
  4061  020F                     	;# 
  4062  0210                     	;# 
  4063  0210                     	;# 
  4064  0211                     	;# 
  4065  0211                     	;# 
  4066  0212                     	;# 
  4067  0212                     	;# 
  4068  0213                     	;# 
  4069  0214                     	;# 
  4070  0215                     	;# 
  4071  0215                     	;# 
  4072  0216                     	;# 
  4073  0216                     	;# 
  4074  0217                     	;# 
  4075  0217                     	;# 
  4076  0218                     	;# 
  4077  0218                     	;# 
  4078  0219                     	;# 
  4079  021A                     	;# 
  4080  021B                     	;# 
  4081  021B                     	;# 
  4082  021C                     	;# 
  4083  021C                     	;# 
  4084  021D                     	;# 
  4085  021D                     	;# 
  4086  021E                     	;# 
  4087  021F                     	;# 
  4088  028C                     	;# 
  4089  028C                     	;# 
  4090  028D                     	;# 
  4091  028D                     	;# 
  4092  028E                     	;# 
  4093  028F                     	;# 
  4094  0290                     	;# 
  4095  0290                     	;# 
  4096  0291                     	;# 
  4097  0292                     	;# 
  4098  0292                     	;# 
  4099  0293                     	;# 
  4100  0293                     	;# 
  4101  0294                     	;# 
  4102  0295                     	;# 
  4103  0296                     	;# 
  4104  0296                     	;# 
  4105  0297                     	;# 
  4106  0298                     	;# 
  4107  0298                     	;# 
  4108  0299                     	;# 
  4109  0299                     	;# 
  4110  029A                     	;# 
  4111  029B                     	;# 
  4112  029C                     	;# 
  4113  029C                     	;# 
  4114  029D                     	;# 
  4115  030C                     	;# 
  4116  030C                     	;# 
  4117  030D                     	;# 
  4118  030E                     	;# 
  4119  030F                     	;# 
  4120  0310                     	;# 
  4121  0310                     	;# 
  4122  0311                     	;# 
  4123  0312                     	;# 
  4124  0313                     	;# 
  4125  0314                     	;# 
  4126  0314                     	;# 
  4127  0315                     	;# 
  4128  0316                     	;# 
  4129  0317                     	;# 
  4130  0318                     	;# 
  4131  0318                     	;# 
  4132  0319                     	;# 
  4133  031A                     	;# 
  4134  031B                     	;# 
  4135  031C                     	;# 
  4136  031C                     	;# 
  4137  031D                     	;# 
  4138  031E                     	;# 
  4139  031F                     	;# 
  4140  038C                     	;# 
  4141  038C                     	;# 
  4142  038D                     	;# 
  4143  038E                     	;# 
  4144  0390                     	;# 
  4145  0390                     	;# 
  4146  0391                     	;# 
  4147  0392                     	;# 
  4148  040C                     	;# 
  4149  040D                     	;# 
  4150  040E                     	;# 
  4151  040F                     	;# 
  4152  0410                     	;# 
  4153  0411                     	;# 
  4154  0416                     	;# 
  4155  0416                     	;# 
  4156  0417                     	;# 
  4157  0418                     	;# 
  4158  0418                     	;# 
  4159  0419                     	;# 
  4160  041A                     	;# 
  4161  041A                     	;# 
  4162  041B                     	;# 
  4163  041C                     	;# 
  4164  041C                     	;# 
  4165  041D                     	;# 
  4166  041E                     	;# 
  4167  041F                     	;# 
  4168  048C                     	;# 
  4169  048C                     	;# 
  4170  048D                     	;# 
  4171  048E                     	;# 
  4172  048F                     	;# 
  4173  048F                     	;# 
  4174  0490                     	;# 
  4175  0491                     	;# 
  4176  0492                     	;# 
  4177  0492                     	;# 
  4178  0493                     	;# 
  4179  0494                     	;# 
  4180  0495                     	;# 
  4181  0495                     	;# 
  4182  0496                     	;# 
  4183  0497                     	;# 
  4184  0498                     	;# 
  4185  0499                     	;# 
  4186  049A                     	;# 
  4187  049B                     	;# 
  4188  049C                     	;# 
  4189  049D                     	;# 
  4190  050C                     	;# 
  4191  050C                     	;# 
  4192  050D                     	;# 
  4193  050E                     	;# 
  4194  050F                     	;# 
  4195  050F                     	;# 
  4196  0510                     	;# 
  4197  0511                     	;# 
  4198  0512                     	;# 
  4199  0512                     	;# 
  4200  0513                     	;# 
  4201  0514                     	;# 
  4202  0515                     	;# 
  4203  0515                     	;# 
  4204  0516                     	;# 
  4205  0517                     	;# 
  4206  0518                     	;# 
  4207  0519                     	;# 
  4208  051A                     	;# 
  4209  051B                     	;# 
  4210  051C                     	;# 
  4211  051D                     	;# 
  4212  058C                     	;# 
  4213  058C                     	;# 
  4214  058D                     	;# 
  4215  058E                     	;# 
  4216  058F                     	;# 
  4217  058F                     	;# 
  4218  0590                     	;# 
  4219  0591                     	;# 
  4220  0592                     	;# 
  4221  0593                     	;# 
  4222  060C                     	;# 
  4223  060D                     	;# 
  4224  060E                     	;# 
  4225  060F                     	;# 
  4226  0610                     	;# 
  4227  0611                     	;# 
  4228  0612                     	;# 
  4229  0613                     	;# 
  4230  0614                     	;# 
  4231  0616                     	;# 
  4232  0617                     	;# 
  4233  0618                     	;# 
  4234  0619                     	;# 
  4235  061A                     	;# 
  4236  061B                     	;# 
  4237  061C                     	;# 
  4238  061D                     	;# 
  4239  061E                     	;# 
  4240  068C                     	;# 
  4241  068D                     	;# 
  4242  068E                     	;# 
  4243  068F                     	;# 
  4244  0690                     	;# 
  4245  0691                     	;# 
  4246  0692                     	;# 
  4247  0693                     	;# 
  4248  0694                     	;# 
  4249  070C                     	;# 
  4250  070D                     	;# 
  4251  070E                     	;# 
  4252  070F                     	;# 
  4253  0710                     	;# 
  4254  0711                     	;# 
  4255  0712                     	;# 
  4256  0713                     	;# 
  4257  0714                     	;# 
  4258  0716                     	;# 
  4259  0717                     	;# 
  4260  0718                     	;# 
  4261  0719                     	;# 
  4262  071A                     	;# 
  4263  071B                     	;# 
  4264  071C                     	;# 
  4265  071D                     	;# 
  4266  071E                     	;# 
  4267  0796                     	;# 
  4268  0797                     	;# 
  4269  0798                     	;# 
  4270  0799                     	;# 
  4271  079A                     	;# 
  4272  079B                     	;# 
  4273  080C                     	;# 
  4274  080D                     	;# 
  4275  080E                     	;# 
  4276  080F                     	;# 
  4277  0810                     	;# 
  4278  0811                     	;# 
  4279  0812                     	;# 
  4280  0813                     	;# 
  4281  0814                     	;# 
  4282  081A                     	;# 
  4283  081B                     	;# 
  4284  081C                     	;# 
  4285  081D                     	;# 
  4286  081E                     	;# 
  4287  081F                     	;# 
  4288  088C                     	;# 
  4289  088D                     	;# 
  4290  088E                     	;# 
  4291  088F                     	;# 
  4292  0890                     	;# 
  4293  0891                     	;# 
  4294  0892                     	;# 
  4295  0893                     	;# 
  4296  0895                     	;# 
  4297  0896                     	;# 
  4298  0897                     	;# 
  4299  0898                     	;# 
  4300  0899                     	;# 
  4301  089A                     	;# 
  4302  089B                     	;# 
  4303  090C                     	;# 
  4304  090E                     	;# 
  4305  090F                     	;# 
  4306  091F                     	;# 
  4307  091F                     	;# 
  4308  098F                     	;# 
  4309  098F                     	;# 
  4310  0990                     	;# 
  4311  0991                     	;# 
  4312  0992                     	;# 
  4313  0993                     	;# 
  4314  0994                     	;# 
  4315  0995                     	;# 
  4316  0996                     	;# 
  4317  0997                     	;# 
  4318  0E0F                     	;# 
  4319  0E10                     	;# 
  4320  0E11                     	;# 
  4321  0E12                     	;# 
  4322  0E13                     	;# 
  4323  0E14                     	;# 
  4324  0E15                     	;# 
  4325  0E16                     	;# 
  4326  0E17                     	;# 
  4327  0E18                     	;# 
  4328  0E19                     	;# 
  4329  0E1A                     	;# 
  4330  0E1B                     	;# 
  4331  0E1C                     	;# 
  4332  0E1D                     	;# 
  4333  0E1E                     	;# 
  4334  0E1F                     	;# 
  4335  0E20                     	;# 
  4336  0E21                     	;# 
  4337  0E22                     	;# 
  4338  0E23                     	;# 
  4339  0E24                     	;# 
  4340  0E25                     	;# 
  4341  0E26                     	;# 
  4342  0E27                     	;# 
  4343  0E28                     	;# 
  4344  0E29                     	;# 
  4345  0E2A                     	;# 
  4346  0E2B                     	;# 
  4347  0E2C                     	;# 
  4348  0E2D                     	;# 
  4349  0E2E                     	;# 
  4350  0E2F                     	;# 
  4351  0E30                     	;# 
  4352  0E31                     	;# 
  4353  0E32                     	;# 
  4354  0E33                     	;# 
  4355  0E34                     	;# 
  4356  0E35                     	;# 
  4357  0E36                     	;# 
  4358  0E37                     	;# 
  4359  0E8F                     	;# 
  4360  0E90                     	;# 
  4361  0E91                     	;# 
  4362  0E92                     	;# 
  4363  0E93                     	;# 
  4364  0E94                     	;# 
  4365  0E95                     	;# 
  4366  0E96                     	;# 
  4367  0E97                     	;# 
  4368  0E9C                     	;# 
  4369  0E9D                     	;# 
  4370  0E9E                     	;# 
  4371  0EA1                     	;# 
  4372  0EA2                     	;# 
  4373  0EA3                     	;# 
  4374  0EA4                     	;# 
  4375  0EA5                     	;# 
  4376  0EA9                     	;# 
  4377  0EAA                     	;# 
  4378  0EAB                     	;# 
  4379  0EAC                     	;# 
  4380  0EB1                     	;# 
  4381  0EB2                     	;# 
  4382  0EB3                     	;# 
  4383  0EB8                     	;# 
  4384  0EB9                     	;# 
  4385  0EBA                     	;# 
  4386  0EBB                     	;# 
  4387  0EBC                     	;# 
  4388  0EBD                     	;# 
  4389  0EBE                     	;# 
  4390  0EC3                     	;# 
  4391  0EC5                     	;# 
  4392  0EC6                     	;# 
  4393  0EC7                     	;# 
  4394  0EC8                     	;# 
  4395  0EC9                     	;# 
  4396  0ECA                     	;# 
  4397  0ECB                     	;# 
  4398  0ECC                     	;# 
  4399  0F10                     	;# 
  4400  0F11                     	;# 
  4401  0F12                     	;# 
  4402  0F13                     	;# 
  4403  0F14                     	;# 
  4404  0F15                     	;# 
  4405  0F16                     	;# 
  4406  0F17                     	;# 
  4407  0F18                     	;# 
  4408  0F19                     	;# 
  4409  0F1A                     	;# 
  4410  0F1B                     	;# 
  4411  0F1C                     	;# 
  4412  0F1D                     	;# 
  4413  0F1E                     	;# 
  4414  0F1F                     	;# 
  4415  0F20                     	;# 
  4416  0F21                     	;# 
  4417  0F22                     	;# 
  4418  0F23                     	;# 
  4419  0F24                     	;# 
  4420  0F25                     	;# 
  4421  0F26                     	;# 
  4422  0F27                     	;# 
  4423  0F28                     	;# 
  4424  0F29                     	;# 
  4425  0F2A                     	;# 
  4426  0F2B                     	;# 
  4427  0F2C                     	;# 
  4428  0F2D                     	;# 
  4429  0F2E                     	;# 
  4430  0F2F                     	;# 
  4431  0F30                     	;# 
  4432  0F31                     	;# 
  4433  0F32                     	;# 
  4434  0F38                     	;# 
  4435  0F39                     	;# 
  4436  0F3A                     	;# 
  4437  0F3B                     	;# 
  4438  0F3C                     	;# 
  4439  0F3D                     	;# 
  4440  0F3E                     	;# 
  4441  0F3F                     	;# 
  4442  0F40                     	;# 
  4443  0F41                     	;# 
  4444  0F43                     	;# 
  4445  0F44                     	;# 
  4446  0F45                     	;# 
  4447  0F46                     	;# 
  4448  0F47                     	;# 
  4449  0F48                     	;# 
  4450  0F49                     	;# 
  4451  0F4A                     	;# 
  4452  0F4B                     	;# 
  4453  0F4C                     	;# 
  4454  0F4E                     	;# 
  4455  0F4F                     	;# 
  4456  0F50                     	;# 
  4457  0F51                     	;# 
  4458  0F52                     	;# 
  4459  0F53                     	;# 
  4460  0F54                     	;# 
  4461  0F55                     	;# 
  4462  0F56                     	;# 
  4463  0F57                     	;# 
  4464  0F59                     	;# 
  4465  0F5A                     	;# 
  4466  0F5B                     	;# 
  4467  0F5C                     	;# 
  4468  0F5D                     	;# 
  4469  0F61                     	;# 
  4470  0F62                     	;# 
  4471  0F64                     	;# 
  4472  0F65                     	;# 
  4473  0F66                     	;# 
  4474  0F67                     	;# 
  4475  0F68                     	;# 
  4476  0F69                     	;# 
  4477  0F6A                     	;# 
  4478  0F6B                     	;# 
  4479  0F6C                     	;# 
  4480  0F6D                     	;# 
  4481  0FE4                     	;# 
  4482  0FE5                     	;# 
  4483  0FE6                     	;# 
  4484  0FE7                     	;# 
  4485  0FE8                     	;# 
  4486  0FE9                     	;# 
  4487  0FEA                     	;# 
  4488  0FEB                     	;# 
  4489  0FED                     	;# 
  4490  0FEE                     	;# 
  4491  0FEF                     	;# 
  4492  0000                     	;# 
  4493  0001                     	;# 
  4494  0002                     	;# 
  4495  0003                     	;# 
  4496  0004                     	;# 
  4497  0005                     	;# 
  4498  0006                     	;# 
  4499  0007                     	;# 
  4500  0008                     	;# 
  4501  0009                     	;# 
  4502  000A                     	;# 
  4503  000B                     	;# 
  4504  000C                     	;# 
  4505  000D                     	;# 
  4506  000E                     	;# 
  4507  000F                     	;# 
  4508  0010                     	;# 
  4509  0011                     	;# 
  4510  0012                     	;# 
  4511  0013                     	;# 
  4512  0014                     	;# 
  4513  0015                     	;# 
  4514  0016                     	;# 
  4515  0017                     	;# 
  4516  0018                     	;# 
  4517  0019                     	;# 
  4518  001A                     	;# 
  4519  001C                     	;# 
  4520  001C                     	;# 
  4521  001D                     	;# 
  4522  001D                     	;# 
  4523  001E                     	;# 
  4524  001F                     	;# 
  4525  008C                     	;# 
  4526  008C                     	;# 
  4527  008D                     	;# 
  4528  008E                     	;# 
  4529  008E                     	;# 
  4530  008F                     	;# 
  4531  0090                     	;# 
  4532  0090                     	;# 
  4533  0091                     	;# 
  4534  0093                     	;# 
  4535  0094                     	;# 
  4536  0095                     	;# 
  4537  0096                     	;# 
  4538  0097                     	;# 
  4539  0098                     	;# 
  4540  0099                     	;# 
  4541  009A                     	;# 
  4542  009B                     	;# 
  4543  009C                     	;# 
  4544  009D                     	;# 
  4545  009E                     	;# 
  4546  010C                     	;# 
  4547  010D                     	;# 
  4548  010E                     	;# 
  4549  010E                     	;# 
  4550  010F                     	;# 
  4551  0110                     	;# 
  4552  0110                     	;# 
  4553  0111                     	;# 
  4554  0112                     	;# 
  4555  0112                     	;# 
  4556  0113                     	;# 
  4557  0114                     	;# 
  4558  0114                     	;# 
  4559  0115                     	;# 
  4560  0116                     	;# 
  4561  0116                     	;# 
  4562  0117                     	;# 
  4563  0119                     	;# 
  4564  0119                     	;# 
  4565  0119                     	;# 
  4566  011A                     	;# 
  4567  011A                     	;# 
  4568  011A                     	;# 
  4569  011B                     	;# 
  4570  011B                     	;# 
  4571  011B                     	;# 
  4572  011B                     	;# 
  4573  011B                     	;# 
  4574  011C                     	;# 
  4575  011C                     	;# 
  4576  011C                     	;# 
  4577  011D                     	;# 
  4578  011D                     	;# 
  4579  011D                     	;# 
  4580  011E                     	;# 
  4581  011E                     	;# 
  4582  011E                     	;# 
  4583  011F                     	;# 
  4584  011F                     	;# 
  4585  011F                     	;# 
  4586  011F                     	;# 
  4587  011F                     	;# 
  4588  018C                     	;# 
  4589  018D                     	;# 
  4590  018E                     	;# 
  4591  018F                     	;# 
  4592  0190                     	;# 
  4593  0191                     	;# 
  4594  0192                     	;# 
  4595  0196                     	;# 
  4596  0197                     	;# 
  4597  0198                     	;# 
  4598  0199                     	;# 
  4599  019A                     	;# 
  4600  019B                     	;# 
  4601  019C                     	;# 
  4602  020C                     	;# 
  4603  020C                     	;# 
  4604  020D                     	;# 
  4605  020E                     	;# 
  4606  020F                     	;# 
  4607  020F                     	;# 
  4608  0210                     	;# 
  4609  0210                     	;# 
  4610  0211                     	;# 
  4611  0211                     	;# 
  4612  0212                     	;# 
  4613  0212                     	;# 
  4614  0213                     	;# 
  4615  0214                     	;# 
  4616  0215                     	;# 
  4617  0215                     	;# 
  4618  0216                     	;# 
  4619  0216                     	;# 
  4620  0217                     	;# 
  4621  0217                     	;# 
  4622  0218                     	;# 
  4623  0218                     	;# 
  4624  0219                     	;# 
  4625  021A                     	;# 
  4626  021B                     	;# 
  4627  021B                     	;# 
  4628  021C                     	;# 
  4629  021C                     	;# 
  4630  021D                     	;# 
  4631  021D                     	;# 
  4632  021E                     	;# 
  4633  021F                     	;# 
  4634  028C                     	;# 
  4635  028C                     	;# 
  4636  028D                     	;# 
  4637  028D                     	;# 
  4638  028E                     	;# 
  4639  028F                     	;# 
  4640  0290                     	;# 
  4641  0290                     	;# 
  4642  0291                     	;# 
  4643  0292                     	;# 
  4644  0292                     	;# 
  4645  0293                     	;# 
  4646  0293                     	;# 
  4647  0294                     	;# 
  4648  0295                     	;# 
  4649  0296                     	;# 
  4650  0296                     	;# 
  4651  0297                     	;# 
  4652  0298                     	;# 
  4653  0298                     	;# 
  4654  0299                     	;# 
  4655  0299                     	;# 
  4656  029A                     	;# 
  4657  029B                     	;# 
  4658  029C                     	;# 
  4659  029C                     	;# 
  4660  029D                     	;# 
  4661  030C                     	;# 
  4662  030C                     	;# 
  4663  030D                     	;# 
  4664  030E                     	;# 
  4665  030F                     	;# 
  4666  0310                     	;# 
  4667  0310                     	;# 
  4668  0311                     	;# 
  4669  0312                     	;# 
  4670  0313                     	;# 
  4671  0314                     	;# 
  4672  0314                     	;# 
  4673  0315                     	;# 
  4674  0316                     	;# 
  4675  0317                     	;# 
  4676  0318                     	;# 
  4677  0318                     	;# 
  4678  0319                     	;# 
  4679  031A                     	;# 
  4680  031B                     	;# 
  4681  031C                     	;# 
  4682  031C                     	;# 
  4683  031D                     	;# 
  4684  031E                     	;# 
  4685  031F                     	;# 
  4686  038C                     	;# 
  4687  038C                     	;# 
  4688  038D                     	;# 
  4689  038E                     	;# 
  4690  0390                     	;# 
  4691  0390                     	;# 
  4692  0391                     	;# 
  4693  0392                     	;# 
  4694  040C                     	;# 
  4695  040D                     	;# 
  4696  040E                     	;# 
  4697  040F                     	;# 
  4698  0410                     	;# 
  4699  0411                     	;# 
  4700  0416                     	;# 
  4701  0416                     	;# 
  4702  0417                     	;# 
  4703  0418                     	;# 
  4704  0418                     	;# 
  4705  0419                     	;# 
  4706  041A                     	;# 
  4707  041A                     	;# 
  4708  041B                     	;# 
  4709  041C                     	;# 
  4710  041C                     	;# 
  4711  041D                     	;# 
  4712  041E                     	;# 
  4713  041F                     	;# 
  4714  048C                     	;# 
  4715  048C                     	;# 
  4716  048D                     	;# 
  4717  048E                     	;# 
  4718  048F                     	;# 
  4719  048F                     	;# 
  4720  0490                     	;# 
  4721  0491                     	;# 
  4722  0492                     	;# 
  4723  0492                     	;# 
  4724  0493                     	;# 
  4725  0494                     	;# 
  4726  0495                     	;# 
  4727  0495                     	;# 
  4728  0496                     	;# 
  4729  0497                     	;# 
  4730  0498                     	;# 
  4731  0499                     	;# 
  4732  049A                     	;# 
  4733  049B                     	;# 
  4734  049C                     	;# 
  4735  049D                     	;# 
  4736  050C                     	;# 
  4737  050C                     	;# 
  4738  050D                     	;# 
  4739  050E                     	;# 
  4740  050F                     	;# 
  4741  050F                     	;# 
  4742  0510                     	;# 
  4743  0511                     	;# 
  4744  0512                     	;# 
  4745  0512                     	;# 
  4746  0513                     	;# 
  4747  0514                     	;# 
  4748  0515                     	;# 
  4749  0515                     	;# 
  4750  0516                     	;# 
  4751  0517                     	;# 
  4752  0518                     	;# 
  4753  0519                     	;# 
  4754  051A                     	;# 
  4755  051B                     	;# 
  4756  051C                     	;# 
  4757  051D                     	;# 
  4758  058C                     	;# 
  4759  058C                     	;# 
  4760  058D                     	;# 
  4761  058E                     	;# 
  4762  058F                     	;# 
  4763  058F                     	;# 
  4764  0590                     	;# 
  4765  0591                     	;# 
  4766  0592                     	;# 
  4767  0593                     	;# 
  4768  060C                     	;# 
  4769  060D                     	;# 
  4770  060E                     	;# 
  4771  060F                     	;# 
  4772  0610                     	;# 
  4773  0611                     	;# 
  4774  0612                     	;# 
  4775  0613                     	;# 
  4776  0614                     	;# 
  4777  0616                     	;# 
  4778  0617                     	;# 
  4779  0618                     	;# 
  4780  0619                     	;# 
  4781  061A                     	;# 
  4782  061B                     	;# 
  4783  061C                     	;# 
  4784  061D                     	;# 
  4785  061E                     	;# 
  4786  068C                     	;# 
  4787  068D                     	;# 
  4788  068E                     	;# 
  4789  068F                     	;# 
  4790  0690                     	;# 
  4791  0691                     	;# 
  4792  0692                     	;# 
  4793  0693                     	;# 
  4794  0694                     	;# 
  4795  070C                     	;# 
  4796  070D                     	;# 
  4797  070E                     	;# 
  4798  070F                     	;# 
  4799  0710                     	;# 
  4800  0711                     	;# 
  4801  0712                     	;# 
  4802  0713                     	;# 
  4803  0714                     	;# 
  4804  0716                     	;# 
  4805  0717                     	;# 
  4806  0718                     	;# 
  4807  0719                     	;# 
  4808  071A                     	;# 
  4809  071B                     	;# 
  4810  071C                     	;# 
  4811  071D                     	;# 
  4812  071E                     	;# 
  4813  0796                     	;# 
  4814  0797                     	;# 
  4815  0798                     	;# 
  4816  0799                     	;# 
  4817  079A                     	;# 
  4818  079B                     	;# 
  4819  080C                     	;# 
  4820  080D                     	;# 
  4821  080E                     	;# 
  4822  080F                     	;# 
  4823  0810                     	;# 
  4824  0811                     	;# 
  4825  0812                     	;# 
  4826  0813                     	;# 
  4827  0814                     	;# 
  4828  081A                     	;# 
  4829  081B                     	;# 
  4830  081C                     	;# 
  4831  081D                     	;# 
  4832  081E                     	;# 
  4833  081F                     	;# 
  4834  088C                     	;# 
  4835  088D                     	;# 
  4836  088E                     	;# 
  4837  088F                     	;# 
  4838  0890                     	;# 
  4839  0891                     	;# 
  4840  0892                     	;# 
  4841  0893                     	;# 
  4842  0895                     	;# 
  4843  0896                     	;# 
  4844  0897                     	;# 
  4845  0898                     	;# 
  4846  0899                     	;# 
  4847  089A                     	;# 
  4848  089B                     	;# 
  4849  090C                     	;# 
  4850  090E                     	;# 
  4851  090F                     	;# 
  4852  091F                     	;# 
  4853  091F                     	;# 
  4854  098F                     	;# 
  4855  098F                     	;# 
  4856  0990                     	;# 
  4857  0991                     	;# 
  4858  0992                     	;# 
  4859  0993                     	;# 
  4860  0994                     	;# 
  4861  0995                     	;# 
  4862  0996                     	;# 
  4863  0997                     	;# 
  4864  0E0F                     	;# 
  4865  0E10                     	;# 
  4866  0E11                     	;# 
  4867  0E12                     	;# 
  4868  0E13                     	;# 
  4869  0E14                     	;# 
  4870  0E15                     	;# 
  4871  0E16                     	;# 
  4872  0E17                     	;# 
  4873  0E18                     	;# 
  4874  0E19                     	;# 
  4875  0E1A                     	;# 
  4876  0E1B                     	;# 
  4877  0E1C                     	;# 
  4878  0E1D                     	;# 
  4879  0E1E                     	;# 
  4880  0E1F                     	;# 
  4881  0E20                     	;# 
  4882  0E21                     	;# 
  4883  0E22                     	;# 
  4884  0E23                     	;# 
  4885  0E24                     	;# 
  4886  0E25                     	;# 
  4887  0E26                     	;# 
  4888  0E27                     	;# 
  4889  0E28                     	;# 
  4890  0E29                     	;# 
  4891  0E2A                     	;# 
  4892  0E2B                     	;# 
  4893  0E2C                     	;# 
  4894  0E2D                     	;# 
  4895  0E2E                     	;# 
  4896  0E2F                     	;# 
  4897  0E30                     	;# 
  4898  0E31                     	;# 
  4899  0E32                     	;# 
  4900  0E33                     	;# 
  4901  0E34                     	;# 
  4902  0E35                     	;# 
  4903  0E36                     	;# 
  4904  0E37                     	;# 
  4905  0E8F                     	;# 
  4906  0E90                     	;# 
  4907  0E91                     	;# 
  4908  0E92                     	;# 
  4909  0E93                     	;# 
  4910  0E94                     	;# 
  4911  0E95                     	;# 
  4912  0E96                     	;# 
  4913  0E97                     	;# 
  4914  0E9C                     	;# 
  4915  0E9D                     	;# 
  4916  0E9E                     	;# 
  4917  0EA1                     	;# 
  4918  0EA2                     	;# 
  4919  0EA3                     	;# 
  4920  0EA4                     	;# 
  4921  0EA5                     	;# 
  4922  0EA9                     	;# 
  4923  0EAA                     	;# 
  4924  0EAB                     	;# 
  4925  0EAC                     	;# 
  4926  0EB1                     	;# 
  4927  0EB2                     	;# 
  4928  0EB3                     	;# 
  4929  0EB8                     	;# 
  4930  0EB9                     	;# 
  4931  0EBA                     	;# 
  4932  0EBB                     	;# 
  4933  0EBC                     	;# 
  4934  0EBD                     	;# 
  4935  0EBE                     	;# 
  4936  0EC3                     	;# 
  4937  0EC5                     	;# 
  4938  0EC6                     	;# 
  4939  0EC7                     	;# 
  4940  0EC8                     	;# 
  4941  0EC9                     	;# 
  4942  0ECA                     	;# 
  4943  0ECB                     	;# 
  4944  0ECC                     	;# 
  4945  0F10                     	;# 
  4946  0F11                     	;# 
  4947  0F12                     	;# 
  4948  0F13                     	;# 
  4949  0F14                     	;# 
  4950  0F15                     	;# 
  4951  0F16                     	;# 
  4952  0F17                     	;# 
  4953  0F18                     	;# 
  4954  0F19                     	;# 
  4955  0F1A                     	;# 
  4956  0F1B                     	;# 
  4957  0F1C                     	;# 
  4958  0F1D                     	;# 
  4959  0F1E                     	;# 
  4960  0F1F                     	;# 
  4961  0F20                     	;# 
  4962  0F21                     	;# 
  4963  0F22                     	;# 
  4964  0F23                     	;# 
  4965  0F24                     	;# 
  4966  0F25                     	;# 
  4967  0F26                     	;# 
  4968  0F27                     	;# 
  4969  0F28                     	;# 
  4970  0F29                     	;# 
  4971  0F2A                     	;# 
  4972  0F2B                     	;# 
  4973  0F2C                     	;# 
  4974  0F2D                     	;# 
  4975  0F2E                     	;# 
  4976  0F2F                     	;# 
  4977  0F30                     	;# 
  4978  0F31                     	;# 
  4979  0F32                     	;# 
  4980  0F38                     	;# 
  4981  0F39                     	;# 
  4982  0F3A                     	;# 
  4983  0F3B                     	;# 
  4984  0F3C                     	;# 
  4985  0F3D                     	;# 
  4986  0F3E                     	;# 
  4987  0F3F                     	;# 
  4988  0F40                     	;# 
  4989  0F41                     	;# 
  4990  0F43                     	;# 
  4991  0F44                     	;# 
  4992  0F45                     	;# 
  4993  0F46                     	;# 
  4994  0F47                     	;# 
  4995  0F48                     	;# 
  4996  0F49                     	;# 
  4997  0F4A                     	;# 
  4998  0F4B                     	;# 
  4999  0F4C                     	;# 
  5000  0F4E                     	;# 
  5001  0F4F                     	;# 
  5002  0F50                     	;# 
  5003  0F51                     	;# 
  5004  0F52                     	;# 
  5005  0F53                     	;# 
  5006  0F54                     	;# 
  5007  0F55                     	;# 
  5008  0F56                     	;# 
  5009  0F57                     	;# 
  5010  0F59                     	;# 
  5011  0F5A                     	;# 
  5012  0F5B                     	;# 
  5013  0F5C                     	;# 
  5014  0F5D                     	;# 
  5015  0F61                     	;# 
  5016  0F62                     	;# 
  5017  0F64                     	;# 
  5018  0F65                     	;# 
  5019  0F66                     	;# 
  5020  0F67                     	;# 
  5021  0F68                     	;# 
  5022  0F69                     	;# 
  5023  0F6A                     	;# 
  5024  0F6B                     	;# 
  5025  0F6C                     	;# 
  5026  0F6D                     	;# 
  5027  0FE4                     	;# 
  5028  0FE5                     	;# 
  5029  0FE6                     	;# 
  5030  0FE7                     	;# 
  5031  0FE8                     	;# 
  5032  0FE9                     	;# 
  5033  0FEA                     	;# 
  5034  0FEB                     	;# 
  5035  0FED                     	;# 
  5036  0FEE                     	;# 
  5037  0FEF                     	;# 
  5038  0000                     	;# 
  5039  0001                     	;# 
  5040  0002                     	;# 
  5041  0003                     	;# 
  5042  0004                     	;# 
  5043  0005                     	;# 
  5044  0006                     	;# 
  5045  0007                     	;# 
  5046  0008                     	;# 
  5047  0009                     	;# 
  5048  000A                     	;# 
  5049  000B                     	;# 
  5050  000C                     	;# 
  5051  000D                     	;# 
  5052  000E                     	;# 
  5053  000F                     	;# 
  5054  0010                     	;# 
  5055  0011                     	;# 
  5056  0012                     	;# 
  5057  0013                     	;# 
  5058  0014                     	;# 
  5059  0015                     	;# 
  5060  0016                     	;# 
  5061  0017                     	;# 
  5062  0018                     	;# 
  5063  0019                     	;# 
  5064  001A                     	;# 
  5065  001C                     	;# 
  5066  001C                     	;# 
  5067  001D                     	;# 
  5068  001D                     	;# 
  5069  001E                     	;# 
  5070  001F                     	;# 
  5071  008C                     	;# 
  5072  008C                     	;# 
  5073  008D                     	;# 
  5074  008E                     	;# 
  5075  008E                     	;# 
  5076  008F                     	;# 
  5077  0090                     	;# 
  5078  0090                     	;# 
  5079  0091                     	;# 
  5080  0093                     	;# 
  5081  0094                     	;# 
  5082  0095                     	;# 
  5083  0096                     	;# 
  5084  0097                     	;# 
  5085  0098                     	;# 
  5086  0099                     	;# 
  5087  009A                     	;# 
  5088  009B                     	;# 
  5089  009C                     	;# 
  5090  009D                     	;# 
  5091  009E                     	;# 
  5092  010C                     	;# 
  5093  010D                     	;# 
  5094  010E                     	;# 
  5095  010E                     	;# 
  5096  010F                     	;# 
  5097  0110                     	;# 
  5098  0110                     	;# 
  5099  0111                     	;# 
  5100  0112                     	;# 
  5101  0112                     	;# 
  5102  0113                     	;# 
  5103  0114                     	;# 
  5104  0114                     	;# 
  5105  0115                     	;# 
  5106  0116                     	;# 
  5107  0116                     	;# 
  5108  0117                     	;# 
  5109  0119                     	;# 
  5110  0119                     	;# 
  5111  0119                     	;# 
  5112  011A                     	;# 
  5113  011A                     	;# 
  5114  011A                     	;# 
  5115  011B                     	;# 
  5116  011B                     	;# 
  5117  011B                     	;# 
  5118  011B                     	;# 
  5119  011B                     	;# 
  5120  011C                     	;# 
  5121  011C                     	;# 
  5122  011C                     	;# 
  5123  011D                     	;# 
  5124  011D                     	;# 
  5125  011D                     	;# 
  5126  011E                     	;# 
  5127  011E                     	;# 
  5128  011E                     	;# 
  5129  011F                     	;# 
  5130  011F                     	;# 
  5131  011F                     	;# 
  5132  011F                     	;# 
  5133  011F                     	;# 
  5134  018C                     	;# 
  5135  018D                     	;# 
  5136  018E                     	;# 
  5137  018F                     	;# 
  5138  0190                     	;# 
  5139  0191                     	;# 
  5140  0192                     	;# 
  5141  0196                     	;# 
  5142  0197                     	;# 
  5143  0198                     	;# 
  5144  0199                     	;# 
  5145  019A                     	;# 
  5146  019B                     	;# 
  5147  019C                     	;# 
  5148  020C                     	;# 
  5149  020C                     	;# 
  5150  020D                     	;# 
  5151  020E                     	;# 
  5152  020F                     	;# 
  5153  020F                     	;# 
  5154  0210                     	;# 
  5155  0210                     	;# 
  5156  0211                     	;# 
  5157  0211                     	;# 
  5158  0212                     	;# 
  5159  0212                     	;# 
  5160  0213                     	;# 
  5161  0214                     	;# 
  5162  0215                     	;# 
  5163  0215                     	;# 
  5164  0216                     	;# 
  5165  0216                     	;# 
  5166  0217                     	;# 
  5167  0217                     	;# 
  5168  0218                     	;# 
  5169  0218                     	;# 
  5170  0219                     	;# 
  5171  021A                     	;# 
  5172  021B                     	;# 
  5173  021B                     	;# 
  5174  021C                     	;# 
  5175  021C                     	;# 
  5176  021D                     	;# 
  5177  021D                     	;# 
  5178  021E                     	;# 
  5179  021F                     	;# 
  5180  028C                     	;# 
  5181  028C                     	;# 
  5182  028D                     	;# 
  5183  028D                     	;# 
  5184  028E                     	;# 
  5185  028F                     	;# 
  5186  0290                     	;# 
  5187  0290                     	;# 
  5188  0291                     	;# 
  5189  0292                     	;# 
  5190  0292                     	;# 
  5191  0293                     	;# 
  5192  0293                     	;# 
  5193  0294                     	;# 
  5194  0295                     	;# 
  5195  0296                     	;# 
  5196  0296                     	;# 
  5197  0297                     	;# 
  5198  0298                     	;# 
  5199  0298                     	;# 
  5200  0299                     	;# 
  5201  0299                     	;# 
  5202  029A                     	;# 
  5203  029B                     	;# 
  5204  029C                     	;# 
  5205  029C                     	;# 
  5206  029D                     	;# 
  5207  030C                     	;# 
  5208  030C                     	;# 
  5209  030D                     	;# 
  5210  030E                     	;# 
  5211  030F                     	;# 
  5212  0310                     	;# 
  5213  0310                     	;# 
  5214  0311                     	;# 
  5215  0312                     	;# 
  5216  0313                     	;# 
  5217  0314                     	;# 
  5218  0314                     	;# 
  5219  0315                     	;# 
  5220  0316                     	;# 
  5221  0317                     	;# 
  5222  0318                     	;# 
  5223  0318                     	;# 
  5224  0319                     	;# 
  5225  031A                     	;# 
  5226  031B                     	;# 
  5227  031C                     	;# 
  5228  031C                     	;# 
  5229  031D                     	;# 
  5230  031E                     	;# 
  5231  031F                     	;# 
  5232  038C                     	;# 
  5233  038C                     	;# 
  5234  038D                     	;# 
  5235  038E                     	;# 
  5236  0390                     	;# 
  5237  0390                     	;# 
  5238  0391                     	;# 
  5239  0392                     	;# 
  5240  040C                     	;# 
  5241  040D                     	;# 
  5242  040E                     	;# 
  5243  040F                     	;# 
  5244  0410                     	;# 
  5245  0411                     	;# 
  5246  0416                     	;# 
  5247  0416                     	;# 
  5248  0417                     	;# 
  5249  0418                     	;# 
  5250  0418                     	;# 
  5251  0419                     	;# 
  5252  041A                     	;# 
  5253  041A                     	;# 
  5254  041B                     	;# 
  5255  041C                     	;# 
  5256  041C                     	;# 
  5257  041D                     	;# 
  5258  041E                     	;# 
  5259  041F                     	;# 
  5260  048C                     	;# 
  5261  048C                     	;# 
  5262  048D                     	;# 
  5263  048E                     	;# 
  5264  048F                     	;# 
  5265  048F                     	;# 
  5266  0490                     	;# 
  5267  0491                     	;# 
  5268  0492                     	;# 
  5269  0492                     	;# 
  5270  0493                     	;# 
  5271  0494                     	;# 
  5272  0495                     	;# 
  5273  0495                     	;# 
  5274  0496                     	;# 
  5275  0497                     	;# 
  5276  0498                     	;# 
  5277  0499                     	;# 
  5278  049A                     	;# 
  5279  049B                     	;# 
  5280  049C                     	;# 
  5281  049D                     	;# 
  5282  050C                     	;# 
  5283  050C                     	;# 
  5284  050D                     	;# 
  5285  050E                     	;# 
  5286  050F                     	;# 
  5287  050F                     	;# 
  5288  0510                     	;# 
  5289  0511                     	;# 
  5290  0512                     	;# 
  5291  0512                     	;# 
  5292  0513                     	;# 
  5293  0514                     	;# 
  5294  0515                     	;# 
  5295  0515                     	;# 
  5296  0516                     	;# 
  5297  0517                     	;# 
  5298  0518                     	;# 
  5299  0519                     	;# 
  5300  051A                     	;# 
  5301  051B                     	;# 
  5302  051C                     	;# 
  5303  051D                     	;# 
  5304  058C                     	;# 
  5305  058C                     	;# 
  5306  058D                     	;# 
  5307  058E                     	;# 
  5308  058F                     	;# 
  5309  058F                     	;# 
  5310  0590                     	;# 
  5311  0591                     	;# 
  5312  0592                     	;# 
  5313  0593                     	;# 
  5314  060C                     	;# 
  5315  060D                     	;# 
  5316  060E                     	;# 
  5317  060F                     	;# 
  5318  0610                     	;# 
  5319  0611                     	;# 
  5320  0612                     	;# 
  5321  0613                     	;# 
  5322  0614                     	;# 
  5323  0616                     	;# 
  5324  0617                     	;# 
  5325  0618                     	;# 
  5326  0619                     	;# 
  5327  061A                     	;# 
  5328  061B                     	;# 
  5329  061C                     	;# 
  5330  061D                     	;# 
  5331  061E                     	;# 
  5332  068C                     	;# 
  5333  068D                     	;# 
  5334  068E                     	;# 
  5335  068F                     	;# 
  5336  0690                     	;# 
  5337  0691                     	;# 
  5338  0692                     	;# 
  5339  0693                     	;# 
  5340  0694                     	;# 
  5341  070C                     	;# 
  5342  070D                     	;# 
  5343  070E                     	;# 
  5344  070F                     	;# 
  5345  0710                     	;# 
  5346  0711                     	;# 
  5347  0712                     	;# 
  5348  0713                     	;# 
  5349  0714                     	;# 
  5350  0716                     	;# 
  5351  0717                     	;# 
  5352  0718                     	;# 
  5353  0719                     	;# 
  5354  071A                     	;# 
  5355  071B                     	;# 
  5356  071C                     	;# 
  5357  071D                     	;# 
  5358  071E                     	;# 
  5359  0796                     	;# 
  5360  0797                     	;# 
  5361  0798                     	;# 
  5362  0799                     	;# 
  5363  079A                     	;# 
  5364  079B                     	;# 
  5365  080C                     	;# 
  5366  080D                     	;# 
  5367  080E                     	;# 
  5368  080F                     	;# 
  5369  0810                     	;# 
  5370  0811                     	;# 
  5371  0812                     	;# 
  5372  0813                     	;# 
  5373  0814                     	;# 
  5374  081A                     	;# 
  5375  081B                     	;# 
  5376  081C                     	;# 
  5377  081D                     	;# 
  5378  081E                     	;# 
  5379  081F                     	;# 
  5380  088C                     	;# 
  5381  088D                     	;# 
  5382  088E                     	;# 
  5383  088F                     	;# 
  5384  0890                     	;# 
  5385  0891                     	;# 
  5386  0892                     	;# 
  5387  0893                     	;# 
  5388  0895                     	;# 
  5389  0896                     	;# 
  5390  0897                     	;# 
  5391  0898                     	;# 
  5392  0899                     	;# 
  5393  089A                     	;# 
  5394  089B                     	;# 
  5395  090C                     	;# 
  5396  090E                     	;# 
  5397  090F                     	;# 
  5398  091F                     	;# 
  5399  091F                     	;# 
  5400  098F                     	;# 
  5401  098F                     	;# 
  5402  0990                     	;# 
  5403  0991                     	;# 
  5404  0992                     	;# 
  5405  0993                     	;# 
  5406  0994                     	;# 
  5407  0995                     	;# 
  5408  0996                     	;# 
  5409  0997                     	;# 
  5410  0E0F                     	;# 
  5411  0E10                     	;# 
  5412  0E11                     	;# 
  5413  0E12                     	;# 
  5414  0E13                     	;# 
  5415  0E14                     	;# 
  5416  0E15                     	;# 
  5417  0E16                     	;# 
  5418  0E17                     	;# 
  5419  0E18                     	;# 
  5420  0E19                     	;# 
  5421  0E1A                     	;# 
  5422  0E1B                     	;# 
  5423  0E1C                     	;# 
  5424  0E1D                     	;# 
  5425  0E1E                     	;# 
  5426  0E1F                     	;# 
  5427  0E20                     	;# 
  5428  0E21                     	;# 
  5429  0E22                     	;# 
  5430  0E23                     	;# 
  5431  0E24                     	;# 
  5432  0E25                     	;# 
  5433  0E26                     	;# 
  5434  0E27                     	;# 
  5435  0E28                     	;# 
  5436  0E29                     	;# 
  5437  0E2A                     	;# 
  5438  0E2B                     	;# 
  5439  0E2C                     	;# 
  5440  0E2D                     	;# 
  5441  0E2E                     	;# 
  5442  0E2F                     	;# 
  5443  0E30                     	;# 
  5444  0E31                     	;# 
  5445  0E32                     	;# 
  5446  0E33                     	;# 
  5447  0E34                     	;# 
  5448  0E35                     	;# 
  5449  0E36                     	;# 
  5450  0E37                     	;# 
  5451  0E8F                     	;# 
  5452  0E90                     	;# 
  5453  0E91                     	;# 
  5454  0E92                     	;# 
  5455  0E93                     	;# 
  5456  0E94                     	;# 
  5457  0E95                     	;# 
  5458  0E96                     	;# 
  5459  0E97                     	;# 
  5460  0E9C                     	;# 
  5461  0E9D                     	;# 
  5462  0E9E                     	;# 
  5463  0EA1                     	;# 
  5464  0EA2                     	;# 
  5465  0EA3                     	;# 
  5466  0EA4                     	;# 
  5467  0EA5                     	;# 
  5468  0EA9                     	;# 
  5469  0EAA                     	;# 
  5470  0EAB                     	;# 
  5471  0EAC                     	;# 
  5472  0EB1                     	;# 
  5473  0EB2                     	;# 
  5474  0EB3                     	;# 
  5475  0EB8                     	;# 
  5476  0EB9                     	;# 
  5477  0EBA                     	;# 
  5478  0EBB                     	;# 
  5479  0EBC                     	;# 
  5480  0EBD                     	;# 
  5481  0EBE                     	;# 
  5482  0EC3                     	;# 
  5483  0EC5                     	;# 
  5484  0EC6                     	;# 
  5485  0EC7                     	;# 
  5486  0EC8                     	;# 
  5487  0EC9                     	;# 
  5488  0ECA                     	;# 
  5489  0ECB                     	;# 
  5490  0ECC                     	;# 
  5491  0F10                     	;# 
  5492  0F11                     	;# 
  5493  0F12                     	;# 
  5494  0F13                     	;# 
  5495  0F14                     	;# 
  5496  0F15                     	;# 
  5497  0F16                     	;# 
  5498  0F17                     	;# 
  5499  0F18                     	;# 
  5500  0F19                     	;# 
  5501  0F1A                     	;# 
  5502  0F1B                     	;# 
  5503  0F1C                     	;# 
  5504  0F1D                     	;# 
  5505  0F1E                     	;# 
  5506  0F1F                     	;# 
  5507  0F20                     	;# 
  5508  0F21                     	;# 
  5509  0F22                     	;# 
  5510  0F23                     	;# 
  5511  0F24                     	;# 
  5512  0F25                     	;# 
  5513  0F26                     	;# 
  5514  0F27                     	;# 
  5515  0F28                     	;# 
  5516  0F29                     	;# 
  5517  0F2A                     	;# 
  5518  0F2B                     	;# 
  5519  0F2C                     	;# 
  5520  0F2D                     	;# 
  5521  0F2E                     	;# 
  5522  0F2F                     	;# 
  5523  0F30                     	;# 
  5524  0F31                     	;# 
  5525  0F32                     	;# 
  5526  0F38                     	;# 
  5527  0F39                     	;# 
  5528  0F3A                     	;# 
  5529  0F3B                     	;# 
  5530  0F3C                     	;# 
  5531  0F3D                     	;# 
  5532  0F3E                     	;# 
  5533  0F3F                     	;# 
  5534  0F40                     	;# 
  5535  0F41                     	;# 
  5536  0F43                     	;# 
  5537  0F44                     	;# 
  5538  0F45                     	;# 
  5539  0F46                     	;# 
  5540  0F47                     	;# 
  5541  0F48                     	;# 
  5542  0F49                     	;# 
  5543  0F4A                     	;# 
  5544  0F4B                     	;# 
  5545  0F4C                     	;# 
  5546  0F4E                     	;# 
  5547  0F4F                     	;# 
  5548  0F50                     	;# 
  5549  0F51                     	;# 
  5550  0F52                     	;# 
  5551  0F53                     	;# 
  5552  0F54                     	;# 
  5553  0F55                     	;# 
  5554  0F56                     	;# 
  5555  0F57                     	;# 
  5556  0F59                     	;# 
  5557  0F5A                     	;# 
  5558  0F5B                     	;# 
  5559  0F5C                     	;# 
  5560  0F5D                     	;# 
  5561  0F61                     	;# 
  5562  0F62                     	;# 
  5563  0F64                     	;# 
  5564  0F65                     	;# 
  5565  0F66                     	;# 
  5566  0F67                     	;# 
  5567  0F68                     	;# 
  5568  0F69                     	;# 
  5569  0F6A                     	;# 
  5570  0F6B                     	;# 
  5571  0F6C                     	;# 
  5572  0F6D                     	;# 
  5573  0FE4                     	;# 
  5574  0FE5                     	;# 
  5575  0FE6                     	;# 
  5576  0FE7                     	;# 
  5577  0FE8                     	;# 
  5578  0FE9                     	;# 
  5579  0FEA                     	;# 
  5580  0FEB                     	;# 
  5581  0FED                     	;# 
  5582  0FEE                     	;# 
  5583  0FEF                     	;_buffer
  5584                           
  5585                           	psect	idataBANK0
  5586  0656                     __pidataBANK0:	
  5587                           
  5588                           ;initializer for main@F12846
  5589  0656  3401               	retlw	1
  5590  0657  3402               	retlw	2
  5591  0658  3403               	retlw	3
  5592  0659  3404               	retlw	4
  5593  065A  3405               	retlw	5
  5594                           
  5595                           ;initializer for _ptr_EEPROM
  5596  065B  3400               	retlw	0
  5597  065C  34F0               	retlw	240
  5598                           
  5599                           	psect	stringtext1
  5600  04B1                     __pstringtext1:	
  5601  04B1                     _fsmStateTable:	
  5602  04B1  348D               	retlw	low _do_I2C_IDLE
  5603  04B2  3406               	retlw	high _do_I2C_IDLE
  5604  04B3  3425               	retlw	low _do_I2C_SEND_ADR_READ
  5605  04B4  3406               	retlw	high _do_I2C_SEND_ADR_READ
  5606  04B5  343E               	retlw	low _do_I2C_SEND_ADR_WRITE
  5607  04B6  3406               	retlw	high _do_I2C_SEND_ADR_WRITE
  5608  04B7  34E4               	retlw	low _do_I2C_TX
  5609  04B8  3401               	retlw	high _do_I2C_TX
  5610  04B9  3486               	retlw	low _do_I2C_RX
  5611  04BA  3402               	retlw	high _do_I2C_RX
  5612  04BB  345D               	retlw	low _do_I2C_RCEN
  5613  04BC  3406               	retlw	high _do_I2C_RCEN
  5614  04BD  3489               	retlw	low _do_I2C_TX_EMPTY
  5615  04BE  3403               	retlw	high _do_I2C_TX_EMPTY
  5616  04BF  3488               	retlw	low _do_I2C_SEND_RESTART_READ
  5617  04C0  3406               	retlw	high _do_I2C_SEND_RESTART_READ
  5618  04C1  3483               	retlw	low _do_I2C_SEND_RESTART_WRITE
  5619  04C2  3406               	retlw	high _do_I2C_SEND_RESTART_WRITE
  5620  04C3  347E               	retlw	low _do_I2C_SEND_RESTART
  5621  04C4  3406               	retlw	high _do_I2C_SEND_RESTART
  5622  04C5  3479               	retlw	low _do_I2C_SEND_STOP
  5623  04C6  3406               	retlw	high _do_I2C_SEND_STOP
  5624  04C7  3474               	retlw	low _do_I2C_DO_ACK
  5625  04C8  3406               	retlw	high _do_I2C_DO_ACK
  5626  04C9  346F               	retlw	low _do_I2C_DO_NACK_STOP
  5627  04CA  3406               	retlw	high _do_I2C_DO_NACK_STOP
  5628  04CB  346A               	retlw	low _do_I2C_DO_NACK_RESTART
  5629  04CC  3406               	retlw	high _do_I2C_DO_NACK_RESTART
  5630  04CD  3446               	retlw	low _do_I2C_RESET
  5631  04CE  3406               	retlw	high _do_I2C_RESET
  5632  04CF  34EC               	retlw	low _do_I2C_DO_ADDRESS_NACK
  5633  04D0  3403               	retlw	high _do_I2C_DO_ADDRESS_NACK
  5634  04D1                     __end_of_fsmStateTable:	
  5635                           
  5636                           	psect	bitnvCOMMON
  5637  03E8                     __pbitnvCOMMON:	
  5638  03E8                     _running:	
  5639  03E8                     	ds	1
  5640                           
  5641                           	psect	nvBANK0
  5642  005F                     __pnvBANK0:	
  5643  005F                     _duty_cycle:	
  5644  005F                     	ds	2
  5645  0061                     _pmon:	
  5646  0061                     	ds	1
  5647  0062                     _nreg:	
  5648  0062                     	ds	1
  5649  0003                     _STATUSbits	set	3
  5650  0013                     _TRISCbits	set	19
  5651  0016                     _LATAbits	set	22
  5652  0014                     _TRISD	set	20
  5653  0013                     _TRISC	set	19
  5654  0012                     _TRISB	set	18
  5655  0011                     _TRISA	set	17
  5656  0015                     _TRISE	set	21
  5657  0018                     _LATC	set	24
  5658  0017                     _LATB	set	23
  5659  0016                     _LATA	set	22
  5660  0019                     _LATD	set	25
  5661  001A                     _LATE	set	26
  5662  000B                     _INTCONbits	set	11
  5663  018E                     _SSP1MSK	set	398
  5664  018D                     _SSP1ADD	set	397
  5665  018F                     _SSP1STAT	set	399
  5666  0191                     _SSP1CON2	set	401
  5667  0190                     _SSP1CON1bits	set	400
  5668  018C                     _SSP1BUF	set	396
  5669  018F                     _SSP1STATbits	set	399
  5670  0191                     _SSP1CON2bits	set	401
  5671  0190                     _SSP1CON1	set	400
  5672  020F                     _T1GCONbits	set	527
  5673  020E                     _T1CONbits	set	526
  5674  020E                     _T1CON	set	526
  5675  020C                     _TMR1L	set	524
  5676  020D                     _TMR1H	set	525
  5677  0211                     _T1CLK	set	529
  5678  0210                     _T1GATE	set	528
  5679  020F                     _T1GCON	set	527
  5680  0719                     _PIE3bits	set	1817
  5681  071A                     _PIE4bits	set	1818
  5682  0710                     _PIR4bits	set	1808
  5683  070F                     _PIR3bits	set	1807
  5684  079B                     _PMD5	set	1947
  5685  079A                     _PMD4	set	1946
  5686  0799                     _PMD3	set	1945
  5687  0798                     _PMD2	set	1944
  5688  0797                     _PMD1	set	1943
  5689  0796                     _PMD0	set	1942
  5690  081F                     _NVMCON2	set	2079
  5691  081C                     _NVMDATL	set	2076
  5692  081D                     _NVMDATH	set	2077
  5693  081E                     _NVMCON1bits	set	2078
  5694  081B                     _NVMADRH	set	2075
  5695  081A                     _NVMADRL	set	2074
  5696  0892                     _OSCTUNE	set	2194
  5697  0893                     _OSCFRQ	set	2195
  5698  0891                     _OSCEN	set	2193
  5699  088F                     _OSCCON3	set	2191
  5700  088D                     _OSCCON1	set	2189
  5701  0EC6                     _SSP1DATPPS	set	3782
  5702  0EC5                     _SSP1CLKPPS	set	3781
  5703  0F24                     _RC4PPS	set	3876
  5704  0F23                     _RC3PPS	set	3875
  5705  0F68                     _INLVLE	set	3944
  5706  0F5D                     _INLVLD	set	3933
  5707  0F52                     _INLVLC	set	3922
  5708  0F47                     _INLVLB	set	3911
  5709  0F3C                     _INLVLA	set	3900
  5710  0F67                     _SLRCONE	set	3943
  5711  0F5C                     _SLRCOND	set	3932
  5712  0F51                     _SLRCONC	set	3921
  5713  0F46                     _SLRCONB	set	3910
  5714  0F3B                     _SLRCONA	set	3899
  5715  0F5B                     _ODCOND	set	3931
  5716  0F50                     _ODCONC	set	3920
  5717  0F45                     _ODCONB	set	3909
  5718  0F3A                     _ODCONA	set	3898
  5719  0F66                     _ODCONE	set	3942
  5720  0F4F                     _WPUC	set	3919
  5721  0F39                     _WPUA	set	3897
  5722  0F44                     _WPUB	set	3908
  5723  0F65                     _WPUE	set	3941
  5724  0F5A                     _WPUD	set	3930
  5725  0F38                     _ANSELA	set	3896
  5726  0F64                     _ANSELE	set	3940
  5727  0F43                     _ANSELB	set	3907
  5728  0F4E                     _ANSELC	set	3918
  5729  0F59                     _ANSELD	set	3929
  5730  7A7C                     _WPUC4	set	31356
  5731  7A7B                     _WPUC3	set	31355
  5732                           
  5733                           ; #config settings
  5734  0000                     
  5735                           	psect	cinit
  5736  0039                     start_initialization:	
  5737  0039                     __initialization:		;BIGRAM
  5738                           
  5739                           ; Initialize objects allocated to BANK0
  5740  0039  3056               	movlw	low __pidataBANK0
  5741  003A  0084               	movwf	4
  5742  003B  3086               	movlw	(high __pidataBANK0)| (0+128)
  5743  003C  0085               	movwf	5
  5744  003D  0012               	moviw fsr0++
  5745  003E  00D8               	movwf	__pdataBANK0& (0+127)
  5746  003F  0012               	moviw fsr0++
  5747  0040  00D9               	movwf	(__pdataBANK0+1)& (0+127)
  5748  0041  0012               	moviw fsr0++
  5749  0042  00DA               	movwf	(__pdataBANK0+2)& (0+127)
  5750  0043  0012               	moviw fsr0++
  5751  0044  00DB               	movwf	(__pdataBANK0+3)& (0+127)
  5752  0045  0012               	moviw fsr0++
  5753  0046  00DC               	movwf	(__pdataBANK0+4)& (0+127)
  5754  0047  0012               	moviw fsr0++
  5755  0048  00DD               	movwf	(__pdataBANK0+5)& (0+127)
  5756  0049  0012               	moviw fsr0++
  5757  004A  00DE               	movwf	(__pdataBANK0+6)& (0+127)
  5758                           
  5759                           ; Clear objects allocated to BIGRAM
  5760  004B  305A               	movlw	low (0+9050)
  5761  004C  0084               	movwf	4
  5762  004D  3023               	movlw	high (0+9050)
  5763  004E  0085               	movwf	5
  5764  004F  3096               	movlw	150
  5765  0050  00FE               	movwf	btemp
  5766  0051  3000               	movlw	0
  5767  0052  00FF               	movwf	btemp+1
  5768  0053  3186  2601  3180   	fcall	clear_ram0
  5769                           
  5770                           ; Clear objects allocated to BITCOMMON
  5771  0056  01FC               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  5772                           
  5773                           ; Clear objects allocated to COMMON
  5774  0057  01F8               	clrf	__pbssCOMMON& (0+127)
  5775  0058  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  5776  0059  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  5777  005A  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  5778                           
  5779                           ; Clear objects allocated to BANK0
  5780  005B  3020               	movlw	low __pbssBANK0
  5781  005C  0084               	movwf	4
  5782  005D  3000               	movlw	high __pbssBANK0
  5783  005E  0085               	movwf	5
  5784  005F  3020               	movlw	32
  5785  0060  00FE               	movwf	btemp
  5786  0061  3000               	movlw	0
  5787  0062  00FF               	movwf	btemp+1
  5788  0063  3186  2601  3180   	fcall	clear_ram0
  5789                           
  5790                           ; Clear objects allocated to BANK1
  5791  0066  30A0               	movlw	low __pbssBANK1
  5792  0067  0084               	movwf	4
  5793  0068  3000               	movlw	high __pbssBANK1
  5794  0069  0085               	movwf	5
  5795  006A  301D               	movlw	29
  5796  006B  00FE               	movwf	btemp
  5797  006C  3000               	movlw	0
  5798  006D  00FF               	movwf	btemp+1
  5799  006E  3186  2601  3180   	fcall	clear_ram0
  5800  0071                     end_of_initialization:	
  5801                           ;End of C runtime variable initialization code
  5802                           
  5803  0071                     __end_of__initialization:	
  5804  0071  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5805  0072  0020               	movlb	0
  5806  0073  3180  2875         	ljmp	_main	;jump to C main() function
  5807                           
  5808                           	psect	bssEEDATA
  5809  0000                     __pbssEEDATA:	
  5810  0000                     _recovery_data:	
  5811  0000  0000               	db	0
  5812  0001  0000               	db	0
  5813  0002  0000               	db	0
  5814  0003  0000               	db	0
  5815  0004  0000               	db	0
  5816                           
  5817                           	psect	bitbssCOMMON
  5818  03E0                     __pbitbssCOMMON:	
  5819  03E0                     _nreg_init:	
  5820  03E0                     	ds	1
  5821  03E1                     _configuration_mode:	
  5822  03E1                     	ds	1
  5823  03E2                     _half:	
  5824  03E2                     	ds	1
  5825                           
  5826                           	psect	bssCOMMON
  5827  0078                     __pbssCOMMON:	
  5828  0078                     _timer1ReloadVal:	
  5829  0078                     	ds	2
  5830  007A                     _aux:	
  5831  007A                     	ds	1
  5832  007B                     _value:	
  5833  007B                     	ds	1
  5834                           
  5835                           	psect	bssBANK0
  5836  0020                     __pbssBANK0:	
  5837  0020                     _ring_byte:	
  5838  0020                     	ds	5
  5839  0025                     _task_schedule:	
  5840  0025                     	ds	2
  5841  0027                     _convertedValue:	
  5842  0027                     	ds	2
  5843  0029                     _ptr_write_buff:	
  5844  0029                     	ds	2
  5845  002B                     _ptr_read_buff:	
  5846  002B                     	ds	2
  5847  002D                     _TMR1_InterruptHandler:	
  5848  002D                     	ds	2
  5849  002F                     _i2c1_driver_i2cISR:	
  5850  002F                     	ds	2
  5851  0031                     _i2c1_driver_busCollisionISR:	
  5852  0031                     	ds	2
  5853  0033                     _last1m_aux:	
  5854  0033                     	ds	1
  5855  0034                     _last5s_aux:	
  5856  0034                     	ds	1
  5857  0035                     _lum:	
  5858  0035                     	ds	1
  5859  0036                     _temp:	
  5860  0036                     	ds	1
  5861  0037                     _nreg_pt:	
  5862  0037                     	ds	1
  5863  0038                     _last1m:	
  5864  0038                     	ds	1
  5865  0039                     _last5s:	
  5866  0039                     	ds	1
  5867  003A                     _seg_aux:	
  5868  003A                     	ds	1
  5869  003B                     _seg:	
  5870  003B                     	ds	1
  5871  003C                     _clkm_aux:	
  5872  003C                     	ds	1
  5873  003D                     _clkm:	
  5874  003D                     	ds	1
  5875  003E                     _clkh_aux:	
  5876  003E                     	ds	1
  5877  003F                     _clkh:	
  5878  003F                     	ds	1
  5879                           
  5880                           	psect	dataBANK0
  5881  0058                     __pdataBANK0:	
  5882  0058                     main@F12846:	
  5883  0058                     	ds	5
  5884  005D                     _ptr_EEPROM:	
  5885  005D                     	ds	2
  5886                           
  5887                           	psect	bssBANK1
  5888  00A0                     __pbssBANK1:	
  5889  00A0                     _i2c_status:	
  5890  00A0                     	ds	29
  5891                           
  5892                           	psect	clrtext
  5893  0601                     clear_ram0:	
  5894                           ;	Called with FSR0 containing the base address, and
  5895                           ;	btemp/btemp+1 has the size to clear
  5896                           
  5897  0601  0064               	clrwdt	;clear the watchdog before getting into this loop
  5898  0602                     clrloop0:	
  5899  0602  0180               	clrf	0	;clear RAM location pointed to by FSR
  5900  0603  3101               	addfsr 0,1
  5901  0604  3001               	movlw	1
  5902  0605  02FE               	subwf	btemp,f
  5903  0606  3000               	movlw	0
  5904  0607  3BFF               	subwfb	btemp+1,f
  5905  0608  087F               	movf	btemp+1,w
  5906  0609  047E               	iorwf	btemp,w
  5907  060A  1D03               	skipz
  5908  060B  2E02               	goto	clrloop0	;have we reached the end yet?
  5909  060C  3400               	retlw	0	;all done for this memory range, return
  5910                           
  5911                           	psect	cstackCOMMON
  5912  0070                     __pcstackCOMMON:	
  5913  0070                     ?_i2c1_driver_open:	
  5914  0070                     ?_i2c1_driver_isNACK:	
  5915                           ; 1 bit 
  5916                           
  5917  0070                     ?_setCallBack:	
  5918                           ; 1 bit 
  5919                           
  5920  0070                     ?_mssp1_clearIRQ:	
  5921                           ; 1 bytes @ 0x0
  5922                           
  5923  0070                     ??_mssp1_clearIRQ:	
  5924                           ; 1 bytes @ 0x0
  5925                           
  5926  0070                     ?_i2c_busCollisionISR:	
  5927                           ; 1 bytes @ 0x0
  5928                           
  5929  0070                     ??_i2c_busCollisionISR:	
  5930                           ; 1 bytes @ 0x0
  5931                           
  5932  0070                     ?_i2c_ISR:	
  5933                           ; 1 bytes @ 0x0
  5934                           
  5935  0070                     ?_i2c1_driver_resetBus:	
  5936                           ; 1 bytes @ 0x0
  5937                           
  5938  0070                     ??_i2c1_driver_resetBus:	
  5939                           ; 1 bytes @ 0x0
  5940                           
  5941  0070                     ?_i2c1_driver_restart:	
  5942                           ; 1 bytes @ 0x0
  5943                           
  5944  0070                     ??_i2c1_driver_restart:	
  5945                           ; 1 bytes @ 0x0
  5946                           
  5947  0070                     ?_i2c1_driver_stop:	
  5948                           ; 1 bytes @ 0x0
  5949                           
  5950  0070                     ??_i2c1_driver_stop:	
  5951                           ; 1 bytes @ 0x0
  5952                           
  5953  0070                     ?_i2c1_driver_TXData:	
  5954                           ; 1 bytes @ 0x0
  5955                           
  5956  0070                     ??_i2c1_driver_TXData:	
  5957                           ; 1 bytes @ 0x0
  5958                           
  5959  0070                     ?_i2c1_driver_startRX:	
  5960                           ; 1 bytes @ 0x0
  5961                           
  5962  0070                     ??_i2c1_driver_startRX:	
  5963                           ; 1 bytes @ 0x0
  5964                           
  5965  0070                     ?_i2c1_driver_sendACK:	
  5966                           ; 1 bytes @ 0x0
  5967                           
  5968  0070                     ??_i2c1_driver_sendACK:	
  5969                           ; 1 bytes @ 0x0
  5970                           
  5971  0070                     ?_i2c1_driver_sendNACK:	
  5972                           ; 1 bytes @ 0x0
  5973                           
  5974  0070                     ??_i2c1_driver_sendNACK:	
  5975                           ; 1 bytes @ 0x0
  5976                           
  5977  0070                     ??_i2c1_driver_isNACK:	
  5978                           ; 1 bytes @ 0x0
  5979                           
  5980  0070                     ?_i2c1_driver_getRXData:	
  5981                           ; 1 bytes @ 0x0
  5982                           
  5983  0070                     ??_i2c1_driver_getRXData:	
  5984                           ; 1 bytes @ 0x0
  5985                           
  5986  0070                     ?_mssp1_setIRQ:	
  5987                           ; 1 bytes @ 0x0
  5988                           
  5989  0070                     ??_mssp1_setIRQ:	
  5990                           ; 1 bytes @ 0x0
  5991                           
  5992  0070                     ?_i2c1_driver_clearBusCollision:	
  5993                           ; 1 bytes @ 0x0
  5994                           
  5995  0070                     ??_i2c1_driver_clearBusCollision:	
  5996                           ; 1 bytes @ 0x0
  5997                           
  5998  0070                     ?_TMR1_DefaultInterruptHandler:	
  5999                           ; 1 bytes @ 0x0
  6000                           
  6001  0070                     ??_TMR1_DefaultInterruptHandler:	
  6002                           ; 1 bytes @ 0x0
  6003                           
  6004  0070                     ?_PMD_Initialize:	
  6005                           ; 1 bytes @ 0x0
  6006                           
  6007  0070                     ?_PIN_MANAGER_Initialize:	
  6008                           ; 1 bytes @ 0x0
  6009                           
  6010  0070                     ?_OSCILLATOR_Initialize:	
  6011                           ; 1 bytes @ 0x0
  6012                           
  6013  0070                     ?_update_clock:	
  6014                           ; 1 bytes @ 0x0
  6015                           
  6016  0070                     ??_update_clock:	
  6017                           ; 1 bytes @ 0x0
  6018                           
  6019  0070                     ?_cksum:	
  6020                           ; 1 bytes @ 0x0
  6021                           
  6022  0070                     ?_cksum_w:	
  6023                           ; 1 bytes @ 0x0
  6024                           
  6025  0070                     ?_i2c_setBuffer:	
  6026                           ; 1 bytes @ 0x0
  6027                           
  6028  0070                     ?_do_I2C_RESET:	
  6029                           ; 1 bytes @ 0x0
  6030                           
  6031  0070                     ??_do_I2C_RESET:	
  6032                           ; 1 bytes @ 0x0
  6033                           
  6034  0070                     ?_do_I2C_IDLE:	
  6035                           ; 1 bytes @ 0x0
  6036                           
  6037  0070                     ??_do_I2C_IDLE:	
  6038                           ; 1 bytes @ 0x0
  6039                           
  6040  0070                     ?_do_I2C_SEND_RESTART_READ:	
  6041                           ; 1 bytes @ 0x0
  6042                           
  6043  0070                     ??_do_I2C_SEND_RESTART_READ:	
  6044                           ; 1 bytes @ 0x0
  6045                           
  6046  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  6047                           ; 1 bytes @ 0x0
  6048                           
  6049  0070                     ??_do_I2C_SEND_RESTART_WRITE:	
  6050                           ; 1 bytes @ 0x0
  6051                           
  6052  0070                     ?_do_I2C_SEND_RESTART:	
  6053                           ; 1 bytes @ 0x0
  6054                           
  6055  0070                     ??_do_I2C_SEND_RESTART:	
  6056                           ; 1 bytes @ 0x0
  6057                           
  6058  0070                     ?_do_I2C_SEND_STOP:	
  6059                           ; 1 bytes @ 0x0
  6060                           
  6061  0070                     ??_do_I2C_SEND_STOP:	
  6062                           ; 1 bytes @ 0x0
  6063                           
  6064  0070                     ?_do_I2C_SEND_ADR_READ:	
  6065                           ; 1 bytes @ 0x0
  6066                           
  6067  0070                     ??_do_I2C_SEND_ADR_READ:	
  6068                           ; 1 bytes @ 0x0
  6069                           
  6070  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  6071                           ; 1 bytes @ 0x0
  6072                           
  6073  0070                     ?_do_I2C_RCEN:	
  6074                           ; 1 bytes @ 0x0
  6075                           
  6076  0070                     ??_do_I2C_RCEN:	
  6077                           ; 1 bytes @ 0x0
  6078                           
  6079  0070                     ?_do_I2C_DO_ACK:	
  6080                           ; 1 bytes @ 0x0
  6081                           
  6082  0070                     ??_do_I2C_DO_ACK:	
  6083                           ; 1 bytes @ 0x0
  6084                           
  6085  0070                     ?_do_I2C_DO_NACK_STOP:	
  6086                           ; 1 bytes @ 0x0
  6087                           
  6088  0070                     ??_do_I2C_DO_NACK_STOP:	
  6089                           ; 1 bytes @ 0x0
  6090                           
  6091  0070                     ?_do_I2C_DO_NACK_RESTART:	
  6092                           ; 1 bytes @ 0x0
  6093                           
  6094  0070                     ??_do_I2C_DO_NACK_RESTART:	
  6095                           ; 1 bytes @ 0x0
  6096                           
  6097  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  6098                           ; 1 bytes @ 0x0
  6099                           
  6100  0070                     ??_do_I2C_DO_ADDRESS_NACK:	
  6101                           ; 1 bytes @ 0x0
  6102                           
  6103  0070                     ?_do_I2C_TX:	
  6104                           ; 1 bytes @ 0x0
  6105                           
  6106  0070                     ?_do_I2C_RX:	
  6107                           ; 1 bytes @ 0x0
  6108                           
  6109  0070                     ??_do_I2C_RX:	
  6110                           ; 1 bytes @ 0x0
  6111                           
  6112  0070                     ?_do_I2C_TX_EMPTY:	
  6113                           ; 1 bytes @ 0x0
  6114                           
  6115  0070                     ??_do_I2C_TX_EMPTY:	
  6116                           ; 1 bytes @ 0x0
  6117                           
  6118  0070                     ?_TMR1_Initialize:	
  6119                           ; 1 bytes @ 0x0
  6120                           
  6121  0070                     ?_TMR1_WriteTimer:	
  6122                           ; 1 bytes @ 0x0
  6123                           
  6124  0070                     ?_TMR1_ISR:	
  6125                           ; 1 bytes @ 0x0
  6126                           
  6127  0070                     ?_INTERRUPT_InterruptManager:	
  6128                           ; 1 bytes @ 0x0
  6129                           
  6130  0070                     ?_SYSTEM_Initialize:	
  6131                           ; 1 bytes @ 0x0
  6132                           
  6133  0070                     ?_h_clock:	
  6134                           ; 1 bytes @ 0x0
  6135                           
  6136  0070                     ?_Push_ring_buffer:	
  6137                           ; 1 bytes @ 0x0
  6138                           
  6139  0070                     ?_main:	
  6140                           ; 1 bytes @ 0x0
  6141                           
  6142  0070                     ?___eetoc:	
  6143                           ; 1 bytes @ 0x0
  6144                           
  6145  0070                     i2c1_driver_TXData@d:	
  6146                           ; 1 bytes @ 0x0
  6147                           
  6148  0070                     i2c_setBuffer@bufferSize:	
  6149                           ; 1 bytes @ 0x0
  6150                           
  6151  0070                     setCallBack@cb:	
  6152                           ; 2 bytes @ 0x0
  6153                           
  6154  0070                     TMR1_WriteTimer@timerVal:	
  6155                           ; 2 bytes @ 0x0
  6156                           
  6157                           
  6158                           ; 2 bytes @ 0x0
  6159  0070                     	ds	1
  6160  0071                     ??_do_I2C_SEND_ADR_WRITE:	
  6161  0071                     ??_do_I2C_TX:	
  6162                           ; 1 bytes @ 0x1
  6163                           
  6164  0071                     ??_h_clock:	
  6165                           ; 1 bytes @ 0x1
  6166                           
  6167                           
  6168                           ; 1 bytes @ 0x1
  6169  0071                     	ds	1
  6170  0072                     ??_i2c_setBuffer:	
  6171  0072                     ??_TMR1_WriteTimer:	
  6172                           ; 1 bytes @ 0x2
  6173                           
  6174  0072                     ??_TMR1_ISR:	
  6175                           ; 1 bytes @ 0x2
  6176                           
  6177  0072                     setCallBack@p:	
  6178                           ; 1 bytes @ 0x2
  6179                           
  6180                           
  6181                           ; 1 bytes @ 0x2
  6182  0072                     	ds	1
  6183  0073                     ??_setCallBack:	
  6184  0073                     i2c_setBuffer@buffer:	
  6185                           ; 1 bytes @ 0x3
  6186                           
  6187                           
  6188                           ; 1 bytes @ 0x3
  6189  0073                     	ds	1
  6190  0074                     ??_i2c_ISR:	
  6191  0074                     setCallBack@idx:	
  6192                           ; 1 bytes @ 0x4
  6193                           
  6194                           
  6195                           ; 1 bytes @ 0x4
  6196  0074                     	ds	1
  6197  0075                     ?_i2c_setDataCompleteCallback:	
  6198  0075                     i2c_setDataCompleteCallback@cb:	
  6199                           ; 1 bytes @ 0x5
  6200                           
  6201                           
  6202                           ; 2 bytes @ 0x5
  6203  0075                     	ds	2
  6204  0077                     ??_INTERRUPT_InterruptManager:	
  6205  0077                     i2c_setDataCompleteCallback@p:	
  6206                           ; 1 bytes @ 0x7
  6207                           
  6208                           
  6209                           ; 1 bytes @ 0x7
  6210  0077                     	ds	1
  6211  0078                     ??_returnStop:	
  6212  0078                     ??_returnReset:	
  6213                           ; 1 bytes @ 0x8
  6214                           
  6215  0078                     ??_i2c_restartWrite:	
  6216                           ; 1 bytes @ 0x8
  6217                           
  6218  0078                     ??_wr1RegCompleteHandler:	
  6219                           ; 1 bytes @ 0x8
  6220                           
  6221  0078                     ??_rd1RegCompleteHandler:	
  6222                           ; 1 bytes @ 0x8
  6223                           
  6224  0078                     ??_rd2RegCompleteHandler:	
  6225                           ; 1 bytes @ 0x8
  6226                           
  6227  0078                     ??_wr2RegCompleteHandler:	
  6228                           ; 1 bytes @ 0x8
  6229                           
  6230  0078                     ??_rdBlkRegCompleteHandler:	
  6231                           ; 1 bytes @ 0x8
  6232                           
  6233                           
  6234                           	psect	cstackBANK0
  6235  0040                     __pcstackBANK0:	
  6236                           ; 1 bytes @ 0x8
  6237                           
  6238  0040                     ??_i2c1_driver_open:	
  6239  0040                     ?_TMR1_SetInterruptHandler:	
  6240                           ; 1 bytes @ 0x0
  6241                           
  6242  0040                     ??_PMD_Initialize:	
  6243                           ; 1 bytes @ 0x0
  6244                           
  6245  0040                     ??_PIN_MANAGER_Initialize:	
  6246                           ; 1 bytes @ 0x0
  6247                           
  6248  0040                     ??_OSCILLATOR_Initialize:	
  6249                           ; 1 bytes @ 0x0
  6250                           
  6251  0040                     ??_i2c_setDataCompleteCallback:	
  6252                           ; 1 bytes @ 0x0
  6253                           
  6254  0040                     ?_DATAEE_WriteByte:	
  6255                           ; 1 bytes @ 0x0
  6256                           
  6257  0040                     ?___eecpymem:	
  6258                           ; 1 bytes @ 0x0
  6259                           
  6260  0040                     ?___memcpyee:	
  6261                           ; 1 bytes @ 0x0
  6262                           
  6263  0040                     ?___bmul:	
  6264                           ; 1 bytes @ 0x0
  6265                           
  6266  0040                     ___eecpymem@from:	
  6267                           ; 1 bytes @ 0x0
  6268                           
  6269  0040                     ___memcpyee@from:	
  6270                           ; 1 bytes @ 0x0
  6271                           
  6272  0040                     ___bmul@multiplicand:	
  6273                           ; 1 bytes @ 0x0
  6274                           
  6275  0040                     TMR1_SetInterruptHandler@InterruptHandler:	
  6276                           ; 1 bytes @ 0x0
  6277                           
  6278  0040                     DATAEE_WriteByte@bAdd:	
  6279                           ; 2 bytes @ 0x0
  6280                           
  6281                           
  6282                           ; 2 bytes @ 0x0
  6283  0040                     	ds	1
  6284  0041                     ?_returnStop:	
  6285  0041                     ?_returnReset:	
  6286                           ; 1 bytes @ 0x1
  6287                           
  6288  0041                     ?_i2c_restartWrite:	
  6289                           ; 1 bytes @ 0x1
  6290                           
  6291  0041                     ?_wr1RegCompleteHandler:	
  6292                           ; 1 bytes @ 0x1
  6293                           
  6294  0041                     ?_rd1RegCompleteHandler:	
  6295                           ; 1 bytes @ 0x1
  6296                           
  6297  0041                     ?_rd2RegCompleteHandler:	
  6298                           ; 1 bytes @ 0x1
  6299                           
  6300  0041                     ?_wr2RegCompleteHandler:	
  6301                           ; 1 bytes @ 0x1
  6302                           
  6303  0041                     ?_rdBlkRegCompleteHandler:	
  6304                           ; 1 bytes @ 0x1
  6305                           
  6306  0041                     ??___bmul:	
  6307                           ; 1 bytes @ 0x1
  6308                           
  6309  0041                     returnStop@p:	
  6310                           ; 1 bytes @ 0x1
  6311                           
  6312  0041                     returnReset@p:	
  6313                           ; 1 bytes @ 0x1
  6314                           
  6315  0041                     wr1RegCompleteHandler@p:	
  6316                           ; 1 bytes @ 0x1
  6317                           
  6318  0041                     rd1RegCompleteHandler@p:	
  6319                           ; 1 bytes @ 0x1
  6320                           
  6321  0041                     rd2RegCompleteHandler@p:	
  6322                           ; 1 bytes @ 0x1
  6323                           
  6324  0041                     wr2RegCompleteHandler@p:	
  6325                           ; 1 bytes @ 0x1
  6326                           
  6327  0041                     rdBlkRegCompleteHandler@p:	
  6328                           ; 1 bytes @ 0x1
  6329                           
  6330  0041                     i2c_restartWrite@p:	
  6331                           ; 1 bytes @ 0x1
  6332                           
  6333  0041                     ___eecpymem@size:	
  6334                           ; 1 bytes @ 0x1
  6335                           
  6336  0041                     ___memcpyee@size:	
  6337                           ; 1 bytes @ 0x1
  6338                           
  6339                           
  6340                           ; 1 bytes @ 0x1
  6341  0041                     	ds	1
  6342  0042                     ??_TMR1_SetInterruptHandler:	
  6343  0042                     ??_TMR1_Initialize:	
  6344                           ; 1 bytes @ 0x2
  6345                           
  6346  0042                     ??_SYSTEM_Initialize:	
  6347                           ; 1 bytes @ 0x2
  6348                           
  6349  0042                     ??___eecpymem:	
  6350                           ; 1 bytes @ 0x2
  6351                           
  6352  0042                     ??___memcpyee:	
  6353                           ; 1 bytes @ 0x2
  6354                           
  6355  0042                     DATAEE_WriteByte@bData:	
  6356                           ; 1 bytes @ 0x2
  6357                           
  6358  0042                     ___bmul@product:	
  6359                           ; 1 bytes @ 0x2
  6360                           
  6361                           
  6362                           ; 1 bytes @ 0x2
  6363  0042                     	ds	1
  6364  0043                     ??_DATAEE_WriteByte:	
  6365  0043                     DATAEE_WriteByte@GIEBitValue:	
  6366                           ; 1 bytes @ 0x3
  6367                           
  6368  0043                     ___eecpymem@cp:	
  6369                           ; 1 bytes @ 0x3
  6370                           
  6371  0043                     ___memcpyee@ptr:	
  6372                           ; 1 bytes @ 0x3
  6373                           
  6374  0043                     ___bmul@multiplier:	
  6375                           ; 1 bytes @ 0x3
  6376                           
  6377                           
  6378                           ; 1 bytes @ 0x3
  6379  0043                     	ds	1
  6380  0044                     ?_read_ring:	
  6381  0044                     ?_Store_EEPROM:	
  6382                           ; 1 bytes @ 0x4
  6383                           
  6384  0044                     read_ring@subindex:	
  6385                           ; 1 bytes @ 0x4
  6386                           
  6387  0044                     ___eecpymem@to:	
  6388                           ; 1 bytes @ 0x4
  6389                           
  6390  0044                     ___memcpyee@to:	
  6391                           ; 1 bytes @ 0x4
  6392                           
  6393  0044                     Store_EEPROM@ptr_buffer_r:	
  6394                           ; 1 bytes @ 0x4
  6395                           
  6396                           
  6397                           ; 2 bytes @ 0x4
  6398  0044                     	ds	1
  6399  0045                     ??_read_ring:	
  6400  0045                     ??___eetoc:	
  6401                           ; 1 bytes @ 0x5
  6402                           
  6403                           
  6404                           ; 1 bytes @ 0x5
  6405  0045                     	ds	1
  6406  0046                     ??_Store_EEPROM:	
  6407  0046                     ___eetoc@addr:	
  6408                           ; 1 bytes @ 0x6
  6409                           
  6410                           
  6411                           ; 1 bytes @ 0x6
  6412  0046                     	ds	1
  6413  0047                     read_ring@i:	
  6414  0047                     ___eetoc@data:	
  6415                           ; 1 bytes @ 0x7
  6416                           
  6417                           
  6418                           ; 1 bytes @ 0x7
  6419  0047                     	ds	1
  6420  0048                     ??_cksum:	
  6421  0048                     read_ring@index:	
  6422                           ; 1 bytes @ 0x8
  6423                           
  6424                           
  6425                           ; 1 bytes @ 0x8
  6426  0048                     	ds	1
  6427  0049                     cksum@res:	
  6428  0049                     read_ring@absindex:	
  6429                           ; 1 bytes @ 0x9
  6430                           
  6431  0049                     Store_EEPROM@j:	
  6432                           ; 1 bytes @ 0x9
  6433                           
  6434                           
  6435                           ; 2 bytes @ 0x9
  6436  0049                     	ds	1
  6437  004A                     cksum@i:	
  6438                           
  6439                           ; 1 bytes @ 0xA
  6440  004A                     	ds	1
  6441  004B                     ??_Push_ring_buffer:	
  6442  004B                     ?___ctoee:	
  6443                           ; 1 bytes @ 0xB
  6444                           
  6445  004B                     ___ctoee@data:	
  6446                           ; 1 bytes @ 0xB
  6447                           
  6448                           
  6449                           ; 1 bytes @ 0xB
  6450  004B                     	ds	1
  6451  004C                     ??___ctoee:	
  6452                           
  6453                           ; 1 bytes @ 0xC
  6454  004C                     	ds	1
  6455  004D                     ___ctoee@addr:	
  6456                           
  6457                           ; 1 bytes @ 0xD
  6458  004D                     	ds	1
  6459  004E                     ??_cksum_w:	
  6460                           
  6461                           ; 1 bytes @ 0xE
  6462  004E                     	ds	1
  6463  004F                     Push_ring_buffer@reg:	
  6464                           
  6465                           ; 1 bytes @ 0xF
  6466  004F                     	ds	1
  6467  0050                     Push_ring_buffer@i:	
  6468                           
  6469                           ; 2 bytes @ 0x10
  6470  0050                     	ds	2
  6471  0052                     ??_main:	
  6472                           
  6473                           ; 1 bytes @ 0x12
  6474  0052                     	ds	1
  6475  0053                     main@data:	
  6476                           
  6477                           ; 5 bytes @ 0x13
  6478  0053                     	ds	5
  6479                           
  6480                           	psect	maintext
  6481  0075                     __pmaintext:	
  6482 ;;
  6483 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  6484 ;;
  6485 ;; *************** function _main *****************
  6486 ;; Defined at:
  6487 ;;		line 111 in file "main.c"
  6488 ;; Parameters:    Size  Location     Type
  6489 ;;		None
  6490 ;; Auto vars:     Size  Location     Type
  6491 ;;  data            5   19[BANK0 ] unsigned char [5]
  6492 ;; Return value:  Size  Location     Type
  6493 ;;                  1    wreg      void 
  6494 ;; Registers used:
  6495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6496 ;; Tracked objects:
  6497 ;;		On entry : B1F/0
  6498 ;;		On exit  : 0/0
  6499 ;;		Unchanged: 0/0
  6500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6502 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6503 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6504 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6505 ;;Total ram usage:        6 bytes
  6506 ;; Hardware stack levels required when called:   10
  6507 ;; This function calls:
  6508 ;;		_DATAEE_WriteByte
  6509 ;;		_Push_ring_buffer
  6510 ;;		_SYSTEM_Initialize
  6511 ;;		_TMR1_SetInterruptHandler
  6512 ;;		___ctoee
  6513 ;;		___eetoc
  6514 ;;		_cksum
  6515 ;;		_cksum_w
  6516 ;;		_i2c1_driver_open
  6517 ;;		_read_ring
  6518 ;; This function is called by:
  6519 ;;		Startup code after reset
  6520 ;; This function uses a non-reentrant model
  6521 ;;
  6522                           
  6523                           
  6524                           ;psect for function _main
  6525  0075                     _main:	
  6526  0075                     l4547:	
  6527                           ;incstack = 0
  6528                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6529                           
  6530                           
  6531                           ;main.c: 113:     clkh = 0;
  6532  0075  0020               	movlb	0	; select bank0
  6533  0076  01BF               	clrf	_clkh	;volatile
  6534                           
  6535                           ;main.c: 114:     clkm = 0;
  6536  0077  01BD               	clrf	_clkm	;volatile
  6537                           
  6538                           ;main.c: 115:     seg = 0;
  6539  0078  01BB               	clrf	_seg	;volatile
  6540                           
  6541                           ;main.c: 116:     last5s = 0;
  6542  0079  01B9               	clrf	_last5s	;volatile
  6543                           
  6544                           ;main.c: 117:     last1m = 0;
  6545  007A  01B8               	clrf	_last1m	;volatile
  6546  007B                     l4549:	
  6547                           
  6548                           ;main.c: 118:     configuration_mode = 0;
  6549  007B  10FC               	bcf	_configuration_mode/(0+8),_configuration_mode& (0+7)
  6550  007C                     l4551:	
  6551                           
  6552                           ;main.c: 119:     nreg = 5*30;
  6553  007C  3096               	movlw	150
  6554  007D  00D2               	movwf	??_main
  6555  007E  0852               	movf	??_main,w
  6556  007F  00E2               	movwf	_nreg
  6557  0080                     l4553:	
  6558                           
  6559                           ;main.c: 120:     nreg_pt = 0;
  6560  0080  01B7               	clrf	_nreg_pt
  6561  0081                     l4555:	
  6562                           
  6563                           ;main.c: 121:     nreg_init = 0;
  6564  0081  107C               	bcf	_nreg_init/(0+8),_nreg_init& (0+7)
  6565                           
  6566                           ;main.c: 122:     pmon = 5;
  6567  0082  3005               	movlw	5
  6568  0083  00D2               	movwf	??_main
  6569  0084  0852               	movf	??_main,w
  6570  0085  00E1               	movwf	_pmon
  6571  0086                     l4557:	
  6572                           
  6573                           ;main.c: 123:     running = 1;
  6574  0086  147D               	bsf	_running/(0+8),_running& (0+7)
  6575  0087                     l4559:	
  6576                           
  6577                           ;main.c: 124:     temp = 0;
  6578  0087  01B6               	clrf	_temp
  6579  0088                     l4561:	
  6580                           
  6581                           ;main.c: 125:     lum = 0;
  6582  0088  01B5               	clrf	_lum
  6583  0089                     l4563:	
  6584                           
  6585                           ;main.c: 126:     convertedValue = 0;
  6586  0089  01A7               	clrf	_convertedValue
  6587  008A  01A8               	clrf	_convertedValue+1
  6588  008B                     l4565:	
  6589                           
  6590                           ;main.c: 127:     duty_cycle = 25;
  6591  008B  3019               	movlw	25
  6592  008C  00DF               	movwf	_duty_cycle
  6593  008D  3000               	movlw	0
  6594  008E  00E0               	movwf	_duty_cycle+1
  6595                           
  6596                           ;main.c: 128:     task_schedule = 0;
  6597  008F  01A5               	clrf	_task_schedule
  6598  0090  01A6               	clrf	_task_schedule+1
  6599  0091                     l4567:	
  6600                           
  6601                           ;main.c: 130:     unsigned char data[5] = {0x1,0x2,0x3,0x4,0x5};
  6602  0091  3058               	movlw	low main@F12846
  6603  0092  0086               	movwf	6
  6604  0093  3000               	movlw	high main@F12846
  6605  0094  0087               	movwf	7
  6606  0095  3053               	movlw	low main@data
  6607  0096  0084               	movwf	4
  6608  0097  3000               	movlw	high main@data
  6609  0098  0085               	movwf	5
  6610  0099  3005               	movlw	5
  6611  009A  00D2               	movwf	??_main
  6612  009B                     u2370:	
  6613  009B  0016               	moviw fsr1++
  6614  009C  001A               	movwi fsr0++
  6615  009D  0BD2               	decfsz	??_main,f
  6616  009E  289B               	goto	u2370
  6617  009F                     l4569:	
  6618                           
  6619                           ;main.c: 133:     if(recovery_data[0] == 0xAB) {
  6620  009F  3000               	movlw	(low _recovery_data)& (0+255)
  6621  00A0  3185  25CA  3180   	fcall	___eetoc
  6622  00A3  3AAB               	xorlw	171
  6623  00A4  1D03               	skipz
  6624  00A5  28A7               	goto	u2381
  6625  00A6  28A8               	goto	u2380
  6626  00A7                     u2381:	
  6627  00A7  28CF               	goto	l916
  6628  00A8                     u2380:	
  6629  00A8                     l4571:	
  6630                           
  6631                           ;main.c: 134:         if(recovery_data[5 - 1] == cksum()) {
  6632  00A8  3004               	movlw	(low (_recovery_data+4))& (0+255)
  6633  00A9  3185  25CA  3180   	fcall	___eetoc
  6634  00AC  0020               	movlb	0	; select bank0
  6635  00AD  00D2               	movwf	??_main
  6636  00AE  3185  2506  3180   	fcall	_cksum
  6637  00B1  0020               	movlb	0	; select bank0
  6638  00B2  0652               	xorwf	??_main,w
  6639  00B3  1D03               	skipz
  6640  00B4  28B6               	goto	u2391
  6641  00B5  28B7               	goto	u2390
  6642  00B6                     u2391:	
  6643  00B6  28CF               	goto	l916
  6644  00B7                     u2390:	
  6645  00B7                     l4573:	
  6646                           
  6647                           ;main.c: 135:             clkh = recovery_data[1];
  6648  00B7  3001               	movlw	(low (_recovery_data+1))& (0+255)
  6649  00B8  3185  25CA  3180   	fcall	___eetoc
  6650  00BB  0020               	movlb	0	; select bank0
  6651  00BC  00D2               	movwf	??_main
  6652  00BD  0852               	movf	??_main,w
  6653  00BE  00BF               	movwf	_clkh	;volatile
  6654                           
  6655                           ;main.c: 136:             clkm = recovery_data[2];
  6656  00BF  3002               	movlw	(low (_recovery_data+2))& (0+255)
  6657  00C0  3185  25CA  3180   	fcall	___eetoc
  6658  00C3  0020               	movlb	0	; select bank0
  6659  00C4  00D2               	movwf	??_main
  6660  00C5  0852               	movf	??_main,w
  6661  00C6  00BD               	movwf	_clkm	;volatile
  6662                           
  6663                           ;main.c: 137:             nreg_pt = recovery_data[3];
  6664  00C7  3003               	movlw	(low (_recovery_data+3))& (0+255)
  6665  00C8  3185  25CA  3180   	fcall	___eetoc
  6666  00CB  0020               	movlb	0	; select bank0
  6667  00CC  00D2               	movwf	??_main
  6668  00CD  0852               	movf	??_main,w
  6669  00CE  00B7               	movwf	_nreg_pt
  6670  00CF                     l916:	
  6671                           ;main.c: 139:     }
  6672                           
  6673                           
  6674                           ;main.c: 142:     recovery_data[0] = 0xAB;
  6675  00CF  30AB               	movlw	171
  6676  00D0  0020               	movlb	0	; select bank0
  6677  00D1  00D2               	movwf	??_main
  6678  00D2  0852               	movf	??_main,w
  6679  00D3  00CB               	movwf	___ctoee@data
  6680  00D4  3000               	movlw	(low _recovery_data)& (0+255)
  6681  00D5  3185  25E7  3180   	fcall	___ctoee
  6682                           
  6683                           ;main.c: 143:     cksum_w();
  6684  00D8  3186  2619  3180   	fcall	_cksum_w
  6685  00DB                     l4575:	
  6686                           
  6687                           ;main.c: 145:     SYSTEM_Initialize();
  6688  00DB  3185  25F4  3180   	fcall	_SYSTEM_Initialize
  6689  00DE                     l4577:	
  6690                           
  6691                           ;main.c: 146:     (INTCONbits.GIE = 1);
  6692  00DE  178B               	bsf	11,7	;volatile
  6693  00DF                     l4579:	
  6694                           
  6695                           ;main.c: 147:     (INTCONbits.PEIE = 1);
  6696  00DF  170B               	bsf	11,6	;volatile
  6697  00E0                     l4581:	
  6698                           
  6699                           ;main.c: 149:     TMR1_SetInterruptHandler(h_clock);
  6700  00E0  301E               	movlw	low _h_clock
  6701  00E1  0020               	movlb	0	; select bank0
  6702  00E2  00C0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  6703  00E3  3005               	movlw	high _h_clock
  6704  00E4  00C1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  6705  00E5  3186  2664  3180   	fcall	_TMR1_SetInterruptHandler
  6706  00E8                     l4583:	
  6707                           
  6708                           ;main.c: 151:     i2c1_driver_open();
  6709  00E8  3186  260D  3180   	fcall	_i2c1_driver_open
  6710  00EB                     l4585:	
  6711                           
  6712                           ;main.c: 152:     TRISCbits.TRISC3 = 1;
  6713  00EB  0020               	movlb	0	; select bank0
  6714  00EC  1593               	bsf	19,3	;volatile
  6715  00ED                     l4587:	
  6716                           
  6717                           ;main.c: 153:     TRISCbits.TRISC4 = 1;
  6718  00ED  1613               	bsf	19,4	;volatile
  6719  00EE                     l4589:	
  6720                           
  6721                           ;main.c: 154:     WPUC3 = 1;
  6722  00EE  003E               	movlb	30	; select bank30
  6723  00EF  15CF               	bsf	79,3	;volatile
  6724  00F0                     l4591:	
  6725                           
  6726                           ;main.c: 155:     WPUC4 = 1;
  6727  00F0  164F               	bsf	79,4	;volatile
  6728                           
  6729                           ;main.c: 157:     while (running)
  6730  00F1  2988               	goto	l4639
  6731  00F2                     l919:	
  6732                           
  6733                           ;main.c: 158:     {;main.c: 159:         (INTCONbits.GIE = 0);
  6734  00F2  138B               	bcf	11,7	;volatile
  6735  00F3                     l4593:	
  6736                           
  6737                           ;main.c: 160:         clkh_aux = clkh;
  6738  00F3  0020               	movlb	0	; select bank0
  6739  00F4  083F               	movf	_clkh,w	;volatile
  6740  00F5  00D2               	movwf	??_main
  6741  00F6  0852               	movf	??_main,w
  6742  00F7  00BE               	movwf	_clkh_aux	;volatile
  6743                           
  6744                           ;main.c: 161:         clkm_aux = clkm;
  6745  00F8  083D               	movf	_clkm,w	;volatile
  6746  00F9  00D2               	movwf	??_main
  6747  00FA  0852               	movf	??_main,w
  6748  00FB  00BC               	movwf	_clkm_aux	;volatile
  6749                           
  6750                           ;main.c: 162:         seg_aux = seg;
  6751  00FC  083B               	movf	_seg,w	;volatile
  6752  00FD  00D2               	movwf	??_main
  6753  00FE  0852               	movf	??_main,w
  6754  00FF  00BA               	movwf	_seg_aux	;volatile
  6755                           
  6756                           ;main.c: 163:         last5s_aux = last5s;
  6757  0100  0839               	movf	_last5s,w	;volatile
  6758  0101  00D2               	movwf	??_main
  6759  0102  0852               	movf	??_main,w
  6760  0103  00B4               	movwf	_last5s_aux
  6761                           
  6762                           ;main.c: 164:         last1m_aux = last1m;
  6763  0104  0838               	movf	_last1m,w	;volatile
  6764  0105  00D2               	movwf	??_main
  6765  0106  0852               	movf	??_main,w
  6766  0107  00B3               	movwf	_last1m_aux
  6767  0108                     l4595:	
  6768                           
  6769                           ;main.c: 165:         (INTCONbits.GIE = 1);
  6770  0108  178B               	bsf	11,7	;volatile
  6771  0109                     l4599:	
  6772                           
  6773                           ;main.c: 171:         if(pmon) {
  6774  0109  0861               	movf	_pmon,w
  6775  010A  1903               	btfsc	3,2
  6776  010B  290D               	goto	u2401
  6777  010C  290E               	goto	u2400
  6778  010D                     u2401:	
  6779  010D  296B               	goto	l4629
  6780  010E                     u2400:	
  6781  010E                     l4601:	
  6782                           
  6783                           ;main.c: 172:             if(last5s_aux >= 5) {
  6784  010E  3005               	movlw	5
  6785  010F  0234               	subwf	_last5s_aux,w
  6786  0110  1C03               	skipc
  6787  0111  2913               	goto	u2411
  6788  0112  2914               	goto	u2410
  6789  0113                     u2411:	
  6790  0113  296B               	goto	l4629
  6791  0114                     u2410:	
  6792  0114                     l4603:	
  6793                           
  6794                           ;main.c: 175:                 __nop();
  6795  0114  0000               	nop
  6796  0115                     l4605:	
  6797                           
  6798                           ;main.c: 177:                 temp++;
  6799  0115  3001               	movlw	1
  6800  0116  0020               	movlb	0	; select bank0
  6801  0117  00D2               	movwf	??_main
  6802  0118  0852               	movf	??_main,w
  6803  0119  07B6               	addwf	_temp,f
  6804  011A                     l4607:	
  6805                           
  6806                           ;main.c: 178:                 __nop();
  6807  011A  0000               	nop
  6808  011B                     l4609:	
  6809                           
  6810                           ;main.c: 183:                 Push_ring_buffer(data);
  6811  011B  3053               	movlw	(low (main@data| 0))& (0+255)
  6812  011C  3181  218E  3180   	fcall	_Push_ring_buffer
  6813  011F                     l4611:	
  6814                           
  6815                           ;main.c: 186:                 if (temp != read_ring(0, 3) || lum != read_ring(0, 4)) {
  6816  011F  3003               	movlw	3
  6817  0120  0020               	movlb	0	; select bank0
  6818  0121  00D2               	movwf	??_main
  6819  0122  0852               	movf	??_main,w
  6820  0123  00C4               	movwf	read_ring@subindex
  6821  0124  3000               	movlw	0
  6822  0125  3183  2353  3180   	fcall	_read_ring
  6823  0128  0020               	movlb	0	; select bank0
  6824  0129  0636               	xorwf	_temp,w
  6825  012A  1D03               	skipz
  6826  012B  292D               	goto	u2421
  6827  012C  292E               	goto	u2420
  6828  012D                     u2421:	
  6829  012D  293C               	goto	l4615
  6830  012E                     u2420:	
  6831  012E                     l4613:	
  6832  012E  3004               	movlw	4
  6833  012F  00D2               	movwf	??_main
  6834  0130  0852               	movf	??_main,w
  6835  0131  00C4               	movwf	read_ring@subindex
  6836  0132  3000               	movlw	0
  6837  0133  3183  2353  3180   	fcall	_read_ring
  6838  0136  0020               	movlb	0	; select bank0
  6839  0137  0635               	xorwf	_lum,w
  6840  0138  1903               	skipnz
  6841  0139  293B               	goto	u2431
  6842  013A  293C               	goto	u2430
  6843  013B                     u2431:	
  6844  013B  2967               	goto	l4623
  6845  013C                     u2430:	
  6846  013C                     l4615:	
  6847                           
  6848                           ;main.c: 190:                     ring_byte[0] = clkh_aux;
  6849  013C  083E               	movf	_clkh_aux,w	;volatile
  6850  013D  00D2               	movwf	??_main
  6851  013E  0852               	movf	??_main,w
  6852  013F  00A0               	movwf	_ring_byte
  6853                           
  6854                           ;main.c: 191:                     ring_byte[1] = clkm_aux;
  6855  0140  083C               	movf	_clkm_aux,w	;volatile
  6856  0141  00D2               	movwf	??_main
  6857  0142  0852               	movf	??_main,w
  6858  0143  00A1               	movwf	_ring_byte+1
  6859                           
  6860                           ;main.c: 192:                     ring_byte[2] = seg_aux;
  6861  0144  083A               	movf	_seg_aux,w	;volatile
  6862  0145  00D2               	movwf	??_main
  6863  0146  0852               	movf	??_main,w
  6864  0147  00A2               	movwf	_ring_byte+2
  6865                           
  6866                           ;main.c: 193:                     ring_byte[3] = temp;
  6867  0148  0836               	movf	_temp,w
  6868  0149  00D2               	movwf	??_main
  6869  014A  0852               	movf	??_main,w
  6870  014B  00A3               	movwf	_ring_byte+3
  6871                           
  6872                           ;main.c: 194:                     ring_byte[4] = lum;
  6873  014C  0835               	movf	_lum,w
  6874  014D  00D2               	movwf	??_main
  6875  014E  0852               	movf	??_main,w
  6876  014F  00A4               	movwf	_ring_byte+4
  6877  0150                     l4617:	
  6878                           
  6879                           ;main.c: 196:                     DATAEE_WriteByte(buffer, 0xAA);
  6880  0150  305A               	movlw	90
  6881  0151  00C0               	movwf	DATAEE_WriteByte@bAdd
  6882  0152  3023               	movlw	35
  6883  0153  00C1               	movwf	DATAEE_WriteByte@bAdd+1
  6884  0154  30AA               	movlw	170
  6885  0155  00D2               	movwf	??_main
  6886  0156  0852               	movf	??_main,w
  6887  0157  00C2               	movwf	DATAEE_WriteByte@bData
  6888  0158  3184  2469  3180   	fcall	_DATAEE_WriteByte
  6889  015B                     l4619:	
  6890                           
  6891                           ;main.c: 198:                     recovery_data[3] = nreg_pt;
  6892  015B  0020               	movlb	0	; select bank0
  6893  015C  0837               	movf	_nreg_pt,w
  6894  015D  00D2               	movwf	??_main
  6895  015E  0852               	movf	??_main,w
  6896  015F  00CB               	movwf	___ctoee@data
  6897  0160  3003               	movlw	(low (_recovery_data+3))& (0+255)
  6898  0161  3185  25E7  3180   	fcall	___ctoee
  6899  0164                     l4621:	
  6900                           
  6901                           ;main.c: 199:                     cksum_w();
  6902  0164  3186  2619  3180   	fcall	_cksum_w
  6903  0167                     l4623:	
  6904                           
  6905                           ;main.c: 202:                 (INTCONbits.GIE = 0);
  6906  0167  138B               	bcf	11,7	;volatile
  6907  0168                     l4625:	
  6908                           
  6909                           ;main.c: 203:                 last5s_aux = 0;
  6910  0168  0020               	movlb	0	; select bank0
  6911  0169  01B4               	clrf	_last5s_aux
  6912  016A                     l4627:	
  6913                           
  6914                           ;main.c: 204:                 (INTCONbits.GIE = 1);
  6915  016A  178B               	bsf	11,7	;volatile
  6916  016B                     l4629:	
  6917                           
  6918                           ;main.c: 209:         if (last1m >= 1) {
  6919  016B  0838               	movf	_last1m,w	;volatile
  6920  016C  1903               	btfsc	3,2
  6921  016D  296F               	goto	u2441
  6922  016E  2970               	goto	u2440
  6923  016F                     u2441:	
  6924  016F  2988               	goto	l4639
  6925  0170                     u2440:	
  6926  0170                     l4631:	
  6927                           
  6928                           ;main.c: 212:             recovery_data[1] = clkh_aux;
  6929  0170  083E               	movf	_clkh_aux,w	;volatile
  6930  0171  00D2               	movwf	??_main
  6931  0172  0852               	movf	??_main,w
  6932  0173  00CB               	movwf	___ctoee@data
  6933  0174  3001               	movlw	(low (_recovery_data+1))& (0+255)
  6934  0175  3185  25E7  3180   	fcall	___ctoee
  6935                           
  6936                           ;main.c: 213:             recovery_data[2] = clkm_aux;
  6937  0178  0020               	movlb	0	; select bank0
  6938  0179  083C               	movf	_clkm_aux,w	;volatile
  6939  017A  00D2               	movwf	??_main
  6940  017B  0852               	movf	??_main,w
  6941  017C  00CB               	movwf	___ctoee@data
  6942  017D  3002               	movlw	(low (_recovery_data+2))& (0+255)
  6943  017E  3185  25E7  3180   	fcall	___ctoee
  6944                           
  6945                           ;main.c: 214:             cksum_w();
  6946  0181  3186  2619  3180   	fcall	_cksum_w
  6947  0184                     l4633:	
  6948                           
  6949                           ;main.c: 216:             (INTCONbits.GIE = 0);
  6950  0184  138B               	bcf	11,7	;volatile
  6951  0185                     l4635:	
  6952                           
  6953                           ;main.c: 217:             last1m = 0;
  6954  0185  0020               	movlb	0	; select bank0
  6955  0186  01B8               	clrf	_last1m	;volatile
  6956  0187                     l4637:	
  6957                           
  6958                           ;main.c: 218:             (INTCONbits.GIE = 1);
  6959  0187  178B               	bsf	11,7	;volatile
  6960  0188                     l4639:	
  6961                           
  6962                           ;main.c: 157:     while (running)
  6963  0188  187D               	btfsc	_running/(0+8),_running& (0+7)
  6964  0189  298B               	goto	u2451
  6965  018A  298C               	goto	u2450
  6966  018B                     u2451:	
  6967  018B  28F2               	goto	l919
  6968  018C                     u2450:	
  6969  018C                     l928:	
  6970  018C  3180  2837         	ljmp	start
  6971  018E                     __end_of_main:	
  6972                           
  6973                           	psect	text1
  6974  0353                     __ptext1:	
  6975 ;; *************** function _read_ring *****************
  6976 ;; Defined at:
  6977 ;;		line 239 in file "main.c"
  6978 ;; Parameters:    Size  Location     Type
  6979 ;;  index           1    wreg     unsigned char 
  6980 ;;  subindex        1    4[BANK0 ] unsigned char 
  6981 ;; Auto vars:     Size  Location     Type
  6982 ;;  index           1    8[BANK0 ] unsigned char 
  6983 ;;  absindex        1    9[BANK0 ] unsigned char 
  6984 ;;  i               1    7[BANK0 ] unsigned char 
  6985 ;; Return value:  Size  Location     Type
  6986 ;;                  1    wreg      unsigned char 
  6987 ;; Registers used:
  6988 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6989 ;; Tracked objects:
  6990 ;;		On entry : 0/0
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6994 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6995 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6996 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6997 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6998 ;;Total ram usage:        6 bytes
  6999 ;; Hardware stack levels used:    1
  7000 ;; Hardware stack levels required when called:    7
  7001 ;; This function calls:
  7002 ;;		___bmul
  7003 ;; This function is called by:
  7004 ;;		_main
  7005 ;; This function uses a non-reentrant model
  7006 ;;
  7007                           
  7008                           
  7009                           ;psect for function _read_ring
  7010  0353                     _read_ring:	
  7011                           
  7012                           ;incstack = 0
  7013                           ; Regs used in _read_ring: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7014                           ;read_ring@index stored from wreg
  7015  0353  0020               	movlb	0	; select bank0
  7016  0354  00C8               	movwf	read_ring@index
  7017  0355                     l3625:	
  7018  0355                     l3627:	
  7019                           
  7020                           ;main.c: 244:     if(index <= 30 && nreg_init) {
  7021  0355  301F               	movlw	31
  7022  0356  0248               	subwf	read_ring@index,w
  7023  0357  1803               	skipnc
  7024  0358  2B5A               	goto	u1581
  7025  0359  2B5B               	goto	u1580
  7026  035A                     u1581:	
  7027  035A  2B7F               	goto	l3639
  7028  035B                     u1580:	
  7029  035B                     l3629:	
  7030  035B  1C7C               	btfss	_nreg_init/(0+8),_nreg_init& (0+7)
  7031  035C  2B5E               	goto	u1591
  7032  035D  2B5F               	goto	u1590
  7033  035E                     u1591:	
  7034  035E  2B7F               	goto	l3639
  7035  035F                     u1590:	
  7036  035F                     l3631:	
  7037                           
  7038                           ;main.c: 245:         absindex = 5 * index + subindex;
  7039  035F  3005               	movlw	5
  7040  0360  00C5               	movwf	??_read_ring
  7041  0361  0845               	movf	??_read_ring,w
  7042  0362  00C0               	movwf	___bmul@multiplicand
  7043  0363  0848               	movf	read_ring@index,w
  7044  0364  3185  2535  3183   	fcall	___bmul
  7045  0367  0020               	movlb	0	; select bank0
  7046  0368  0744               	addwf	read_ring@subindex,w
  7047  0369  00C6               	movwf	??_read_ring+1
  7048  036A  0846               	movf	??_read_ring+1,w
  7049  036B  00C9               	movwf	read_ring@absindex
  7050  036C                     l3633:	
  7051                           
  7052                           ;main.c: 246:         if(absindex <= nreg_pt)
  7053  036C  0849               	movf	read_ring@absindex,w
  7054  036D  0237               	subwf	_nreg_pt,w
  7055  036E  1C03               	skipc
  7056  036F  2B71               	goto	u1601
  7057  0370  2B72               	goto	u1600
  7058  0371                     u1601:	
  7059  0371  2B78               	goto	l3637
  7060  0372                     u1600:	
  7061  0372                     l3635:	
  7062                           
  7063                           ;main.c: 247:             i = nreg_pt - absindex;
  7064  0372  0849               	movf	read_ring@absindex,w
  7065  0373  0237               	subwf	_nreg_pt,w
  7066  0374  00C5               	movwf	??_read_ring
  7067  0375  0845               	movf	??_read_ring,w
  7068  0376  00C7               	movwf	read_ring@i
  7069  0377  2B81               	goto	l3643
  7070  0378                     l3637:	
  7071                           
  7072                           ;main.c: 249:             i = nreg - (nreg_pt - absindex);
  7073  0378  0837               	movf	_nreg_pt,w
  7074  0379  0262               	subwf	_nreg,w
  7075  037A  0749               	addwf	read_ring@absindex,w
  7076  037B  00C5               	movwf	??_read_ring
  7077  037C  0845               	movf	??_read_ring,w
  7078  037D  00C7               	movwf	read_ring@i
  7079  037E  2B81               	goto	l3643
  7080  037F                     l3639:	
  7081                           
  7082                           ;main.c: 252:         return 0;
  7083  037F  3000               	movlw	0
  7084  0380  2B88               	goto	l943
  7085  0381                     l3643:	
  7086                           
  7087                           ;main.c: 254:     return buffer[i];
  7088  0381  0847               	movf	read_ring@i,w
  7089  0382  3E5A               	addlw	90
  7090  0383  0086               	movwf	6
  7091  0384  0187               	clrf	7
  7092  0385  3023               	movlw	35
  7093  0386  3D87               	addwfc	7,f
  7094  0387  0801               	movf	1,w
  7095  0388                     l943:	
  7096  0388  0008               	return
  7097  0389                     __end_of_read_ring:	
  7098                           
  7099                           	psect	text2
  7100  0535                     __ptext2:	
  7101 ;; *************** function ___bmul *****************
  7102 ;; Defined at:
  7103 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul8.c"
  7104 ;; Parameters:    Size  Location     Type
  7105 ;;  multiplier      1    wreg     unsigned char 
  7106 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  7107 ;; Auto vars:     Size  Location     Type
  7108 ;;  multiplier      1    3[BANK0 ] unsigned char 
  7109 ;;  product         1    2[BANK0 ] unsigned char 
  7110 ;; Return value:  Size  Location     Type
  7111 ;;                  1    wreg      unsigned char 
  7112 ;; Registers used:
  7113 ;;		wreg, status,2, status,0
  7114 ;; Tracked objects:
  7115 ;;		On entry : 0/0
  7116 ;;		On exit  : 0/0
  7117 ;;		Unchanged: 0/0
  7118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7119 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7120 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7121 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7122 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7123 ;;Total ram usage:        4 bytes
  7124 ;; Hardware stack levels used:    1
  7125 ;; Hardware stack levels required when called:    6
  7126 ;; This function calls:
  7127 ;;		Nothing
  7128 ;; This function is called by:
  7129 ;;		_read_ring
  7130 ;; This function uses a non-reentrant model
  7131 ;;
  7132                           
  7133                           
  7134                           ;psect for function ___bmul
  7135  0535                     ___bmul:	
  7136                           
  7137                           ;incstack = 0
  7138                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7139                           ;___bmul@multiplier stored from wreg
  7140  0535  0020               	movlb	0	; select bank0
  7141  0536  00C3               	movwf	___bmul@multiplier
  7142  0537                     l3487:	
  7143  0537  01C2               	clrf	___bmul@product
  7144  0538                     l3489:	
  7145  0538  1C43               	btfss	___bmul@multiplier,0
  7146  0539  2D3B               	goto	u1461
  7147  053A  2D3C               	goto	u1460
  7148  053B                     u1461:	
  7149  053B  2D40               	goto	l3493
  7150  053C                     u1460:	
  7151  053C                     l3491:	
  7152  053C  0840               	movf	___bmul@multiplicand,w
  7153  053D  00C1               	movwf	??___bmul
  7154  053E  0841               	movf	??___bmul,w
  7155  053F  07C2               	addwf	___bmul@product,f
  7156  0540                     l3493:	
  7157  0540  1003               	clrc
  7158  0541  0DC0               	rlf	___bmul@multiplicand,f
  7159  0542                     l3495:	
  7160  0542  1003               	clrc
  7161  0543  0CC3               	rrf	___bmul@multiplier,f
  7162  0544  0843               	movf	___bmul@multiplier,w
  7163  0545  1D03               	btfss	3,2
  7164  0546  2D48               	goto	u1471
  7165  0547  2D49               	goto	u1470
  7166  0548                     u1471:	
  7167  0548  2D38               	goto	l3489
  7168  0549                     u1470:	
  7169  0549                     l3497:	
  7170  0549  0842               	movf	___bmul@product,w
  7171  054A                     l1205:	
  7172  054A  0008               	return
  7173  054B                     __end_of___bmul:	
  7174                           
  7175                           	psect	text3
  7176  060D                     __ptext3:	
  7177 ;; *************** function _i2c1_driver_open *****************
  7178 ;; Defined at:
  7179 ;;		line 84 in file "mcc_generated_files/i2c1_driver.c"
  7180 ;; Parameters:    Size  Location     Type
  7181 ;;		None
  7182 ;; Auto vars:     Size  Location     Type
  7183 ;;		None
  7184 ;; Return value:  Size  Location     Type
  7185 ;;		None               void
  7186 ;; Registers used:
  7187 ;;		wreg, status,2
  7188 ;; Tracked objects:
  7189 ;;		On entry : 0/0
  7190 ;;		On exit  : 0/0
  7191 ;;		Unchanged: 0/0
  7192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7197 ;;Total ram usage:        0 bytes
  7198 ;; Hardware stack levels used:    1
  7199 ;; Hardware stack levels required when called:    6
  7200 ;; This function calls:
  7201 ;;		Nothing
  7202 ;; This function is called by:
  7203 ;;		_main
  7204 ;;		_i2c_open
  7205 ;; This function uses a non-reentrant model
  7206 ;;
  7207                           
  7208                           
  7209                           ;psect for function _i2c1_driver_open
  7210  060D                     _i2c1_driver_open:	
  7211  060D                     l4359:	
  7212                           ;incstack = 0
  7213                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
  7214                           
  7215  060D  0023               	movlb	3	; select bank3
  7216  060E  1A90               	btfsc	16,5	;volatile
  7217  060F  2E11               	goto	u2071
  7218  0610  2E12               	goto	u2070
  7219  0611                     u2071:	
  7220  0611  2E18               	goto	l651
  7221  0612                     u2070:	
  7222  0612                     l4361:	
  7223  0612  018F               	clrf	15	;volatile
  7224  0613                     l4363:	
  7225  0613  3028               	movlw	40
  7226  0614  0090               	movwf	16	;volatile
  7227  0615                     l4365:	
  7228  0615  0191               	clrf	17	;volatile
  7229  0616  3003               	movlw	3
  7230  0617  008D               	movwf	13	;volatile
  7231  0618                     l651:	
  7232  0618  0008               	return
  7233  0619                     __end_of_i2c1_driver_open:	
  7234                           
  7235                           	psect	text4
  7236  0619                     __ptext4:	
  7237 ;; *************** function _cksum_w *****************
  7238 ;; Defined at:
  7239 ;;		line 225 in file "main.c"
  7240 ;; Parameters:    Size  Location     Type
  7241 ;;		None
  7242 ;; Auto vars:     Size  Location     Type
  7243 ;;		None
  7244 ;; Return value:  Size  Location     Type
  7245 ;;                  1    wreg      void 
  7246 ;; Registers used:
  7247 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7248 ;; Tracked objects:
  7249 ;;		On entry : 0/0
  7250 ;;		On exit  : 0/0
  7251 ;;		Unchanged: 0/0
  7252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7255 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7256 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7257 ;;Total ram usage:        1 bytes
  7258 ;; Hardware stack levels used:    1
  7259 ;; Hardware stack levels required when called:    9
  7260 ;; This function calls:
  7261 ;;		___ctoee
  7262 ;;		_cksum
  7263 ;; This function is called by:
  7264 ;;		_main
  7265 ;; This function uses a non-reentrant model
  7266 ;;
  7267                           
  7268                           
  7269                           ;psect for function _cksum_w
  7270  0619                     _cksum_w:	
  7271  0619                     l3623:	
  7272                           ;incstack = 0
  7273                           ; Regs used in _cksum_w: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7274                           
  7275                           
  7276                           ;main.c: 227:     recovery_data[5 - 1] = cksum();
  7277  0619  3185  2506  3186   	fcall	_cksum
  7278  061C  0020               	movlb	0	; select bank0
  7279  061D  00CE               	movwf	??_cksum_w
  7280  061E  084E               	movf	??_cksum_w,w
  7281  061F  00CB               	movwf	___ctoee@data
  7282  0620  3004               	movlw	(low (_recovery_data+4))& (0+255)
  7283  0621  3185  25E7  3186   	fcall	___ctoee
  7284  0624                     l931:	
  7285  0624  0008               	return
  7286  0625                     __end_of_cksum_w:	
  7287                           
  7288                           	psect	text5
  7289  0506                     __ptext5:	
  7290 ;; *************** function _cksum *****************
  7291 ;; Defined at:
  7292 ;;		line 230 in file "main.c"
  7293 ;; Parameters:    Size  Location     Type
  7294 ;;		None
  7295 ;; Auto vars:     Size  Location     Type
  7296 ;;  i               1   10[BANK0 ] unsigned char 
  7297 ;;  res             1    9[BANK0 ] unsigned char 
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  1    wreg      unsigned char 
  7300 ;; Registers used:
  7301 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/0
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7308 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7309 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7310 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7311 ;;Total ram usage:        3 bytes
  7312 ;; Hardware stack levels used:    1
  7313 ;; Hardware stack levels required when called:    8
  7314 ;; This function calls:
  7315 ;;		___eetoc
  7316 ;; This function is called by:
  7317 ;;		_main
  7318 ;;		_cksum_w
  7319 ;; This function uses a non-reentrant model
  7320 ;;
  7321                           
  7322                           
  7323                           ;psect for function _cksum
  7324  0506                     _cksum:	
  7325  0506                     l3467:	
  7326                           ;incstack = 0
  7327                           ; Regs used in _cksum: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7328                           
  7329                           
  7330                           ;main.c: 232:     unsigned char res = 0;
  7331  0506  0020               	movlb	0	; select bank0
  7332  0507  01C9               	clrf	cksum@res
  7333                           
  7334                           ;main.c: 233:     for(unsigned char i = 0; i < 5; i ++) {
  7335  0508  01CA               	clrf	cksum@i
  7336  0509                     l3473:	
  7337                           
  7338                           ;main.c: 234:         res += recovery_data[i];
  7339  0509  084A               	movf	cksum@i,w
  7340  050A  3E00               	addlw	low _recovery_data
  7341  050B  3185  25CA  3185   	fcall	___eetoc
  7342  050E  0020               	movlb	0	; select bank0
  7343  050F  00C8               	movwf	??_cksum
  7344  0510  0848               	movf	??_cksum,w
  7345  0511  07C9               	addwf	cksum@res,f
  7346  0512                     l3475:	
  7347                           
  7348                           ;main.c: 235:     }
  7349  0512  3001               	movlw	1
  7350  0513  00C8               	movwf	??_cksum
  7351  0514  0848               	movf	??_cksum,w
  7352  0515  07CA               	addwf	cksum@i,f
  7353  0516                     l3477:	
  7354  0516  3005               	movlw	5
  7355  0517  024A               	subwf	cksum@i,w
  7356  0518  1C03               	skipc
  7357  0519  2D1B               	goto	u1451
  7358  051A  2D1C               	goto	u1450
  7359  051B                     u1451:	
  7360  051B  2D09               	goto	l3473
  7361  051C                     u1450:	
  7362  051C                     l3479:	
  7363                           
  7364                           ;main.c: 236:     return res;
  7365  051C  0849               	movf	cksum@res,w
  7366  051D                     l936:	
  7367  051D  0008               	return
  7368  051E                     __end_of_cksum:	
  7369                           
  7370                           	psect	text6
  7371  05CA                     __ptext6:	
  7372 ;; *************** function ___eetoc *****************
  7373 ;; Defined at:
  7374 ;;		line 104 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c"
  7375 ;; Parameters:    Size  Location     Type
  7376 ;;  addr            1    wreg     PTR eeprom void 
  7377 ;;		 -> recovery_data(5), 
  7378 ;; Auto vars:     Size  Location     Type
  7379 ;;  addr            1    6[BANK0 ] PTR eeprom void 
  7380 ;;		 -> recovery_data(5), 
  7381 ;;  data            1    7[BANK0 ] unsigned char 
  7382 ;; Return value:  Size  Location     Type
  7383 ;;                  1    wreg      unsigned char 
  7384 ;; Registers used:
  7385 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7386 ;; Tracked objects:
  7387 ;;		On entry : 0/0
  7388 ;;		On exit  : 0/0
  7389 ;;		Unchanged: 0/0
  7390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7392 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7393 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7394 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7395 ;;Total ram usage:        3 bytes
  7396 ;; Hardware stack levels used:    1
  7397 ;; Hardware stack levels required when called:    7
  7398 ;; This function calls:
  7399 ;;		___eecpymem
  7400 ;; This function is called by:
  7401 ;;		_main
  7402 ;;		_cksum
  7403 ;; This function uses a non-reentrant model
  7404 ;;
  7405                           
  7406                           
  7407                           ;psect for function ___eetoc
  7408  05CA                     ___eetoc:	
  7409                           
  7410                           ;incstack = 0
  7411                           ; Regs used in ___eetoc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7412                           ;___eetoc@addr stored from wreg
  7413  05CA  0020               	movlb	0	; select bank0
  7414  05CB  00C6               	movwf	___eetoc@addr
  7415  05CC                     l3161:	
  7416                           
  7417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 104: __eetoc(__eeprom void *ad
      +                          dr);/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 105: {;/opt/microchip/xc8/v
      +                          2.10/pic/sources/c99/pic/__eeprom.c: 106:  unsigned char data;;/opt/microchip/xc8/v2.10/
      +                          pic/sources/c99/pic/__eeprom.c: 107:  __eecpymem((unsigned char *) &data,addr,1);
  7418  05CC  0846               	movf	___eetoc@addr,w
  7419  05CD  00C5               	movwf	??___eetoc
  7420  05CE  0845               	movf	??___eetoc,w
  7421  05CF  00C0               	movwf	___eecpymem@from
  7422  05D0  01C1               	clrf	___eecpymem@size
  7423  05D1  0AC1               	incf	___eecpymem@size,f
  7424  05D2  3047               	movlw	(low (___eetoc@data| 0))& (0+255)
  7425  05D3  3183  23BD  3185   	fcall	___eecpymem
  7426  05D6                     l3163:	
  7427                           
  7428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 108:  return data;
  7429  05D6  0020               	movlb	0	; select bank0
  7430  05D7  0847               	movf	___eetoc@data,w
  7431  05D8                     l1072:	
  7432  05D8  0008               	return
  7433  05D9                     __end_of___eetoc:	
  7434                           
  7435                           	psect	text7
  7436  03BD                     __ptext7:	
  7437 ;; *************** function ___eecpymem *****************
  7438 ;; Defined at:
  7439 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c"
  7440 ;; Parameters:    Size  Location     Type
  7441 ;;  to              1    wreg     PTR volatile unsigned ch
  7442 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
  7443 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  7444 ;;  from            1    0[BANK0 ] PTR eeprom unsigned char
  7445 ;;		 -> recovery_data(5), 
  7446 ;;  size            1    1[BANK0 ] unsigned char 
  7447 ;; Auto vars:     Size  Location     Type
  7448 ;;  to              1    4[BANK0 ] PTR volatile unsigned ch
  7449 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
  7450 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  7451 ;;  cp              1    3[BANK0 ] PTR volatile unsigned ch
  7452 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
  7453 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  7454 ;; Return value:  Size  Location     Type
  7455 ;;                  1    wreg      void 
  7456 ;; Registers used:
  7457 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7458 ;; Tracked objects:
  7459 ;;		On entry : 0/0
  7460 ;;		On exit  : 0/0
  7461 ;;		Unchanged: 0/0
  7462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7463 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7464 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7465 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7466 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7467 ;;Total ram usage:        5 bytes
  7468 ;; Hardware stack levels used:    1
  7469 ;; Hardware stack levels required when called:    6
  7470 ;; This function calls:
  7471 ;;		Nothing
  7472 ;; This function is called by:
  7473 ;;		___eetoc
  7474 ;; This function uses a non-reentrant model
  7475 ;;
  7476                           
  7477                           
  7478                           ;psect for function ___eecpymem
  7479  03BD                     ___eecpymem:	
  7480                           
  7481                           ;incstack = 0
  7482                           ; Regs used in ___eecpymem: [wreg+fsr1l+fsr1h+status,2+status,0]
  7483                           ;___eecpymem@to stored from wreg
  7484  03BD  0020               	movlb	0	; select bank0
  7485  03BE  00C4               	movwf	___eecpymem@to
  7486  03BF                     l2975:	
  7487                           
  7488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 6: __eecpymem(volatile unsigne
      +                          d char *to, __eeprom unsigned char * from, unsigned char size);/opt/microchip/xc8/v2.10/
      +                          pic/sources/c99/pic/__eeprom.c: 6: };/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eepr
      +                          om.c: 6: ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 6: ;/opt/microchip/xc
      +                          8/v2.10/pic/sources/c99/pic/__eeprom.c: 6: };/opt/microchip/xc8/v2.10/pic/sources/c99/pi
      +                          c/__eeprom.c: 7: {;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 7: 
  7489  03BF  0844               	movf	___eecpymem@to,w
  7490  03C0  00C2               	movwf	??___eecpymem
  7491  03C1  0842               	movf	??___eecpymem,w
  7492  03C2  00C3               	movwf	___eecpymem@cp
  7493  03C3                     l1046:	
  7494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 24:  };/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/pic/__eeprom.c: 24: __fltoee(__eeprom void *addr, double data)
  7495                           
  7496                           
  7497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 22:  while (NVMCON1bits.WR) {;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 22: 
  7498  03C3  0030               	movlb	16	; select bank16
  7499  03C4  189E               	btfsc	30,1	;volsfr
  7500  03C5  2BC7               	goto	u1211
  7501  03C6  2BC8               	goto	u1210
  7502  03C7                     u1211:	
  7503  03C7  2BC3               	goto	l1046
  7504  03C8                     u1210:	
  7505  03C8                     l1048:	
  7506                           
  7507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 25:  NVMCON1bits.NVMREGS = 1;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 25: {
  7508  03C8  171E               	bsf	30,6	;volsfr
  7509  03C9                     l2977:	
  7510                           
  7511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 26:  NVMADRL = (unsigned char)
      +                           from;;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 26:  __memcpyee(addr,(un
      +                          signed char *) &data,4);
  7512  03C9  0020               	movlb	0	; select bank0
  7513  03CA  0840               	movf	___eecpymem@from,w
  7514  03CB  0030               	movlb	16	; select bank16
  7515  03CC  009A               	movwf	26	;volatile
  7516                           
  7517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 27:  NVMADRH = 0x70;;/opt/micr
      +                          ochip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 27:  return data;
  7518  03CD  3070               	movlw	112
  7519  03CE  009B               	movwf	27	;volatile
  7520                           
  7521                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 28:  while (size--) {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 28: }
  7522  03CF  2BE3               	goto	l2985
  7523  03D0                     l1050:	
  7524                           
  7525                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 29:   NVMCON1bits.RD = 1;
  7526  03D0  0030               	movlb	16	; select bank16
  7527  03D1  141E               	bsf	30,0	;volsfr
  7528  03D2                     l2979:	
  7529                           
  7530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 30:   *cp++ = NVMDATL;
  7531  03D2  081C               	movf	28,w	;volatile
  7532  03D3  0020               	movlb	0	; select bank0
  7533  03D4  00C2               	movwf	??___eecpymem
  7534  03D5  0843               	movf	___eecpymem@cp,w
  7535  03D6  0086               	movwf	6
  7536  03D7  0187               	clrf	7
  7537  03D8  0842               	movf	??___eecpymem,w
  7538  03D9  0081               	movwf	1
  7539  03DA                     l2981:	
  7540  03DA  3001               	movlw	1
  7541  03DB  00C2               	movwf	??___eecpymem
  7542  03DC  0842               	movf	??___eecpymem,w
  7543  03DD  07C3               	addwf	___eecpymem@cp,f
  7544  03DE                     l2983:	
  7545                           
  7546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 31:   NVMADRL++;
  7547  03DE  3001               	movlw	1
  7548  03DF  00C2               	movwf	??___eecpymem
  7549  03E0  0842               	movf	??___eecpymem,w
  7550  03E1  0030               	movlb	16	; select bank16
  7551  03E2  079A               	addwf	26,f	;volatile
  7552  03E3                     l2985:	
  7553                           
  7554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 28:  while (size--) {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 28: }
  7555  03E3  3001               	movlw	1
  7556  03E4  0020               	movlb	0	; select bank0
  7557  03E5  02C1               	subwf	___eecpymem@size,f
  7558  03E6  0A41               	incf	___eecpymem@size,w
  7559  03E7  1D03               	btfss	3,2
  7560  03E8  2BEA               	goto	u1221
  7561  03E9  2BEB               	goto	u1220
  7562  03EA                     u1221:	
  7563  03EA  2BD0               	goto	l1050
  7564  03EB                     u1220:	
  7565  03EB                     l1052:	
  7566  03EB  0008               	return
  7567  03EC                     __end_of___eecpymem:	
  7568                           
  7569                           	psect	text8
  7570  05E7                     __ptext8:	
  7571 ;; *************** function ___ctoee *****************
  7572 ;; Defined at:
  7573 ;;		line 150 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c"
  7574 ;; Parameters:    Size  Location     Type
  7575 ;;  addr            1    wreg     PTR eeprom void 
  7576 ;;		 -> recovery_data(5), 
  7577 ;;  data            1   11[BANK0 ] unsigned char 
  7578 ;; Auto vars:     Size  Location     Type
  7579 ;;  addr            1   13[BANK0 ] PTR eeprom void 
  7580 ;;		 -> recovery_data(5), 
  7581 ;; Return value:  Size  Location     Type
  7582 ;;                  1    wreg      unsigned char 
  7583 ;; Registers used:
  7584 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7585 ;; Tracked objects:
  7586 ;;		On entry : 0/0
  7587 ;;		On exit  : 0/0
  7588 ;;		Unchanged: 0/0
  7589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7590 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7591 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7592 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7593 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7594 ;;Total ram usage:        3 bytes
  7595 ;; Hardware stack levels used:    1
  7596 ;; Hardware stack levels required when called:    7
  7597 ;; This function calls:
  7598 ;;		___memcpyee
  7599 ;; This function is called by:
  7600 ;;		_main
  7601 ;;		_cksum_w
  7602 ;; This function uses a non-reentrant model
  7603 ;;
  7604                           
  7605                           
  7606                           ;psect for function ___ctoee
  7607  05E7                     ___ctoee:	
  7608                           
  7609                           ;incstack = 0
  7610                           ; Regs used in ___ctoee: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7611                           ;___ctoee@addr stored from wreg
  7612  05E7  0020               	movlb	0	; select bank0
  7613  05E8  00CD               	movwf	___ctoee@addr
  7614  05E9                     l3483:	
  7615  05E9  304B               	movlw	(low (___ctoee@data| 0))& (0+255)
  7616  05EA  00CC               	movwf	??___ctoee
  7617  05EB  084C               	movf	??___ctoee,w
  7618  05EC  00C0               	movwf	___memcpyee@from
  7619  05ED  01C1               	clrf	___memcpyee@size
  7620  05EE  0AC1               	incf	___memcpyee@size,f
  7621  05EF  084D               	movf	___ctoee@addr,w
  7622  05F0  3182  2239  3185   	fcall	___memcpyee
  7623  05F3                     l1087:	
  7624  05F3  0008               	return
  7625  05F4                     __end_of___ctoee:	
  7626                           
  7627                           	psect	text9
  7628  0239                     __ptext9:	
  7629 ;; *************** function ___memcpyee *****************
  7630 ;; Defined at:
  7631 ;;		line 39 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;  to              1    wreg     PTR eeprom unsigned char
  7634 ;;		 -> recovery_data(5), 
  7635 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  7636 ;;		 -> __fltoee@data(4), __fttoee@data(4), __otoee@data(8), __ltoee@data(4), 
  7637 ;;		 -> __mtoee@data(3), __itoee@data(2), __ctoee@data(1), 
  7638 ;;  size            1    1[BANK0 ] unsigned char 
  7639 ;; Auto vars:     Size  Location     Type
  7640 ;;  to              1    4[BANK0 ] PTR eeprom unsigned char
  7641 ;;		 -> recovery_data(5), 
  7642 ;;  ptr             1    3[BANK0 ] PTR const unsigned char 
  7643 ;;		 -> __fltoee@data(4), __fttoee@data(4), __otoee@data(8), __ltoee@data(4), 
  7644 ;;		 -> __mtoee@data(3), __itoee@data(2), __ctoee@data(1), 
  7645 ;; Return value:  Size  Location     Type
  7646 ;;                  1    wreg      void 
  7647 ;; Registers used:
  7648 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7649 ;; Tracked objects:
  7650 ;;		On entry : 0/0
  7651 ;;		On exit  : 0/0
  7652 ;;		Unchanged: 0/0
  7653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7654 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7655 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7656 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7657 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7658 ;;Total ram usage:        5 bytes
  7659 ;; Hardware stack levels used:    1
  7660 ;; Hardware stack levels required when called:    6
  7661 ;; This function calls:
  7662 ;;		Nothing
  7663 ;; This function is called by:
  7664 ;;		___ctoee
  7665 ;; This function uses a non-reentrant model
  7666 ;;
  7667                           
  7668                           
  7669                           ;psect for function ___memcpyee
  7670  0239                     ___memcpyee:	
  7671                           
  7672                           ;incstack = 0
  7673                           ; Regs used in ___memcpyee: [wreg+fsr1l+fsr1h+status,2+status,0]
  7674                           ;___memcpyee@to stored from wreg
  7675  0239  0020               	movlb	0	; select bank0
  7676  023A  00C4               	movwf	___memcpyee@to
  7677  023B                     l3133:	
  7678                           
  7679                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 39: __memcpyee(__eeprom unsign
      +                          ed char * to, const unsigned char *from, unsigned char size);/opt/microchip/xc8/v2.10/pi
      +                          c/sources/c99/pic/__eeprom.c: 40: {;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eepro
      +                          m.c: 41:  const unsigned char *ptr =from;
  7680  023B  0840               	movf	___memcpyee@from,w
  7681  023C  00C2               	movwf	??___memcpyee
  7682  023D  0842               	movf	??___memcpyee,w
  7683  023E  00C3               	movwf	___memcpyee@ptr
  7684  023F                     l1055:	
  7685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 71:  }
  7686                           
  7687                           
  7688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 69:  while (NVMCON1bits.WR) {
  7689  023F  0030               	movlb	16	; select bank16
  7690  0240  189E               	btfsc	30,1	;volsfr
  7691  0241  2A43               	goto	u1271
  7692  0242  2A44               	goto	u1270
  7693  0243                     u1271:	
  7694  0243  2A3F               	goto	l1055
  7695  0244                     u1270:	
  7696  0244                     l1057:	
  7697                           
  7698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 72:  NVMCON1bits.NVMREGS = 1;
  7699  0244  171E               	bsf	30,6	;volsfr
  7700  0245                     l3135:	
  7701                           
  7702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 73:  NVMADRL = (unsigned char)
      +                           to - 1U;
  7703  0245  0020               	movlb	0	; select bank0
  7704  0246  0844               	movf	___memcpyee@to,w
  7705  0247  3EFF               	addlw	255
  7706  0248  0030               	movlb	16	; select bank16
  7707  0249  009A               	movwf	26	;volatile
  7708  024A                     l3137:	
  7709                           
  7710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 74:  NVMADRH = 0x70;
  7711  024A  3070               	movlw	112
  7712  024B  009B               	movwf	27	;volatile
  7713  024C                     l3139:	
  7714                           
  7715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 75:  NVMDATH = 0;
  7716  024C  019D               	clrf	29	;volatile
  7717                           
  7718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 76:  while (size--) {
  7719  024D  2A7D               	goto	l3159
  7720  024E                     l1060:	
  7721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 79:   }
  7722                           
  7723                           
  7724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 77:   while (NVMCON1bits.WR) {
  7725  024E  0030               	movlb	16	; select bank16
  7726  024F  189E               	btfsc	30,1	;volsfr
  7727  0250  2A52               	goto	u1281
  7728  0251  2A53               	goto	u1280
  7729  0252                     u1281:	
  7730  0252  2A4E               	goto	l1060
  7731  0253                     u1280:	
  7732  0253                     l3141:	
  7733                           
  7734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 80:   NVMDATL = *ptr++;
  7735  0253  0020               	movlb	0	; select bank0
  7736  0254  0843               	movf	___memcpyee@ptr,w
  7737  0255  0086               	movwf	6
  7738  0256  0187               	clrf	7
  7739  0257  0801               	movf	1,w
  7740  0258  0030               	movlb	16	; select bank16
  7741  0259  009C               	movwf	28	;volatile
  7742  025A                     l3143:	
  7743  025A  3001               	movlw	1
  7744  025B  0020               	movlb	0	; select bank0
  7745  025C  00C2               	movwf	??___memcpyee
  7746  025D  0842               	movf	??___memcpyee,w
  7747  025E  07C3               	addwf	___memcpyee@ptr,f
  7748  025F                     l3145:	
  7749                           
  7750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 81:   NVMADRL++;
  7751  025F  3001               	movlw	1
  7752  0260  00C2               	movwf	??___memcpyee
  7753  0261  0842               	movf	??___memcpyee,w
  7754  0262  0030               	movlb	16	; select bank16
  7755  0263  079A               	addwf	26,f	;volatile
  7756  0264                     l3147:	
  7757                           
  7758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 82:   STATUSbits.CARRY = 0;
  7759  0264  0020               	movlb	0	; select bank0
  7760  0265  1003               	bcf	3,0	;volatile
  7761  0266                     l3149:	
  7762                           
  7763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 83:   if (INTCONbits.GIE) {
  7764  0266  1F8B               	btfss	11,7	;volatile
  7765  0267  2A69               	goto	u1291
  7766  0268  2A6A               	goto	u1290
  7767  0269                     u1291:	
  7768  0269  2A6B               	goto	l1063
  7769  026A                     u1290:	
  7770  026A                     l3151:	
  7771                           
  7772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 84:    STATUSbits.CARRY = 1;
  7773  026A  1403               	bsf	3,0	;volatile
  7774  026B                     l1063:	
  7775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 85:   }
  7776                           
  7777                           
  7778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 86:   NVMCON1bits.WREN = 1;
  7779  026B  0030               	movlb	16	; select bank16
  7780  026C  151E               	bsf	30,2	;volsfr
  7781  026D                     l3153:	
  7782                           
  7783                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 87:   NVMCON2 = 0x55;
  7784  026D  3055               	movlw	85
  7785  026E  009F               	movwf	31	;volsfr
  7786                           
  7787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 88:   NVMCON2 = 0xAA;
  7788  026F  30AA               	movlw	170
  7789  0270  009F               	movwf	31	;volsfr
  7790  0271                     l3155:	
  7791                           
  7792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 89:   NVMCON1bits.WR = 1;
  7793  0271  149E               	bsf	30,1	;volsfr
  7794  0272                     l1064:	
  7795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 92:   }
  7796                           
  7797                           
  7798                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 90:   while (NVMCON1bits.WR) {
  7799  0272  189E               	btfsc	30,1	;volsfr
  7800  0273  2A75               	goto	u1301
  7801  0274  2A76               	goto	u1300
  7802  0275                     u1301:	
  7803  0275  2A72               	goto	l1064
  7804  0276                     u1300:	
  7805  0276                     l1066:	
  7806                           
  7807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 93:   NVMCON1bits.WREN = 0;
  7808  0276  111E               	bcf	30,2	;volsfr
  7809                           
  7810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 94:   if (STATUSbits.CARRY) {
  7811  0277  0020               	movlb	0	; select bank0
  7812  0278  1C03               	btfss	3,0	;volatile
  7813  0279  2A7B               	goto	u1311
  7814  027A  2A7C               	goto	u1310
  7815  027B                     u1311:	
  7816  027B  2A7D               	goto	l3159
  7817  027C                     u1310:	
  7818  027C                     l3157:	
  7819                           
  7820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 95:    INTCONbits.GIE = 1;
  7821  027C  178B               	bsf	11,7	;volatile
  7822  027D                     l3159:	
  7823                           
  7824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/pic/__eeprom.c: 76:  while (size--) {
  7825  027D  3001               	movlw	1
  7826  027E  0020               	movlb	0	; select bank0
  7827  027F  02C1               	subwf	___memcpyee@size,f
  7828  0280  0A41               	incf	___memcpyee@size,w
  7829  0281  1D03               	btfss	3,2
  7830  0282  2A84               	goto	u1321
  7831  0283  2A85               	goto	u1320
  7832  0284                     u1321:	
  7833  0284  2A4E               	goto	l1060
  7834  0285                     u1320:	
  7835  0285                     l1069:	
  7836  0285  0008               	return
  7837  0286                     __end_of___memcpyee:	
  7838                           
  7839                           	psect	text10
  7840  05F4                     __ptext10:	
  7841 ;; *************** function _SYSTEM_Initialize *****************
  7842 ;; Defined at:
  7843 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7844 ;; Parameters:    Size  Location     Type
  7845 ;;		None
  7846 ;; Auto vars:     Size  Location     Type
  7847 ;;		None
  7848 ;; Return value:  Size  Location     Type
  7849 ;;                  1    wreg      void 
  7850 ;; Registers used:
  7851 ;;		wreg, status,2, status,0, pclath, cstack
  7852 ;; Tracked objects:
  7853 ;;		On entry : 0/0
  7854 ;;		On exit  : 0/0
  7855 ;;		Unchanged: 0/0
  7856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7861 ;;Total ram usage:        0 bytes
  7862 ;; Hardware stack levels used:    1
  7863 ;; Hardware stack levels required when called:    8
  7864 ;; This function calls:
  7865 ;;		_OSCILLATOR_Initialize
  7866 ;;		_PIN_MANAGER_Initialize
  7867 ;;		_PMD_Initialize
  7868 ;;		_TMR1_Initialize
  7869 ;; This function is called by:
  7870 ;;		_main
  7871 ;; This function uses a non-reentrant model
  7872 ;;
  7873                           
  7874                           
  7875                           ;psect for function _SYSTEM_Initialize
  7876  05F4                     _SYSTEM_Initialize:	
  7877  05F4                     l4389:	
  7878                           ;incstack = 0
  7879                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7880                           
  7881                           
  7882                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  7883  05F4  3186  262E  3185   	fcall	_PMD_Initialize
  7884  05F7                     l4391:	
  7885                           
  7886                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  7887  05F7  3182  22D1  3185   	fcall	_PIN_MANAGER_Initialize
  7888  05FA                     l4393:	
  7889                           
  7890                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  7891  05FA  3186  2636  3185   	fcall	_OSCILLATOR_Initialize
  7892  05FD                     l4395:	
  7893                           
  7894                           ;mcc_generated_files/mcc.c: 55:     TMR1_Initialize();
  7895  05FD  3184  24D1  3185   	fcall	_TMR1_Initialize
  7896  0600                     l500:	
  7897  0600  0008               	return
  7898  0601                     __end_of_SYSTEM_Initialize:	
  7899                           
  7900                           	psect	text11
  7901  04D1                     __ptext11:	
  7902 ;; *************** function _TMR1_Initialize *****************
  7903 ;; Defined at:
  7904 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  7905 ;; Parameters:    Size  Location     Type
  7906 ;;		None
  7907 ;; Auto vars:     Size  Location     Type
  7908 ;;		None
  7909 ;; Return value:  Size  Location     Type
  7910 ;;                  1    wreg      void 
  7911 ;; Registers used:
  7912 ;;		wreg, status,2, status,0, pclath, cstack
  7913 ;; Tracked objects:
  7914 ;;		On entry : 0/0
  7915 ;;		On exit  : 0/0
  7916 ;;		Unchanged: 0/0
  7917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7922 ;;Total ram usage:        0 bytes
  7923 ;; Hardware stack levels used:    1
  7924 ;; Hardware stack levels required when called:    7
  7925 ;; This function calls:
  7926 ;;		_TMR1_SetInterruptHandler
  7927 ;; This function is called by:
  7928 ;;		_SYSTEM_Initialize
  7929 ;; This function uses a non-reentrant model
  7930 ;;
  7931                           
  7932                           
  7933                           ;psect for function _TMR1_Initialize
  7934  04D1                     _TMR1_Initialize:	
  7935  04D1                     l4229:	
  7936                           ;incstack = 0
  7937                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7938                           
  7939                           
  7940                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  7941  04D1  0024               	movlb	4	; select bank4
  7942  04D2  018F               	clrf	15	;volatile
  7943                           
  7944                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
  7945  04D3  0190               	clrf	16	;volatile
  7946  04D4                     l4231:	
  7947                           
  7948                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
  7949  04D4  3004               	movlw	4
  7950  04D5  0091               	movwf	17	;volatile
  7951  04D6                     l4233:	
  7952                           
  7953                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xF0;
  7954  04D6  30F0               	movlw	240
  7955  04D7  008D               	movwf	13	;volatile
  7956  04D8                     l4235:	
  7957                           
  7958                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xDD;
  7959  04D8  30DD               	movlw	221
  7960  04D9  008C               	movwf	12	;volatile
  7961  04DA                     l4237:	
  7962                           
  7963                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  7964  04DA  080D               	movf	13,w	;volatile
  7965  04DB  00F9               	movwf	_timer1ReloadVal+1	;volatile
  7966  04DC  080C               	movf	12,w	;volatile
  7967  04DD  00F8               	movwf	_timer1ReloadVal	;volatile
  7968  04DE                     l4239:	
  7969                           
  7970                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
  7971  04DE  002E               	movlb	14	; select bank14
  7972  04DF  1010               	bcf	16,0	;volatile
  7973  04E0                     l4241:	
  7974                           
  7975                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
  7976  04E0  141A               	bsf	26,0	;volatile
  7977  04E1                     l4243:	
  7978                           
  7979                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  7980  04E1  30BF               	movlw	low _TMR1_DefaultInterruptHandler
  7981  04E2  0020               	movlb	0	; select bank0
  7982  04E3  00C0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  7983  04E4  3006               	movlw	high _TMR1_DefaultInterruptHandler
  7984  04E5  00C1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  7985  04E6  3186  2664  3184   	fcall	_TMR1_SetInterruptHandler
  7986  04E9                     l4245:	
  7987                           
  7988                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x25;
  7989  04E9  3025               	movlw	37
  7990  04EA  0024               	movlb	4	; select bank4
  7991  04EB  008E               	movwf	14	;volatile
  7992  04EC                     l401:	
  7993  04EC  0008               	return
  7994  04ED                     __end_of_TMR1_Initialize:	
  7995                           
  7996                           	psect	text12
  7997  0664                     __ptext12:	
  7998 ;; *************** function _TMR1_SetInterruptHandler *****************
  7999 ;; Defined at:
  8000 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  8001 ;; Parameters:    Size  Location     Type
  8002 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8003 ;;		 -> h_clock(1), TMR1_DefaultInterruptHandler(1), 
  8004 ;; Auto vars:     Size  Location     Type
  8005 ;;		None
  8006 ;; Return value:  Size  Location     Type
  8007 ;;                  1    wreg      void 
  8008 ;; Registers used:
  8009 ;;		wreg
  8010 ;; Tracked objects:
  8011 ;;		On entry : 0/0
  8012 ;;		On exit  : 0/0
  8013 ;;		Unchanged: 0/0
  8014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8015 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8018 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8019 ;;Total ram usage:        2 bytes
  8020 ;; Hardware stack levels used:    1
  8021 ;; Hardware stack levels required when called:    6
  8022 ;; This function calls:
  8023 ;;		Nothing
  8024 ;; This function is called by:
  8025 ;;		_TMR1_Initialize
  8026 ;;		_main
  8027 ;; This function uses a non-reentrant model
  8028 ;;
  8029                           
  8030                           
  8031                           ;psect for function _TMR1_SetInterruptHandler
  8032  0664                     _TMR1_SetInterruptHandler:	
  8033  0664                     l4073:	
  8034                           ;incstack = 0
  8035                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  8036                           
  8037                           
  8038                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  8039  0664  0020               	movlb	0	; select bank0
  8040  0665  0841               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  8041  0666  00AE               	movwf	_TMR1_InterruptHandler+1
  8042  0667  0840               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  8043  0668  00AD               	movwf	_TMR1_InterruptHandler
  8044  0669                     l431:	
  8045  0669  0008               	return
  8046  066A                     __end_of_TMR1_SetInterruptHandler:	
  8047                           
  8048                           	psect	text13
  8049  062E                     __ptext13:	
  8050 ;; *************** function _PMD_Initialize *****************
  8051 ;; Defined at:
  8052 ;;		line 72 in file "mcc_generated_files/mcc.c"
  8053 ;; Parameters:    Size  Location     Type
  8054 ;;		None
  8055 ;; Auto vars:     Size  Location     Type
  8056 ;;		None
  8057 ;; Return value:  Size  Location     Type
  8058 ;;                  1    wreg      void 
  8059 ;; Registers used:
  8060 ;;		status,2
  8061 ;; Tracked objects:
  8062 ;;		On entry : 0/0
  8063 ;;		On exit  : 0/0
  8064 ;;		Unchanged: 0/0
  8065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8070 ;;Total ram usage:        0 bytes
  8071 ;; Hardware stack levels used:    1
  8072 ;; Hardware stack levels required when called:    6
  8073 ;; This function calls:
  8074 ;;		Nothing
  8075 ;; This function is called by:
  8076 ;;		_SYSTEM_Initialize
  8077 ;; This function uses a non-reentrant model
  8078 ;;
  8079                           
  8080                           
  8081                           ;psect for function _PMD_Initialize
  8082  062E                     _PMD_Initialize:	
  8083  062E                     l4247:	
  8084                           ;incstack = 0
  8085                           ; Regs used in _PMD_Initialize: [status,2]
  8086                           
  8087                           
  8088                           ;mcc_generated_files/mcc.c: 75:     PMD0 = 0x00;
  8089  062E  002F               	movlb	15	; select bank15
  8090  062F  0196               	clrf	22	;volatile
  8091                           
  8092                           ;mcc_generated_files/mcc.c: 77:     PMD1 = 0x00;
  8093  0630  0197               	clrf	23	;volatile
  8094                           
  8095                           ;mcc_generated_files/mcc.c: 79:     PMD2 = 0x00;
  8096  0631  0198               	clrf	24	;volatile
  8097                           
  8098                           ;mcc_generated_files/mcc.c: 81:     PMD3 = 0x00;
  8099  0632  0199               	clrf	25	;volatile
  8100                           
  8101                           ;mcc_generated_files/mcc.c: 83:     PMD4 = 0x00;
  8102  0633  019A               	clrf	26	;volatile
  8103                           
  8104                           ;mcc_generated_files/mcc.c: 85:     PMD5 = 0x00;
  8105  0634  019B               	clrf	27	;volatile
  8106  0635                     l506:	
  8107  0635  0008               	return
  8108  0636                     __end_of_PMD_Initialize:	
  8109                           
  8110                           	psect	text14
  8111  02D1                     __ptext14:	
  8112 ;; *************** function _PIN_MANAGER_Initialize *****************
  8113 ;; Defined at:
  8114 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8115 ;; Parameters:    Size  Location     Type
  8116 ;;		None
  8117 ;; Auto vars:     Size  Location     Type
  8118 ;;		None
  8119 ;; Return value:  Size  Location     Type
  8120 ;;                  1    wreg      void 
  8121 ;; Registers used:
  8122 ;;		wreg, status,2
  8123 ;; Tracked objects:
  8124 ;;		On entry : 0/0
  8125 ;;		On exit  : 0/0
  8126 ;;		Unchanged: 0/0
  8127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8132 ;;Total ram usage:        0 bytes
  8133 ;; Hardware stack levels used:    1
  8134 ;; Hardware stack levels required when called:    6
  8135 ;; This function calls:
  8136 ;;		Nothing
  8137 ;; This function is called by:
  8138 ;;		_SYSTEM_Initialize
  8139 ;; This function uses a non-reentrant model
  8140 ;;
  8141                           
  8142                           
  8143                           ;psect for function _PIN_MANAGER_Initialize
  8144  02D1                     _PIN_MANAGER_Initialize:	
  8145  02D1                     l4249:	
  8146                           ;incstack = 0
  8147                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8148                           
  8149                           
  8150                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  8151  02D1  0020               	movlb	0	; select bank0
  8152  02D2  019A               	clrf	26	;volatile
  8153                           
  8154                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  8155  02D3  0199               	clrf	25	;volatile
  8156                           
  8157                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  8158  02D4  0196               	clrf	22	;volatile
  8159                           
  8160                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  8161  02D5  0197               	clrf	23	;volatile
  8162                           
  8163                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  8164  02D6  0198               	clrf	24	;volatile
  8165  02D7                     l4251:	
  8166                           
  8167                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  8168  02D7  3007               	movlw	7
  8169  02D8  0095               	movwf	21	;volatile
  8170  02D9                     l4253:	
  8171                           
  8172                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x6F;
  8173  02D9  306F               	movlw	111
  8174  02DA  0091               	movwf	17	;volatile
  8175  02DB                     l4255:	
  8176                           
  8177                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  8178  02DB  30FF               	movlw	255
  8179  02DC  0092               	movwf	18	;volatile
  8180  02DD                     l4257:	
  8181                           
  8182                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  8183  02DD  30FF               	movlw	255
  8184  02DE  0093               	movwf	19	;volatile
  8185  02DF                     l4259:	
  8186                           
  8187                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  8188  02DF  30FF               	movlw	255
  8189  02E0  0094               	movwf	20	;volatile
  8190  02E1                     l4261:	
  8191                           
  8192                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  8193  02E1  30FF               	movlw	255
  8194  02E2  003E               	movlb	30	; select bank30
  8195  02E3  00D9               	movwf	89	;volatile
  8196  02E4                     l4263:	
  8197                           
  8198                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xE7;
  8199  02E4  30E7               	movlw	231
  8200  02E5  00CE               	movwf	78	;volatile
  8201  02E6                     l4265:	
  8202                           
  8203                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xFF;
  8204  02E6  30FF               	movlw	255
  8205  02E7  00C3               	movwf	67	;volatile
  8206  02E8                     l4267:	
  8207                           
  8208                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  8209  02E8  3007               	movlw	7
  8210  02E9  00E4               	movwf	100	;volatile
  8211  02EA                     l4269:	
  8212                           
  8213                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  8214  02EA  30FF               	movlw	255
  8215  02EB  00B8               	movwf	56	;volatile
  8216                           
  8217                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  8218  02EC  01DA               	clrf	90	;volatile
  8219                           
  8220                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  8221  02ED  01E5               	clrf	101	;volatile
  8222                           
  8223                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  8224  02EE  01C4               	clrf	68	;volatile
  8225                           
  8226                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  8227  02EF  01B9               	clrf	57	;volatile
  8228                           
  8229                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  8230  02F0  01CF               	clrf	79	;volatile
  8231                           
  8232                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  8233  02F1  01E6               	clrf	102	;volatile
  8234                           
  8235                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  8236  02F2  01BA               	clrf	58	;volatile
  8237                           
  8238                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  8239  02F3  01C5               	clrf	69	;volatile
  8240                           
  8241                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  8242  02F4  01D0               	clrf	80	;volatile
  8243                           
  8244                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  8245  02F5  01DB               	clrf	91	;volatile
  8246  02F6                     l4271:	
  8247                           
  8248                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  8249  02F6  30FF               	movlw	255
  8250  02F7  00BB               	movwf	59	;volatile
  8251  02F8                     l4273:	
  8252                           
  8253                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  8254  02F8  30FF               	movlw	255
  8255  02F9  00C6               	movwf	70	;volatile
  8256  02FA                     l4275:	
  8257                           
  8258                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  8259  02FA  30FF               	movlw	255
  8260  02FB  00D1               	movwf	81	;volatile
  8261  02FC                     l4277:	
  8262                           
  8263                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  8264  02FC  30FF               	movlw	255
  8265  02FD  00DC               	movwf	92	;volatile
  8266  02FE                     l4279:	
  8267                           
  8268                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  8269  02FE  3007               	movlw	7
  8270  02FF  00E7               	movwf	103	;volatile
  8271  0300                     l4281:	
  8272                           
  8273                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  8274  0300  30FF               	movlw	255
  8275  0301  00BC               	movwf	60	;volatile
  8276  0302                     l4283:	
  8277                           
  8278                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  8279  0302  30FF               	movlw	255
  8280  0303  00C7               	movwf	71	;volatile
  8281  0304                     l4285:	
  8282                           
  8283                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  8284  0304  30FF               	movlw	255
  8285  0305  00D2               	movwf	82	;volatile
  8286  0306                     l4287:	
  8287                           
  8288                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  8289  0306  30FF               	movlw	255
  8290  0307  00DD               	movwf	93	;volatile
  8291  0308                     l4289:	
  8292                           
  8293                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
  8294  0308  3007               	movlw	7
  8295  0309  00E8               	movwf	104	;volatile
  8296  030A                     l4291:	
  8297                           
  8298                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
  8299  030A  3013               	movlw	19
  8300  030B  003D               	movlb	29	; select bank29
  8301  030C  00C5               	movwf	69	;volatile
  8302  030D                     l4293:	
  8303                           
  8304                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x14;
  8305  030D  3014               	movlw	20
  8306  030E  003E               	movlb	30	; select bank30
  8307  030F  00A3               	movwf	35	;volatile
  8308  0310                     l4295:	
  8309                           
  8310                           ;mcc_generated_files/pin_manager.c: 129:     RC4PPS = 0x15;
  8311  0310  3015               	movlw	21
  8312  0311  00A4               	movwf	36	;volatile
  8313  0312                     l4297:	
  8314                           
  8315                           ;mcc_generated_files/pin_manager.c: 130:     SSP1DATPPS = 0x14;
  8316  0312  3014               	movlw	20
  8317  0313  003D               	movlb	29	; select bank29
  8318  0314  00C6               	movwf	70	;volatile
  8319  0315                     l587:	
  8320  0315  0008               	return
  8321  0316                     __end_of_PIN_MANAGER_Initialize:	
  8322                           
  8323                           	psect	text15
  8324  0636                     __ptext15:	
  8325 ;; *************** function _OSCILLATOR_Initialize *****************
  8326 ;; Defined at:
  8327 ;;		line 58 in file "mcc_generated_files/mcc.c"
  8328 ;; Parameters:    Size  Location     Type
  8329 ;;		None
  8330 ;; Auto vars:     Size  Location     Type
  8331 ;;		None
  8332 ;; Return value:  Size  Location     Type
  8333 ;;                  1    wreg      void 
  8334 ;; Registers used:
  8335 ;;		wreg, status,2
  8336 ;; Tracked objects:
  8337 ;;		On entry : 0/0
  8338 ;;		On exit  : 0/0
  8339 ;;		Unchanged: 0/0
  8340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8345 ;;Total ram usage:        0 bytes
  8346 ;; Hardware stack levels used:    1
  8347 ;; Hardware stack levels required when called:    6
  8348 ;; This function calls:
  8349 ;;		Nothing
  8350 ;; This function is called by:
  8351 ;;		_SYSTEM_Initialize
  8352 ;; This function uses a non-reentrant model
  8353 ;;
  8354                           
  8355                           
  8356                           ;psect for function _OSCILLATOR_Initialize
  8357  0636                     _OSCILLATOR_Initialize:	
  8358  0636                     l4299:	
  8359                           ;incstack = 0
  8360                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8361                           
  8362                           
  8363                           ;mcc_generated_files/mcc.c: 61:     OSCCON1 = 0x60;
  8364  0636  3060               	movlw	96
  8365  0637  0031               	movlb	17	; select bank17
  8366  0638  008D               	movwf	13	;volatile
  8367  0639                     l4301:	
  8368                           
  8369                           ;mcc_generated_files/mcc.c: 63:     OSCCON3 = 0x00;
  8370  0639  018F               	clrf	15	;volatile
  8371  063A                     l4303:	
  8372                           
  8373                           ;mcc_generated_files/mcc.c: 65:     OSCEN = 0x00;
  8374  063A  0191               	clrf	17	;volatile
  8375  063B                     l4305:	
  8376                           
  8377                           ;mcc_generated_files/mcc.c: 67:     OSCFRQ = 0x00;
  8378  063B  0193               	clrf	19	;volatile
  8379  063C                     l4307:	
  8380                           
  8381                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
  8382  063C  0192               	clrf	18	;volatile
  8383  063D                     l503:	
  8384  063D  0008               	return
  8385  063E                     __end_of_OSCILLATOR_Initialize:	
  8386                           
  8387                           	psect	text16
  8388  018E                     __ptext16:	
  8389 ;; *************** function _Push_ring_buffer *****************
  8390 ;; Defined at:
  8391 ;;		line 86 in file "main.c"
  8392 ;; Parameters:    Size  Location     Type
  8393 ;;  reg             1    wreg     PTR unsigned char 
  8394 ;;		 -> main@data(5), 
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;  reg             1   15[BANK0 ] PTR unsigned char 
  8397 ;;		 -> main@data(5), 
  8398 ;;  i               2   16[BANK0 ] int 
  8399 ;; Return value:  Size  Location     Type
  8400 ;;                  1    wreg      void 
  8401 ;; Registers used:
  8402 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8403 ;; Tracked objects:
  8404 ;;		On entry : 0/0
  8405 ;;		On exit  : 0/0
  8406 ;;		Unchanged: 0/0
  8407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8409 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8410 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8411 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8412 ;;Total ram usage:        7 bytes
  8413 ;; Hardware stack levels used:    1
  8414 ;; Hardware stack levels required when called:    8
  8415 ;; This function calls:
  8416 ;;		_Store_EEPROM
  8417 ;; This function is called by:
  8418 ;;		_main
  8419 ;; This function uses a non-reentrant model
  8420 ;;
  8421                           
  8422                           
  8423                           ;psect for function _Push_ring_buffer
  8424  018E                     _Push_ring_buffer:	
  8425                           
  8426                           ;incstack = 0
  8427                           ; Regs used in _Push_ring_buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8428                           ;Push_ring_buffer@reg stored from wreg
  8429  018E  0020               	movlb	0	; select bank0
  8430  018F  00CF               	movwf	Push_ring_buffer@reg
  8431  0190                     l4397:	
  8432                           
  8433                           ;main.c: 88:     if (ptr_write_buff == &(buffer[30*5 -1])){
  8434  0190  3023               	movlw	35
  8435  0191  062A               	xorwf	_ptr_write_buff+1,w
  8436  0192  1D03               	skipz
  8437  0193  2996               	goto	u2105
  8438  0194  30EF               	movlw	239
  8439  0195  0629               	xorwf	_ptr_write_buff,w
  8440  0196                     u2105:	
  8441  0196  1D03               	skipz
  8442  0197  2999               	goto	u2101
  8443  0198  299A               	goto	u2100
  8444  0199                     u2101:	
  8445  0199  29A2               	goto	l4401
  8446  019A                     u2100:	
  8447  019A                     l4399:	
  8448                           
  8449                           ;main.c: 90:         Store_EEPROM(ptr_read_buff);
  8450  019A  082C               	movf	_ptr_read_buff+1,w
  8451  019B  00C5               	movwf	Store_EEPROM@ptr_buffer_r+1
  8452  019C  082B               	movf	_ptr_read_buff,w
  8453  019D  00C4               	movwf	Store_EEPROM@ptr_buffer_r
  8454  019E  3183  2316  3181   	fcall	_Store_EEPROM
  8455                           
  8456                           ;main.c: 92:     }
  8457  01A1  29B6               	goto	l4407
  8458  01A2                     l4401:	
  8459  01A2  0829               	movf	_ptr_write_buff,w
  8460  01A3  042A               	iorwf	_ptr_write_buff+1,w
  8461  01A4  1D03               	btfss	3,2
  8462  01A5  29A7               	goto	u2111
  8463  01A6  29A8               	goto	u2110
  8464  01A7                     u2111:	
  8465  01A7  29B6               	goto	l4407
  8466  01A8                     u2110:	
  8467  01A8                     l4403:	
  8468  01A8  082B               	movf	_ptr_read_buff,w
  8469  01A9  042C               	iorwf	_ptr_read_buff+1,w
  8470  01AA  1D03               	btfss	3,2
  8471  01AB  29AD               	goto	u2121
  8472  01AC  29AE               	goto	u2120
  8473  01AD                     u2121:	
  8474  01AD  29B6               	goto	l4407
  8475  01AE                     u2120:	
  8476  01AE                     l4405:	
  8477                           
  8478                           ;main.c: 95:        ptr_write_buff = buffer;
  8479  01AE  305A               	movlw	90
  8480  01AF  00A9               	movwf	_ptr_write_buff
  8481  01B0  3023               	movlw	35
  8482  01B1  00AA               	movwf	_ptr_write_buff+1
  8483                           
  8484                           ;main.c: 96:        ptr_read_buff = buffer;
  8485  01B2  305A               	movlw	90
  8486  01B3  00AB               	movwf	_ptr_read_buff
  8487  01B4  3023               	movlw	35
  8488  01B5  00AC               	movwf	_ptr_read_buff+1
  8489  01B6                     l4407:	
  8490                           ;main.c: 97:     }
  8491                           
  8492                           
  8493                           ;main.c: 103:     for (int i=0; i< 5; i++){
  8494  01B6  0020               	movlb	0	; select bank0
  8495  01B7  01D0               	clrf	Push_ring_buffer@i
  8496  01B8  01D1               	clrf	Push_ring_buffer@i+1
  8497  01B9                     l4413:	
  8498                           
  8499                           ;main.c: 104:         *(ptr_write_buff + i) = reg[i];
  8500  01B9  0020               	movlb	0	; select bank0
  8501  01BA  0850               	movf	Push_ring_buffer@i,w
  8502  01BB  074F               	addwf	Push_ring_buffer@reg,w
  8503  01BC  00CB               	movwf	??_Push_ring_buffer
  8504  01BD  084B               	movf	??_Push_ring_buffer,w
  8505  01BE  0086               	movwf	6
  8506  01BF  0187               	clrf	7
  8507  01C0  0801               	movf	1,w
  8508  01C1  00CC               	movwf	??_Push_ring_buffer+1
  8509  01C2  0850               	movf	Push_ring_buffer@i,w
  8510  01C3  0729               	addwf	_ptr_write_buff,w
  8511  01C4  00CD               	movwf	??_Push_ring_buffer+2
  8512  01C5  0851               	movf	Push_ring_buffer@i+1,w
  8513  01C6  3D2A               	addwfc	_ptr_write_buff+1,w
  8514  01C7  00CE               	movwf	??_Push_ring_buffer+3
  8515  01C8  084D               	movf	??_Push_ring_buffer+2,w
  8516  01C9  0086               	movwf	6
  8517  01CA  084E               	movf	??_Push_ring_buffer+3,w
  8518  01CB  0087               	movwf	7
  8519  01CC  084C               	movf	??_Push_ring_buffer+1,w
  8520  01CD  0081               	movwf	1
  8521  01CE                     l4415:	
  8522                           
  8523                           ;main.c: 105:         ptr_write_buff += i;
  8524  01CE  0850               	movf	Push_ring_buffer@i,w
  8525  01CF  07A9               	addwf	_ptr_write_buff,f
  8526  01D0  0851               	movf	Push_ring_buffer@i+1,w
  8527  01D1  3DAA               	addwfc	_ptr_write_buff+1,f
  8528  01D2                     l4417:	
  8529                           
  8530                           ;main.c: 106:     }
  8531  01D2  3001               	movlw	1
  8532  01D3  07D0               	addwf	Push_ring_buffer@i,f
  8533  01D4  3000               	movlw	0
  8534  01D5  3DD1               	addwfc	Push_ring_buffer@i+1,f
  8535  01D6                     l4419:	
  8536  01D6  0851               	movf	Push_ring_buffer@i+1,w
  8537  01D7  3A80               	xorlw	128
  8538  01D8  00CB               	movwf	??_Push_ring_buffer
  8539  01D9  3080               	movlw	128
  8540  01DA  024B               	subwf	??_Push_ring_buffer,w
  8541  01DB  1D03               	skipz
  8542  01DC  29DF               	goto	u2135
  8543  01DD  3005               	movlw	5
  8544  01DE  0250               	subwf	Push_ring_buffer@i,w
  8545  01DF                     u2135:	
  8546  01DF  1C03               	skipc
  8547  01E0  29E2               	goto	u2131
  8548  01E1  29E3               	goto	u2130
  8549  01E2                     u2131:	
  8550  01E2  29B9               	goto	l4413
  8551  01E3                     u2130:	
  8552  01E3                     l909:	
  8553  01E3  0008               	return
  8554  01E4                     __end_of_Push_ring_buffer:	
  8555                           
  8556                           	psect	text17
  8557  0316                     __ptext17:	
  8558 ;; *************** function _Store_EEPROM *****************
  8559 ;; Defined at:
  8560 ;;		line 77 in file "main.c"
  8561 ;; Parameters:    Size  Location     Type
  8562 ;;  ptr_buffer_r    2    4[BANK0 ] PTR unsigned char 
  8563 ;;		 -> buffer(150), NULL(0), 
  8564 ;; Auto vars:     Size  Location     Type
  8565 ;;  j               2    9[BANK0 ] int 
  8566 ;; Return value:  Size  Location     Type
  8567 ;;                  1    wreg      void 
  8568 ;; Registers used:
  8569 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8570 ;; Tracked objects:
  8571 ;;		On entry : 0/0
  8572 ;;		On exit  : 0/0
  8573 ;;		Unchanged: 0/0
  8574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8575 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8576 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8577 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8578 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8579 ;;Total ram usage:        7 bytes
  8580 ;; Hardware stack levels used:    1
  8581 ;; Hardware stack levels required when called:    7
  8582 ;; This function calls:
  8583 ;;		_DATAEE_WriteByte
  8584 ;; This function is called by:
  8585 ;;		_Push_ring_buffer
  8586 ;; This function uses a non-reentrant model
  8587 ;;
  8588                           
  8589                           
  8590                           ;psect for function _Store_EEPROM
  8591  0316                     _Store_EEPROM:	
  8592  0316                     l4309:	
  8593                           ;incstack = 0
  8594                           ; Regs used in _Store_EEPROM: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8595                           
  8596                           
  8597                           ;main.c: 79:     for(int j =1; j <= 5 && ptr_EEPROM != 0xF0FF ; j++){
  8598  0316  3001               	movlw	1
  8599  0317  0020               	movlb	0	; select bank0
  8600  0318  00C9               	movwf	Store_EEPROM@j
  8601  0319  3000               	movlw	0
  8602  031A  00CA               	movwf	Store_EEPROM@j+1
  8603  031B  2B3C               	goto	l4317
  8604  031C                     l4311:	
  8605                           
  8606                           ;main.c: 80:             DATAEE_WriteByte(ptr_EEPROM , *(ptr_buffer_r+ (j-1)));
  8607  031C  085E               	movf	_ptr_EEPROM+1,w
  8608  031D  00C1               	movwf	DATAEE_WriteByte@bAdd+1
  8609  031E  085D               	movf	_ptr_EEPROM,w
  8610  031F  00C0               	movwf	DATAEE_WriteByte@bAdd
  8611  0320  0849               	movf	Store_EEPROM@j,w
  8612  0321  0744               	addwf	Store_EEPROM@ptr_buffer_r,w
  8613  0322  00C6               	movwf	??_Store_EEPROM
  8614  0323  084A               	movf	Store_EEPROM@j+1,w
  8615  0324  3D45               	addwfc	Store_EEPROM@ptr_buffer_r+1,w
  8616  0325  00C7               	movwf	??_Store_EEPROM+1
  8617  0326  0846               	movf	??_Store_EEPROM,w
  8618  0327  3EFF               	addlw	255
  8619  0328  0086               	movwf	6
  8620  0329  30FF               	movlw	255
  8621  032A  3D47               	addwfc	??_Store_EEPROM+1,w
  8622  032B  0087               	movwf	7
  8623  032C  0801               	movf	1,w
  8624  032D  00C8               	movwf	??_Store_EEPROM+2
  8625  032E  0848               	movf	??_Store_EEPROM+2,w
  8626  032F  00C2               	movwf	DATAEE_WriteByte@bData
  8627  0330  3184  2469  3183   	fcall	_DATAEE_WriteByte
  8628  0333                     l4313:	
  8629                           
  8630                           ;main.c: 81:             ptr_EEPROM +=j;
  8631  0333  0020               	movlb	0	; select bank0
  8632  0334  0849               	movf	Store_EEPROM@j,w
  8633  0335  07DD               	addwf	_ptr_EEPROM,f
  8634  0336  084A               	movf	Store_EEPROM@j+1,w
  8635  0337  3DDE               	addwfc	_ptr_EEPROM+1,f
  8636  0338                     l4315:	
  8637                           
  8638                           ;main.c: 82:         }
  8639  0338  3001               	movlw	1
  8640  0339  07C9               	addwf	Store_EEPROM@j,f
  8641  033A  3000               	movlw	0
  8642  033B  3DCA               	addwfc	Store_EEPROM@j+1,f
  8643  033C                     l4317:	
  8644  033C  084A               	movf	Store_EEPROM@j+1,w
  8645  033D  3A80               	xorlw	128
  8646  033E  00C6               	movwf	??_Store_EEPROM
  8647  033F  3080               	movlw	128
  8648  0340  0246               	subwf	??_Store_EEPROM,w
  8649  0341  1D03               	skipz
  8650  0342  2B45               	goto	u2045
  8651  0343  3006               	movlw	6
  8652  0344  0249               	subwf	Store_EEPROM@j,w
  8653  0345                     u2045:	
  8654  0345  1803               	skipnc
  8655  0346  2B48               	goto	u2041
  8656  0347  2B49               	goto	u2040
  8657  0348                     u2041:	
  8658  0348  2B52               	goto	l900
  8659  0349                     u2040:	
  8660  0349                     l4319:	
  8661  0349  0020               	movlb	0	; select bank0
  8662  034A  0A5D               	incf	_ptr_EEPROM,w
  8663  034B  30F0               	movlw	240
  8664  034C  1903               	skipnz
  8665  034D  065E               	xorwf	_ptr_EEPROM+1,w
  8666  034E  1D03               	btfss	3,2
  8667  034F  2B51               	goto	u2051
  8668  0350  2B52               	goto	u2050
  8669  0351                     u2051:	
  8670  0351  2B1C               	goto	l4311
  8671  0352                     u2050:	
  8672  0352                     l900:	
  8673  0352  0008               	return
  8674  0353                     __end_of_Store_EEPROM:	
  8675                           
  8676                           	psect	text18
  8677  0469                     __ptext18:	
  8678 ;; *************** function _DATAEE_WriteByte *****************
  8679 ;; Defined at:
  8680 ;;		line 180 in file "mcc_generated_files/memory.c"
  8681 ;; Parameters:    Size  Location     Type
  8682 ;;  bAdd            2    0[BANK0 ] unsigned short 
  8683 ;;  bData           1    2[BANK0 ] unsigned char 
  8684 ;; Auto vars:     Size  Location     Type
  8685 ;;  GIEBitValue     1    3[BANK0 ] unsigned char 
  8686 ;; Return value:  Size  Location     Type
  8687 ;;                  1    wreg      void 
  8688 ;; Registers used:
  8689 ;;		wreg, status,2, status,0
  8690 ;; Tracked objects:
  8691 ;;		On entry : 0/0
  8692 ;;		On exit  : 0/0
  8693 ;;		Unchanged: 0/0
  8694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8695 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8696 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8698 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8699 ;;Total ram usage:        4 bytes
  8700 ;; Hardware stack levels used:    1
  8701 ;; Hardware stack levels required when called:    6
  8702 ;; This function calls:
  8703 ;;		Nothing
  8704 ;; This function is called by:
  8705 ;;		_Store_EEPROM
  8706 ;;		_main
  8707 ;; This function uses a non-reentrant model
  8708 ;;
  8709                           
  8710                           
  8711                           ;psect for function _DATAEE_WriteByte
  8712  0469                     _DATAEE_WriteByte:	
  8713  0469                     l4075:	
  8714                           ;incstack = 0
  8715                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
  8716                           
  8717                           
  8718                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
  8719  0469  3000               	movlw	0
  8720  046A  1B8B               	btfsc	11,7	;volatile
  8721  046B  3001               	movlw	1
  8722  046C  0020               	movlb	0	; select bank0
  8723  046D  00C3               	movwf	DATAEE_WriteByte@GIEBitValue
  8724                           
  8725                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
  8726  046E  0841               	movf	DATAEE_WriteByte@bAdd+1,w
  8727  046F  0030               	movlb	16	; select bank16
  8728  0470  009B               	movwf	27	;volatile
  8729  0471                     l4077:	
  8730                           
  8731                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
  8732  0471  0020               	movlb	0	; select bank0
  8733  0472  0840               	movf	DATAEE_WriteByte@bAdd,w
  8734  0473  0030               	movlb	16	; select bank16
  8735  0474  009A               	movwf	26	;volatile
  8736  0475                     l4079:	
  8737                           
  8738                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
  8739  0475  0020               	movlb	0	; select bank0
  8740  0476  0842               	movf	DATAEE_WriteByte@bData,w
  8741  0477  0030               	movlb	16	; select bank16
  8742  0478  009C               	movwf	28	;volatile
  8743  0479                     l4081:	
  8744                           
  8745                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
  8746  0479  171E               	bsf	30,6	;volsfr
  8747  047A                     l4083:	
  8748                           
  8749                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
  8750  047A  151E               	bsf	30,2	;volsfr
  8751  047B                     l4085:	
  8752                           
  8753                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
  8754  047B  138B               	bcf	11,7	;volatile
  8755  047C                     l4087:	
  8756                           
  8757                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
  8758  047C  3055               	movlw	85
  8759  047D  009F               	movwf	31	;volsfr
  8760  047E                     l4089:	
  8761                           
  8762                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
  8763  047E  30AA               	movlw	170
  8764  047F  009F               	movwf	31	;volsfr
  8765  0480                     l4091:	
  8766                           
  8767                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
  8768  0480  149E               	bsf	30,1	;volsfr
  8769  0481                     l776:	
  8770                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
  8771                           
  8772                           
  8773                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
  8774  0481  189E               	btfsc	30,1	;volsfr
  8775  0482  2C84               	goto	u1971
  8776  0483  2C85               	goto	u1970
  8777  0484                     u1971:	
  8778  0484  2C81               	goto	l776
  8779  0485                     u1970:	
  8780  0485                     l778:	
  8781                           
  8782                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
  8783  0485  111E               	bcf	30,2	;volsfr
  8784  0486                     l4093:	
  8785                           
  8786                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
  8787  0486  0020               	movlb	0	; select bank0
  8788  0487  0C43               	rrf	DATAEE_WriteByte@GIEBitValue,w
  8789  0488  1C03               	skipc
  8790  0489  138B               	bcf	11,7	;volatile
  8791  048A  1803               	skipnc
  8792  048B  178B               	bsf	11,7	;volatile
  8793  048C                     l779:	
  8794  048C  0008               	return
  8795  048D                     __end_of_DATAEE_WriteByte:	
  8796                           
  8797                           	psect	intentry
  8798  0004                     __pintentry:	
  8799 ;; *************** function _INTERRUPT_InterruptManager *****************
  8800 ;; Defined at:
  8801 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;		None
  8804 ;; Auto vars:     Size  Location     Type
  8805 ;;		None
  8806 ;; Return value:  Size  Location     Type
  8807 ;;                  1    wreg      void 
  8808 ;; Registers used:
  8809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8810 ;; Tracked objects:
  8811 ;;		On entry : 0/0
  8812 ;;		On exit  : 0/0
  8813 ;;		Unchanged: 0/0
  8814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8819 ;;Total ram usage:        0 bytes
  8820 ;; Hardware stack levels used:    1
  8821 ;; Hardware stack levels required when called:    5
  8822 ;; This function calls:
  8823 ;;		Absolute function
  8824 ;;		_TMR1_ISR
  8825 ;;		_i2c_ISR
  8826 ;;		_i2c_busCollisionISR
  8827 ;; This function is called by:
  8828 ;;		Interrupt level 1
  8829 ;; This function uses a non-reentrant model
  8830 ;;
  8831                           
  8832  0004                     _INTERRUPT_InterruptManager:	
  8833                           
  8834                           ;incstack = 0
  8835  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8836                           
  8837                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8838  0005  3180               	pagesel	$
  8839  0006                     i1l4531:	
  8840                           
  8841                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  8842  0006  1F0B               	btfss	11,6	;volatile
  8843  0007  2809               	goto	u230_21
  8844  0008  280A               	goto	u230_20
  8845  0009                     u230_21:	
  8846  0009  2835               	goto	i1l463
  8847  000A                     u230_20:	
  8848  000A                     i1l4533:	
  8849                           
  8850                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
  8851  000A  002E               	movlb	14	; select bank14
  8852  000B  1C99               	btfss	25,1	;volatile
  8853  000C  280E               	goto	u231_21
  8854  000D  280F               	goto	u231_20
  8855  000E                     u231_21:	
  8856  000E  281A               	goto	i1l456
  8857  000F                     u231_20:	
  8858  000F                     i1l4535:	
  8859  000F  1C8F               	btfss	15,1	;volatile
  8860  0010  2812               	goto	u232_21
  8861  0011  2813               	goto	u232_20
  8862  0012                     u232_21:	
  8863  0012  281A               	goto	i1l456
  8864  0013                     u232_20:	
  8865  0013                     i1l4537:	
  8866                           
  8867                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             i2c1_driver_busCollisionISR();
  8868  0013  0020               	movlb	0	; select bank0
  8869  0014  0832               	movf	_i2c1_driver_busCollisionISR+1,w
  8870  0015  008A               	movwf	10
  8871  0016  0831               	movf	_i2c1_driver_busCollisionISR,w
  8872  0017  000A               	callw
  8873  0018  3180               	pagesel	$
  8874                           
  8875                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  8876  0019  2835               	goto	i1l463
  8877  001A                     i1l456:	
  8878                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
  8879                           
  8880  001A  1C19               	btfss	25,0	;volatile
  8881  001B  281D               	goto	u233_21
  8882  001C  281E               	goto	u233_20
  8883  001D                     u233_21:	
  8884  001D  2829               	goto	i1l458
  8885  001E                     u233_20:	
  8886  001E                     i1l4539:	
  8887  001E  1C0F               	btfss	15,0	;volatile
  8888  001F  2821               	goto	u234_21
  8889  0020  2822               	goto	u234_20
  8890  0021                     u234_21:	
  8891  0021  2829               	goto	i1l458
  8892  0022                     u234_20:	
  8893  0022                     i1l4541:	
  8894                           
  8895                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             i2c1_driver_i2cISR();
  8896  0022  0020               	movlb	0	; select bank0
  8897  0023  0830               	movf	_i2c1_driver_i2cISR+1,w
  8898  0024  008A               	movwf	10
  8899  0025  082F               	movf	_i2c1_driver_i2cISR,w
  8900  0026  000A               	callw
  8901  0027  3180               	pagesel	$
  8902                           
  8903                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  8904  0028  2835               	goto	i1l463
  8905  0029                     i1l458:	
  8906                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE4bits.TMR1IE == 1 && PI
      +                          R4bits.TMR1IF == 1)
  8907                           
  8908  0029  1C1A               	btfss	26,0	;volatile
  8909  002A  282C               	goto	u235_21
  8910  002B  282D               	goto	u235_20
  8911  002C                     u235_21:	
  8912  002C  2835               	goto	i1l457
  8913  002D                     u235_20:	
  8914  002D                     i1l4543:	
  8915  002D  1C10               	btfss	16,0	;volatile
  8916  002E  2830               	goto	u236_21
  8917  002F  2831               	goto	u236_20
  8918  0030                     u236_21:	
  8919  0030  2835               	goto	i1l457
  8920  0031                     u236_20:	
  8921  0031                     i1l4545:	
  8922                           
  8923                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR1_ISR();
  8924  0031  3185  254B  3180   	fcall	_TMR1_ISR
  8925                           
  8926                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  8927  0034  2835               	goto	i1l463
  8928  0035                     i1l457:	
  8929  0035                     i1l463:	
  8930                           ;mcc_generated_files/interrupt_manager.c: 73:     }
  8931                           
  8932  0035  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8933  0036  0009               	retfie
  8934  0037                     __end_of_INTERRUPT_InterruptManager:	
  8935                           
  8936                           	psect	text20
  8937  0697                     __ptext20:	
  8938 ;; *************** function _i2c_busCollisionISR *****************
  8939 ;; Defined at:
  8940 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
  8941 ;; Parameters:    Size  Location     Type
  8942 ;;		None
  8943 ;; Auto vars:     Size  Location     Type
  8944 ;;		None
  8945 ;; Return value:  Size  Location     Type
  8946 ;;                  1    wreg      void 
  8947 ;; Registers used:
  8948 ;;		status,2, status,0, pclath, cstack
  8949 ;; Tracked objects:
  8950 ;;		On entry : 0/0
  8951 ;;		On exit  : 0/0
  8952 ;;		Unchanged: 0/0
  8953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8958 ;;Total ram usage:        0 bytes
  8959 ;; Hardware stack levels used:    1
  8960 ;; Hardware stack levels required when called:    1
  8961 ;; This function calls:
  8962 ;;		_i2c1_driver_clearBusCollision
  8963 ;; This function is called by:
  8964 ;;		_i2c_open
  8965 ;;		_INTERRUPT_InterruptManager
  8966 ;; This function uses a non-reentrant model
  8967 ;;
  8968                           
  8969                           
  8970                           ;psect for function _i2c_busCollisionISR
  8971  0697                     _i2c_busCollisionISR:	
  8972  0697                     i1l3581:	
  8973                           ;incstack = 0
  8974                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
  8975                           
  8976                           
  8977                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
  8978  0697  3186  26A3  3186   	fcall	_i2c1_driver_clearBusCollision
  8979  069A                     i1l250:	
  8980  069A  0008               	return
  8981  069B                     __end_of_i2c_busCollisionISR:	
  8982                           
  8983                           	psect	text21
  8984  06A3                     __ptext21:	
  8985 ;; *************** function _i2c1_driver_clearBusCollision *****************
  8986 ;; Defined at:
  8987 ;;		line 254 in file "mcc_generated_files/i2c1_driver.c"
  8988 ;; Parameters:    Size  Location     Type
  8989 ;;		None
  8990 ;; Auto vars:     Size  Location     Type
  8991 ;;		None
  8992 ;; Return value:  Size  Location     Type
  8993 ;;                  1    wreg      void 
  8994 ;; Registers used:
  8995 ;;		None
  8996 ;; Tracked objects:
  8997 ;;		On entry : 0/0
  8998 ;;		On exit  : 0/0
  8999 ;;		Unchanged: 0/0
  9000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9005 ;;Total ram usage:        0 bytes
  9006 ;; Hardware stack levels used:    1
  9007 ;; This function calls:
  9008 ;;		Nothing
  9009 ;; This function is called by:
  9010 ;;		_i2c_busCollisionISR
  9011 ;; This function uses a non-reentrant model
  9012 ;;
  9013                           
  9014                           
  9015                           ;psect for function _i2c1_driver_clearBusCollision
  9016  06A3                     _i2c1_driver_clearBusCollision:	
  9017  06A3                     i1l3351:	
  9018                           ;incstack = 0
  9019                           ; Regs used in _i2c1_driver_clearBusCollision: []
  9020                           
  9021                           
  9022                           ;mcc_generated_files/i2c1_driver.c: 256:     PIR3bits.BCL1IF = 0;
  9023  06A3  002E               	movlb	14	; select bank14
  9024  06A4  108F               	bcf	15,1	;volatile
  9025  06A5                     i1l729:	
  9026  06A5  0008               	return
  9027  06A6                     __end_of_i2c1_driver_clearBusCollision:	
  9028                           
  9029                           	psect	text22
  9030  0419                     __ptext22:	
  9031 ;; *************** function _i2c_ISR *****************
  9032 ;; Defined at:
  9033 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
  9034 ;; Parameters:    Size  Location     Type
  9035 ;;		None
  9036 ;; Auto vars:     Size  Location     Type
  9037 ;;		None
  9038 ;; Return value:  Size  Location     Type
  9039 ;;                  1    wreg      void 
  9040 ;; Registers used:
  9041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9042 ;; Tracked objects:
  9043 ;;		On entry : 0/0
  9044 ;;		On exit  : 0/0
  9045 ;;		Unchanged: 0/0
  9046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9049 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9050 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9051 ;;Total ram usage:        3 bytes
  9052 ;; Hardware stack levels used:    1
  9053 ;; Hardware stack levels required when called:    4
  9054 ;; This function calls:
  9055 ;;		_do_I2C_DO_ACK
  9056 ;;		_do_I2C_DO_ADDRESS_NACK
  9057 ;;		_do_I2C_DO_NACK_RESTART
  9058 ;;		_do_I2C_DO_NACK_STOP
  9059 ;;		_do_I2C_IDLE
  9060 ;;		_do_I2C_RCEN
  9061 ;;		_do_I2C_RESET
  9062 ;;		_do_I2C_RX
  9063 ;;		_do_I2C_SEND_ADR_READ
  9064 ;;		_do_I2C_SEND_ADR_WRITE
  9065 ;;		_do_I2C_SEND_RESTART
  9066 ;;		_do_I2C_SEND_RESTART_READ
  9067 ;;		_do_I2C_SEND_RESTART_WRITE
  9068 ;;		_do_I2C_SEND_STOP
  9069 ;;		_do_I2C_TX
  9070 ;;		_do_I2C_TX_EMPTY
  9071 ;;		_i2c1_driver_isNACK
  9072 ;;		_mssp1_clearIRQ
  9073 ;; This function is called by:
  9074 ;;		_i2c_open
  9075 ;;		_i2c_poller
  9076 ;;		_INTERRUPT_InterruptManager
  9077 ;; This function uses a non-reentrant model
  9078 ;;
  9079                           
  9080                           
  9081                           ;psect for function _i2c_ISR
  9082  0419                     _i2c_ISR:	
  9083  0419                     i1l4379:	
  9084                           ;incstack = 0
  9085                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9086                           
  9087                           
  9088                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
  9089  0419  3186  26A6  3184   	fcall	_mssp1_clearIRQ
  9090  041C                     i1l4381:	
  9091                           
  9092                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
  9093  041C  0021               	movlb	1	; select bank1
  9094  041D  1DA0               	btfss	_i2c_status^(0+128),3
  9095  041E  2C20               	goto	u208_21
  9096  041F  2C21               	goto	u208_20
  9097  0420                     u208_21:	
  9098  0420  2C2D               	goto	i1l4387
  9099  0421                     u208_20:	
  9100  0421                     i1l4383:	
  9101  0421  3186  264E  3184   	fcall	_i2c1_driver_isNACK
  9102  0424  1C03               	btfss	3,0
  9103  0425  2C27               	goto	u209_21
  9104  0426  2C28               	goto	u209_20
  9105  0427                     u209_21:	
  9106  0427  2C2D               	goto	i1l4387
  9107  0428                     u209_20:	
  9108  0428                     i1l4385:	
  9109                           
  9110                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
  9111  0428  300F               	movlw	15
  9112  0429  00F4               	movwf	??_i2c_ISR
  9113  042A  0874               	movf	??_i2c_ISR,w
  9114  042B  0021               	movlb	1	; select bank1
  9115  042C  00A9               	movwf	(_i2c_status^(0+128)+9)
  9116  042D                     i1l4387:	
  9117                           
  9118                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
  9119  042D  0021               	movlb	1	; select bank1
  9120  042E  0829               	movf	(_i2c_status^(0+128)+9),w
  9121  042F  00F4               	movwf	??_i2c_ISR
  9122  0430  01F5               	clrf	??_i2c_ISR+1
  9123  0431  35F4               	lslf	??_i2c_ISR,f
  9124  0432  0DF5               	rlf	??_i2c_ISR+1,f
  9125  0433  30B1               	movlw	low (_fsmStateTable| (0+32768))
  9126  0434  0774               	addwf	??_i2c_ISR,w
  9127  0435  0084               	movwf	4
  9128  0436  3084               	movlw	high (_fsmStateTable| (0+32768))
  9129  0437  3D75               	addwfc	??_i2c_ISR+1,w
  9130  0438  0085               	movwf	5
  9131  0439  3F01               	moviw [1]fsr0
  9132  043A  008A               	movwf	10
  9133  043B  3F00               	moviw [0]fsr0
  9134  043C  000A               	callw
  9135  043D  3184               	pagesel	$
  9136  043E  00F6               	movwf	??_i2c_ISR+2
  9137  043F  0876               	movf	??_i2c_ISR+2,w
  9138  0440  0021               	movlb	1	; select bank1
  9139  0441  00A9               	movwf	(_i2c_status^(0+128)+9)
  9140  0442                     i1l247:	
  9141  0442  0008               	return
  9142  0443                     __end_of_i2c_ISR:	
  9143                           
  9144                           	psect	text23
  9145  06A6                     __ptext23:	
  9146 ;; *************** function _mssp1_clearIRQ *****************
  9147 ;; Defined at:
  9148 ;;		line 54 in file "mcc_generated_files/i2c1_driver.c"
  9149 ;; Parameters:    Size  Location     Type
  9150 ;;		None
  9151 ;; Auto vars:     Size  Location     Type
  9152 ;;		None
  9153 ;; Return value:  Size  Location     Type
  9154 ;;                  1    wreg      void 
  9155 ;; Registers used:
  9156 ;;		None
  9157 ;; Tracked objects:
  9158 ;;		On entry : 0/0
  9159 ;;		On exit  : 0/0
  9160 ;;		Unchanged: 0/0
  9161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9166 ;;Total ram usage:        0 bytes
  9167 ;; Hardware stack levels used:    1
  9168 ;; This function calls:
  9169 ;;		Nothing
  9170 ;; This function is called by:
  9171 ;;		_i2c_ISR
  9172 ;;		_i2c_open
  9173 ;;		_i2c_close
  9174 ;; This function uses a non-reentrant model
  9175 ;;
  9176                           
  9177                           
  9178                           ;psect for function _mssp1_clearIRQ
  9179  06A6                     _mssp1_clearIRQ:	
  9180  06A6                     i1l3167:	
  9181                           ;incstack = 0
  9182                           ; Regs used in _mssp1_clearIRQ: []
  9183                           
  9184                           
  9185                           ;mcc_generated_files/i2c1_driver.c: 56:         SSP1CON1 = 0x28;
  9186  06A6  002E               	movlb	14	; select bank14
  9187  06A7  100F               	bcf	15,0	;volatile
  9188  06A8                     i1l633:	
  9189  06A8  0008               	return
  9190  06A9                     __end_of_mssp1_clearIRQ:	
  9191                           
  9192                           	psect	text24
  9193  0286                     __ptext24:	
  9194 ;; *************** function _do_I2C_RX *****************
  9195 ;; Defined at:
  9196 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
  9197 ;; Parameters:    Size  Location     Type
  9198 ;;		None
  9199 ;; Auto vars:     Size  Location     Type
  9200 ;;		None
  9201 ;; Return value:  Size  Location     Type
  9202 ;;                  1    wreg      enum E12722
  9203 ;; Registers used:
  9204 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9205 ;; Tracked objects:
  9206 ;;		On entry : 0/0
  9207 ;;		On exit  : 0/0
  9208 ;;		Unchanged: 0/0
  9209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9212 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9213 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9214 ;;Total ram usage:        3 bytes
  9215 ;; Hardware stack levels used:    1
  9216 ;; Hardware stack levels required when called:    3
  9217 ;; This function calls:
  9218 ;;		Absolute function
  9219 ;;		_do_I2C_DO_NACK_RESTART
  9220 ;;		_do_I2C_DO_NACK_STOP
  9221 ;;		_i2c1_driver_getRXData
  9222 ;;		_i2c1_driver_sendACK
  9223 ;;		_i2c_restartWrite
  9224 ;;		_rd1RegCompleteHandler
  9225 ;;		_rd2RegCompleteHandler
  9226 ;;		_rdBlkRegCompleteHandler
  9227 ;;		_returnReset
  9228 ;;		_returnStop
  9229 ;;		_wr1RegCompleteHandler
  9230 ;;		_wr2RegCompleteHandler
  9231 ;; This function is called by:
  9232 ;;		_i2c_ISR
  9233 ;; This function uses a non-reentrant model
  9234 ;;
  9235                           
  9236                           
  9237                           ;psect for function _do_I2C_RX
  9238  0286                     _do_I2C_RX:	
  9239  0286                     i1l4171:	
  9240                           ;incstack = 0
  9241                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9242                           
  9243                           
  9244                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
  9245  0286  3186  26AC  3182   	fcall	_i2c1_driver_getRXData
  9246  0289  00F0               	movwf	??_do_I2C_RX
  9247  028A  0021               	movlb	1	; select bank1
  9248  028B  0822               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
  9249  028C  0086               	movwf	6
  9250  028D  0187               	clrf	7
  9251  028E  0870               	movf	??_do_I2C_RX,w
  9252  028F  0081               	movwf	1
  9253  0290                     i1l4173:	
  9254  0290  3001               	movlw	1
  9255  0291  00F0               	movwf	??_do_I2C_RX
  9256  0292  0870               	movf	??_do_I2C_RX,w
  9257  0293  07A2               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
  9258  0294                     i1l4175:	
  9259                           
  9260                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
  9261  0294  3001               	movlw	1
  9262  0295  02A3               	subwf	(_i2c_status^(0+128)+3),f
  9263  0296  3000               	movlw	0
  9264  0297  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
  9265  0298  0823               	movf	(_i2c_status^(0+128)+3),w
  9266  0299  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
  9267  029A  1903               	btfsc	3,2
  9268  029B  2A9D               	goto	u203_21
  9269  029C  2A9E               	goto	u203_20
  9270  029D                     u203_21:	
  9271  029D  2AA3               	goto	i1l222
  9272  029E                     u203_20:	
  9273  029E                     i1l4177:	
  9274                           
  9275                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
  9276  029E  3186  269F  3182   	fcall	_i2c1_driver_sendACK
  9277  02A1                     i1l4179:	
  9278                           
  9279                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
  9280  02A1  3005               	movlw	5
  9281  02A2  2AD0               	goto	i1l223
  9282  02A3                     i1l222:	
  9283                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
  9284                           
  9285                           
  9286                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
  9287  02A3  1520               	bsf	_i2c_status^(0+128),2
  9288                           
  9289                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
  9290  02A4  2AAD               	goto	i1l4195
  9291  02A5                     i1l4185:	
  9292                           
  9293                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
  9294  02A5  3186  266A  3182   	fcall	_do_I2C_DO_NACK_RESTART
  9295  02A8  2AD0               	goto	i1l223
  9296  02A9                     i1l4189:	
  9297                           
  9298                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
  9299  02A9  3186  266F  3182   	fcall	_do_I2C_DO_NACK_STOP
  9300  02AC  2AD0               	goto	i1l223
  9301  02AD                     i1l4195:	
  9302  02AD  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
  9303  02AE  00F0               	movwf	??_do_I2C_RX
  9304  02AF  0870               	movf	??_do_I2C_RX,w
  9305  02B0  0020               	movlb	0	; select bank0
  9306  02B1  00C1               	movwf	rdBlkRegCompleteHandler@p
  9307  02B2  300B               	movlw	11
  9308  02B3  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
  9309  02B4  0086               	movwf	6
  9310  02B5  0187               	clrf	7
  9311  02B6  3F41               	moviw [1]fsr1
  9312  02B7  008A               	movwf	10
  9313  02B8  3F40               	moviw [0]fsr1
  9314  02B9  000A               	callw
  9315  02BA  3182               	pagesel	$
  9316  02BB  00F1               	movwf	??_do_I2C_RX+1
  9317  02BC  01F2               	clrf	??_do_I2C_RX+2
  9318                           
  9319                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9320                           ; Switch size 1, requested type "simple"
  9321                           ; Number of cases is 1, Range of values is 0 to 0
  9322                           ; switch strategies available:
  9323                           ; Name         Instructions Cycles
  9324                           ; simple_byte            4     3 (average)
  9325                           ; direct_byte            8     6 (fixed)
  9326                           ; jumptable            260     6 (fixed)
  9327                           ;	Chosen strategy is simple_byte
  9328  02BD  0872               	movf	??_do_I2C_RX+2,w
  9329  02BE  3A00               	xorlw	0	; case 0
  9330  02BF  1903               	skipnz
  9331  02C0  2AC2               	goto	i1l4751
  9332  02C1  2AA9               	goto	i1l4189
  9333  02C2                     i1l4751:	
  9334                           
  9335                           ; Switch size 1, requested type "simple"
  9336                           ; Number of cases is 4, Range of values is 1 to 4
  9337                           ; switch strategies available:
  9338                           ; Name         Instructions Cycles
  9339                           ; simple_byte           13     7 (average)
  9340                           ; direct_byte           17     9 (fixed)
  9341                           ; jumptable            263     9 (fixed)
  9342                           ;	Chosen strategy is simple_byte
  9343  02C2  0871               	movf	??_do_I2C_RX+1,w
  9344  02C3  3A01               	xorlw	1	; case 1
  9345  02C4  1903               	skipnz
  9346  02C5  2AA9               	goto	i1l4189
  9347  02C6  3A03               	xorlw	3	; case 2
  9348  02C7  1903               	skipnz
  9349  02C8  2AA5               	goto	i1l4185
  9350  02C9  3A01               	xorlw	1	; case 3
  9351  02CA  1903               	skipnz
  9352  02CB  2AA5               	goto	i1l4185
  9353  02CC  3A07               	xorlw	7	; case 4
  9354  02CD  1903               	skipnz
  9355  02CE  2AA9               	goto	i1l4189
  9356  02CF  2AA9               	goto	i1l4189
  9357  02D0                     i1l223:	
  9358  02D0  0008               	return
  9359  02D1                     __end_of_do_I2C_RX:	
  9360                           
  9361                           	psect	text25
  9362  01E4                     __ptext25:	
  9363 ;; *************** function _do_I2C_TX *****************
  9364 ;; Defined at:
  9365 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
  9366 ;; Parameters:    Size  Location     Type
  9367 ;;		None
  9368 ;; Auto vars:     Size  Location     Type
  9369 ;;		None
  9370 ;; Return value:  Size  Location     Type
  9371 ;;                  1    wreg      enum E12722
  9372 ;; Registers used:
  9373 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9374 ;; Tracked objects:
  9375 ;;		On entry : 0/0
  9376 ;;		On exit  : 0/0
  9377 ;;		Unchanged: 0/0
  9378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9381 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9382 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9383 ;;Total ram usage:        3 bytes
  9384 ;; Hardware stack levels used:    1
  9385 ;; Hardware stack levels required when called:    3
  9386 ;; This function calls:
  9387 ;;		Absolute function
  9388 ;;		_do_I2C_SEND_RESTART_READ
  9389 ;;		_do_I2C_SEND_RESTART_WRITE
  9390 ;;		_do_I2C_SEND_STOP
  9391 ;;		_i2c1_driver_TXData
  9392 ;;		_i2c1_driver_isNACK
  9393 ;;		_i2c_restartWrite
  9394 ;;		_rd1RegCompleteHandler
  9395 ;;		_rd2RegCompleteHandler
  9396 ;;		_rdBlkRegCompleteHandler
  9397 ;;		_returnReset
  9398 ;;		_returnStop
  9399 ;;		_wr1RegCompleteHandler
  9400 ;;		_wr2RegCompleteHandler
  9401 ;; This function is called by:
  9402 ;;		_i2c_ISR
  9403 ;; This function uses a non-reentrant model
  9404 ;;
  9405                           
  9406                           
  9407                           ;psect for function _do_I2C_TX
  9408  01E4                     _do_I2C_TX:	
  9409  01E4                     i1l4137:	
  9410                           ;incstack = 0
  9411                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9412                           
  9413                           
  9414                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
  9415  01E4  3186  264E  3181   	fcall	_i2c1_driver_isNACK
  9416  01E7  1C03               	btfss	3,0
  9417  01E8  29EA               	goto	u201_21
  9418  01E9  29EB               	goto	u201_20
  9419  01EA                     u201_21:	
  9420  01EA  2A1C               	goto	i1l206
  9421  01EB                     u201_20:	
  9422  01EB  29F8               	goto	i1l4155
  9423  01EC                     i1l4141:	
  9424                           
  9425                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
  9426  01EC  3186  2688  3181   	fcall	_do_I2C_SEND_RESTART_READ
  9427  01EF  2A38               	goto	i1l209
  9428  01F0                     i1l4145:	
  9429                           
  9430                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
  9431  01F0  3186  2683  3181   	fcall	_do_I2C_SEND_RESTART_WRITE
  9432  01F3  2A38               	goto	i1l209
  9433  01F4                     i1l4149:	
  9434                           
  9435                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
  9436  01F4  3186  2679  3181   	fcall	_do_I2C_SEND_STOP
  9437  01F7  2A38               	goto	i1l209
  9438  01F8                     i1l4155:	
  9439  01F8  0021               	movlb	1	; select bank1
  9440  01F9  083A               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
  9441  01FA  00F1               	movwf	??_do_I2C_TX
  9442  01FB  0871               	movf	??_do_I2C_TX,w
  9443  01FC  0020               	movlb	0	; select bank0
  9444  01FD  00C1               	movwf	rdBlkRegCompleteHandler@p
  9445  01FE  3011               	movlw	17
  9446  01FF  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
  9447  0200  0086               	movwf	6
  9448  0201  0187               	clrf	7
  9449  0202  3F41               	moviw [1]fsr1
  9450  0203  008A               	movwf	10
  9451  0204  3F40               	moviw [0]fsr1
  9452  0205  000A               	callw
  9453  0206  3181               	pagesel	$
  9454  0207  00F2               	movwf	??_do_I2C_TX+1
  9455  0208  01F3               	clrf	??_do_I2C_TX+2
  9456                           
  9457                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9458                           ; Switch size 1, requested type "simple"
  9459                           ; Number of cases is 1, Range of values is 0 to 0
  9460                           ; switch strategies available:
  9461                           ; Name         Instructions Cycles
  9462                           ; simple_byte            4     3 (average)
  9463                           ; direct_byte            8     6 (fixed)
  9464                           ; jumptable            260     6 (fixed)
  9465                           ;	Chosen strategy is simple_byte
  9466  0209  0873               	movf	??_do_I2C_TX+2,w
  9467  020A  3A00               	xorlw	0	; case 0
  9468  020B  1903               	skipnz
  9469  020C  2A0E               	goto	i1l4753
  9470  020D  29F4               	goto	i1l4149
  9471  020E                     i1l4753:	
  9472                           
  9473                           ; Switch size 1, requested type "simple"
  9474                           ; Number of cases is 4, Range of values is 1 to 4
  9475                           ; switch strategies available:
  9476                           ; Name         Instructions Cycles
  9477                           ; simple_byte           13     7 (average)
  9478                           ; direct_byte           17     9 (fixed)
  9479                           ; jumptable            263     9 (fixed)
  9480                           ;	Chosen strategy is simple_byte
  9481  020E  0872               	movf	??_do_I2C_TX+1,w
  9482  020F  3A01               	xorlw	1	; case 1
  9483  0210  1903               	skipnz
  9484  0211  29F4               	goto	i1l4149
  9485  0212  3A03               	xorlw	3	; case 2
  9486  0213  1903               	skipnz
  9487  0214  29EC               	goto	i1l4141
  9488  0215  3A01               	xorlw	1	; case 3
  9489  0216  1903               	skipnz
  9490  0217  29F0               	goto	i1l4145
  9491  0218  3A07               	xorlw	7	; case 4
  9492  0219  1903               	skipnz
  9493  021A  29F4               	goto	i1l4149
  9494  021B  29F4               	goto	i1l4149
  9495  021C                     i1l206:	
  9496                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
  9497                           
  9498                           
  9499                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
  9500  021C  0021               	movlb	1	; select bank1
  9501  021D  11A0               	bcf	_i2c_status^(0+128),3
  9502  021E                     i1l4157:	
  9503                           
  9504                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
  9505  021E  3002               	movlw	2
  9506  021F  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
  9507  0220  0086               	movwf	6
  9508  0221  0187               	clrf	7
  9509  0222  3F40               	moviw [0]fsr1
  9510  0223  0084               	movwf	4
  9511  0224  0185               	clrf	5
  9512  0225  0A81               	incf	1,f
  9513  0226  0800               	movf	0,w
  9514  0227  3186  2692  3181   	fcall	_i2c1_driver_TXData
  9515  022A                     i1l4159:	
  9516                           
  9517                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
  9518  022A  3001               	movlw	1
  9519  022B  0021               	movlb	1	; select bank1
  9520  022C  02A3               	subwf	(_i2c_status^(0+128)+3),f
  9521  022D  3000               	movlw	0
  9522  022E  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
  9523  022F  0823               	movf	(_i2c_status^(0+128)+3),w
  9524  0230  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
  9525  0231  1D03               	btfss	3,2
  9526  0232  2A34               	goto	u202_21
  9527  0233  2A35               	goto	u202_20
  9528  0234                     u202_21:	
  9529  0234  2A37               	goto	i1l4163
  9530  0235                     u202_20:	
  9531  0235                     i1l4161:	
  9532  0235  3006               	movlw	6
  9533  0236  2A38               	goto	i1l209
  9534  0237                     i1l4163:	
  9535  0237  3003               	movlw	3
  9536  0238                     i1l209:	
  9537  0238  0008               	return
  9538  0239                     __end_of_do_I2C_TX:	
  9539                           
  9540                           	psect	text26
  9541  03EC                     __ptext26:	
  9542 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
  9543 ;; Defined at:
  9544 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
  9545 ;; Parameters:    Size  Location     Type
  9546 ;;		None
  9547 ;; Auto vars:     Size  Location     Type
  9548 ;;		None
  9549 ;; Return value:  Size  Location     Type
  9550 ;;                  1    wreg      enum E12722
  9551 ;; Registers used:
  9552 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9553 ;; Tracked objects:
  9554 ;;		On entry : 0/0
  9555 ;;		On exit  : 0/0
  9556 ;;		Unchanged: 0/0
  9557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9560 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9561 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9562 ;;Total ram usage:        3 bytes
  9563 ;; Hardware stack levels used:    1
  9564 ;; Hardware stack levels required when called:    3
  9565 ;; This function calls:
  9566 ;;		Absolute function
  9567 ;;		_do_I2C_SEND_RESTART
  9568 ;;		_do_I2C_SEND_STOP
  9569 ;;		_i2c_restartWrite
  9570 ;;		_rd1RegCompleteHandler
  9571 ;;		_rd2RegCompleteHandler
  9572 ;;		_rdBlkRegCompleteHandler
  9573 ;;		_returnReset
  9574 ;;		_returnStop
  9575 ;;		_wr1RegCompleteHandler
  9576 ;;		_wr2RegCompleteHandler
  9577 ;; This function is called by:
  9578 ;;		_i2c_ISR
  9579 ;; This function uses a non-reentrant model
  9580 ;;
  9581                           
  9582                           
  9583                           ;psect for function _do_I2C_DO_ADDRESS_NACK
  9584  03EC                     _do_I2C_DO_ADDRESS_NACK:	
  9585  03EC                     i1l4115:	
  9586                           ;incstack = 0
  9587                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9588                           
  9589                           
  9590                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
  9591  03EC  0021               	movlb	1	; select bank1
  9592  03ED  11A0               	bcf	_i2c_status^(0+128),3
  9593  03EE                     i1l4117:	
  9594                           
  9595                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
  9596  03EE  3002               	movlw	2
  9597  03EF  00F0               	movwf	??_do_I2C_DO_ADDRESS_NACK
  9598  03F0  0870               	movf	??_do_I2C_DO_ADDRESS_NACK,w
  9599  03F1  00AA               	movwf	(_i2c_status^(0+128)+10)
  9600                           
  9601                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
  9602  03F2  2BFB               	goto	i1l4129
  9603  03F3                     i1l4119:	
  9604                           
  9605                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
  9606  03F3  3186  267E  3183   	fcall	_do_I2C_SEND_RESTART
  9607  03F6  2C18               	goto	i1l201
  9608  03F7                     i1l4123:	
  9609                           
  9610                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
  9611  03F7  3186  2679  3183   	fcall	_do_I2C_SEND_STOP
  9612  03FA  2C18               	goto	i1l201
  9613  03FB                     i1l4129:	
  9614  03FB  0839               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
  9615  03FC  00F0               	movwf	??_do_I2C_DO_ADDRESS_NACK
  9616  03FD  0870               	movf	??_do_I2C_DO_ADDRESS_NACK,w
  9617  03FE  0020               	movlb	0	; select bank0
  9618  03FF  00C1               	movwf	rdBlkRegCompleteHandler@p
  9619  0400  300F               	movlw	15
  9620  0401  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
  9621  0402  0086               	movwf	6
  9622  0403  0187               	clrf	7
  9623  0404  3F41               	moviw [1]fsr1
  9624  0405  008A               	movwf	10
  9625  0406  3F40               	moviw [0]fsr1
  9626  0407  000A               	callw
  9627  0408  3183               	pagesel	$
  9628  0409  00F1               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
  9629  040A  01F2               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
  9630                           
  9631                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9632                           ; Switch size 1, requested type "simple"
  9633                           ; Number of cases is 1, Range of values is 0 to 0
  9634                           ; switch strategies available:
  9635                           ; Name         Instructions Cycles
  9636                           ; simple_byte            4     3 (average)
  9637                           ; direct_byte            8     6 (fixed)
  9638                           ; jumptable            260     6 (fixed)
  9639                           ;	Chosen strategy is simple_byte
  9640  040B  0872               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
  9641  040C  3A00               	xorlw	0	; case 0
  9642  040D  1903               	skipnz
  9643  040E  2C10               	goto	i1l4755
  9644  040F  2BF7               	goto	i1l4123
  9645  0410                     i1l4755:	
  9646                           
  9647                           ; Switch size 1, requested type "simple"
  9648                           ; Number of cases is 2, Range of values is 2 to 3
  9649                           ; switch strategies available:
  9650                           ; Name         Instructions Cycles
  9651                           ; simple_byte            7     4 (average)
  9652                           ; direct_byte           13     9 (fixed)
  9653                           ; jumptable            263     9 (fixed)
  9654                           ;	Chosen strategy is simple_byte
  9655  0410  0871               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
  9656  0411  3A02               	xorlw	2	; case 2
  9657  0412  1903               	skipnz
  9658  0413  2BF3               	goto	i1l4119
  9659  0414  3A01               	xorlw	1	; case 3
  9660  0415  1903               	skipnz
  9661  0416  2BF3               	goto	i1l4119
  9662  0417  2BF7               	goto	i1l4123
  9663  0418                     i1l201:	
  9664  0418  0008               	return
  9665  0419                     __end_of_do_I2C_DO_ADDRESS_NACK:	
  9666                           
  9667                           	psect	text27
  9668  066A                     __ptext27:	
  9669 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
  9670 ;; Defined at:
  9671 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
  9672 ;; Parameters:    Size  Location     Type
  9673 ;;		None
  9674 ;; Auto vars:     Size  Location     Type
  9675 ;;		None
  9676 ;; Return value:  Size  Location     Type
  9677 ;;                  1    wreg      enum E12722
  9678 ;; Registers used:
  9679 ;;		wreg, status,2, status,0, pclath, cstack
  9680 ;; Tracked objects:
  9681 ;;		On entry : 0/0
  9682 ;;		On exit  : 0/0
  9683 ;;		Unchanged: 0/0
  9684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9689 ;;Total ram usage:        0 bytes
  9690 ;; Hardware stack levels used:    1
  9691 ;; Hardware stack levels required when called:    1
  9692 ;; This function calls:
  9693 ;;		_i2c1_driver_sendNACK
  9694 ;; This function is called by:
  9695 ;;		_do_I2C_RX
  9696 ;;		_i2c_ISR
  9697 ;; This function uses a non-reentrant model
  9698 ;;
  9699                           
  9700                           
  9701                           ;psect for function _do_I2C_DO_NACK_RESTART
  9702  066A                     _do_I2C_DO_NACK_RESTART:	
  9703  066A                     i1l3031:	
  9704                           ;incstack = 0
  9705                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  9706                           
  9707                           
  9708                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
  9709  066A  3186  269B  3186   	fcall	_i2c1_driver_sendNACK
  9710  066D                     i1l3033:	
  9711                           
  9712                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
  9713  066D  3009               	movlw	9
  9714  066E                     i1l195:	
  9715  066E  0008               	return
  9716  066F                     __end_of_do_I2C_DO_NACK_RESTART:	
  9717                           
  9718                           	psect	text28
  9719  066F                     __ptext28:	
  9720 ;; *************** function _do_I2C_DO_NACK_STOP *****************
  9721 ;; Defined at:
  9722 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
  9723 ;; Parameters:    Size  Location     Type
  9724 ;;		None
  9725 ;; Auto vars:     Size  Location     Type
  9726 ;;		None
  9727 ;; Return value:  Size  Location     Type
  9728 ;;                  1    wreg      enum E12722
  9729 ;; Registers used:
  9730 ;;		wreg, status,2, status,0, pclath, cstack
  9731 ;; Tracked objects:
  9732 ;;		On entry : 0/0
  9733 ;;		On exit  : 0/0
  9734 ;;		Unchanged: 0/0
  9735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9740 ;;Total ram usage:        0 bytes
  9741 ;; Hardware stack levels used:    1
  9742 ;; Hardware stack levels required when called:    1
  9743 ;; This function calls:
  9744 ;;		_i2c1_driver_sendNACK
  9745 ;; This function is called by:
  9746 ;;		_do_I2C_RX
  9747 ;;		_i2c_ISR
  9748 ;; This function uses a non-reentrant model
  9749 ;;
  9750                           
  9751                           
  9752                           ;psect for function _do_I2C_DO_NACK_STOP
  9753  066F                     _do_I2C_DO_NACK_STOP:	
  9754  066F                     i1l3025:	
  9755                           ;incstack = 0
  9756                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  9757                           
  9758                           
  9759                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
  9760  066F  3186  269B  3186   	fcall	_i2c1_driver_sendNACK
  9761  0672                     i1l3027:	
  9762                           
  9763                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
  9764  0672  300A               	movlw	10
  9765  0673                     i1l192:	
  9766  0673  0008               	return
  9767  0674                     __end_of_do_I2C_DO_NACK_STOP:	
  9768                           
  9769                           	psect	text29
  9770  0674                     __ptext29:	
  9771 ;; *************** function _do_I2C_DO_ACK *****************
  9772 ;; Defined at:
  9773 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
  9774 ;; Parameters:    Size  Location     Type
  9775 ;;		None
  9776 ;; Auto vars:     Size  Location     Type
  9777 ;;		None
  9778 ;; Return value:  Size  Location     Type
  9779 ;;                  1    wreg      enum E12722
  9780 ;; Registers used:
  9781 ;;		wreg, status,2, status,0, pclath, cstack
  9782 ;; Tracked objects:
  9783 ;;		On entry : 0/0
  9784 ;;		On exit  : 0/0
  9785 ;;		Unchanged: 0/0
  9786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9791 ;;Total ram usage:        0 bytes
  9792 ;; Hardware stack levels used:    1
  9793 ;; Hardware stack levels required when called:    1
  9794 ;; This function calls:
  9795 ;;		_i2c1_driver_sendACK
  9796 ;; This function is called by:
  9797 ;;		_i2c_ISR
  9798 ;; This function uses a non-reentrant model
  9799 ;;
  9800                           
  9801                           
  9802                           ;psect for function _do_I2C_DO_ACK
  9803  0674                     _do_I2C_DO_ACK:	
  9804  0674                     i1l3231:	
  9805                           ;incstack = 0
  9806                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
  9807                           
  9808                           
  9809                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
  9810  0674  3186  269F  3186   	fcall	_i2c1_driver_sendACK
  9811  0677                     i1l3233:	
  9812                           
  9813                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
  9814  0677  3005               	movlw	5
  9815  0678                     i1l189:	
  9816  0678  0008               	return
  9817  0679                     __end_of_do_I2C_DO_ACK:	
  9818                           
  9819                           	psect	text30
  9820  065D                     __ptext30:	
  9821 ;; *************** function _do_I2C_RCEN *****************
  9822 ;; Defined at:
  9823 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
  9824 ;; Parameters:    Size  Location     Type
  9825 ;;		None
  9826 ;; Auto vars:     Size  Location     Type
  9827 ;;		None
  9828 ;; Return value:  Size  Location     Type
  9829 ;;                  1    wreg      enum E12722
  9830 ;; Registers used:
  9831 ;;		wreg, status,2, status,0, pclath, cstack
  9832 ;; Tracked objects:
  9833 ;;		On entry : 0/0
  9834 ;;		On exit  : 0/0
  9835 ;;		Unchanged: 0/0
  9836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9841 ;;Total ram usage:        0 bytes
  9842 ;; Hardware stack levels used:    1
  9843 ;; Hardware stack levels required when called:    1
  9844 ;; This function calls:
  9845 ;;		_i2c1_driver_startRX
  9846 ;; This function is called by:
  9847 ;;		_i2c_ISR
  9848 ;; This function uses a non-reentrant model
  9849 ;;
  9850                           
  9851                           
  9852                           ;psect for function _do_I2C_RCEN
  9853  065D                     _do_I2C_RCEN:	
  9854  065D                     i1l3223:	
  9855                           ;incstack = 0
  9856                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
  9857                           
  9858                           
  9859                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
  9860  065D  0021               	movlb	1	; select bank1
  9861  065E  11A0               	bcf	_i2c_status^(0+128),3
  9862  065F                     i1l3225:	
  9863                           
  9864                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
  9865  065F  3186  26AF  3186   	fcall	_i2c1_driver_startRX
  9866  0662                     i1l3227:	
  9867                           
  9868                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
  9869  0662  3004               	movlw	4
  9870  0663                     i1l186:	
  9871  0663  0008               	return
  9872  0664                     __end_of_do_I2C_RCEN:	
  9873                           
  9874                           	psect	text31
  9875  063E                     __ptext31:	
  9876 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
  9877 ;; Defined at:
  9878 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
  9879 ;; Parameters:    Size  Location     Type
  9880 ;;		None
  9881 ;; Auto vars:     Size  Location     Type
  9882 ;;		None
  9883 ;; Return value:  Size  Location     Type
  9884 ;;                  1    wreg      enum E12722
  9885 ;; Registers used:
  9886 ;;		wreg, status,2, status,0, pclath, cstack
  9887 ;; Tracked objects:
  9888 ;;		On entry : 0/0
  9889 ;;		On exit  : 0/0
  9890 ;;		Unchanged: 0/0
  9891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9896 ;;Total ram usage:        0 bytes
  9897 ;; Hardware stack levels used:    1
  9898 ;; Hardware stack levels required when called:    1
  9899 ;; This function calls:
  9900 ;;		_i2c1_driver_TXData
  9901 ;; This function is called by:
  9902 ;;		_i2c_ISR
  9903 ;; This function uses a non-reentrant model
  9904 ;;
  9905                           
  9906                           
  9907                           ;psect for function _do_I2C_SEND_ADR_WRITE
  9908  063E                     _do_I2C_SEND_ADR_WRITE:	
  9909  063E                     i1l3215:	
  9910                           ;incstack = 0
  9911                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  9912                           
  9913                           
  9914                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
  9915  063E  0021               	movlb	1	; select bank1
  9916  063F  15A0               	bsf	_i2c_status^(0+128),3
  9917  0640                     i1l3217:	
  9918                           
  9919                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
  9920  0640  3521               	lslf	(_i2c_status^(0+128)+1),w
  9921  0641  3186  2692  3186   	fcall	_i2c1_driver_TXData
  9922  0644                     i1l3219:	
  9923                           
  9924                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
  9925  0644  3003               	movlw	3
  9926  0645                     i1l183:	
  9927  0645  0008               	return
  9928  0646                     __end_of_do_I2C_SEND_ADR_WRITE:	
  9929                           
  9930                           	psect	text32
  9931  0625                     __ptext32:	
  9932 ;; *************** function _do_I2C_SEND_ADR_READ *****************
  9933 ;; Defined at:
  9934 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
  9935 ;; Parameters:    Size  Location     Type
  9936 ;;		None
  9937 ;; Auto vars:     Size  Location     Type
  9938 ;;		None
  9939 ;; Return value:  Size  Location     Type
  9940 ;;                  1    wreg      enum E12722
  9941 ;; Registers used:
  9942 ;;		wreg, status,2, status,0, pclath, cstack
  9943 ;; Tracked objects:
  9944 ;;		On entry : 0/0
  9945 ;;		On exit  : 0/0
  9946 ;;		Unchanged: 0/0
  9947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9952 ;;Total ram usage:        0 bytes
  9953 ;; Hardware stack levels used:    1
  9954 ;; Hardware stack levels required when called:    1
  9955 ;; This function calls:
  9956 ;;		_i2c1_driver_TXData
  9957 ;; This function is called by:
  9958 ;;		_i2c_ISR
  9959 ;; This function uses a non-reentrant model
  9960 ;;
  9961                           
  9962                           
  9963                           ;psect for function _do_I2C_SEND_ADR_READ
  9964  0625                     _do_I2C_SEND_ADR_READ:	
  9965  0625                     i1l3207:	
  9966                           ;incstack = 0
  9967                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  9968                           
  9969                           
  9970                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
  9971  0625  0021               	movlb	1	; select bank1
  9972  0626  15A0               	bsf	_i2c_status^(0+128),3
  9973  0627                     i1l3209:	
  9974                           
  9975                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
  9976  0627  1403               	setc
  9977  0628  0D21               	rlf	(_i2c_status^(0+128)+1),w
  9978  0629  3186  2692  3186   	fcall	_i2c1_driver_TXData
  9979  062C                     i1l3211:	
  9980                           
  9981                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
  9982  062C  3005               	movlw	5
  9983  062D                     i1l180:	
  9984  062D  0008               	return
  9985  062E                     __end_of_do_I2C_SEND_ADR_READ:	
  9986                           
  9987                           	psect	text33
  9988  0679                     __ptext33:	
  9989 ;; *************** function _do_I2C_SEND_STOP *****************
  9990 ;; Defined at:
  9991 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
  9992 ;; Parameters:    Size  Location     Type
  9993 ;;		None
  9994 ;; Auto vars:     Size  Location     Type
  9995 ;;		None
  9996 ;; Return value:  Size  Location     Type
  9997 ;;                  1    wreg      enum E12722
  9998 ;; Registers used:
  9999 ;;		wreg, status,2, status,0, pclath, cstack
 10000 ;; Tracked objects:
 10001 ;;		On entry : 0/0
 10002 ;;		On exit  : 0/0
 10003 ;;		Unchanged: 0/0
 10004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10009 ;;Total ram usage:        0 bytes
 10010 ;; Hardware stack levels used:    1
 10011 ;; Hardware stack levels required when called:    1
 10012 ;; This function calls:
 10013 ;;		_i2c1_driver_stop
 10014 ;; This function is called by:
 10015 ;;		_do_I2C_DO_ADDRESS_NACK
 10016 ;;		_do_I2C_TX
 10017 ;;		_do_I2C_TX_EMPTY
 10018 ;;		_i2c_ISR
 10019 ;; This function uses a non-reentrant model
 10020 ;;
 10021                           
 10022                           
 10023                           ;psect for function _do_I2C_SEND_STOP
 10024  0679                     _do_I2C_SEND_STOP:	
 10025  0679                     i1l3013:	
 10026                           ;incstack = 0
 10027                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 10028                           
 10029                           
 10030                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
 10031  0679  3186  26B2  3186   	fcall	_i2c1_driver_stop
 10032  067C                     i1l3015:	
 10033                           
 10034                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
 10035  067C  3000               	movlw	0
 10036  067D                     i1l177:	
 10037  067D  0008               	return
 10038  067E                     __end_of_do_I2C_SEND_STOP:	
 10039                           
 10040                           	psect	text34
 10041  067E                     __ptext34:	
 10042 ;; *************** function _do_I2C_SEND_RESTART *****************
 10043 ;; Defined at:
 10044 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 10045 ;; Parameters:    Size  Location     Type
 10046 ;;		None
 10047 ;; Auto vars:     Size  Location     Type
 10048 ;;		None
 10049 ;; Return value:  Size  Location     Type
 10050 ;;                  1    wreg      enum E12722
 10051 ;; Registers used:
 10052 ;;		wreg, status,2, status,0, pclath, cstack
 10053 ;; Tracked objects:
 10054 ;;		On entry : 0/0
 10055 ;;		On exit  : 0/0
 10056 ;;		Unchanged: 0/0
 10057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10062 ;;Total ram usage:        0 bytes
 10063 ;; Hardware stack levels used:    1
 10064 ;; Hardware stack levels required when called:    1
 10065 ;; This function calls:
 10066 ;;		_i2c1_driver_restart
 10067 ;; This function is called by:
 10068 ;;		_do_I2C_DO_ADDRESS_NACK
 10069 ;;		_do_I2C_TX_EMPTY
 10070 ;;		_i2c_ISR
 10071 ;; This function uses a non-reentrant model
 10072 ;;
 10073                           
 10074                           
 10075                           ;psect for function _do_I2C_SEND_RESTART
 10076  067E                     _do_I2C_SEND_RESTART:	
 10077  067E                     i1l3007:	
 10078                           ;incstack = 0
 10079                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 10080                           
 10081                           
 10082                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
 10083  067E  3186  26B5  3186   	fcall	_i2c1_driver_restart
 10084  0681                     i1l3009:	
 10085                           
 10086                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
 10087  0681  3001               	movlw	1
 10088  0682                     i1l174:	
 10089  0682  0008               	return
 10090  0683                     __end_of_do_I2C_SEND_RESTART:	
 10091                           
 10092                           	psect	text35
 10093  0683                     __ptext35:	
 10094 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 10095 ;; Defined at:
 10096 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 10097 ;; Parameters:    Size  Location     Type
 10098 ;;		None
 10099 ;; Auto vars:     Size  Location     Type
 10100 ;;		None
 10101 ;; Return value:  Size  Location     Type
 10102 ;;                  1    wreg      enum E12722
 10103 ;; Registers used:
 10104 ;;		wreg, status,2, status,0, pclath, cstack
 10105 ;; Tracked objects:
 10106 ;;		On entry : 0/0
 10107 ;;		On exit  : 0/0
 10108 ;;		Unchanged: 0/0
 10109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10114 ;;Total ram usage:        0 bytes
 10115 ;; Hardware stack levels used:    1
 10116 ;; Hardware stack levels required when called:    1
 10117 ;; This function calls:
 10118 ;;		_i2c1_driver_restart
 10119 ;; This function is called by:
 10120 ;;		_do_I2C_TX
 10121 ;;		_i2c_ISR
 10122 ;; This function uses a non-reentrant model
 10123 ;;
 10124                           
 10125                           
 10126                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 10127  0683                     _do_I2C_SEND_RESTART_WRITE:	
 10128  0683                     i1l3001:	
 10129                           ;incstack = 0
 10130                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 10131                           
 10132                           
 10133                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
 10134  0683  3186  26B5  3186   	fcall	_i2c1_driver_restart
 10135  0686                     i1l3003:	
 10136                           
 10137                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
 10138  0686  3002               	movlw	2
 10139  0687                     i1l171:	
 10140  0687  0008               	return
 10141  0688                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 10142                           
 10143                           	psect	text36
 10144  0688                     __ptext36:	
 10145 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 10146 ;; Defined at:
 10147 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 10148 ;; Parameters:    Size  Location     Type
 10149 ;;		None
 10150 ;; Auto vars:     Size  Location     Type
 10151 ;;		None
 10152 ;; Return value:  Size  Location     Type
 10153 ;;                  1    wreg      enum E12722
 10154 ;; Registers used:
 10155 ;;		wreg, status,2, status,0, pclath, cstack
 10156 ;; Tracked objects:
 10157 ;;		On entry : 0/0
 10158 ;;		On exit  : 0/0
 10159 ;;		Unchanged: 0/0
 10160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10165 ;;Total ram usage:        0 bytes
 10166 ;; Hardware stack levels used:    1
 10167 ;; Hardware stack levels required when called:    1
 10168 ;; This function calls:
 10169 ;;		_i2c1_driver_restart
 10170 ;; This function is called by:
 10171 ;;		_do_I2C_TX
 10172 ;;		_i2c_ISR
 10173 ;; This function uses a non-reentrant model
 10174 ;;
 10175                           
 10176                           
 10177                           ;psect for function _do_I2C_SEND_RESTART_READ
 10178  0688                     _do_I2C_SEND_RESTART_READ:	
 10179  0688                     i1l2995:	
 10180                           ;incstack = 0
 10181                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 10182                           
 10183                           
 10184                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
 10185  0688  3186  26B5  3186   	fcall	_i2c1_driver_restart
 10186  068B                     i1l2997:	
 10187                           
 10188                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
 10189  068B  3001               	movlw	1
 10190  068C                     i1l168:	
 10191  068C  0008               	return
 10192  068D                     __end_of_do_I2C_SEND_RESTART_READ:	
 10193                           
 10194                           	psect	text37
 10195  068D                     __ptext37:	
 10196 ;; *************** function _do_I2C_IDLE *****************
 10197 ;; Defined at:
 10198 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 10199 ;; Parameters:    Size  Location     Type
 10200 ;;		None
 10201 ;; Auto vars:     Size  Location     Type
 10202 ;;		None
 10203 ;; Return value:  Size  Location     Type
 10204 ;;                  1    wreg      enum E12722
 10205 ;; Registers used:
 10206 ;;		wreg, status,2
 10207 ;; Tracked objects:
 10208 ;;		On entry : 0/0
 10209 ;;		On exit  : 0/0
 10210 ;;		Unchanged: 0/0
 10211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10216 ;;Total ram usage:        0 bytes
 10217 ;; Hardware stack levels used:    1
 10218 ;; This function calls:
 10219 ;;		Nothing
 10220 ;; This function is called by:
 10221 ;;		_i2c_ISR
 10222 ;; This function uses a non-reentrant model
 10223 ;;
 10224                           
 10225                           
 10226                           ;psect for function _do_I2C_IDLE
 10227  068D                     _do_I2C_IDLE:	
 10228  068D                     i1l3199:	
 10229                           ;incstack = 0
 10230                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 10231                           
 10232                           
 10233                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
 10234  068D  0021               	movlb	1	; select bank1
 10235  068E  1020               	bcf	_i2c_status^(0+128),0
 10236  068F                     i1l3201:	
 10237                           
 10238                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
 10239  068F  01AA               	clrf	(_i2c_status^(0+128)+10)
 10240  0690                     i1l3203:	
 10241                           
 10242                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
 10243  0690  300E               	movlw	14
 10244  0691                     i1l165:	
 10245  0691  0008               	return
 10246  0692                     __end_of_do_I2C_IDLE:	
 10247                           
 10248                           	psect	text38
 10249  0646                     __ptext38:	
 10250 ;; *************** function _do_I2C_RESET *****************
 10251 ;; Defined at:
 10252 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 10253 ;; Parameters:    Size  Location     Type
 10254 ;;		None
 10255 ;; Auto vars:     Size  Location     Type
 10256 ;;		None
 10257 ;; Return value:  Size  Location     Type
 10258 ;;                  1    wreg      enum E12722
 10259 ;; Registers used:
 10260 ;;		wreg, status,2, status,0, pclath, cstack
 10261 ;; Tracked objects:
 10262 ;;		On entry : 0/0
 10263 ;;		On exit  : 0/0
 10264 ;;		Unchanged: 0/0
 10265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10270 ;;Total ram usage:        0 bytes
 10271 ;; Hardware stack levels used:    1
 10272 ;; Hardware stack levels required when called:    1
 10273 ;; This function calls:
 10274 ;;		_i2c1_driver_resetBus
 10275 ;; This function is called by:
 10276 ;;		_i2c_ISR
 10277 ;; This function uses a non-reentrant model
 10278 ;;
 10279                           
 10280                           
 10281                           ;psect for function _do_I2C_RESET
 10282  0646                     _do_I2C_RESET:	
 10283  0646                     i1l3189:	
 10284                           ;incstack = 0
 10285                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 10286                           
 10287                           
 10288                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
 10289  0646  3186  26BE  3186   	fcall	_i2c1_driver_resetBus
 10290  0649                     i1l3191:	
 10291                           
 10292                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
 10293  0649  0021               	movlb	1	; select bank1
 10294  064A  1020               	bcf	_i2c_status^(0+128),0
 10295  064B                     i1l3193:	
 10296                           
 10297                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
 10298  064B  01AA               	clrf	(_i2c_status^(0+128)+10)
 10299  064C                     i1l3195:	
 10300                           
 10301                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
 10302  064C  300E               	movlw	14
 10303  064D                     i1l162:	
 10304  064D  0008               	return
 10305  064E                     __end_of_do_I2C_RESET:	
 10306                           
 10307                           	psect	text39
 10308  0389                     __ptext39:	
 10309 ;; *************** function _do_I2C_TX_EMPTY *****************
 10310 ;; Defined at:
 10311 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 10312 ;; Parameters:    Size  Location     Type
 10313 ;;		None
 10314 ;; Auto vars:     Size  Location     Type
 10315 ;;		None
 10316 ;; Return value:  Size  Location     Type
 10317 ;;                  1    wreg      enum E12722
 10318 ;; Registers used:
 10319 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10320 ;; Tracked objects:
 10321 ;;		On entry : 0/0
 10322 ;;		On exit  : 0/0
 10323 ;;		Unchanged: 0/0
 10324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10327 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10328 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10329 ;;Total ram usage:        3 bytes
 10330 ;; Hardware stack levels used:    1
 10331 ;; Hardware stack levels required when called:    3
 10332 ;; This function calls:
 10333 ;;		Absolute function
 10334 ;;		_do_I2C_SEND_RESTART
 10335 ;;		_do_I2C_SEND_STOP
 10336 ;;		_i2c_restartWrite
 10337 ;;		_mssp1_setIRQ
 10338 ;;		_rd1RegCompleteHandler
 10339 ;;		_rd2RegCompleteHandler
 10340 ;;		_rdBlkRegCompleteHandler
 10341 ;;		_returnReset
 10342 ;;		_returnStop
 10343 ;;		_wr1RegCompleteHandler
 10344 ;;		_wr2RegCompleteHandler
 10345 ;; This function is called by:
 10346 ;;		_i2c_ISR
 10347 ;; This function uses a non-reentrant model
 10348 ;;
 10349                           
 10350                           
 10351                           ;psect for function _do_I2C_TX_EMPTY
 10352  0389                     _do_I2C_TX_EMPTY:	
 10353  0389                     i1l4203:	
 10354                           ;incstack = 0
 10355                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10356                           
 10357                           
 10358                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
 10359  0389  0021               	movlb	1	; select bank1
 10360  038A  1520               	bsf	_i2c_status^(0+128),2
 10361                           
 10362                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 10363  038B  2B99               	goto	i1l4221
 10364  038C                     i1l4205:	
 10365                           
 10366                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
 10367  038C  3186  267E  3183   	fcall	_do_I2C_SEND_RESTART
 10368  038F  2BBC               	goto	i1l237
 10369  0390                     i1l4209:	
 10370                           
 10371                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
 10372  0390  3186  26A9  3183   	fcall	_mssp1_setIRQ
 10373  0393                     i1l4211:	
 10374                           
 10375                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
 10376  0393  3003               	movlw	3
 10377  0394  2BBC               	goto	i1l237
 10378  0395                     i1l4215:	
 10379                           
 10380                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
 10381  0395  3186  2679  3183   	fcall	_do_I2C_SEND_STOP
 10382  0398  2BBC               	goto	i1l237
 10383  0399                     i1l4221:	
 10384  0399  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 10385  039A  00F0               	movwf	??_do_I2C_TX_EMPTY
 10386  039B  0870               	movf	??_do_I2C_TX_EMPTY,w
 10387  039C  0020               	movlb	0	; select bank0
 10388  039D  00C1               	movwf	rdBlkRegCompleteHandler@p
 10389  039E  300B               	movlw	11
 10390  039F  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 10391  03A0  0086               	movwf	6
 10392  03A1  0187               	clrf	7
 10393  03A2  3F41               	moviw [1]fsr1
 10394  03A3  008A               	movwf	10
 10395  03A4  3F40               	moviw [0]fsr1
 10396  03A5  000A               	callw
 10397  03A6  3183               	pagesel	$
 10398  03A7  00F1               	movwf	??_do_I2C_TX_EMPTY+1
 10399  03A8  01F2               	clrf	??_do_I2C_TX_EMPTY+2
 10400                           
 10401                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10402                           ; Switch size 1, requested type "simple"
 10403                           ; Number of cases is 1, Range of values is 0 to 0
 10404                           ; switch strategies available:
 10405                           ; Name         Instructions Cycles
 10406                           ; simple_byte            4     3 (average)
 10407                           ; direct_byte            8     6 (fixed)
 10408                           ; jumptable            260     6 (fixed)
 10409                           ;	Chosen strategy is simple_byte
 10410  03A9  0872               	movf	??_do_I2C_TX_EMPTY+2,w
 10411  03AA  3A00               	xorlw	0	; case 0
 10412  03AB  1903               	skipnz
 10413  03AC  2BAE               	goto	i1l4757
 10414  03AD  2B95               	goto	i1l4215
 10415  03AE                     i1l4757:	
 10416                           
 10417                           ; Switch size 1, requested type "simple"
 10418                           ; Number of cases is 4, Range of values is 1 to 4
 10419                           ; switch strategies available:
 10420                           ; Name         Instructions Cycles
 10421                           ; simple_byte           13     7 (average)
 10422                           ; direct_byte           17     9 (fixed)
 10423                           ; jumptable            263     9 (fixed)
 10424                           ;	Chosen strategy is simple_byte
 10425  03AE  0871               	movf	??_do_I2C_TX_EMPTY+1,w
 10426  03AF  3A01               	xorlw	1	; case 1
 10427  03B0  1903               	skipnz
 10428  03B1  2B95               	goto	i1l4215
 10429  03B2  3A03               	xorlw	3	; case 2
 10430  03B3  1903               	skipnz
 10431  03B4  2B8C               	goto	i1l4205
 10432  03B5  3A01               	xorlw	1	; case 3
 10433  03B6  1903               	skipnz
 10434  03B7  2B8C               	goto	i1l4205
 10435  03B8  3A07               	xorlw	7	; case 4
 10436  03B9  1903               	skipnz
 10437  03BA  2B90               	goto	i1l4209
 10438  03BB  2B95               	goto	i1l4215
 10439  03BC                     i1l237:	
 10440  03BC  0008               	return
 10441  03BD                     __end_of_do_I2C_TX_EMPTY:	
 10442                           
 10443                           	psect	text40
 10444  06A9                     __ptext40:	
 10445 ;; *************** function _mssp1_setIRQ *****************
 10446 ;; Defined at:
 10447 ;;		line 59 in file "mcc_generated_files/i2c1_driver.c"
 10448 ;; Parameters:    Size  Location     Type
 10449 ;;		None
 10450 ;; Auto vars:     Size  Location     Type
 10451 ;;		None
 10452 ;; Return value:  Size  Location     Type
 10453 ;;                  1    wreg      void 
 10454 ;; Registers used:
 10455 ;;		None
 10456 ;; Tracked objects:
 10457 ;;		On entry : 0/0
 10458 ;;		On exit  : 0/0
 10459 ;;		Unchanged: 0/0
 10460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10465 ;;Total ram usage:        0 bytes
 10466 ;; Hardware stack levels used:    1
 10467 ;; This function calls:
 10468 ;;		Nothing
 10469 ;; This function is called by:
 10470 ;;		_do_I2C_TX_EMPTY
 10471 ;; This function uses a non-reentrant model
 10472 ;;
 10473                           
 10474                           
 10475                           ;psect for function _mssp1_setIRQ
 10476  06A9                     _mssp1_setIRQ:	
 10477  06A9                     i1l3045:	
 10478                           ;incstack = 0
 10479                           ; Regs used in _mssp1_setIRQ: []
 10480                           
 10481                           
 10482                           ;mcc_generated_files/i2c1_driver.c: 61:     else
 10483  06A9  002E               	movlb	14	; select bank14
 10484  06AA  140F               	bsf	15,0	;volatile
 10485  06AB                     i1l636:	
 10486  06AB  0008               	return
 10487  06AC                     __end_of_mssp1_setIRQ:	
 10488                           
 10489                           	psect	text41
 10490  064E                     __ptext41:	
 10491 ;; *************** function _i2c1_driver_isNACK *****************
 10492 ;; Defined at:
 10493 ;;		line 162 in file "mcc_generated_files/i2c1_driver.c"
 10494 ;; Parameters:    Size  Location     Type
 10495 ;;		None
 10496 ;; Auto vars:     Size  Location     Type
 10497 ;;		None
 10498 ;; Return value:  Size  Location     Type
 10499 ;;		None               void
 10500 ;; Registers used:
 10501 ;;		wreg, status,2, status,0
 10502 ;; Tracked objects:
 10503 ;;		On entry : 0/0
 10504 ;;		On exit  : 0/0
 10505 ;;		Unchanged: 0/0
 10506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10509 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10510 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10511 ;;Total ram usage:        1 bytes
 10512 ;; Hardware stack levels used:    1
 10513 ;; This function calls:
 10514 ;;		Nothing
 10515 ;; This function is called by:
 10516 ;;		_do_I2C_TX
 10517 ;;		_i2c_ISR
 10518 ;; This function uses a non-reentrant model
 10519 ;;
 10520                           
 10521                           
 10522                           ;psect for function _i2c1_driver_isNACK
 10523  064E                     _i2c1_driver_isNACK:	
 10524  064E                     i1l3037:	
 10525                           ;incstack = 0
 10526                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 10527                           
 10528                           
 10529                           ;mcc_generated_files/i2c1_driver.c: 164:     return SSP1CON2bits.ACKSTAT;
 10530  064E  0023               	movlb	3	; select bank3
 10531  064F  0E11               	swapf	17,w	;volatile
 10532  0650  0C89               	rrf	9,f
 10533  0651  0C89               	rrf	9,f
 10534  0652  3901               	andlw	1
 10535  0653  00F0               	movwf	??_i2c1_driver_isNACK
 10536  0654  0C70               	rrf	??_i2c1_driver_isNACK,w
 10537  0655                     i1l671:	
 10538  0655  0008               	return
 10539  0656                     __end_of_i2c1_driver_isNACK:	
 10540                           
 10541                           	psect	text42
 10542  0692                     __ptext42:	
 10543 ;; *************** function _i2c1_driver_TXData *****************
 10544 ;; Defined at:
 10545 ;;		line 187 in file "mcc_generated_files/i2c1_driver.c"
 10546 ;; Parameters:    Size  Location     Type
 10547 ;;  d               1    wreg     unsigned char 
 10548 ;; Auto vars:     Size  Location     Type
 10549 ;;  d               1    0[COMMON] unsigned char 
 10550 ;; Return value:  Size  Location     Type
 10551 ;;                  1    wreg      void 
 10552 ;; Registers used:
 10553 ;;		wreg
 10554 ;; Tracked objects:
 10555 ;;		On entry : 0/0
 10556 ;;		On exit  : 0/0
 10557 ;;		Unchanged: 0/0
 10558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10560 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10562 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10563 ;;Total ram usage:        1 bytes
 10564 ;; Hardware stack levels used:    1
 10565 ;; This function calls:
 10566 ;;		Nothing
 10567 ;; This function is called by:
 10568 ;;		_do_I2C_SEND_ADR_READ
 10569 ;;		_do_I2C_SEND_ADR_WRITE
 10570 ;;		_do_I2C_TX
 10571 ;; This function uses a non-reentrant model
 10572 ;;
 10573                           
 10574                           
 10575                           ;psect for function _i2c1_driver_TXData
 10576  0692                     _i2c1_driver_TXData:	
 10577                           
 10578                           ;incstack = 0
 10579                           ; Regs used in _i2c1_driver_TXData: [wreg]
 10580                           ;i2c1_driver_TXData@d stored from wreg
 10581  0692  00F0               	movwf	i2c1_driver_TXData@d
 10582  0693                     i1l3019:	
 10583                           
 10584                           ;mcc_generated_files/i2c1_driver.c: 187: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 188: {;mcc_generated_files/i2c1_driver.c: 18
      +                          9:     SSP1BUF = d;
 10585  0693  0870               	movf	i2c1_driver_TXData@d,w
 10586  0694  0023               	movlb	3	; select bank3
 10587  0695  008C               	movwf	12	;volatile
 10588  0696                     i1l686:	
 10589  0696  0008               	return
 10590  0697                     __end_of_i2c1_driver_TXData:	
 10591                           
 10592                           	psect	text43
 10593  06AC                     __ptext43:	
 10594 ;; *************** function _i2c1_driver_getRXData *****************
 10595 ;; Defined at:
 10596 ;;		line 172 in file "mcc_generated_files/i2c1_driver.c"
 10597 ;; Parameters:    Size  Location     Type
 10598 ;;		None
 10599 ;; Auto vars:     Size  Location     Type
 10600 ;;		None
 10601 ;; Return value:  Size  Location     Type
 10602 ;;                  1    wreg      unsigned char 
 10603 ;; Registers used:
 10604 ;;		wreg
 10605 ;; Tracked objects:
 10606 ;;		On entry : 0/0
 10607 ;;		On exit  : 0/0
 10608 ;;		Unchanged: 0/0
 10609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10614 ;;Total ram usage:        0 bytes
 10615 ;; Hardware stack levels used:    1
 10616 ;; This function calls:
 10617 ;;		Nothing
 10618 ;; This function is called by:
 10619 ;;		_do_I2C_RX
 10620 ;; This function uses a non-reentrant model
 10621 ;;
 10622                           
 10623                           
 10624                           ;psect for function _i2c1_driver_getRXData
 10625  06AC                     _i2c1_driver_getRXData:	
 10626  06AC                     i1l3041:	
 10627                           ;incstack = 0
 10628                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 10629                           
 10630                           
 10631                           ;mcc_generated_files/i2c1_driver.c: 174:     return SSP1BUF;
 10632  06AC  0023               	movlb	3	; select bank3
 10633  06AD  080C               	movf	12,w	;volatile
 10634  06AE                     i1l677:	
 10635  06AE  0008               	return
 10636  06AF                     __end_of_i2c1_driver_getRXData:	
 10637                           
 10638                           	psect	text44
 10639  069B                     __ptext44:	
 10640 ;; *************** function _i2c1_driver_sendNACK *****************
 10641 ;; Defined at:
 10642 ;;		line 203 in file "mcc_generated_files/i2c1_driver.c"
 10643 ;; Parameters:    Size  Location     Type
 10644 ;;		None
 10645 ;; Auto vars:     Size  Location     Type
 10646 ;;		None
 10647 ;; Return value:  Size  Location     Type
 10648 ;;                  1    wreg      void 
 10649 ;; Registers used:
 10650 ;;		None
 10651 ;; Tracked objects:
 10652 ;;		On entry : 0/0
 10653 ;;		On exit  : 0/0
 10654 ;;		Unchanged: 0/0
 10655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10660 ;;Total ram usage:        0 bytes
 10661 ;; Hardware stack levels used:    1
 10662 ;; This function calls:
 10663 ;;		Nothing
 10664 ;; This function is called by:
 10665 ;;		_do_I2C_DO_NACK_STOP
 10666 ;;		_do_I2C_DO_NACK_RESTART
 10667 ;; This function uses a non-reentrant model
 10668 ;;
 10669                           
 10670                           
 10671                           ;psect for function _i2c1_driver_sendNACK
 10672  069B                     _i2c1_driver_sendNACK:	
 10673  069B                     i1l2973:	
 10674                           ;incstack = 0
 10675                           ; Regs used in _i2c1_driver_sendNACK: []
 10676                           
 10677                           
 10678                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKDT = 1;
 10679  069B  0023               	movlb	3	; select bank3
 10680  069C  1691               	bsf	17,5	;volatile
 10681                           
 10682                           ;mcc_generated_files/i2c1_driver.c: 206:     SSP1CON2bits.ACKEN = 1;
 10683  069D  1611               	bsf	17,4	;volatile
 10684  069E                     i1l695:	
 10685  069E  0008               	return
 10686  069F                     __end_of_i2c1_driver_sendNACK:	
 10687                           
 10688                           	psect	text45
 10689  06BE                     __ptext45:	
 10690 ;; *************** function _i2c1_driver_resetBus *****************
 10691 ;; Defined at:
 10692 ;;		line 142 in file "mcc_generated_files/i2c1_driver.c"
 10693 ;; Parameters:    Size  Location     Type
 10694 ;;		None
 10695 ;; Auto vars:     Size  Location     Type
 10696 ;;		None
 10697 ;; Return value:  Size  Location     Type
 10698 ;;                  1    wreg      void 
 10699 ;; Registers used:
 10700 ;;		None
 10701 ;; Tracked objects:
 10702 ;;		On entry : 0/0
 10703 ;;		On exit  : 0/0
 10704 ;;		Unchanged: 0/0
 10705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10710 ;;Total ram usage:        0 bytes
 10711 ;; Hardware stack levels used:    1
 10712 ;; This function calls:
 10713 ;;		Nothing
 10714 ;; This function is called by:
 10715 ;;		_do_I2C_RESET
 10716 ;; This function uses a non-reentrant model
 10717 ;;
 10718                           
 10719                           
 10720                           ;psect for function _i2c1_driver_resetBus
 10721  06BE                     _i2c1_driver_resetBus:	
 10722  06BE                     i1l659:	
 10723                           ;incstack = 0
 10724                           ; Regs used in _i2c1_driver_resetBus: []
 10725                           
 10726  06BE  0008               	return
 10727  06BF                     __end_of_i2c1_driver_resetBus:	
 10728                           
 10729                           	psect	text46
 10730  06AF                     __ptext46:	
 10731 ;; *************** function _i2c1_driver_startRX *****************
 10732 ;; Defined at:
 10733 ;;		line 167 in file "mcc_generated_files/i2c1_driver.c"
 10734 ;; Parameters:    Size  Location     Type
 10735 ;;		None
 10736 ;; Auto vars:     Size  Location     Type
 10737 ;;		None
 10738 ;; Return value:  Size  Location     Type
 10739 ;;                  1    wreg      void 
 10740 ;; Registers used:
 10741 ;;		None
 10742 ;; Tracked objects:
 10743 ;;		On entry : 0/0
 10744 ;;		On exit  : 0/0
 10745 ;;		Unchanged: 0/0
 10746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10751 ;;Total ram usage:        0 bytes
 10752 ;; Hardware stack levels used:    1
 10753 ;; This function calls:
 10754 ;;		Nothing
 10755 ;; This function is called by:
 10756 ;;		_do_I2C_RCEN
 10757 ;; This function uses a non-reentrant model
 10758 ;;
 10759                           
 10760                           
 10761                           ;psect for function _i2c1_driver_startRX
 10762  06AF                     _i2c1_driver_startRX:	
 10763  06AF                     i1l3021:	
 10764                           ;incstack = 0
 10765                           ; Regs used in _i2c1_driver_startRX: []
 10766                           
 10767                           
 10768                           ;mcc_generated_files/i2c1_driver.c: 169:     SSP1CON2bits.RCEN = 1;
 10769  06AF  0023               	movlb	3	; select bank3
 10770  06B0  1591               	bsf	17,3	;volatile
 10771  06B1                     i1l674:	
 10772  06B1  0008               	return
 10773  06B2                     __end_of_i2c1_driver_startRX:	
 10774                           
 10775                           	psect	text47
 10776  04ED                     __ptext47:	
 10777 ;; *************** function _rdBlkRegCompleteHandler *****************
 10778 ;; Defined at:
 10779 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10780 ;; Parameters:    Size  Location     Type
 10781 ;;  p               1    1[BANK0 ] PTR void 
 10782 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10783 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10784 ;; Auto vars:     Size  Location     Type
 10785 ;;		None
 10786 ;; Return value:  Size  Location     Type
 10787 ;;                  1    wreg      enum E358
 10788 ;; Registers used:
 10789 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10790 ;; Tracked objects:
 10791 ;;		On entry : 0/0
 10792 ;;		On exit  : 0/0
 10793 ;;		Unchanged: 0/0
 10794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10795 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10798 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10799 ;;Total ram usage:        1 bytes
 10800 ;; Hardware stack levels used:    1
 10801 ;; Hardware stack levels required when called:    2
 10802 ;; This function calls:
 10803 ;;		_i2c_setBuffer
 10804 ;;		_i2c_setDataCompleteCallback
 10805 ;; This function is called by:
 10806 ;;		_i2c_readDataBlock
 10807 ;;		_do_I2C_DO_ADDRESS_NACK
 10808 ;;		_do_I2C_TX
 10809 ;;		_do_I2C_RX
 10810 ;;		_do_I2C_TX_EMPTY
 10811 ;; This function uses a non-reentrant model
 10812 ;;
 10813                           
 10814                           
 10815                           ;psect for function _rdBlkRegCompleteHandler
 10816  04ED                     _rdBlkRegCompleteHandler:	
 10817  04ED                     i1l4063:	
 10818                           ;incstack = 0
 10819                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 10820                           
 10821                           
 10822                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
 10823  04ED  0020               	movlb	0	; select bank0
 10824  04EE  0841               	movf	rdBlkRegCompleteHandler@p,w
 10825  04EF  0086               	movwf	6
 10826  04F0  0187               	clrf	7
 10827  04F1  3F40               	moviw [0]fsr1
 10828  04F2  00F0               	movwf	i2c_setBuffer@bufferSize
 10829  04F3  3F41               	moviw [1]fsr1
 10830  04F4  00F1               	movwf	i2c_setBuffer@bufferSize+1
 10831  04F5  0841               	movf	rdBlkRegCompleteHandler@p,w
 10832  04F6  3E02               	addlw	2
 10833  04F7  0086               	movwf	6
 10834  04F8  0187               	clrf	7
 10835  04F9  0801               	movf	1,w
 10836  04FA  3185  25BA  3184   	fcall	_i2c_setBuffer
 10837                           
 10838                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 10839  04FD  3000               	movlw	0
 10840  04FE  00F5               	movwf	i2c_setDataCompleteCallback@cb
 10841  04FF  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 10842  0500  01F7               	clrf	i2c_setDataCompleteCallback@p
 10843  0501  3185  25D9  3184   	fcall	_i2c_setDataCompleteCallback
 10844  0504                     i1l4065:	
 10845                           
 10846                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
 10847  0504  3002               	movlw	2
 10848  0505                     i1l340:	
 10849  0505  0008               	return
 10850  0506                     __end_of_rdBlkRegCompleteHandler:	
 10851                           
 10852                           	psect	text48
 10853  0561                     __ptext48:	
 10854 ;; *************** function _rd2RegCompleteHandler *****************
 10855 ;; Defined at:
 10856 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10857 ;; Parameters:    Size  Location     Type
 10858 ;;  p               1    1[BANK0 ] PTR void 
 10859 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10860 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10861 ;; Auto vars:     Size  Location     Type
 10862 ;;		None
 10863 ;; Return value:  Size  Location     Type
 10864 ;;                  1    wreg      enum E358
 10865 ;; Registers used:
 10866 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10867 ;; Tracked objects:
 10868 ;;		On entry : 0/0
 10869 ;;		On exit  : 0/0
 10870 ;;		Unchanged: 0/0
 10871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10872 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10875 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10876 ;;Total ram usage:        1 bytes
 10877 ;; Hardware stack levels used:    1
 10878 ;; Hardware stack levels required when called:    2
 10879 ;; This function calls:
 10880 ;;		_i2c_setBuffer
 10881 ;;		_i2c_setDataCompleteCallback
 10882 ;; This function is called by:
 10883 ;;		_i2c_read2ByteRegister
 10884 ;;		_do_I2C_DO_ADDRESS_NACK
 10885 ;;		_do_I2C_TX
 10886 ;;		_do_I2C_RX
 10887 ;;		_do_I2C_TX_EMPTY
 10888 ;; This function uses a non-reentrant model
 10889 ;;
 10890                           
 10891                           
 10892                           ;psect for function _rd2RegCompleteHandler
 10893  0561                     _rd2RegCompleteHandler:	
 10894  0561                     i1l4047:	
 10895                           ;incstack = 0
 10896                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10897                           
 10898                           
 10899                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
 10900  0561  3002               	movlw	2
 10901  0562  00F0               	movwf	i2c_setBuffer@bufferSize
 10902  0563  3000               	movlw	0
 10903  0564  00F1               	movwf	i2c_setBuffer@bufferSize+1
 10904  0565  0020               	movlb	0	; select bank0
 10905  0566  0841               	movf	rd2RegCompleteHandler@p,w
 10906  0567  3185  25BA  3185   	fcall	_i2c_setBuffer
 10907  056A                     i1l4049:	
 10908                           
 10909                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 10910  056A  3000               	movlw	0
 10911  056B  00F5               	movwf	i2c_setDataCompleteCallback@cb
 10912  056C  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 10913  056D  01F7               	clrf	i2c_setDataCompleteCallback@p
 10914  056E  3185  25D9  3185   	fcall	_i2c_setDataCompleteCallback
 10915  0571                     i1l4051:	
 10916                           
 10917                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
 10918  0571  3002               	movlw	2
 10919  0572                     i1l316:	
 10920  0572  0008               	return
 10921  0573                     __end_of_rd2RegCompleteHandler:	
 10922                           
 10923                           	psect	text49
 10924  0573                     __ptext49:	
 10925 ;; *************** function _rd1RegCompleteHandler *****************
 10926 ;; Defined at:
 10927 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10928 ;; Parameters:    Size  Location     Type
 10929 ;;  p               1    1[BANK0 ] PTR void 
 10930 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10931 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10932 ;; Auto vars:     Size  Location     Type
 10933 ;;		None
 10934 ;; Return value:  Size  Location     Type
 10935 ;;                  1    wreg      enum E358
 10936 ;; Registers used:
 10937 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10938 ;; Tracked objects:
 10939 ;;		On entry : 0/0
 10940 ;;		On exit  : 0/0
 10941 ;;		Unchanged: 0/0
 10942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10943 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10946 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10947 ;;Total ram usage:        1 bytes
 10948 ;; Hardware stack levels used:    1
 10949 ;; Hardware stack levels required when called:    2
 10950 ;; This function calls:
 10951 ;;		_i2c_setBuffer
 10952 ;;		_i2c_setDataCompleteCallback
 10953 ;; This function is called by:
 10954 ;;		_i2c_read1ByteRegister
 10955 ;;		_do_I2C_DO_ADDRESS_NACK
 10956 ;;		_do_I2C_TX
 10957 ;;		_do_I2C_RX
 10958 ;;		_do_I2C_TX_EMPTY
 10959 ;; This function uses a non-reentrant model
 10960 ;;
 10961                           
 10962                           
 10963                           ;psect for function _rd1RegCompleteHandler
 10964  0573                     _rd1RegCompleteHandler:	
 10965  0573                     i1l4039:	
 10966                           ;incstack = 0
 10967                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10968                           
 10969                           
 10970                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
 10971  0573  3001               	movlw	1
 10972  0574  00F0               	movwf	i2c_setBuffer@bufferSize
 10973  0575  3000               	movlw	0
 10974  0576  00F1               	movwf	i2c_setBuffer@bufferSize+1
 10975  0577  0020               	movlb	0	; select bank0
 10976  0578  0841               	movf	rd1RegCompleteHandler@p,w
 10977  0579  3185  25BA  3185   	fcall	_i2c_setBuffer
 10978  057C                     i1l4041:	
 10979                           
 10980                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 10981  057C  3000               	movlw	0
 10982  057D  00F5               	movwf	i2c_setDataCompleteCallback@cb
 10983  057E  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 10984  057F  01F7               	clrf	i2c_setDataCompleteCallback@p
 10985  0580  3185  25D9  3185   	fcall	_i2c_setDataCompleteCallback
 10986  0583                     i1l4043:	
 10987                           
 10988                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
 10989  0583  3002               	movlw	2
 10990  0584                     i1l301:	
 10991  0584  0008               	return
 10992  0585                     __end_of_rd1RegCompleteHandler:	
 10993                           
 10994                           	psect	text50
 10995  0585                     __ptext50:	
 10996 ;; *************** function _wr1RegCompleteHandler *****************
 10997 ;; Defined at:
 10998 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10999 ;; Parameters:    Size  Location     Type
 11000 ;;  p               1    1[BANK0 ] PTR void 
 11001 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 11002 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 11003 ;; Auto vars:     Size  Location     Type
 11004 ;;		None
 11005 ;; Return value:  Size  Location     Type
 11006 ;;                  1    wreg      enum E358
 11007 ;; Registers used:
 11008 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11009 ;; Tracked objects:
 11010 ;;		On entry : 0/0
 11011 ;;		On exit  : 0/0
 11012 ;;		Unchanged: 0/0
 11013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11014 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11017 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11018 ;;Total ram usage:        1 bytes
 11019 ;; Hardware stack levels used:    1
 11020 ;; Hardware stack levels required when called:    2
 11021 ;; This function calls:
 11022 ;;		_i2c_setBuffer
 11023 ;;		_i2c_setDataCompleteCallback
 11024 ;; This function is called by:
 11025 ;;		_i2c_write1ByteRegister
 11026 ;;		_do_I2C_DO_ADDRESS_NACK
 11027 ;;		_do_I2C_TX
 11028 ;;		_do_I2C_RX
 11029 ;;		_do_I2C_TX_EMPTY
 11030 ;; This function uses a non-reentrant model
 11031 ;;
 11032                           
 11033                           
 11034                           ;psect for function _wr1RegCompleteHandler
 11035  0585                     _wr1RegCompleteHandler:	
 11036  0585                     i1l4031:	
 11037                           ;incstack = 0
 11038                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 11039                           
 11040                           
 11041                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
 11042  0585  3001               	movlw	1
 11043  0586  00F0               	movwf	i2c_setBuffer@bufferSize
 11044  0587  3000               	movlw	0
 11045  0588  00F1               	movwf	i2c_setBuffer@bufferSize+1
 11046  0589  0020               	movlb	0	; select bank0
 11047  058A  0841               	movf	wr1RegCompleteHandler@p,w
 11048  058B  3185  25BA  3185   	fcall	_i2c_setBuffer
 11049  058E                     i1l4033:	
 11050                           
 11051                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 11052  058E  3000               	movlw	0
 11053  058F  00F5               	movwf	i2c_setDataCompleteCallback@cb
 11054  0590  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 11055  0591  01F7               	clrf	i2c_setDataCompleteCallback@p
 11056  0592  3185  25D9  3185   	fcall	_i2c_setDataCompleteCallback
 11057  0595                     i1l4035:	
 11058                           
 11059                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
 11060  0595  3004               	movlw	4
 11061  0596                     i1l280:	
 11062  0596  0008               	return
 11063  0597                     __end_of_wr1RegCompleteHandler:	
 11064                           
 11065                           	psect	text51
 11066  06B8                     __ptext51:	
 11067 ;; *************** function _i2c_restartWrite *****************
 11068 ;; Defined at:
 11069 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 11070 ;; Parameters:    Size  Location     Type
 11071 ;;  p               1    1[BANK0 ] PTR void 
 11072 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 11073 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 11074 ;; Auto vars:     Size  Location     Type
 11075 ;;		None
 11076 ;; Return value:  Size  Location     Type
 11077 ;;                  1    wreg      enum E358
 11078 ;; Registers used:
 11079 ;;		wreg
 11080 ;; Tracked objects:
 11081 ;;		On entry : 0/0
 11082 ;;		On exit  : 0/0
 11083 ;;		Unchanged: 0/0
 11084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11085 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11088 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11089 ;;Total ram usage:        1 bytes
 11090 ;; Hardware stack levels used:    1
 11091 ;; This function calls:
 11092 ;;		Nothing
 11093 ;; This function is called by:
 11094 ;;		_i2c_write1ByteRegister
 11095 ;;		_i2c_writeNBytes
 11096 ;;		_i2c_read1ByteRegister
 11097 ;;		_i2c_read2ByteRegister
 11098 ;;		_i2c_write2ByteRegister
 11099 ;;		_i2c_readDataBlock
 11100 ;;		_do_I2C_DO_ADDRESS_NACK
 11101 ;;		_do_I2C_TX
 11102 ;;		_do_I2C_RX
 11103 ;;		_do_I2C_TX_EMPTY
 11104 ;; This function uses a non-reentrant model
 11105 ;;
 11106                           
 11107                           
 11108                           ;psect for function _i2c_restartWrite
 11109  06B8                     _i2c_restartWrite:	
 11110  06B8                     i1l4069:	
 11111                           ;incstack = 0
 11112                           ; Regs used in _i2c_restartWrite: [wreg]
 11113                           
 11114                           
 11115                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
 11116  06B8  3003               	movlw	3
 11117  06B9                     i1l367:	
 11118  06B9  0008               	return
 11119  06BA                     __end_of_i2c_restartWrite:	
 11120                           
 11121                           	psect	text52
 11122  06BA                     __ptext52:	
 11123 ;; *************** function _returnReset *****************
 11124 ;; Defined at:
 11125 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 11126 ;; Parameters:    Size  Location     Type
 11127 ;;  p               1    1[BANK0 ] PTR void 
 11128 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 11129 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 11130 ;; Auto vars:     Size  Location     Type
 11131 ;;		None
 11132 ;; Return value:  Size  Location     Type
 11133 ;;                  1    wreg      enum E12568
 11134 ;; Registers used:
 11135 ;;		wreg
 11136 ;; Tracked objects:
 11137 ;;		On entry : 0/0
 11138 ;;		On exit  : 0/0
 11139 ;;		Unchanged: 0/0
 11140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11141 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11144 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11145 ;;Total ram usage:        1 bytes
 11146 ;; Hardware stack levels used:    1
 11147 ;; This function calls:
 11148 ;;		Nothing
 11149 ;; This function is called by:
 11150 ;;		_i2c_open
 11151 ;;		_do_I2C_DO_ADDRESS_NACK
 11152 ;;		_do_I2C_TX
 11153 ;;		_do_I2C_RX
 11154 ;;		_do_I2C_TX_EMPTY
 11155 ;; This function uses a non-reentrant model
 11156 ;;
 11157                           
 11158                           
 11159                           ;psect for function _returnReset
 11160  06BA                     _returnReset:	
 11161  06BA                     i1l4027:	
 11162                           ;incstack = 0
 11163                           ; Regs used in _returnReset: [wreg]
 11164                           
 11165                           
 11166                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 11167  06BA  3005               	movlw	5
 11168  06BB                     i1l256:	
 11169  06BB  0008               	return
 11170  06BC                     __end_of_returnReset:	
 11171                           
 11172                           	psect	text53
 11173  06BC                     __ptext53:	
 11174 ;; *************** function _returnStop *****************
 11175 ;; Defined at:
 11176 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 11177 ;; Parameters:    Size  Location     Type
 11178 ;;  p               1    1[BANK0 ] PTR void 
 11179 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 11180 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 11181 ;; Auto vars:     Size  Location     Type
 11182 ;;		None
 11183 ;; Return value:  Size  Location     Type
 11184 ;;                  1    wreg      enum E12568
 11185 ;; Registers used:
 11186 ;;		wreg
 11187 ;; Tracked objects:
 11188 ;;		On entry : 0/0
 11189 ;;		On exit  : 0/0
 11190 ;;		Unchanged: 0/0
 11191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11192 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11195 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11196 ;;Total ram usage:        1 bytes
 11197 ;; Hardware stack levels used:    1
 11198 ;; This function calls:
 11199 ;;		Nothing
 11200 ;; This function is called by:
 11201 ;;		_setCallBack
 11202 ;;		_i2c_open
 11203 ;;		_do_I2C_DO_ADDRESS_NACK
 11204 ;;		_do_I2C_TX
 11205 ;;		_do_I2C_RX
 11206 ;;		_do_I2C_TX_EMPTY
 11207 ;; This function uses a non-reentrant model
 11208 ;;
 11209                           
 11210                           
 11211                           ;psect for function _returnStop
 11212  06BC                     _returnStop:	
 11213  06BC                     i1l4023:	
 11214                           ;incstack = 0
 11215                           ; Regs used in _returnStop: [wreg]
 11216                           
 11217                           
 11218                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
 11219  06BC  3001               	movlw	1
 11220  06BD                     i1l253:	
 11221  06BD  0008               	return
 11222  06BE                     __end_of_returnStop:	
 11223                           
 11224                           	psect	text54
 11225  0597                     __ptext54:	
 11226 ;; *************** function _wr2RegCompleteHandler *****************
 11227 ;; Defined at:
 11228 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 11229 ;; Parameters:    Size  Location     Type
 11230 ;;  p               1    1[BANK0 ] PTR void 
 11231 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 11232 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 11233 ;; Auto vars:     Size  Location     Type
 11234 ;;		None
 11235 ;; Return value:  Size  Location     Type
 11236 ;;                  1    wreg      enum E358
 11237 ;; Registers used:
 11238 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11239 ;; Tracked objects:
 11240 ;;		On entry : 0/0
 11241 ;;		On exit  : 0/0
 11242 ;;		Unchanged: 0/0
 11243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11244 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11247 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11248 ;;Total ram usage:        1 bytes
 11249 ;; Hardware stack levels used:    1
 11250 ;; Hardware stack levels required when called:    2
 11251 ;; This function calls:
 11252 ;;		_i2c_setBuffer
 11253 ;;		_i2c_setDataCompleteCallback
 11254 ;; This function is called by:
 11255 ;;		_i2c_write2ByteRegister
 11256 ;;		_do_I2C_DO_ADDRESS_NACK
 11257 ;;		_do_I2C_TX
 11258 ;;		_do_I2C_RX
 11259 ;;		_do_I2C_TX_EMPTY
 11260 ;; This function uses a non-reentrant model
 11261 ;;
 11262                           
 11263                           
 11264                           ;psect for function _wr2RegCompleteHandler
 11265  0597                     _wr2RegCompleteHandler:	
 11266  0597                     i1l4055:	
 11267                           ;incstack = 0
 11268                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 11269                           
 11270                           
 11271                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
 11272  0597  3002               	movlw	2
 11273  0598  00F0               	movwf	i2c_setBuffer@bufferSize
 11274  0599  3000               	movlw	0
 11275  059A  00F1               	movwf	i2c_setBuffer@bufferSize+1
 11276  059B  0020               	movlb	0	; select bank0
 11277  059C  0841               	movf	wr2RegCompleteHandler@p,w
 11278  059D  3185  25BA  3185   	fcall	_i2c_setBuffer
 11279  05A0                     i1l4057:	
 11280                           
 11281                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 11282  05A0  3000               	movlw	0
 11283  05A1  00F5               	movwf	i2c_setDataCompleteCallback@cb
 11284  05A2  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 11285  05A3  01F7               	clrf	i2c_setDataCompleteCallback@p
 11286  05A4  3185  25D9  3185   	fcall	_i2c_setDataCompleteCallback
 11287  05A7                     i1l4059:	
 11288                           
 11289                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
 11290  05A7  3004               	movlw	4
 11291  05A8                     i1l328:	
 11292  05A8  0008               	return
 11293  05A9                     __end_of_wr2RegCompleteHandler:	
 11294                           
 11295                           	psect	text55
 11296  05D9                     __ptext55:	
 11297 ;; *************** function _i2c_setDataCompleteCallback *****************
 11298 ;; Defined at:
 11299 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 11300 ;; Parameters:    Size  Location     Type
 11301 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 11302 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 11303 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 11304 ;;  p               1    7[COMMON] PTR void 
 11305 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 11306 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 11307 ;; Auto vars:     Size  Location     Type
 11308 ;;		None
 11309 ;; Return value:  Size  Location     Type
 11310 ;;                  1    wreg      void 
 11311 ;; Registers used:
 11312 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11313 ;; Tracked objects:
 11314 ;;		On entry : 0/0
 11315 ;;		On exit  : 0/0
 11316 ;;		Unchanged: 0/0
 11317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11318 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11320 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11321 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11322 ;;Total ram usage:        4 bytes
 11323 ;; Hardware stack levels used:    1
 11324 ;; Hardware stack levels required when called:    1
 11325 ;; This function calls:
 11326 ;;		_setCallBack
 11327 ;; This function is called by:
 11328 ;;		_wr1RegCompleteHandler
 11329 ;;		_rd1RegCompleteHandler
 11330 ;;		_rd2RegCompleteHandler
 11331 ;;		_wr2RegCompleteHandler
 11332 ;;		_rdBlkRegCompleteHandler
 11333 ;;		_i2c_write1ByteRegister
 11334 ;;		_i2c_read1ByteRegister
 11335 ;;		_i2c_read2ByteRegister
 11336 ;;		_i2c_write2ByteRegister
 11337 ;;		_i2c_readDataBlock
 11338 ;; This function uses a non-reentrant model
 11339 ;;
 11340                           
 11341                           
 11342                           ;psect for function _i2c_setDataCompleteCallback
 11343  05D9                     _i2c_setDataCompleteCallback:	
 11344  05D9                     i1l4013:	
 11345                           ;incstack = 0
 11346                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 11347                           
 11348                           
 11349                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
 11350  05D9  0876               	movf	i2c_setDataCompleteCallback@cb+1,w
 11351  05DA  00F1               	movwf	setCallBack@cb+1
 11352  05DB  0875               	movf	i2c_setDataCompleteCallback@cb,w
 11353  05DC  00F0               	movwf	setCallBack@cb
 11354  05DD  0877               	movf	i2c_setDataCompleteCallback@p,w
 11355  05DE  0020               	movlb	0	; select bank0
 11356  05DF  00C0               	movwf	??_i2c_setDataCompleteCallback
 11357  05E0  0840               	movf	??_i2c_setDataCompleteCallback,w
 11358  05E1  00F2               	movwf	setCallBack@p
 11359  05E2  3000               	movlw	0
 11360  05E3  3184  2443  3185   	fcall	_setCallBack
 11361  05E6                     i1l110:	
 11362  05E6  0008               	return
 11363  05E7                     __end_of_i2c_setDataCompleteCallback:	
 11364                           
 11365                           	psect	text56
 11366  0443                     __ptext56:	
 11367 ;; *************** function _setCallBack *****************
 11368 ;; Defined at:
 11369 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 11370 ;; Parameters:    Size  Location     Type
 11371 ;;  idx             1    wreg     enum E12740
 11372 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 11373 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 11374 ;;		 -> i2c_restartWrite(1), wr1RegCompleteHandler(1), Absolute function(1), 
 11375 ;;  p               1    2[COMMON] PTR void 
 11376 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 11377 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 11378 ;; Auto vars:     Size  Location     Type
 11379 ;;  idx             1    4[COMMON] enum E12740
 11380 ;; Return value:  Size  Location     Type
 11381 ;;                  1    wreg      void 
 11382 ;; Registers used:
 11383 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11384 ;; Tracked objects:
 11385 ;;		On entry : 0/0
 11386 ;;		On exit  : 0/0
 11387 ;;		Unchanged: 0/0
 11388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11389 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11390 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11391 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11392 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11393 ;;Total ram usage:        5 bytes
 11394 ;; Hardware stack levels used:    1
 11395 ;; This function calls:
 11396 ;;		Nothing
 11397 ;; This function is called by:
 11398 ;;		_i2c_setDataCompleteCallback
 11399 ;;		_i2c_setWriteCollisionCallback
 11400 ;;		_i2c_setAddressNACKCallback
 11401 ;;		_i2c_setDataNACKCallback
 11402 ;;		_i2c_setTimeOutCallback
 11403 ;; This function uses a non-reentrant model
 11404 ;;
 11405                           
 11406                           
 11407                           ;psect for function _setCallBack
 11408  0443                     _setCallBack:	
 11409                           
 11410                           ;incstack = 0
 11411                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 11412                           ;setCallBack@idx stored from wreg
 11413  0443  00F4               	movwf	setCallBack@idx
 11414  0444                     i1l4007:	
 11415                           
 11416                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
 11417  0444  0870               	movf	setCallBack@cb,w
 11418  0445  0471               	iorwf	setCallBack@cb+1,w
 11419  0446  1903               	btfsc	3,2
 11420  0447  2C49               	goto	u195_21
 11421  0448  2C4A               	goto	u195_20
 11422  0449                     u195_21:	
 11423  0449  2C5B               	goto	i1l4011
 11424  044A                     u195_20:	
 11425  044A                     i1l4009:	
 11426                           
 11427                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
 11428  044A  3574               	lslf	setCallBack@idx,w
 11429  044B  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 11430  044C  0086               	movwf	6
 11431  044D  0187               	clrf	7
 11432  044E  0870               	movf	setCallBack@cb,w
 11433  044F  3FC0               	movwi [0]fsr1
 11434  0450  0871               	movf	setCallBack@cb+1,w
 11435  0451  3FC1               	movwi [1]fsr1
 11436                           
 11437                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
 11438  0452  0872               	movf	setCallBack@p,w
 11439  0453  00F3               	movwf	??_setCallBack
 11440  0454  0874               	movf	setCallBack@idx,w
 11441  0455  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 11442  0456  0086               	movwf	6
 11443  0457  0187               	clrf	7
 11444  0458  0873               	movf	??_setCallBack,w
 11445  0459  0081               	movwf	1
 11446                           
 11447                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
 11448  045A  2C68               	goto	i1l261
 11449  045B                     i1l4011:	
 11450                           
 11451                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
 11452  045B  3574               	lslf	setCallBack@idx,w
 11453  045C  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 11454  045D  0086               	movwf	6
 11455  045E  0187               	clrf	7
 11456  045F  30BC               	movlw	low _returnStop
 11457  0460  3FC0               	movwi [0]fsr1
 11458  0461  3006               	movlw	high _returnStop
 11459  0462  3FC1               	movwi [1]fsr1
 11460                           
 11461                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
 11462  0463  0874               	movf	setCallBack@idx,w
 11463  0464  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 11464  0465  0086               	movwf	6
 11465  0466  0187               	clrf	7
 11466  0467  0181               	clrf	1
 11467  0468                     i1l261:	
 11468  0468  0008               	return
 11469  0469                     __end_of_setCallBack:	
 11470                           
 11471                           	psect	text57
 11472  05BA                     __ptext57:	
 11473 ;; *************** function _i2c_setBuffer *****************
 11474 ;; Defined at:
 11475 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 11476 ;; Parameters:    Size  Location     Type
 11477 ;;  buffer          1    wreg     PTR void 
 11478 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 11479 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 11480 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 11481 ;;  bufferSize      2    0[COMMON] unsigned int 
 11482 ;; Auto vars:     Size  Location     Type
 11483 ;;  buffer          1    3[COMMON] PTR void 
 11484 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 11485 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 11486 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 11487 ;; Return value:  Size  Location     Type
 11488 ;;                  1    wreg      void 
 11489 ;; Registers used:
 11490 ;;		wreg
 11491 ;; Tracked objects:
 11492 ;;		On entry : 0/0
 11493 ;;		On exit  : 0/0
 11494 ;;		Unchanged: 0/0
 11495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11496 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11497 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11498 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11499 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11500 ;;Total ram usage:        4 bytes
 11501 ;; Hardware stack levels used:    1
 11502 ;; This function calls:
 11503 ;;		Nothing
 11504 ;; This function is called by:
 11505 ;;		_wr1RegCompleteHandler
 11506 ;;		_rd1RegCompleteHandler
 11507 ;;		_rd2RegCompleteHandler
 11508 ;;		_wr2RegCompleteHandler
 11509 ;;		_rdBlkRegCompleteHandler
 11510 ;;		_i2c_write1ByteRegister
 11511 ;;		_i2c_writeNBytes
 11512 ;;		_i2c_read1ByteRegister
 11513 ;;		_i2c_read2ByteRegister
 11514 ;;		_i2c_write2ByteRegister
 11515 ;;		_i2c_readDataBlock
 11516 ;;		_i2c_readNBytes
 11517 ;; This function uses a non-reentrant model
 11518 ;;
 11519                           
 11520                           
 11521                           ;psect for function _i2c_setBuffer
 11522  05BA                     _i2c_setBuffer:	
 11523                           
 11524                           ;incstack = 0
 11525                           ; Regs used in _i2c_setBuffer: [wreg]
 11526                           ;i2c_setBuffer@buffer stored from wreg
 11527  05BA  00F3               	movwf	i2c_setBuffer@buffer
 11528  05BB                     i1l2963:	
 11529                           
 11530                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
 11531  05BB  0021               	movlb	1	; select bank1
 11532  05BC  1D20               	btfss	_i2c_status^(0+128),2
 11533  05BD  2DBF               	goto	u120_21
 11534  05BE  2DC0               	goto	u120_20
 11535  05BF                     u120_21:	
 11536  05BF  2DC9               	goto	i1l140
 11537  05C0                     u120_20:	
 11538  05C0                     i1l2965:	
 11539                           
 11540                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
 11541  05C0  0873               	movf	i2c_setBuffer@buffer,w
 11542  05C1  00F2               	movwf	??_i2c_setBuffer
 11543  05C2  0872               	movf	??_i2c_setBuffer,w
 11544  05C3  00A2               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 11545                           
 11546                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
 11547  05C4  0871               	movf	i2c_setBuffer@bufferSize+1,w
 11548  05C5  00A4               	movwf	((_i2c_status+1)^(0+128)+3)
 11549  05C6  0870               	movf	i2c_setBuffer@bufferSize,w
 11550  05C7  00A3               	movwf	(_i2c_status^(0+128)+3)
 11551  05C8                     i1l2967:	
 11552                           
 11553                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
 11554  05C8  1120               	bcf	_i2c_status^(0+128),2
 11555  05C9                     i1l140:	
 11556  05C9  0008               	return
 11557  05CA                     __end_of_i2c_setBuffer:	
 11558                           
 11559                           	psect	text58
 11560  06B2                     __ptext58:	
 11561 ;; *************** function _i2c1_driver_stop *****************
 11562 ;; Defined at:
 11563 ;;		line 157 in file "mcc_generated_files/i2c1_driver.c"
 11564 ;; Parameters:    Size  Location     Type
 11565 ;;		None
 11566 ;; Auto vars:     Size  Location     Type
 11567 ;;		None
 11568 ;; Return value:  Size  Location     Type
 11569 ;;                  1    wreg      void 
 11570 ;; Registers used:
 11571 ;;		None
 11572 ;; Tracked objects:
 11573 ;;		On entry : 0/0
 11574 ;;		On exit  : 0/0
 11575 ;;		Unchanged: 0/0
 11576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11581 ;;Total ram usage:        0 bytes
 11582 ;; Hardware stack levels used:    1
 11583 ;; This function calls:
 11584 ;;		Nothing
 11585 ;; This function is called by:
 11586 ;;		_do_I2C_SEND_STOP
 11587 ;; This function uses a non-reentrant model
 11588 ;;
 11589                           
 11590                           
 11591                           ;psect for function _i2c1_driver_stop
 11592  06B2                     _i2c1_driver_stop:	
 11593  06B2                     i1l2971:	
 11594                           ;incstack = 0
 11595                           ; Regs used in _i2c1_driver_stop: []
 11596                           
 11597                           
 11598                           ;mcc_generated_files/i2c1_driver.c: 159:     SSP1CON2bits.PEN = 1;
 11599  06B2  0023               	movlb	3	; select bank3
 11600  06B3  1511               	bsf	17,2	;volatile
 11601  06B4                     i1l668:	
 11602  06B4  0008               	return
 11603  06B5                     __end_of_i2c1_driver_stop:	
 11604                           
 11605                           	psect	text59
 11606  06B5                     __ptext59:	
 11607 ;; *************** function _i2c1_driver_restart *****************
 11608 ;; Defined at:
 11609 ;;		line 152 in file "mcc_generated_files/i2c1_driver.c"
 11610 ;; Parameters:    Size  Location     Type
 11611 ;;		None
 11612 ;; Auto vars:     Size  Location     Type
 11613 ;;		None
 11614 ;; Return value:  Size  Location     Type
 11615 ;;                  1    wreg      void 
 11616 ;; Registers used:
 11617 ;;		None
 11618 ;; Tracked objects:
 11619 ;;		On entry : 0/0
 11620 ;;		On exit  : 0/0
 11621 ;;		Unchanged: 0/0
 11622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11627 ;;Total ram usage:        0 bytes
 11628 ;; Hardware stack levels used:    1
 11629 ;; This function calls:
 11630 ;;		Nothing
 11631 ;; This function is called by:
 11632 ;;		_do_I2C_SEND_RESTART_READ
 11633 ;;		_do_I2C_SEND_RESTART_WRITE
 11634 ;;		_do_I2C_SEND_RESTART
 11635 ;; This function uses a non-reentrant model
 11636 ;;
 11637                           
 11638                           
 11639                           ;psect for function _i2c1_driver_restart
 11640  06B5                     _i2c1_driver_restart:	
 11641  06B5                     i1l2969:	
 11642                           ;incstack = 0
 11643                           ; Regs used in _i2c1_driver_restart: []
 11644                           
 11645                           
 11646                           ;mcc_generated_files/i2c1_driver.c: 154:     SSP1CON2bits.RSEN = 1;
 11647  06B5  0023               	movlb	3	; select bank3
 11648  06B6  1491               	bsf	17,1	;volatile
 11649  06B7                     i1l665:	
 11650  06B7  0008               	return
 11651  06B8                     __end_of_i2c1_driver_restart:	
 11652                           
 11653                           	psect	text60
 11654  069F                     __ptext60:	
 11655 ;; *************** function _i2c1_driver_sendACK *****************
 11656 ;; Defined at:
 11657 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
 11658 ;; Parameters:    Size  Location     Type
 11659 ;;		None
 11660 ;; Auto vars:     Size  Location     Type
 11661 ;;		None
 11662 ;; Return value:  Size  Location     Type
 11663 ;;                  1    wreg      void 
 11664 ;; Registers used:
 11665 ;;		None
 11666 ;; Tracked objects:
 11667 ;;		On entry : 0/0
 11668 ;;		On exit  : 0/0
 11669 ;;		Unchanged: 0/0
 11670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11675 ;;Total ram usage:        0 bytes
 11676 ;; Hardware stack levels used:    1
 11677 ;; This function calls:
 11678 ;;		Nothing
 11679 ;; This function is called by:
 11680 ;;		_do_I2C_DO_ACK
 11681 ;;		_do_I2C_RX
 11682 ;; This function uses a non-reentrant model
 11683 ;;
 11684                           
 11685                           
 11686                           ;psect for function _i2c1_driver_sendACK
 11687  069F                     _i2c1_driver_sendACK:	
 11688  069F                     i1l3023:	
 11689                           ;incstack = 0
 11690                           ; Regs used in _i2c1_driver_sendACK: []
 11691                           
 11692                           
 11693                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKDT = 0;
 11694  069F  0023               	movlb	3	; select bank3
 11695  06A0  1291               	bcf	17,5	;volatile
 11696                           
 11697                           ;mcc_generated_files/i2c1_driver.c: 200:     SSP1CON2bits.ACKEN = 1;
 11698  06A1  1611               	bsf	17,4	;volatile
 11699  06A2                     i1l692:	
 11700  06A2  0008               	return
 11701  06A3                     __end_of_i2c1_driver_sendACK:	
 11702                           
 11703                           	psect	text61
 11704  054B                     __ptext61:	
 11705 ;; *************** function _TMR1_ISR *****************
 11706 ;; Defined at:
 11707 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 11708 ;; Parameters:    Size  Location     Type
 11709 ;;		None
 11710 ;; Auto vars:     Size  Location     Type
 11711 ;;		None
 11712 ;; Return value:  Size  Location     Type
 11713 ;;                  1    wreg      void 
 11714 ;; Registers used:
 11715 ;;		wreg, status,2, status,0, pclath, cstack
 11716 ;; Tracked objects:
 11717 ;;		On entry : 0/0
 11718 ;;		On exit  : 0/0
 11719 ;;		Unchanged: 0/0
 11720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11725 ;;Total ram usage:        0 bytes
 11726 ;; Hardware stack levels used:    1
 11727 ;; Hardware stack levels required when called:    2
 11728 ;; This function calls:
 11729 ;;		Absolute function
 11730 ;;		_TMR1_DefaultInterruptHandler
 11731 ;;		_TMR1_WriteTimer
 11732 ;;		_h_clock
 11733 ;; This function is called by:
 11734 ;;		_INTERRUPT_InterruptManager
 11735 ;; This function uses a non-reentrant model
 11736 ;;
 11737                           
 11738                           
 11739                           ;psect for function _TMR1_ISR
 11740  054B                     _TMR1_ISR:	
 11741  054B                     i1l3583:	
 11742                           ;incstack = 0
 11743                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 11744                           
 11745                           
 11746                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 11747  054B  002E               	movlb	14	; select bank14
 11748  054C  1010               	bcf	16,0	;volatile
 11749  054D                     i1l3585:	
 11750                           
 11751                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 11752  054D  0879               	movf	_timer1ReloadVal+1,w	;volatile
 11753  054E  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 11754  054F  0878               	movf	_timer1ReloadVal,w	;volatile
 11755  0550  00F0               	movwf	TMR1_WriteTimer@timerVal
 11756  0551  3185  25A9  3185   	fcall	_TMR1_WriteTimer
 11757  0554                     i1l3587:	
 11758                           
 11759                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 11760  0554  0020               	movlb	0	; select bank0
 11761  0555  082D               	movf	_TMR1_InterruptHandler,w
 11762  0556  042E               	iorwf	_TMR1_InterruptHandler+1,w
 11763  0557  1903               	btfsc	3,2
 11764  0558  2D5A               	goto	u153_21
 11765  0559  2D5B               	goto	u153_20
 11766  055A                     u153_21:	
 11767  055A  2D60               	goto	i1l428
 11768  055B                     u153_20:	
 11769  055B                     i1l3589:	
 11770                           
 11771                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 11772  055B  082E               	movf	_TMR1_InterruptHandler+1,w
 11773  055C  008A               	movwf	10
 11774  055D  082D               	movf	_TMR1_InterruptHandler,w
 11775  055E  000A               	callw
 11776  055F  3185               	pagesel	$
 11777  0560                     i1l428:	
 11778  0560  0008               	return
 11779  0561                     __end_of_TMR1_ISR:	
 11780                           
 11781                           	psect	text62
 11782  06BF                     __ptext62:	
 11783 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 11784 ;; Defined at:
 11785 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 11786 ;; Parameters:    Size  Location     Type
 11787 ;;		None
 11788 ;; Auto vars:     Size  Location     Type
 11789 ;;		None
 11790 ;; Return value:  Size  Location     Type
 11791 ;;                  1    wreg      void 
 11792 ;; Registers used:
 11793 ;;		None
 11794 ;; Tracked objects:
 11795 ;;		On entry : 0/0
 11796 ;;		On exit  : 0/0
 11797 ;;		Unchanged: 0/0
 11798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11803 ;;Total ram usage:        0 bytes
 11804 ;; Hardware stack levels used:    1
 11805 ;; This function calls:
 11806 ;;		Nothing
 11807 ;; This function is called by:
 11808 ;;		_TMR1_Initialize
 11809 ;;		_TMR1_ISR
 11810 ;; This function uses a non-reentrant model
 11811 ;;
 11812                           
 11813                           
 11814                           ;psect for function _TMR1_DefaultInterruptHandler
 11815  06BF                     _TMR1_DefaultInterruptHandler:	
 11816  06BF                     i1l434:	
 11817                           ;incstack = 0
 11818                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 11819                           
 11820  06BF  0008               	return
 11821  06C0                     __end_of_TMR1_DefaultInterruptHandler:	
 11822                           
 11823                           	psect	text63
 11824  051E                     __ptext63:	
 11825 ;; *************** function _h_clock *****************
 11826 ;; Defined at:
 11827 ;;		line 29 in file "main.c"
 11828 ;; Parameters:    Size  Location     Type
 11829 ;;		None
 11830 ;; Auto vars:     Size  Location     Type
 11831 ;;		None
 11832 ;; Return value:  Size  Location     Type
 11833 ;;                  1    wreg      void 
 11834 ;; Registers used:
 11835 ;;		wreg, status,2, status,0, pclath, cstack
 11836 ;; Tracked objects:
 11837 ;;		On entry : 0/0
 11838 ;;		On exit  : 0/0
 11839 ;;		Unchanged: 0/0
 11840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11845 ;;Total ram usage:        0 bytes
 11846 ;; Hardware stack levels used:    1
 11847 ;; Hardware stack levels required when called:    1
 11848 ;; This function calls:
 11849 ;;		_update_clock
 11850 ;; This function is called by:
 11851 ;;		_main
 11852 ;;		_TMR1_ISR
 11853 ;; This function uses a non-reentrant model
 11854 ;;
 11855                           
 11856                           
 11857                           ;psect for function _h_clock
 11858  051E                     _h_clock:	
 11859  051E                     i1l829:	
 11860                           ;incstack = 0
 11861                           ; Regs used in _h_clock: [wreg+status,2+status,0+pclath+cstack]
 11862                           ;main.c: 30:     do { LATAbits.LATA7 = ~LATAbits.LATA7; } while(0);
 11863                           
 11864  051E                     i1l3447:	
 11865  051E  1003               	clrc
 11866  051F  0020               	movlb	0	; select bank0
 11867  0520  1F96               	btfss	22,7	;volatile
 11868  0521  1403               	setc
 11869  0522  1803               	btfsc	3,0
 11870  0523  2D25               	goto	u140_21
 11871  0524  2D28               	goto	u140_20
 11872  0525                     u140_21:	
 11873  0525  0020               	movlb	0	; select bank0
 11874  0526  1796               	bsf	22,7	;volatile
 11875  0527  2D2A               	goto	u141_24
 11876  0528                     u140_20:	
 11877  0528  0020               	movlb	0	; select bank0
 11878  0529  1396               	bcf	22,7	;volatile
 11879  052A                     u141_24:	
 11880  052A                     i1l3449:	
 11881                           
 11882                           ;main.c: 31:     if(!half) {
 11883  052A  197C               	btfsc	_half/(0+8),_half& (0+7)	;volatile
 11884  052B  2D2D               	goto	u142_21
 11885  052C  2D2E               	goto	u142_20
 11886  052D                     u142_21:	
 11887  052D  2D33               	goto	i1l831
 11888  052E                     u142_20:	
 11889  052E                     i1l3451:	
 11890                           
 11891                           ;main.c: 32:         update_clock();
 11892  052E  3184  248D  3185   	fcall	_update_clock
 11893  0531                     i1l3453:	
 11894                           
 11895                           ;main.c: 33:         half = 1;
 11896  0531  157C               	bsf	_half/(0+8),_half& (0+7)	;volatile
 11897                           
 11898                           ;main.c: 34:     }
 11899  0532  2D34               	goto	i1l833
 11900  0533                     i1l831:	
 11901                           ;main.c: 35:     else {
 11902                           
 11903                           
 11904                           ;main.c: 36:         half = 0;
 11905  0533  117C               	bcf	_half/(0+8),_half& (0+7)	;volatile
 11906  0534                     i1l833:	
 11907  0534  0008               	return
 11908  0535                     __end_of_h_clock:	
 11909                           
 11910                           	psect	text64
 11911  048D                     __ptext64:	
 11912 ;; *************** function _update_clock *****************
 11913 ;; Defined at:
 11914 ;;		line 270 in file "main.c"
 11915 ;; Parameters:    Size  Location     Type
 11916 ;;		None
 11917 ;; Auto vars:     Size  Location     Type
 11918 ;;		None
 11919 ;; Return value:  Size  Location     Type
 11920 ;;                  1    wreg      void 
 11921 ;; Registers used:
 11922 ;;		wreg, status,2, status,0
 11923 ;; Tracked objects:
 11924 ;;		On entry : 0/0
 11925 ;;		On exit  : 0/0
 11926 ;;		Unchanged: 0/0
 11927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11930 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11931 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11932 ;;Total ram usage:        1 bytes
 11933 ;; Hardware stack levels used:    1
 11934 ;; This function calls:
 11935 ;;		Nothing
 11936 ;; This function is called by:
 11937 ;;		_h_clock
 11938 ;; This function uses a non-reentrant model
 11939 ;;
 11940                           
 11941                           
 11942                           ;psect for function _update_clock
 11943  048D                     _update_clock:	
 11944  048D                     i1l3119:	
 11945                           ;incstack = 0
 11946                           ; Regs used in _update_clock: [wreg+status,2+status,0]
 11947                           
 11948                           
 11949                           ;main.c: 271:     seg++;
 11950  048D  3001               	movlw	1
 11951  048E  00F0               	movwf	??_update_clock
 11952  048F  0870               	movf	??_update_clock,w
 11953  0490  0020               	movlb	0	; select bank0
 11954  0491  07BB               	addwf	_seg,f	;volatile
 11955                           
 11956                           ;main.c: 272:     last5s++;
 11957  0492  3001               	movlw	1
 11958  0493  00F0               	movwf	??_update_clock
 11959  0494  0870               	movf	??_update_clock,w
 11960  0495  07B9               	addwf	_last5s,f	;volatile
 11961  0496                     i1l3121:	
 11962                           
 11963                           ;main.c: 273:     if(seg >= 60) {
 11964  0496  303C               	movlw	60
 11965  0497  023B               	subwf	_seg,w	;volatile
 11966  0498  1C03               	skipc
 11967  0499  2C9B               	goto	u125_21
 11968  049A  2C9C               	goto	u125_20
 11969  049B                     u125_21:	
 11970  049B  2CB0               	goto	i1l950
 11971  049C                     u125_20:	
 11972  049C                     i1l3123:	
 11973                           
 11974                           ;main.c: 274:         clkm++;
 11975  049C  3001               	movlw	1
 11976  049D  00F0               	movwf	??_update_clock
 11977  049E  0870               	movf	??_update_clock,w
 11978  049F  07BD               	addwf	_clkm,f	;volatile
 11979                           
 11980                           ;main.c: 275:         last1m++;
 11981  04A0  3001               	movlw	1
 11982  04A1  00F0               	movwf	??_update_clock
 11983  04A2  0870               	movf	??_update_clock,w
 11984  04A3  07B8               	addwf	_last1m,f	;volatile
 11985  04A4                     i1l3125:	
 11986                           
 11987                           ;main.c: 276:         seg = 0;
 11988  04A4  01BB               	clrf	_seg	;volatile
 11989  04A5                     i1l3127:	
 11990                           
 11991                           ;main.c: 277:         if(clkm >= 60) {
 11992  04A5  303C               	movlw	60
 11993  04A6  023D               	subwf	_clkm,w	;volatile
 11994  04A7  1C03               	skipc
 11995  04A8  2CAA               	goto	u126_21
 11996  04A9  2CAB               	goto	u126_20
 11997  04AA                     u126_21:	
 11998  04AA  2CB0               	goto	i1l950
 11999  04AB                     u126_20:	
 12000  04AB                     i1l3129:	
 12001                           
 12002                           ;main.c: 278:             clkh++;
 12003  04AB  3001               	movlw	1
 12004  04AC  00F0               	movwf	??_update_clock
 12005  04AD  0870               	movf	??_update_clock,w
 12006  04AE  07BF               	addwf	_clkh,f	;volatile
 12007  04AF                     i1l3131:	
 12008                           
 12009                           ;main.c: 279:             clkm = 0;
 12010  04AF  01BD               	clrf	_clkm	;volatile
 12011  04B0                     i1l950:	
 12012  04B0  0008               	return
 12013  04B1                     __end_of_update_clock:	
 12014                           
 12015                           	psect	text65
 12016  05A9                     __ptext65:	
 12017 ;; *************** function _TMR1_WriteTimer *****************
 12018 ;; Defined at:
 12019 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 12020 ;; Parameters:    Size  Location     Type
 12021 ;;  timerVal        2    0[COMMON] unsigned short 
 12022 ;; Auto vars:     Size  Location     Type
 12023 ;;		None
 12024 ;; Return value:  Size  Location     Type
 12025 ;;                  1    wreg      void 
 12026 ;; Registers used:
 12027 ;;		wreg, status,2
 12028 ;; Tracked objects:
 12029 ;;		On entry : 0/0
 12030 ;;		On exit  : 0/0
 12031 ;;		Unchanged: 0/0
 12032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12033 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12036 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12037 ;;Total ram usage:        2 bytes
 12038 ;; Hardware stack levels used:    1
 12039 ;; This function calls:
 12040 ;;		Nothing
 12041 ;; This function is called by:
 12042 ;;		_TMR1_ISR
 12043 ;;		_TMR1_Reload
 12044 ;; This function uses a non-reentrant model
 12045 ;;
 12046                           
 12047                           
 12048                           ;psect for function _TMR1_WriteTimer
 12049  05A9                     _TMR1_WriteTimer:	
 12050  05A9                     i1l3371:	
 12051                           ;incstack = 0
 12052                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 12053                           
 12054                           
 12055                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 12056  05A9  0024               	movlb	4	; select bank4
 12057  05AA  1D0E               	btfss	14,2	;volatile
 12058  05AB  2DAD               	goto	u139_21
 12059  05AC  2DAE               	goto	u139_20
 12060  05AD                     u139_21:	
 12061  05AD  2DB5               	goto	i1l3381
 12062  05AE                     u139_20:	
 12063  05AE                     i1l3373:	
 12064                           
 12065                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 12066  05AE  100E               	bcf	14,0	;volatile
 12067  05AF                     i1l3375:	
 12068                           
 12069                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 12070  05AF  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 12071  05B0  008D               	movwf	13	;volatile
 12072  05B1                     i1l3377:	
 12073                           
 12074                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 12075  05B1  0870               	movf	TMR1_WriteTimer@timerVal,w
 12076  05B2  008C               	movwf	12	;volatile
 12077  05B3                     i1l3379:	
 12078                           
 12079                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 12080  05B3  140E               	bsf	14,0	;volatile
 12081                           
 12082                           ;mcc_generated_files/tmr1.c: 140:     }
 12083  05B4  2DB9               	goto	i1l415
 12084  05B5                     i1l3381:	
 12085                           
 12086                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 12087  05B5  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 12088  05B6  008D               	movwf	13	;volatile
 12089  05B7                     i1l3383:	
 12090                           
 12091                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 12092  05B7  0870               	movf	TMR1_WriteTimer@timerVal,w
 12093  05B8  008C               	movwf	12	;volatile
 12094  05B9                     i1l415:	
 12095  05B9  0008               	return
 12096  05BA                     __end_of_TMR1_WriteTimer:	
 12097  007E                     btemp	set	126	;btemp
 12098  007E                     int$flags	set	126
 12099  007E                     wtemp0	set	126
>>>>>>> 8a784acfeed5fb28f801f16fe528231cbb0c7541


Data Sizes:
    Strings     0
    Constant    32
<<<<<<< HEAD
    Data        0
    BSS         54
    Persistent  32
=======
    Data        7
    BSS         70
    Persistent  36
>>>>>>> 8a784acfeed5fb28f801f16fe528231cbb0c7541
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
<<<<<<< HEAD
    COMMON           14      7      14
    BANK0            80     16      64
    BANK1            80      0       0
=======
    COMMON           14      7      13
    BANK0            80     24      67
    BANK1            80      0      29
>>>>>>> 8a784acfeed5fb28f801f16fe528231cbb0c7541
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           58      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

<<<<<<< HEAD
    do_I2C_TX$2620$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$2626	const PTR FTN()enum E12722 size(2) Largest target is 1
=======
    do_I2C_TX$2635$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$2641	const PTR FTN()enum E12722 size(2) Largest target is 1
>>>>>>> 8a784acfeed5fb28f801f16fe528231cbb0c7541
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

<<<<<<< HEAD
    do_I2C_TX$2625	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$2620	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
=======
    do_I2C_TX$2640	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$2635	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
>>>>>>> 8a784acfeed5fb28f801f16fe528231cbb0c7541
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), wr1RegCompleteHandler(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S422$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

<<<<<<< HEAD
=======
    __ctoee@addr	PTR eeprom void  size(1) Largest target is 5
		 -> recovery_data(EEDATA[5]), 

    __eetoc@addr	PTR eeprom void  size(1) Largest target is 5
		 -> recovery_data(EEDATA[5]), 

    __memcpyee@to	PTR eeprom unsigned char  size(1) Largest target is 5
		 -> recovery_data(EEDATA[5]), 

    __memcpyee@from	PTR const unsigned char  size(1) Largest target is 8
		 -> __fltoee@data(COMMON[4]), __fttoee@data(COMMON[4]), __otoee@data(COMMON[8]), __ltoee@data(COMMON[4]), 
		 -> __mtoee@data(COMMON[3]), __itoee@data(COMMON[2]), __ctoee@data(BANK0[1]), 

    __memcpyee@ptr	PTR const unsigned char  size(1) Largest target is 8
		 -> __fltoee@data(COMMON[4]), __fttoee@data(COMMON[4]), __otoee@data(COMMON[8]), __ltoee@data(COMMON[4]), 
		 -> __mtoee@data(COMMON[3]), __itoee@data(COMMON[2]), __ctoee@data(BANK0[1]), 

    __eecpymem@from	PTR eeprom unsigned char  size(1) Largest target is 5
		 -> recovery_data(EEDATA[5]), 

    __eecpymem@to	PTR volatile unsigned char  size(1) Largest target is 8
		 -> __eetofl@data(COMMON[4]), __eetoft@data(COMMON[4]), __eetoo@data(COMMON[8]), __eetol@data(COMMON[4]), 
		 -> __eetom@data(COMMON[3]), __eetoi@data(COMMON[2]), __eetoc@data(BANK0[1]), 

    __eecpymem@cp	PTR volatile unsigned char  size(1) Largest target is 8
		 -> __eetofl@data(COMMON[4]), __eetoft@data(COMMON[4]), __eetoo@data(COMMON[8]), __eetol@data(COMMON[4]), 
		 -> __eetom@data(COMMON[3]), __eetoi@data(COMMON[2]), __eetoc@data(BANK0[1]), 

    Push_ring_buffer@reg	PTR unsigned char  size(1) Largest target is 5
		 -> main@data(BANK0[5]), 

    ptr_read_buff	PTR unsigned char  size(2) Largest target is 150
		 -> buffer(BIGRAM[150]), NULL(NULL[0]), 

    ptr_write_buff	PTR unsigned char  size(2) Largest target is 150
		 -> buffer(BIGRAM[150]), NULL(NULL[0]), 

    Store_EEPROM@ptr_buffer_r	PTR unsigned char  size(2) Largest target is 150
		 -> buffer(BIGRAM[150]), NULL(NULL[0]), 

>>>>>>> 8a784acfeed5fb28f801f16fe528231cbb0c7541
    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> h_clock(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> h_clock(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S743$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), wr1RegCompleteHandler(), Absolute function(), 

    fsmStateTable	const PTR FTN()enum E12722[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S422$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S422$callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), wr1RegCompleteHandler(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), wr1RegCompleteHandler(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    S422$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_i2c_ISR
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c1_driver_TXData
    _do_I2C_TX->_i2c1_driver_isNACK
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _TMR1_ISR->_TMR1_WriteTimer
    _h_clock->_update_clock

Critical Paths under _main in BANK0

<<<<<<< HEAD
    _main->_push_ring
    _main->_reset_recv
    _reset_recv->_DATAEE_WriteByte
    _read_ring->___bmul
    _push_ring->_DATAEE_WriteByte
    _cksum_w->_DATAEE_WriteByte
    _cksum->_DATAEE_ReadByte
    _DATAEE_WriteByte->_cksum
=======
    _main->_Push_ring_buffer
    _read_ring->___bmul
    _cksum_w->___ctoee
    _cksum->___eetoc
    ___eetoc->___eecpymem
    ___ctoee->_cksum
>>>>>>> 8a784acfeed5fb28f801f16fe528231cbb0c7541
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _Push_ring_buffer->_Store_EEPROM
    _Store_EEPROM->_DATAEE_WriteByte

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (0) _main                                                 4     4      0    9822
                                             12 BANK0      4     4      0
                    _DATAEE_ReadByte
=======
 (0) _main                                                 6     6      0    9519
                                             18 BANK0      6     6      0
>>>>>>> 8a784acfeed5fb28f801f16fe528231cbb0c7541
                   _DATAEE_WriteByte
                   _Push_ring_buffer
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                              _cksum
                            _cksum_w
                   _i2c1_driver_open
                          _read_ring
                         _reset_recv
 ---------------------------------------------------------------------------------
 (1) _reset_recv                                           2     2      0    1486
                                             10 BANK0      2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (1) _read_ring                                            6     5      1    1269
                                              4 BANK0      6     5      1
                    _DATAEE_ReadByte
=======
 (1) _read_ring                                            6     5      1     478
                                              4 BANK0      6     5      1
>>>>>>> 8a784acfeed5fb28f801f16fe528231cbb0c7541
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (1) _push_ring                                            2     2      0    1486
                                             10 BANK0      2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
=======
>>>>>>> 8a784acfeed5fb28f801f16fe528231cbb0c7541
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cksum_w                                              1     1      0    2215
                                             10 BANK0      1     1      0
                   _DATAEE_WriteByte
                              _cksum
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (2) _cksum                                                4     4      0     828
                                              2 BANK0      4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2     692
                                              0 BANK0      2     0      2
=======
 (2) _cksum                                                3     3      0    1422
                                              8 BANK0      3     3      0
                            ___eetoc
 ---------------------------------------------------------------------------------
 (3) ___eetoc                                              3     3      0    1330
                                              5 BANK0      3     3      0
                         ___eecpymem
 ---------------------------------------------------------------------------------
 (4) ___eecpymem                                           5     3      2    1229
                                              0 BANK0      5     3      2
>>>>>>> 8a784acfeed5fb28f801f16fe528231cbb0c7541
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3    1387
                                              6 BANK0      4     1      3
                              _cksum (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     211
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 Estimated maximum stack depth 2
=======
 (1) _Push_ring_buffer                                     7     7      0     935
                                             11 BANK0      7     7      0
                       _Store_EEPROM
 ---------------------------------------------------------------------------------
 (2) _Store_EEPROM                                         7     5      2     707
                                              4 BANK0      7     5      2
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3     487
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
>>>>>>> 8a784acfeed5fb28f801f16fe528231cbb0c7541
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0   84650
                   Absolute function *
                           _TMR1_ISR
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (5) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_ISR                                              3     3      0   84410
                                              4 COMMON     3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (6) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_TX_EMPTY                                      3     3      0   21086
                                              0 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_TX                                            3     3      0   21108
                                              1 COMMON     3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_TXData                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_RX                                            3     3      0   21086
                                              0 COMMON     3     3      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_DO_ADDRESS_NACK                               3     3      0   21086
                                              0 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _wr2RegCompleteHandler                                1     0      1    4159
                                              6 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _wr1RegCompleteHandler                                1     0      1    4159
                                              6 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _returnStop                                           1     0      1       0
                                              6 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (7) _returnReset                                          1     0      1       0
                                              6 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (7) _rdBlkRegCompleteHandler                              1     0      1    4450
                                              6 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rd2RegCompleteHandler                                1     0      1    4159
                                              6 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rd1RegCompleteHandler                                1     0      1    4159
                                              6 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _i2c_setDataCompleteCallback                          4     1      3    2776
                                              5 COMMON     1     1      0
                                              0 BANK0      3     0      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (9) _setCallBack                                          5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (8) _i2c_setBuffer                                        4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _i2c_restartWrite                                     1     0      1       0
                                              6 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                            _h_clock *
 ---------------------------------------------------------------------------------
 (6) _h_clock                                              0     0      0       0
                       _update_clock
 ---------------------------------------------------------------------------------
 (7) _update_clock                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
<<<<<<< HEAD
     _cksum (ARG)
       _DATAEE_ReadByte
=======
   _Push_ring_buffer
     _Store_EEPROM
       _DATAEE_WriteByte
>>>>>>> 8a784acfeed5fb28f801f16fe528231cbb0c7541
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _cksum
     _DATAEE_ReadByte
   _cksum_w
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
   _i2c1_driver_open
<<<<<<< HEAD
   _push_ring
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
=======
>>>>>>> 8a784acfeed5fb28f801f16fe528231cbb0c7541
   _read_ring
     _DATAEE_ReadByte
     ___bmul
<<<<<<< HEAD
   _reset_recv
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
=======
>>>>>>> 8a784acfeed5fb28f801f16fe528231cbb0c7541

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _h_clock *
       _update_clock
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c1_driver_sendNACK
       _i2c1_driver_getRXData *
       _i2c1_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c1_driver_restart
     _do_I2C_SEND_STOP *
       _i2c1_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c1_driver_TXData *
       _i2c1_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _mssp1_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
<<<<<<< HEAD
EEDATA             100      0       0       0        0.0%
=======
EEDATA             100      0       5       0        2.0%
>>>>>>> 8a784acfeed5fb28f801f16fe528231cbb0c7541
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
<<<<<<< HEAD
BANK0               50     10      40       5       80.0%
=======
BANK0               50     18      43       5       83.8%
>>>>>>> 8a784acfeed5fb28f801f16fe528231cbb0c7541
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      1D       7       36.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
<<<<<<< HEAD
ABS                  0      0      4E      20        0.0%
=======
ABS                  0      0      6D      20        0.0%
>>>>>>> 8a784acfeed5fb28f801f16fe528231cbb0c7541
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              3A      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
<<<<<<< HEAD
DATA                 0      0      4E      31        0.0%
=======
DATA                 0      0      6D      31        0.0%
>>>>>>> 8a784acfeed5fb28f801f16fe528231cbb0c7541
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
<<<<<<< HEAD
Symbol Table                                                                                   Thu Oct 31 17:10:46 2019

                            _update_clock 0385                              returnReset@p 0076  
                          ___bmul@product 0052                               __CFG_CP$OFF 0000  
                    __size_of_do_I2C_IDLE 0005                       _do_I2C_SEND_RESTART 0584  
                    __size_of_do_I2C_RCEN 0007                               __CFG_LVP$ON 0000  
                                     l401 0420                                       l500 051E  
                                     l503 0533                                       l431 056F  
                                     l506 0544                                       l651 052A  
                                     l901 0404                                       l904 04E4  
                                     l587 0243                                       l923 02E4  
                                     l916 0281                                       l909 03E8  
                                     l782 0503                                       l776 0379  
                                     l881 0052                                       l778 037D  
                                     l779 0384                                       l891 0104  
                                     l884 015B                                       l893 015A  
                                     l887 012E                                       l896 015F  
                                     l888 012D                              __CFG_CPD$OFF 0000  
                         _timer1ReloadVal 0079                                       _aux 0045  
                                     _seg 004D                                       _lum 0046  
           i2c_setDataCompleteCallback@cb 0050                   __size_of_PMD_Initialize 0008  
                   __size_of_do_I2C_RESET 0008                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_ZCD$OFF 0000  
                 ??_rd2RegCompleteHandler 0077                                      l1183 0466  
                                    l4021 0405                                      l4101 0369  
                                    l4031 0412                                      l4023 0408  
                                    l4111 0374                                      l4103 036D  
                                    l4041 01FF                                      l4033 0414  
                                    l4025 040A                                      l4113 0376  
                                    l4105 0371                                      l4121 03CB  
                                    l4051 020D                                      l4043 0205  
                                    l4035 0415                                      l4027 040C  
                                    l4203 0512                                      l4115 0378  
                                    l4107 0372                                      l4131 03DE  
                                    l4211 03E9                                      l4061 0218  
                                    l4053 020F                                      l4045 0207  
                                    l4037 041D                                      l4029 040E  
                                    l4205 0515                                      l4117 037E  
                                    l4109 0373                                      l4133 03E7  
                                    l4221 0246                                      l4071 022C  
                                    l4063 0224                                      l4055 0212  
                                    l4047 0209                                      l4039 053D  
                                    l4207 0518                                      l4127 03CF  
                                    l4119 03C9                                      l4231 0263  
                                    l4223 0246                                      l4215 03EE  
                                    l4081 0236                                      l4073 022E  
                                    l4065 0226                                      l4057 0214  
                                    l4049 020B                                      l4209 051B  
                                    l4129 03DA                                      l3361 0458  
                                    l4233 026A                                      l4225 024C  
                                    l4217 03F6                                      l4401 005C  
                                    l4091 052B                                      l4083 0238  
                                    l4075 0230                                      l4067 0228  
                                    l4059 0216                                      l4243 02B5  
                                    l3363 045C                                      l4227 0250  
                                    l4235 0275                                      l4219 03FB  
                                    l4411 00A1                                      l4403 005F  
                                    l4093 052E                                      l4085 023B  
                                    l4077 0232                                      l4069 022A  
                                    l4173 051F                                      l4261 02DA  
                                    l4253 02BC                                      l4245 02B9  
                                    l3365 045E                                      l3357 0453  
                                    l4229 025D                                      l4421 00BF  
                                    l4413 00AD                                      l4405 006B  
                                    l4095 052F                                      l4087 023E  
                                    l4079 0234                                      l4175 0524  
                                    l4263 02DE                                      l4255 02C2  
                                    l4247 02BA                                      l3367 0465  
                                    l3359 0454                                      l4239 0277  
                                    l4431 00CF                                      l4423 00C7  
                                    l4415 00BA                                      l4407 007D  
                                    l4097 0532                                      l4089 0240  
                                    l4265 04D5                                      l4177 0525  
                                    l4257 02C3                                      l4441 00DF  
                                    l4433 00D1                                      l4425 00CA  
                                    l4417 00BD                                      l4409 009E  
                                    l4099 0361                                      l4179 0527  
                                    l4259 02D5                                      l4451 00F6  
                                    l4443 00E0                                      l4435 00D7  
                                    l4427 00CC                                      l4419 00BE  
                                    l4461 0129                                      l4453 0105  
                                    l4445 00E1                                      l4437 00D8  
                                    l4429 00CD                                      l4471 013E  
                                    l4463 012F                                      l4455 0111  
                                    l4447 00E6                                      l4439 00DE  
                                    l4391 0052                                      l4473 013F  
                                    l4465 0135                                      l4457 011A  
                                    l4449 00E7                                      l4475 014A  
                                    l4467 0136                                      l4459 011D  
                                    l4395 0056                                      l4387 004B  
                                    l4477 0156                                      l4469 013A  
                                    l4397 0057                                      l4389 0051  
                                    l4399 0058                                      l3881 04FD  
                                    l3875 056A                                      l3883 04FE  
                                    l3885 04FF                                      l3877 04F5  
                                    l3887 0500                                      l3879 04F9  
                                    l3889 0501                                      u2200 0135  
                                    u2201 0134                                      u1250 0458  
                                    u2210 015F                                      u1251 0457  
                                    u2211 015E                                      u1260 0465  
                                    u2140 006B                                      u1261 0464  
                                    u2141 006A                                      _LATA 0016  
                                    u2150 007D                                      _LATB 0017  
                                    u2151 007C                                      _LATC 0018  
                                    u2160 00D7                                      _LATD 0019  
                                    u2161 00D6                                      _LATE 001A  
                                    u2170 00DE                                      u2171 00DD  
                                    u2227 00B3                                      u2180 00F6  
                                    u2181 00F5                                      u2190 0104  
                                    u2191 0103                                      u1810 0524  
                                    u1811 0523                                      u1900 02E4  
                                    u1901 02E3                                      u1840 0404  
                                    u1841 0403                                      u1850 024C  
                                    u1851 024B                                      u1780 037D  
                                    u1860 0250                                      u1781 037C  
                                    u1861 024F                                      u1790 03E7  
                                    u1870 0263                                      u1791 03E6  
                                    u1871 0262                                      u1880 02B9  
                                    u1881 02B8                                      u1890 02C2  
                                    u1891 02C1                                      _PMD0 0796  
                                    _PMD1 0797                                      _PMD2 0798  
                                    _PMD3 0799                                      _PMD4 079A  
                                    _PMD5 079B                      ?_do_I2C_SEND_RESTART 0070  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                                      _WPUD 0F5A  
                                    _WPUE 0F65                   ??_wr2RegCompleteHandler 0077  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
       __size_of_do_I2C_SEND_RESTART_READ 0005                                      _aux1 0044  
                                    _half 03EB                                      _clkh 004F  
               ?_do_I2C_SEND_RESTART_READ 0070                                      _clkm 004E  
                                    _main 004B                 __size_of_do_I2C_SEND_STOP 0005  
                  __size_of_do_I2C_DO_ACK 0005                                      _nreg 004A  
                                    _temp 0047                                      _pmon 0048  
=======
Symbol Table                                                                                   Wed Oct 30 12:20:19 2019

                            _update_clock 048D                              returnReset@p 0041  
                          ___bmul@product 0042                               __CFG_CP$OFF 0000  
                    __size_of_do_I2C_IDLE 0005                             _ptr_read_buff 002B  
                     _do_I2C_SEND_RESTART 067E                      __size_of_do_I2C_RCEN 0007  
                            _Store_EEPROM 0316                               __CFG_LVP$ON 0000  
                                     l401 04EC                                       l500 0600  
                                     l503 063D                                       l431 0669  
                                     l506 0635                                       l651 0618  
                                     l900 0352                                       l587 0315  
                                     l931 0624                                       l916 00CF  
                                     l909 01E3                                       l943 0388  
                                     l919 00F2                                       l776 0481  
                                     l936 051D                                       l928 018C  
                                     l778 0485                                       l779 048C  
                            __CFG_CPD$OFF 0000                              ___ctoee@addr 004D  
                            ___ctoee@data 004B                           _timer1ReloadVal 0078  
                                     _aux 007A                                       _seg 003B  
                                     _lum 0035             i2c_setDataCompleteCallback@cb 0075  
                 __size_of_PMD_Initialize 0008                     __size_of_do_I2C_RESET 0008  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                            __CFG_ZCD$OFF 0000                                      l1050 03D0  
                                    l1060 024E                                      l1052 03EB  
                 ??_rd2RegCompleteHandler 0078                                      l1205 054A  
                                    l1046 03C3                                      l1063 026B  
                                    l1055 023F                                      l1064 0272  
                                    l1048 03C8                                      l1072 05D8  
                                    l1057 0244                                      l1066 0276  
                                    l1069 0285                                      l1087 05F3  
                                    l3141 0253                                      l3133 023B  
                                    l3151 026A                                      l3143 025A  
                                    l3135 0245                                      l3153 026D  
                                    l3145 025F                                      l3137 024A  
                                    l3161 05CC                                      l3155 0271  
                                    l3147 0264                                      l3139 024C  
                                    l3163 05D6                                      l4301 0639  
                                    l3157 027C                                      l3149 0266  
                                    l4311 031C                                      l4303 063A  
                                    l4231 04D4                                      l3159 027D  
                                    l4081 0479                                      l4313 0333  
                                    l4401 01A2                                      l4305 063B  
                                    l4073 0664                                      l4241 04E0  
                                    l4233 04D6                                      l4091 0480  
                                    l4083 047A                                      l4075 0469  
                                    l4315 0338                                      l4403 01A8  
                                    l4307 063C                                      l4251 02D7  
                                    l4243 04E1                                      l4235 04D8  
                                    l4093 0486                                      l4085 047B  
                                    l4077 0471                                      l4317 033C  
                                    l4309 0316                                      l4413 01B9  
                                    l4405 01AE                                      l4261 02E1  
                                    l4253 02D9                                      l4245 04E9  
                                    l4237 04DA                                      l4229 04D1  
                                    l4087 047C                                      l4079 0475  
                                    l4319 0349                                      l4415 01CE  
                                    l4407 01B6                                      l4271 02F6  
                                    l4263 02E4                                      l4255 02DB  
                                    l4247 062E                                      l4239 04DE  
                                    l3623 0619                                      l3631 035F  
                                    l4089 047E                                      l4417 01D2  
                                    l4281 0300                                      l4273 02F8  
                                    l4265 02E6                                      l4257 02DD  
                                    l4249 02D1                                      l3473 0509  
                                    l4361 0612                                      l3633 036C  
                                    l3625 0355                                      l4601 010E  
                                    l4419 01D6                                      l4291 030A  
                                    l4283 0302                                      l4275 02FA  
                                    l4267 02E8                                      l4259 02DF  
                                    l3483 05E9                                      l3475 0512  
                                    l3467 0506                                      l4363 0613  
                                    l3491 053C                                      l3643 0381  
                                    l3635 0372                                      l3627 0355  
                                    l4611 011F                                      l4603 0114  
                                    l4293 030D                                      l4285 0304  
                                    l4277 02FC                                      l4269 02EA  
                                    l3477 0516                                      l4365 0615  
                                    l3493 0540                                      l3637 0378  
                                    l3629 035B                                      l4621 0164  
                                    l4613 012E                                      l4605 0115  
                                    l4295 0310                                      l4287 0306  
                                    l4279 02FE                                      l4391 05F7  
                                    l3479 051C                                      l4359 060D  
                                    l3495 0542                                      l3487 0537  
                                    l3639 037F                                      l4631 0170  
                                    l4623 0167                                      l4615 013C  
                                    l4607 011A                                      l4551 007C  
                                    l4297 0312                                      l4289 0308  
                                    l4393 05FA                                      l3497 0549  
                                    l3489 0538                                      l4633 0184  
                                    l4625 0168                                      l4617 0150  
                                    l4609 011B                                      l4561 0088  
                                    l4553 0080                                      l4299 0636  
                                    l4395 05FD                                      l4635 0185  
                                    l4627 016A                                      l4619 015B  
                                    l4571 00A8                                      l4563 0089  
                                    l4555 0081                                      l4547 0075  
                                    l4397 0190                                      l4389 05F4  
                                    l2981 03DA                                      l4637 0187  
                                    l4629 016B                                      l4581 00E0  
                                    l4573 00B7                                      l4565 008B  
                                    l4557 0086                                      l4549 007B  
                                    l4399 019A                                      l2983 03DE  
                                    l2975 03BF                                      l4639 0188  
                                    l4591 00F0                                      l4583 00E8  
                                    l4575 00DB                                      l4567 0091  
                                    l4559 0087                                      l2985 03E3  
                                    l2977 03C9                                      l4593 00F3  
                                    l4585 00EB                                      l4577 00DE  
                                    l4569 009F                                      l2979 03D2  
                                    l4595 0108                                      l4587 00ED  
                                    l4579 00DF                                      l4589 00EE  
                                    l4599 0109                                      u1210 03C8  
                                    u1211 03C7                                      u2100 019A  
                                    u1300 0276                                      u1220 03EB  
                                    u2101 0199                                      u1301 0275  
                                    u1221 03EA                                      u2110 01A8  
                                    u1310 027C                                      u2111 01A7  
                                    u1311 027B                                      u2040 0349  
                                    u2120 01AE                                      u1320 0285  
                                    u2041 0348                                      u2121 01AD  
                                    u2105 0196                                      u1321 0284  
                                    u2050 0352                                      u2130 01E3  
                                    u2051 0351                                      u2131 01E2  
                                    u2045 0345                                      _LATA 0016  
                                    u1270 0244                                      u2070 0612  
                                    _LATB 0017                                      u2135 01DF  
                                    u1271 0243                                      u2071 0611  
                                    _LATC 0018                                      u1280 0253  
                                    u1600 0372                                      u2400 010E  
                                    _LATD 0019                                      u1281 0252  
                                    u1601 0371                                      u2401 010D  
                                    _LATE 001A                                      u1290 026A  
                                    u1450 051C                                      u2410 0114  
                                    u1291 0269                                      u1451 051B  
                                    u2411 0113                                      u1460 053C  
                                    u2420 012E                                      u1461 053B  
                                    u2421 012D                                      u1470 0549  
                                    u2430 013C                                      u1471 0548  
                                    u2431 013B                                      u2440 0170  
                                    u2441 016F                                      u2450 018C  
                                    u2370 009B                                      u2451 018B  
                                    u1580 035B                                      u2380 00A8  
                                    u1581 035A                                      u2381 00A7  
                                    u1590 035F                                      u2390 00B7  
                                    u1591 035E                                      u2391 00B6  
                                    u1970 0485                                      u1971 0484  
                                    _PMD0 0796                                      _PMD1 0797  
                                    _PMD2 0798                                      _PMD3 0799  
                                    _PMD4 079A                                      _PMD5 079B  
                    ?_do_I2C_SEND_RESTART 0070                                      _WPUA 0F39  
                                    _WPUB 0F44                                      _WPUC 0F4F  
                                    _WPUD 0F5A                                      _WPUE 0F65  
                 ??_wr2RegCompleteHandler 0078                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000         __size_of_do_I2C_SEND_RESTART_READ 0005  
                                    _half 03E2                                      _clkh 003F  
               ?_do_I2C_SEND_RESTART_READ 0070                                      _clkm 003D  
                                    _main 0075                 __size_of_do_I2C_SEND_STOP 0005  
                  __size_of_do_I2C_DO_ACK 0005                                      _nreg 0062  
                                    _temp 0036                                      _pmon 0061  
>>>>>>> 8a784acfeed5fb28f801f16fe528231cbb0c7541
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
                   ?_do_I2C_SEND_ADR_READ 0070           ??_i2c1_driver_clearBusCollision 0070  
<<<<<<< HEAD
                                    start 0036                             _i2c_setBuffer 04E5  
              ??_TMR1_SetInterruptHandler 0052                             __CFG_CSWEN$ON 0000  
                       ___bmul@multiplier 0053                             __CFG_MCLRE$ON 0000  
                         __end_of_i2c_ISR 033B          __size_of_rdBlkRegCompleteHandler 0019  
                ??_do_I2C_DO_NACK_RESTART 0070                 __size_of_DATAEE_WriteByte 0024  
                            _do_I2C_RESET 054D            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 0534                  __end_of_i2c1_driver_open 052B  
                                   ?_main 0070                  __end_of_i2c1_driver_stop 05BB  
                           __CFG_WDTE$OFF 0000                                     _T1CLK 0211  
                                   _T1CON 020E                __end_of_i2c1_driver_TXData 059D  
                          __CFG_DEBUG$OFF 0000                                     i1l110 0511  
                                   i1l201 0310                                     i1l140 04F4  
                                   i1l301 049F                                     i1l206 0198  
                                   i1l222 01D2                                     i1l223 01FE  
                                   i1l209 01B4                                     i1l162 0554  
                                   i1l250 05A0                                     i1l171 058D  
                                   i1l316 048D                                     i1l340 0439  
                                   i1l180 053C                                     i1l261 0360  
                                   i1l253 05C3                                     i1l237 02B4  
                                   i1l165 0597                                     i1l174 0588  
                                   i1l415 04D4                                     i1l183 054C  
                                   i1l247 033A                                     i1l328 04C3  
                                   i1l256 05C1                                     i1l280 04B1  
                                   i1l168 0592                                     i1l192 0579  
                                   i1l177 0583                                     i1l434 05C5  
                                   i1l186 0563                                     i1l195 0574  
                                   i1l428 047B                                     i1l189 057E  
                                   i1l367 05BF                                     i1l463 0034  
                                   i1l456 0019                                     i1l633 05AE  
                                   i1l457 0034                                     i1l458 0028  
                                   i1l636 05B1                                     i1l671 055C  
                                   i1l841 0450                                     i1l665 05BD  
                                   i1l729 05AB                                     i1l674 05B7  
                                   i1l659 05C4                                     i1l692 05A8  
                                   i1l668 05BA                                     i1l837 043A  
                                   i1l677 05B4                                     i1l686 059C  
                                   i1l839 044F                                     i1l695 05A4  
                                   i1l928 03A8                                     _OSCEN 0891  
                                   _TMR1H 020D                                     _TMR1L 020C  
                                   _TRISA 0011                                     _TRISB 0012  
                                   _TRISC 0013                                     _TRISD 0014  
                                   _TRISE 0015                                     _WPUC3 7A7B  
                                   _WPUC4 7A7C                           __end_of_h_clock 0451  
                        __end_of_TMR1_ISR 047C                           __end_of_cksum_w 04E5  
                         _DATAEE_ReadByte 04F5                __end_of_i2c1_driver_isNACK 055D  
                                   _cksum 03C9                ?_do_I2C_SEND_RESTART_WRITE 0070  
                   ??_do_I2C_SEND_RESTART 0070                   __end_of_TMR1_Initialize 0421  
                          __pbitbssCOMMON 03E8                                     pclath 000A  
                 __size_of_mssp1_clearIRQ 0003                    ?_do_I2C_SEND_ADR_WRITE 0070  
                                   status 0003                                     wtemp0 007E  
                         _TMR1_WriteTimer 04C4                            ?_i2c_setBuffer 0070  
                            ?_setCallBack 0070                             _fsmStateTable 03A9  
                         __initialization 0038                                _i2c_status 0020  
                            __end_of_main 0161               ?_INTERRUPT_InterruptManager 0070  
                           setCallBack@cb 0070                             _do_I2C_DO_ACK 057A  
                                  ??_main 005C                         ?_i2c_restartWrite 0076  
           __size_of_i2c1_driver_sendNACK 0004                        ??_i2c_restartWrite 0077  
           __size_of_i2c1_driver_resetBus 0001                   ?_do_I2C_DO_ADDRESS_NACK 0070  
=======
                                    start 0037                             _i2c_setBuffer 05BA  
                     Push_ring_buffer@reg 004F                ??_TMR1_SetInterruptHandler 0042  
                           __CFG_CSWEN$ON 0000                         ___bmul@multiplier 0043  
                           __CFG_MCLRE$ON 0000                           __end_of_i2c_ISR 0443  
        __size_of_rdBlkRegCompleteHandler 0019                  ??_do_I2C_DO_NACK_RESTART 0070  
               __size_of_DATAEE_WriteByte 0024                              _do_I2C_RESET 0646  
          __size_of_OSCILLATOR_Initialize 0008             __end_of_OSCILLATOR_Initialize 063E  
                __end_of_i2c1_driver_open 0619                                     ?_main 0070  
                         __end_of___eetoc 05D9                  __end_of_i2c1_driver_stop 06B5  
                         __end_of___ctoee 05F4                             __CFG_WDTE$OFF 0000  
                                   _T1CLK 0211                                     _T1CON 020E  
              __end_of_i2c1_driver_TXData 0697                            __CFG_DEBUG$OFF 0000  
                                   i1l110 05E6                                     i1l201 0418  
                                   i1l140 05C9                                     i1l301 0584  
                                   i1l206 021C                                     i1l222 02A3  
                                   i1l223 02D0                                     i1l209 0238  
                                   i1l162 064D                                     i1l250 069A  
                                   i1l171 0687                                     i1l316 0572  
                                   i1l340 0505                                     i1l180 062D  
                                   i1l261 0468                                     i1l253 06BD  
                                   i1l237 03BC                                     i1l165 0691  
                                   i1l174 0682                                     i1l415 05B9  
                                   i1l183 0645                                     i1l247 0442  
                                   i1l328 05A8                                     i1l256 06BB  
                                   i1l280 0596                                     i1l168 068C  
                                   i1l192 0673                                     i1l177 067D  
                                   i1l434 06BF                                     i1l186 0663  
                                   i1l195 066E                                     i1l428 0560  
                                   i1l189 0678                                     i1l367 06B9  
                                   i1l463 0035                                     i1l456 001A  
                                   i1l633 06A8                                     i1l457 0035  
                                   i1l458 0029                                     i1l636 06AB  
                                   i1l831 0533                                     i1l671 0655  
                                   i1l833 0534                                     i1l665 06B7  
                                   i1l729 06A5                                     i1l674 06B1  
                                   i1l659 06BE                                     i1l692 06A2  
                                   i1l668 06B4                                     i1l829 051E  
                                   i1l677 06AE                                     i1l950 04B0  
                                   i1l686 0696                                     i1l695 069E  
                                   _OSCEN 0891                                     _TMR1H 020D  
                                   _TMR1L 020C                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                                   _WPUC3 7A7B                                     _WPUC4 7A7C  
                         __end_of_h_clock 0535                          __end_of_TMR1_ISR 0561  
                         __end_of_cksum_w 0625                __end_of_i2c1_driver_isNACK 0656  
                                   _cksum 0506                ?_do_I2C_SEND_RESTART_WRITE 0070  
                                   _value 007B                     ??_do_I2C_SEND_RESTART 0070  
                 __end_of_TMR1_Initialize 04ED                            __pbitbssCOMMON 03E0  
                                   pclath 000A                   __size_of_mssp1_clearIRQ 0003  
                  ?_do_I2C_SEND_ADR_WRITE 0070                             ___memcpyee@to 0044  
                                   status 0003                                     wtemp0 007E  
                         _TMR1_WriteTimer 05A9                            ?_i2c_setBuffer 0070  
                            ?_setCallBack 0070                             _fsmStateTable 04B1  
                         __initialization 0039                                _i2c_status 00A0  
                            __end_of_main 018E               ?_INTERRUPT_InterruptManager 0070  
                           setCallBack@cb 0070                             _do_I2C_DO_ACK 0674  
                                  ??_main 0052                         ?_i2c_restartWrite 0041  
           __size_of_i2c1_driver_sendNACK 0004                            _ptr_write_buff 0029  
                      ??_i2c_restartWrite 0078             __size_of_i2c1_driver_resetBus 0001  
                 ?_do_I2C_DO_ADDRESS_NACK 0070                            _convertedValue 0027  
>>>>>>> 8a784acfeed5fb28f801f16fe528231cbb0c7541
                                  ?_cksum 0070                                    _ANSELA 0F38  
                                  _ANSELB 0F43                                    _ANSELC 0F4E  
                                  _ANSELD 0F59                                    _ANSELE 0F64  
                      __CFG_RSTOSC$HFINT1 0000                                    _T1GATE 0210  
                                  _T1GCON 020F                                    _RC3PPS 0F23  
                 TMR1_WriteTimer@timerVal 0070                                    _RC4PPS 0F24  
<<<<<<< HEAD
                                  u111_20 0394                                    u111_21 0393  
                                  i1l3003 05BE                                    i1l3031 039C  
                                  i1l3103 057A                                    u112_20 03A3  
                                  u112_21 03A2                                    i1l3033 039D  
                                  i1l3025 0385                                    i1l3105 057D  
                                  _ODCONA 0F3A                                    _ODCONB 0F45  
                                  i1l3035 03A3                                    i1l3027 038E  
                                  i1l4003 0289                                    _ODCONC 0F50  
                                  _ODCOND 0F5B                                    i1l3037 03A7  
                                  i1l3029 0394                                    i1l4005 028C  
                                  i1l3061 054D                                    _ODCONE 0F66  
                                  i1l4015 0292                                    i1l3063 0550  
                                  i1l3071 0593                                    i1l3039 05AC  
                                  u121_20 0444                                    i1l3241 04CA  
                                  u121_21 0441                                    i1l4009 028E  
                                  i1l3065 0552                                    i1l3073 0595  
                                  i1l3081 0536                                    i1l4201 0325  
                                  i1l3217 05A9                                    i1l3243 04CC  
                                  i1l3331 043A                                    i1l3067 0553  
                                  i1l3075 0596                                    i1l3083 053B  
                                  i1l3091 054B                                    i1l3245 04CE  
                                  i1l3237 04C4                                    i1l3333 0446  
                                  i1l3239 04C9                                    i1l3247 04D0  
                                  i1l3335 044A                                    i1l3079 0534  
                                  i1l3087 0545                                    i1l3095 055D  
                                  u210_20 001D                                    i1l3249 04D2  
                                  i1l3337 044D                                    i1l3089 0547  
                                  i1l3097 055F                                    u210_21 001C  
                                  i1l3099 0562                                    i1l3451 059D  
                                  u122_24 0446                                    i1l3453 0467  
                                  i1l3455 0469                                    i1l2911 0589  
                                  u123_20 044A                                    u211_20 0021  
                                  u123_21 0449                                    i1l3457 0470  
                                  i1l2905 058E                                    i1l2913 058C  
                                  i1l4193 0311                                    u211_21 0020  
                                  i1l3459 0476                                    i1l2931 05B5  
                                  i1l2907 0591                                    i1l2923 057F  
                                  i1l4195 0314                                    i1l4371 0006  
                                  i1l2933 05A5                                    i1l2917 0584  
                                  i1l2925 0582                                    i1l2941 0570  
                                  i1l4197 0319                                    i1l4381 0021  
                                  i1l4373 000A                                    i1l2951 05B2  
                                  i1l2919 0587                                    i1l2935 0575  
                                  i1l2943 0573                                    i1l4199 0320  
                                  i1l4383 002C                                    i1l4375 000F  
                                  u132_20 0476                                    u108_20 0342  
                                  u212_20 002C                                    u132_21 0475  
                                  i1l2881 0353                                    u108_21 0341  
                                  i1l2961 05C0                                    i1l3841 04B0  
                                  i1l2929 0599                                    i1l2937 0578  
                                  i1l3921 02F0                                    i1l3913 02E5  
                                  i1l4561 018A                                    i1l4385 0030  
                                  u212_21 002B                                    i1l4377 0013  
                                  i1l2891 05BB                                    i1l3827 0504  
                                  i1l2947 0555                                    i1l2955 05AF  
                                  i1l4563 0308                                    i1l3915 02E7  
                                  i1l4379 001D                                    i1l2893 05B8  
                                  i1l2885 04E6                                    i1l2877 033C  
                                  i1l3861 04B2                                    i1l2957 05C2  
                                  i1l3837 04A0                                    i1l3845 048E  
                                  i1l3853 047C                                    i1l4565 02A6  
                                  i1l3917 02EC                                    i1l3941 016D  
                                  i1l3933 0161                                    i1l2887 04EB  
                                  i1l2879 0342                                    i1l3863 04BA  
                                  i1l3839 04A8                                    i1l3847 0496  
                                  i1l3855 0484                                    i1l3871 0438  
                                  i1l2895 05A1                                    i1l3927 02F4  
                                  i1l3951 0175                                    i1l4559 01F0  
                                  u109_20 04EB                                    u213_20 0030  
                                  i1l2889 04F3                                    u109_21 04EA  
                                  i1l3865 04C2                                    i1l3849 049E  
                                  i1l3857 048C                                    i1l3953 019A  
                                  i1l3945 0171                                    i1l3937 0169  
                                  u213_21 002F                                    i1l3955 01A6  
                                  i1l3971 01C3                                    i1l3869 0421  
                                  i1l3957 01B1                                    i1l3981 01D4  
                                  i1l3973 01CD                                    i1l3959 01B3  
                                  i1l3991 01DC                                    i1l3975 01D0  
                                  i1l3967 01B5                                    i1l3985 01D8  
                                  i1l3969 01BF                                    i1l3997 0282  
                                  i1l3999 0285                                    u119_20 04C9  
                                  u207_20 000A                                    u119_21 04C8  
                                  u207_21 0009                                    u208_20 000F  
                                  u208_21 000E                                    _INLVLA 0F3C  
                                  _INLVLB 0F47                                    _INLVLC 0F52  
                                  _INLVLD 0F5D                                    _INLVLE 0F68  
                                  u209_20 0013                                    u209_21 0012  
                                  u182_20 0319                                    u182_21 0318  
                                  u175_20 0168                                    u183_20 0320  
                                  u175_21 0167                                    u183_21 031F  
                                  u176_20 01B1                                    u176_21 01B0  
                                  u177_20 01CD                                    u177_21 01CC  
                                  _OSCFRQ 0893                    ??_do_I2C_SEND_ADR_READ 0070  
                rdBlkRegCompleteHandler@p 0076                                 ??_i2c_ISR 0074  
                          __CFG_PWRTE$OFF 0000                     _i2c1_driver_getRXData 05B2  
    __end_of_TMR1_DefaultInterruptHandler 05C6     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 05C5                                    ___bmul 0451  
             __end_of_do_I2C_DO_NACK_STOP 057A       __end_of_i2c_setDataCompleteCallback 0512  
             _i2c_setDataCompleteCallback 0504     __end_of_i2c1_driver_clearBusCollision 05AC  
  __size_of_i2c1_driver_clearBusCollision 0003             _i2c1_driver_clearBusCollision 05A9  
                          __CFG_STVREN$ON 0000           __size_of_do_I2C_DO_NACK_RESTART 0005  
                                  _last1m 004B                                    _last5s 004C  
                          ?_do_I2C_DO_ACK 0070                                 ??_h_clock 0071  
                                  cksum@i 0054                   __end_of_DATAEE_ReadByte 0504  
                               ??_cksum_w 005A               __end_of_i2c1_driver_sendACK 05A9  
                          _PMD_Initialize 053D            __end_of_do_I2C_DO_ADDRESS_NACK 0311  
             __end_of_i2c1_driver_restart 05BE                              ?_returnReset 0076  
             __end_of_i2c1_driver_startRX 05B8  TMR1_SetInterruptHandler@InterruptHandler 0050  
                 __end_of_TMR1_WriteTimer 04D5                          ?_TMR1_Initialize 0070  
                       _SYSTEM_Initialize 0512                   __end_of__initialization 0047  
                         ??_i2c_setBuffer 0072                          _do_I2C_SEND_STOP 057F  
                      __size_of_do_I2C_RX 004A                        __size_of_do_I2C_TX 0054  
                      ?_SYSTEM_Initialize 0070                  __size_of_do_I2C_TX_EMPTY 0033  
                     ___bmul@multiplicand 0050                   _rdBlkRegCompleteHandler 0421  
                          __pcstackCOMMON 0070                       ??_SYSTEM_Initialize 0052  
                               ?_TMR1_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                           __end_of_cksum 03E9                          _DATAEE_WriteByte 0361  
                  __end_of_PMD_Initialize 0545                            setCallBack@idx 0074  
                                 ??_cksum 0052                    _do_I2C_DO_NACK_RESTART 0570  
               __end_of_SYSTEM_Initialize 051F                            _mssp1_clearIRQ 05AC  
                              __pbssBANK0 0020            __size_of_rd2RegCompleteHandler 0012  
           __end_of_rd2RegCompleteHandler 048E            __size_of_wr2RegCompleteHandler 0012  
           __end_of_wr2RegCompleteHandler 04C4                     _rd1RegCompleteHandler 048E  
                  ?_i2c1_driver_getRXData 0070                        __size_of_read_ring 003E  
                   _wr1RegCompleteHandler 04A0              __size_of_i2c_busCollisionISR 0004  
                              __pmaintext 004B                             ??_do_I2C_IDLE 0070  
                    __size_of_setCallBack 0026                             ??_do_I2C_RCEN 0070  
                                 ?___bmul 0050                                ??_TMR1_ISR 0072  
                         __CFG_PPS1WAY$ON 0000                           ??_do_I2C_DO_ACK 0070  
                              __pintentry 0004                       i2c_setBuffer@buffer 0073  
                         ?_PMD_Initialize 0070            ?_i2c1_driver_clearBusCollision 0070  
                        ?_DATAEE_ReadByte 0050                         ?_i2c1_driver_open 0070  
                       __end_of_do_I2C_RX 01FF                         __end_of_do_I2C_TX 01B5  
                       ?_i2c1_driver_stop 0070                        ??_i2c1_driver_open 0050  
                      ??_i2c1_driver_stop 0070                                   _OSCCON1 088D  
                                 _OSCCON3 088F                             ?_mssp1_setIRQ 0070  
                                 _NVMADRH 081B                                   _NVMADRL 081A  
                                 _NVMDATH 081D                                   _OSCTUNE 0892  
                                 _NVMDATL 081C                                   _NVMCON2 081F  
                                 _SSP1ADD 018D                                   _SLRCONA 0F3B  
                                 _SLRCONB 0F46                                   _SLRCONC 0F51  
                                 _SLRCOND 0F5C                                   _SLRCONE 0F67  
                                 _SSP1BUF 018C                    __end_of_mssp1_clearIRQ 05AF  
                                 _SSP1MSK 018E                   ??_do_I2C_SEND_ADR_WRITE 0071  
                      __size_of_push_ring 0030                          ?_TMR1_WriteTimer 0070  
             ??_do_I2C_SEND_RESTART_WRITE 0070                        _i2c1_driver_TXData 0598  
                    DATAEE_WriteByte@bAdd 0056                        _i2c1_driver_i2cISR 0042  
                                 _i2c_ISR 0311                 ??_rdBlkRegCompleteHandler 0077  
                      _i2c1_driver_isNACK 0555                       ?_i2c1_driver_TXData 0070  
                    __CFG_SCANE$available 0000                           __size_of___bmul 0016  
                       ??_do_I2C_TX_EMPTY 0070                       ?_i2c1_driver_isNACK 0070  
                                 _h_clock 043A                                   __ptext1 03E9  
                                 __ptext2 0244                                   __ptext3 0451  
                                 __ptext4 02B5                                   __ptext5 051F  
                                 __ptext6 04D5                                   __ptext7 03C9  
                                 __ptext8 04F5                                   __ptext9 0361  
                     __end_of_do_I2C_IDLE 0598                       __end_of_do_I2C_RCEN 0564  
          ??_TMR1_DefaultInterruptHandler 0070                                   _cksum_w 04D5  
                               _T1CONbits 020E                     _OSCILLATOR_Initialize 052B  
             __end_of_do_I2C_SEND_RESTART 0589                            ??_mssp1_setIRQ 0070  
                             reset_recv@i 005A         __size_of_TMR1_SetInterruptHandler 0006  
                    ??_i2c1_driver_TXData 0070                         __end_of_read_ring 0282  
                ??_PIN_MANAGER_Initialize 0050                 ?_TMR1_SetInterruptHandler 0050  
                                 _nreg_pt 0049                           ?_mssp1_clearIRQ 0070  
                _do_I2C_SEND_RESTART_READ 058E                __size_of_SYSTEM_Initialize 000D  
                                 clrloop0 0565                                   _running 03E8  
                    __size_of_returnReset 0002                      end_of_initialization 0047  
                    ??_i2c1_driver_isNACK 0070                 __size_of_i2c_restartWrite 0002  
            __end_of_i2c1_driver_sendNACK 05A5                    ?_rd1RegCompleteHandler 0076  
                  ?_wr1RegCompleteHandler 0076              __end_of_i2c1_driver_resetBus 05C5  
                              _reset_recv 03E9                 _do_I2C_SEND_RESTART_WRITE 0589  
                       __end_of_push_ring 02E5                     __CFG_WDTCPS$WDTCPS_14 0000  
                              _returnStop 05C2           __end_of_rdBlkRegCompleteHandler 043A  
                __end_of_do_I2C_SEND_STOP 0584                      __CFG_WDTCCS$HFINTOSC 0000  
                      _configuration_mode 03EA                                 _TRISCbits 0013  
    __size_of_i2c_setDataCompleteCallback 000E                               returnStop@p 0076  
                        __CFG_FEXTOSC$OFF 0000                  __end_of_DATAEE_WriteByte 0385  
            i2c_setDataCompleteCallback@p 0052             __size_of_do_I2C_SEND_ADR_READ 0009  
                           ?_update_clock 0070                               _do_I2C_IDLE 0593  
                             _do_I2C_RCEN 055D                            __end_of___bmul 0467  
                       __size_of_TMR1_ISR 0015                    ?_OSCILLATOR_Initialize 0070  
            __size_of_do_I2C_DO_NACK_STOP 0005                   ?_do_I2C_DO_NACK_RESTART 0070  
                     start_initialization 0038                       _i2c_busCollisionISR 059D  
         __size_of_PIN_MANAGER_Initialize 0045                              setCallBack@p 0072  
            __size_of_i2c1_driver_sendACK 0004                   i2c_setBuffer@bufferSize 0070  
                 ??_i2c1_driver_getRXData 0070                    rd1RegCompleteHandler@p 0076  
            __size_of_i2c1_driver_restart 0003              __size_of_i2c1_driver_startRX 0003  
                     DATAEE_ReadByte@bAdd 0050                     __end_of_i2c_setBuffer 04F5  
                    ?_i2c_busCollisionISR 0070                            ??_update_clock 0070  
                        __CFG_LPBOREN$OFF 0000                               ?_reset_recv 0070  
                    __end_of_mssp1_setIRQ 05B2                  __size_of_TMR1_Initialize 001C  
                                ??___bmul 0051                          ??_PMD_Initialize 0050  
                  wr1RegCompleteHandler@p 0076                             ?_do_I2C_RESET 0070  
                             ?_returnStop 0076            __end_of_do_I2C_DO_NACK_RESTART 0575  
                              read_ring@i 0057                      _i2c1_driver_sendNACK 05A1  
                       read_ring@absindex 0059                               __pbssCOMMON 0077  
                               ___latbits 0002                      _i2c1_driver_resetBus 05C4  
                           __pcstackBANK0 0050                                 _do_I2C_RX 01B5  
                               _do_I2C_TX 0161            __size_of_do_I2C_SEND_ADR_WRITE 0008  
           __end_of_do_I2C_SEND_ADR_WRITE 054D                          _i2c_restartWrite 05BE  
               __size_of_i2c1_driver_open 000C                 __size_of_i2c1_driver_stop 0003  
                                ?_i2c_ISR 0070                           _do_I2C_TX_EMPTY 0282  
                           ??_setCallBack 0073                     _rd2RegCompleteHandler 047C  
                   ??_i2c_busCollisionISR 0070                     __end_of_fsmStateTable 03C9  
                  _PIN_MANAGER_Initialize 01FF                     _wr2RegCompleteHandler 04B2  
        __end_of_TMR1_SetInterruptHandler 0570                         read_ring@subindex 0054  
                          ??_do_I2C_RESET 0070                  ??_do_I2C_DO_ADDRESS_NACK 0070  
             _i2c1_driver_busCollisionISR 007B                     __end_of_do_I2C_DO_ACK 057F  
                                ?_h_clock 0070              ??_INTERRUPT_InterruptManager 0077  
              ??_do_I2C_SEND_RESTART_READ 0070                     ?_i2c1_driver_sendNACK 0070  
                                ?_cksum_w 0070                          ??_mssp1_clearIRQ 0070  
                   ?_i2c1_driver_resetBus 0070        __size_of_do_I2C_SEND_RESTART_WRITE 0005  
                              ?_do_I2C_RX 0070                                ?_do_I2C_TX 0070  
                     __size_of_reset_recv 001C                            __size_of_cksum 0020  
                __size_of_DATAEE_ReadByte 000F                   ??_rd1RegCompleteHandler 0077  
                               _read_ring 0244                   ??_wr1RegCompleteHandler 0077  
                                _LATAbits 0016                       __size_of_returnStop 0002  
                               clear_ram0 0564                                 _nreg_init 03E9  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 0032  
                                _PIR3bits 070F                                 _ring_byte 003D  
                                _PIR4bits 0710                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR1_ISR 0467  
            ?_i2c_setDataCompleteCallback 0050                                  _SSP1STAT 018F  
                     __end_of_setCallBack 0361                         ??_TMR1_Initialize 0052  
                               _push_ring 02B5                         ?_do_I2C_SEND_STOP 0070  
                           ??_returnReset 0077                        ??_do_I2C_SEND_STOP 0070  
             __size_of_i2c1_driver_TXData 0005                     DATAEE_WriteByte@bData 0058  
                    __end_of_update_clock 03A9         __end_of_do_I2C_SEND_RESTART_WRITE 058E  
                 __end_of_do_I2C_TX_EMPTY 02B5                                ?_read_ring 0054  
                ?_rdBlkRegCompleteHandler 0076                         ?_DATAEE_WriteByte 0056  
            __size_of_do_I2C_SEND_RESTART 0005               __size_of_i2c1_driver_isNACK 0008  
                   __size_of_mssp1_setIRQ 0003                    ?_rd2RegCompleteHandler 0076  
                      ??_DATAEE_WriteByte 0059                       _do_I2C_DO_NACK_STOP 0575  
                        __size_of_i2c_ISR 002A                    ?_wr2RegCompleteHandler 0076  
                            ?_do_I2C_IDLE 0070                              ?_do_I2C_RCEN 0070  
                              push_ring@i 005B                   ??_OSCILLATOR_Initialize 0050  
                     _i2c1_driver_sendACK 05A5           __size_of_do_I2C_DO_ADDRESS_NACK 002C  
                     i2c1_driver_TXData@d 0070                    ??_i2c1_driver_sendNACK 0070  
           ??_i2c_setDataCompleteCallback 0075                       _i2c1_driver_restart 05BB  
                _TMR1_SetInterruptHandler 056A                          __size_of_h_clock 0017  
                    ?_do_I2C_DO_NACK_STOP 0070                       _i2c1_driver_startRX 05B5  
            __end_of_do_I2C_SEND_ADR_READ 053D                                ?_push_ring 0070  
                  ??_i2c1_driver_resetBus 0070                     _TMR1_InterruptHandler 0077  
                        __size_of_cksum_w 0010                              _mssp1_setIRQ 05AF  
                             ??_do_I2C_RX 0070                               ??_do_I2C_TX 0071  
                                __ptext10 0512                                  __ptext11 0405  
                                __ptext20 05AC                                  __ptext12 056A  
                                __ptext21 01B5                                  __ptext13 053D  
                              _T1GCONbits 020F                                  __ptext30 057F  
                                __ptext22 0161                                  __ptext14 01FF  
                                __ptext31 0584                                  __ptext23 02E5  
                                __ptext15 052B                                  __ptext40 05B2  
                                __ptext32 0589                                  __ptext24 0570  
                                __ptext41 05A1                                  __ptext33 058E  
                                __ptext25 0575                                  __ptext17 059D  
                                __ptext50 05C2                                  __ptext42 05C4  
                                __ptext34 0593                                  __ptext26 057A  
                                __ptext18 05A9                                  __ptext51 04B2  
                                __ptext43 05B5                                  __ptext35 054D  
                                __ptext27 055D                                  __ptext19 0311  
                                __ptext60 043A                                  __ptext52 0504  
                                __ptext44 0421                                  __ptext36 0282  
                                __ptext28 0545                                  __ptext61 0385  
                                __ptext53 033B                                  __ptext45 047C  
                                __ptext37 05AF                                  __ptext29 0534  
                                __ptext62 04C4                                  __ptext54 04E5  
                                __ptext46 048E                                  __ptext38 0555  
                                __ptext55 05B8                                  __ptext47 04A0  
                                __ptext39 0598                                  __ptext56 05BB  
                                __ptext48 05BE                                  __ptext57 05A5  
                                __ptext49 05C0                                  __ptext58 0467  
                                __ptext59 05C5                              _SSP1CON1bits 0190  
                            _SSP1CON2bits 0191                      ?_i2c1_driver_sendACK 0070  
                    __end_of_do_I2C_RESET 0555               DATAEE_WriteByte@GIEBitValue 0059  
                    ?_i2c1_driver_restart 0070                       __end_of_returnReset 05C2  
                        _i2c1_driver_open 051F                          _i2c1_driver_stop 05B8  
                           __size_of_main 0116                      ?_i2c1_driver_startRX 0070  
          __size_of_i2c1_driver_getRXData 0003             __end_of_i2c1_driver_getRXData 05B5  
                       ??_DATAEE_ReadByte 0052                      __CFG_WDTCWS$WDTCWS_7 0000  
                             _setCallBack 033B                              ??_reset_recv 005A  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 0036  
              _INTERRUPT_InterruptManager 0004                              _SSP1STATbits 018F  
                       ??_TMR1_WriteTimer 0072                                  cksum@res 0053  
        __end_of_do_I2C_SEND_RESTART_READ 0593                              ??_returnStop 0077  
                __end_of_i2c_restartWrite 05C0                     ??_do_I2C_DO_NACK_STOP 0070  
                              _INTCONbits 000B                               _NVMCON1bits 081E  
                      __end_of_reset_recv 0405                     ??_i2c1_driver_sendACK 0070  
                        ?_do_I2C_TX_EMPTY 0070                               ??_read_ring 0055  
                  _do_I2C_DO_ADDRESS_NACK 02E5                                  intlevel1 0000  
                   ??_i2c1_driver_restart 0070                    rd2RegCompleteHandler@p 0076  
                   ??_i2c1_driver_startRX 0070                   ?_PIN_MANAGER_Initialize 0070  
                       i2c_restartWrite@p 0076                         __CFG_CLKOUTEN$OFF 0000  
                      __end_of_returnStop 05C4                    wr2RegCompleteHandler@p 0076  
                           __pstringtext1 03A9                     __size_of_update_clock 0024  
                          read_ring@index 0058                               ??_push_ring 005A  
                              _SSP1DATPPS 0EC6                                _SSP1CLKPPS 0EC5  
                  __size_of_i2c_setBuffer 0010                               _returnReset 05C0  
          __end_of_PIN_MANAGER_Initialize 0244               __end_of_i2c_busCollisionISR 05A1  
          __size_of_rd1RegCompleteHandler 0012             __end_of_rd1RegCompleteHandler 04A0  
          __size_of_wr1RegCompleteHandler 0012             __end_of_wr1RegCompleteHandler 04B2  
                   _do_I2C_SEND_ADR_WRITE 0545                      _do_I2C_SEND_ADR_READ 0534  
                         _TMR1_Initialize 0405  
=======
                                  i1l3001 0683                                    i1l3003 0686  
                                  i1l3021 06AF                                    i1l3013 0679  
                                  i1l3023 069F                                    i1l3007 067E  
                                  i1l3015 067C                                    i1l3031 066A  
                                  u120_20 05C0                                    i1l3121 0496  
                                  u120_21 05BF                                    i1l3041 06AC  
                                  i1l3201 068F                                    i1l3009 0681  
                                  i1l3025 066F                                    i1l3033 066D  
                                  _ODCONA 0F3A                                    _ODCONB 0F45  
                                  i1l3131 04AF                                    i1l3123 049C  
                                  i1l4011 045B                                    i1l3019 0693  
                                  i1l3203 0690                                    i1l3211 062C  
                                  i1l3027 0672                                    _ODCONC 0F50  
                                  _ODCOND 0F5B                                    i1l3125 04A4  
                                  i1l4013 05D9                                    i1l3037 064E  
                                  i1l3045 06A9                                    _ODCONE 0F66  
                                  i1l3127 04A5                                    i1l3119 048D  
                                  i1l4007 0444                                    i1l4023 06BC  
                                  i1l4031 0585                                    i1l3207 0625  
                                  i1l3215 063E                                    i1l3223 065D  
                                  i1l3231 0674                                    u201_20 01EB  
                                  i1l3129 04AB                                    i1l4009 044A  
                                  i1l4033 058E                                    i1l4041 057C  
                                  i1l3209 0627                                    i1l3217 0640  
                                  i1l3225 065F                                    i1l3233 0677  
                                  u201_21 01EA                                    i1l4027 06BA  
                                  i1l4035 0595                                    i1l4043 0583  
                                  i1l4051 0571                                    i1l4211 0393  
                                  i1l4203 0389                                    i1l3219 0644  
                                  i1l3227 0662                                    i1l4123 03F7  
                                  i1l4115 03EC                                    i1l4205 038C  
                                  i1l4221 0399                                    i1l4117 03EE  
                                  i1l4141 01EC                                    i1l4055 0597  
                                  i1l4039 0573                                    i1l4047 0561  
                                  i1l4063 04ED                                    i1l4215 0395  
                                  i1l3191 0649                                    i1l4119 03F3  
                                  i1l3167 06A6                                    i1l3351 06A3  
                                  u202_20 0235                                    i1l4057 05A0  
                                  i1l4049 056A                                    i1l4065 0504  
                                  i1l4209 0390                                    i1l3193 064B  
                                  i1l4129 03FB                                    i1l4161 0235  
                                  u202_21 0234                                    i1l4145 01F0  
                                  i1l4137 01E4                                    i1l3371 05A9  
                                  i1l3451 052E                                    i1l4059 05A7  
                                  i1l3195 064C                                    i1l4163 0237  
                                  i1l4155 01F8                                    i1l4171 0286  
                                  i1l3373 05AE                                    i1l3381 05B5  
                                  i1l3453 0531                                    i1l4069 06B8  
                                  i1l3189 0646                                    i1l4157 021E  
                                  i1l4149 01F4                                    i1l4173 0290  
                                  i1l3383 05B7                                    i1l3375 05AF  
                                  i1l3447 051E                                    i1l3199 068D  
                                  i1l4159 022A                                    i1l4175 0294  
                                  u203_20 029E                                    i1l3377 05B1  
                                  i1l3449 052A                                    i1l4185 02A5  
                                  i1l4177 029E                                    u203_21 029D  
                                  i1l3379 05B3                                    i1l4195 02AD  
                                  i1l4179 02A1                                    i1l4531 0006  
                                  i1l4189 02A9                                    i1l4381 041C  
                                  i1l3581 0697                                    i1l4541 0022  
                                  i1l4533 000A                                    i1l3583 054B  
                                  i1l4383 0421                                    i1l4543 002D  
                                  i1l4535 000F                                    u140_20 0528  
                                  u140_21 0525                                    i1l3585 054D  
                                  i1l4385 0428                                    i1l4545 0031  
                                  i1l4537 0013                                    i1l3587 0554  
                                  i1l2971 06B2                                    i1l2963 05BB  
                                  i1l4387 042D                                    i1l4379 0419  
                                  i1l4539 001E                                    i1l3589 055B  
                                  i1l2965 05C0                                    i1l2973 069B  
                                  i1l2967 05C8                                    i1l4751 02C2  
                                  u125_20 049C                                    u125_21 049B  
                                  i1l2969 06B5                                    i1l4753 020E  
                                  i1l2995 0688                                    i1l4755 0410  
                                  u141_24 052A                                    i1l4757 03AE  
                                  i1l2997 068B                                    u126_20 04AB  
                                  u142_20 052E                                    u230_20 000A  
                                  u126_21 04AA                                    u142_21 052D  
                                  u230_21 0009                                    u231_20 000F  
                                  u231_21 000E                                    u208_20 0421  
                                  u232_20 0013                                    u208_21 0420  
                                  u232_21 0012                                    _INLVLA 0F3C  
                                  _INLVLB 0F47                                    _INLVLC 0F52  
                                  _INLVLD 0F5D                                    _INLVLE 0F68  
                                  u153_20 055B                                    u209_20 0428  
                                  u233_20 001E                                    u153_21 055A  
                                  u209_21 0427                                    u233_21 001D  
                                  u234_20 0022                                    u234_21 0021  
                                  u139_20 05AE                                    u235_20 002D  
                                  u139_21 05AD                                    u235_21 002C  
                                  u236_20 0031                                    u236_21 0030  
                                  u195_20 044A                                    u195_21 0449  
                                  _OSCFRQ 0893                    ??_do_I2C_SEND_ADR_READ 0070  
                rdBlkRegCompleteHandler@p 0041                                 ??_i2c_ISR 0074  
                          __CFG_PWRTE$OFF 0000                     _i2c1_driver_getRXData 06AC  
    __end_of_TMR1_DefaultInterruptHandler 06C0     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 06BF                                    ___bmul 0535  
             __end_of_do_I2C_DO_NACK_STOP 0674       __end_of_i2c_setDataCompleteCallback 05E7  
             _i2c_setDataCompleteCallback 05D9                                 ??___eetoc 0045  
   __end_of_i2c1_driver_clearBusCollision 06A6    __size_of_i2c1_driver_clearBusCollision 0003  
           _i2c1_driver_clearBusCollision 06A3                            __CFG_STVREN$ON 0000  
                               ??___ctoee 004C           __size_of_do_I2C_DO_NACK_RESTART 0005  
                                  _buffer 235A                                    _last1m 0038  
                                  _last5s 0039                            ?_do_I2C_DO_ACK 0070  
                               ??_h_clock 0071                                    cksum@i 004A  
                               ??_cksum_w 004E               __end_of_i2c1_driver_sendACK 06A3  
                          _PMD_Initialize 062E            __end_of_do_I2C_DO_ADDRESS_NACK 0419  
             __end_of_i2c1_driver_restart 06B8                              ?_returnReset 0041  
             __end_of_i2c1_driver_startRX 06B2                            ___memcpyee@ptr 0043  
TMR1_SetInterruptHandler@InterruptHandler 0040                   __end_of_TMR1_WriteTimer 05BA  
                              ___eecpymem 03BD                          ?_TMR1_Initialize 0070  
                       _SYSTEM_Initialize 05F4                   __end_of__initialization 0071  
                         ??_i2c_setBuffer 0072                          _do_I2C_SEND_STOP 0679  
                      __size_of_do_I2C_RX 004B                        __size_of_do_I2C_TX 0055  
                      ?_SYSTEM_Initialize 0070                  __size_of_do_I2C_TX_EMPTY 0034  
                     ___bmul@multiplicand 0040                                ___memcpyee 0239  
                 _rdBlkRegCompleteHandler 04ED                         Push_ring_buffer@i 0050  
                          __pcstackCOMMON 0070                              __pidataBANK0 0656  
                     ??_SYSTEM_Initialize 0042                                 ?_TMR1_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                             __end_of_cksum 051E  
                        _DATAEE_WriteByte 0469                    __end_of_PMD_Initialize 0636  
               __size_of_Push_ring_buffer 0056                            setCallBack@idx 0074  
                                 ??_cksum 0048                    _do_I2C_DO_NACK_RESTART 066A  
               __end_of_SYSTEM_Initialize 0601                            _mssp1_clearIRQ 06A6  
                              __pbssBANK0 0020                                __pbssBANK1 00A0  
          __size_of_rd2RegCompleteHandler 0012             __end_of_rd2RegCompleteHandler 0573  
          __size_of_wr2RegCompleteHandler 0012             __end_of_wr2RegCompleteHandler 05A9  
                   _rd1RegCompleteHandler 0573                    ?_i2c1_driver_getRXData 0070  
                      __size_of_read_ring 0036                     _wr1RegCompleteHandler 0585  
            __size_of_i2c_busCollisionISR 0004                                __pmaintext 0075  
                           ??_do_I2C_IDLE 0070                      __size_of_setCallBack 0026  
                           ??_do_I2C_RCEN 0070                                   ?___bmul 0040  
                              ??_TMR1_ISR 0072                           __CFG_PPS1WAY$ON 0000  
                         ??_do_I2C_DO_ACK 0070                                __pintentry 0004  
                           Store_EEPROM@j 0049                       i2c_setBuffer@buffer 0073  
                         ?_PMD_Initialize 0070            ?_i2c1_driver_clearBusCollision 0070  
                       ?_i2c1_driver_open 0070                         __end_of_do_I2C_RX 02D1  
                       __end_of_do_I2C_TX 0239                         ?_i2c1_driver_stop 0070  
                      ??_i2c1_driver_open 0040                        ??_i2c1_driver_stop 0070  
                                 _OSCCON1 088D                                   _OSCCON3 088F  
                           ?_mssp1_setIRQ 0070                                   _NVMADRH 081B  
                                 _NVMADRL 081A                                   _NVMDATH 081D  
                                 _OSCTUNE 0892                                   _NVMDATL 081C  
                                 _NVMCON2 081F                                   _SSP1ADD 018D  
                                 _SLRCONA 0F3B                                   _SLRCONB 0F46  
                                 _SLRCONC 0F51                                   _SLRCOND 0F5C  
                                 _SLRCONE 0F67                                   _SSP1BUF 018C  
                  __end_of_mssp1_clearIRQ 06A9                                   _SSP1MSK 018E  
                 ??_do_I2C_SEND_ADR_WRITE 0071                          ?_TMR1_WriteTimer 0070  
             ??_do_I2C_SEND_RESTART_WRITE 0070                               ?___eecpymem 0040  
                              _last1m_aux 0033                        _i2c1_driver_TXData 0692  
                    DATAEE_WriteByte@bAdd 0040                                _last5s_aux 0034  
                      _i2c1_driver_i2cISR 002F                                   _i2c_ISR 0419  
               ??_rdBlkRegCompleteHandler 0078                        _i2c1_driver_isNACK 064E  
                             ?___memcpyee 0040                       ?_i2c1_driver_TXData 0070  
                    __CFG_SCANE$available 0000                           __size_of___bmul 0016  
                                 ___eetoc 05CA                                   ___ctoee 05E7  
                       ??_do_I2C_TX_EMPTY 0070                       ?_i2c1_driver_isNACK 0070  
                                 _h_clock 051E                                   __ptext1 0353  
                                 __ptext2 0535                                   __ptext3 060D  
                                 __ptext4 0619                                   __ptext5 0506  
                                 __ptext6 05CA                                   __ptext7 03BD  
                                 __ptext8 05E7                                   __ptext9 0239  
                     __end_of_do_I2C_IDLE 0692                       __end_of_do_I2C_RCEN 0664  
          ??_TMR1_DefaultInterruptHandler 0070                                   _cksum_w 0619  
                               _T1CONbits 020E                     _OSCILLATOR_Initialize 0636  
             __end_of_do_I2C_SEND_RESTART 0683                            ??_mssp1_setIRQ 0070  
                              _duty_cycle 005F         __size_of_TMR1_SetInterruptHandler 0006  
                                 _seg_aux 003A                      ??_i2c1_driver_TXData 0070  
                       __end_of_read_ring 0389                  ??_PIN_MANAGER_Initialize 0040  
               ?_TMR1_SetInterruptHandler 0040                                   _nreg_pt 0037  
                         ?_mssp1_clearIRQ 0070                  _do_I2C_SEND_RESTART_READ 0688  
              __size_of_SYSTEM_Initialize 000D                                   clrloop0 0602  
                                 _running 03E8                      __size_of_returnReset 0002  
                    end_of_initialization 0071                      ??_i2c1_driver_isNACK 0070  
               __size_of_i2c_restartWrite 0002              __end_of_i2c1_driver_sendNACK 069F  
                  ?_rd1RegCompleteHandler 0041                    ?_wr1RegCompleteHandler 0041  
            __end_of_i2c1_driver_resetBus 06BF                                _ptr_EEPROM 005D  
                         ___memcpyee@from 0040                 _do_I2C_SEND_RESTART_WRITE 0683  
                         ___memcpyee@size 0041                                main@F12846 0058  
                   __CFG_WDTCPS$WDTCPS_14 0000                       __size_of___eecpymem 002F  
                              _returnStop 06BC                          _Push_ring_buffer 018E  
         __end_of_rdBlkRegCompleteHandler 0506                  __end_of_do_I2C_SEND_STOP 067E  
                    __CFG_WDTCCS$HFINTOSC 0000                        _configuration_mode 03E1  
                               _TRISCbits 0013      __size_of_i2c_setDataCompleteCallback 000E  
                     __size_of___memcpyee 004D                               returnStop@p 0041  
                        __CFG_FEXTOSC$OFF 0000                  __end_of_DATAEE_WriteByte 048D  
            i2c_setDataCompleteCallback@p 0077             __size_of_do_I2C_SEND_ADR_READ 0009  
                           ?_update_clock 0070                               _do_I2C_IDLE 068D  
                             _do_I2C_RCEN 065D                            __end_of___bmul 054B  
                           ?_Store_EEPROM 0044                         __size_of_TMR1_ISR 0016  
                  ?_OSCILLATOR_Initialize 0070              __size_of_do_I2C_DO_NACK_STOP 0005  
                 ?_do_I2C_DO_NACK_RESTART 0070                             __pbitnvCOMMON 03E8  
                     start_initialization 0039                       _i2c_busCollisionISR 0697  
         __size_of_PIN_MANAGER_Initialize 0045                             _recovery_data 0000  
                            setCallBack@p 0072              __size_of_i2c1_driver_sendACK 0004  
                 i2c_setBuffer@bufferSize 0070                   ??_i2c1_driver_getRXData 0070  
                  rd1RegCompleteHandler@p 0041              __size_of_i2c1_driver_restart 0003  
            __size_of_i2c1_driver_startRX 0003                     __end_of_i2c_setBuffer 05CA  
                    ?_i2c_busCollisionISR 0070                            ??_update_clock 0070  
                        __CFG_LPBOREN$OFF 0000                      __end_of_mssp1_setIRQ 06AC  
                __size_of_TMR1_Initialize 001C                                  ??___bmul 0041  
                        ??_PMD_Initialize 0040                    wr1RegCompleteHandler@p 0041  
                           ?_do_I2C_RESET 0070                               __pdataBANK0 0058  
                          ??_Store_EEPROM 0046                               ?_returnStop 0041  
          __end_of_do_I2C_DO_NACK_RESTART 066F                                read_ring@i 0047  
                    _i2c1_driver_sendNACK 069B                         read_ring@absindex 0049  
                             __pbssEEDATA 0000                               __pbssBIGRAM 235A  
                             __pbssCOMMON 0078                                 ___latbits 0002  
                    _i2c1_driver_resetBus 06BE                             __pcstackBANK0 0040  
                               _do_I2C_RX 0286                                 _do_I2C_TX 01E4  
                            ??___eecpymem 0042            __size_of_do_I2C_SEND_ADR_WRITE 0008  
           __end_of_do_I2C_SEND_ADR_WRITE 0646                          _i2c_restartWrite 06B8  
               __size_of_i2c1_driver_open 000C                 __size_of_i2c1_driver_stop 0003  
                                ?_i2c_ISR 0070                           _do_I2C_TX_EMPTY 0389  
                           ??_setCallBack 0073                                 __pnvBANK0 005F  
                   _rd2RegCompleteHandler 0561                     ??_i2c_busCollisionISR 0070  
                   __end_of_fsmStateTable 04D1                              ??___memcpyee 0042  
                  _PIN_MANAGER_Initialize 02D1                     _wr2RegCompleteHandler 0597  
        __end_of_TMR1_SetInterruptHandler 066A                         read_ring@subindex 0044  
                          ??_do_I2C_RESET 0070                                  ?___eetoc 0070  
                                ?___ctoee 004B                  ??_do_I2C_DO_ADDRESS_NACK 0070  
             _i2c1_driver_busCollisionISR 0031                     __end_of_do_I2C_DO_ACK 0679  
                                ?_h_clock 0070              ??_INTERRUPT_InterruptManager 0077  
              ??_do_I2C_SEND_RESTART_READ 0070                     ?_i2c1_driver_sendNACK 0070  
                      __end_of___eecpymem 03EC                                  ?_cksum_w 0070  
                        ??_mssp1_clearIRQ 0070                     ?_i2c1_driver_resetBus 0070  
      __size_of_do_I2C_SEND_RESTART_WRITE 0005                                ?_do_I2C_RX 0070  
                              ?_do_I2C_TX 0070                        __end_of___memcpyee 0286  
                          __size_of_cksum 0018                   ??_rd1RegCompleteHandler 0078  
                               _read_ring 0353                   ??_wr1RegCompleteHandler 0078  
                           _task_schedule 0025                                  _LATAbits 0016  
                __end_of_Push_ring_buffer 01E4                       __size_of_returnStop 0002  
                               clear_ram0 0601                                 _nreg_init 03E0  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 0033  
                                _PIR3bits 070F                                 _ring_byte 0020  
                                _PIR4bits 0710                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR1_ISR 054B  
            ?_i2c_setDataCompleteCallback 0075                                  _SSP1STAT 018F  
                     __end_of_setCallBack 0469                         ??_TMR1_Initialize 0042  
                       ?_do_I2C_SEND_STOP 0070                             ??_returnReset 0078  
                      ??_do_I2C_SEND_STOP 0070               __size_of_i2c1_driver_TXData 0005  
                   DATAEE_WriteByte@bData 0042                      __end_of_update_clock 04B1  
       __end_of_do_I2C_SEND_RESTART_WRITE 0688                   __end_of_do_I2C_TX_EMPTY 03BD  
                              ?_read_ring 0044                  ?_rdBlkRegCompleteHandler 0041  
                       ?_DATAEE_WriteByte 0040              __size_of_do_I2C_SEND_RESTART 0005  
             __size_of_i2c1_driver_isNACK 0008                      __end_of_Store_EEPROM 0353  
                   __size_of_mssp1_setIRQ 0003                    ?_rd2RegCompleteHandler 0041  
                      ??_DATAEE_WriteByte 0043                       _do_I2C_DO_NACK_STOP 066F  
                        __size_of_i2c_ISR 002A                    ?_wr2RegCompleteHandler 0041  
                            ?_do_I2C_IDLE 0070                              ?_do_I2C_RCEN 0070  
                 ??_OSCILLATOR_Initialize 0040                       _i2c1_driver_sendACK 069F  
                        __size_of___eetoc 000F                          __size_of___ctoee 000D  
         __size_of_do_I2C_DO_ADDRESS_NACK 002D                       i2c1_driver_TXData@d 0070  
                  ??_i2c1_driver_sendNACK 0070             ??_i2c_setDataCompleteCallback 0040  
                     _i2c1_driver_restart 06B5                  _TMR1_SetInterruptHandler 0664  
                        __size_of_h_clock 0017                      ?_do_I2C_DO_NACK_STOP 0070  
                     _i2c1_driver_startRX 06AF              __end_of_do_I2C_SEND_ADR_READ 062E  
                  ??_i2c1_driver_resetBus 0070                     _TMR1_InterruptHandler 002D  
                        __size_of_cksum_w 000C                              _mssp1_setIRQ 06A9  
                             ??_do_I2C_RX 0070                               ??_do_I2C_TX 0071  
                                _clkh_aux 003E                                  __ptext10 05F4  
                                __ptext11 04D1                                  __ptext20 0697  
                                __ptext12 0664                                  __ptext21 06A3  
                                __ptext13 062E                                _T1GCONbits 020F  
                                __ptext30 065D                                  __ptext22 0419  
                                __ptext14 02D1                                  __ptext31 063E  
                                __ptext23 06A6                                  __ptext15 0636  
                                __ptext40 06A9                                  __ptext32 0625  
                                __ptext24 0286                                  __ptext16 018E  
                                __ptext41 064E                                  __ptext33 0679  
                                __ptext25 01E4                                  __ptext17 0316  
                                __ptext50 0585                                  __ptext42 0692  
                                __ptext34 067E                                  __ptext26 03EC  
                                __ptext18 0469                                  __ptext51 06B8  
                                __ptext43 06AC                                  __ptext35 0683  
                                __ptext27 066A                                  __ptext60 069F  
                                __ptext52 06BA                                  __ptext44 069B  
                                __ptext36 0688                                  __ptext28 066F  
                                __ptext61 054B                                  __ptext53 06BC  
                                __ptext45 06BE                                  __ptext37 068D  
                                __ptext29 0674                                  __ptext62 06BF  
                                __ptext54 0597                                  __ptext46 06AF  
                                __ptext38 0646                                  __ptext63 051E  
                                __ptext55 05D9                                  __ptext47 04ED  
                                __ptext39 0389                                  __ptext64 048D  
                                __ptext56 0443                                  __ptext48 0561  
                                __ptext65 05A9                                  __ptext57 05BA  
                                __ptext49 0573                                  __ptext58 06B2  
                                __ptext59 06B5                                  _clkm_aux 003C  
                            _SSP1CON1bits 0190                              _SSP1CON2bits 0191  
                    ?_i2c1_driver_sendACK 0070                      __end_of_do_I2C_RESET 064E  
             DATAEE_WriteByte@GIEBitValue 0043                      ?_i2c1_driver_restart 0070  
                     __end_of_returnReset 06BC                          _i2c1_driver_open 060D  
                        _i2c1_driver_stop 06B2                             __size_of_main 0119  
                    ?_i2c1_driver_startRX 0070            __size_of_i2c1_driver_getRXData 0003  
           __end_of_i2c1_driver_getRXData 06AF                      __CFG_WDTCWS$WDTCWS_7 0000  
                             _setCallBack 0443                                  int$flags 007E  
      __end_of_INTERRUPT_InterruptManager 0037                _INTERRUPT_InterruptManager 0004  
                Store_EEPROM@ptr_buffer_r 0044                                  main@data 0053  
                            _SSP1STATbits 018F                         ??_TMR1_WriteTimer 0072  
                                cksum@res 0049          __end_of_do_I2C_SEND_RESTART_READ 068D  
                            ??_returnStop 0078                  __end_of_i2c_restartWrite 06BA  
                   ??_do_I2C_DO_NACK_STOP 0070                           ___eecpymem@from 0040  
                         ___eecpymem@size 0041                                _INTCONbits 000B  
                             _NVMCON1bits 081E                     ??_i2c1_driver_sendACK 0070  
                        ?_do_I2C_TX_EMPTY 0070                               ??_read_ring 0045  
                  _do_I2C_DO_ADDRESS_NACK 03EC                                  intlevel1 0000  
                   ??_i2c1_driver_restart 0070                    rd2RegCompleteHandler@p 0041  
                   ??_i2c1_driver_startRX 0070                   ?_PIN_MANAGER_Initialize 0070  
                       i2c_restartWrite@p 0041                         __CFG_CLKOUTEN$OFF 0000  
                      __end_of_returnStop 06BE                    wr2RegCompleteHandler@p 0041  
                           __pstringtext1 04B1                     __size_of_update_clock 0024  
                          read_ring@index 0048                                _SSP1DATPPS 0EC6  
                              _SSP1CLKPPS 0EC5                    __size_of_i2c_setBuffer 0010  
                             _returnReset 06BA                     __size_of_Store_EEPROM 003D  
                           ___eecpymem@cp 0043                             ___eecpymem@to 0044  
          __end_of_PIN_MANAGER_Initialize 0316               __end_of_i2c_busCollisionISR 069B  
          __size_of_rd1RegCompleteHandler 0012             __end_of_rd1RegCompleteHandler 0585  
                              _STATUSbits 0003            __size_of_wr1RegCompleteHandler 0012  
           __end_of_wr1RegCompleteHandler 0597                         ?_Push_ring_buffer 0070  
                   _do_I2C_SEND_ADR_WRITE 063E                      _do_I2C_SEND_ADR_READ 0625  
                         _TMR1_Initialize 04D1                              ___eetoc@addr 0046  
                            ___eetoc@data 0047                        ??_Push_ring_buffer 004B  
>>>>>>> 8a784acfeed5fb28f801f16fe528231cbb0c7541
