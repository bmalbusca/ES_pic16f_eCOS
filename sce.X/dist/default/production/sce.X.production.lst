

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 01 13:40:08 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	bitnvCOMMON,global,bit,class=COMMON,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	intentry,global,class=CODE,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,delta=2
    76                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
    77                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    78                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    79                           	psect	text65,local,class=CODE,merge=1,inline,delta=2
    80                           	psect	text66,local,class=CODE,merge=1,inline,delta=2
    81                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
    82                           	psect	text68,local,class=CODE,merge=1,inline,delta=2
    83                           	psect	text69,local,class=CODE,merge=1,delta=2
    84                           	psect	text70,local,class=CODE,merge=1,delta=2
    85                           	psect	text71,local,class=CODE,merge=1,delta=2
    86                           	psect	text72,local,class=CODE,merge=1,delta=2
    87                           	psect	text73,local,class=CODE,merge=1,delta=2
    88                           	psect	text74,local,class=CODE,merge=1,delta=2
    89                           	psect	text75,local,class=CODE,merge=1,delta=2
    90                           	psect	text76,local,class=CODE,merge=1,delta=2
    91                           	psect	text77,local,class=CODE,merge=1,delta=2
    92                           	psect	text78,local,class=CODE,merge=1,delta=2
    93                           	psect	text79,local,class=CODE,merge=1,delta=2
    94                           	psect	text80,local,class=CODE,merge=1,inline,delta=2
    95                           	psect	text81,local,class=CODE,merge=1,inline,delta=2
    96                           	psect	text82,local,class=CODE,merge=1,inline,delta=2
    97                           	psect	text83,local,class=CODE,merge=1,delta=2
    98                           	psect	text84,local,class=CODE,merge=1,delta=2
    99                           	psect	text85,local,class=CODE,merge=1,delta=2
   100                           	psect	text86,local,class=CODE,merge=1,delta=2
   101                           	psect	text87,local,class=CODE,merge=1,delta=2
   102                           	psect	text88,local,class=CODE,merge=1,delta=2
   103                           	psect	text89,local,class=CODE,merge=1,delta=2
   104                           	psect	text90,local,class=CODE,merge=1,delta=2
   105                           	psect	text91,local,class=CODE,merge=1,delta=2
   106                           	psect	text92,local,class=CODE,merge=1,delta=2
   107                           	psect	text93,local,class=CODE,merge=1,delta=2
   108                           	psect	text94,local,class=CODE,merge=1,delta=2
   109                           	psect	text95,local,class=CODE,merge=1,delta=2
   110                           	dabs	1,0x7E,2
   111  0000                     
   112                           ; Version 2.10
   113                           ; Generated 31/07/2019 GMT
   114                           ; 
   115                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   116                           ; All rights reserved.
   117                           ; 
   118                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   119                           ; 
   120                           ; Redistribution and use in source and binary forms, with or without modification, are
   121                           ; permitted provided that the following conditions are met:
   122                           ; 
   123                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   124                           ;        conditions and the following disclaimer.
   125                           ; 
   126                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   127                           ;        of conditions and the following disclaimer in the documentation and/or other
   128                           ;        materials provided with the distribution.
   129                           ; 
   130                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   131                           ;        software without specific prior written permission.
   132                           ; 
   133                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   134                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   135                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   136                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   137                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   138                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   139                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   140                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   141                           ; 
   142                           ; 
   143                           ; Code-generator required, PIC16F18875 Definitions
   144                           ; 
   145                           ; SFR Addresses
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0008                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001C                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  008C                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0110                     	;# 
   206  0110                     	;# 
   207  0111                     	;# 
   208  0112                     	;# 
   209  0112                     	;# 
   210  0113                     	;# 
   211  0114                     	;# 
   212  0114                     	;# 
   213  0115                     	;# 
   214  0116                     	;# 
   215  0116                     	;# 
   216  0117                     	;# 
   217  0119                     	;# 
   218  0119                     	;# 
   219  0119                     	;# 
   220  011A                     	;# 
   221  011A                     	;# 
   222  011A                     	;# 
   223  011B                     	;# 
   224  011B                     	;# 
   225  011B                     	;# 
   226  011B                     	;# 
   227  011B                     	;# 
   228  011C                     	;# 
   229  011C                     	;# 
   230  011C                     	;# 
   231  011D                     	;# 
   232  011D                     	;# 
   233  011D                     	;# 
   234  011E                     	;# 
   235  011E                     	;# 
   236  011E                     	;# 
   237  011F                     	;# 
   238  011F                     	;# 
   239  011F                     	;# 
   240  011F                     	;# 
   241  011F                     	;# 
   242  018C                     	;# 
   243  018D                     	;# 
   244  018E                     	;# 
   245  018F                     	;# 
   246  0190                     	;# 
   247  0191                     	;# 
   248  0192                     	;# 
   249  0196                     	;# 
   250  0197                     	;# 
   251  0198                     	;# 
   252  0199                     	;# 
   253  019A                     	;# 
   254  019B                     	;# 
   255  019C                     	;# 
   256  020C                     	;# 
   257  020C                     	;# 
   258  020D                     	;# 
   259  020E                     	;# 
   260  020F                     	;# 
   261  020F                     	;# 
   262  0210                     	;# 
   263  0210                     	;# 
   264  0211                     	;# 
   265  0211                     	;# 
   266  0212                     	;# 
   267  0212                     	;# 
   268  0213                     	;# 
   269  0214                     	;# 
   270  0215                     	;# 
   271  0215                     	;# 
   272  0216                     	;# 
   273  0216                     	;# 
   274  0217                     	;# 
   275  0217                     	;# 
   276  0218                     	;# 
   277  0218                     	;# 
   278  0219                     	;# 
   279  021A                     	;# 
   280  021B                     	;# 
   281  021B                     	;# 
   282  021C                     	;# 
   283  021C                     	;# 
   284  021D                     	;# 
   285  021D                     	;# 
   286  021E                     	;# 
   287  021F                     	;# 
   288  028C                     	;# 
   289  028C                     	;# 
   290  028D                     	;# 
   291  028D                     	;# 
   292  028E                     	;# 
   293  028F                     	;# 
   294  0290                     	;# 
   295  0290                     	;# 
   296  0291                     	;# 
   297  0292                     	;# 
   298  0292                     	;# 
   299  0293                     	;# 
   300  0293                     	;# 
   301  0294                     	;# 
   302  0295                     	;# 
   303  0296                     	;# 
   304  0296                     	;# 
   305  0297                     	;# 
   306  0298                     	;# 
   307  0298                     	;# 
   308  0299                     	;# 
   309  0299                     	;# 
   310  029A                     	;# 
   311  029B                     	;# 
   312  029C                     	;# 
   313  029C                     	;# 
   314  029D                     	;# 
   315  030C                     	;# 
   316  030C                     	;# 
   317  030D                     	;# 
   318  030E                     	;# 
   319  030F                     	;# 
   320  0310                     	;# 
   321  0310                     	;# 
   322  0311                     	;# 
   323  0312                     	;# 
   324  0313                     	;# 
   325  0314                     	;# 
   326  0314                     	;# 
   327  0315                     	;# 
   328  0316                     	;# 
   329  0317                     	;# 
   330  0318                     	;# 
   331  0318                     	;# 
   332  0319                     	;# 
   333  031A                     	;# 
   334  031B                     	;# 
   335  031C                     	;# 
   336  031C                     	;# 
   337  031D                     	;# 
   338  031E                     	;# 
   339  031F                     	;# 
   340  038C                     	;# 
   341  038C                     	;# 
   342  038D                     	;# 
   343  038E                     	;# 
   344  0390                     	;# 
   345  0390                     	;# 
   346  0391                     	;# 
   347  0392                     	;# 
   348  040C                     	;# 
   349  040D                     	;# 
   350  040E                     	;# 
   351  040F                     	;# 
   352  0410                     	;# 
   353  0411                     	;# 
   354  0416                     	;# 
   355  0416                     	;# 
   356  0417                     	;# 
   357  0418                     	;# 
   358  0418                     	;# 
   359  0419                     	;# 
   360  041A                     	;# 
   361  041A                     	;# 
   362  041B                     	;# 
   363  041C                     	;# 
   364  041C                     	;# 
   365  041D                     	;# 
   366  041E                     	;# 
   367  041F                     	;# 
   368  048C                     	;# 
   369  048C                     	;# 
   370  048D                     	;# 
   371  048E                     	;# 
   372  048F                     	;# 
   373  048F                     	;# 
   374  0490                     	;# 
   375  0491                     	;# 
   376  0492                     	;# 
   377  0492                     	;# 
   378  0493                     	;# 
   379  0494                     	;# 
   380  0495                     	;# 
   381  0495                     	;# 
   382  0496                     	;# 
   383  0497                     	;# 
   384  0498                     	;# 
   385  0499                     	;# 
   386  049A                     	;# 
   387  049B                     	;# 
   388  049C                     	;# 
   389  049D                     	;# 
   390  050C                     	;# 
   391  050C                     	;# 
   392  050D                     	;# 
   393  050E                     	;# 
   394  050F                     	;# 
   395  050F                     	;# 
   396  0510                     	;# 
   397  0511                     	;# 
   398  0512                     	;# 
   399  0512                     	;# 
   400  0513                     	;# 
   401  0514                     	;# 
   402  0515                     	;# 
   403  0515                     	;# 
   404  0516                     	;# 
   405  0517                     	;# 
   406  0518                     	;# 
   407  0519                     	;# 
   408  051A                     	;# 
   409  051B                     	;# 
   410  051C                     	;# 
   411  051D                     	;# 
   412  058C                     	;# 
   413  058C                     	;# 
   414  058D                     	;# 
   415  058E                     	;# 
   416  058F                     	;# 
   417  058F                     	;# 
   418  0590                     	;# 
   419  0591                     	;# 
   420  0592                     	;# 
   421  0593                     	;# 
   422  060C                     	;# 
   423  060D                     	;# 
   424  060E                     	;# 
   425  060F                     	;# 
   426  0610                     	;# 
   427  0611                     	;# 
   428  0612                     	;# 
   429  0613                     	;# 
   430  0614                     	;# 
   431  0616                     	;# 
   432  0617                     	;# 
   433  0618                     	;# 
   434  0619                     	;# 
   435  061A                     	;# 
   436  061B                     	;# 
   437  061C                     	;# 
   438  061D                     	;# 
   439  061E                     	;# 
   440  068C                     	;# 
   441  068D                     	;# 
   442  068E                     	;# 
   443  068F                     	;# 
   444  0690                     	;# 
   445  0691                     	;# 
   446  0692                     	;# 
   447  0693                     	;# 
   448  0694                     	;# 
   449  070C                     	;# 
   450  070D                     	;# 
   451  070E                     	;# 
   452  070F                     	;# 
   453  0710                     	;# 
   454  0711                     	;# 
   455  0712                     	;# 
   456  0713                     	;# 
   457  0714                     	;# 
   458  0716                     	;# 
   459  0717                     	;# 
   460  0718                     	;# 
   461  0719                     	;# 
   462  071A                     	;# 
   463  071B                     	;# 
   464  071C                     	;# 
   465  071D                     	;# 
   466  071E                     	;# 
   467  0796                     	;# 
   468  0797                     	;# 
   469  0798                     	;# 
   470  0799                     	;# 
   471  079A                     	;# 
   472  079B                     	;# 
   473  080C                     	;# 
   474  080D                     	;# 
   475  080E                     	;# 
   476  080F                     	;# 
   477  0810                     	;# 
   478  0811                     	;# 
   479  0812                     	;# 
   480  0813                     	;# 
   481  0814                     	;# 
   482  081A                     	;# 
   483  081B                     	;# 
   484  081C                     	;# 
   485  081D                     	;# 
   486  081E                     	;# 
   487  081F                     	;# 
   488  088C                     	;# 
   489  088D                     	;# 
   490  088E                     	;# 
   491  088F                     	;# 
   492  0890                     	;# 
   493  0891                     	;# 
   494  0892                     	;# 
   495  0893                     	;# 
   496  0895                     	;# 
   497  0896                     	;# 
   498  0897                     	;# 
   499  0898                     	;# 
   500  0899                     	;# 
   501  089A                     	;# 
   502  089B                     	;# 
   503  090C                     	;# 
   504  090E                     	;# 
   505  090F                     	;# 
   506  091F                     	;# 
   507  091F                     	;# 
   508  098F                     	;# 
   509  098F                     	;# 
   510  0990                     	;# 
   511  0991                     	;# 
   512  0992                     	;# 
   513  0993                     	;# 
   514  0994                     	;# 
   515  0995                     	;# 
   516  0996                     	;# 
   517  0997                     	;# 
   518  0E0F                     	;# 
   519  0E10                     	;# 
   520  0E11                     	;# 
   521  0E12                     	;# 
   522  0E13                     	;# 
   523  0E14                     	;# 
   524  0E15                     	;# 
   525  0E16                     	;# 
   526  0E17                     	;# 
   527  0E18                     	;# 
   528  0E19                     	;# 
   529  0E1A                     	;# 
   530  0E1B                     	;# 
   531  0E1C                     	;# 
   532  0E1D                     	;# 
   533  0E1E                     	;# 
   534  0E1F                     	;# 
   535  0E20                     	;# 
   536  0E21                     	;# 
   537  0E22                     	;# 
   538  0E23                     	;# 
   539  0E24                     	;# 
   540  0E25                     	;# 
   541  0E26                     	;# 
   542  0E27                     	;# 
   543  0E28                     	;# 
   544  0E29                     	;# 
   545  0E2A                     	;# 
   546  0E2B                     	;# 
   547  0E2C                     	;# 
   548  0E2D                     	;# 
   549  0E2E                     	;# 
   550  0E2F                     	;# 
   551  0E30                     	;# 
   552  0E31                     	;# 
   553  0E32                     	;# 
   554  0E33                     	;# 
   555  0E34                     	;# 
   556  0E35                     	;# 
   557  0E36                     	;# 
   558  0E37                     	;# 
   559  0E8F                     	;# 
   560  0E90                     	;# 
   561  0E91                     	;# 
   562  0E92                     	;# 
   563  0E93                     	;# 
   564  0E94                     	;# 
   565  0E95                     	;# 
   566  0E96                     	;# 
   567  0E97                     	;# 
   568  0E9C                     	;# 
   569  0E9D                     	;# 
   570  0E9E                     	;# 
   571  0EA1                     	;# 
   572  0EA2                     	;# 
   573  0EA3                     	;# 
   574  0EA4                     	;# 
   575  0EA5                     	;# 
   576  0EA9                     	;# 
   577  0EAA                     	;# 
   578  0EAB                     	;# 
   579  0EAC                     	;# 
   580  0EB1                     	;# 
   581  0EB2                     	;# 
   582  0EB3                     	;# 
   583  0EB8                     	;# 
   584  0EB9                     	;# 
   585  0EBA                     	;# 
   586  0EBB                     	;# 
   587  0EBC                     	;# 
   588  0EBD                     	;# 
   589  0EBE                     	;# 
   590  0EC3                     	;# 
   591  0EC5                     	;# 
   592  0EC6                     	;# 
   593  0EC7                     	;# 
   594  0EC8                     	;# 
   595  0EC9                     	;# 
   596  0ECA                     	;# 
   597  0ECB                     	;# 
   598  0ECC                     	;# 
   599  0F10                     	;# 
   600  0F11                     	;# 
   601  0F12                     	;# 
   602  0F13                     	;# 
   603  0F14                     	;# 
   604  0F15                     	;# 
   605  0F16                     	;# 
   606  0F17                     	;# 
   607  0F18                     	;# 
   608  0F19                     	;# 
   609  0F1A                     	;# 
   610  0F1B                     	;# 
   611  0F1C                     	;# 
   612  0F1D                     	;# 
   613  0F1E                     	;# 
   614  0F1F                     	;# 
   615  0F20                     	;# 
   616  0F21                     	;# 
   617  0F22                     	;# 
   618  0F23                     	;# 
   619  0F24                     	;# 
   620  0F25                     	;# 
   621  0F26                     	;# 
   622  0F27                     	;# 
   623  0F28                     	;# 
   624  0F29                     	;# 
   625  0F2A                     	;# 
   626  0F2B                     	;# 
   627  0F2C                     	;# 
   628  0F2D                     	;# 
   629  0F2E                     	;# 
   630  0F2F                     	;# 
   631  0F30                     	;# 
   632  0F31                     	;# 
   633  0F32                     	;# 
   634  0F38                     	;# 
   635  0F39                     	;# 
   636  0F3A                     	;# 
   637  0F3B                     	;# 
   638  0F3C                     	;# 
   639  0F3D                     	;# 
   640  0F3E                     	;# 
   641  0F3F                     	;# 
   642  0F40                     	;# 
   643  0F41                     	;# 
   644  0F43                     	;# 
   645  0F44                     	;# 
   646  0F45                     	;# 
   647  0F46                     	;# 
   648  0F47                     	;# 
   649  0F48                     	;# 
   650  0F49                     	;# 
   651  0F4A                     	;# 
   652  0F4B                     	;# 
   653  0F4C                     	;# 
   654  0F4E                     	;# 
   655  0F4F                     	;# 
   656  0F50                     	;# 
   657  0F51                     	;# 
   658  0F52                     	;# 
   659  0F53                     	;# 
   660  0F54                     	;# 
   661  0F55                     	;# 
   662  0F56                     	;# 
   663  0F57                     	;# 
   664  0F59                     	;# 
   665  0F5A                     	;# 
   666  0F5B                     	;# 
   667  0F5C                     	;# 
   668  0F5D                     	;# 
   669  0F61                     	;# 
   670  0F62                     	;# 
   671  0F64                     	;# 
   672  0F65                     	;# 
   673  0F66                     	;# 
   674  0F67                     	;# 
   675  0F68                     	;# 
   676  0F69                     	;# 
   677  0F6A                     	;# 
   678  0F6B                     	;# 
   679  0F6C                     	;# 
   680  0F6D                     	;# 
   681  0FE4                     	;# 
   682  0FE5                     	;# 
   683  0FE6                     	;# 
   684  0FE7                     	;# 
   685  0FE8                     	;# 
   686  0FE9                     	;# 
   687  0FEA                     	;# 
   688  0FEB                     	;# 
   689  0FED                     	;# 
   690  0FEE                     	;# 
   691  0FEF                     	;# 
   692  0000                     	;# 
   693  0001                     	;# 
   694  0002                     	;# 
   695  0003                     	;# 
   696  0004                     	;# 
   697  0005                     	;# 
   698  0006                     	;# 
   699  0007                     	;# 
   700  0008                     	;# 
   701  0009                     	;# 
   702  000A                     	;# 
   703  000B                     	;# 
   704  000C                     	;# 
   705  000D                     	;# 
   706  000E                     	;# 
   707  000F                     	;# 
   708  0010                     	;# 
   709  0011                     	;# 
   710  0012                     	;# 
   711  0013                     	;# 
   712  0014                     	;# 
   713  0015                     	;# 
   714  0016                     	;# 
   715  0017                     	;# 
   716  0018                     	;# 
   717  0019                     	;# 
   718  001A                     	;# 
   719  001C                     	;# 
   720  001C                     	;# 
   721  001D                     	;# 
   722  001D                     	;# 
   723  001E                     	;# 
   724  001F                     	;# 
   725  008C                     	;# 
   726  008C                     	;# 
   727  008D                     	;# 
   728  008E                     	;# 
   729  008E                     	;# 
   730  008F                     	;# 
   731  0090                     	;# 
   732  0090                     	;# 
   733  0091                     	;# 
   734  0093                     	;# 
   735  0094                     	;# 
   736  0095                     	;# 
   737  0096                     	;# 
   738  0097                     	;# 
   739  0098                     	;# 
   740  0099                     	;# 
   741  009A                     	;# 
   742  009B                     	;# 
   743  009C                     	;# 
   744  009D                     	;# 
   745  009E                     	;# 
   746  010C                     	;# 
   747  010D                     	;# 
   748  010E                     	;# 
   749  010E                     	;# 
   750  010F                     	;# 
   751  0110                     	;# 
   752  0110                     	;# 
   753  0111                     	;# 
   754  0112                     	;# 
   755  0112                     	;# 
   756  0113                     	;# 
   757  0114                     	;# 
   758  0114                     	;# 
   759  0115                     	;# 
   760  0116                     	;# 
   761  0116                     	;# 
   762  0117                     	;# 
   763  0119                     	;# 
   764  0119                     	;# 
   765  0119                     	;# 
   766  011A                     	;# 
   767  011A                     	;# 
   768  011A                     	;# 
   769  011B                     	;# 
   770  011B                     	;# 
   771  011B                     	;# 
   772  011B                     	;# 
   773  011B                     	;# 
   774  011C                     	;# 
   775  011C                     	;# 
   776  011C                     	;# 
   777  011D                     	;# 
   778  011D                     	;# 
   779  011D                     	;# 
   780  011E                     	;# 
   781  011E                     	;# 
   782  011E                     	;# 
   783  011F                     	;# 
   784  011F                     	;# 
   785  011F                     	;# 
   786  011F                     	;# 
   787  011F                     	;# 
   788  018C                     	;# 
   789  018D                     	;# 
   790  018E                     	;# 
   791  018F                     	;# 
   792  0190                     	;# 
   793  0191                     	;# 
   794  0192                     	;# 
   795  0196                     	;# 
   796  0197                     	;# 
   797  0198                     	;# 
   798  0199                     	;# 
   799  019A                     	;# 
   800  019B                     	;# 
   801  019C                     	;# 
   802  020C                     	;# 
   803  020C                     	;# 
   804  020D                     	;# 
   805  020E                     	;# 
   806  020F                     	;# 
   807  020F                     	;# 
   808  0210                     	;# 
   809  0210                     	;# 
   810  0211                     	;# 
   811  0211                     	;# 
   812  0212                     	;# 
   813  0212                     	;# 
   814  0213                     	;# 
   815  0214                     	;# 
   816  0215                     	;# 
   817  0215                     	;# 
   818  0216                     	;# 
   819  0216                     	;# 
   820  0217                     	;# 
   821  0217                     	;# 
   822  0218                     	;# 
   823  0218                     	;# 
   824  0219                     	;# 
   825  021A                     	;# 
   826  021B                     	;# 
   827  021B                     	;# 
   828  021C                     	;# 
   829  021C                     	;# 
   830  021D                     	;# 
   831  021D                     	;# 
   832  021E                     	;# 
   833  021F                     	;# 
   834  028C                     	;# 
   835  028C                     	;# 
   836  028D                     	;# 
   837  028D                     	;# 
   838  028E                     	;# 
   839  028F                     	;# 
   840  0290                     	;# 
   841  0290                     	;# 
   842  0291                     	;# 
   843  0292                     	;# 
   844  0292                     	;# 
   845  0293                     	;# 
   846  0293                     	;# 
   847  0294                     	;# 
   848  0295                     	;# 
   849  0296                     	;# 
   850  0296                     	;# 
   851  0297                     	;# 
   852  0298                     	;# 
   853  0298                     	;# 
   854  0299                     	;# 
   855  0299                     	;# 
   856  029A                     	;# 
   857  029B                     	;# 
   858  029C                     	;# 
   859  029C                     	;# 
   860  029D                     	;# 
   861  030C                     	;# 
   862  030C                     	;# 
   863  030D                     	;# 
   864  030E                     	;# 
   865  030F                     	;# 
   866  0310                     	;# 
   867  0310                     	;# 
   868  0311                     	;# 
   869  0312                     	;# 
   870  0313                     	;# 
   871  0314                     	;# 
   872  0314                     	;# 
   873  0315                     	;# 
   874  0316                     	;# 
   875  0317                     	;# 
   876  0318                     	;# 
   877  0318                     	;# 
   878  0319                     	;# 
   879  031A                     	;# 
   880  031B                     	;# 
   881  031C                     	;# 
   882  031C                     	;# 
   883  031D                     	;# 
   884  031E                     	;# 
   885  031F                     	;# 
   886  038C                     	;# 
   887  038C                     	;# 
   888  038D                     	;# 
   889  038E                     	;# 
   890  0390                     	;# 
   891  0390                     	;# 
   892  0391                     	;# 
   893  0392                     	;# 
   894  040C                     	;# 
   895  040D                     	;# 
   896  040E                     	;# 
   897  040F                     	;# 
   898  0410                     	;# 
   899  0411                     	;# 
   900  0416                     	;# 
   901  0416                     	;# 
   902  0417                     	;# 
   903  0418                     	;# 
   904  0418                     	;# 
   905  0419                     	;# 
   906  041A                     	;# 
   907  041A                     	;# 
   908  041B                     	;# 
   909  041C                     	;# 
   910  041C                     	;# 
   911  041D                     	;# 
   912  041E                     	;# 
   913  041F                     	;# 
   914  048C                     	;# 
   915  048C                     	;# 
   916  048D                     	;# 
   917  048E                     	;# 
   918  048F                     	;# 
   919  048F                     	;# 
   920  0490                     	;# 
   921  0491                     	;# 
   922  0492                     	;# 
   923  0492                     	;# 
   924  0493                     	;# 
   925  0494                     	;# 
   926  0495                     	;# 
   927  0495                     	;# 
   928  0496                     	;# 
   929  0497                     	;# 
   930  0498                     	;# 
   931  0499                     	;# 
   932  049A                     	;# 
   933  049B                     	;# 
   934  049C                     	;# 
   935  049D                     	;# 
   936  050C                     	;# 
   937  050C                     	;# 
   938  050D                     	;# 
   939  050E                     	;# 
   940  050F                     	;# 
   941  050F                     	;# 
   942  0510                     	;# 
   943  0511                     	;# 
   944  0512                     	;# 
   945  0512                     	;# 
   946  0513                     	;# 
   947  0514                     	;# 
   948  0515                     	;# 
   949  0515                     	;# 
   950  0516                     	;# 
   951  0517                     	;# 
   952  0518                     	;# 
   953  0519                     	;# 
   954  051A                     	;# 
   955  051B                     	;# 
   956  051C                     	;# 
   957  051D                     	;# 
   958  058C                     	;# 
   959  058C                     	;# 
   960  058D                     	;# 
   961  058E                     	;# 
   962  058F                     	;# 
   963  058F                     	;# 
   964  0590                     	;# 
   965  0591                     	;# 
   966  0592                     	;# 
   967  0593                     	;# 
   968  060C                     	;# 
   969  060D                     	;# 
   970  060E                     	;# 
   971  060F                     	;# 
   972  0610                     	;# 
   973  0611                     	;# 
   974  0612                     	;# 
   975  0613                     	;# 
   976  0614                     	;# 
   977  0616                     	;# 
   978  0617                     	;# 
   979  0618                     	;# 
   980  0619                     	;# 
   981  061A                     	;# 
   982  061B                     	;# 
   983  061C                     	;# 
   984  061D                     	;# 
   985  061E                     	;# 
   986  068C                     	;# 
   987  068D                     	;# 
   988  068E                     	;# 
   989  068F                     	;# 
   990  0690                     	;# 
   991  0691                     	;# 
   992  0692                     	;# 
   993  0693                     	;# 
   994  0694                     	;# 
   995  070C                     	;# 
   996  070D                     	;# 
   997  070E                     	;# 
   998  070F                     	;# 
   999  0710                     	;# 
  1000  0711                     	;# 
  1001  0712                     	;# 
  1002  0713                     	;# 
  1003  0714                     	;# 
  1004  0716                     	;# 
  1005  0717                     	;# 
  1006  0718                     	;# 
  1007  0719                     	;# 
  1008  071A                     	;# 
  1009  071B                     	;# 
  1010  071C                     	;# 
  1011  071D                     	;# 
  1012  071E                     	;# 
  1013  0796                     	;# 
  1014  0797                     	;# 
  1015  0798                     	;# 
  1016  0799                     	;# 
  1017  079A                     	;# 
  1018  079B                     	;# 
  1019  080C                     	;# 
  1020  080D                     	;# 
  1021  080E                     	;# 
  1022  080F                     	;# 
  1023  0810                     	;# 
  1024  0811                     	;# 
  1025  0812                     	;# 
  1026  0813                     	;# 
  1027  0814                     	;# 
  1028  081A                     	;# 
  1029  081B                     	;# 
  1030  081C                     	;# 
  1031  081D                     	;# 
  1032  081E                     	;# 
  1033  081F                     	;# 
  1034  088C                     	;# 
  1035  088D                     	;# 
  1036  088E                     	;# 
  1037  088F                     	;# 
  1038  0890                     	;# 
  1039  0891                     	;# 
  1040  0892                     	;# 
  1041  0893                     	;# 
  1042  0895                     	;# 
  1043  0896                     	;# 
  1044  0897                     	;# 
  1045  0898                     	;# 
  1046  0899                     	;# 
  1047  089A                     	;# 
  1048  089B                     	;# 
  1049  090C                     	;# 
  1050  090E                     	;# 
  1051  090F                     	;# 
  1052  091F                     	;# 
  1053  091F                     	;# 
  1054  098F                     	;# 
  1055  098F                     	;# 
  1056  0990                     	;# 
  1057  0991                     	;# 
  1058  0992                     	;# 
  1059  0993                     	;# 
  1060  0994                     	;# 
  1061  0995                     	;# 
  1062  0996                     	;# 
  1063  0997                     	;# 
  1064  0E0F                     	;# 
  1065  0E10                     	;# 
  1066  0E11                     	;# 
  1067  0E12                     	;# 
  1068  0E13                     	;# 
  1069  0E14                     	;# 
  1070  0E15                     	;# 
  1071  0E16                     	;# 
  1072  0E17                     	;# 
  1073  0E18                     	;# 
  1074  0E19                     	;# 
  1075  0E1A                     	;# 
  1076  0E1B                     	;# 
  1077  0E1C                     	;# 
  1078  0E1D                     	;# 
  1079  0E1E                     	;# 
  1080  0E1F                     	;# 
  1081  0E20                     	;# 
  1082  0E21                     	;# 
  1083  0E22                     	;# 
  1084  0E23                     	;# 
  1085  0E24                     	;# 
  1086  0E25                     	;# 
  1087  0E26                     	;# 
  1088  0E27                     	;# 
  1089  0E28                     	;# 
  1090  0E29                     	;# 
  1091  0E2A                     	;# 
  1092  0E2B                     	;# 
  1093  0E2C                     	;# 
  1094  0E2D                     	;# 
  1095  0E2E                     	;# 
  1096  0E2F                     	;# 
  1097  0E30                     	;# 
  1098  0E31                     	;# 
  1099  0E32                     	;# 
  1100  0E33                     	;# 
  1101  0E34                     	;# 
  1102  0E35                     	;# 
  1103  0E36                     	;# 
  1104  0E37                     	;# 
  1105  0E8F                     	;# 
  1106  0E90                     	;# 
  1107  0E91                     	;# 
  1108  0E92                     	;# 
  1109  0E93                     	;# 
  1110  0E94                     	;# 
  1111  0E95                     	;# 
  1112  0E96                     	;# 
  1113  0E97                     	;# 
  1114  0E9C                     	;# 
  1115  0E9D                     	;# 
  1116  0E9E                     	;# 
  1117  0EA1                     	;# 
  1118  0EA2                     	;# 
  1119  0EA3                     	;# 
  1120  0EA4                     	;# 
  1121  0EA5                     	;# 
  1122  0EA9                     	;# 
  1123  0EAA                     	;# 
  1124  0EAB                     	;# 
  1125  0EAC                     	;# 
  1126  0EB1                     	;# 
  1127  0EB2                     	;# 
  1128  0EB3                     	;# 
  1129  0EB8                     	;# 
  1130  0EB9                     	;# 
  1131  0EBA                     	;# 
  1132  0EBB                     	;# 
  1133  0EBC                     	;# 
  1134  0EBD                     	;# 
  1135  0EBE                     	;# 
  1136  0EC3                     	;# 
  1137  0EC5                     	;# 
  1138  0EC6                     	;# 
  1139  0EC7                     	;# 
  1140  0EC8                     	;# 
  1141  0EC9                     	;# 
  1142  0ECA                     	;# 
  1143  0ECB                     	;# 
  1144  0ECC                     	;# 
  1145  0F10                     	;# 
  1146  0F11                     	;# 
  1147  0F12                     	;# 
  1148  0F13                     	;# 
  1149  0F14                     	;# 
  1150  0F15                     	;# 
  1151  0F16                     	;# 
  1152  0F17                     	;# 
  1153  0F18                     	;# 
  1154  0F19                     	;# 
  1155  0F1A                     	;# 
  1156  0F1B                     	;# 
  1157  0F1C                     	;# 
  1158  0F1D                     	;# 
  1159  0F1E                     	;# 
  1160  0F1F                     	;# 
  1161  0F20                     	;# 
  1162  0F21                     	;# 
  1163  0F22                     	;# 
  1164  0F23                     	;# 
  1165  0F24                     	;# 
  1166  0F25                     	;# 
  1167  0F26                     	;# 
  1168  0F27                     	;# 
  1169  0F28                     	;# 
  1170  0F29                     	;# 
  1171  0F2A                     	;# 
  1172  0F2B                     	;# 
  1173  0F2C                     	;# 
  1174  0F2D                     	;# 
  1175  0F2E                     	;# 
  1176  0F2F                     	;# 
  1177  0F30                     	;# 
  1178  0F31                     	;# 
  1179  0F32                     	;# 
  1180  0F38                     	;# 
  1181  0F39                     	;# 
  1182  0F3A                     	;# 
  1183  0F3B                     	;# 
  1184  0F3C                     	;# 
  1185  0F3D                     	;# 
  1186  0F3E                     	;# 
  1187  0F3F                     	;# 
  1188  0F40                     	;# 
  1189  0F41                     	;# 
  1190  0F43                     	;# 
  1191  0F44                     	;# 
  1192  0F45                     	;# 
  1193  0F46                     	;# 
  1194  0F47                     	;# 
  1195  0F48                     	;# 
  1196  0F49                     	;# 
  1197  0F4A                     	;# 
  1198  0F4B                     	;# 
  1199  0F4C                     	;# 
  1200  0F4E                     	;# 
  1201  0F4F                     	;# 
  1202  0F50                     	;# 
  1203  0F51                     	;# 
  1204  0F52                     	;# 
  1205  0F53                     	;# 
  1206  0F54                     	;# 
  1207  0F55                     	;# 
  1208  0F56                     	;# 
  1209  0F57                     	;# 
  1210  0F59                     	;# 
  1211  0F5A                     	;# 
  1212  0F5B                     	;# 
  1213  0F5C                     	;# 
  1214  0F5D                     	;# 
  1215  0F61                     	;# 
  1216  0F62                     	;# 
  1217  0F64                     	;# 
  1218  0F65                     	;# 
  1219  0F66                     	;# 
  1220  0F67                     	;# 
  1221  0F68                     	;# 
  1222  0F69                     	;# 
  1223  0F6A                     	;# 
  1224  0F6B                     	;# 
  1225  0F6C                     	;# 
  1226  0F6D                     	;# 
  1227  0FE4                     	;# 
  1228  0FE5                     	;# 
  1229  0FE6                     	;# 
  1230  0FE7                     	;# 
  1231  0FE8                     	;# 
  1232  0FE9                     	;# 
  1233  0FEA                     	;# 
  1234  0FEB                     	;# 
  1235  0FED                     	;# 
  1236  0FEE                     	;# 
  1237  0FEF                     	;# 
  1238  0000                     	;# 
  1239  0001                     	;# 
  1240  0002                     	;# 
  1241  0003                     	;# 
  1242  0004                     	;# 
  1243  0005                     	;# 
  1244  0006                     	;# 
  1245  0007                     	;# 
  1246  0008                     	;# 
  1247  0009                     	;# 
  1248  000A                     	;# 
  1249  000B                     	;# 
  1250  000C                     	;# 
  1251  000D                     	;# 
  1252  000E                     	;# 
  1253  000F                     	;# 
  1254  0010                     	;# 
  1255  0011                     	;# 
  1256  0012                     	;# 
  1257  0013                     	;# 
  1258  0014                     	;# 
  1259  0015                     	;# 
  1260  0016                     	;# 
  1261  0017                     	;# 
  1262  0018                     	;# 
  1263  0019                     	;# 
  1264  001A                     	;# 
  1265  001C                     	;# 
  1266  001C                     	;# 
  1267  001D                     	;# 
  1268  001D                     	;# 
  1269  001E                     	;# 
  1270  001F                     	;# 
  1271  008C                     	;# 
  1272  008C                     	;# 
  1273  008D                     	;# 
  1274  008E                     	;# 
  1275  008E                     	;# 
  1276  008F                     	;# 
  1277  0090                     	;# 
  1278  0090                     	;# 
  1279  0091                     	;# 
  1280  0093                     	;# 
  1281  0094                     	;# 
  1282  0095                     	;# 
  1283  0096                     	;# 
  1284  0097                     	;# 
  1285  0098                     	;# 
  1286  0099                     	;# 
  1287  009A                     	;# 
  1288  009B                     	;# 
  1289  009C                     	;# 
  1290  009D                     	;# 
  1291  009E                     	;# 
  1292  010C                     	;# 
  1293  010D                     	;# 
  1294  010E                     	;# 
  1295  010E                     	;# 
  1296  010F                     	;# 
  1297  0110                     	;# 
  1298  0110                     	;# 
  1299  0111                     	;# 
  1300  0112                     	;# 
  1301  0112                     	;# 
  1302  0113                     	;# 
  1303  0114                     	;# 
  1304  0114                     	;# 
  1305  0115                     	;# 
  1306  0116                     	;# 
  1307  0116                     	;# 
  1308  0117                     	;# 
  1309  0119                     	;# 
  1310  0119                     	;# 
  1311  0119                     	;# 
  1312  011A                     	;# 
  1313  011A                     	;# 
  1314  011A                     	;# 
  1315  011B                     	;# 
  1316  011B                     	;# 
  1317  011B                     	;# 
  1318  011B                     	;# 
  1319  011B                     	;# 
  1320  011C                     	;# 
  1321  011C                     	;# 
  1322  011C                     	;# 
  1323  011D                     	;# 
  1324  011D                     	;# 
  1325  011D                     	;# 
  1326  011E                     	;# 
  1327  011E                     	;# 
  1328  011E                     	;# 
  1329  011F                     	;# 
  1330  011F                     	;# 
  1331  011F                     	;# 
  1332  011F                     	;# 
  1333  011F                     	;# 
  1334  018C                     	;# 
  1335  018D                     	;# 
  1336  018E                     	;# 
  1337  018F                     	;# 
  1338  0190                     	;# 
  1339  0191                     	;# 
  1340  0192                     	;# 
  1341  0196                     	;# 
  1342  0197                     	;# 
  1343  0198                     	;# 
  1344  0199                     	;# 
  1345  019A                     	;# 
  1346  019B                     	;# 
  1347  019C                     	;# 
  1348  020C                     	;# 
  1349  020C                     	;# 
  1350  020D                     	;# 
  1351  020E                     	;# 
  1352  020F                     	;# 
  1353  020F                     	;# 
  1354  0210                     	;# 
  1355  0210                     	;# 
  1356  0211                     	;# 
  1357  0211                     	;# 
  1358  0212                     	;# 
  1359  0212                     	;# 
  1360  0213                     	;# 
  1361  0214                     	;# 
  1362  0215                     	;# 
  1363  0215                     	;# 
  1364  0216                     	;# 
  1365  0216                     	;# 
  1366  0217                     	;# 
  1367  0217                     	;# 
  1368  0218                     	;# 
  1369  0218                     	;# 
  1370  0219                     	;# 
  1371  021A                     	;# 
  1372  021B                     	;# 
  1373  021B                     	;# 
  1374  021C                     	;# 
  1375  021C                     	;# 
  1376  021D                     	;# 
  1377  021D                     	;# 
  1378  021E                     	;# 
  1379  021F                     	;# 
  1380  028C                     	;# 
  1381  028C                     	;# 
  1382  028D                     	;# 
  1383  028D                     	;# 
  1384  028E                     	;# 
  1385  028F                     	;# 
  1386  0290                     	;# 
  1387  0290                     	;# 
  1388  0291                     	;# 
  1389  0292                     	;# 
  1390  0292                     	;# 
  1391  0293                     	;# 
  1392  0293                     	;# 
  1393  0294                     	;# 
  1394  0295                     	;# 
  1395  0296                     	;# 
  1396  0296                     	;# 
  1397  0297                     	;# 
  1398  0298                     	;# 
  1399  0298                     	;# 
  1400  0299                     	;# 
  1401  0299                     	;# 
  1402  029A                     	;# 
  1403  029B                     	;# 
  1404  029C                     	;# 
  1405  029C                     	;# 
  1406  029D                     	;# 
  1407  030C                     	;# 
  1408  030C                     	;# 
  1409  030D                     	;# 
  1410  030E                     	;# 
  1411  030F                     	;# 
  1412  0310                     	;# 
  1413  0310                     	;# 
  1414  0311                     	;# 
  1415  0312                     	;# 
  1416  0313                     	;# 
  1417  0314                     	;# 
  1418  0314                     	;# 
  1419  0315                     	;# 
  1420  0316                     	;# 
  1421  0317                     	;# 
  1422  0318                     	;# 
  1423  0318                     	;# 
  1424  0319                     	;# 
  1425  031A                     	;# 
  1426  031B                     	;# 
  1427  031C                     	;# 
  1428  031C                     	;# 
  1429  031D                     	;# 
  1430  031E                     	;# 
  1431  031F                     	;# 
  1432  038C                     	;# 
  1433  038C                     	;# 
  1434  038D                     	;# 
  1435  038E                     	;# 
  1436  0390                     	;# 
  1437  0390                     	;# 
  1438  0391                     	;# 
  1439  0392                     	;# 
  1440  040C                     	;# 
  1441  040D                     	;# 
  1442  040E                     	;# 
  1443  040F                     	;# 
  1444  0410                     	;# 
  1445  0411                     	;# 
  1446  0416                     	;# 
  1447  0416                     	;# 
  1448  0417                     	;# 
  1449  0418                     	;# 
  1450  0418                     	;# 
  1451  0419                     	;# 
  1452  041A                     	;# 
  1453  041A                     	;# 
  1454  041B                     	;# 
  1455  041C                     	;# 
  1456  041C                     	;# 
  1457  041D                     	;# 
  1458  041E                     	;# 
  1459  041F                     	;# 
  1460  048C                     	;# 
  1461  048C                     	;# 
  1462  048D                     	;# 
  1463  048E                     	;# 
  1464  048F                     	;# 
  1465  048F                     	;# 
  1466  0490                     	;# 
  1467  0491                     	;# 
  1468  0492                     	;# 
  1469  0492                     	;# 
  1470  0493                     	;# 
  1471  0494                     	;# 
  1472  0495                     	;# 
  1473  0495                     	;# 
  1474  0496                     	;# 
  1475  0497                     	;# 
  1476  0498                     	;# 
  1477  0499                     	;# 
  1478  049A                     	;# 
  1479  049B                     	;# 
  1480  049C                     	;# 
  1481  049D                     	;# 
  1482  050C                     	;# 
  1483  050C                     	;# 
  1484  050D                     	;# 
  1485  050E                     	;# 
  1486  050F                     	;# 
  1487  050F                     	;# 
  1488  0510                     	;# 
  1489  0511                     	;# 
  1490  0512                     	;# 
  1491  0512                     	;# 
  1492  0513                     	;# 
  1493  0514                     	;# 
  1494  0515                     	;# 
  1495  0515                     	;# 
  1496  0516                     	;# 
  1497  0517                     	;# 
  1498  0518                     	;# 
  1499  0519                     	;# 
  1500  051A                     	;# 
  1501  051B                     	;# 
  1502  051C                     	;# 
  1503  051D                     	;# 
  1504  058C                     	;# 
  1505  058C                     	;# 
  1506  058D                     	;# 
  1507  058E                     	;# 
  1508  058F                     	;# 
  1509  058F                     	;# 
  1510  0590                     	;# 
  1511  0591                     	;# 
  1512  0592                     	;# 
  1513  0593                     	;# 
  1514  060C                     	;# 
  1515  060D                     	;# 
  1516  060E                     	;# 
  1517  060F                     	;# 
  1518  0610                     	;# 
  1519  0611                     	;# 
  1520  0612                     	;# 
  1521  0613                     	;# 
  1522  0614                     	;# 
  1523  0616                     	;# 
  1524  0617                     	;# 
  1525  0618                     	;# 
  1526  0619                     	;# 
  1527  061A                     	;# 
  1528  061B                     	;# 
  1529  061C                     	;# 
  1530  061D                     	;# 
  1531  061E                     	;# 
  1532  068C                     	;# 
  1533  068D                     	;# 
  1534  068E                     	;# 
  1535  068F                     	;# 
  1536  0690                     	;# 
  1537  0691                     	;# 
  1538  0692                     	;# 
  1539  0693                     	;# 
  1540  0694                     	;# 
  1541  070C                     	;# 
  1542  070D                     	;# 
  1543  070E                     	;# 
  1544  070F                     	;# 
  1545  0710                     	;# 
  1546  0711                     	;# 
  1547  0712                     	;# 
  1548  0713                     	;# 
  1549  0714                     	;# 
  1550  0716                     	;# 
  1551  0717                     	;# 
  1552  0718                     	;# 
  1553  0719                     	;# 
  1554  071A                     	;# 
  1555  071B                     	;# 
  1556  071C                     	;# 
  1557  071D                     	;# 
  1558  071E                     	;# 
  1559  0796                     	;# 
  1560  0797                     	;# 
  1561  0798                     	;# 
  1562  0799                     	;# 
  1563  079A                     	;# 
  1564  079B                     	;# 
  1565  080C                     	;# 
  1566  080D                     	;# 
  1567  080E                     	;# 
  1568  080F                     	;# 
  1569  0810                     	;# 
  1570  0811                     	;# 
  1571  0812                     	;# 
  1572  0813                     	;# 
  1573  0814                     	;# 
  1574  081A                     	;# 
  1575  081B                     	;# 
  1576  081C                     	;# 
  1577  081D                     	;# 
  1578  081E                     	;# 
  1579  081F                     	;# 
  1580  088C                     	;# 
  1581  088D                     	;# 
  1582  088E                     	;# 
  1583  088F                     	;# 
  1584  0890                     	;# 
  1585  0891                     	;# 
  1586  0892                     	;# 
  1587  0893                     	;# 
  1588  0895                     	;# 
  1589  0896                     	;# 
  1590  0897                     	;# 
  1591  0898                     	;# 
  1592  0899                     	;# 
  1593  089A                     	;# 
  1594  089B                     	;# 
  1595  090C                     	;# 
  1596  090E                     	;# 
  1597  090F                     	;# 
  1598  091F                     	;# 
  1599  091F                     	;# 
  1600  098F                     	;# 
  1601  098F                     	;# 
  1602  0990                     	;# 
  1603  0991                     	;# 
  1604  0992                     	;# 
  1605  0993                     	;# 
  1606  0994                     	;# 
  1607  0995                     	;# 
  1608  0996                     	;# 
  1609  0997                     	;# 
  1610  0E0F                     	;# 
  1611  0E10                     	;# 
  1612  0E11                     	;# 
  1613  0E12                     	;# 
  1614  0E13                     	;# 
  1615  0E14                     	;# 
  1616  0E15                     	;# 
  1617  0E16                     	;# 
  1618  0E17                     	;# 
  1619  0E18                     	;# 
  1620  0E19                     	;# 
  1621  0E1A                     	;# 
  1622  0E1B                     	;# 
  1623  0E1C                     	;# 
  1624  0E1D                     	;# 
  1625  0E1E                     	;# 
  1626  0E1F                     	;# 
  1627  0E20                     	;# 
  1628  0E21                     	;# 
  1629  0E22                     	;# 
  1630  0E23                     	;# 
  1631  0E24                     	;# 
  1632  0E25                     	;# 
  1633  0E26                     	;# 
  1634  0E27                     	;# 
  1635  0E28                     	;# 
  1636  0E29                     	;# 
  1637  0E2A                     	;# 
  1638  0E2B                     	;# 
  1639  0E2C                     	;# 
  1640  0E2D                     	;# 
  1641  0E2E                     	;# 
  1642  0E2F                     	;# 
  1643  0E30                     	;# 
  1644  0E31                     	;# 
  1645  0E32                     	;# 
  1646  0E33                     	;# 
  1647  0E34                     	;# 
  1648  0E35                     	;# 
  1649  0E36                     	;# 
  1650  0E37                     	;# 
  1651  0E8F                     	;# 
  1652  0E90                     	;# 
  1653  0E91                     	;# 
  1654  0E92                     	;# 
  1655  0E93                     	;# 
  1656  0E94                     	;# 
  1657  0E95                     	;# 
  1658  0E96                     	;# 
  1659  0E97                     	;# 
  1660  0E9C                     	;# 
  1661  0E9D                     	;# 
  1662  0E9E                     	;# 
  1663  0EA1                     	;# 
  1664  0EA2                     	;# 
  1665  0EA3                     	;# 
  1666  0EA4                     	;# 
  1667  0EA5                     	;# 
  1668  0EA9                     	;# 
  1669  0EAA                     	;# 
  1670  0EAB                     	;# 
  1671  0EAC                     	;# 
  1672  0EB1                     	;# 
  1673  0EB2                     	;# 
  1674  0EB3                     	;# 
  1675  0EB8                     	;# 
  1676  0EB9                     	;# 
  1677  0EBA                     	;# 
  1678  0EBB                     	;# 
  1679  0EBC                     	;# 
  1680  0EBD                     	;# 
  1681  0EBE                     	;# 
  1682  0EC3                     	;# 
  1683  0EC5                     	;# 
  1684  0EC6                     	;# 
  1685  0EC7                     	;# 
  1686  0EC8                     	;# 
  1687  0EC9                     	;# 
  1688  0ECA                     	;# 
  1689  0ECB                     	;# 
  1690  0ECC                     	;# 
  1691  0F10                     	;# 
  1692  0F11                     	;# 
  1693  0F12                     	;# 
  1694  0F13                     	;# 
  1695  0F14                     	;# 
  1696  0F15                     	;# 
  1697  0F16                     	;# 
  1698  0F17                     	;# 
  1699  0F18                     	;# 
  1700  0F19                     	;# 
  1701  0F1A                     	;# 
  1702  0F1B                     	;# 
  1703  0F1C                     	;# 
  1704  0F1D                     	;# 
  1705  0F1E                     	;# 
  1706  0F1F                     	;# 
  1707  0F20                     	;# 
  1708  0F21                     	;# 
  1709  0F22                     	;# 
  1710  0F23                     	;# 
  1711  0F24                     	;# 
  1712  0F25                     	;# 
  1713  0F26                     	;# 
  1714  0F27                     	;# 
  1715  0F28                     	;# 
  1716  0F29                     	;# 
  1717  0F2A                     	;# 
  1718  0F2B                     	;# 
  1719  0F2C                     	;# 
  1720  0F2D                     	;# 
  1721  0F2E                     	;# 
  1722  0F2F                     	;# 
  1723  0F30                     	;# 
  1724  0F31                     	;# 
  1725  0F32                     	;# 
  1726  0F38                     	;# 
  1727  0F39                     	;# 
  1728  0F3A                     	;# 
  1729  0F3B                     	;# 
  1730  0F3C                     	;# 
  1731  0F3D                     	;# 
  1732  0F3E                     	;# 
  1733  0F3F                     	;# 
  1734  0F40                     	;# 
  1735  0F41                     	;# 
  1736  0F43                     	;# 
  1737  0F44                     	;# 
  1738  0F45                     	;# 
  1739  0F46                     	;# 
  1740  0F47                     	;# 
  1741  0F48                     	;# 
  1742  0F49                     	;# 
  1743  0F4A                     	;# 
  1744  0F4B                     	;# 
  1745  0F4C                     	;# 
  1746  0F4E                     	;# 
  1747  0F4F                     	;# 
  1748  0F50                     	;# 
  1749  0F51                     	;# 
  1750  0F52                     	;# 
  1751  0F53                     	;# 
  1752  0F54                     	;# 
  1753  0F55                     	;# 
  1754  0F56                     	;# 
  1755  0F57                     	;# 
  1756  0F59                     	;# 
  1757  0F5A                     	;# 
  1758  0F5B                     	;# 
  1759  0F5C                     	;# 
  1760  0F5D                     	;# 
  1761  0F61                     	;# 
  1762  0F62                     	;# 
  1763  0F64                     	;# 
  1764  0F65                     	;# 
  1765  0F66                     	;# 
  1766  0F67                     	;# 
  1767  0F68                     	;# 
  1768  0F69                     	;# 
  1769  0F6A                     	;# 
  1770  0F6B                     	;# 
  1771  0F6C                     	;# 
  1772  0F6D                     	;# 
  1773  0FE4                     	;# 
  1774  0FE5                     	;# 
  1775  0FE6                     	;# 
  1776  0FE7                     	;# 
  1777  0FE8                     	;# 
  1778  0FE9                     	;# 
  1779  0FEA                     	;# 
  1780  0FEB                     	;# 
  1781  0FED                     	;# 
  1782  0FEE                     	;# 
  1783  0FEF                     	;# 
  1784  0000                     	;# 
  1785  0001                     	;# 
  1786  0002                     	;# 
  1787  0003                     	;# 
  1788  0004                     	;# 
  1789  0005                     	;# 
  1790  0006                     	;# 
  1791  0007                     	;# 
  1792  0008                     	;# 
  1793  0009                     	;# 
  1794  000A                     	;# 
  1795  000B                     	;# 
  1796  000C                     	;# 
  1797  000D                     	;# 
  1798  000E                     	;# 
  1799  000F                     	;# 
  1800  0010                     	;# 
  1801  0011                     	;# 
  1802  0012                     	;# 
  1803  0013                     	;# 
  1804  0014                     	;# 
  1805  0015                     	;# 
  1806  0016                     	;# 
  1807  0017                     	;# 
  1808  0018                     	;# 
  1809  0019                     	;# 
  1810  001A                     	;# 
  1811  001C                     	;# 
  1812  001C                     	;# 
  1813  001D                     	;# 
  1814  001D                     	;# 
  1815  001E                     	;# 
  1816  001F                     	;# 
  1817  008C                     	;# 
  1818  008C                     	;# 
  1819  008D                     	;# 
  1820  008E                     	;# 
  1821  008E                     	;# 
  1822  008F                     	;# 
  1823  0090                     	;# 
  1824  0090                     	;# 
  1825  0091                     	;# 
  1826  0093                     	;# 
  1827  0094                     	;# 
  1828  0095                     	;# 
  1829  0096                     	;# 
  1830  0097                     	;# 
  1831  0098                     	;# 
  1832  0099                     	;# 
  1833  009A                     	;# 
  1834  009B                     	;# 
  1835  009C                     	;# 
  1836  009D                     	;# 
  1837  009E                     	;# 
  1838  010C                     	;# 
  1839  010D                     	;# 
  1840  010E                     	;# 
  1841  010E                     	;# 
  1842  010F                     	;# 
  1843  0110                     	;# 
  1844  0110                     	;# 
  1845  0111                     	;# 
  1846  0112                     	;# 
  1847  0112                     	;# 
  1848  0113                     	;# 
  1849  0114                     	;# 
  1850  0114                     	;# 
  1851  0115                     	;# 
  1852  0116                     	;# 
  1853  0116                     	;# 
  1854  0117                     	;# 
  1855  0119                     	;# 
  1856  0119                     	;# 
  1857  0119                     	;# 
  1858  011A                     	;# 
  1859  011A                     	;# 
  1860  011A                     	;# 
  1861  011B                     	;# 
  1862  011B                     	;# 
  1863  011B                     	;# 
  1864  011B                     	;# 
  1865  011B                     	;# 
  1866  011C                     	;# 
  1867  011C                     	;# 
  1868  011C                     	;# 
  1869  011D                     	;# 
  1870  011D                     	;# 
  1871  011D                     	;# 
  1872  011E                     	;# 
  1873  011E                     	;# 
  1874  011E                     	;# 
  1875  011F                     	;# 
  1876  011F                     	;# 
  1877  011F                     	;# 
  1878  011F                     	;# 
  1879  011F                     	;# 
  1880  018C                     	;# 
  1881  018D                     	;# 
  1882  018E                     	;# 
  1883  018F                     	;# 
  1884  0190                     	;# 
  1885  0191                     	;# 
  1886  0192                     	;# 
  1887  0196                     	;# 
  1888  0197                     	;# 
  1889  0198                     	;# 
  1890  0199                     	;# 
  1891  019A                     	;# 
  1892  019B                     	;# 
  1893  019C                     	;# 
  1894  020C                     	;# 
  1895  020C                     	;# 
  1896  020D                     	;# 
  1897  020E                     	;# 
  1898  020F                     	;# 
  1899  020F                     	;# 
  1900  0210                     	;# 
  1901  0210                     	;# 
  1902  0211                     	;# 
  1903  0211                     	;# 
  1904  0212                     	;# 
  1905  0212                     	;# 
  1906  0213                     	;# 
  1907  0214                     	;# 
  1908  0215                     	;# 
  1909  0215                     	;# 
  1910  0216                     	;# 
  1911  0216                     	;# 
  1912  0217                     	;# 
  1913  0217                     	;# 
  1914  0218                     	;# 
  1915  0218                     	;# 
  1916  0219                     	;# 
  1917  021A                     	;# 
  1918  021B                     	;# 
  1919  021B                     	;# 
  1920  021C                     	;# 
  1921  021C                     	;# 
  1922  021D                     	;# 
  1923  021D                     	;# 
  1924  021E                     	;# 
  1925  021F                     	;# 
  1926  028C                     	;# 
  1927  028C                     	;# 
  1928  028D                     	;# 
  1929  028D                     	;# 
  1930  028E                     	;# 
  1931  028F                     	;# 
  1932  0290                     	;# 
  1933  0290                     	;# 
  1934  0291                     	;# 
  1935  0292                     	;# 
  1936  0292                     	;# 
  1937  0293                     	;# 
  1938  0293                     	;# 
  1939  0294                     	;# 
  1940  0295                     	;# 
  1941  0296                     	;# 
  1942  0296                     	;# 
  1943  0297                     	;# 
  1944  0298                     	;# 
  1945  0298                     	;# 
  1946  0299                     	;# 
  1947  0299                     	;# 
  1948  029A                     	;# 
  1949  029B                     	;# 
  1950  029C                     	;# 
  1951  029C                     	;# 
  1952  029D                     	;# 
  1953  030C                     	;# 
  1954  030C                     	;# 
  1955  030D                     	;# 
  1956  030E                     	;# 
  1957  030F                     	;# 
  1958  0310                     	;# 
  1959  0310                     	;# 
  1960  0311                     	;# 
  1961  0312                     	;# 
  1962  0313                     	;# 
  1963  0314                     	;# 
  1964  0314                     	;# 
  1965  0315                     	;# 
  1966  0316                     	;# 
  1967  0317                     	;# 
  1968  0318                     	;# 
  1969  0318                     	;# 
  1970  0319                     	;# 
  1971  031A                     	;# 
  1972  031B                     	;# 
  1973  031C                     	;# 
  1974  031C                     	;# 
  1975  031D                     	;# 
  1976  031E                     	;# 
  1977  031F                     	;# 
  1978  038C                     	;# 
  1979  038C                     	;# 
  1980  038D                     	;# 
  1981  038E                     	;# 
  1982  0390                     	;# 
  1983  0390                     	;# 
  1984  0391                     	;# 
  1985  0392                     	;# 
  1986  040C                     	;# 
  1987  040D                     	;# 
  1988  040E                     	;# 
  1989  040F                     	;# 
  1990  0410                     	;# 
  1991  0411                     	;# 
  1992  0416                     	;# 
  1993  0416                     	;# 
  1994  0417                     	;# 
  1995  0418                     	;# 
  1996  0418                     	;# 
  1997  0419                     	;# 
  1998  041A                     	;# 
  1999  041A                     	;# 
  2000  041B                     	;# 
  2001  041C                     	;# 
  2002  041C                     	;# 
  2003  041D                     	;# 
  2004  041E                     	;# 
  2005  041F                     	;# 
  2006  048C                     	;# 
  2007  048C                     	;# 
  2008  048D                     	;# 
  2009  048E                     	;# 
  2010  048F                     	;# 
  2011  048F                     	;# 
  2012  0490                     	;# 
  2013  0491                     	;# 
  2014  0492                     	;# 
  2015  0492                     	;# 
  2016  0493                     	;# 
  2017  0494                     	;# 
  2018  0495                     	;# 
  2019  0495                     	;# 
  2020  0496                     	;# 
  2021  0497                     	;# 
  2022  0498                     	;# 
  2023  0499                     	;# 
  2024  049A                     	;# 
  2025  049B                     	;# 
  2026  049C                     	;# 
  2027  049D                     	;# 
  2028  050C                     	;# 
  2029  050C                     	;# 
  2030  050D                     	;# 
  2031  050E                     	;# 
  2032  050F                     	;# 
  2033  050F                     	;# 
  2034  0510                     	;# 
  2035  0511                     	;# 
  2036  0512                     	;# 
  2037  0512                     	;# 
  2038  0513                     	;# 
  2039  0514                     	;# 
  2040  0515                     	;# 
  2041  0515                     	;# 
  2042  0516                     	;# 
  2043  0517                     	;# 
  2044  0518                     	;# 
  2045  0519                     	;# 
  2046  051A                     	;# 
  2047  051B                     	;# 
  2048  051C                     	;# 
  2049  051D                     	;# 
  2050  058C                     	;# 
  2051  058C                     	;# 
  2052  058D                     	;# 
  2053  058E                     	;# 
  2054  058F                     	;# 
  2055  058F                     	;# 
  2056  0590                     	;# 
  2057  0591                     	;# 
  2058  0592                     	;# 
  2059  0593                     	;# 
  2060  060C                     	;# 
  2061  060D                     	;# 
  2062  060E                     	;# 
  2063  060F                     	;# 
  2064  0610                     	;# 
  2065  0611                     	;# 
  2066  0612                     	;# 
  2067  0613                     	;# 
  2068  0614                     	;# 
  2069  0616                     	;# 
  2070  0617                     	;# 
  2071  0618                     	;# 
  2072  0619                     	;# 
  2073  061A                     	;# 
  2074  061B                     	;# 
  2075  061C                     	;# 
  2076  061D                     	;# 
  2077  061E                     	;# 
  2078  068C                     	;# 
  2079  068D                     	;# 
  2080  068E                     	;# 
  2081  068F                     	;# 
  2082  0690                     	;# 
  2083  0691                     	;# 
  2084  0692                     	;# 
  2085  0693                     	;# 
  2086  0694                     	;# 
  2087  070C                     	;# 
  2088  070D                     	;# 
  2089  070E                     	;# 
  2090  070F                     	;# 
  2091  0710                     	;# 
  2092  0711                     	;# 
  2093  0712                     	;# 
  2094  0713                     	;# 
  2095  0714                     	;# 
  2096  0716                     	;# 
  2097  0717                     	;# 
  2098  0718                     	;# 
  2099  0719                     	;# 
  2100  071A                     	;# 
  2101  071B                     	;# 
  2102  071C                     	;# 
  2103  071D                     	;# 
  2104  071E                     	;# 
  2105  0796                     	;# 
  2106  0797                     	;# 
  2107  0798                     	;# 
  2108  0799                     	;# 
  2109  079A                     	;# 
  2110  079B                     	;# 
  2111  080C                     	;# 
  2112  080D                     	;# 
  2113  080E                     	;# 
  2114  080F                     	;# 
  2115  0810                     	;# 
  2116  0811                     	;# 
  2117  0812                     	;# 
  2118  0813                     	;# 
  2119  0814                     	;# 
  2120  081A                     	;# 
  2121  081B                     	;# 
  2122  081C                     	;# 
  2123  081D                     	;# 
  2124  081E                     	;# 
  2125  081F                     	;# 
  2126  088C                     	;# 
  2127  088D                     	;# 
  2128  088E                     	;# 
  2129  088F                     	;# 
  2130  0890                     	;# 
  2131  0891                     	;# 
  2132  0892                     	;# 
  2133  0893                     	;# 
  2134  0895                     	;# 
  2135  0896                     	;# 
  2136  0897                     	;# 
  2137  0898                     	;# 
  2138  0899                     	;# 
  2139  089A                     	;# 
  2140  089B                     	;# 
  2141  090C                     	;# 
  2142  090E                     	;# 
  2143  090F                     	;# 
  2144  091F                     	;# 
  2145  091F                     	;# 
  2146  098F                     	;# 
  2147  098F                     	;# 
  2148  0990                     	;# 
  2149  0991                     	;# 
  2150  0992                     	;# 
  2151  0993                     	;# 
  2152  0994                     	;# 
  2153  0995                     	;# 
  2154  0996                     	;# 
  2155  0997                     	;# 
  2156  0E0F                     	;# 
  2157  0E10                     	;# 
  2158  0E11                     	;# 
  2159  0E12                     	;# 
  2160  0E13                     	;# 
  2161  0E14                     	;# 
  2162  0E15                     	;# 
  2163  0E16                     	;# 
  2164  0E17                     	;# 
  2165  0E18                     	;# 
  2166  0E19                     	;# 
  2167  0E1A                     	;# 
  2168  0E1B                     	;# 
  2169  0E1C                     	;# 
  2170  0E1D                     	;# 
  2171  0E1E                     	;# 
  2172  0E1F                     	;# 
  2173  0E20                     	;# 
  2174  0E21                     	;# 
  2175  0E22                     	;# 
  2176  0E23                     	;# 
  2177  0E24                     	;# 
  2178  0E25                     	;# 
  2179  0E26                     	;# 
  2180  0E27                     	;# 
  2181  0E28                     	;# 
  2182  0E29                     	;# 
  2183  0E2A                     	;# 
  2184  0E2B                     	;# 
  2185  0E2C                     	;# 
  2186  0E2D                     	;# 
  2187  0E2E                     	;# 
  2188  0E2F                     	;# 
  2189  0E30                     	;# 
  2190  0E31                     	;# 
  2191  0E32                     	;# 
  2192  0E33                     	;# 
  2193  0E34                     	;# 
  2194  0E35                     	;# 
  2195  0E36                     	;# 
  2196  0E37                     	;# 
  2197  0E8F                     	;# 
  2198  0E90                     	;# 
  2199  0E91                     	;# 
  2200  0E92                     	;# 
  2201  0E93                     	;# 
  2202  0E94                     	;# 
  2203  0E95                     	;# 
  2204  0E96                     	;# 
  2205  0E97                     	;# 
  2206  0E9C                     	;# 
  2207  0E9D                     	;# 
  2208  0E9E                     	;# 
  2209  0EA1                     	;# 
  2210  0EA2                     	;# 
  2211  0EA3                     	;# 
  2212  0EA4                     	;# 
  2213  0EA5                     	;# 
  2214  0EA9                     	;# 
  2215  0EAA                     	;# 
  2216  0EAB                     	;# 
  2217  0EAC                     	;# 
  2218  0EB1                     	;# 
  2219  0EB2                     	;# 
  2220  0EB3                     	;# 
  2221  0EB8                     	;# 
  2222  0EB9                     	;# 
  2223  0EBA                     	;# 
  2224  0EBB                     	;# 
  2225  0EBC                     	;# 
  2226  0EBD                     	;# 
  2227  0EBE                     	;# 
  2228  0EC3                     	;# 
  2229  0EC5                     	;# 
  2230  0EC6                     	;# 
  2231  0EC7                     	;# 
  2232  0EC8                     	;# 
  2233  0EC9                     	;# 
  2234  0ECA                     	;# 
  2235  0ECB                     	;# 
  2236  0ECC                     	;# 
  2237  0F10                     	;# 
  2238  0F11                     	;# 
  2239  0F12                     	;# 
  2240  0F13                     	;# 
  2241  0F14                     	;# 
  2242  0F15                     	;# 
  2243  0F16                     	;# 
  2244  0F17                     	;# 
  2245  0F18                     	;# 
  2246  0F19                     	;# 
  2247  0F1A                     	;# 
  2248  0F1B                     	;# 
  2249  0F1C                     	;# 
  2250  0F1D                     	;# 
  2251  0F1E                     	;# 
  2252  0F1F                     	;# 
  2253  0F20                     	;# 
  2254  0F21                     	;# 
  2255  0F22                     	;# 
  2256  0F23                     	;# 
  2257  0F24                     	;# 
  2258  0F25                     	;# 
  2259  0F26                     	;# 
  2260  0F27                     	;# 
  2261  0F28                     	;# 
  2262  0F29                     	;# 
  2263  0F2A                     	;# 
  2264  0F2B                     	;# 
  2265  0F2C                     	;# 
  2266  0F2D                     	;# 
  2267  0F2E                     	;# 
  2268  0F2F                     	;# 
  2269  0F30                     	;# 
  2270  0F31                     	;# 
  2271  0F32                     	;# 
  2272  0F38                     	;# 
  2273  0F39                     	;# 
  2274  0F3A                     	;# 
  2275  0F3B                     	;# 
  2276  0F3C                     	;# 
  2277  0F3D                     	;# 
  2278  0F3E                     	;# 
  2279  0F3F                     	;# 
  2280  0F40                     	;# 
  2281  0F41                     	;# 
  2282  0F43                     	;# 
  2283  0F44                     	;# 
  2284  0F45                     	;# 
  2285  0F46                     	;# 
  2286  0F47                     	;# 
  2287  0F48                     	;# 
  2288  0F49                     	;# 
  2289  0F4A                     	;# 
  2290  0F4B                     	;# 
  2291  0F4C                     	;# 
  2292  0F4E                     	;# 
  2293  0F4F                     	;# 
  2294  0F50                     	;# 
  2295  0F51                     	;# 
  2296  0F52                     	;# 
  2297  0F53                     	;# 
  2298  0F54                     	;# 
  2299  0F55                     	;# 
  2300  0F56                     	;# 
  2301  0F57                     	;# 
  2302  0F59                     	;# 
  2303  0F5A                     	;# 
  2304  0F5B                     	;# 
  2305  0F5C                     	;# 
  2306  0F5D                     	;# 
  2307  0F61                     	;# 
  2308  0F62                     	;# 
  2309  0F64                     	;# 
  2310  0F65                     	;# 
  2311  0F66                     	;# 
  2312  0F67                     	;# 
  2313  0F68                     	;# 
  2314  0F69                     	;# 
  2315  0F6A                     	;# 
  2316  0F6B                     	;# 
  2317  0F6C                     	;# 
  2318  0F6D                     	;# 
  2319  0FE4                     	;# 
  2320  0FE5                     	;# 
  2321  0FE6                     	;# 
  2322  0FE7                     	;# 
  2323  0FE8                     	;# 
  2324  0FE9                     	;# 
  2325  0FEA                     	;# 
  2326  0FEB                     	;# 
  2327  0FED                     	;# 
  2328  0FEE                     	;# 
  2329  0FEF                     	;# 
  2330  0000                     	;# 
  2331  0001                     	;# 
  2332  0002                     	;# 
  2333  0003                     	;# 
  2334  0004                     	;# 
  2335  0005                     	;# 
  2336  0006                     	;# 
  2337  0007                     	;# 
  2338  0008                     	;# 
  2339  0009                     	;# 
  2340  000A                     	;# 
  2341  000B                     	;# 
  2342  000C                     	;# 
  2343  000D                     	;# 
  2344  000E                     	;# 
  2345  000F                     	;# 
  2346  0010                     	;# 
  2347  0011                     	;# 
  2348  0012                     	;# 
  2349  0013                     	;# 
  2350  0014                     	;# 
  2351  0015                     	;# 
  2352  0016                     	;# 
  2353  0017                     	;# 
  2354  0018                     	;# 
  2355  0019                     	;# 
  2356  001A                     	;# 
  2357  001C                     	;# 
  2358  001C                     	;# 
  2359  001D                     	;# 
  2360  001D                     	;# 
  2361  001E                     	;# 
  2362  001F                     	;# 
  2363  008C                     	;# 
  2364  008C                     	;# 
  2365  008D                     	;# 
  2366  008E                     	;# 
  2367  008E                     	;# 
  2368  008F                     	;# 
  2369  0090                     	;# 
  2370  0090                     	;# 
  2371  0091                     	;# 
  2372  0093                     	;# 
  2373  0094                     	;# 
  2374  0095                     	;# 
  2375  0096                     	;# 
  2376  0097                     	;# 
  2377  0098                     	;# 
  2378  0099                     	;# 
  2379  009A                     	;# 
  2380  009B                     	;# 
  2381  009C                     	;# 
  2382  009D                     	;# 
  2383  009E                     	;# 
  2384  010C                     	;# 
  2385  010D                     	;# 
  2386  010E                     	;# 
  2387  010E                     	;# 
  2388  010F                     	;# 
  2389  0110                     	;# 
  2390  0110                     	;# 
  2391  0111                     	;# 
  2392  0112                     	;# 
  2393  0112                     	;# 
  2394  0113                     	;# 
  2395  0114                     	;# 
  2396  0114                     	;# 
  2397  0115                     	;# 
  2398  0116                     	;# 
  2399  0116                     	;# 
  2400  0117                     	;# 
  2401  0119                     	;# 
  2402  0119                     	;# 
  2403  0119                     	;# 
  2404  011A                     	;# 
  2405  011A                     	;# 
  2406  011A                     	;# 
  2407  011B                     	;# 
  2408  011B                     	;# 
  2409  011B                     	;# 
  2410  011B                     	;# 
  2411  011B                     	;# 
  2412  011C                     	;# 
  2413  011C                     	;# 
  2414  011C                     	;# 
  2415  011D                     	;# 
  2416  011D                     	;# 
  2417  011D                     	;# 
  2418  011E                     	;# 
  2419  011E                     	;# 
  2420  011E                     	;# 
  2421  011F                     	;# 
  2422  011F                     	;# 
  2423  011F                     	;# 
  2424  011F                     	;# 
  2425  011F                     	;# 
  2426  018C                     	;# 
  2427  018D                     	;# 
  2428  018E                     	;# 
  2429  018F                     	;# 
  2430  0190                     	;# 
  2431  0191                     	;# 
  2432  0192                     	;# 
  2433  0196                     	;# 
  2434  0197                     	;# 
  2435  0198                     	;# 
  2436  0199                     	;# 
  2437  019A                     	;# 
  2438  019B                     	;# 
  2439  019C                     	;# 
  2440  020C                     	;# 
  2441  020C                     	;# 
  2442  020D                     	;# 
  2443  020E                     	;# 
  2444  020F                     	;# 
  2445  020F                     	;# 
  2446  0210                     	;# 
  2447  0210                     	;# 
  2448  0211                     	;# 
  2449  0211                     	;# 
  2450  0212                     	;# 
  2451  0212                     	;# 
  2452  0213                     	;# 
  2453  0214                     	;# 
  2454  0215                     	;# 
  2455  0215                     	;# 
  2456  0216                     	;# 
  2457  0216                     	;# 
  2458  0217                     	;# 
  2459  0217                     	;# 
  2460  0218                     	;# 
  2461  0218                     	;# 
  2462  0219                     	;# 
  2463  021A                     	;# 
  2464  021B                     	;# 
  2465  021B                     	;# 
  2466  021C                     	;# 
  2467  021C                     	;# 
  2468  021D                     	;# 
  2469  021D                     	;# 
  2470  021E                     	;# 
  2471  021F                     	;# 
  2472  028C                     	;# 
  2473  028C                     	;# 
  2474  028D                     	;# 
  2475  028D                     	;# 
  2476  028E                     	;# 
  2477  028F                     	;# 
  2478  0290                     	;# 
  2479  0290                     	;# 
  2480  0291                     	;# 
  2481  0292                     	;# 
  2482  0292                     	;# 
  2483  0293                     	;# 
  2484  0293                     	;# 
  2485  0294                     	;# 
  2486  0295                     	;# 
  2487  0296                     	;# 
  2488  0296                     	;# 
  2489  0297                     	;# 
  2490  0298                     	;# 
  2491  0298                     	;# 
  2492  0299                     	;# 
  2493  0299                     	;# 
  2494  029A                     	;# 
  2495  029B                     	;# 
  2496  029C                     	;# 
  2497  029C                     	;# 
  2498  029D                     	;# 
  2499  030C                     	;# 
  2500  030C                     	;# 
  2501  030D                     	;# 
  2502  030E                     	;# 
  2503  030F                     	;# 
  2504  0310                     	;# 
  2505  0310                     	;# 
  2506  0311                     	;# 
  2507  0312                     	;# 
  2508  0313                     	;# 
  2509  0314                     	;# 
  2510  0314                     	;# 
  2511  0315                     	;# 
  2512  0316                     	;# 
  2513  0317                     	;# 
  2514  0318                     	;# 
  2515  0318                     	;# 
  2516  0319                     	;# 
  2517  031A                     	;# 
  2518  031B                     	;# 
  2519  031C                     	;# 
  2520  031C                     	;# 
  2521  031D                     	;# 
  2522  031E                     	;# 
  2523  031F                     	;# 
  2524  038C                     	;# 
  2525  038C                     	;# 
  2526  038D                     	;# 
  2527  038E                     	;# 
  2528  0390                     	;# 
  2529  0390                     	;# 
  2530  0391                     	;# 
  2531  0392                     	;# 
  2532  040C                     	;# 
  2533  040D                     	;# 
  2534  040E                     	;# 
  2535  040F                     	;# 
  2536  0410                     	;# 
  2537  0411                     	;# 
  2538  0416                     	;# 
  2539  0416                     	;# 
  2540  0417                     	;# 
  2541  0418                     	;# 
  2542  0418                     	;# 
  2543  0419                     	;# 
  2544  041A                     	;# 
  2545  041A                     	;# 
  2546  041B                     	;# 
  2547  041C                     	;# 
  2548  041C                     	;# 
  2549  041D                     	;# 
  2550  041E                     	;# 
  2551  041F                     	;# 
  2552  048C                     	;# 
  2553  048C                     	;# 
  2554  048D                     	;# 
  2555  048E                     	;# 
  2556  048F                     	;# 
  2557  048F                     	;# 
  2558  0490                     	;# 
  2559  0491                     	;# 
  2560  0492                     	;# 
  2561  0492                     	;# 
  2562  0493                     	;# 
  2563  0494                     	;# 
  2564  0495                     	;# 
  2565  0495                     	;# 
  2566  0496                     	;# 
  2567  0497                     	;# 
  2568  0498                     	;# 
  2569  0499                     	;# 
  2570  049A                     	;# 
  2571  049B                     	;# 
  2572  049C                     	;# 
  2573  049D                     	;# 
  2574  050C                     	;# 
  2575  050C                     	;# 
  2576  050D                     	;# 
  2577  050E                     	;# 
  2578  050F                     	;# 
  2579  050F                     	;# 
  2580  0510                     	;# 
  2581  0511                     	;# 
  2582  0512                     	;# 
  2583  0512                     	;# 
  2584  0513                     	;# 
  2585  0514                     	;# 
  2586  0515                     	;# 
  2587  0515                     	;# 
  2588  0516                     	;# 
  2589  0517                     	;# 
  2590  0518                     	;# 
  2591  0519                     	;# 
  2592  051A                     	;# 
  2593  051B                     	;# 
  2594  051C                     	;# 
  2595  051D                     	;# 
  2596  058C                     	;# 
  2597  058C                     	;# 
  2598  058D                     	;# 
  2599  058E                     	;# 
  2600  058F                     	;# 
  2601  058F                     	;# 
  2602  0590                     	;# 
  2603  0591                     	;# 
  2604  0592                     	;# 
  2605  0593                     	;# 
  2606  060C                     	;# 
  2607  060D                     	;# 
  2608  060E                     	;# 
  2609  060F                     	;# 
  2610  0610                     	;# 
  2611  0611                     	;# 
  2612  0612                     	;# 
  2613  0613                     	;# 
  2614  0614                     	;# 
  2615  0616                     	;# 
  2616  0617                     	;# 
  2617  0618                     	;# 
  2618  0619                     	;# 
  2619  061A                     	;# 
  2620  061B                     	;# 
  2621  061C                     	;# 
  2622  061D                     	;# 
  2623  061E                     	;# 
  2624  068C                     	;# 
  2625  068D                     	;# 
  2626  068E                     	;# 
  2627  068F                     	;# 
  2628  0690                     	;# 
  2629  0691                     	;# 
  2630  0692                     	;# 
  2631  0693                     	;# 
  2632  0694                     	;# 
  2633  070C                     	;# 
  2634  070D                     	;# 
  2635  070E                     	;# 
  2636  070F                     	;# 
  2637  0710                     	;# 
  2638  0711                     	;# 
  2639  0712                     	;# 
  2640  0713                     	;# 
  2641  0714                     	;# 
  2642  0716                     	;# 
  2643  0717                     	;# 
  2644  0718                     	;# 
  2645  0719                     	;# 
  2646  071A                     	;# 
  2647  071B                     	;# 
  2648  071C                     	;# 
  2649  071D                     	;# 
  2650  071E                     	;# 
  2651  0796                     	;# 
  2652  0797                     	;# 
  2653  0798                     	;# 
  2654  0799                     	;# 
  2655  079A                     	;# 
  2656  079B                     	;# 
  2657  080C                     	;# 
  2658  080D                     	;# 
  2659  080E                     	;# 
  2660  080F                     	;# 
  2661  0810                     	;# 
  2662  0811                     	;# 
  2663  0812                     	;# 
  2664  0813                     	;# 
  2665  0814                     	;# 
  2666  081A                     	;# 
  2667  081B                     	;# 
  2668  081C                     	;# 
  2669  081D                     	;# 
  2670  081E                     	;# 
  2671  081F                     	;# 
  2672  088C                     	;# 
  2673  088D                     	;# 
  2674  088E                     	;# 
  2675  088F                     	;# 
  2676  0890                     	;# 
  2677  0891                     	;# 
  2678  0892                     	;# 
  2679  0893                     	;# 
  2680  0895                     	;# 
  2681  0896                     	;# 
  2682  0897                     	;# 
  2683  0898                     	;# 
  2684  0899                     	;# 
  2685  089A                     	;# 
  2686  089B                     	;# 
  2687  090C                     	;# 
  2688  090E                     	;# 
  2689  090F                     	;# 
  2690  091F                     	;# 
  2691  091F                     	;# 
  2692  098F                     	;# 
  2693  098F                     	;# 
  2694  0990                     	;# 
  2695  0991                     	;# 
  2696  0992                     	;# 
  2697  0993                     	;# 
  2698  0994                     	;# 
  2699  0995                     	;# 
  2700  0996                     	;# 
  2701  0997                     	;# 
  2702  0E0F                     	;# 
  2703  0E10                     	;# 
  2704  0E11                     	;# 
  2705  0E12                     	;# 
  2706  0E13                     	;# 
  2707  0E14                     	;# 
  2708  0E15                     	;# 
  2709  0E16                     	;# 
  2710  0E17                     	;# 
  2711  0E18                     	;# 
  2712  0E19                     	;# 
  2713  0E1A                     	;# 
  2714  0E1B                     	;# 
  2715  0E1C                     	;# 
  2716  0E1D                     	;# 
  2717  0E1E                     	;# 
  2718  0E1F                     	;# 
  2719  0E20                     	;# 
  2720  0E21                     	;# 
  2721  0E22                     	;# 
  2722  0E23                     	;# 
  2723  0E24                     	;# 
  2724  0E25                     	;# 
  2725  0E26                     	;# 
  2726  0E27                     	;# 
  2727  0E28                     	;# 
  2728  0E29                     	;# 
  2729  0E2A                     	;# 
  2730  0E2B                     	;# 
  2731  0E2C                     	;# 
  2732  0E2D                     	;# 
  2733  0E2E                     	;# 
  2734  0E2F                     	;# 
  2735  0E30                     	;# 
  2736  0E31                     	;# 
  2737  0E32                     	;# 
  2738  0E33                     	;# 
  2739  0E34                     	;# 
  2740  0E35                     	;# 
  2741  0E36                     	;# 
  2742  0E37                     	;# 
  2743  0E8F                     	;# 
  2744  0E90                     	;# 
  2745  0E91                     	;# 
  2746  0E92                     	;# 
  2747  0E93                     	;# 
  2748  0E94                     	;# 
  2749  0E95                     	;# 
  2750  0E96                     	;# 
  2751  0E97                     	;# 
  2752  0E9C                     	;# 
  2753  0E9D                     	;# 
  2754  0E9E                     	;# 
  2755  0EA1                     	;# 
  2756  0EA2                     	;# 
  2757  0EA3                     	;# 
  2758  0EA4                     	;# 
  2759  0EA5                     	;# 
  2760  0EA9                     	;# 
  2761  0EAA                     	;# 
  2762  0EAB                     	;# 
  2763  0EAC                     	;# 
  2764  0EB1                     	;# 
  2765  0EB2                     	;# 
  2766  0EB3                     	;# 
  2767  0EB8                     	;# 
  2768  0EB9                     	;# 
  2769  0EBA                     	;# 
  2770  0EBB                     	;# 
  2771  0EBC                     	;# 
  2772  0EBD                     	;# 
  2773  0EBE                     	;# 
  2774  0EC3                     	;# 
  2775  0EC5                     	;# 
  2776  0EC6                     	;# 
  2777  0EC7                     	;# 
  2778  0EC8                     	;# 
  2779  0EC9                     	;# 
  2780  0ECA                     	;# 
  2781  0ECB                     	;# 
  2782  0ECC                     	;# 
  2783  0F10                     	;# 
  2784  0F11                     	;# 
  2785  0F12                     	;# 
  2786  0F13                     	;# 
  2787  0F14                     	;# 
  2788  0F15                     	;# 
  2789  0F16                     	;# 
  2790  0F17                     	;# 
  2791  0F18                     	;# 
  2792  0F19                     	;# 
  2793  0F1A                     	;# 
  2794  0F1B                     	;# 
  2795  0F1C                     	;# 
  2796  0F1D                     	;# 
  2797  0F1E                     	;# 
  2798  0F1F                     	;# 
  2799  0F20                     	;# 
  2800  0F21                     	;# 
  2801  0F22                     	;# 
  2802  0F23                     	;# 
  2803  0F24                     	;# 
  2804  0F25                     	;# 
  2805  0F26                     	;# 
  2806  0F27                     	;# 
  2807  0F28                     	;# 
  2808  0F29                     	;# 
  2809  0F2A                     	;# 
  2810  0F2B                     	;# 
  2811  0F2C                     	;# 
  2812  0F2D                     	;# 
  2813  0F2E                     	;# 
  2814  0F2F                     	;# 
  2815  0F30                     	;# 
  2816  0F31                     	;# 
  2817  0F32                     	;# 
  2818  0F38                     	;# 
  2819  0F39                     	;# 
  2820  0F3A                     	;# 
  2821  0F3B                     	;# 
  2822  0F3C                     	;# 
  2823  0F3D                     	;# 
  2824  0F3E                     	;# 
  2825  0F3F                     	;# 
  2826  0F40                     	;# 
  2827  0F41                     	;# 
  2828  0F43                     	;# 
  2829  0F44                     	;# 
  2830  0F45                     	;# 
  2831  0F46                     	;# 
  2832  0F47                     	;# 
  2833  0F48                     	;# 
  2834  0F49                     	;# 
  2835  0F4A                     	;# 
  2836  0F4B                     	;# 
  2837  0F4C                     	;# 
  2838  0F4E                     	;# 
  2839  0F4F                     	;# 
  2840  0F50                     	;# 
  2841  0F51                     	;# 
  2842  0F52                     	;# 
  2843  0F53                     	;# 
  2844  0F54                     	;# 
  2845  0F55                     	;# 
  2846  0F56                     	;# 
  2847  0F57                     	;# 
  2848  0F59                     	;# 
  2849  0F5A                     	;# 
  2850  0F5B                     	;# 
  2851  0F5C                     	;# 
  2852  0F5D                     	;# 
  2853  0F61                     	;# 
  2854  0F62                     	;# 
  2855  0F64                     	;# 
  2856  0F65                     	;# 
  2857  0F66                     	;# 
  2858  0F67                     	;# 
  2859  0F68                     	;# 
  2860  0F69                     	;# 
  2861  0F6A                     	;# 
  2862  0F6B                     	;# 
  2863  0F6C                     	;# 
  2864  0F6D                     	;# 
  2865  0FE4                     	;# 
  2866  0FE5                     	;# 
  2867  0FE6                     	;# 
  2868  0FE7                     	;# 
  2869  0FE8                     	;# 
  2870  0FE9                     	;# 
  2871  0FEA                     	;# 
  2872  0FEB                     	;# 
  2873  0FED                     	;# 
  2874  0FEE                     	;# 
  2875  0FEF                     	;# 
  2876  0000                     	;# 
  2877  0001                     	;# 
  2878  0002                     	;# 
  2879  0003                     	;# 
  2880  0004                     	;# 
  2881  0005                     	;# 
  2882  0006                     	;# 
  2883  0007                     	;# 
  2884  0008                     	;# 
  2885  0009                     	;# 
  2886  000A                     	;# 
  2887  000B                     	;# 
  2888  000C                     	;# 
  2889  000D                     	;# 
  2890  000E                     	;# 
  2891  000F                     	;# 
  2892  0010                     	;# 
  2893  0011                     	;# 
  2894  0012                     	;# 
  2895  0013                     	;# 
  2896  0014                     	;# 
  2897  0015                     	;# 
  2898  0016                     	;# 
  2899  0017                     	;# 
  2900  0018                     	;# 
  2901  0019                     	;# 
  2902  001A                     	;# 
  2903  001C                     	;# 
  2904  001C                     	;# 
  2905  001D                     	;# 
  2906  001D                     	;# 
  2907  001E                     	;# 
  2908  001F                     	;# 
  2909  008C                     	;# 
  2910  008C                     	;# 
  2911  008D                     	;# 
  2912  008E                     	;# 
  2913  008E                     	;# 
  2914  008F                     	;# 
  2915  0090                     	;# 
  2916  0090                     	;# 
  2917  0091                     	;# 
  2918  0093                     	;# 
  2919  0094                     	;# 
  2920  0095                     	;# 
  2921  0096                     	;# 
  2922  0097                     	;# 
  2923  0098                     	;# 
  2924  0099                     	;# 
  2925  009A                     	;# 
  2926  009B                     	;# 
  2927  009C                     	;# 
  2928  009D                     	;# 
  2929  009E                     	;# 
  2930  010C                     	;# 
  2931  010D                     	;# 
  2932  010E                     	;# 
  2933  010E                     	;# 
  2934  010F                     	;# 
  2935  0110                     	;# 
  2936  0110                     	;# 
  2937  0111                     	;# 
  2938  0112                     	;# 
  2939  0112                     	;# 
  2940  0113                     	;# 
  2941  0114                     	;# 
  2942  0114                     	;# 
  2943  0115                     	;# 
  2944  0116                     	;# 
  2945  0116                     	;# 
  2946  0117                     	;# 
  2947  0119                     	;# 
  2948  0119                     	;# 
  2949  0119                     	;# 
  2950  011A                     	;# 
  2951  011A                     	;# 
  2952  011A                     	;# 
  2953  011B                     	;# 
  2954  011B                     	;# 
  2955  011B                     	;# 
  2956  011B                     	;# 
  2957  011B                     	;# 
  2958  011C                     	;# 
  2959  011C                     	;# 
  2960  011C                     	;# 
  2961  011D                     	;# 
  2962  011D                     	;# 
  2963  011D                     	;# 
  2964  011E                     	;# 
  2965  011E                     	;# 
  2966  011E                     	;# 
  2967  011F                     	;# 
  2968  011F                     	;# 
  2969  011F                     	;# 
  2970  011F                     	;# 
  2971  011F                     	;# 
  2972  018C                     	;# 
  2973  018D                     	;# 
  2974  018E                     	;# 
  2975  018F                     	;# 
  2976  0190                     	;# 
  2977  0191                     	;# 
  2978  0192                     	;# 
  2979  0196                     	;# 
  2980  0197                     	;# 
  2981  0198                     	;# 
  2982  0199                     	;# 
  2983  019A                     	;# 
  2984  019B                     	;# 
  2985  019C                     	;# 
  2986  020C                     	;# 
  2987  020C                     	;# 
  2988  020D                     	;# 
  2989  020E                     	;# 
  2990  020F                     	;# 
  2991  020F                     	;# 
  2992  0210                     	;# 
  2993  0210                     	;# 
  2994  0211                     	;# 
  2995  0211                     	;# 
  2996  0212                     	;# 
  2997  0212                     	;# 
  2998  0213                     	;# 
  2999  0214                     	;# 
  3000  0215                     	;# 
  3001  0215                     	;# 
  3002  0216                     	;# 
  3003  0216                     	;# 
  3004  0217                     	;# 
  3005  0217                     	;# 
  3006  0218                     	;# 
  3007  0218                     	;# 
  3008  0219                     	;# 
  3009  021A                     	;# 
  3010  021B                     	;# 
  3011  021B                     	;# 
  3012  021C                     	;# 
  3013  021C                     	;# 
  3014  021D                     	;# 
  3015  021D                     	;# 
  3016  021E                     	;# 
  3017  021F                     	;# 
  3018  028C                     	;# 
  3019  028C                     	;# 
  3020  028D                     	;# 
  3021  028D                     	;# 
  3022  028E                     	;# 
  3023  028F                     	;# 
  3024  0290                     	;# 
  3025  0290                     	;# 
  3026  0291                     	;# 
  3027  0292                     	;# 
  3028  0292                     	;# 
  3029  0293                     	;# 
  3030  0293                     	;# 
  3031  0294                     	;# 
  3032  0295                     	;# 
  3033  0296                     	;# 
  3034  0296                     	;# 
  3035  0297                     	;# 
  3036  0298                     	;# 
  3037  0298                     	;# 
  3038  0299                     	;# 
  3039  0299                     	;# 
  3040  029A                     	;# 
  3041  029B                     	;# 
  3042  029C                     	;# 
  3043  029C                     	;# 
  3044  029D                     	;# 
  3045  030C                     	;# 
  3046  030C                     	;# 
  3047  030D                     	;# 
  3048  030E                     	;# 
  3049  030F                     	;# 
  3050  0310                     	;# 
  3051  0310                     	;# 
  3052  0311                     	;# 
  3053  0312                     	;# 
  3054  0313                     	;# 
  3055  0314                     	;# 
  3056  0314                     	;# 
  3057  0315                     	;# 
  3058  0316                     	;# 
  3059  0317                     	;# 
  3060  0318                     	;# 
  3061  0318                     	;# 
  3062  0319                     	;# 
  3063  031A                     	;# 
  3064  031B                     	;# 
  3065  031C                     	;# 
  3066  031C                     	;# 
  3067  031D                     	;# 
  3068  031E                     	;# 
  3069  031F                     	;# 
  3070  038C                     	;# 
  3071  038C                     	;# 
  3072  038D                     	;# 
  3073  038E                     	;# 
  3074  0390                     	;# 
  3075  0390                     	;# 
  3076  0391                     	;# 
  3077  0392                     	;# 
  3078  040C                     	;# 
  3079  040D                     	;# 
  3080  040E                     	;# 
  3081  040F                     	;# 
  3082  0410                     	;# 
  3083  0411                     	;# 
  3084  0416                     	;# 
  3085  0416                     	;# 
  3086  0417                     	;# 
  3087  0418                     	;# 
  3088  0418                     	;# 
  3089  0419                     	;# 
  3090  041A                     	;# 
  3091  041A                     	;# 
  3092  041B                     	;# 
  3093  041C                     	;# 
  3094  041C                     	;# 
  3095  041D                     	;# 
  3096  041E                     	;# 
  3097  041F                     	;# 
  3098  048C                     	;# 
  3099  048C                     	;# 
  3100  048D                     	;# 
  3101  048E                     	;# 
  3102  048F                     	;# 
  3103  048F                     	;# 
  3104  0490                     	;# 
  3105  0491                     	;# 
  3106  0492                     	;# 
  3107  0492                     	;# 
  3108  0493                     	;# 
  3109  0494                     	;# 
  3110  0495                     	;# 
  3111  0495                     	;# 
  3112  0496                     	;# 
  3113  0497                     	;# 
  3114  0498                     	;# 
  3115  0499                     	;# 
  3116  049A                     	;# 
  3117  049B                     	;# 
  3118  049C                     	;# 
  3119  049D                     	;# 
  3120  050C                     	;# 
  3121  050C                     	;# 
  3122  050D                     	;# 
  3123  050E                     	;# 
  3124  050F                     	;# 
  3125  050F                     	;# 
  3126  0510                     	;# 
  3127  0511                     	;# 
  3128  0512                     	;# 
  3129  0512                     	;# 
  3130  0513                     	;# 
  3131  0514                     	;# 
  3132  0515                     	;# 
  3133  0515                     	;# 
  3134  0516                     	;# 
  3135  0517                     	;# 
  3136  0518                     	;# 
  3137  0519                     	;# 
  3138  051A                     	;# 
  3139  051B                     	;# 
  3140  051C                     	;# 
  3141  051D                     	;# 
  3142  058C                     	;# 
  3143  058C                     	;# 
  3144  058D                     	;# 
  3145  058E                     	;# 
  3146  058F                     	;# 
  3147  058F                     	;# 
  3148  0590                     	;# 
  3149  0591                     	;# 
  3150  0592                     	;# 
  3151  0593                     	;# 
  3152  060C                     	;# 
  3153  060D                     	;# 
  3154  060E                     	;# 
  3155  060F                     	;# 
  3156  0610                     	;# 
  3157  0611                     	;# 
  3158  0612                     	;# 
  3159  0613                     	;# 
  3160  0614                     	;# 
  3161  0616                     	;# 
  3162  0617                     	;# 
  3163  0618                     	;# 
  3164  0619                     	;# 
  3165  061A                     	;# 
  3166  061B                     	;# 
  3167  061C                     	;# 
  3168  061D                     	;# 
  3169  061E                     	;# 
  3170  068C                     	;# 
  3171  068D                     	;# 
  3172  068E                     	;# 
  3173  068F                     	;# 
  3174  0690                     	;# 
  3175  0691                     	;# 
  3176  0692                     	;# 
  3177  0693                     	;# 
  3178  0694                     	;# 
  3179  070C                     	;# 
  3180  070D                     	;# 
  3181  070E                     	;# 
  3182  070F                     	;# 
  3183  0710                     	;# 
  3184  0711                     	;# 
  3185  0712                     	;# 
  3186  0713                     	;# 
  3187  0714                     	;# 
  3188  0716                     	;# 
  3189  0717                     	;# 
  3190  0718                     	;# 
  3191  0719                     	;# 
  3192  071A                     	;# 
  3193  071B                     	;# 
  3194  071C                     	;# 
  3195  071D                     	;# 
  3196  071E                     	;# 
  3197  0796                     	;# 
  3198  0797                     	;# 
  3199  0798                     	;# 
  3200  0799                     	;# 
  3201  079A                     	;# 
  3202  079B                     	;# 
  3203  080C                     	;# 
  3204  080D                     	;# 
  3205  080E                     	;# 
  3206  080F                     	;# 
  3207  0810                     	;# 
  3208  0811                     	;# 
  3209  0812                     	;# 
  3210  0813                     	;# 
  3211  0814                     	;# 
  3212  081A                     	;# 
  3213  081B                     	;# 
  3214  081C                     	;# 
  3215  081D                     	;# 
  3216  081E                     	;# 
  3217  081F                     	;# 
  3218  088C                     	;# 
  3219  088D                     	;# 
  3220  088E                     	;# 
  3221  088F                     	;# 
  3222  0890                     	;# 
  3223  0891                     	;# 
  3224  0892                     	;# 
  3225  0893                     	;# 
  3226  0895                     	;# 
  3227  0896                     	;# 
  3228  0897                     	;# 
  3229  0898                     	;# 
  3230  0899                     	;# 
  3231  089A                     	;# 
  3232  089B                     	;# 
  3233  090C                     	;# 
  3234  090E                     	;# 
  3235  090F                     	;# 
  3236  091F                     	;# 
  3237  091F                     	;# 
  3238  098F                     	;# 
  3239  098F                     	;# 
  3240  0990                     	;# 
  3241  0991                     	;# 
  3242  0992                     	;# 
  3243  0993                     	;# 
  3244  0994                     	;# 
  3245  0995                     	;# 
  3246  0996                     	;# 
  3247  0997                     	;# 
  3248  0E0F                     	;# 
  3249  0E10                     	;# 
  3250  0E11                     	;# 
  3251  0E12                     	;# 
  3252  0E13                     	;# 
  3253  0E14                     	;# 
  3254  0E15                     	;# 
  3255  0E16                     	;# 
  3256  0E17                     	;# 
  3257  0E18                     	;# 
  3258  0E19                     	;# 
  3259  0E1A                     	;# 
  3260  0E1B                     	;# 
  3261  0E1C                     	;# 
  3262  0E1D                     	;# 
  3263  0E1E                     	;# 
  3264  0E1F                     	;# 
  3265  0E20                     	;# 
  3266  0E21                     	;# 
  3267  0E22                     	;# 
  3268  0E23                     	;# 
  3269  0E24                     	;# 
  3270  0E25                     	;# 
  3271  0E26                     	;# 
  3272  0E27                     	;# 
  3273  0E28                     	;# 
  3274  0E29                     	;# 
  3275  0E2A                     	;# 
  3276  0E2B                     	;# 
  3277  0E2C                     	;# 
  3278  0E2D                     	;# 
  3279  0E2E                     	;# 
  3280  0E2F                     	;# 
  3281  0E30                     	;# 
  3282  0E31                     	;# 
  3283  0E32                     	;# 
  3284  0E33                     	;# 
  3285  0E34                     	;# 
  3286  0E35                     	;# 
  3287  0E36                     	;# 
  3288  0E37                     	;# 
  3289  0E8F                     	;# 
  3290  0E90                     	;# 
  3291  0E91                     	;# 
  3292  0E92                     	;# 
  3293  0E93                     	;# 
  3294  0E94                     	;# 
  3295  0E95                     	;# 
  3296  0E96                     	;# 
  3297  0E97                     	;# 
  3298  0E9C                     	;# 
  3299  0E9D                     	;# 
  3300  0E9E                     	;# 
  3301  0EA1                     	;# 
  3302  0EA2                     	;# 
  3303  0EA3                     	;# 
  3304  0EA4                     	;# 
  3305  0EA5                     	;# 
  3306  0EA9                     	;# 
  3307  0EAA                     	;# 
  3308  0EAB                     	;# 
  3309  0EAC                     	;# 
  3310  0EB1                     	;# 
  3311  0EB2                     	;# 
  3312  0EB3                     	;# 
  3313  0EB8                     	;# 
  3314  0EB9                     	;# 
  3315  0EBA                     	;# 
  3316  0EBB                     	;# 
  3317  0EBC                     	;# 
  3318  0EBD                     	;# 
  3319  0EBE                     	;# 
  3320  0EC3                     	;# 
  3321  0EC5                     	;# 
  3322  0EC6                     	;# 
  3323  0EC7                     	;# 
  3324  0EC8                     	;# 
  3325  0EC9                     	;# 
  3326  0ECA                     	;# 
  3327  0ECB                     	;# 
  3328  0ECC                     	;# 
  3329  0F10                     	;# 
  3330  0F11                     	;# 
  3331  0F12                     	;# 
  3332  0F13                     	;# 
  3333  0F14                     	;# 
  3334  0F15                     	;# 
  3335  0F16                     	;# 
  3336  0F17                     	;# 
  3337  0F18                     	;# 
  3338  0F19                     	;# 
  3339  0F1A                     	;# 
  3340  0F1B                     	;# 
  3341  0F1C                     	;# 
  3342  0F1D                     	;# 
  3343  0F1E                     	;# 
  3344  0F1F                     	;# 
  3345  0F20                     	;# 
  3346  0F21                     	;# 
  3347  0F22                     	;# 
  3348  0F23                     	;# 
  3349  0F24                     	;# 
  3350  0F25                     	;# 
  3351  0F26                     	;# 
  3352  0F27                     	;# 
  3353  0F28                     	;# 
  3354  0F29                     	;# 
  3355  0F2A                     	;# 
  3356  0F2B                     	;# 
  3357  0F2C                     	;# 
  3358  0F2D                     	;# 
  3359  0F2E                     	;# 
  3360  0F2F                     	;# 
  3361  0F30                     	;# 
  3362  0F31                     	;# 
  3363  0F32                     	;# 
  3364  0F38                     	;# 
  3365  0F39                     	;# 
  3366  0F3A                     	;# 
  3367  0F3B                     	;# 
  3368  0F3C                     	;# 
  3369  0F3D                     	;# 
  3370  0F3E                     	;# 
  3371  0F3F                     	;# 
  3372  0F40                     	;# 
  3373  0F41                     	;# 
  3374  0F43                     	;# 
  3375  0F44                     	;# 
  3376  0F45                     	;# 
  3377  0F46                     	;# 
  3378  0F47                     	;# 
  3379  0F48                     	;# 
  3380  0F49                     	;# 
  3381  0F4A                     	;# 
  3382  0F4B                     	;# 
  3383  0F4C                     	;# 
  3384  0F4E                     	;# 
  3385  0F4F                     	;# 
  3386  0F50                     	;# 
  3387  0F51                     	;# 
  3388  0F52                     	;# 
  3389  0F53                     	;# 
  3390  0F54                     	;# 
  3391  0F55                     	;# 
  3392  0F56                     	;# 
  3393  0F57                     	;# 
  3394  0F59                     	;# 
  3395  0F5A                     	;# 
  3396  0F5B                     	;# 
  3397  0F5C                     	;# 
  3398  0F5D                     	;# 
  3399  0F61                     	;# 
  3400  0F62                     	;# 
  3401  0F64                     	;# 
  3402  0F65                     	;# 
  3403  0F66                     	;# 
  3404  0F67                     	;# 
  3405  0F68                     	;# 
  3406  0F69                     	;# 
  3407  0F6A                     	;# 
  3408  0F6B                     	;# 
  3409  0F6C                     	;# 
  3410  0F6D                     	;# 
  3411  0FE4                     	;# 
  3412  0FE5                     	;# 
  3413  0FE6                     	;# 
  3414  0FE7                     	;# 
  3415  0FE8                     	;# 
  3416  0FE9                     	;# 
  3417  0FEA                     	;# 
  3418  0FEB                     	;# 
  3419  0FED                     	;# 
  3420  0FEE                     	;# 
  3421  0FEF                     	;# 
  3422  0000                     	;# 
  3423  0001                     	;# 
  3424  0002                     	;# 
  3425  0003                     	;# 
  3426  0004                     	;# 
  3427  0005                     	;# 
  3428  0006                     	;# 
  3429  0007                     	;# 
  3430  0008                     	;# 
  3431  0009                     	;# 
  3432  000A                     	;# 
  3433  000B                     	;# 
  3434  000C                     	;# 
  3435  000D                     	;# 
  3436  000E                     	;# 
  3437  000F                     	;# 
  3438  0010                     	;# 
  3439  0011                     	;# 
  3440  0012                     	;# 
  3441  0013                     	;# 
  3442  0014                     	;# 
  3443  0015                     	;# 
  3444  0016                     	;# 
  3445  0017                     	;# 
  3446  0018                     	;# 
  3447  0019                     	;# 
  3448  001A                     	;# 
  3449  001C                     	;# 
  3450  001C                     	;# 
  3451  001D                     	;# 
  3452  001D                     	;# 
  3453  001E                     	;# 
  3454  001F                     	;# 
  3455  008C                     	;# 
  3456  008C                     	;# 
  3457  008D                     	;# 
  3458  008E                     	;# 
  3459  008E                     	;# 
  3460  008F                     	;# 
  3461  0090                     	;# 
  3462  0090                     	;# 
  3463  0091                     	;# 
  3464  0093                     	;# 
  3465  0094                     	;# 
  3466  0095                     	;# 
  3467  0096                     	;# 
  3468  0097                     	;# 
  3469  0098                     	;# 
  3470  0099                     	;# 
  3471  009A                     	;# 
  3472  009B                     	;# 
  3473  009C                     	;# 
  3474  009D                     	;# 
  3475  009E                     	;# 
  3476  010C                     	;# 
  3477  010D                     	;# 
  3478  010E                     	;# 
  3479  010E                     	;# 
  3480  010F                     	;# 
  3481  0110                     	;# 
  3482  0110                     	;# 
  3483  0111                     	;# 
  3484  0112                     	;# 
  3485  0112                     	;# 
  3486  0113                     	;# 
  3487  0114                     	;# 
  3488  0114                     	;# 
  3489  0115                     	;# 
  3490  0116                     	;# 
  3491  0116                     	;# 
  3492  0117                     	;# 
  3493  0119                     	;# 
  3494  0119                     	;# 
  3495  0119                     	;# 
  3496  011A                     	;# 
  3497  011A                     	;# 
  3498  011A                     	;# 
  3499  011B                     	;# 
  3500  011B                     	;# 
  3501  011B                     	;# 
  3502  011B                     	;# 
  3503  011B                     	;# 
  3504  011C                     	;# 
  3505  011C                     	;# 
  3506  011C                     	;# 
  3507  011D                     	;# 
  3508  011D                     	;# 
  3509  011D                     	;# 
  3510  011E                     	;# 
  3511  011E                     	;# 
  3512  011E                     	;# 
  3513  011F                     	;# 
  3514  011F                     	;# 
  3515  011F                     	;# 
  3516  011F                     	;# 
  3517  011F                     	;# 
  3518  018C                     	;# 
  3519  018D                     	;# 
  3520  018E                     	;# 
  3521  018F                     	;# 
  3522  0190                     	;# 
  3523  0191                     	;# 
  3524  0192                     	;# 
  3525  0196                     	;# 
  3526  0197                     	;# 
  3527  0198                     	;# 
  3528  0199                     	;# 
  3529  019A                     	;# 
  3530  019B                     	;# 
  3531  019C                     	;# 
  3532  020C                     	;# 
  3533  020C                     	;# 
  3534  020D                     	;# 
  3535  020E                     	;# 
  3536  020F                     	;# 
  3537  020F                     	;# 
  3538  0210                     	;# 
  3539  0210                     	;# 
  3540  0211                     	;# 
  3541  0211                     	;# 
  3542  0212                     	;# 
  3543  0212                     	;# 
  3544  0213                     	;# 
  3545  0214                     	;# 
  3546  0215                     	;# 
  3547  0215                     	;# 
  3548  0216                     	;# 
  3549  0216                     	;# 
  3550  0217                     	;# 
  3551  0217                     	;# 
  3552  0218                     	;# 
  3553  0218                     	;# 
  3554  0219                     	;# 
  3555  021A                     	;# 
  3556  021B                     	;# 
  3557  021B                     	;# 
  3558  021C                     	;# 
  3559  021C                     	;# 
  3560  021D                     	;# 
  3561  021D                     	;# 
  3562  021E                     	;# 
  3563  021F                     	;# 
  3564  028C                     	;# 
  3565  028C                     	;# 
  3566  028D                     	;# 
  3567  028D                     	;# 
  3568  028E                     	;# 
  3569  028F                     	;# 
  3570  0290                     	;# 
  3571  0290                     	;# 
  3572  0291                     	;# 
  3573  0292                     	;# 
  3574  0292                     	;# 
  3575  0293                     	;# 
  3576  0293                     	;# 
  3577  0294                     	;# 
  3578  0295                     	;# 
  3579  0296                     	;# 
  3580  0296                     	;# 
  3581  0297                     	;# 
  3582  0298                     	;# 
  3583  0298                     	;# 
  3584  0299                     	;# 
  3585  0299                     	;# 
  3586  029A                     	;# 
  3587  029B                     	;# 
  3588  029C                     	;# 
  3589  029C                     	;# 
  3590  029D                     	;# 
  3591  030C                     	;# 
  3592  030C                     	;# 
  3593  030D                     	;# 
  3594  030E                     	;# 
  3595  030F                     	;# 
  3596  0310                     	;# 
  3597  0310                     	;# 
  3598  0311                     	;# 
  3599  0312                     	;# 
  3600  0313                     	;# 
  3601  0314                     	;# 
  3602  0314                     	;# 
  3603  0315                     	;# 
  3604  0316                     	;# 
  3605  0317                     	;# 
  3606  0318                     	;# 
  3607  0318                     	;# 
  3608  0319                     	;# 
  3609  031A                     	;# 
  3610  031B                     	;# 
  3611  031C                     	;# 
  3612  031C                     	;# 
  3613  031D                     	;# 
  3614  031E                     	;# 
  3615  031F                     	;# 
  3616  038C                     	;# 
  3617  038C                     	;# 
  3618  038D                     	;# 
  3619  038E                     	;# 
  3620  0390                     	;# 
  3621  0390                     	;# 
  3622  0391                     	;# 
  3623  0392                     	;# 
  3624  040C                     	;# 
  3625  040D                     	;# 
  3626  040E                     	;# 
  3627  040F                     	;# 
  3628  0410                     	;# 
  3629  0411                     	;# 
  3630  0416                     	;# 
  3631  0416                     	;# 
  3632  0417                     	;# 
  3633  0418                     	;# 
  3634  0418                     	;# 
  3635  0419                     	;# 
  3636  041A                     	;# 
  3637  041A                     	;# 
  3638  041B                     	;# 
  3639  041C                     	;# 
  3640  041C                     	;# 
  3641  041D                     	;# 
  3642  041E                     	;# 
  3643  041F                     	;# 
  3644  048C                     	;# 
  3645  048C                     	;# 
  3646  048D                     	;# 
  3647  048E                     	;# 
  3648  048F                     	;# 
  3649  048F                     	;# 
  3650  0490                     	;# 
  3651  0491                     	;# 
  3652  0492                     	;# 
  3653  0492                     	;# 
  3654  0493                     	;# 
  3655  0494                     	;# 
  3656  0495                     	;# 
  3657  0495                     	;# 
  3658  0496                     	;# 
  3659  0497                     	;# 
  3660  0498                     	;# 
  3661  0499                     	;# 
  3662  049A                     	;# 
  3663  049B                     	;# 
  3664  049C                     	;# 
  3665  049D                     	;# 
  3666  050C                     	;# 
  3667  050C                     	;# 
  3668  050D                     	;# 
  3669  050E                     	;# 
  3670  050F                     	;# 
  3671  050F                     	;# 
  3672  0510                     	;# 
  3673  0511                     	;# 
  3674  0512                     	;# 
  3675  0512                     	;# 
  3676  0513                     	;# 
  3677  0514                     	;# 
  3678  0515                     	;# 
  3679  0515                     	;# 
  3680  0516                     	;# 
  3681  0517                     	;# 
  3682  0518                     	;# 
  3683  0519                     	;# 
  3684  051A                     	;# 
  3685  051B                     	;# 
  3686  051C                     	;# 
  3687  051D                     	;# 
  3688  058C                     	;# 
  3689  058C                     	;# 
  3690  058D                     	;# 
  3691  058E                     	;# 
  3692  058F                     	;# 
  3693  058F                     	;# 
  3694  0590                     	;# 
  3695  0591                     	;# 
  3696  0592                     	;# 
  3697  0593                     	;# 
  3698  060C                     	;# 
  3699  060D                     	;# 
  3700  060E                     	;# 
  3701  060F                     	;# 
  3702  0610                     	;# 
  3703  0611                     	;# 
  3704  0612                     	;# 
  3705  0613                     	;# 
  3706  0614                     	;# 
  3707  0616                     	;# 
  3708  0617                     	;# 
  3709  0618                     	;# 
  3710  0619                     	;# 
  3711  061A                     	;# 
  3712  061B                     	;# 
  3713  061C                     	;# 
  3714  061D                     	;# 
  3715  061E                     	;# 
  3716  068C                     	;# 
  3717  068D                     	;# 
  3718  068E                     	;# 
  3719  068F                     	;# 
  3720  0690                     	;# 
  3721  0691                     	;# 
  3722  0692                     	;# 
  3723  0693                     	;# 
  3724  0694                     	;# 
  3725  070C                     	;# 
  3726  070D                     	;# 
  3727  070E                     	;# 
  3728  070F                     	;# 
  3729  0710                     	;# 
  3730  0711                     	;# 
  3731  0712                     	;# 
  3732  0713                     	;# 
  3733  0714                     	;# 
  3734  0716                     	;# 
  3735  0717                     	;# 
  3736  0718                     	;# 
  3737  0719                     	;# 
  3738  071A                     	;# 
  3739  071B                     	;# 
  3740  071C                     	;# 
  3741  071D                     	;# 
  3742  071E                     	;# 
  3743  0796                     	;# 
  3744  0797                     	;# 
  3745  0798                     	;# 
  3746  0799                     	;# 
  3747  079A                     	;# 
  3748  079B                     	;# 
  3749  080C                     	;# 
  3750  080D                     	;# 
  3751  080E                     	;# 
  3752  080F                     	;# 
  3753  0810                     	;# 
  3754  0811                     	;# 
  3755  0812                     	;# 
  3756  0813                     	;# 
  3757  0814                     	;# 
  3758  081A                     	;# 
  3759  081B                     	;# 
  3760  081C                     	;# 
  3761  081D                     	;# 
  3762  081E                     	;# 
  3763  081F                     	;# 
  3764  088C                     	;# 
  3765  088D                     	;# 
  3766  088E                     	;# 
  3767  088F                     	;# 
  3768  0890                     	;# 
  3769  0891                     	;# 
  3770  0892                     	;# 
  3771  0893                     	;# 
  3772  0895                     	;# 
  3773  0896                     	;# 
  3774  0897                     	;# 
  3775  0898                     	;# 
  3776  0899                     	;# 
  3777  089A                     	;# 
  3778  089B                     	;# 
  3779  090C                     	;# 
  3780  090E                     	;# 
  3781  090F                     	;# 
  3782  091F                     	;# 
  3783  091F                     	;# 
  3784  098F                     	;# 
  3785  098F                     	;# 
  3786  0990                     	;# 
  3787  0991                     	;# 
  3788  0992                     	;# 
  3789  0993                     	;# 
  3790  0994                     	;# 
  3791  0995                     	;# 
  3792  0996                     	;# 
  3793  0997                     	;# 
  3794  0E0F                     	;# 
  3795  0E10                     	;# 
  3796  0E11                     	;# 
  3797  0E12                     	;# 
  3798  0E13                     	;# 
  3799  0E14                     	;# 
  3800  0E15                     	;# 
  3801  0E16                     	;# 
  3802  0E17                     	;# 
  3803  0E18                     	;# 
  3804  0E19                     	;# 
  3805  0E1A                     	;# 
  3806  0E1B                     	;# 
  3807  0E1C                     	;# 
  3808  0E1D                     	;# 
  3809  0E1E                     	;# 
  3810  0E1F                     	;# 
  3811  0E20                     	;# 
  3812  0E21                     	;# 
  3813  0E22                     	;# 
  3814  0E23                     	;# 
  3815  0E24                     	;# 
  3816  0E25                     	;# 
  3817  0E26                     	;# 
  3818  0E27                     	;# 
  3819  0E28                     	;# 
  3820  0E29                     	;# 
  3821  0E2A                     	;# 
  3822  0E2B                     	;# 
  3823  0E2C                     	;# 
  3824  0E2D                     	;# 
  3825  0E2E                     	;# 
  3826  0E2F                     	;# 
  3827  0E30                     	;# 
  3828  0E31                     	;# 
  3829  0E32                     	;# 
  3830  0E33                     	;# 
  3831  0E34                     	;# 
  3832  0E35                     	;# 
  3833  0E36                     	;# 
  3834  0E37                     	;# 
  3835  0E8F                     	;# 
  3836  0E90                     	;# 
  3837  0E91                     	;# 
  3838  0E92                     	;# 
  3839  0E93                     	;# 
  3840  0E94                     	;# 
  3841  0E95                     	;# 
  3842  0E96                     	;# 
  3843  0E97                     	;# 
  3844  0E9C                     	;# 
  3845  0E9D                     	;# 
  3846  0E9E                     	;# 
  3847  0EA1                     	;# 
  3848  0EA2                     	;# 
  3849  0EA3                     	;# 
  3850  0EA4                     	;# 
  3851  0EA5                     	;# 
  3852  0EA9                     	;# 
  3853  0EAA                     	;# 
  3854  0EAB                     	;# 
  3855  0EAC                     	;# 
  3856  0EB1                     	;# 
  3857  0EB2                     	;# 
  3858  0EB3                     	;# 
  3859  0EB8                     	;# 
  3860  0EB9                     	;# 
  3861  0EBA                     	;# 
  3862  0EBB                     	;# 
  3863  0EBC                     	;# 
  3864  0EBD                     	;# 
  3865  0EBE                     	;# 
  3866  0EC3                     	;# 
  3867  0EC5                     	;# 
  3868  0EC6                     	;# 
  3869  0EC7                     	;# 
  3870  0EC8                     	;# 
  3871  0EC9                     	;# 
  3872  0ECA                     	;# 
  3873  0ECB                     	;# 
  3874  0ECC                     	;# 
  3875  0F10                     	;# 
  3876  0F11                     	;# 
  3877  0F12                     	;# 
  3878  0F13                     	;# 
  3879  0F14                     	;# 
  3880  0F15                     	;# 
  3881  0F16                     	;# 
  3882  0F17                     	;# 
  3883  0F18                     	;# 
  3884  0F19                     	;# 
  3885  0F1A                     	;# 
  3886  0F1B                     	;# 
  3887  0F1C                     	;# 
  3888  0F1D                     	;# 
  3889  0F1E                     	;# 
  3890  0F1F                     	;# 
  3891  0F20                     	;# 
  3892  0F21                     	;# 
  3893  0F22                     	;# 
  3894  0F23                     	;# 
  3895  0F24                     	;# 
  3896  0F25                     	;# 
  3897  0F26                     	;# 
  3898  0F27                     	;# 
  3899  0F28                     	;# 
  3900  0F29                     	;# 
  3901  0F2A                     	;# 
  3902  0F2B                     	;# 
  3903  0F2C                     	;# 
  3904  0F2D                     	;# 
  3905  0F2E                     	;# 
  3906  0F2F                     	;# 
  3907  0F30                     	;# 
  3908  0F31                     	;# 
  3909  0F32                     	;# 
  3910  0F38                     	;# 
  3911  0F39                     	;# 
  3912  0F3A                     	;# 
  3913  0F3B                     	;# 
  3914  0F3C                     	;# 
  3915  0F3D                     	;# 
  3916  0F3E                     	;# 
  3917  0F3F                     	;# 
  3918  0F40                     	;# 
  3919  0F41                     	;# 
  3920  0F43                     	;# 
  3921  0F44                     	;# 
  3922  0F45                     	;# 
  3923  0F46                     	;# 
  3924  0F47                     	;# 
  3925  0F48                     	;# 
  3926  0F49                     	;# 
  3927  0F4A                     	;# 
  3928  0F4B                     	;# 
  3929  0F4C                     	;# 
  3930  0F4E                     	;# 
  3931  0F4F                     	;# 
  3932  0F50                     	;# 
  3933  0F51                     	;# 
  3934  0F52                     	;# 
  3935  0F53                     	;# 
  3936  0F54                     	;# 
  3937  0F55                     	;# 
  3938  0F56                     	;# 
  3939  0F57                     	;# 
  3940  0F59                     	;# 
  3941  0F5A                     	;# 
  3942  0F5B                     	;# 
  3943  0F5C                     	;# 
  3944  0F5D                     	;# 
  3945  0F61                     	;# 
  3946  0F62                     	;# 
  3947  0F64                     	;# 
  3948  0F65                     	;# 
  3949  0F66                     	;# 
  3950  0F67                     	;# 
  3951  0F68                     	;# 
  3952  0F69                     	;# 
  3953  0F6A                     	;# 
  3954  0F6B                     	;# 
  3955  0F6C                     	;# 
  3956  0F6D                     	;# 
  3957  0FE4                     	;# 
  3958  0FE5                     	;# 
  3959  0FE6                     	;# 
  3960  0FE7                     	;# 
  3961  0FE8                     	;# 
  3962  0FE9                     	;# 
  3963  0FEA                     	;# 
  3964  0FEB                     	;# 
  3965  0FED                     	;# 
  3966  0FEE                     	;# 
  3967  0FEF                     	;# 
  3968  0000                     	;# 
  3969  0001                     	;# 
  3970  0002                     	;# 
  3971  0003                     	;# 
  3972  0004                     	;# 
  3973  0005                     	;# 
  3974  0006                     	;# 
  3975  0007                     	;# 
  3976  0008                     	;# 
  3977  0009                     	;# 
  3978  000A                     	;# 
  3979  000B                     	;# 
  3980  000C                     	;# 
  3981  000D                     	;# 
  3982  000E                     	;# 
  3983  000F                     	;# 
  3984  0010                     	;# 
  3985  0011                     	;# 
  3986  0012                     	;# 
  3987  0013                     	;# 
  3988  0014                     	;# 
  3989  0015                     	;# 
  3990  0016                     	;# 
  3991  0017                     	;# 
  3992  0018                     	;# 
  3993  0019                     	;# 
  3994  001A                     	;# 
  3995  001C                     	;# 
  3996  001C                     	;# 
  3997  001D                     	;# 
  3998  001D                     	;# 
  3999  001E                     	;# 
  4000  001F                     	;# 
  4001  008C                     	;# 
  4002  008C                     	;# 
  4003  008D                     	;# 
  4004  008E                     	;# 
  4005  008E                     	;# 
  4006  008F                     	;# 
  4007  0090                     	;# 
  4008  0090                     	;# 
  4009  0091                     	;# 
  4010  0093                     	;# 
  4011  0094                     	;# 
  4012  0095                     	;# 
  4013  0096                     	;# 
  4014  0097                     	;# 
  4015  0098                     	;# 
  4016  0099                     	;# 
  4017  009A                     	;# 
  4018  009B                     	;# 
  4019  009C                     	;# 
  4020  009D                     	;# 
  4021  009E                     	;# 
  4022  010C                     	;# 
  4023  010D                     	;# 
  4024  010E                     	;# 
  4025  010E                     	;# 
  4026  010F                     	;# 
  4027  0110                     	;# 
  4028  0110                     	;# 
  4029  0111                     	;# 
  4030  0112                     	;# 
  4031  0112                     	;# 
  4032  0113                     	;# 
  4033  0114                     	;# 
  4034  0114                     	;# 
  4035  0115                     	;# 
  4036  0116                     	;# 
  4037  0116                     	;# 
  4038  0117                     	;# 
  4039  0119                     	;# 
  4040  0119                     	;# 
  4041  0119                     	;# 
  4042  011A                     	;# 
  4043  011A                     	;# 
  4044  011A                     	;# 
  4045  011B                     	;# 
  4046  011B                     	;# 
  4047  011B                     	;# 
  4048  011B                     	;# 
  4049  011B                     	;# 
  4050  011C                     	;# 
  4051  011C                     	;# 
  4052  011C                     	;# 
  4053  011D                     	;# 
  4054  011D                     	;# 
  4055  011D                     	;# 
  4056  011E                     	;# 
  4057  011E                     	;# 
  4058  011E                     	;# 
  4059  011F                     	;# 
  4060  011F                     	;# 
  4061  011F                     	;# 
  4062  011F                     	;# 
  4063  011F                     	;# 
  4064  018C                     	;# 
  4065  018D                     	;# 
  4066  018E                     	;# 
  4067  018F                     	;# 
  4068  0190                     	;# 
  4069  0191                     	;# 
  4070  0192                     	;# 
  4071  0196                     	;# 
  4072  0197                     	;# 
  4073  0198                     	;# 
  4074  0199                     	;# 
  4075  019A                     	;# 
  4076  019B                     	;# 
  4077  019C                     	;# 
  4078  020C                     	;# 
  4079  020C                     	;# 
  4080  020D                     	;# 
  4081  020E                     	;# 
  4082  020F                     	;# 
  4083  020F                     	;# 
  4084  0210                     	;# 
  4085  0210                     	;# 
  4086  0211                     	;# 
  4087  0211                     	;# 
  4088  0212                     	;# 
  4089  0212                     	;# 
  4090  0213                     	;# 
  4091  0214                     	;# 
  4092  0215                     	;# 
  4093  0215                     	;# 
  4094  0216                     	;# 
  4095  0216                     	;# 
  4096  0217                     	;# 
  4097  0217                     	;# 
  4098  0218                     	;# 
  4099  0218                     	;# 
  4100  0219                     	;# 
  4101  021A                     	;# 
  4102  021B                     	;# 
  4103  021B                     	;# 
  4104  021C                     	;# 
  4105  021C                     	;# 
  4106  021D                     	;# 
  4107  021D                     	;# 
  4108  021E                     	;# 
  4109  021F                     	;# 
  4110  028C                     	;# 
  4111  028C                     	;# 
  4112  028D                     	;# 
  4113  028D                     	;# 
  4114  028E                     	;# 
  4115  028F                     	;# 
  4116  0290                     	;# 
  4117  0290                     	;# 
  4118  0291                     	;# 
  4119  0292                     	;# 
  4120  0292                     	;# 
  4121  0293                     	;# 
  4122  0293                     	;# 
  4123  0294                     	;# 
  4124  0295                     	;# 
  4125  0296                     	;# 
  4126  0296                     	;# 
  4127  0297                     	;# 
  4128  0298                     	;# 
  4129  0298                     	;# 
  4130  0299                     	;# 
  4131  0299                     	;# 
  4132  029A                     	;# 
  4133  029B                     	;# 
  4134  029C                     	;# 
  4135  029C                     	;# 
  4136  029D                     	;# 
  4137  030C                     	;# 
  4138  030C                     	;# 
  4139  030D                     	;# 
  4140  030E                     	;# 
  4141  030F                     	;# 
  4142  0310                     	;# 
  4143  0310                     	;# 
  4144  0311                     	;# 
  4145  0312                     	;# 
  4146  0313                     	;# 
  4147  0314                     	;# 
  4148  0314                     	;# 
  4149  0315                     	;# 
  4150  0316                     	;# 
  4151  0317                     	;# 
  4152  0318                     	;# 
  4153  0318                     	;# 
  4154  0319                     	;# 
  4155  031A                     	;# 
  4156  031B                     	;# 
  4157  031C                     	;# 
  4158  031C                     	;# 
  4159  031D                     	;# 
  4160  031E                     	;# 
  4161  031F                     	;# 
  4162  038C                     	;# 
  4163  038C                     	;# 
  4164  038D                     	;# 
  4165  038E                     	;# 
  4166  0390                     	;# 
  4167  0390                     	;# 
  4168  0391                     	;# 
  4169  0392                     	;# 
  4170  040C                     	;# 
  4171  040D                     	;# 
  4172  040E                     	;# 
  4173  040F                     	;# 
  4174  0410                     	;# 
  4175  0411                     	;# 
  4176  0416                     	;# 
  4177  0416                     	;# 
  4178  0417                     	;# 
  4179  0418                     	;# 
  4180  0418                     	;# 
  4181  0419                     	;# 
  4182  041A                     	;# 
  4183  041A                     	;# 
  4184  041B                     	;# 
  4185  041C                     	;# 
  4186  041C                     	;# 
  4187  041D                     	;# 
  4188  041E                     	;# 
  4189  041F                     	;# 
  4190  048C                     	;# 
  4191  048C                     	;# 
  4192  048D                     	;# 
  4193  048E                     	;# 
  4194  048F                     	;# 
  4195  048F                     	;# 
  4196  0490                     	;# 
  4197  0491                     	;# 
  4198  0492                     	;# 
  4199  0492                     	;# 
  4200  0493                     	;# 
  4201  0494                     	;# 
  4202  0495                     	;# 
  4203  0495                     	;# 
  4204  0496                     	;# 
  4205  0497                     	;# 
  4206  0498                     	;# 
  4207  0499                     	;# 
  4208  049A                     	;# 
  4209  049B                     	;# 
  4210  049C                     	;# 
  4211  049D                     	;# 
  4212  050C                     	;# 
  4213  050C                     	;# 
  4214  050D                     	;# 
  4215  050E                     	;# 
  4216  050F                     	;# 
  4217  050F                     	;# 
  4218  0510                     	;# 
  4219  0511                     	;# 
  4220  0512                     	;# 
  4221  0512                     	;# 
  4222  0513                     	;# 
  4223  0514                     	;# 
  4224  0515                     	;# 
  4225  0515                     	;# 
  4226  0516                     	;# 
  4227  0517                     	;# 
  4228  0518                     	;# 
  4229  0519                     	;# 
  4230  051A                     	;# 
  4231  051B                     	;# 
  4232  051C                     	;# 
  4233  051D                     	;# 
  4234  058C                     	;# 
  4235  058C                     	;# 
  4236  058D                     	;# 
  4237  058E                     	;# 
  4238  058F                     	;# 
  4239  058F                     	;# 
  4240  0590                     	;# 
  4241  0591                     	;# 
  4242  0592                     	;# 
  4243  0593                     	;# 
  4244  060C                     	;# 
  4245  060D                     	;# 
  4246  060E                     	;# 
  4247  060F                     	;# 
  4248  0610                     	;# 
  4249  0611                     	;# 
  4250  0612                     	;# 
  4251  0613                     	;# 
  4252  0614                     	;# 
  4253  0616                     	;# 
  4254  0617                     	;# 
  4255  0618                     	;# 
  4256  0619                     	;# 
  4257  061A                     	;# 
  4258  061B                     	;# 
  4259  061C                     	;# 
  4260  061D                     	;# 
  4261  061E                     	;# 
  4262  068C                     	;# 
  4263  068D                     	;# 
  4264  068E                     	;# 
  4265  068F                     	;# 
  4266  0690                     	;# 
  4267  0691                     	;# 
  4268  0692                     	;# 
  4269  0693                     	;# 
  4270  0694                     	;# 
  4271  070C                     	;# 
  4272  070D                     	;# 
  4273  070E                     	;# 
  4274  070F                     	;# 
  4275  0710                     	;# 
  4276  0711                     	;# 
  4277  0712                     	;# 
  4278  0713                     	;# 
  4279  0714                     	;# 
  4280  0716                     	;# 
  4281  0717                     	;# 
  4282  0718                     	;# 
  4283  0719                     	;# 
  4284  071A                     	;# 
  4285  071B                     	;# 
  4286  071C                     	;# 
  4287  071D                     	;# 
  4288  071E                     	;# 
  4289  0796                     	;# 
  4290  0797                     	;# 
  4291  0798                     	;# 
  4292  0799                     	;# 
  4293  079A                     	;# 
  4294  079B                     	;# 
  4295  080C                     	;# 
  4296  080D                     	;# 
  4297  080E                     	;# 
  4298  080F                     	;# 
  4299  0810                     	;# 
  4300  0811                     	;# 
  4301  0812                     	;# 
  4302  0813                     	;# 
  4303  0814                     	;# 
  4304  081A                     	;# 
  4305  081B                     	;# 
  4306  081C                     	;# 
  4307  081D                     	;# 
  4308  081E                     	;# 
  4309  081F                     	;# 
  4310  088C                     	;# 
  4311  088D                     	;# 
  4312  088E                     	;# 
  4313  088F                     	;# 
  4314  0890                     	;# 
  4315  0891                     	;# 
  4316  0892                     	;# 
  4317  0893                     	;# 
  4318  0895                     	;# 
  4319  0896                     	;# 
  4320  0897                     	;# 
  4321  0898                     	;# 
  4322  0899                     	;# 
  4323  089A                     	;# 
  4324  089B                     	;# 
  4325  090C                     	;# 
  4326  090E                     	;# 
  4327  090F                     	;# 
  4328  091F                     	;# 
  4329  091F                     	;# 
  4330  098F                     	;# 
  4331  098F                     	;# 
  4332  0990                     	;# 
  4333  0991                     	;# 
  4334  0992                     	;# 
  4335  0993                     	;# 
  4336  0994                     	;# 
  4337  0995                     	;# 
  4338  0996                     	;# 
  4339  0997                     	;# 
  4340  0E0F                     	;# 
  4341  0E10                     	;# 
  4342  0E11                     	;# 
  4343  0E12                     	;# 
  4344  0E13                     	;# 
  4345  0E14                     	;# 
  4346  0E15                     	;# 
  4347  0E16                     	;# 
  4348  0E17                     	;# 
  4349  0E18                     	;# 
  4350  0E19                     	;# 
  4351  0E1A                     	;# 
  4352  0E1B                     	;# 
  4353  0E1C                     	;# 
  4354  0E1D                     	;# 
  4355  0E1E                     	;# 
  4356  0E1F                     	;# 
  4357  0E20                     	;# 
  4358  0E21                     	;# 
  4359  0E22                     	;# 
  4360  0E23                     	;# 
  4361  0E24                     	;# 
  4362  0E25                     	;# 
  4363  0E26                     	;# 
  4364  0E27                     	;# 
  4365  0E28                     	;# 
  4366  0E29                     	;# 
  4367  0E2A                     	;# 
  4368  0E2B                     	;# 
  4369  0E2C                     	;# 
  4370  0E2D                     	;# 
  4371  0E2E                     	;# 
  4372  0E2F                     	;# 
  4373  0E30                     	;# 
  4374  0E31                     	;# 
  4375  0E32                     	;# 
  4376  0E33                     	;# 
  4377  0E34                     	;# 
  4378  0E35                     	;# 
  4379  0E36                     	;# 
  4380  0E37                     	;# 
  4381  0E8F                     	;# 
  4382  0E90                     	;# 
  4383  0E91                     	;# 
  4384  0E92                     	;# 
  4385  0E93                     	;# 
  4386  0E94                     	;# 
  4387  0E95                     	;# 
  4388  0E96                     	;# 
  4389  0E97                     	;# 
  4390  0E9C                     	;# 
  4391  0E9D                     	;# 
  4392  0E9E                     	;# 
  4393  0EA1                     	;# 
  4394  0EA2                     	;# 
  4395  0EA3                     	;# 
  4396  0EA4                     	;# 
  4397  0EA5                     	;# 
  4398  0EA9                     	;# 
  4399  0EAA                     	;# 
  4400  0EAB                     	;# 
  4401  0EAC                     	;# 
  4402  0EB1                     	;# 
  4403  0EB2                     	;# 
  4404  0EB3                     	;# 
  4405  0EB8                     	;# 
  4406  0EB9                     	;# 
  4407  0EBA                     	;# 
  4408  0EBB                     	;# 
  4409  0EBC                     	;# 
  4410  0EBD                     	;# 
  4411  0EBE                     	;# 
  4412  0EC3                     	;# 
  4413  0EC5                     	;# 
  4414  0EC6                     	;# 
  4415  0EC7                     	;# 
  4416  0EC8                     	;# 
  4417  0EC9                     	;# 
  4418  0ECA                     	;# 
  4419  0ECB                     	;# 
  4420  0ECC                     	;# 
  4421  0F10                     	;# 
  4422  0F11                     	;# 
  4423  0F12                     	;# 
  4424  0F13                     	;# 
  4425  0F14                     	;# 
  4426  0F15                     	;# 
  4427  0F16                     	;# 
  4428  0F17                     	;# 
  4429  0F18                     	;# 
  4430  0F19                     	;# 
  4431  0F1A                     	;# 
  4432  0F1B                     	;# 
  4433  0F1C                     	;# 
  4434  0F1D                     	;# 
  4435  0F1E                     	;# 
  4436  0F1F                     	;# 
  4437  0F20                     	;# 
  4438  0F21                     	;# 
  4439  0F22                     	;# 
  4440  0F23                     	;# 
  4441  0F24                     	;# 
  4442  0F25                     	;# 
  4443  0F26                     	;# 
  4444  0F27                     	;# 
  4445  0F28                     	;# 
  4446  0F29                     	;# 
  4447  0F2A                     	;# 
  4448  0F2B                     	;# 
  4449  0F2C                     	;# 
  4450  0F2D                     	;# 
  4451  0F2E                     	;# 
  4452  0F2F                     	;# 
  4453  0F30                     	;# 
  4454  0F31                     	;# 
  4455  0F32                     	;# 
  4456  0F38                     	;# 
  4457  0F39                     	;# 
  4458  0F3A                     	;# 
  4459  0F3B                     	;# 
  4460  0F3C                     	;# 
  4461  0F3D                     	;# 
  4462  0F3E                     	;# 
  4463  0F3F                     	;# 
  4464  0F40                     	;# 
  4465  0F41                     	;# 
  4466  0F43                     	;# 
  4467  0F44                     	;# 
  4468  0F45                     	;# 
  4469  0F46                     	;# 
  4470  0F47                     	;# 
  4471  0F48                     	;# 
  4472  0F49                     	;# 
  4473  0F4A                     	;# 
  4474  0F4B                     	;# 
  4475  0F4C                     	;# 
  4476  0F4E                     	;# 
  4477  0F4F                     	;# 
  4478  0F50                     	;# 
  4479  0F51                     	;# 
  4480  0F52                     	;# 
  4481  0F53                     	;# 
  4482  0F54                     	;# 
  4483  0F55                     	;# 
  4484  0F56                     	;# 
  4485  0F57                     	;# 
  4486  0F59                     	;# 
  4487  0F5A                     	;# 
  4488  0F5B                     	;# 
  4489  0F5C                     	;# 
  4490  0F5D                     	;# 
  4491  0F61                     	;# 
  4492  0F62                     	;# 
  4493  0F64                     	;# 
  4494  0F65                     	;# 
  4495  0F66                     	;# 
  4496  0F67                     	;# 
  4497  0F68                     	;# 
  4498  0F69                     	;# 
  4499  0F6A                     	;# 
  4500  0F6B                     	;# 
  4501  0F6C                     	;# 
  4502  0F6D                     	;# 
  4503  0FE4                     	;# 
  4504  0FE5                     	;# 
  4505  0FE6                     	;# 
  4506  0FE7                     	;# 
  4507  0FE8                     	;# 
  4508  0FE9                     	;# 
  4509  0FEA                     	;# 
  4510  0FEB                     	;# 
  4511  0FED                     	;# 
  4512  0FEE                     	;# 
  4513  0FEF                     	;# 
  4514  0000                     	;# 
  4515  0001                     	;# 
  4516  0002                     	;# 
  4517  0003                     	;# 
  4518  0004                     	;# 
  4519  0005                     	;# 
  4520  0006                     	;# 
  4521  0007                     	;# 
  4522  0008                     	;# 
  4523  0009                     	;# 
  4524  000A                     	;# 
  4525  000B                     	;# 
  4526  000C                     	;# 
  4527  000D                     	;# 
  4528  000E                     	;# 
  4529  000F                     	;# 
  4530  0010                     	;# 
  4531  0011                     	;# 
  4532  0012                     	;# 
  4533  0013                     	;# 
  4534  0014                     	;# 
  4535  0015                     	;# 
  4536  0016                     	;# 
  4537  0017                     	;# 
  4538  0018                     	;# 
  4539  0019                     	;# 
  4540  001A                     	;# 
  4541  001C                     	;# 
  4542  001C                     	;# 
  4543  001D                     	;# 
  4544  001D                     	;# 
  4545  001E                     	;# 
  4546  001F                     	;# 
  4547  008C                     	;# 
  4548  008C                     	;# 
  4549  008D                     	;# 
  4550  008E                     	;# 
  4551  008E                     	;# 
  4552  008F                     	;# 
  4553  0090                     	;# 
  4554  0090                     	;# 
  4555  0091                     	;# 
  4556  0093                     	;# 
  4557  0094                     	;# 
  4558  0095                     	;# 
  4559  0096                     	;# 
  4560  0097                     	;# 
  4561  0098                     	;# 
  4562  0099                     	;# 
  4563  009A                     	;# 
  4564  009B                     	;# 
  4565  009C                     	;# 
  4566  009D                     	;# 
  4567  009E                     	;# 
  4568  010C                     	;# 
  4569  010D                     	;# 
  4570  010E                     	;# 
  4571  010E                     	;# 
  4572  010F                     	;# 
  4573  0110                     	;# 
  4574  0110                     	;# 
  4575  0111                     	;# 
  4576  0112                     	;# 
  4577  0112                     	;# 
  4578  0113                     	;# 
  4579  0114                     	;# 
  4580  0114                     	;# 
  4581  0115                     	;# 
  4582  0116                     	;# 
  4583  0116                     	;# 
  4584  0117                     	;# 
  4585  0119                     	;# 
  4586  0119                     	;# 
  4587  0119                     	;# 
  4588  011A                     	;# 
  4589  011A                     	;# 
  4590  011A                     	;# 
  4591  011B                     	;# 
  4592  011B                     	;# 
  4593  011B                     	;# 
  4594  011B                     	;# 
  4595  011B                     	;# 
  4596  011C                     	;# 
  4597  011C                     	;# 
  4598  011C                     	;# 
  4599  011D                     	;# 
  4600  011D                     	;# 
  4601  011D                     	;# 
  4602  011E                     	;# 
  4603  011E                     	;# 
  4604  011E                     	;# 
  4605  011F                     	;# 
  4606  011F                     	;# 
  4607  011F                     	;# 
  4608  011F                     	;# 
  4609  011F                     	;# 
  4610  018C                     	;# 
  4611  018D                     	;# 
  4612  018E                     	;# 
  4613  018F                     	;# 
  4614  0190                     	;# 
  4615  0191                     	;# 
  4616  0192                     	;# 
  4617  0196                     	;# 
  4618  0197                     	;# 
  4619  0198                     	;# 
  4620  0199                     	;# 
  4621  019A                     	;# 
  4622  019B                     	;# 
  4623  019C                     	;# 
  4624  020C                     	;# 
  4625  020C                     	;# 
  4626  020D                     	;# 
  4627  020E                     	;# 
  4628  020F                     	;# 
  4629  020F                     	;# 
  4630  0210                     	;# 
  4631  0210                     	;# 
  4632  0211                     	;# 
  4633  0211                     	;# 
  4634  0212                     	;# 
  4635  0212                     	;# 
  4636  0213                     	;# 
  4637  0214                     	;# 
  4638  0215                     	;# 
  4639  0215                     	;# 
  4640  0216                     	;# 
  4641  0216                     	;# 
  4642  0217                     	;# 
  4643  0217                     	;# 
  4644  0218                     	;# 
  4645  0218                     	;# 
  4646  0219                     	;# 
  4647  021A                     	;# 
  4648  021B                     	;# 
  4649  021B                     	;# 
  4650  021C                     	;# 
  4651  021C                     	;# 
  4652  021D                     	;# 
  4653  021D                     	;# 
  4654  021E                     	;# 
  4655  021F                     	;# 
  4656  028C                     	;# 
  4657  028C                     	;# 
  4658  028D                     	;# 
  4659  028D                     	;# 
  4660  028E                     	;# 
  4661  028F                     	;# 
  4662  0290                     	;# 
  4663  0290                     	;# 
  4664  0291                     	;# 
  4665  0292                     	;# 
  4666  0292                     	;# 
  4667  0293                     	;# 
  4668  0293                     	;# 
  4669  0294                     	;# 
  4670  0295                     	;# 
  4671  0296                     	;# 
  4672  0296                     	;# 
  4673  0297                     	;# 
  4674  0298                     	;# 
  4675  0298                     	;# 
  4676  0299                     	;# 
  4677  0299                     	;# 
  4678  029A                     	;# 
  4679  029B                     	;# 
  4680  029C                     	;# 
  4681  029C                     	;# 
  4682  029D                     	;# 
  4683  030C                     	;# 
  4684  030C                     	;# 
  4685  030D                     	;# 
  4686  030E                     	;# 
  4687  030F                     	;# 
  4688  0310                     	;# 
  4689  0310                     	;# 
  4690  0311                     	;# 
  4691  0312                     	;# 
  4692  0313                     	;# 
  4693  0314                     	;# 
  4694  0314                     	;# 
  4695  0315                     	;# 
  4696  0316                     	;# 
  4697  0317                     	;# 
  4698  0318                     	;# 
  4699  0318                     	;# 
  4700  0319                     	;# 
  4701  031A                     	;# 
  4702  031B                     	;# 
  4703  031C                     	;# 
  4704  031C                     	;# 
  4705  031D                     	;# 
  4706  031E                     	;# 
  4707  031F                     	;# 
  4708  038C                     	;# 
  4709  038C                     	;# 
  4710  038D                     	;# 
  4711  038E                     	;# 
  4712  0390                     	;# 
  4713  0390                     	;# 
  4714  0391                     	;# 
  4715  0392                     	;# 
  4716  040C                     	;# 
  4717  040D                     	;# 
  4718  040E                     	;# 
  4719  040F                     	;# 
  4720  0410                     	;# 
  4721  0411                     	;# 
  4722  0416                     	;# 
  4723  0416                     	;# 
  4724  0417                     	;# 
  4725  0418                     	;# 
  4726  0418                     	;# 
  4727  0419                     	;# 
  4728  041A                     	;# 
  4729  041A                     	;# 
  4730  041B                     	;# 
  4731  041C                     	;# 
  4732  041C                     	;# 
  4733  041D                     	;# 
  4734  041E                     	;# 
  4735  041F                     	;# 
  4736  048C                     	;# 
  4737  048C                     	;# 
  4738  048D                     	;# 
  4739  048E                     	;# 
  4740  048F                     	;# 
  4741  048F                     	;# 
  4742  0490                     	;# 
  4743  0491                     	;# 
  4744  0492                     	;# 
  4745  0492                     	;# 
  4746  0493                     	;# 
  4747  0494                     	;# 
  4748  0495                     	;# 
  4749  0495                     	;# 
  4750  0496                     	;# 
  4751  0497                     	;# 
  4752  0498                     	;# 
  4753  0499                     	;# 
  4754  049A                     	;# 
  4755  049B                     	;# 
  4756  049C                     	;# 
  4757  049D                     	;# 
  4758  050C                     	;# 
  4759  050C                     	;# 
  4760  050D                     	;# 
  4761  050E                     	;# 
  4762  050F                     	;# 
  4763  050F                     	;# 
  4764  0510                     	;# 
  4765  0511                     	;# 
  4766  0512                     	;# 
  4767  0512                     	;# 
  4768  0513                     	;# 
  4769  0514                     	;# 
  4770  0515                     	;# 
  4771  0515                     	;# 
  4772  0516                     	;# 
  4773  0517                     	;# 
  4774  0518                     	;# 
  4775  0519                     	;# 
  4776  051A                     	;# 
  4777  051B                     	;# 
  4778  051C                     	;# 
  4779  051D                     	;# 
  4780  058C                     	;# 
  4781  058C                     	;# 
  4782  058D                     	;# 
  4783  058E                     	;# 
  4784  058F                     	;# 
  4785  058F                     	;# 
  4786  0590                     	;# 
  4787  0591                     	;# 
  4788  0592                     	;# 
  4789  0593                     	;# 
  4790  060C                     	;# 
  4791  060D                     	;# 
  4792  060E                     	;# 
  4793  060F                     	;# 
  4794  0610                     	;# 
  4795  0611                     	;# 
  4796  0612                     	;# 
  4797  0613                     	;# 
  4798  0614                     	;# 
  4799  0616                     	;# 
  4800  0617                     	;# 
  4801  0618                     	;# 
  4802  0619                     	;# 
  4803  061A                     	;# 
  4804  061B                     	;# 
  4805  061C                     	;# 
  4806  061D                     	;# 
  4807  061E                     	;# 
  4808  068C                     	;# 
  4809  068D                     	;# 
  4810  068E                     	;# 
  4811  068F                     	;# 
  4812  0690                     	;# 
  4813  0691                     	;# 
  4814  0692                     	;# 
  4815  0693                     	;# 
  4816  0694                     	;# 
  4817  070C                     	;# 
  4818  070D                     	;# 
  4819  070E                     	;# 
  4820  070F                     	;# 
  4821  0710                     	;# 
  4822  0711                     	;# 
  4823  0712                     	;# 
  4824  0713                     	;# 
  4825  0714                     	;# 
  4826  0716                     	;# 
  4827  0717                     	;# 
  4828  0718                     	;# 
  4829  0719                     	;# 
  4830  071A                     	;# 
  4831  071B                     	;# 
  4832  071C                     	;# 
  4833  071D                     	;# 
  4834  071E                     	;# 
  4835  0796                     	;# 
  4836  0797                     	;# 
  4837  0798                     	;# 
  4838  0799                     	;# 
  4839  079A                     	;# 
  4840  079B                     	;# 
  4841  080C                     	;# 
  4842  080D                     	;# 
  4843  080E                     	;# 
  4844  080F                     	;# 
  4845  0810                     	;# 
  4846  0811                     	;# 
  4847  0812                     	;# 
  4848  0813                     	;# 
  4849  0814                     	;# 
  4850  081A                     	;# 
  4851  081B                     	;# 
  4852  081C                     	;# 
  4853  081D                     	;# 
  4854  081E                     	;# 
  4855  081F                     	;# 
  4856  088C                     	;# 
  4857  088D                     	;# 
  4858  088E                     	;# 
  4859  088F                     	;# 
  4860  0890                     	;# 
  4861  0891                     	;# 
  4862  0892                     	;# 
  4863  0893                     	;# 
  4864  0895                     	;# 
  4865  0896                     	;# 
  4866  0897                     	;# 
  4867  0898                     	;# 
  4868  0899                     	;# 
  4869  089A                     	;# 
  4870  089B                     	;# 
  4871  090C                     	;# 
  4872  090E                     	;# 
  4873  090F                     	;# 
  4874  091F                     	;# 
  4875  091F                     	;# 
  4876  098F                     	;# 
  4877  098F                     	;# 
  4878  0990                     	;# 
  4879  0991                     	;# 
  4880  0992                     	;# 
  4881  0993                     	;# 
  4882  0994                     	;# 
  4883  0995                     	;# 
  4884  0996                     	;# 
  4885  0997                     	;# 
  4886  0E0F                     	;# 
  4887  0E10                     	;# 
  4888  0E11                     	;# 
  4889  0E12                     	;# 
  4890  0E13                     	;# 
  4891  0E14                     	;# 
  4892  0E15                     	;# 
  4893  0E16                     	;# 
  4894  0E17                     	;# 
  4895  0E18                     	;# 
  4896  0E19                     	;# 
  4897  0E1A                     	;# 
  4898  0E1B                     	;# 
  4899  0E1C                     	;# 
  4900  0E1D                     	;# 
  4901  0E1E                     	;# 
  4902  0E1F                     	;# 
  4903  0E20                     	;# 
  4904  0E21                     	;# 
  4905  0E22                     	;# 
  4906  0E23                     	;# 
  4907  0E24                     	;# 
  4908  0E25                     	;# 
  4909  0E26                     	;# 
  4910  0E27                     	;# 
  4911  0E28                     	;# 
  4912  0E29                     	;# 
  4913  0E2A                     	;# 
  4914  0E2B                     	;# 
  4915  0E2C                     	;# 
  4916  0E2D                     	;# 
  4917  0E2E                     	;# 
  4918  0E2F                     	;# 
  4919  0E30                     	;# 
  4920  0E31                     	;# 
  4921  0E32                     	;# 
  4922  0E33                     	;# 
  4923  0E34                     	;# 
  4924  0E35                     	;# 
  4925  0E36                     	;# 
  4926  0E37                     	;# 
  4927  0E8F                     	;# 
  4928  0E90                     	;# 
  4929  0E91                     	;# 
  4930  0E92                     	;# 
  4931  0E93                     	;# 
  4932  0E94                     	;# 
  4933  0E95                     	;# 
  4934  0E96                     	;# 
  4935  0E97                     	;# 
  4936  0E9C                     	;# 
  4937  0E9D                     	;# 
  4938  0E9E                     	;# 
  4939  0EA1                     	;# 
  4940  0EA2                     	;# 
  4941  0EA3                     	;# 
  4942  0EA4                     	;# 
  4943  0EA5                     	;# 
  4944  0EA9                     	;# 
  4945  0EAA                     	;# 
  4946  0EAB                     	;# 
  4947  0EAC                     	;# 
  4948  0EB1                     	;# 
  4949  0EB2                     	;# 
  4950  0EB3                     	;# 
  4951  0EB8                     	;# 
  4952  0EB9                     	;# 
  4953  0EBA                     	;# 
  4954  0EBB                     	;# 
  4955  0EBC                     	;# 
  4956  0EBD                     	;# 
  4957  0EBE                     	;# 
  4958  0EC3                     	;# 
  4959  0EC5                     	;# 
  4960  0EC6                     	;# 
  4961  0EC7                     	;# 
  4962  0EC8                     	;# 
  4963  0EC9                     	;# 
  4964  0ECA                     	;# 
  4965  0ECB                     	;# 
  4966  0ECC                     	;# 
  4967  0F10                     	;# 
  4968  0F11                     	;# 
  4969  0F12                     	;# 
  4970  0F13                     	;# 
  4971  0F14                     	;# 
  4972  0F15                     	;# 
  4973  0F16                     	;# 
  4974  0F17                     	;# 
  4975  0F18                     	;# 
  4976  0F19                     	;# 
  4977  0F1A                     	;# 
  4978  0F1B                     	;# 
  4979  0F1C                     	;# 
  4980  0F1D                     	;# 
  4981  0F1E                     	;# 
  4982  0F1F                     	;# 
  4983  0F20                     	;# 
  4984  0F21                     	;# 
  4985  0F22                     	;# 
  4986  0F23                     	;# 
  4987  0F24                     	;# 
  4988  0F25                     	;# 
  4989  0F26                     	;# 
  4990  0F27                     	;# 
  4991  0F28                     	;# 
  4992  0F29                     	;# 
  4993  0F2A                     	;# 
  4994  0F2B                     	;# 
  4995  0F2C                     	;# 
  4996  0F2D                     	;# 
  4997  0F2E                     	;# 
  4998  0F2F                     	;# 
  4999  0F30                     	;# 
  5000  0F31                     	;# 
  5001  0F32                     	;# 
  5002  0F38                     	;# 
  5003  0F39                     	;# 
  5004  0F3A                     	;# 
  5005  0F3B                     	;# 
  5006  0F3C                     	;# 
  5007  0F3D                     	;# 
  5008  0F3E                     	;# 
  5009  0F3F                     	;# 
  5010  0F40                     	;# 
  5011  0F41                     	;# 
  5012  0F43                     	;# 
  5013  0F44                     	;# 
  5014  0F45                     	;# 
  5015  0F46                     	;# 
  5016  0F47                     	;# 
  5017  0F48                     	;# 
  5018  0F49                     	;# 
  5019  0F4A                     	;# 
  5020  0F4B                     	;# 
  5021  0F4C                     	;# 
  5022  0F4E                     	;# 
  5023  0F4F                     	;# 
  5024  0F50                     	;# 
  5025  0F51                     	;# 
  5026  0F52                     	;# 
  5027  0F53                     	;# 
  5028  0F54                     	;# 
  5029  0F55                     	;# 
  5030  0F56                     	;# 
  5031  0F57                     	;# 
  5032  0F59                     	;# 
  5033  0F5A                     	;# 
  5034  0F5B                     	;# 
  5035  0F5C                     	;# 
  5036  0F5D                     	;# 
  5037  0F61                     	;# 
  5038  0F62                     	;# 
  5039  0F64                     	;# 
  5040  0F65                     	;# 
  5041  0F66                     	;# 
  5042  0F67                     	;# 
  5043  0F68                     	;# 
  5044  0F69                     	;# 
  5045  0F6A                     	;# 
  5046  0F6B                     	;# 
  5047  0F6C                     	;# 
  5048  0F6D                     	;# 
  5049  0FE4                     	;# 
  5050  0FE5                     	;# 
  5051  0FE6                     	;# 
  5052  0FE7                     	;# 
  5053  0FE8                     	;# 
  5054  0FE9                     	;# 
  5055  0FEA                     	;# 
  5056  0FEB                     	;# 
  5057  0FED                     	;# 
  5058  0FEE                     	;# 
  5059  0FEF                     	;# 
  5060  0000                     	;# 
  5061  0001                     	;# 
  5062  0002                     	;# 
  5063  0003                     	;# 
  5064  0004                     	;# 
  5065  0005                     	;# 
  5066  0006                     	;# 
  5067  0007                     	;# 
  5068  0008                     	;# 
  5069  0009                     	;# 
  5070  000A                     	;# 
  5071  000B                     	;# 
  5072  000C                     	;# 
  5073  000D                     	;# 
  5074  000E                     	;# 
  5075  000F                     	;# 
  5076  0010                     	;# 
  5077  0011                     	;# 
  5078  0012                     	;# 
  5079  0013                     	;# 
  5080  0014                     	;# 
  5081  0015                     	;# 
  5082  0016                     	;# 
  5083  0017                     	;# 
  5084  0018                     	;# 
  5085  0019                     	;# 
  5086  001A                     	;# 
  5087  001C                     	;# 
  5088  001C                     	;# 
  5089  001D                     	;# 
  5090  001D                     	;# 
  5091  001E                     	;# 
  5092  001F                     	;# 
  5093  008C                     	;# 
  5094  008C                     	;# 
  5095  008D                     	;# 
  5096  008E                     	;# 
  5097  008E                     	;# 
  5098  008F                     	;# 
  5099  0090                     	;# 
  5100  0090                     	;# 
  5101  0091                     	;# 
  5102  0093                     	;# 
  5103  0094                     	;# 
  5104  0095                     	;# 
  5105  0096                     	;# 
  5106  0097                     	;# 
  5107  0098                     	;# 
  5108  0099                     	;# 
  5109  009A                     	;# 
  5110  009B                     	;# 
  5111  009C                     	;# 
  5112  009D                     	;# 
  5113  009E                     	;# 
  5114  010C                     	;# 
  5115  010D                     	;# 
  5116  010E                     	;# 
  5117  010E                     	;# 
  5118  010F                     	;# 
  5119  0110                     	;# 
  5120  0110                     	;# 
  5121  0111                     	;# 
  5122  0112                     	;# 
  5123  0112                     	;# 
  5124  0113                     	;# 
  5125  0114                     	;# 
  5126  0114                     	;# 
  5127  0115                     	;# 
  5128  0116                     	;# 
  5129  0116                     	;# 
  5130  0117                     	;# 
  5131  0119                     	;# 
  5132  0119                     	;# 
  5133  0119                     	;# 
  5134  011A                     	;# 
  5135  011A                     	;# 
  5136  011A                     	;# 
  5137  011B                     	;# 
  5138  011B                     	;# 
  5139  011B                     	;# 
  5140  011B                     	;# 
  5141  011B                     	;# 
  5142  011C                     	;# 
  5143  011C                     	;# 
  5144  011C                     	;# 
  5145  011D                     	;# 
  5146  011D                     	;# 
  5147  011D                     	;# 
  5148  011E                     	;# 
  5149  011E                     	;# 
  5150  011E                     	;# 
  5151  011F                     	;# 
  5152  011F                     	;# 
  5153  011F                     	;# 
  5154  011F                     	;# 
  5155  011F                     	;# 
  5156  018C                     	;# 
  5157  018D                     	;# 
  5158  018E                     	;# 
  5159  018F                     	;# 
  5160  0190                     	;# 
  5161  0191                     	;# 
  5162  0192                     	;# 
  5163  0196                     	;# 
  5164  0197                     	;# 
  5165  0198                     	;# 
  5166  0199                     	;# 
  5167  019A                     	;# 
  5168  019B                     	;# 
  5169  019C                     	;# 
  5170  020C                     	;# 
  5171  020C                     	;# 
  5172  020D                     	;# 
  5173  020E                     	;# 
  5174  020F                     	;# 
  5175  020F                     	;# 
  5176  0210                     	;# 
  5177  0210                     	;# 
  5178  0211                     	;# 
  5179  0211                     	;# 
  5180  0212                     	;# 
  5181  0212                     	;# 
  5182  0213                     	;# 
  5183  0214                     	;# 
  5184  0215                     	;# 
  5185  0215                     	;# 
  5186  0216                     	;# 
  5187  0216                     	;# 
  5188  0217                     	;# 
  5189  0217                     	;# 
  5190  0218                     	;# 
  5191  0218                     	;# 
  5192  0219                     	;# 
  5193  021A                     	;# 
  5194  021B                     	;# 
  5195  021B                     	;# 
  5196  021C                     	;# 
  5197  021C                     	;# 
  5198  021D                     	;# 
  5199  021D                     	;# 
  5200  021E                     	;# 
  5201  021F                     	;# 
  5202  028C                     	;# 
  5203  028C                     	;# 
  5204  028D                     	;# 
  5205  028D                     	;# 
  5206  028E                     	;# 
  5207  028F                     	;# 
  5208  0290                     	;# 
  5209  0290                     	;# 
  5210  0291                     	;# 
  5211  0292                     	;# 
  5212  0292                     	;# 
  5213  0293                     	;# 
  5214  0293                     	;# 
  5215  0294                     	;# 
  5216  0295                     	;# 
  5217  0296                     	;# 
  5218  0296                     	;# 
  5219  0297                     	;# 
  5220  0298                     	;# 
  5221  0298                     	;# 
  5222  0299                     	;# 
  5223  0299                     	;# 
  5224  029A                     	;# 
  5225  029B                     	;# 
  5226  029C                     	;# 
  5227  029C                     	;# 
  5228  029D                     	;# 
  5229  030C                     	;# 
  5230  030C                     	;# 
  5231  030D                     	;# 
  5232  030E                     	;# 
  5233  030F                     	;# 
  5234  0310                     	;# 
  5235  0310                     	;# 
  5236  0311                     	;# 
  5237  0312                     	;# 
  5238  0313                     	;# 
  5239  0314                     	;# 
  5240  0314                     	;# 
  5241  0315                     	;# 
  5242  0316                     	;# 
  5243  0317                     	;# 
  5244  0318                     	;# 
  5245  0318                     	;# 
  5246  0319                     	;# 
  5247  031A                     	;# 
  5248  031B                     	;# 
  5249  031C                     	;# 
  5250  031C                     	;# 
  5251  031D                     	;# 
  5252  031E                     	;# 
  5253  031F                     	;# 
  5254  038C                     	;# 
  5255  038C                     	;# 
  5256  038D                     	;# 
  5257  038E                     	;# 
  5258  0390                     	;# 
  5259  0390                     	;# 
  5260  0391                     	;# 
  5261  0392                     	;# 
  5262  040C                     	;# 
  5263  040D                     	;# 
  5264  040E                     	;# 
  5265  040F                     	;# 
  5266  0410                     	;# 
  5267  0411                     	;# 
  5268  0416                     	;# 
  5269  0416                     	;# 
  5270  0417                     	;# 
  5271  0418                     	;# 
  5272  0418                     	;# 
  5273  0419                     	;# 
  5274  041A                     	;# 
  5275  041A                     	;# 
  5276  041B                     	;# 
  5277  041C                     	;# 
  5278  041C                     	;# 
  5279  041D                     	;# 
  5280  041E                     	;# 
  5281  041F                     	;# 
  5282  048C                     	;# 
  5283  048C                     	;# 
  5284  048D                     	;# 
  5285  048E                     	;# 
  5286  048F                     	;# 
  5287  048F                     	;# 
  5288  0490                     	;# 
  5289  0491                     	;# 
  5290  0492                     	;# 
  5291  0492                     	;# 
  5292  0493                     	;# 
  5293  0494                     	;# 
  5294  0495                     	;# 
  5295  0495                     	;# 
  5296  0496                     	;# 
  5297  0497                     	;# 
  5298  0498                     	;# 
  5299  0499                     	;# 
  5300  049A                     	;# 
  5301  049B                     	;# 
  5302  049C                     	;# 
  5303  049D                     	;# 
  5304  050C                     	;# 
  5305  050C                     	;# 
  5306  050D                     	;# 
  5307  050E                     	;# 
  5308  050F                     	;# 
  5309  050F                     	;# 
  5310  0510                     	;# 
  5311  0511                     	;# 
  5312  0512                     	;# 
  5313  0512                     	;# 
  5314  0513                     	;# 
  5315  0514                     	;# 
  5316  0515                     	;# 
  5317  0515                     	;# 
  5318  0516                     	;# 
  5319  0517                     	;# 
  5320  0518                     	;# 
  5321  0519                     	;# 
  5322  051A                     	;# 
  5323  051B                     	;# 
  5324  051C                     	;# 
  5325  051D                     	;# 
  5326  058C                     	;# 
  5327  058C                     	;# 
  5328  058D                     	;# 
  5329  058E                     	;# 
  5330  058F                     	;# 
  5331  058F                     	;# 
  5332  0590                     	;# 
  5333  0591                     	;# 
  5334  0592                     	;# 
  5335  0593                     	;# 
  5336  060C                     	;# 
  5337  060D                     	;# 
  5338  060E                     	;# 
  5339  060F                     	;# 
  5340  0610                     	;# 
  5341  0611                     	;# 
  5342  0612                     	;# 
  5343  0613                     	;# 
  5344  0614                     	;# 
  5345  0616                     	;# 
  5346  0617                     	;# 
  5347  0618                     	;# 
  5348  0619                     	;# 
  5349  061A                     	;# 
  5350  061B                     	;# 
  5351  061C                     	;# 
  5352  061D                     	;# 
  5353  061E                     	;# 
  5354  068C                     	;# 
  5355  068D                     	;# 
  5356  068E                     	;# 
  5357  068F                     	;# 
  5358  0690                     	;# 
  5359  0691                     	;# 
  5360  0692                     	;# 
  5361  0693                     	;# 
  5362  0694                     	;# 
  5363  070C                     	;# 
  5364  070D                     	;# 
  5365  070E                     	;# 
  5366  070F                     	;# 
  5367  0710                     	;# 
  5368  0711                     	;# 
  5369  0712                     	;# 
  5370  0713                     	;# 
  5371  0714                     	;# 
  5372  0716                     	;# 
  5373  0717                     	;# 
  5374  0718                     	;# 
  5375  0719                     	;# 
  5376  071A                     	;# 
  5377  071B                     	;# 
  5378  071C                     	;# 
  5379  071D                     	;# 
  5380  071E                     	;# 
  5381  0796                     	;# 
  5382  0797                     	;# 
  5383  0798                     	;# 
  5384  0799                     	;# 
  5385  079A                     	;# 
  5386  079B                     	;# 
  5387  080C                     	;# 
  5388  080D                     	;# 
  5389  080E                     	;# 
  5390  080F                     	;# 
  5391  0810                     	;# 
  5392  0811                     	;# 
  5393  0812                     	;# 
  5394  0813                     	;# 
  5395  0814                     	;# 
  5396  081A                     	;# 
  5397  081B                     	;# 
  5398  081C                     	;# 
  5399  081D                     	;# 
  5400  081E                     	;# 
  5401  081F                     	;# 
  5402  088C                     	;# 
  5403  088D                     	;# 
  5404  088E                     	;# 
  5405  088F                     	;# 
  5406  0890                     	;# 
  5407  0891                     	;# 
  5408  0892                     	;# 
  5409  0893                     	;# 
  5410  0895                     	;# 
  5411  0896                     	;# 
  5412  0897                     	;# 
  5413  0898                     	;# 
  5414  0899                     	;# 
  5415  089A                     	;# 
  5416  089B                     	;# 
  5417  090C                     	;# 
  5418  090E                     	;# 
  5419  090F                     	;# 
  5420  091F                     	;# 
  5421  091F                     	;# 
  5422  098F                     	;# 
  5423  098F                     	;# 
  5424  0990                     	;# 
  5425  0991                     	;# 
  5426  0992                     	;# 
  5427  0993                     	;# 
  5428  0994                     	;# 
  5429  0995                     	;# 
  5430  0996                     	;# 
  5431  0997                     	;# 
  5432  0E0F                     	;# 
  5433  0E10                     	;# 
  5434  0E11                     	;# 
  5435  0E12                     	;# 
  5436  0E13                     	;# 
  5437  0E14                     	;# 
  5438  0E15                     	;# 
  5439  0E16                     	;# 
  5440  0E17                     	;# 
  5441  0E18                     	;# 
  5442  0E19                     	;# 
  5443  0E1A                     	;# 
  5444  0E1B                     	;# 
  5445  0E1C                     	;# 
  5446  0E1D                     	;# 
  5447  0E1E                     	;# 
  5448  0E1F                     	;# 
  5449  0E20                     	;# 
  5450  0E21                     	;# 
  5451  0E22                     	;# 
  5452  0E23                     	;# 
  5453  0E24                     	;# 
  5454  0E25                     	;# 
  5455  0E26                     	;# 
  5456  0E27                     	;# 
  5457  0E28                     	;# 
  5458  0E29                     	;# 
  5459  0E2A                     	;# 
  5460  0E2B                     	;# 
  5461  0E2C                     	;# 
  5462  0E2D                     	;# 
  5463  0E2E                     	;# 
  5464  0E2F                     	;# 
  5465  0E30                     	;# 
  5466  0E31                     	;# 
  5467  0E32                     	;# 
  5468  0E33                     	;# 
  5469  0E34                     	;# 
  5470  0E35                     	;# 
  5471  0E36                     	;# 
  5472  0E37                     	;# 
  5473  0E8F                     	;# 
  5474  0E90                     	;# 
  5475  0E91                     	;# 
  5476  0E92                     	;# 
  5477  0E93                     	;# 
  5478  0E94                     	;# 
  5479  0E95                     	;# 
  5480  0E96                     	;# 
  5481  0E97                     	;# 
  5482  0E9C                     	;# 
  5483  0E9D                     	;# 
  5484  0E9E                     	;# 
  5485  0EA1                     	;# 
  5486  0EA2                     	;# 
  5487  0EA3                     	;# 
  5488  0EA4                     	;# 
  5489  0EA5                     	;# 
  5490  0EA9                     	;# 
  5491  0EAA                     	;# 
  5492  0EAB                     	;# 
  5493  0EAC                     	;# 
  5494  0EB1                     	;# 
  5495  0EB2                     	;# 
  5496  0EB3                     	;# 
  5497  0EB8                     	;# 
  5498  0EB9                     	;# 
  5499  0EBA                     	;# 
  5500  0EBB                     	;# 
  5501  0EBC                     	;# 
  5502  0EBD                     	;# 
  5503  0EBE                     	;# 
  5504  0EC3                     	;# 
  5505  0EC5                     	;# 
  5506  0EC6                     	;# 
  5507  0EC7                     	;# 
  5508  0EC8                     	;# 
  5509  0EC9                     	;# 
  5510  0ECA                     	;# 
  5511  0ECB                     	;# 
  5512  0ECC                     	;# 
  5513  0F10                     	;# 
  5514  0F11                     	;# 
  5515  0F12                     	;# 
  5516  0F13                     	;# 
  5517  0F14                     	;# 
  5518  0F15                     	;# 
  5519  0F16                     	;# 
  5520  0F17                     	;# 
  5521  0F18                     	;# 
  5522  0F19                     	;# 
  5523  0F1A                     	;# 
  5524  0F1B                     	;# 
  5525  0F1C                     	;# 
  5526  0F1D                     	;# 
  5527  0F1E                     	;# 
  5528  0F1F                     	;# 
  5529  0F20                     	;# 
  5530  0F21                     	;# 
  5531  0F22                     	;# 
  5532  0F23                     	;# 
  5533  0F24                     	;# 
  5534  0F25                     	;# 
  5535  0F26                     	;# 
  5536  0F27                     	;# 
  5537  0F28                     	;# 
  5538  0F29                     	;# 
  5539  0F2A                     	;# 
  5540  0F2B                     	;# 
  5541  0F2C                     	;# 
  5542  0F2D                     	;# 
  5543  0F2E                     	;# 
  5544  0F2F                     	;# 
  5545  0F30                     	;# 
  5546  0F31                     	;# 
  5547  0F32                     	;# 
  5548  0F38                     	;# 
  5549  0F39                     	;# 
  5550  0F3A                     	;# 
  5551  0F3B                     	;# 
  5552  0F3C                     	;# 
  5553  0F3D                     	;# 
  5554  0F3E                     	;# 
  5555  0F3F                     	;# 
  5556  0F40                     	;# 
  5557  0F41                     	;# 
  5558  0F43                     	;# 
  5559  0F44                     	;# 
  5560  0F45                     	;# 
  5561  0F46                     	;# 
  5562  0F47                     	;# 
  5563  0F48                     	;# 
  5564  0F49                     	;# 
  5565  0F4A                     	;# 
  5566  0F4B                     	;# 
  5567  0F4C                     	;# 
  5568  0F4E                     	;# 
  5569  0F4F                     	;# 
  5570  0F50                     	;# 
  5571  0F51                     	;# 
  5572  0F52                     	;# 
  5573  0F53                     	;# 
  5574  0F54                     	;# 
  5575  0F55                     	;# 
  5576  0F56                     	;# 
  5577  0F57                     	;# 
  5578  0F59                     	;# 
  5579  0F5A                     	;# 
  5580  0F5B                     	;# 
  5581  0F5C                     	;# 
  5582  0F5D                     	;# 
  5583  0F61                     	;# 
  5584  0F62                     	;# 
  5585  0F64                     	;# 
  5586  0F65                     	;# 
  5587  0F66                     	;# 
  5588  0F67                     	;# 
  5589  0F68                     	;# 
  5590  0F69                     	;# 
  5591  0F6A                     	;# 
  5592  0F6B                     	;# 
  5593  0F6C                     	;# 
  5594  0F6D                     	;# 
  5595  0FE4                     	;# 
  5596  0FE5                     	;# 
  5597  0FE6                     	;# 
  5598  0FE7                     	;# 
  5599  0FE8                     	;# 
  5600  0FE9                     	;# 
  5601  0FEA                     	;# 
  5602  0FEB                     	;# 
  5603  0FED                     	;# 
  5604  0FEE                     	;# 
  5605  0FEF                     	;# 
  5606  0000                     	;# 
  5607  0001                     	;# 
  5608  0002                     	;# 
  5609  0003                     	;# 
  5610  0004                     	;# 
  5611  0005                     	;# 
  5612  0006                     	;# 
  5613  0007                     	;# 
  5614  0008                     	;# 
  5615  0009                     	;# 
  5616  000A                     	;# 
  5617  000B                     	;# 
  5618  000C                     	;# 
  5619  000D                     	;# 
  5620  000E                     	;# 
  5621  000F                     	;# 
  5622  0010                     	;# 
  5623  0011                     	;# 
  5624  0012                     	;# 
  5625  0013                     	;# 
  5626  0014                     	;# 
  5627  0015                     	;# 
  5628  0016                     	;# 
  5629  0017                     	;# 
  5630  0018                     	;# 
  5631  0019                     	;# 
  5632  001A                     	;# 
  5633  001C                     	;# 
  5634  001C                     	;# 
  5635  001D                     	;# 
  5636  001D                     	;# 
  5637  001E                     	;# 
  5638  001F                     	;# 
  5639  008C                     	;# 
  5640  008C                     	;# 
  5641  008D                     	;# 
  5642  008E                     	;# 
  5643  008E                     	;# 
  5644  008F                     	;# 
  5645  0090                     	;# 
  5646  0090                     	;# 
  5647  0091                     	;# 
  5648  0093                     	;# 
  5649  0094                     	;# 
  5650  0095                     	;# 
  5651  0096                     	;# 
  5652  0097                     	;# 
  5653  0098                     	;# 
  5654  0099                     	;# 
  5655  009A                     	;# 
  5656  009B                     	;# 
  5657  009C                     	;# 
  5658  009D                     	;# 
  5659  009E                     	;# 
  5660  010C                     	;# 
  5661  010D                     	;# 
  5662  010E                     	;# 
  5663  010E                     	;# 
  5664  010F                     	;# 
  5665  0110                     	;# 
  5666  0110                     	;# 
  5667  0111                     	;# 
  5668  0112                     	;# 
  5669  0112                     	;# 
  5670  0113                     	;# 
  5671  0114                     	;# 
  5672  0114                     	;# 
  5673  0115                     	;# 
  5674  0116                     	;# 
  5675  0116                     	;# 
  5676  0117                     	;# 
  5677  0119                     	;# 
  5678  0119                     	;# 
  5679  0119                     	;# 
  5680  011A                     	;# 
  5681  011A                     	;# 
  5682  011A                     	;# 
  5683  011B                     	;# 
  5684  011B                     	;# 
  5685  011B                     	;# 
  5686  011B                     	;# 
  5687  011B                     	;# 
  5688  011C                     	;# 
  5689  011C                     	;# 
  5690  011C                     	;# 
  5691  011D                     	;# 
  5692  011D                     	;# 
  5693  011D                     	;# 
  5694  011E                     	;# 
  5695  011E                     	;# 
  5696  011E                     	;# 
  5697  011F                     	;# 
  5698  011F                     	;# 
  5699  011F                     	;# 
  5700  011F                     	;# 
  5701  011F                     	;# 
  5702  018C                     	;# 
  5703  018D                     	;# 
  5704  018E                     	;# 
  5705  018F                     	;# 
  5706  0190                     	;# 
  5707  0191                     	;# 
  5708  0192                     	;# 
  5709  0196                     	;# 
  5710  0197                     	;# 
  5711  0198                     	;# 
  5712  0199                     	;# 
  5713  019A                     	;# 
  5714  019B                     	;# 
  5715  019C                     	;# 
  5716  020C                     	;# 
  5717  020C                     	;# 
  5718  020D                     	;# 
  5719  020E                     	;# 
  5720  020F                     	;# 
  5721  020F                     	;# 
  5722  0210                     	;# 
  5723  0210                     	;# 
  5724  0211                     	;# 
  5725  0211                     	;# 
  5726  0212                     	;# 
  5727  0212                     	;# 
  5728  0213                     	;# 
  5729  0214                     	;# 
  5730  0215                     	;# 
  5731  0215                     	;# 
  5732  0216                     	;# 
  5733  0216                     	;# 
  5734  0217                     	;# 
  5735  0217                     	;# 
  5736  0218                     	;# 
  5737  0218                     	;# 
  5738  0219                     	;# 
  5739  021A                     	;# 
  5740  021B                     	;# 
  5741  021B                     	;# 
  5742  021C                     	;# 
  5743  021C                     	;# 
  5744  021D                     	;# 
  5745  021D                     	;# 
  5746  021E                     	;# 
  5747  021F                     	;# 
  5748  028C                     	;# 
  5749  028C                     	;# 
  5750  028D                     	;# 
  5751  028D                     	;# 
  5752  028E                     	;# 
  5753  028F                     	;# 
  5754  0290                     	;# 
  5755  0290                     	;# 
  5756  0291                     	;# 
  5757  0292                     	;# 
  5758  0292                     	;# 
  5759  0293                     	;# 
  5760  0293                     	;# 
  5761  0294                     	;# 
  5762  0295                     	;# 
  5763  0296                     	;# 
  5764  0296                     	;# 
  5765  0297                     	;# 
  5766  0298                     	;# 
  5767  0298                     	;# 
  5768  0299                     	;# 
  5769  0299                     	;# 
  5770  029A                     	;# 
  5771  029B                     	;# 
  5772  029C                     	;# 
  5773  029C                     	;# 
  5774  029D                     	;# 
  5775  030C                     	;# 
  5776  030C                     	;# 
  5777  030D                     	;# 
  5778  030E                     	;# 
  5779  030F                     	;# 
  5780  0310                     	;# 
  5781  0310                     	;# 
  5782  0311                     	;# 
  5783  0312                     	;# 
  5784  0313                     	;# 
  5785  0314                     	;# 
  5786  0314                     	;# 
  5787  0315                     	;# 
  5788  0316                     	;# 
  5789  0317                     	;# 
  5790  0318                     	;# 
  5791  0318                     	;# 
  5792  0319                     	;# 
  5793  031A                     	;# 
  5794  031B                     	;# 
  5795  031C                     	;# 
  5796  031C                     	;# 
  5797  031D                     	;# 
  5798  031E                     	;# 
  5799  031F                     	;# 
  5800  038C                     	;# 
  5801  038C                     	;# 
  5802  038D                     	;# 
  5803  038E                     	;# 
  5804  0390                     	;# 
  5805  0390                     	;# 
  5806  0391                     	;# 
  5807  0392                     	;# 
  5808  040C                     	;# 
  5809  040D                     	;# 
  5810  040E                     	;# 
  5811  040F                     	;# 
  5812  0410                     	;# 
  5813  0411                     	;# 
  5814  0416                     	;# 
  5815  0416                     	;# 
  5816  0417                     	;# 
  5817  0418                     	;# 
  5818  0418                     	;# 
  5819  0419                     	;# 
  5820  041A                     	;# 
  5821  041A                     	;# 
  5822  041B                     	;# 
  5823  041C                     	;# 
  5824  041C                     	;# 
  5825  041D                     	;# 
  5826  041E                     	;# 
  5827  041F                     	;# 
  5828  048C                     	;# 
  5829  048C                     	;# 
  5830  048D                     	;# 
  5831  048E                     	;# 
  5832  048F                     	;# 
  5833  048F                     	;# 
  5834  0490                     	;# 
  5835  0491                     	;# 
  5836  0492                     	;# 
  5837  0492                     	;# 
  5838  0493                     	;# 
  5839  0494                     	;# 
  5840  0495                     	;# 
  5841  0495                     	;# 
  5842  0496                     	;# 
  5843  0497                     	;# 
  5844  0498                     	;# 
  5845  0499                     	;# 
  5846  049A                     	;# 
  5847  049B                     	;# 
  5848  049C                     	;# 
  5849  049D                     	;# 
  5850  050C                     	;# 
  5851  050C                     	;# 
  5852  050D                     	;# 
  5853  050E                     	;# 
  5854  050F                     	;# 
  5855  050F                     	;# 
  5856  0510                     	;# 
  5857  0511                     	;# 
  5858  0512                     	;# 
  5859  0512                     	;# 
  5860  0513                     	;# 
  5861  0514                     	;# 
  5862  0515                     	;# 
  5863  0515                     	;# 
  5864  0516                     	;# 
  5865  0517                     	;# 
  5866  0518                     	;# 
  5867  0519                     	;# 
  5868  051A                     	;# 
  5869  051B                     	;# 
  5870  051C                     	;# 
  5871  051D                     	;# 
  5872  058C                     	;# 
  5873  058C                     	;# 
  5874  058D                     	;# 
  5875  058E                     	;# 
  5876  058F                     	;# 
  5877  058F                     	;# 
  5878  0590                     	;# 
  5879  0591                     	;# 
  5880  0592                     	;# 
  5881  0593                     	;# 
  5882  060C                     	;# 
  5883  060D                     	;# 
  5884  060E                     	;# 
  5885  060F                     	;# 
  5886  0610                     	;# 
  5887  0611                     	;# 
  5888  0612                     	;# 
  5889  0613                     	;# 
  5890  0614                     	;# 
  5891  0616                     	;# 
  5892  0617                     	;# 
  5893  0618                     	;# 
  5894  0619                     	;# 
  5895  061A                     	;# 
  5896  061B                     	;# 
  5897  061C                     	;# 
  5898  061D                     	;# 
  5899  061E                     	;# 
  5900  068C                     	;# 
  5901  068D                     	;# 
  5902  068E                     	;# 
  5903  068F                     	;# 
  5904  0690                     	;# 
  5905  0691                     	;# 
  5906  0692                     	;# 
  5907  0693                     	;# 
  5908  0694                     	;# 
  5909  070C                     	;# 
  5910  070D                     	;# 
  5911  070E                     	;# 
  5912  070F                     	;# 
  5913  0710                     	;# 
  5914  0711                     	;# 
  5915  0712                     	;# 
  5916  0713                     	;# 
  5917  0714                     	;# 
  5918  0716                     	;# 
  5919  0717                     	;# 
  5920  0718                     	;# 
  5921  0719                     	;# 
  5922  071A                     	;# 
  5923  071B                     	;# 
  5924  071C                     	;# 
  5925  071D                     	;# 
  5926  071E                     	;# 
  5927  0796                     	;# 
  5928  0797                     	;# 
  5929  0798                     	;# 
  5930  0799                     	;# 
  5931  079A                     	;# 
  5932  079B                     	;# 
  5933  080C                     	;# 
  5934  080D                     	;# 
  5935  080E                     	;# 
  5936  080F                     	;# 
  5937  0810                     	;# 
  5938  0811                     	;# 
  5939  0812                     	;# 
  5940  0813                     	;# 
  5941  0814                     	;# 
  5942  081A                     	;# 
  5943  081B                     	;# 
  5944  081C                     	;# 
  5945  081D                     	;# 
  5946  081E                     	;# 
  5947  081F                     	;# 
  5948  088C                     	;# 
  5949  088D                     	;# 
  5950  088E                     	;# 
  5951  088F                     	;# 
  5952  0890                     	;# 
  5953  0891                     	;# 
  5954  0892                     	;# 
  5955  0893                     	;# 
  5956  0895                     	;# 
  5957  0896                     	;# 
  5958  0897                     	;# 
  5959  0898                     	;# 
  5960  0899                     	;# 
  5961  089A                     	;# 
  5962  089B                     	;# 
  5963  090C                     	;# 
  5964  090E                     	;# 
  5965  090F                     	;# 
  5966  091F                     	;# 
  5967  091F                     	;# 
  5968  098F                     	;# 
  5969  098F                     	;# 
  5970  0990                     	;# 
  5971  0991                     	;# 
  5972  0992                     	;# 
  5973  0993                     	;# 
  5974  0994                     	;# 
  5975  0995                     	;# 
  5976  0996                     	;# 
  5977  0997                     	;# 
  5978  0E0F                     	;# 
  5979  0E10                     	;# 
  5980  0E11                     	;# 
  5981  0E12                     	;# 
  5982  0E13                     	;# 
  5983  0E14                     	;# 
  5984  0E15                     	;# 
  5985  0E16                     	;# 
  5986  0E17                     	;# 
  5987  0E18                     	;# 
  5988  0E19                     	;# 
  5989  0E1A                     	;# 
  5990  0E1B                     	;# 
  5991  0E1C                     	;# 
  5992  0E1D                     	;# 
  5993  0E1E                     	;# 
  5994  0E1F                     	;# 
  5995  0E20                     	;# 
  5996  0E21                     	;# 
  5997  0E22                     	;# 
  5998  0E23                     	;# 
  5999  0E24                     	;# 
  6000  0E25                     	;# 
  6001  0E26                     	;# 
  6002  0E27                     	;# 
  6003  0E28                     	;# 
  6004  0E29                     	;# 
  6005  0E2A                     	;# 
  6006  0E2B                     	;# 
  6007  0E2C                     	;# 
  6008  0E2D                     	;# 
  6009  0E2E                     	;# 
  6010  0E2F                     	;# 
  6011  0E30                     	;# 
  6012  0E31                     	;# 
  6013  0E32                     	;# 
  6014  0E33                     	;# 
  6015  0E34                     	;# 
  6016  0E35                     	;# 
  6017  0E36                     	;# 
  6018  0E37                     	;# 
  6019  0E8F                     	;# 
  6020  0E90                     	;# 
  6021  0E91                     	;# 
  6022  0E92                     	;# 
  6023  0E93                     	;# 
  6024  0E94                     	;# 
  6025  0E95                     	;# 
  6026  0E96                     	;# 
  6027  0E97                     	;# 
  6028  0E9C                     	;# 
  6029  0E9D                     	;# 
  6030  0E9E                     	;# 
  6031  0EA1                     	;# 
  6032  0EA2                     	;# 
  6033  0EA3                     	;# 
  6034  0EA4                     	;# 
  6035  0EA5                     	;# 
  6036  0EA9                     	;# 
  6037  0EAA                     	;# 
  6038  0EAB                     	;# 
  6039  0EAC                     	;# 
  6040  0EB1                     	;# 
  6041  0EB2                     	;# 
  6042  0EB3                     	;# 
  6043  0EB8                     	;# 
  6044  0EB9                     	;# 
  6045  0EBA                     	;# 
  6046  0EBB                     	;# 
  6047  0EBC                     	;# 
  6048  0EBD                     	;# 
  6049  0EBE                     	;# 
  6050  0EC3                     	;# 
  6051  0EC5                     	;# 
  6052  0EC6                     	;# 
  6053  0EC7                     	;# 
  6054  0EC8                     	;# 
  6055  0EC9                     	;# 
  6056  0ECA                     	;# 
  6057  0ECB                     	;# 
  6058  0ECC                     	;# 
  6059  0F10                     	;# 
  6060  0F11                     	;# 
  6061  0F12                     	;# 
  6062  0F13                     	;# 
  6063  0F14                     	;# 
  6064  0F15                     	;# 
  6065  0F16                     	;# 
  6066  0F17                     	;# 
  6067  0F18                     	;# 
  6068  0F19                     	;# 
  6069  0F1A                     	;# 
  6070  0F1B                     	;# 
  6071  0F1C                     	;# 
  6072  0F1D                     	;# 
  6073  0F1E                     	;# 
  6074  0F1F                     	;# 
  6075  0F20                     	;# 
  6076  0F21                     	;# 
  6077  0F22                     	;# 
  6078  0F23                     	;# 
  6079  0F24                     	;# 
  6080  0F25                     	;# 
  6081  0F26                     	;# 
  6082  0F27                     	;# 
  6083  0F28                     	;# 
  6084  0F29                     	;# 
  6085  0F2A                     	;# 
  6086  0F2B                     	;# 
  6087  0F2C                     	;# 
  6088  0F2D                     	;# 
  6089  0F2E                     	;# 
  6090  0F2F                     	;# 
  6091  0F30                     	;# 
  6092  0F31                     	;# 
  6093  0F32                     	;# 
  6094  0F38                     	;# 
  6095  0F39                     	;# 
  6096  0F3A                     	;# 
  6097  0F3B                     	;# 
  6098  0F3C                     	;# 
  6099  0F3D                     	;# 
  6100  0F3E                     	;# 
  6101  0F3F                     	;# 
  6102  0F40                     	;# 
  6103  0F41                     	;# 
  6104  0F43                     	;# 
  6105  0F44                     	;# 
  6106  0F45                     	;# 
  6107  0F46                     	;# 
  6108  0F47                     	;# 
  6109  0F48                     	;# 
  6110  0F49                     	;# 
  6111  0F4A                     	;# 
  6112  0F4B                     	;# 
  6113  0F4C                     	;# 
  6114  0F4E                     	;# 
  6115  0F4F                     	;# 
  6116  0F50                     	;# 
  6117  0F51                     	;# 
  6118  0F52                     	;# 
  6119  0F53                     	;# 
  6120  0F54                     	;# 
  6121  0F55                     	;# 
  6122  0F56                     	;# 
  6123  0F57                     	;# 
  6124  0F59                     	;# 
  6125  0F5A                     	;# 
  6126  0F5B                     	;# 
  6127  0F5C                     	;# 
  6128  0F5D                     	;# 
  6129  0F61                     	;# 
  6130  0F62                     	;# 
  6131  0F64                     	;# 
  6132  0F65                     	;# 
  6133  0F66                     	;# 
  6134  0F67                     	;# 
  6135  0F68                     	;# 
  6136  0F69                     	;# 
  6137  0F6A                     	;# 
  6138  0F6B                     	;# 
  6139  0F6C                     	;# 
  6140  0F6D                     	;# 
  6141  0FE4                     	;# 
  6142  0FE5                     	;# 
  6143  0FE6                     	;# 
  6144  0FE7                     	;# 
  6145  0FE8                     	;# 
  6146  0FE9                     	;# 
  6147  0FEA                     	;# 
  6148  0FEB                     	;# 
  6149  0FED                     	;# 
  6150  0FEE                     	;# 
  6151  0FEF                     	;# 
  6152  0000                     	;# 
  6153  0001                     	;# 
  6154  0002                     	;# 
  6155  0003                     	;# 
  6156  0004                     	;# 
  6157  0005                     	;# 
  6158  0006                     	;# 
  6159  0007                     	;# 
  6160  0008                     	;# 
  6161  0009                     	;# 
  6162  000A                     	;# 
  6163  000B                     	;# 
  6164  000C                     	;# 
  6165  000D                     	;# 
  6166  000E                     	;# 
  6167  000F                     	;# 
  6168  0010                     	;# 
  6169  0011                     	;# 
  6170  0012                     	;# 
  6171  0013                     	;# 
  6172  0014                     	;# 
  6173  0015                     	;# 
  6174  0016                     	;# 
  6175  0017                     	;# 
  6176  0018                     	;# 
  6177  0019                     	;# 
  6178  001A                     	;# 
  6179  001C                     	;# 
  6180  001C                     	;# 
  6181  001D                     	;# 
  6182  001D                     	;# 
  6183  001E                     	;# 
  6184  001F                     	;# 
  6185  008C                     	;# 
  6186  008C                     	;# 
  6187  008D                     	;# 
  6188  008E                     	;# 
  6189  008E                     	;# 
  6190  008F                     	;# 
  6191  0090                     	;# 
  6192  0090                     	;# 
  6193  0091                     	;# 
  6194  0093                     	;# 
  6195  0094                     	;# 
  6196  0095                     	;# 
  6197  0096                     	;# 
  6198  0097                     	;# 
  6199  0098                     	;# 
  6200  0099                     	;# 
  6201  009A                     	;# 
  6202  009B                     	;# 
  6203  009C                     	;# 
  6204  009D                     	;# 
  6205  009E                     	;# 
  6206  010C                     	;# 
  6207  010D                     	;# 
  6208  010E                     	;# 
  6209  010E                     	;# 
  6210  010F                     	;# 
  6211  0110                     	;# 
  6212  0110                     	;# 
  6213  0111                     	;# 
  6214  0112                     	;# 
  6215  0112                     	;# 
  6216  0113                     	;# 
  6217  0114                     	;# 
  6218  0114                     	;# 
  6219  0115                     	;# 
  6220  0116                     	;# 
  6221  0116                     	;# 
  6222  0117                     	;# 
  6223  0119                     	;# 
  6224  0119                     	;# 
  6225  0119                     	;# 
  6226  011A                     	;# 
  6227  011A                     	;# 
  6228  011A                     	;# 
  6229  011B                     	;# 
  6230  011B                     	;# 
  6231  011B                     	;# 
  6232  011B                     	;# 
  6233  011B                     	;# 
  6234  011C                     	;# 
  6235  011C                     	;# 
  6236  011C                     	;# 
  6237  011D                     	;# 
  6238  011D                     	;# 
  6239  011D                     	;# 
  6240  011E                     	;# 
  6241  011E                     	;# 
  6242  011E                     	;# 
  6243  011F                     	;# 
  6244  011F                     	;# 
  6245  011F                     	;# 
  6246  011F                     	;# 
  6247  011F                     	;# 
  6248  018C                     	;# 
  6249  018D                     	;# 
  6250  018E                     	;# 
  6251  018F                     	;# 
  6252  0190                     	;# 
  6253  0191                     	;# 
  6254  0192                     	;# 
  6255  0196                     	;# 
  6256  0197                     	;# 
  6257  0198                     	;# 
  6258  0199                     	;# 
  6259  019A                     	;# 
  6260  019B                     	;# 
  6261  019C                     	;# 
  6262  020C                     	;# 
  6263  020C                     	;# 
  6264  020D                     	;# 
  6265  020E                     	;# 
  6266  020F                     	;# 
  6267  020F                     	;# 
  6268  0210                     	;# 
  6269  0210                     	;# 
  6270  0211                     	;# 
  6271  0211                     	;# 
  6272  0212                     	;# 
  6273  0212                     	;# 
  6274  0213                     	;# 
  6275  0214                     	;# 
  6276  0215                     	;# 
  6277  0215                     	;# 
  6278  0216                     	;# 
  6279  0216                     	;# 
  6280  0217                     	;# 
  6281  0217                     	;# 
  6282  0218                     	;# 
  6283  0218                     	;# 
  6284  0219                     	;# 
  6285  021A                     	;# 
  6286  021B                     	;# 
  6287  021B                     	;# 
  6288  021C                     	;# 
  6289  021C                     	;# 
  6290  021D                     	;# 
  6291  021D                     	;# 
  6292  021E                     	;# 
  6293  021F                     	;# 
  6294  028C                     	;# 
  6295  028C                     	;# 
  6296  028D                     	;# 
  6297  028D                     	;# 
  6298  028E                     	;# 
  6299  028F                     	;# 
  6300  0290                     	;# 
  6301  0290                     	;# 
  6302  0291                     	;# 
  6303  0292                     	;# 
  6304  0292                     	;# 
  6305  0293                     	;# 
  6306  0293                     	;# 
  6307  0294                     	;# 
  6308  0295                     	;# 
  6309  0296                     	;# 
  6310  0296                     	;# 
  6311  0297                     	;# 
  6312  0298                     	;# 
  6313  0298                     	;# 
  6314  0299                     	;# 
  6315  0299                     	;# 
  6316  029A                     	;# 
  6317  029B                     	;# 
  6318  029C                     	;# 
  6319  029C                     	;# 
  6320  029D                     	;# 
  6321  030C                     	;# 
  6322  030C                     	;# 
  6323  030D                     	;# 
  6324  030E                     	;# 
  6325  030F                     	;# 
  6326  0310                     	;# 
  6327  0310                     	;# 
  6328  0311                     	;# 
  6329  0312                     	;# 
  6330  0313                     	;# 
  6331  0314                     	;# 
  6332  0314                     	;# 
  6333  0315                     	;# 
  6334  0316                     	;# 
  6335  0317                     	;# 
  6336  0318                     	;# 
  6337  0318                     	;# 
  6338  0319                     	;# 
  6339  031A                     	;# 
  6340  031B                     	;# 
  6341  031C                     	;# 
  6342  031C                     	;# 
  6343  031D                     	;# 
  6344  031E                     	;# 
  6345  031F                     	;# 
  6346  038C                     	;# 
  6347  038C                     	;# 
  6348  038D                     	;# 
  6349  038E                     	;# 
  6350  0390                     	;# 
  6351  0390                     	;# 
  6352  0391                     	;# 
  6353  0392                     	;# 
  6354  040C                     	;# 
  6355  040D                     	;# 
  6356  040E                     	;# 
  6357  040F                     	;# 
  6358  0410                     	;# 
  6359  0411                     	;# 
  6360  0416                     	;# 
  6361  0416                     	;# 
  6362  0417                     	;# 
  6363  0418                     	;# 
  6364  0418                     	;# 
  6365  0419                     	;# 
  6366  041A                     	;# 
  6367  041A                     	;# 
  6368  041B                     	;# 
  6369  041C                     	;# 
  6370  041C                     	;# 
  6371  041D                     	;# 
  6372  041E                     	;# 
  6373  041F                     	;# 
  6374  048C                     	;# 
  6375  048C                     	;# 
  6376  048D                     	;# 
  6377  048E                     	;# 
  6378  048F                     	;# 
  6379  048F                     	;# 
  6380  0490                     	;# 
  6381  0491                     	;# 
  6382  0492                     	;# 
  6383  0492                     	;# 
  6384  0493                     	;# 
  6385  0494                     	;# 
  6386  0495                     	;# 
  6387  0495                     	;# 
  6388  0496                     	;# 
  6389  0497                     	;# 
  6390  0498                     	;# 
  6391  0499                     	;# 
  6392  049A                     	;# 
  6393  049B                     	;# 
  6394  049C                     	;# 
  6395  049D                     	;# 
  6396  050C                     	;# 
  6397  050C                     	;# 
  6398  050D                     	;# 
  6399  050E                     	;# 
  6400  050F                     	;# 
  6401  050F                     	;# 
  6402  0510                     	;# 
  6403  0511                     	;# 
  6404  0512                     	;# 
  6405  0512                     	;# 
  6406  0513                     	;# 
  6407  0514                     	;# 
  6408  0515                     	;# 
  6409  0515                     	;# 
  6410  0516                     	;# 
  6411  0517                     	;# 
  6412  0518                     	;# 
  6413  0519                     	;# 
  6414  051A                     	;# 
  6415  051B                     	;# 
  6416  051C                     	;# 
  6417  051D                     	;# 
  6418  058C                     	;# 
  6419  058C                     	;# 
  6420  058D                     	;# 
  6421  058E                     	;# 
  6422  058F                     	;# 
  6423  058F                     	;# 
  6424  0590                     	;# 
  6425  0591                     	;# 
  6426  0592                     	;# 
  6427  0593                     	;# 
  6428  060C                     	;# 
  6429  060D                     	;# 
  6430  060E                     	;# 
  6431  060F                     	;# 
  6432  0610                     	;# 
  6433  0611                     	;# 
  6434  0612                     	;# 
  6435  0613                     	;# 
  6436  0614                     	;# 
  6437  0616                     	;# 
  6438  0617                     	;# 
  6439  0618                     	;# 
  6440  0619                     	;# 
  6441  061A                     	;# 
  6442  061B                     	;# 
  6443  061C                     	;# 
  6444  061D                     	;# 
  6445  061E                     	;# 
  6446  068C                     	;# 
  6447  068D                     	;# 
  6448  068E                     	;# 
  6449  068F                     	;# 
  6450  0690                     	;# 
  6451  0691                     	;# 
  6452  0692                     	;# 
  6453  0693                     	;# 
  6454  0694                     	;# 
  6455  070C                     	;# 
  6456  070D                     	;# 
  6457  070E                     	;# 
  6458  070F                     	;# 
  6459  0710                     	;# 
  6460  0711                     	;# 
  6461  0712                     	;# 
  6462  0713                     	;# 
  6463  0714                     	;# 
  6464  0716                     	;# 
  6465  0717                     	;# 
  6466  0718                     	;# 
  6467  0719                     	;# 
  6468  071A                     	;# 
  6469  071B                     	;# 
  6470  071C                     	;# 
  6471  071D                     	;# 
  6472  071E                     	;# 
  6473  0796                     	;# 
  6474  0797                     	;# 
  6475  0798                     	;# 
  6476  0799                     	;# 
  6477  079A                     	;# 
  6478  079B                     	;# 
  6479  080C                     	;# 
  6480  080D                     	;# 
  6481  080E                     	;# 
  6482  080F                     	;# 
  6483  0810                     	;# 
  6484  0811                     	;# 
  6485  0812                     	;# 
  6486  0813                     	;# 
  6487  0814                     	;# 
  6488  081A                     	;# 
  6489  081B                     	;# 
  6490  081C                     	;# 
  6491  081D                     	;# 
  6492  081E                     	;# 
  6493  081F                     	;# 
  6494  088C                     	;# 
  6495  088D                     	;# 
  6496  088E                     	;# 
  6497  088F                     	;# 
  6498  0890                     	;# 
  6499  0891                     	;# 
  6500  0892                     	;# 
  6501  0893                     	;# 
  6502  0895                     	;# 
  6503  0896                     	;# 
  6504  0897                     	;# 
  6505  0898                     	;# 
  6506  0899                     	;# 
  6507  089A                     	;# 
  6508  089B                     	;# 
  6509  090C                     	;# 
  6510  090E                     	;# 
  6511  090F                     	;# 
  6512  091F                     	;# 
  6513  091F                     	;# 
  6514  098F                     	;# 
  6515  098F                     	;# 
  6516  0990                     	;# 
  6517  0991                     	;# 
  6518  0992                     	;# 
  6519  0993                     	;# 
  6520  0994                     	;# 
  6521  0995                     	;# 
  6522  0996                     	;# 
  6523  0997                     	;# 
  6524  0E0F                     	;# 
  6525  0E10                     	;# 
  6526  0E11                     	;# 
  6527  0E12                     	;# 
  6528  0E13                     	;# 
  6529  0E14                     	;# 
  6530  0E15                     	;# 
  6531  0E16                     	;# 
  6532  0E17                     	;# 
  6533  0E18                     	;# 
  6534  0E19                     	;# 
  6535  0E1A                     	;# 
  6536  0E1B                     	;# 
  6537  0E1C                     	;# 
  6538  0E1D                     	;# 
  6539  0E1E                     	;# 
  6540  0E1F                     	;# 
  6541  0E20                     	;# 
  6542  0E21                     	;# 
  6543  0E22                     	;# 
  6544  0E23                     	;# 
  6545  0E24                     	;# 
  6546  0E25                     	;# 
  6547  0E26                     	;# 
  6548  0E27                     	;# 
  6549  0E28                     	;# 
  6550  0E29                     	;# 
  6551  0E2A                     	;# 
  6552  0E2B                     	;# 
  6553  0E2C                     	;# 
  6554  0E2D                     	;# 
  6555  0E2E                     	;# 
  6556  0E2F                     	;# 
  6557  0E30                     	;# 
  6558  0E31                     	;# 
  6559  0E32                     	;# 
  6560  0E33                     	;# 
  6561  0E34                     	;# 
  6562  0E35                     	;# 
  6563  0E36                     	;# 
  6564  0E37                     	;# 
  6565  0E8F                     	;# 
  6566  0E90                     	;# 
  6567  0E91                     	;# 
  6568  0E92                     	;# 
  6569  0E93                     	;# 
  6570  0E94                     	;# 
  6571  0E95                     	;# 
  6572  0E96                     	;# 
  6573  0E97                     	;# 
  6574  0E9C                     	;# 
  6575  0E9D                     	;# 
  6576  0E9E                     	;# 
  6577  0EA1                     	;# 
  6578  0EA2                     	;# 
  6579  0EA3                     	;# 
  6580  0EA4                     	;# 
  6581  0EA5                     	;# 
  6582  0EA9                     	;# 
  6583  0EAA                     	;# 
  6584  0EAB                     	;# 
  6585  0EAC                     	;# 
  6586  0EB1                     	;# 
  6587  0EB2                     	;# 
  6588  0EB3                     	;# 
  6589  0EB8                     	;# 
  6590  0EB9                     	;# 
  6591  0EBA                     	;# 
  6592  0EBB                     	;# 
  6593  0EBC                     	;# 
  6594  0EBD                     	;# 
  6595  0EBE                     	;# 
  6596  0EC3                     	;# 
  6597  0EC5                     	;# 
  6598  0EC6                     	;# 
  6599  0EC7                     	;# 
  6600  0EC8                     	;# 
  6601  0EC9                     	;# 
  6602  0ECA                     	;# 
  6603  0ECB                     	;# 
  6604  0ECC                     	;# 
  6605  0F10                     	;# 
  6606  0F11                     	;# 
  6607  0F12                     	;# 
  6608  0F13                     	;# 
  6609  0F14                     	;# 
  6610  0F15                     	;# 
  6611  0F16                     	;# 
  6612  0F17                     	;# 
  6613  0F18                     	;# 
  6614  0F19                     	;# 
  6615  0F1A                     	;# 
  6616  0F1B                     	;# 
  6617  0F1C                     	;# 
  6618  0F1D                     	;# 
  6619  0F1E                     	;# 
  6620  0F1F                     	;# 
  6621  0F20                     	;# 
  6622  0F21                     	;# 
  6623  0F22                     	;# 
  6624  0F23                     	;# 
  6625  0F24                     	;# 
  6626  0F25                     	;# 
  6627  0F26                     	;# 
  6628  0F27                     	;# 
  6629  0F28                     	;# 
  6630  0F29                     	;# 
  6631  0F2A                     	;# 
  6632  0F2B                     	;# 
  6633  0F2C                     	;# 
  6634  0F2D                     	;# 
  6635  0F2E                     	;# 
  6636  0F2F                     	;# 
  6637  0F30                     	;# 
  6638  0F31                     	;# 
  6639  0F32                     	;# 
  6640  0F38                     	;# 
  6641  0F39                     	;# 
  6642  0F3A                     	;# 
  6643  0F3B                     	;# 
  6644  0F3C                     	;# 
  6645  0F3D                     	;# 
  6646  0F3E                     	;# 
  6647  0F3F                     	;# 
  6648  0F40                     	;# 
  6649  0F41                     	;# 
  6650  0F43                     	;# 
  6651  0F44                     	;# 
  6652  0F45                     	;# 
  6653  0F46                     	;# 
  6654  0F47                     	;# 
  6655  0F48                     	;# 
  6656  0F49                     	;# 
  6657  0F4A                     	;# 
  6658  0F4B                     	;# 
  6659  0F4C                     	;# 
  6660  0F4E                     	;# 
  6661  0F4F                     	;# 
  6662  0F50                     	;# 
  6663  0F51                     	;# 
  6664  0F52                     	;# 
  6665  0F53                     	;# 
  6666  0F54                     	;# 
  6667  0F55                     	;# 
  6668  0F56                     	;# 
  6669  0F57                     	;# 
  6670  0F59                     	;# 
  6671  0F5A                     	;# 
  6672  0F5B                     	;# 
  6673  0F5C                     	;# 
  6674  0F5D                     	;# 
  6675  0F61                     	;# 
  6676  0F62                     	;# 
  6677  0F64                     	;# 
  6678  0F65                     	;# 
  6679  0F66                     	;# 
  6680  0F67                     	;# 
  6681  0F68                     	;# 
  6682  0F69                     	;# 
  6683  0F6A                     	;# 
  6684  0F6B                     	;# 
  6685  0F6C                     	;# 
  6686  0F6D                     	;# 
  6687  0FE4                     	;# 
  6688  0FE5                     	;# 
  6689  0FE6                     	;# 
  6690  0FE7                     	;# 
  6691  0FE8                     	;# 
  6692  0FE9                     	;# 
  6693  0FEA                     	;# 
  6694  0FEB                     	;# 
  6695  0FED                     	;# 
  6696  0FEE                     	;# 
  6697  0FEF                     	;# 
  6698  0000                     	;# 
  6699  0001                     	;# 
  6700  0002                     	;# 
  6701  0003                     	;# 
  6702  0004                     	;# 
  6703  0005                     	;# 
  6704  0006                     	;# 
  6705  0007                     	;# 
  6706  0008                     	;# 
  6707  0009                     	;# 
  6708  000A                     	;# 
  6709  000B                     	;# 
  6710  000C                     	;# 
  6711  000D                     	;# 
  6712  000E                     	;# 
  6713  000F                     	;# 
  6714  0010                     	;# 
  6715  0011                     	;# 
  6716  0012                     	;# 
  6717  0013                     	;# 
  6718  0014                     	;# 
  6719  0015                     	;# 
  6720  0016                     	;# 
  6721  0017                     	;# 
  6722  0018                     	;# 
  6723  0019                     	;# 
  6724  001A                     	;# 
  6725  001C                     	;# 
  6726  001C                     	;# 
  6727  001D                     	;# 
  6728  001D                     	;# 
  6729  001E                     	;# 
  6730  001F                     	;# 
  6731  008C                     	;# 
  6732  008C                     	;# 
  6733  008D                     	;# 
  6734  008E                     	;# 
  6735  008E                     	;# 
  6736  008F                     	;# 
  6737  0090                     	;# 
  6738  0090                     	;# 
  6739  0091                     	;# 
  6740  0093                     	;# 
  6741  0094                     	;# 
  6742  0095                     	;# 
  6743  0096                     	;# 
  6744  0097                     	;# 
  6745  0098                     	;# 
  6746  0099                     	;# 
  6747  009A                     	;# 
  6748  009B                     	;# 
  6749  009C                     	;# 
  6750  009D                     	;# 
  6751  009E                     	;# 
  6752  010C                     	;# 
  6753  010D                     	;# 
  6754  010E                     	;# 
  6755  010E                     	;# 
  6756  010F                     	;# 
  6757  0110                     	;# 
  6758  0110                     	;# 
  6759  0111                     	;# 
  6760  0112                     	;# 
  6761  0112                     	;# 
  6762  0113                     	;# 
  6763  0114                     	;# 
  6764  0114                     	;# 
  6765  0115                     	;# 
  6766  0116                     	;# 
  6767  0116                     	;# 
  6768  0117                     	;# 
  6769  0119                     	;# 
  6770  0119                     	;# 
  6771  0119                     	;# 
  6772  011A                     	;# 
  6773  011A                     	;# 
  6774  011A                     	;# 
  6775  011B                     	;# 
  6776  011B                     	;# 
  6777  011B                     	;# 
  6778  011B                     	;# 
  6779  011B                     	;# 
  6780  011C                     	;# 
  6781  011C                     	;# 
  6782  011C                     	;# 
  6783  011D                     	;# 
  6784  011D                     	;# 
  6785  011D                     	;# 
  6786  011E                     	;# 
  6787  011E                     	;# 
  6788  011E                     	;# 
  6789  011F                     	;# 
  6790  011F                     	;# 
  6791  011F                     	;# 
  6792  011F                     	;# 
  6793  011F                     	;# 
  6794  018C                     	;# 
  6795  018D                     	;# 
  6796  018E                     	;# 
  6797  018F                     	;# 
  6798  0190                     	;# 
  6799  0191                     	;# 
  6800  0192                     	;# 
  6801  0196                     	;# 
  6802  0197                     	;# 
  6803  0198                     	;# 
  6804  0199                     	;# 
  6805  019A                     	;# 
  6806  019B                     	;# 
  6807  019C                     	;# 
  6808  020C                     	;# 
  6809  020C                     	;# 
  6810  020D                     	;# 
  6811  020E                     	;# 
  6812  020F                     	;# 
  6813  020F                     	;# 
  6814  0210                     	;# 
  6815  0210                     	;# 
  6816  0211                     	;# 
  6817  0211                     	;# 
  6818  0212                     	;# 
  6819  0212                     	;# 
  6820  0213                     	;# 
  6821  0214                     	;# 
  6822  0215                     	;# 
  6823  0215                     	;# 
  6824  0216                     	;# 
  6825  0216                     	;# 
  6826  0217                     	;# 
  6827  0217                     	;# 
  6828  0218                     	;# 
  6829  0218                     	;# 
  6830  0219                     	;# 
  6831  021A                     	;# 
  6832  021B                     	;# 
  6833  021B                     	;# 
  6834  021C                     	;# 
  6835  021C                     	;# 
  6836  021D                     	;# 
  6837  021D                     	;# 
  6838  021E                     	;# 
  6839  021F                     	;# 
  6840  028C                     	;# 
  6841  028C                     	;# 
  6842  028D                     	;# 
  6843  028D                     	;# 
  6844  028E                     	;# 
  6845  028F                     	;# 
  6846  0290                     	;# 
  6847  0290                     	;# 
  6848  0291                     	;# 
  6849  0292                     	;# 
  6850  0292                     	;# 
  6851  0293                     	;# 
  6852  0293                     	;# 
  6853  0294                     	;# 
  6854  0295                     	;# 
  6855  0296                     	;# 
  6856  0296                     	;# 
  6857  0297                     	;# 
  6858  0298                     	;# 
  6859  0298                     	;# 
  6860  0299                     	;# 
  6861  0299                     	;# 
  6862  029A                     	;# 
  6863  029B                     	;# 
  6864  029C                     	;# 
  6865  029C                     	;# 
  6866  029D                     	;# 
  6867  030C                     	;# 
  6868  030C                     	;# 
  6869  030D                     	;# 
  6870  030E                     	;# 
  6871  030F                     	;# 
  6872  0310                     	;# 
  6873  0310                     	;# 
  6874  0311                     	;# 
  6875  0312                     	;# 
  6876  0313                     	;# 
  6877  0314                     	;# 
  6878  0314                     	;# 
  6879  0315                     	;# 
  6880  0316                     	;# 
  6881  0317                     	;# 
  6882  0318                     	;# 
  6883  0318                     	;# 
  6884  0319                     	;# 
  6885  031A                     	;# 
  6886  031B                     	;# 
  6887  031C                     	;# 
  6888  031C                     	;# 
  6889  031D                     	;# 
  6890  031E                     	;# 
  6891  031F                     	;# 
  6892  038C                     	;# 
  6893  038C                     	;# 
  6894  038D                     	;# 
  6895  038E                     	;# 
  6896  0390                     	;# 
  6897  0390                     	;# 
  6898  0391                     	;# 
  6899  0392                     	;# 
  6900  040C                     	;# 
  6901  040D                     	;# 
  6902  040E                     	;# 
  6903  040F                     	;# 
  6904  0410                     	;# 
  6905  0411                     	;# 
  6906  0416                     	;# 
  6907  0416                     	;# 
  6908  0417                     	;# 
  6909  0418                     	;# 
  6910  0418                     	;# 
  6911  0419                     	;# 
  6912  041A                     	;# 
  6913  041A                     	;# 
  6914  041B                     	;# 
  6915  041C                     	;# 
  6916  041C                     	;# 
  6917  041D                     	;# 
  6918  041E                     	;# 
  6919  041F                     	;# 
  6920  048C                     	;# 
  6921  048C                     	;# 
  6922  048D                     	;# 
  6923  048E                     	;# 
  6924  048F                     	;# 
  6925  048F                     	;# 
  6926  0490                     	;# 
  6927  0491                     	;# 
  6928  0492                     	;# 
  6929  0492                     	;# 
  6930  0493                     	;# 
  6931  0494                     	;# 
  6932  0495                     	;# 
  6933  0495                     	;# 
  6934  0496                     	;# 
  6935  0497                     	;# 
  6936  0498                     	;# 
  6937  0499                     	;# 
  6938  049A                     	;# 
  6939  049B                     	;# 
  6940  049C                     	;# 
  6941  049D                     	;# 
  6942  050C                     	;# 
  6943  050C                     	;# 
  6944  050D                     	;# 
  6945  050E                     	;# 
  6946  050F                     	;# 
  6947  050F                     	;# 
  6948  0510                     	;# 
  6949  0511                     	;# 
  6950  0512                     	;# 
  6951  0512                     	;# 
  6952  0513                     	;# 
  6953  0514                     	;# 
  6954  0515                     	;# 
  6955  0515                     	;# 
  6956  0516                     	;# 
  6957  0517                     	;# 
  6958  0518                     	;# 
  6959  0519                     	;# 
  6960  051A                     	;# 
  6961  051B                     	;# 
  6962  051C                     	;# 
  6963  051D                     	;# 
  6964  058C                     	;# 
  6965  058C                     	;# 
  6966  058D                     	;# 
  6967  058E                     	;# 
  6968  058F                     	;# 
  6969  058F                     	;# 
  6970  0590                     	;# 
  6971  0591                     	;# 
  6972  0592                     	;# 
  6973  0593                     	;# 
  6974  060C                     	;# 
  6975  060D                     	;# 
  6976  060E                     	;# 
  6977  060F                     	;# 
  6978  0610                     	;# 
  6979  0611                     	;# 
  6980  0612                     	;# 
  6981  0613                     	;# 
  6982  0614                     	;# 
  6983  0616                     	;# 
  6984  0617                     	;# 
  6985  0618                     	;# 
  6986  0619                     	;# 
  6987  061A                     	;# 
  6988  061B                     	;# 
  6989  061C                     	;# 
  6990  061D                     	;# 
  6991  061E                     	;# 
  6992  068C                     	;# 
  6993  068D                     	;# 
  6994  068E                     	;# 
  6995  068F                     	;# 
  6996  0690                     	;# 
  6997  0691                     	;# 
  6998  0692                     	;# 
  6999  0693                     	;# 
  7000  0694                     	;# 
  7001  070C                     	;# 
  7002  070D                     	;# 
  7003  070E                     	;# 
  7004  070F                     	;# 
  7005  0710                     	;# 
  7006  0711                     	;# 
  7007  0712                     	;# 
  7008  0713                     	;# 
  7009  0714                     	;# 
  7010  0716                     	;# 
  7011  0717                     	;# 
  7012  0718                     	;# 
  7013  0719                     	;# 
  7014  071A                     	;# 
  7015  071B                     	;# 
  7016  071C                     	;# 
  7017  071D                     	;# 
  7018  071E                     	;# 
  7019  0796                     	;# 
  7020  0797                     	;# 
  7021  0798                     	;# 
  7022  0799                     	;# 
  7023  079A                     	;# 
  7024  079B                     	;# 
  7025  080C                     	;# 
  7026  080D                     	;# 
  7027  080E                     	;# 
  7028  080F                     	;# 
  7029  0810                     	;# 
  7030  0811                     	;# 
  7031  0812                     	;# 
  7032  0813                     	;# 
  7033  0814                     	;# 
  7034  081A                     	;# 
  7035  081B                     	;# 
  7036  081C                     	;# 
  7037  081D                     	;# 
  7038  081E                     	;# 
  7039  081F                     	;# 
  7040  088C                     	;# 
  7041  088D                     	;# 
  7042  088E                     	;# 
  7043  088F                     	;# 
  7044  0890                     	;# 
  7045  0891                     	;# 
  7046  0892                     	;# 
  7047  0893                     	;# 
  7048  0895                     	;# 
  7049  0896                     	;# 
  7050  0897                     	;# 
  7051  0898                     	;# 
  7052  0899                     	;# 
  7053  089A                     	;# 
  7054  089B                     	;# 
  7055  090C                     	;# 
  7056  090E                     	;# 
  7057  090F                     	;# 
  7058  091F                     	;# 
  7059  091F                     	;# 
  7060  098F                     	;# 
  7061  098F                     	;# 
  7062  0990                     	;# 
  7063  0991                     	;# 
  7064  0992                     	;# 
  7065  0993                     	;# 
  7066  0994                     	;# 
  7067  0995                     	;# 
  7068  0996                     	;# 
  7069  0997                     	;# 
  7070  0E0F                     	;# 
  7071  0E10                     	;# 
  7072  0E11                     	;# 
  7073  0E12                     	;# 
  7074  0E13                     	;# 
  7075  0E14                     	;# 
  7076  0E15                     	;# 
  7077  0E16                     	;# 
  7078  0E17                     	;# 
  7079  0E18                     	;# 
  7080  0E19                     	;# 
  7081  0E1A                     	;# 
  7082  0E1B                     	;# 
  7083  0E1C                     	;# 
  7084  0E1D                     	;# 
  7085  0E1E                     	;# 
  7086  0E1F                     	;# 
  7087  0E20                     	;# 
  7088  0E21                     	;# 
  7089  0E22                     	;# 
  7090  0E23                     	;# 
  7091  0E24                     	;# 
  7092  0E25                     	;# 
  7093  0E26                     	;# 
  7094  0E27                     	;# 
  7095  0E28                     	;# 
  7096  0E29                     	;# 
  7097  0E2A                     	;# 
  7098  0E2B                     	;# 
  7099  0E2C                     	;# 
  7100  0E2D                     	;# 
  7101  0E2E                     	;# 
  7102  0E2F                     	;# 
  7103  0E30                     	;# 
  7104  0E31                     	;# 
  7105  0E32                     	;# 
  7106  0E33                     	;# 
  7107  0E34                     	;# 
  7108  0E35                     	;# 
  7109  0E36                     	;# 
  7110  0E37                     	;# 
  7111  0E8F                     	;# 
  7112  0E90                     	;# 
  7113  0E91                     	;# 
  7114  0E92                     	;# 
  7115  0E93                     	;# 
  7116  0E94                     	;# 
  7117  0E95                     	;# 
  7118  0E96                     	;# 
  7119  0E97                     	;# 
  7120  0E9C                     	;# 
  7121  0E9D                     	;# 
  7122  0E9E                     	;# 
  7123  0EA1                     	;# 
  7124  0EA2                     	;# 
  7125  0EA3                     	;# 
  7126  0EA4                     	;# 
  7127  0EA5                     	;# 
  7128  0EA9                     	;# 
  7129  0EAA                     	;# 
  7130  0EAB                     	;# 
  7131  0EAC                     	;# 
  7132  0EB1                     	;# 
  7133  0EB2                     	;# 
  7134  0EB3                     	;# 
  7135  0EB8                     	;# 
  7136  0EB9                     	;# 
  7137  0EBA                     	;# 
  7138  0EBB                     	;# 
  7139  0EBC                     	;# 
  7140  0EBD                     	;# 
  7141  0EBE                     	;# 
  7142  0EC3                     	;# 
  7143  0EC5                     	;# 
  7144  0EC6                     	;# 
  7145  0EC7                     	;# 
  7146  0EC8                     	;# 
  7147  0EC9                     	;# 
  7148  0ECA                     	;# 
  7149  0ECB                     	;# 
  7150  0ECC                     	;# 
  7151  0F10                     	;# 
  7152  0F11                     	;# 
  7153  0F12                     	;# 
  7154  0F13                     	;# 
  7155  0F14                     	;# 
  7156  0F15                     	;# 
  7157  0F16                     	;# 
  7158  0F17                     	;# 
  7159  0F18                     	;# 
  7160  0F19                     	;# 
  7161  0F1A                     	;# 
  7162  0F1B                     	;# 
  7163  0F1C                     	;# 
  7164  0F1D                     	;# 
  7165  0F1E                     	;# 
  7166  0F1F                     	;# 
  7167  0F20                     	;# 
  7168  0F21                     	;# 
  7169  0F22                     	;# 
  7170  0F23                     	;# 
  7171  0F24                     	;# 
  7172  0F25                     	;# 
  7173  0F26                     	;# 
  7174  0F27                     	;# 
  7175  0F28                     	;# 
  7176  0F29                     	;# 
  7177  0F2A                     	;# 
  7178  0F2B                     	;# 
  7179  0F2C                     	;# 
  7180  0F2D                     	;# 
  7181  0F2E                     	;# 
  7182  0F2F                     	;# 
  7183  0F30                     	;# 
  7184  0F31                     	;# 
  7185  0F32                     	;# 
  7186  0F38                     	;# 
  7187  0F39                     	;# 
  7188  0F3A                     	;# 
  7189  0F3B                     	;# 
  7190  0F3C                     	;# 
  7191  0F3D                     	;# 
  7192  0F3E                     	;# 
  7193  0F3F                     	;# 
  7194  0F40                     	;# 
  7195  0F41                     	;# 
  7196  0F43                     	;# 
  7197  0F44                     	;# 
  7198  0F45                     	;# 
  7199  0F46                     	;# 
  7200  0F47                     	;# 
  7201  0F48                     	;# 
  7202  0F49                     	;# 
  7203  0F4A                     	;# 
  7204  0F4B                     	;# 
  7205  0F4C                     	;# 
  7206  0F4E                     	;# 
  7207  0F4F                     	;# 
  7208  0F50                     	;# 
  7209  0F51                     	;# 
  7210  0F52                     	;# 
  7211  0F53                     	;# 
  7212  0F54                     	;# 
  7213  0F55                     	;# 
  7214  0F56                     	;# 
  7215  0F57                     	;# 
  7216  0F59                     	;# 
  7217  0F5A                     	;# 
  7218  0F5B                     	;# 
  7219  0F5C                     	;# 
  7220  0F5D                     	;# 
  7221  0F61                     	;# 
  7222  0F62                     	;# 
  7223  0F64                     	;# 
  7224  0F65                     	;# 
  7225  0F66                     	;# 
  7226  0F67                     	;# 
  7227  0F68                     	;# 
  7228  0F69                     	;# 
  7229  0F6A                     	;# 
  7230  0F6B                     	;# 
  7231  0F6C                     	;# 
  7232  0F6D                     	;# 
  7233  0FE4                     	;# 
  7234  0FE5                     	;# 
  7235  0FE6                     	;# 
  7236  0FE7                     	;# 
  7237  0FE8                     	;# 
  7238  0FE9                     	;# 
  7239  0FEA                     	;# 
  7240  0FEB                     	;# 
  7241  0FED                     	;# 
  7242  0FEE                     	;# 
  7243  0FEF                     	;# 
  7244  0000                     	;# 
  7245  0001                     	;# 
  7246  0002                     	;# 
  7247  0003                     	;# 
  7248  0004                     	;# 
  7249  0005                     	;# 
  7250  0006                     	;# 
  7251  0007                     	;# 
  7252  0008                     	;# 
  7253  0009                     	;# 
  7254  000A                     	;# 
  7255  000B                     	;# 
  7256  000C                     	;# 
  7257  000D                     	;# 
  7258  000E                     	;# 
  7259  000F                     	;# 
  7260  0010                     	;# 
  7261  0011                     	;# 
  7262  0012                     	;# 
  7263  0013                     	;# 
  7264  0014                     	;# 
  7265  0015                     	;# 
  7266  0016                     	;# 
  7267  0017                     	;# 
  7268  0018                     	;# 
  7269  0019                     	;# 
  7270  001A                     	;# 
  7271  001C                     	;# 
  7272  001C                     	;# 
  7273  001D                     	;# 
  7274  001D                     	;# 
  7275  001E                     	;# 
  7276  001F                     	;# 
  7277  008C                     	;# 
  7278  008C                     	;# 
  7279  008D                     	;# 
  7280  008E                     	;# 
  7281  008E                     	;# 
  7282  008F                     	;# 
  7283  0090                     	;# 
  7284  0090                     	;# 
  7285  0091                     	;# 
  7286  0093                     	;# 
  7287  0094                     	;# 
  7288  0095                     	;# 
  7289  0096                     	;# 
  7290  0097                     	;# 
  7291  0098                     	;# 
  7292  0099                     	;# 
  7293  009A                     	;# 
  7294  009B                     	;# 
  7295  009C                     	;# 
  7296  009D                     	;# 
  7297  009E                     	;# 
  7298  010C                     	;# 
  7299  010D                     	;# 
  7300  010E                     	;# 
  7301  010E                     	;# 
  7302  010F                     	;# 
  7303  0110                     	;# 
  7304  0110                     	;# 
  7305  0111                     	;# 
  7306  0112                     	;# 
  7307  0112                     	;# 
  7308  0113                     	;# 
  7309  0114                     	;# 
  7310  0114                     	;# 
  7311  0115                     	;# 
  7312  0116                     	;# 
  7313  0116                     	;# 
  7314  0117                     	;# 
  7315  0119                     	;# 
  7316  0119                     	;# 
  7317  0119                     	;# 
  7318  011A                     	;# 
  7319  011A                     	;# 
  7320  011A                     	;# 
  7321  011B                     	;# 
  7322  011B                     	;# 
  7323  011B                     	;# 
  7324  011B                     	;# 
  7325  011B                     	;# 
  7326  011C                     	;# 
  7327  011C                     	;# 
  7328  011C                     	;# 
  7329  011D                     	;# 
  7330  011D                     	;# 
  7331  011D                     	;# 
  7332  011E                     	;# 
  7333  011E                     	;# 
  7334  011E                     	;# 
  7335  011F                     	;# 
  7336  011F                     	;# 
  7337  011F                     	;# 
  7338  011F                     	;# 
  7339  011F                     	;# 
  7340  018C                     	;# 
  7341  018D                     	;# 
  7342  018E                     	;# 
  7343  018F                     	;# 
  7344  0190                     	;# 
  7345  0191                     	;# 
  7346  0192                     	;# 
  7347  0196                     	;# 
  7348  0197                     	;# 
  7349  0198                     	;# 
  7350  0199                     	;# 
  7351  019A                     	;# 
  7352  019B                     	;# 
  7353  019C                     	;# 
  7354  020C                     	;# 
  7355  020C                     	;# 
  7356  020D                     	;# 
  7357  020E                     	;# 
  7358  020F                     	;# 
  7359  020F                     	;# 
  7360  0210                     	;# 
  7361  0210                     	;# 
  7362  0211                     	;# 
  7363  0211                     	;# 
  7364  0212                     	;# 
  7365  0212                     	;# 
  7366  0213                     	;# 
  7367  0214                     	;# 
  7368  0215                     	;# 
  7369  0215                     	;# 
  7370  0216                     	;# 
  7371  0216                     	;# 
  7372  0217                     	;# 
  7373  0217                     	;# 
  7374  0218                     	;# 
  7375  0218                     	;# 
  7376  0219                     	;# 
  7377  021A                     	;# 
  7378  021B                     	;# 
  7379  021B                     	;# 
  7380  021C                     	;# 
  7381  021C                     	;# 
  7382  021D                     	;# 
  7383  021D                     	;# 
  7384  021E                     	;# 
  7385  021F                     	;# 
  7386  028C                     	;# 
  7387  028C                     	;# 
  7388  028D                     	;# 
  7389  028D                     	;# 
  7390  028E                     	;# 
  7391  028F                     	;# 
  7392  0290                     	;# 
  7393  0290                     	;# 
  7394  0291                     	;# 
  7395  0292                     	;# 
  7396  0292                     	;# 
  7397  0293                     	;# 
  7398  0293                     	;# 
  7399  0294                     	;# 
  7400  0295                     	;# 
  7401  0296                     	;# 
  7402  0296                     	;# 
  7403  0297                     	;# 
  7404  0298                     	;# 
  7405  0298                     	;# 
  7406  0299                     	;# 
  7407  0299                     	;# 
  7408  029A                     	;# 
  7409  029B                     	;# 
  7410  029C                     	;# 
  7411  029C                     	;# 
  7412  029D                     	;# 
  7413  030C                     	;# 
  7414  030C                     	;# 
  7415  030D                     	;# 
  7416  030E                     	;# 
  7417  030F                     	;# 
  7418  0310                     	;# 
  7419  0310                     	;# 
  7420  0311                     	;# 
  7421  0312                     	;# 
  7422  0313                     	;# 
  7423  0314                     	;# 
  7424  0314                     	;# 
  7425  0315                     	;# 
  7426  0316                     	;# 
  7427  0317                     	;# 
  7428  0318                     	;# 
  7429  0318                     	;# 
  7430  0319                     	;# 
  7431  031A                     	;# 
  7432  031B                     	;# 
  7433  031C                     	;# 
  7434  031C                     	;# 
  7435  031D                     	;# 
  7436  031E                     	;# 
  7437  031F                     	;# 
  7438  038C                     	;# 
  7439  038C                     	;# 
  7440  038D                     	;# 
  7441  038E                     	;# 
  7442  0390                     	;# 
  7443  0390                     	;# 
  7444  0391                     	;# 
  7445  0392                     	;# 
  7446  040C                     	;# 
  7447  040D                     	;# 
  7448  040E                     	;# 
  7449  040F                     	;# 
  7450  0410                     	;# 
  7451  0411                     	;# 
  7452  0416                     	;# 
  7453  0416                     	;# 
  7454  0417                     	;# 
  7455  0418                     	;# 
  7456  0418                     	;# 
  7457  0419                     	;# 
  7458  041A                     	;# 
  7459  041A                     	;# 
  7460  041B                     	;# 
  7461  041C                     	;# 
  7462  041C                     	;# 
  7463  041D                     	;# 
  7464  041E                     	;# 
  7465  041F                     	;# 
  7466  048C                     	;# 
  7467  048C                     	;# 
  7468  048D                     	;# 
  7469  048E                     	;# 
  7470  048F                     	;# 
  7471  048F                     	;# 
  7472  0490                     	;# 
  7473  0491                     	;# 
  7474  0492                     	;# 
  7475  0492                     	;# 
  7476  0493                     	;# 
  7477  0494                     	;# 
  7478  0495                     	;# 
  7479  0495                     	;# 
  7480  0496                     	;# 
  7481  0497                     	;# 
  7482  0498                     	;# 
  7483  0499                     	;# 
  7484  049A                     	;# 
  7485  049B                     	;# 
  7486  049C                     	;# 
  7487  049D                     	;# 
  7488  050C                     	;# 
  7489  050C                     	;# 
  7490  050D                     	;# 
  7491  050E                     	;# 
  7492  050F                     	;# 
  7493  050F                     	;# 
  7494  0510                     	;# 
  7495  0511                     	;# 
  7496  0512                     	;# 
  7497  0512                     	;# 
  7498  0513                     	;# 
  7499  0514                     	;# 
  7500  0515                     	;# 
  7501  0515                     	;# 
  7502  0516                     	;# 
  7503  0517                     	;# 
  7504  0518                     	;# 
  7505  0519                     	;# 
  7506  051A                     	;# 
  7507  051B                     	;# 
  7508  051C                     	;# 
  7509  051D                     	;# 
  7510  058C                     	;# 
  7511  058C                     	;# 
  7512  058D                     	;# 
  7513  058E                     	;# 
  7514  058F                     	;# 
  7515  058F                     	;# 
  7516  0590                     	;# 
  7517  0591                     	;# 
  7518  0592                     	;# 
  7519  0593                     	;# 
  7520  060C                     	;# 
  7521  060D                     	;# 
  7522  060E                     	;# 
  7523  060F                     	;# 
  7524  0610                     	;# 
  7525  0611                     	;# 
  7526  0612                     	;# 
  7527  0613                     	;# 
  7528  0614                     	;# 
  7529  0616                     	;# 
  7530  0617                     	;# 
  7531  0618                     	;# 
  7532  0619                     	;# 
  7533  061A                     	;# 
  7534  061B                     	;# 
  7535  061C                     	;# 
  7536  061D                     	;# 
  7537  061E                     	;# 
  7538  068C                     	;# 
  7539  068D                     	;# 
  7540  068E                     	;# 
  7541  068F                     	;# 
  7542  0690                     	;# 
  7543  0691                     	;# 
  7544  0692                     	;# 
  7545  0693                     	;# 
  7546  0694                     	;# 
  7547  070C                     	;# 
  7548  070D                     	;# 
  7549  070E                     	;# 
  7550  070F                     	;# 
  7551  0710                     	;# 
  7552  0711                     	;# 
  7553  0712                     	;# 
  7554  0713                     	;# 
  7555  0714                     	;# 
  7556  0716                     	;# 
  7557  0717                     	;# 
  7558  0718                     	;# 
  7559  0719                     	;# 
  7560  071A                     	;# 
  7561  071B                     	;# 
  7562  071C                     	;# 
  7563  071D                     	;# 
  7564  071E                     	;# 
  7565  0796                     	;# 
  7566  0797                     	;# 
  7567  0798                     	;# 
  7568  0799                     	;# 
  7569  079A                     	;# 
  7570  079B                     	;# 
  7571  080C                     	;# 
  7572  080D                     	;# 
  7573  080E                     	;# 
  7574  080F                     	;# 
  7575  0810                     	;# 
  7576  0811                     	;# 
  7577  0812                     	;# 
  7578  0813                     	;# 
  7579  0814                     	;# 
  7580  081A                     	;# 
  7581  081B                     	;# 
  7582  081C                     	;# 
  7583  081D                     	;# 
  7584  081E                     	;# 
  7585  081F                     	;# 
  7586  088C                     	;# 
  7587  088D                     	;# 
  7588  088E                     	;# 
  7589  088F                     	;# 
  7590  0890                     	;# 
  7591  0891                     	;# 
  7592  0892                     	;# 
  7593  0893                     	;# 
  7594  0895                     	;# 
  7595  0896                     	;# 
  7596  0897                     	;# 
  7597  0898                     	;# 
  7598  0899                     	;# 
  7599  089A                     	;# 
  7600  089B                     	;# 
  7601  090C                     	;# 
  7602  090E                     	;# 
  7603  090F                     	;# 
  7604  091F                     	;# 
  7605  091F                     	;# 
  7606  098F                     	;# 
  7607  098F                     	;# 
  7608  0990                     	;# 
  7609  0991                     	;# 
  7610  0992                     	;# 
  7611  0993                     	;# 
  7612  0994                     	;# 
  7613  0995                     	;# 
  7614  0996                     	;# 
  7615  0997                     	;# 
  7616  0E0F                     	;# 
  7617  0E10                     	;# 
  7618  0E11                     	;# 
  7619  0E12                     	;# 
  7620  0E13                     	;# 
  7621  0E14                     	;# 
  7622  0E15                     	;# 
  7623  0E16                     	;# 
  7624  0E17                     	;# 
  7625  0E18                     	;# 
  7626  0E19                     	;# 
  7627  0E1A                     	;# 
  7628  0E1B                     	;# 
  7629  0E1C                     	;# 
  7630  0E1D                     	;# 
  7631  0E1E                     	;# 
  7632  0E1F                     	;# 
  7633  0E20                     	;# 
  7634  0E21                     	;# 
  7635  0E22                     	;# 
  7636  0E23                     	;# 
  7637  0E24                     	;# 
  7638  0E25                     	;# 
  7639  0E26                     	;# 
  7640  0E27                     	;# 
  7641  0E28                     	;# 
  7642  0E29                     	;# 
  7643  0E2A                     	;# 
  7644  0E2B                     	;# 
  7645  0E2C                     	;# 
  7646  0E2D                     	;# 
  7647  0E2E                     	;# 
  7648  0E2F                     	;# 
  7649  0E30                     	;# 
  7650  0E31                     	;# 
  7651  0E32                     	;# 
  7652  0E33                     	;# 
  7653  0E34                     	;# 
  7654  0E35                     	;# 
  7655  0E36                     	;# 
  7656  0E37                     	;# 
  7657  0E8F                     	;# 
  7658  0E90                     	;# 
  7659  0E91                     	;# 
  7660  0E92                     	;# 
  7661  0E93                     	;# 
  7662  0E94                     	;# 
  7663  0E95                     	;# 
  7664  0E96                     	;# 
  7665  0E97                     	;# 
  7666  0E9C                     	;# 
  7667  0E9D                     	;# 
  7668  0E9E                     	;# 
  7669  0EA1                     	;# 
  7670  0EA2                     	;# 
  7671  0EA3                     	;# 
  7672  0EA4                     	;# 
  7673  0EA5                     	;# 
  7674  0EA9                     	;# 
  7675  0EAA                     	;# 
  7676  0EAB                     	;# 
  7677  0EAC                     	;# 
  7678  0EB1                     	;# 
  7679  0EB2                     	;# 
  7680  0EB3                     	;# 
  7681  0EB8                     	;# 
  7682  0EB9                     	;# 
  7683  0EBA                     	;# 
  7684  0EBB                     	;# 
  7685  0EBC                     	;# 
  7686  0EBD                     	;# 
  7687  0EBE                     	;# 
  7688  0EC3                     	;# 
  7689  0EC5                     	;# 
  7690  0EC6                     	;# 
  7691  0EC7                     	;# 
  7692  0EC8                     	;# 
  7693  0EC9                     	;# 
  7694  0ECA                     	;# 
  7695  0ECB                     	;# 
  7696  0ECC                     	;# 
  7697  0F10                     	;# 
  7698  0F11                     	;# 
  7699  0F12                     	;# 
  7700  0F13                     	;# 
  7701  0F14                     	;# 
  7702  0F15                     	;# 
  7703  0F16                     	;# 
  7704  0F17                     	;# 
  7705  0F18                     	;# 
  7706  0F19                     	;# 
  7707  0F1A                     	;# 
  7708  0F1B                     	;# 
  7709  0F1C                     	;# 
  7710  0F1D                     	;# 
  7711  0F1E                     	;# 
  7712  0F1F                     	;# 
  7713  0F20                     	;# 
  7714  0F21                     	;# 
  7715  0F22                     	;# 
  7716  0F23                     	;# 
  7717  0F24                     	;# 
  7718  0F25                     	;# 
  7719  0F26                     	;# 
  7720  0F27                     	;# 
  7721  0F28                     	;# 
  7722  0F29                     	;# 
  7723  0F2A                     	;# 
  7724  0F2B                     	;# 
  7725  0F2C                     	;# 
  7726  0F2D                     	;# 
  7727  0F2E                     	;# 
  7728  0F2F                     	;# 
  7729  0F30                     	;# 
  7730  0F31                     	;# 
  7731  0F32                     	;# 
  7732  0F38                     	;# 
  7733  0F39                     	;# 
  7734  0F3A                     	;# 
  7735  0F3B                     	;# 
  7736  0F3C                     	;# 
  7737  0F3D                     	;# 
  7738  0F3E                     	;# 
  7739  0F3F                     	;# 
  7740  0F40                     	;# 
  7741  0F41                     	;# 
  7742  0F43                     	;# 
  7743  0F44                     	;# 
  7744  0F45                     	;# 
  7745  0F46                     	;# 
  7746  0F47                     	;# 
  7747  0F48                     	;# 
  7748  0F49                     	;# 
  7749  0F4A                     	;# 
  7750  0F4B                     	;# 
  7751  0F4C                     	;# 
  7752  0F4E                     	;# 
  7753  0F4F                     	;# 
  7754  0F50                     	;# 
  7755  0F51                     	;# 
  7756  0F52                     	;# 
  7757  0F53                     	;# 
  7758  0F54                     	;# 
  7759  0F55                     	;# 
  7760  0F56                     	;# 
  7761  0F57                     	;# 
  7762  0F59                     	;# 
  7763  0F5A                     	;# 
  7764  0F5B                     	;# 
  7765  0F5C                     	;# 
  7766  0F5D                     	;# 
  7767  0F61                     	;# 
  7768  0F62                     	;# 
  7769  0F64                     	;# 
  7770  0F65                     	;# 
  7771  0F66                     	;# 
  7772  0F67                     	;# 
  7773  0F68                     	;# 
  7774  0F69                     	;# 
  7775  0F6A                     	;# 
  7776  0F6B                     	;# 
  7777  0F6C                     	;# 
  7778  0F6D                     	;# 
  7779  0FE4                     	;# 
  7780  0FE5                     	;# 
  7781  0FE6                     	;# 
  7782  0FE7                     	;# 
  7783  0FE8                     	;# 
  7784  0FE9                     	;# 
  7785  0FEA                     	;# 
  7786  0FEB                     	;# 
  7787  0FED                     	;# 
  7788  0FEE                     	;# 
  7789  0FEF                     	;# 
  7790  0000                     	;# 
  7791  0001                     	;# 
  7792  0002                     	;# 
  7793  0003                     	;# 
  7794  0004                     	;# 
  7795  0005                     	;# 
  7796  0006                     	;# 
  7797  0007                     	;# 
  7798  0008                     	;# 
  7799  0009                     	;# 
  7800  000A                     	;# 
  7801  000B                     	;# 
  7802  000C                     	;# 
  7803  000D                     	;# 
  7804  000E                     	;# 
  7805  000F                     	;# 
  7806  0010                     	;# 
  7807  0011                     	;# 
  7808  0012                     	;# 
  7809  0013                     	;# 
  7810  0014                     	;# 
  7811  0015                     	;# 
  7812  0016                     	;# 
  7813  0017                     	;# 
  7814  0018                     	;# 
  7815  0019                     	;# 
  7816  001A                     	;# 
  7817  001C                     	;# 
  7818  001C                     	;# 
  7819  001D                     	;# 
  7820  001D                     	;# 
  7821  001E                     	;# 
  7822  001F                     	;# 
  7823  008C                     	;# 
  7824  008C                     	;# 
  7825  008D                     	;# 
  7826  008E                     	;# 
  7827  008E                     	;# 
  7828  008F                     	;# 
  7829  0090                     	;# 
  7830  0090                     	;# 
  7831  0091                     	;# 
  7832  0093                     	;# 
  7833  0094                     	;# 
  7834  0095                     	;# 
  7835  0096                     	;# 
  7836  0097                     	;# 
  7837  0098                     	;# 
  7838  0099                     	;# 
  7839  009A                     	;# 
  7840  009B                     	;# 
  7841  009C                     	;# 
  7842  009D                     	;# 
  7843  009E                     	;# 
  7844  010C                     	;# 
  7845  010D                     	;# 
  7846  010E                     	;# 
  7847  010E                     	;# 
  7848  010F                     	;# 
  7849  0110                     	;# 
  7850  0110                     	;# 
  7851  0111                     	;# 
  7852  0112                     	;# 
  7853  0112                     	;# 
  7854  0113                     	;# 
  7855  0114                     	;# 
  7856  0114                     	;# 
  7857  0115                     	;# 
  7858  0116                     	;# 
  7859  0116                     	;# 
  7860  0117                     	;# 
  7861  0119                     	;# 
  7862  0119                     	;# 
  7863  0119                     	;# 
  7864  011A                     	;# 
  7865  011A                     	;# 
  7866  011A                     	;# 
  7867  011B                     	;# 
  7868  011B                     	;# 
  7869  011B                     	;# 
  7870  011B                     	;# 
  7871  011B                     	;# 
  7872  011C                     	;# 
  7873  011C                     	;# 
  7874  011C                     	;# 
  7875  011D                     	;# 
  7876  011D                     	;# 
  7877  011D                     	;# 
  7878  011E                     	;# 
  7879  011E                     	;# 
  7880  011E                     	;# 
  7881  011F                     	;# 
  7882  011F                     	;# 
  7883  011F                     	;# 
  7884  011F                     	;# 
  7885  011F                     	;# 
  7886  018C                     	;# 
  7887  018D                     	;# 
  7888  018E                     	;# 
  7889  018F                     	;# 
  7890  0190                     	;# 
  7891  0191                     	;# 
  7892  0192                     	;# 
  7893  0196                     	;# 
  7894  0197                     	;# 
  7895  0198                     	;# 
  7896  0199                     	;# 
  7897  019A                     	;# 
  7898  019B                     	;# 
  7899  019C                     	;# 
  7900  020C                     	;# 
  7901  020C                     	;# 
  7902  020D                     	;# 
  7903  020E                     	;# 
  7904  020F                     	;# 
  7905  020F                     	;# 
  7906  0210                     	;# 
  7907  0210                     	;# 
  7908  0211                     	;# 
  7909  0211                     	;# 
  7910  0212                     	;# 
  7911  0212                     	;# 
  7912  0213                     	;# 
  7913  0214                     	;# 
  7914  0215                     	;# 
  7915  0215                     	;# 
  7916  0216                     	;# 
  7917  0216                     	;# 
  7918  0217                     	;# 
  7919  0217                     	;# 
  7920  0218                     	;# 
  7921  0218                     	;# 
  7922  0219                     	;# 
  7923  021A                     	;# 
  7924  021B                     	;# 
  7925  021B                     	;# 
  7926  021C                     	;# 
  7927  021C                     	;# 
  7928  021D                     	;# 
  7929  021D                     	;# 
  7930  021E                     	;# 
  7931  021F                     	;# 
  7932  028C                     	;# 
  7933  028C                     	;# 
  7934  028D                     	;# 
  7935  028D                     	;# 
  7936  028E                     	;# 
  7937  028F                     	;# 
  7938  0290                     	;# 
  7939  0290                     	;# 
  7940  0291                     	;# 
  7941  0292                     	;# 
  7942  0292                     	;# 
  7943  0293                     	;# 
  7944  0293                     	;# 
  7945  0294                     	;# 
  7946  0295                     	;# 
  7947  0296                     	;# 
  7948  0296                     	;# 
  7949  0297                     	;# 
  7950  0298                     	;# 
  7951  0298                     	;# 
  7952  0299                     	;# 
  7953  0299                     	;# 
  7954  029A                     	;# 
  7955  029B                     	;# 
  7956  029C                     	;# 
  7957  029C                     	;# 
  7958  029D                     	;# 
  7959  030C                     	;# 
  7960  030C                     	;# 
  7961  030D                     	;# 
  7962  030E                     	;# 
  7963  030F                     	;# 
  7964  0310                     	;# 
  7965  0310                     	;# 
  7966  0311                     	;# 
  7967  0312                     	;# 
  7968  0313                     	;# 
  7969  0314                     	;# 
  7970  0314                     	;# 
  7971  0315                     	;# 
  7972  0316                     	;# 
  7973  0317                     	;# 
  7974  0318                     	;# 
  7975  0318                     	;# 
  7976  0319                     	;# 
  7977  031A                     	;# 
  7978  031B                     	;# 
  7979  031C                     	;# 
  7980  031C                     	;# 
  7981  031D                     	;# 
  7982  031E                     	;# 
  7983  031F                     	;# 
  7984  038C                     	;# 
  7985  038C                     	;# 
  7986  038D                     	;# 
  7987  038E                     	;# 
  7988  0390                     	;# 
  7989  0390                     	;# 
  7990  0391                     	;# 
  7991  0392                     	;# 
  7992  040C                     	;# 
  7993  040D                     	;# 
  7994  040E                     	;# 
  7995  040F                     	;# 
  7996  0410                     	;# 
  7997  0411                     	;# 
  7998  0416                     	;# 
  7999  0416                     	;# 
  8000  0417                     	;# 
  8001  0418                     	;# 
  8002  0418                     	;# 
  8003  0419                     	;# 
  8004  041A                     	;# 
  8005  041A                     	;# 
  8006  041B                     	;# 
  8007  041C                     	;# 
  8008  041C                     	;# 
  8009  041D                     	;# 
  8010  041E                     	;# 
  8011  041F                     	;# 
  8012  048C                     	;# 
  8013  048C                     	;# 
  8014  048D                     	;# 
  8015  048E                     	;# 
  8016  048F                     	;# 
  8017  048F                     	;# 
  8018  0490                     	;# 
  8019  0491                     	;# 
  8020  0492                     	;# 
  8021  0492                     	;# 
  8022  0493                     	;# 
  8023  0494                     	;# 
  8024  0495                     	;# 
  8025  0495                     	;# 
  8026  0496                     	;# 
  8027  0497                     	;# 
  8028  0498                     	;# 
  8029  0499                     	;# 
  8030  049A                     	;# 
  8031  049B                     	;# 
  8032  049C                     	;# 
  8033  049D                     	;# 
  8034  050C                     	;# 
  8035  050C                     	;# 
  8036  050D                     	;# 
  8037  050E                     	;# 
  8038  050F                     	;# 
  8039  050F                     	;# 
  8040  0510                     	;# 
  8041  0511                     	;# 
  8042  0512                     	;# 
  8043  0512                     	;# 
  8044  0513                     	;# 
  8045  0514                     	;# 
  8046  0515                     	;# 
  8047  0515                     	;# 
  8048  0516                     	;# 
  8049  0517                     	;# 
  8050  0518                     	;# 
  8051  0519                     	;# 
  8052  051A                     	;# 
  8053  051B                     	;# 
  8054  051C                     	;# 
  8055  051D                     	;# 
  8056  058C                     	;# 
  8057  058C                     	;# 
  8058  058D                     	;# 
  8059  058E                     	;# 
  8060  058F                     	;# 
  8061  058F                     	;# 
  8062  0590                     	;# 
  8063  0591                     	;# 
  8064  0592                     	;# 
  8065  0593                     	;# 
  8066  060C                     	;# 
  8067  060D                     	;# 
  8068  060E                     	;# 
  8069  060F                     	;# 
  8070  0610                     	;# 
  8071  0611                     	;# 
  8072  0612                     	;# 
  8073  0613                     	;# 
  8074  0614                     	;# 
  8075  0616                     	;# 
  8076  0617                     	;# 
  8077  0618                     	;# 
  8078  0619                     	;# 
  8079  061A                     	;# 
  8080  061B                     	;# 
  8081  061C                     	;# 
  8082  061D                     	;# 
  8083  061E                     	;# 
  8084  068C                     	;# 
  8085  068D                     	;# 
  8086  068E                     	;# 
  8087  068F                     	;# 
  8088  0690                     	;# 
  8089  0691                     	;# 
  8090  0692                     	;# 
  8091  0693                     	;# 
  8092  0694                     	;# 
  8093  070C                     	;# 
  8094  070D                     	;# 
  8095  070E                     	;# 
  8096  070F                     	;# 
  8097  0710                     	;# 
  8098  0711                     	;# 
  8099  0712                     	;# 
  8100  0713                     	;# 
  8101  0714                     	;# 
  8102  0716                     	;# 
  8103  0717                     	;# 
  8104  0718                     	;# 
  8105  0719                     	;# 
  8106  071A                     	;# 
  8107  071B                     	;# 
  8108  071C                     	;# 
  8109  071D                     	;# 
  8110  071E                     	;# 
  8111  0796                     	;# 
  8112  0797                     	;# 
  8113  0798                     	;# 
  8114  0799                     	;# 
  8115  079A                     	;# 
  8116  079B                     	;# 
  8117  080C                     	;# 
  8118  080D                     	;# 
  8119  080E                     	;# 
  8120  080F                     	;# 
  8121  0810                     	;# 
  8122  0811                     	;# 
  8123  0812                     	;# 
  8124  0813                     	;# 
  8125  0814                     	;# 
  8126  081A                     	;# 
  8127  081B                     	;# 
  8128  081C                     	;# 
  8129  081D                     	;# 
  8130  081E                     	;# 
  8131  081F                     	;# 
  8132  088C                     	;# 
  8133  088D                     	;# 
  8134  088E                     	;# 
  8135  088F                     	;# 
  8136  0890                     	;# 
  8137  0891                     	;# 
  8138  0892                     	;# 
  8139  0893                     	;# 
  8140  0895                     	;# 
  8141  0896                     	;# 
  8142  0897                     	;# 
  8143  0898                     	;# 
  8144  0899                     	;# 
  8145  089A                     	;# 
  8146  089B                     	;# 
  8147  090C                     	;# 
  8148  090E                     	;# 
  8149  090F                     	;# 
  8150  091F                     	;# 
  8151  091F                     	;# 
  8152  098F                     	;# 
  8153  098F                     	;# 
  8154  0990                     	;# 
  8155  0991                     	;# 
  8156  0992                     	;# 
  8157  0993                     	;# 
  8158  0994                     	;# 
  8159  0995                     	;# 
  8160  0996                     	;# 
  8161  0997                     	;# 
  8162  0E0F                     	;# 
  8163  0E10                     	;# 
  8164  0E11                     	;# 
  8165  0E12                     	;# 
  8166  0E13                     	;# 
  8167  0E14                     	;# 
  8168  0E15                     	;# 
  8169  0E16                     	;# 
  8170  0E17                     	;# 
  8171  0E18                     	;# 
  8172  0E19                     	;# 
  8173  0E1A                     	;# 
  8174  0E1B                     	;# 
  8175  0E1C                     	;# 
  8176  0E1D                     	;# 
  8177  0E1E                     	;# 
  8178  0E1F                     	;# 
  8179  0E20                     	;# 
  8180  0E21                     	;# 
  8181  0E22                     	;# 
  8182  0E23                     	;# 
  8183  0E24                     	;# 
  8184  0E25                     	;# 
  8185  0E26                     	;# 
  8186  0E27                     	;# 
  8187  0E28                     	;# 
  8188  0E29                     	;# 
  8189  0E2A                     	;# 
  8190  0E2B                     	;# 
  8191  0E2C                     	;# 
  8192  0E2D                     	;# 
  8193  0E2E                     	;# 
  8194  0E2F                     	;# 
  8195  0E30                     	;# 
  8196  0E31                     	;# 
  8197  0E32                     	;# 
  8198  0E33                     	;# 
  8199  0E34                     	;# 
  8200  0E35                     	;# 
  8201  0E36                     	;# 
  8202  0E37                     	;# 
  8203  0E8F                     	;# 
  8204  0E90                     	;# 
  8205  0E91                     	;# 
  8206  0E92                     	;# 
  8207  0E93                     	;# 
  8208  0E94                     	;# 
  8209  0E95                     	;# 
  8210  0E96                     	;# 
  8211  0E97                     	;# 
  8212  0E9C                     	;# 
  8213  0E9D                     	;# 
  8214  0E9E                     	;# 
  8215  0EA1                     	;# 
  8216  0EA2                     	;# 
  8217  0EA3                     	;# 
  8218  0EA4                     	;# 
  8219  0EA5                     	;# 
  8220  0EA9                     	;# 
  8221  0EAA                     	;# 
  8222  0EAB                     	;# 
  8223  0EAC                     	;# 
  8224  0EB1                     	;# 
  8225  0EB2                     	;# 
  8226  0EB3                     	;# 
  8227  0EB8                     	;# 
  8228  0EB9                     	;# 
  8229  0EBA                     	;# 
  8230  0EBB                     	;# 
  8231  0EBC                     	;# 
  8232  0EBD                     	;# 
  8233  0EBE                     	;# 
  8234  0EC3                     	;# 
  8235  0EC5                     	;# 
  8236  0EC6                     	;# 
  8237  0EC7                     	;# 
  8238  0EC8                     	;# 
  8239  0EC9                     	;# 
  8240  0ECA                     	;# 
  8241  0ECB                     	;# 
  8242  0ECC                     	;# 
  8243  0F10                     	;# 
  8244  0F11                     	;# 
  8245  0F12                     	;# 
  8246  0F13                     	;# 
  8247  0F14                     	;# 
  8248  0F15                     	;# 
  8249  0F16                     	;# 
  8250  0F17                     	;# 
  8251  0F18                     	;# 
  8252  0F19                     	;# 
  8253  0F1A                     	;# 
  8254  0F1B                     	;# 
  8255  0F1C                     	;# 
  8256  0F1D                     	;# 
  8257  0F1E                     	;# 
  8258  0F1F                     	;# 
  8259  0F20                     	;# 
  8260  0F21                     	;# 
  8261  0F22                     	;# 
  8262  0F23                     	;# 
  8263  0F24                     	;# 
  8264  0F25                     	;# 
  8265  0F26                     	;# 
  8266  0F27                     	;# 
  8267  0F28                     	;# 
  8268  0F29                     	;# 
  8269  0F2A                     	;# 
  8270  0F2B                     	;# 
  8271  0F2C                     	;# 
  8272  0F2D                     	;# 
  8273  0F2E                     	;# 
  8274  0F2F                     	;# 
  8275  0F30                     	;# 
  8276  0F31                     	;# 
  8277  0F32                     	;# 
  8278  0F38                     	;# 
  8279  0F39                     	;# 
  8280  0F3A                     	;# 
  8281  0F3B                     	;# 
  8282  0F3C                     	;# 
  8283  0F3D                     	;# 
  8284  0F3E                     	;# 
  8285  0F3F                     	;# 
  8286  0F40                     	;# 
  8287  0F41                     	;# 
  8288  0F43                     	;# 
  8289  0F44                     	;# 
  8290  0F45                     	;# 
  8291  0F46                     	;# 
  8292  0F47                     	;# 
  8293  0F48                     	;# 
  8294  0F49                     	;# 
  8295  0F4A                     	;# 
  8296  0F4B                     	;# 
  8297  0F4C                     	;# 
  8298  0F4E                     	;# 
  8299  0F4F                     	;# 
  8300  0F50                     	;# 
  8301  0F51                     	;# 
  8302  0F52                     	;# 
  8303  0F53                     	;# 
  8304  0F54                     	;# 
  8305  0F55                     	;# 
  8306  0F56                     	;# 
  8307  0F57                     	;# 
  8308  0F59                     	;# 
  8309  0F5A                     	;# 
  8310  0F5B                     	;# 
  8311  0F5C                     	;# 
  8312  0F5D                     	;# 
  8313  0F61                     	;# 
  8314  0F62                     	;# 
  8315  0F64                     	;# 
  8316  0F65                     	;# 
  8317  0F66                     	;# 
  8318  0F67                     	;# 
  8319  0F68                     	;# 
  8320  0F69                     	;# 
  8321  0F6A                     	;# 
  8322  0F6B                     	;# 
  8323  0F6C                     	;# 
  8324  0F6D                     	;# 
  8325  0FE4                     	;# 
  8326  0FE5                     	;# 
  8327  0FE6                     	;# 
  8328  0FE7                     	;# 
  8329  0FE8                     	;# 
  8330  0FE9                     	;# 
  8331  0FEA                     	;# 
  8332  0FEB                     	;# 
  8333  0FED                     	;# 
  8334  0FEE                     	;# 
  8335  0FEF                     	;# 
  8336  0000                     	;# 
  8337  0001                     	;# 
  8338  0002                     	;# 
  8339  0003                     	;# 
  8340  0004                     	;# 
  8341  0005                     	;# 
  8342  0006                     	;# 
  8343  0007                     	;# 
  8344  0008                     	;# 
  8345  0009                     	;# 
  8346  000A                     	;# 
  8347  000B                     	;# 
  8348  000C                     	;# 
  8349  000D                     	;# 
  8350  000E                     	;# 
  8351  000F                     	;# 
  8352  0010                     	;# 
  8353  0011                     	;# 
  8354  0012                     	;# 
  8355  0013                     	;# 
  8356  0014                     	;# 
  8357  0015                     	;# 
  8358  0016                     	;# 
  8359  0017                     	;# 
  8360  0018                     	;# 
  8361  0019                     	;# 
  8362  001A                     	;# 
  8363  001C                     	;# 
  8364  001C                     	;# 
  8365  001D                     	;# 
  8366  001D                     	;# 
  8367  001E                     	;# 
  8368  001F                     	;# 
  8369  008C                     	;# 
  8370  008C                     	;# 
  8371  008D                     	;# 
  8372  008E                     	;# 
  8373  008E                     	;# 
  8374  008F                     	;# 
  8375  0090                     	;# 
  8376  0090                     	;# 
  8377  0091                     	;# 
  8378  0093                     	;# 
  8379  0094                     	;# 
  8380  0095                     	;# 
  8381  0096                     	;# 
  8382  0097                     	;# 
  8383  0098                     	;# 
  8384  0099                     	;# 
  8385  009A                     	;# 
  8386  009B                     	;# 
  8387  009C                     	;# 
  8388  009D                     	;# 
  8389  009E                     	;# 
  8390  010C                     	;# 
  8391  010D                     	;# 
  8392  010E                     	;# 
  8393  010E                     	;# 
  8394  010F                     	;# 
  8395  0110                     	;# 
  8396  0110                     	;# 
  8397  0111                     	;# 
  8398  0112                     	;# 
  8399  0112                     	;# 
  8400  0113                     	;# 
  8401  0114                     	;# 
  8402  0114                     	;# 
  8403  0115                     	;# 
  8404  0116                     	;# 
  8405  0116                     	;# 
  8406  0117                     	;# 
  8407  0119                     	;# 
  8408  0119                     	;# 
  8409  0119                     	;# 
  8410  011A                     	;# 
  8411  011A                     	;# 
  8412  011A                     	;# 
  8413  011B                     	;# 
  8414  011B                     	;# 
  8415  011B                     	;# 
  8416  011B                     	;# 
  8417  011B                     	;# 
  8418  011C                     	;# 
  8419  011C                     	;# 
  8420  011C                     	;# 
  8421  011D                     	;# 
  8422  011D                     	;# 
  8423  011D                     	;# 
  8424  011E                     	;# 
  8425  011E                     	;# 
  8426  011E                     	;# 
  8427  011F                     	;# 
  8428  011F                     	;# 
  8429  011F                     	;# 
  8430  011F                     	;# 
  8431  011F                     	;# 
  8432  018C                     	;# 
  8433  018D                     	;# 
  8434  018E                     	;# 
  8435  018F                     	;# 
  8436  0190                     	;# 
  8437  0191                     	;# 
  8438  0192                     	;# 
  8439  0196                     	;# 
  8440  0197                     	;# 
  8441  0198                     	;# 
  8442  0199                     	;# 
  8443  019A                     	;# 
  8444  019B                     	;# 
  8445  019C                     	;# 
  8446  020C                     	;# 
  8447  020C                     	;# 
  8448  020D                     	;# 
  8449  020E                     	;# 
  8450  020F                     	;# 
  8451  020F                     	;# 
  8452  0210                     	;# 
  8453  0210                     	;# 
  8454  0211                     	;# 
  8455  0211                     	;# 
  8456  0212                     	;# 
  8457  0212                     	;# 
  8458  0213                     	;# 
  8459  0214                     	;# 
  8460  0215                     	;# 
  8461  0215                     	;# 
  8462  0216                     	;# 
  8463  0216                     	;# 
  8464  0217                     	;# 
  8465  0217                     	;# 
  8466  0218                     	;# 
  8467  0218                     	;# 
  8468  0219                     	;# 
  8469  021A                     	;# 
  8470  021B                     	;# 
  8471  021B                     	;# 
  8472  021C                     	;# 
  8473  021C                     	;# 
  8474  021D                     	;# 
  8475  021D                     	;# 
  8476  021E                     	;# 
  8477  021F                     	;# 
  8478  028C                     	;# 
  8479  028C                     	;# 
  8480  028D                     	;# 
  8481  028D                     	;# 
  8482  028E                     	;# 
  8483  028F                     	;# 
  8484  0290                     	;# 
  8485  0290                     	;# 
  8486  0291                     	;# 
  8487  0292                     	;# 
  8488  0292                     	;# 
  8489  0293                     	;# 
  8490  0293                     	;# 
  8491  0294                     	;# 
  8492  0295                     	;# 
  8493  0296                     	;# 
  8494  0296                     	;# 
  8495  0297                     	;# 
  8496  0298                     	;# 
  8497  0298                     	;# 
  8498  0299                     	;# 
  8499  0299                     	;# 
  8500  029A                     	;# 
  8501  029B                     	;# 
  8502  029C                     	;# 
  8503  029C                     	;# 
  8504  029D                     	;# 
  8505  030C                     	;# 
  8506  030C                     	;# 
  8507  030D                     	;# 
  8508  030E                     	;# 
  8509  030F                     	;# 
  8510  0310                     	;# 
  8511  0310                     	;# 
  8512  0311                     	;# 
  8513  0312                     	;# 
  8514  0313                     	;# 
  8515  0314                     	;# 
  8516  0314                     	;# 
  8517  0315                     	;# 
  8518  0316                     	;# 
  8519  0317                     	;# 
  8520  0318                     	;# 
  8521  0318                     	;# 
  8522  0319                     	;# 
  8523  031A                     	;# 
  8524  031B                     	;# 
  8525  031C                     	;# 
  8526  031C                     	;# 
  8527  031D                     	;# 
  8528  031E                     	;# 
  8529  031F                     	;# 
  8530  038C                     	;# 
  8531  038C                     	;# 
  8532  038D                     	;# 
  8533  038E                     	;# 
  8534  0390                     	;# 
  8535  0390                     	;# 
  8536  0391                     	;# 
  8537  0392                     	;# 
  8538  040C                     	;# 
  8539  040D                     	;# 
  8540  040E                     	;# 
  8541  040F                     	;# 
  8542  0410                     	;# 
  8543  0411                     	;# 
  8544  0416                     	;# 
  8545  0416                     	;# 
  8546  0417                     	;# 
  8547  0418                     	;# 
  8548  0418                     	;# 
  8549  0419                     	;# 
  8550  041A                     	;# 
  8551  041A                     	;# 
  8552  041B                     	;# 
  8553  041C                     	;# 
  8554  041C                     	;# 
  8555  041D                     	;# 
  8556  041E                     	;# 
  8557  041F                     	;# 
  8558  048C                     	;# 
  8559  048C                     	;# 
  8560  048D                     	;# 
  8561  048E                     	;# 
  8562  048F                     	;# 
  8563  048F                     	;# 
  8564  0490                     	;# 
  8565  0491                     	;# 
  8566  0492                     	;# 
  8567  0492                     	;# 
  8568  0493                     	;# 
  8569  0494                     	;# 
  8570  0495                     	;# 
  8571  0495                     	;# 
  8572  0496                     	;# 
  8573  0497                     	;# 
  8574  0498                     	;# 
  8575  0499                     	;# 
  8576  049A                     	;# 
  8577  049B                     	;# 
  8578  049C                     	;# 
  8579  049D                     	;# 
  8580  050C                     	;# 
  8581  050C                     	;# 
  8582  050D                     	;# 
  8583  050E                     	;# 
  8584  050F                     	;# 
  8585  050F                     	;# 
  8586  0510                     	;# 
  8587  0511                     	;# 
  8588  0512                     	;# 
  8589  0512                     	;# 
  8590  0513                     	;# 
  8591  0514                     	;# 
  8592  0515                     	;# 
  8593  0515                     	;# 
  8594  0516                     	;# 
  8595  0517                     	;# 
  8596  0518                     	;# 
  8597  0519                     	;# 
  8598  051A                     	;# 
  8599  051B                     	;# 
  8600  051C                     	;# 
  8601  051D                     	;# 
  8602  058C                     	;# 
  8603  058C                     	;# 
  8604  058D                     	;# 
  8605  058E                     	;# 
  8606  058F                     	;# 
  8607  058F                     	;# 
  8608  0590                     	;# 
  8609  0591                     	;# 
  8610  0592                     	;# 
  8611  0593                     	;# 
  8612  060C                     	;# 
  8613  060D                     	;# 
  8614  060E                     	;# 
  8615  060F                     	;# 
  8616  0610                     	;# 
  8617  0611                     	;# 
  8618  0612                     	;# 
  8619  0613                     	;# 
  8620  0614                     	;# 
  8621  0616                     	;# 
  8622  0617                     	;# 
  8623  0618                     	;# 
  8624  0619                     	;# 
  8625  061A                     	;# 
  8626  061B                     	;# 
  8627  061C                     	;# 
  8628  061D                     	;# 
  8629  061E                     	;# 
  8630  068C                     	;# 
  8631  068D                     	;# 
  8632  068E                     	;# 
  8633  068F                     	;# 
  8634  0690                     	;# 
  8635  0691                     	;# 
  8636  0692                     	;# 
  8637  0693                     	;# 
  8638  0694                     	;# 
  8639  070C                     	;# 
  8640  070D                     	;# 
  8641  070E                     	;# 
  8642  070F                     	;# 
  8643  0710                     	;# 
  8644  0711                     	;# 
  8645  0712                     	;# 
  8646  0713                     	;# 
  8647  0714                     	;# 
  8648  0716                     	;# 
  8649  0717                     	;# 
  8650  0718                     	;# 
  8651  0719                     	;# 
  8652  071A                     	;# 
  8653  071B                     	;# 
  8654  071C                     	;# 
  8655  071D                     	;# 
  8656  071E                     	;# 
  8657  0796                     	;# 
  8658  0797                     	;# 
  8659  0798                     	;# 
  8660  0799                     	;# 
  8661  079A                     	;# 
  8662  079B                     	;# 
  8663  080C                     	;# 
  8664  080D                     	;# 
  8665  080E                     	;# 
  8666  080F                     	;# 
  8667  0810                     	;# 
  8668  0811                     	;# 
  8669  0812                     	;# 
  8670  0813                     	;# 
  8671  0814                     	;# 
  8672  081A                     	;# 
  8673  081B                     	;# 
  8674  081C                     	;# 
  8675  081D                     	;# 
  8676  081E                     	;# 
  8677  081F                     	;# 
  8678  088C                     	;# 
  8679  088D                     	;# 
  8680  088E                     	;# 
  8681  088F                     	;# 
  8682  0890                     	;# 
  8683  0891                     	;# 
  8684  0892                     	;# 
  8685  0893                     	;# 
  8686  0895                     	;# 
  8687  0896                     	;# 
  8688  0897                     	;# 
  8689  0898                     	;# 
  8690  0899                     	;# 
  8691  089A                     	;# 
  8692  089B                     	;# 
  8693  090C                     	;# 
  8694  090E                     	;# 
  8695  090F                     	;# 
  8696  091F                     	;# 
  8697  091F                     	;# 
  8698  098F                     	;# 
  8699  098F                     	;# 
  8700  0990                     	;# 
  8701  0991                     	;# 
  8702  0992                     	;# 
  8703  0993                     	;# 
  8704  0994                     	;# 
  8705  0995                     	;# 
  8706  0996                     	;# 
  8707  0997                     	;# 
  8708  0E0F                     	;# 
  8709  0E10                     	;# 
  8710  0E11                     	;# 
  8711  0E12                     	;# 
  8712  0E13                     	;# 
  8713  0E14                     	;# 
  8714  0E15                     	;# 
  8715  0E16                     	;# 
  8716  0E17                     	;# 
  8717  0E18                     	;# 
  8718  0E19                     	;# 
  8719  0E1A                     	;# 
  8720  0E1B                     	;# 
  8721  0E1C                     	;# 
  8722  0E1D                     	;# 
  8723  0E1E                     	;# 
  8724  0E1F                     	;# 
  8725  0E20                     	;# 
  8726  0E21                     	;# 
  8727  0E22                     	;# 
  8728  0E23                     	;# 
  8729  0E24                     	;# 
  8730  0E25                     	;# 
  8731  0E26                     	;# 
  8732  0E27                     	;# 
  8733  0E28                     	;# 
  8734  0E29                     	;# 
  8735  0E2A                     	;# 
  8736  0E2B                     	;# 
  8737  0E2C                     	;# 
  8738  0E2D                     	;# 
  8739  0E2E                     	;# 
  8740  0E2F                     	;# 
  8741  0E30                     	;# 
  8742  0E31                     	;# 
  8743  0E32                     	;# 
  8744  0E33                     	;# 
  8745  0E34                     	;# 
  8746  0E35                     	;# 
  8747  0E36                     	;# 
  8748  0E37                     	;# 
  8749  0E8F                     	;# 
  8750  0E90                     	;# 
  8751  0E91                     	;# 
  8752  0E92                     	;# 
  8753  0E93                     	;# 
  8754  0E94                     	;# 
  8755  0E95                     	;# 
  8756  0E96                     	;# 
  8757  0E97                     	;# 
  8758  0E9C                     	;# 
  8759  0E9D                     	;# 
  8760  0E9E                     	;# 
  8761  0EA1                     	;# 
  8762  0EA2                     	;# 
  8763  0EA3                     	;# 
  8764  0EA4                     	;# 
  8765  0EA5                     	;# 
  8766  0EA9                     	;# 
  8767  0EAA                     	;# 
  8768  0EAB                     	;# 
  8769  0EAC                     	;# 
  8770  0EB1                     	;# 
  8771  0EB2                     	;# 
  8772  0EB3                     	;# 
  8773  0EB8                     	;# 
  8774  0EB9                     	;# 
  8775  0EBA                     	;# 
  8776  0EBB                     	;# 
  8777  0EBC                     	;# 
  8778  0EBD                     	;# 
  8779  0EBE                     	;# 
  8780  0EC3                     	;# 
  8781  0EC5                     	;# 
  8782  0EC6                     	;# 
  8783  0EC7                     	;# 
  8784  0EC8                     	;# 
  8785  0EC9                     	;# 
  8786  0ECA                     	;# 
  8787  0ECB                     	;# 
  8788  0ECC                     	;# 
  8789  0F10                     	;# 
  8790  0F11                     	;# 
  8791  0F12                     	;# 
  8792  0F13                     	;# 
  8793  0F14                     	;# 
  8794  0F15                     	;# 
  8795  0F16                     	;# 
  8796  0F17                     	;# 
  8797  0F18                     	;# 
  8798  0F19                     	;# 
  8799  0F1A                     	;# 
  8800  0F1B                     	;# 
  8801  0F1C                     	;# 
  8802  0F1D                     	;# 
  8803  0F1E                     	;# 
  8804  0F1F                     	;# 
  8805  0F20                     	;# 
  8806  0F21                     	;# 
  8807  0F22                     	;# 
  8808  0F23                     	;# 
  8809  0F24                     	;# 
  8810  0F25                     	;# 
  8811  0F26                     	;# 
  8812  0F27                     	;# 
  8813  0F28                     	;# 
  8814  0F29                     	;# 
  8815  0F2A                     	;# 
  8816  0F2B                     	;# 
  8817  0F2C                     	;# 
  8818  0F2D                     	;# 
  8819  0F2E                     	;# 
  8820  0F2F                     	;# 
  8821  0F30                     	;# 
  8822  0F31                     	;# 
  8823  0F32                     	;# 
  8824  0F38                     	;# 
  8825  0F39                     	;# 
  8826  0F3A                     	;# 
  8827  0F3B                     	;# 
  8828  0F3C                     	;# 
  8829  0F3D                     	;# 
  8830  0F3E                     	;# 
  8831  0F3F                     	;# 
  8832  0F40                     	;# 
  8833  0F41                     	;# 
  8834  0F43                     	;# 
  8835  0F44                     	;# 
  8836  0F45                     	;# 
  8837  0F46                     	;# 
  8838  0F47                     	;# 
  8839  0F48                     	;# 
  8840  0F49                     	;# 
  8841  0F4A                     	;# 
  8842  0F4B                     	;# 
  8843  0F4C                     	;# 
  8844  0F4E                     	;# 
  8845  0F4F                     	;# 
  8846  0F50                     	;# 
  8847  0F51                     	;# 
  8848  0F52                     	;# 
  8849  0F53                     	;# 
  8850  0F54                     	;# 
  8851  0F55                     	;# 
  8852  0F56                     	;# 
  8853  0F57                     	;# 
  8854  0F59                     	;# 
  8855  0F5A                     	;# 
  8856  0F5B                     	;# 
  8857  0F5C                     	;# 
  8858  0F5D                     	;# 
  8859  0F61                     	;# 
  8860  0F62                     	;# 
  8861  0F64                     	;# 
  8862  0F65                     	;# 
  8863  0F66                     	;# 
  8864  0F67                     	;# 
  8865  0F68                     	;# 
  8866  0F69                     	;# 
  8867  0F6A                     	;# 
  8868  0F6B                     	;# 
  8869  0F6C                     	;# 
  8870  0F6D                     	;# 
  8871  0FE4                     	;# 
  8872  0FE5                     	;# 
  8873  0FE6                     	;# 
  8874  0FE7                     	;# 
  8875  0FE8                     	;# 
  8876  0FE9                     	;# 
  8877  0FEA                     	;# 
  8878  0FEB                     	;# 
  8879  0FED                     	;# 
  8880  0FEE                     	;# 
  8881  0FEF                     	;# 
  8882                           
  8883                           	psect	stringtext1
  8884  1000                     __pstringtext1:	
  8885  1000                     _fsmStateTable:	
  8886  1000  346B               	retlw	low _do_I2C_IDLE
  8887  1001  340B               	retlw	high _do_I2C_IDLE
  8888  1002  34E7               	retlw	low _do_I2C_SEND_ADR_READ
  8889  1003  340B               	retlw	high _do_I2C_SEND_ADR_READ
  8890  1004  34CF               	retlw	low _do_I2C_SEND_ADR_WRITE
  8891  1005  340B               	retlw	high _do_I2C_SEND_ADR_WRITE
  8892  1006  3460               	retlw	low _do_I2C_TX
  8893  1007  3406               	retlw	high _do_I2C_TX
  8894  1008  3406               	retlw	low _do_I2C_RX
  8895  1009  3407               	retlw	high _do_I2C_RX
  8896  100A  34B1               	retlw	low _do_I2C_RCEN
  8897  100B  340B               	retlw	high _do_I2C_RCEN
  8898  100C  3458               	retlw	low _do_I2C_TX_EMPTY
  8899  100D  340F               	retlw	high _do_I2C_TX_EMPTY
  8900  100E  3470               	retlw	low _do_I2C_SEND_RESTART_READ
  8901  100F  340B               	retlw	high _do_I2C_SEND_RESTART_READ
  8902  1010  3475               	retlw	low _do_I2C_SEND_RESTART_WRITE
  8903  1011  340B               	retlw	high _do_I2C_SEND_RESTART_WRITE
  8904  1012  347A               	retlw	low _do_I2C_SEND_RESTART
  8905  1013  340B               	retlw	high _do_I2C_SEND_RESTART
  8906  1014  347F               	retlw	low _do_I2C_SEND_STOP
  8907  1015  340B               	retlw	high _do_I2C_SEND_STOP
  8908  1016  3484               	retlw	low _do_I2C_DO_ACK
  8909  1017  340B               	retlw	high _do_I2C_DO_ACK
  8910  1018  3489               	retlw	low _do_I2C_DO_NACK_STOP
  8911  1019  340B               	retlw	high _do_I2C_DO_NACK_STOP
  8912  101A  348E               	retlw	low _do_I2C_DO_NACK_RESTART
  8913  101B  340B               	retlw	high _do_I2C_DO_NACK_RESTART
  8914  101C  34C7               	retlw	low _do_I2C_RESET
  8915  101D  340B               	retlw	high _do_I2C_RESET
  8916  101E  342C               	retlw	low _do_I2C_DO_ADDRESS_NACK
  8917  101F  340F               	retlw	high _do_I2C_DO_ADDRESS_NACK
  8918  1020                     __end_of_fsmStateTable:	
  8919                           
  8920                           	psect	bitnvCOMMON
  8921  03E8                     __pbitnvCOMMON:	
  8922  03E8                     _running:	
  8923  03E8                     	ds	1
  8924  0018                     _LATCbits	set	24
  8925  0016                     _LATAbits	set	22
  8926  001E                     _T0CON0bits	set	30
  8927  001E                     _T0CON0	set	30
  8928  001C                     _TMR0L	set	28
  8929  001D                     _TMR0H	set	29
  8930  001F                     _T0CON1	set	31
  8931  0014                     _TRISD	set	20
  8932  0013                     _TRISC	set	19
  8933  0012                     _TRISB	set	18
  8934  0011                     _TRISA	set	17
  8935  0015                     _TRISE	set	21
  8936  0018                     _LATC	set	24
  8937  0017                     _LATB	set	23
  8938  0016                     _LATA	set	22
  8939  0019                     _LATD	set	25
  8940  001A                     _LATE	set	26
  8941  000B                     _INTCONbits	set	11
  8942  0013                     _TRISCbits	set	19
  8943  0094                     _ADCON1bits	set	148
  8944  008E                     _ADPREVL	set	142
  8945  008F                     _ADPREVH	set	143
  8946  0097                     _ADSTATbits	set	151
  8947  0090                     _ADACCL	set	144
  8948  0091                     _ADACCH	set	145
  8949  0095                     _ADCON2bits	set	149
  8950  009C                     _ADPRE	set	156
  8951  0096                     _ADCON3bits	set	150
  8952  008C                     _ADRESL	set	140
  8953  008D                     _ADRESH	set	141
  8954  0093                     _ADCON0bits	set	147
  8955  009D                     _ADACQ	set	157
  8956  0093                     _ADCON0	set	147
  8957  0098                     _ADCLK	set	152
  8958  0099                     _ADACT	set	153
  8959  009A                     _ADREF	set	154
  8960  0097                     _ADSTAT	set	151
  8961  0096                     _ADCON3	set	150
  8962  0095                     _ADCON2	set	149
  8963  0094                     _ADCON1	set	148
  8964  009B                     _ADCAP	set	155
  8965  009E                     _ADPCH	set	158
  8966  0116                     _ADERRL	set	278
  8967  0117                     _ADERRH	set	279
  8968  0114                     _ADFLTRL	set	276
  8969  0115                     _ADFLTRH	set	277
  8970  010C                     _ADCNT	set	268
  8971  010D                     _ADRPT	set	269
  8972  0113                     _ADSTPTH	set	275
  8973  0112                     _ADSTPTL	set	274
  8974  0111                     _ADUTHH	set	273
  8975  0110                     _ADUTHL	set	272
  8976  010F                     _ADLTHH	set	271
  8977  010E                     _ADLTHL	set	270
  8978  018E                     _SSP1MSK	set	398
  8979  018D                     _SSP1ADD	set	397
  8980  018F                     _SSP1STAT	set	399
  8981  0190                     _SSP1CON1bits	set	400
  8982  018C                     _SSP1BUF	set	396
  8983  0190                     _SSP1CON1	set	400
  8984  0191                     _SSP1CON2bits	set	401
  8985  018F                     _SSP1STATbits	set	399
  8986  0191                     _SSP1CON2	set	401
  8987  021F                     _CCPTMRS1bits	set	543
  8988  020F                     _T1GCONbits	set	527
  8989  020E                     _T1CONbits	set	526
  8990  020E                     _T1CON	set	526
  8991  020C                     _TMR1L	set	524
  8992  020D                     _TMR1H	set	525
  8993  0211                     _T1CLK	set	529
  8994  0210                     _T1GATE	set	528
  8995  020F                     _T1GCON	set	527
  8996  028D                     _PR2	set	653
  8997  028C                     _TMR2	set	652
  8998  028E                     _T2CONbits	set	654
  8999  0291                     _T2RSTbits	set	657
  9000  028F                     _T2HLTbits	set	655
  9001  028E                     _T2CON	set	654
  9002  028C                     _T2TMR	set	652
  9003  028D                     _T2PR	set	653
  9004  0291                     _T2RST	set	657
  9005  028F                     _T2HLT	set	655
  9006  0290                     _T2CLKCON	set	656
  9007  038C                     _PWM6DCL	set	908
  9008  038D                     _PWM6DCH	set	909
  9009  038E                     _PWM6CON	set	910
  9010  0719                     _PIE3bits	set	1817
  9011  070C                     _PIR0bits	set	1804
  9012  0716                     _PIE0bits	set	1814
  9013  071A                     _PIE4bits	set	1818
  9014  0710                     _PIR4bits	set	1808
  9015  070F                     _PIR3bits	set	1807
  9016  079B                     _PMD5	set	1947
  9017  079A                     _PMD4	set	1946
  9018  0799                     _PMD3	set	1945
  9019  0798                     _PMD2	set	1944
  9020  0797                     _PMD1	set	1943
  9021  0796                     _PMD0	set	1942
  9022  081F                     _NVMCON2	set	2079
  9023  081C                     _NVMDATL	set	2076
  9024  081D                     _NVMDATH	set	2077
  9025  081E                     _NVMCON1bits	set	2078
  9026  081B                     _NVMADRH	set	2075
  9027  081A                     _NVMADRL	set	2074
  9028  0892                     _OSCTUNE	set	2194
  9029  0893                     _OSCFRQ	set	2195
  9030  0891                     _OSCEN	set	2193
  9031  088F                     _OSCCON3	set	2191
  9032  088D                     _OSCCON1	set	2189
  9033  0EC6                     _SSP1DATPPS	set	3782
  9034  0EC5                     _SSP1CLKPPS	set	3781
  9035  0E90                     _INTPPS	set	3728
  9036  0F16                     _RA6PPS	set	3862
  9037  0F24                     _RC4PPS	set	3876
  9038  0F23                     _RC3PPS	set	3875
  9039  0F68                     _INLVLE	set	3944
  9040  0F5D                     _INLVLD	set	3933
  9041  0F52                     _INLVLC	set	3922
  9042  0F47                     _INLVLB	set	3911
  9043  0F3C                     _INLVLA	set	3900
  9044  0F67                     _SLRCONE	set	3943
  9045  0F5C                     _SLRCOND	set	3932
  9046  0F51                     _SLRCONC	set	3921
  9047  0F46                     _SLRCONB	set	3910
  9048  0F3B                     _SLRCONA	set	3899
  9049  0F5B                     _ODCOND	set	3931
  9050  0F50                     _ODCONC	set	3920
  9051  0F45                     _ODCONB	set	3909
  9052  0F3A                     _ODCONA	set	3898
  9053  0F66                     _ODCONE	set	3942
  9054  0F4F                     _WPUC	set	3919
  9055  0F39                     _WPUA	set	3897
  9056  0F44                     _WPUB	set	3908
  9057  0F65                     _WPUE	set	3941
  9058  0F5A                     _WPUD	set	3930
  9059  0F38                     _ANSELA	set	3896
  9060  0F64                     _ANSELE	set	3940
  9061  0F43                     _ANSELB	set	3907
  9062  0F4E                     _ANSELC	set	3918
  9063  0F59                     _ANSELD	set	3929
  9064  7A7C                     _WPUC4	set	31356
  9065  7A7B                     _WPUC3	set	31355
  9066                           
  9067                           ; #config settings
  9068  0000                     
  9069                           	psect	cinit
  9070  0051                     start_initialization:	
  9071  0051                     __initialization:	
  9072                           
  9073                           ; Clear objects allocated to BITCOMMON
  9074  0051  01F7               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  9075                           
  9076                           ; Clear objects allocated to COMMON
  9077  0052  01F8               	clrf	__pbssCOMMON& (0+127)
  9078  0053  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  9079  0054  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  9080  0055  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  9081  0056  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  9082                           
  9083                           ; Clear objects allocated to BANK0
  9084  0057  3020               	movlw	low __pbssBANK0
  9085  0058  0084               	movwf	4
  9086  0059  3000               	movlw	high __pbssBANK0
  9087  005A  0085               	movwf	5
  9088  005B  3024               	movlw	36
  9089  005C  318B  23AB  3180   	fcall	clear_ram0
  9090                           
  9091                           ; Clear objects allocated to BANK1
  9092  005F  30A0               	movlw	low __pbssBANK1
  9093  0060  0084               	movwf	4
  9094  0061  3000               	movlw	high __pbssBANK1
  9095  0062  0085               	movwf	5
  9096  0063  301D               	movlw	29
  9097  0064  318B  23AB  3180   	fcall	clear_ram0
  9098  0067                     end_of_initialization:	
  9099                           ;End of C runtime variable initialization code
  9100                           
  9101  0067                     __end_of__initialization:	
  9102  0067  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9103  0068  0020               	movlb	0
  9104  0069  3180  286B         	ljmp	_main	;jump to C main() function
  9105                           
  9106                           	psect	bitbssCOMMON
  9107  03B8                     __pbitbssCOMMON:	
  9108  03B8                     _config_mode:	
  9109  03B8                     	ds	1
  9110  03B9                     _alarm:	
  9111  03B9                     	ds	1
  9112  03BA                     _s2_pressed:	
  9113  03BA                     	ds	1
  9114  03BB                     _s1_pressed:	
  9115  03BB                     	ds	1
  9116  03BC                     _half:	
  9117  03BC                     	ds	1
  9118                           
  9119                           	psect	bssCOMMON
  9120  0078                     __pbssCOMMON:	
  9121  0078                     _ms:	
  9122  0078                     	ds	2
  9123  007A                     _delta10ms_2:	
  9124  007A                     	ds	1
  9125  007B                     _last3000ms:	
  9126  007B                     	ds	1
  9127  007C                     _duty_cycle:	
  9128  007C                     	ds	1
  9129                           
  9130                           	psect	bssBANK0
  9131  0020                     __pbssBANK0:	
  9132  0020                     _TMR0_InterruptHandler:	
  9133  0020                     	ds	2
  9134  0022                     _INT_InterruptHandler:	
  9135  0022                     	ds	2
  9136  0024                     _TMR1_InterruptHandler:	
  9137  0024                     	ds	2
  9138  0026                     _timer1ReloadVal:	
  9139  0026                     	ds	2
  9140  0028                     _i2c1_driver_i2cISR:	
  9141  0028                     	ds	2
  9142  002A                     _i2c1_driver_busCollisionISR:	
  9143  002A                     	ds	2
  9144  002C                     _aux1:	
  9145  002C                     	ds	1
  9146  002D                     _aux:	
  9147  002D                     	ds	1
  9148  002E                     _tala:	
  9149  002E                     	ds	1
  9150  002F                     _alaf:	
  9151  002F                     	ds	1
  9152  0030                     _alal:	
  9153  0030                     	ds	1
  9154  0031                     _lum_bin:	
  9155  0031                     	ds	1
  9156  0032                     _alat:	
  9157  0032                     	ds	1
  9158  0033                     _temp:	
  9159  0033                     	ds	1
  9160  0034                     _pmon:	
  9161  0034                     	ds	1
  9162  0035                     _nreg:	
  9163  0035                     	ds	1
  9164  0036                     _select_mode:	
  9165  0036                     	ds	1
  9166  0037                     _delta10ms:	
  9167  0037                     	ds	1
  9168  0038                     _last1m:	
  9169  0038                     	ds	1
  9170  0039                     _last5s:	
  9171  0039                     	ds	1
  9172  003A                     _seg:	
  9173  003A                     	ds	1
  9174  003B                     _clkm:	
  9175  003B                     	ds	1
  9176  003C                     _clkh:	
  9177  003C                     	ds	1
  9178  003D                     _ring_byte:	
  9179  003D                     	ds	5
  9180  0042                     _nreg_init:	
  9181  0042                     	ds	1
  9182  0043                     _nreg_pt:	
  9183  0043                     	ds	1
  9184                           
  9185                           	psect	bssBANK1
  9186  00A0                     __pbssBANK1:	
  9187  00A0                     _i2c_status:	
  9188  00A0                     	ds	29
  9189                           
  9190                           	psect	clrtext
  9191  0BAB                     clear_ram0:	
  9192                           ;	Called with FSR0 containing the base address, and
  9193                           ;	WREG with the size to clear
  9194                           
  9195  0BAB  0064               	clrwdt	;clear the watchdog before getting into this loop
  9196  0BAC                     clrloop0:	
  9197  0BAC  0180               	clrf	0	;clear RAM location pointed to by FSR
  9198  0BAD  3101               	addfsr 0,1
  9199  0BAE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  9200  0BAF  2BAC               	goto	clrloop0	;have we reached the end yet?
  9201  0BB0  3400               	retlw	0	;all done for this memory range, return
  9202                           
  9203                           	psect	cstackCOMMON
  9204  0070                     __pcstackCOMMON:	
  9205  0070                     ?_i2c1_driver_open:	
  9206  0070                     ?_i2c1_driver_isNACK:	
  9207                           ; 1 bit 
  9208                           
  9209  0070                     ?_WriteI2C:	
  9210                           ; 1 bit 
  9211                           
  9212  0070                     ?_ReadI2C:	
  9213                           ; 1 bytes @ 0x0
  9214                           
  9215  0070                     ?_setCallBack:	
  9216                           ; 1 bytes @ 0x0
  9217                           
  9218  0070                     ?_mssp1_clearIRQ:	
  9219                           ; 1 bytes @ 0x0
  9220                           
  9221  0070                     ??_mssp1_clearIRQ:	
  9222                           ; 1 bytes @ 0x0
  9223                           
  9224  0070                     ?_i2c_busCollisionISR:	
  9225                           ; 1 bytes @ 0x0
  9226                           
  9227  0070                     ??_i2c_busCollisionISR:	
  9228                           ; 1 bytes @ 0x0
  9229                           
  9230  0070                     ?_i2c_ISR:	
  9231                           ; 1 bytes @ 0x0
  9232                           
  9233  0070                     ?_i2c1_driver_resetBus:	
  9234                           ; 1 bytes @ 0x0
  9235                           
  9236  0070                     ??_i2c1_driver_resetBus:	
  9237                           ; 1 bytes @ 0x0
  9238                           
  9239  0070                     ?_i2c1_driver_restart:	
  9240                           ; 1 bytes @ 0x0
  9241                           
  9242  0070                     ??_i2c1_driver_restart:	
  9243                           ; 1 bytes @ 0x0
  9244                           
  9245  0070                     ?_i2c1_driver_stop:	
  9246                           ; 1 bytes @ 0x0
  9247                           
  9248  0070                     ??_i2c1_driver_stop:	
  9249                           ; 1 bytes @ 0x0
  9250                           
  9251  0070                     ?_i2c1_driver_TXData:	
  9252                           ; 1 bytes @ 0x0
  9253                           
  9254  0070                     ??_i2c1_driver_TXData:	
  9255                           ; 1 bytes @ 0x0
  9256                           
  9257  0070                     ?_i2c1_driver_startRX:	
  9258                           ; 1 bytes @ 0x0
  9259                           
  9260  0070                     ??_i2c1_driver_startRX:	
  9261                           ; 1 bytes @ 0x0
  9262                           
  9263  0070                     ?_i2c1_driver_sendACK:	
  9264                           ; 1 bytes @ 0x0
  9265                           
  9266  0070                     ??_i2c1_driver_sendACK:	
  9267                           ; 1 bytes @ 0x0
  9268                           
  9269  0070                     ?_i2c1_driver_sendNACK:	
  9270                           ; 1 bytes @ 0x0
  9271                           
  9272  0070                     ??_i2c1_driver_sendNACK:	
  9273                           ; 1 bytes @ 0x0
  9274                           
  9275  0070                     ??_i2c1_driver_isNACK:	
  9276                           ; 1 bytes @ 0x0
  9277                           
  9278  0070                     ?_i2c1_driver_getRXData:	
  9279                           ; 1 bytes @ 0x0
  9280                           
  9281  0070                     ??_i2c1_driver_getRXData:	
  9282                           ; 1 bytes @ 0x0
  9283                           
  9284  0070                     ?_mssp1_setIRQ:	
  9285                           ; 1 bytes @ 0x0
  9286                           
  9287  0070                     ??_mssp1_setIRQ:	
  9288                           ; 1 bytes @ 0x0
  9289                           
  9290  0070                     ?_i2c1_driver_clearBusCollision:	
  9291                           ; 1 bytes @ 0x0
  9292                           
  9293  0070                     ??_i2c1_driver_clearBusCollision:	
  9294                           ; 1 bytes @ 0x0
  9295                           
  9296  0070                     ?_TMR1_DefaultInterruptHandler:	
  9297                           ; 1 bytes @ 0x0
  9298                           
  9299  0070                     ??_TMR1_DefaultInterruptHandler:	
  9300                           ; 1 bytes @ 0x0
  9301                           
  9302  0070                     ?_INT_ISR:	
  9303                           ; 1 bytes @ 0x0
  9304                           
  9305  0070                     ?_TMR0_ISR:	
  9306                           ; 1 bytes @ 0x0
  9307                           
  9308  0070                     ?_PMD_Initialize:	
  9309                           ; 1 bytes @ 0x0
  9310                           
  9311  0070                     ?_PIN_MANAGER_Initialize:	
  9312                           ; 1 bytes @ 0x0
  9313                           
  9314  0070                     ?_OSCILLATOR_Initialize:	
  9315                           ; 1 bytes @ 0x0
  9316                           
  9317  0070                     ?_PWM6_Initialize:	
  9318                           ; 1 bytes @ 0x0
  9319                           
  9320  0070                     ?_ADCC_Initialize:	
  9321                           ; 1 bytes @ 0x0
  9322                           
  9323  0070                     ?_TMR2_Initialize:	
  9324                           ; 1 bytes @ 0x0
  9325                           
  9326  0070                     ?_EXT_INT_Initialize:	
  9327                           ; 1 bytes @ 0x0
  9328                           
  9329  0070                     ?_TMR0_Initialize:	
  9330                           ; 1 bytes @ 0x0
  9331                           
  9332  0070                     ?_INT_CallBack:	
  9333                           ; 1 bytes @ 0x0
  9334                           
  9335  0070                     ?_TMR0_DefaultInterruptHandler:	
  9336                           ; 1 bytes @ 0x0
  9337                           
  9338  0070                     ??_TMR0_DefaultInterruptHandler:	
  9339                           ; 1 bytes @ 0x0
  9340                           
  9341  0070                     ?_cksum:	
  9342                           ; 1 bytes @ 0x0
  9343                           
  9344  0070                     ?_reset_recv:	
  9345                           ; 1 bytes @ 0x0
  9346                           
  9347  0070                     ?_cksum_w:	
  9348                           ; 1 bytes @ 0x0
  9349                           
  9350  0070                     ?_h_precisionclock:	
  9351                           ; 1 bytes @ 0x0
  9352                           
  9353  0070                     ?_h_clock:	
  9354                           ; 1 bytes @ 0x0
  9355                           
  9356  0070                     ?_sw1_EXT:	
  9357                           ; 1 bytes @ 0x0
  9358                           
  9359  0070                     ??_sw1_EXT:	
  9360                           ; 1 bytes @ 0x0
  9361                           
  9362  0070                     ?_Read_S1:	
  9363                           ; 1 bytes @ 0x0
  9364                           
  9365  0070                     ?_mod1_LED:	
  9366                           ; 1 bytes @ 0x0
  9367                           
  9368  0070                     ?_Read_S2:	
  9369                           ; 1 bytes @ 0x0
  9370                           
  9371  0070                     ?_mod2_LED:	
  9372                           ; 1 bytes @ 0x0
  9373                           
  9374  0070                     ?_mod3_LED:	
  9375                           ; 1 bytes @ 0x0
  9376                           
  9377  0070                     ?_mod4_LED:	
  9378                           ; 1 bytes @ 0x0
  9379                           
  9380  0070                     ?_update_clock:	
  9381                           ; 1 bytes @ 0x0
  9382                           
  9383  0070                     ??_update_clock:	
  9384                           ; 1 bytes @ 0x0
  9385                           
  9386  0070                     ?_I2C_Initialize:	
  9387                           ; 1 bytes @ 0x0
  9388                           
  9389  0070                     ?_tsttc:	
  9390                           ; 1 bytes @ 0x0
  9391                           
  9392  0070                     ?_i2c_setBuffer:	
  9393                           ; 1 bytes @ 0x0
  9394                           
  9395  0070                     ?_do_I2C_RESET:	
  9396                           ; 1 bytes @ 0x0
  9397                           
  9398  0070                     ??_do_I2C_RESET:	
  9399                           ; 1 bytes @ 0x0
  9400                           
  9401  0070                     ?_do_I2C_IDLE:	
  9402                           ; 1 bytes @ 0x0
  9403                           
  9404  0070                     ??_do_I2C_IDLE:	
  9405                           ; 1 bytes @ 0x0
  9406                           
  9407  0070                     ?_do_I2C_SEND_RESTART_READ:	
  9408                           ; 1 bytes @ 0x0
  9409                           
  9410  0070                     ??_do_I2C_SEND_RESTART_READ:	
  9411                           ; 1 bytes @ 0x0
  9412                           
  9413  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  9414                           ; 1 bytes @ 0x0
  9415                           
  9416  0070                     ??_do_I2C_SEND_RESTART_WRITE:	
  9417                           ; 1 bytes @ 0x0
  9418                           
  9419  0070                     ?_do_I2C_SEND_RESTART:	
  9420                           ; 1 bytes @ 0x0
  9421                           
  9422  0070                     ??_do_I2C_SEND_RESTART:	
  9423                           ; 1 bytes @ 0x0
  9424                           
  9425  0070                     ?_do_I2C_SEND_STOP:	
  9426                           ; 1 bytes @ 0x0
  9427                           
  9428  0070                     ??_do_I2C_SEND_STOP:	
  9429                           ; 1 bytes @ 0x0
  9430                           
  9431  0070                     ?_do_I2C_SEND_ADR_READ:	
  9432                           ; 1 bytes @ 0x0
  9433                           
  9434  0070                     ??_do_I2C_SEND_ADR_READ:	
  9435                           ; 1 bytes @ 0x0
  9436                           
  9437  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  9438                           ; 1 bytes @ 0x0
  9439                           
  9440  0070                     ?_do_I2C_RCEN:	
  9441                           ; 1 bytes @ 0x0
  9442                           
  9443  0070                     ??_do_I2C_RCEN:	
  9444                           ; 1 bytes @ 0x0
  9445                           
  9446  0070                     ?_do_I2C_DO_ACK:	
  9447                           ; 1 bytes @ 0x0
  9448                           
  9449  0070                     ??_do_I2C_DO_ACK:	
  9450                           ; 1 bytes @ 0x0
  9451                           
  9452  0070                     ?_do_I2C_DO_NACK_STOP:	
  9453                           ; 1 bytes @ 0x0
  9454                           
  9455  0070                     ??_do_I2C_DO_NACK_STOP:	
  9456                           ; 1 bytes @ 0x0
  9457                           
  9458  0070                     ?_do_I2C_DO_NACK_RESTART:	
  9459                           ; 1 bytes @ 0x0
  9460                           
  9461  0070                     ??_do_I2C_DO_NACK_RESTART:	
  9462                           ; 1 bytes @ 0x0
  9463                           
  9464  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  9465                           ; 1 bytes @ 0x0
  9466                           
  9467  0070                     ??_do_I2C_DO_ADDRESS_NACK:	
  9468                           ; 1 bytes @ 0x0
  9469                           
  9470  0070                     ?_do_I2C_TX:	
  9471                           ; 1 bytes @ 0x0
  9472                           
  9473  0070                     ?_do_I2C_RX:	
  9474                           ; 1 bytes @ 0x0
  9475                           
  9476  0070                     ??_do_I2C_RX:	
  9477                           ; 1 bytes @ 0x0
  9478                           
  9479  0070                     ?_do_I2C_TX_EMPTY:	
  9480                           ; 1 bytes @ 0x0
  9481                           
  9482  0070                     ??_do_I2C_TX_EMPTY:	
  9483                           ; 1 bytes @ 0x0
  9484                           
  9485  0070                     ?_TMR1_Initialize:	
  9486                           ; 1 bytes @ 0x0
  9487                           
  9488  0070                     ?_TMR1_WriteTimer:	
  9489                           ; 1 bytes @ 0x0
  9490                           
  9491  0070                     ?_TMR1_ISR:	
  9492                           ; 1 bytes @ 0x0
  9493                           
  9494  0070                     ?_INTERRUPT_InterruptManager:	
  9495                           ; 1 bytes @ 0x0
  9496                           
  9497  0070                     ?_SYSTEM_Initialize:	
  9498                           ; 1 bytes @ 0x0
  9499                           
  9500  0070                     ?_ADCC_StartConversion:	
  9501                           ; 1 bytes @ 0x0
  9502                           
  9503  0070                     ?_ADCC_IsConversionDone:	
  9504                           ; 1 bytes @ 0x0
  9505                           
  9506  0070                     ?_INT_DefaultInterruptHandler:	
  9507                           ; 1 bytes @ 0x0
  9508                           
  9509  0070                     ??_INT_DefaultInterruptHandler:	
  9510                           ; 1 bytes @ 0x0
  9511                           
  9512  0070                     ?_main:	
  9513                           ; 1 bytes @ 0x0
  9514                           
  9515  0070                     ?i1_PWM6_LoadDutyValue:	
  9516                           ; 1 bytes @ 0x0
  9517                           
  9518  0070                     i2c1_driver_TXData@d:	
  9519                           ; 1 bytes @ 0x0
  9520                           
  9521  0070                     i2c_setBuffer@bufferSize:	
  9522                           ; 1 bytes @ 0x0
  9523                           
  9524  0070                     setCallBack@cb:	
  9525                           ; 2 bytes @ 0x0
  9526                           
  9527  0070                     TMR1_WriteTimer@timerVal:	
  9528                           ; 2 bytes @ 0x0
  9529                           
  9530  0070                     i1PWM6_LoadDutyValue@dutyValue:	
  9531                           ; 2 bytes @ 0x0
  9532                           
  9533                           
  9534                           ; 2 bytes @ 0x0
  9535  0070                     	ds	1
  9536  0071                     ??_h_clock:	
  9537  0071                     ??_do_I2C_SEND_ADR_WRITE:	
  9538                           ; 1 bytes @ 0x1
  9539                           
  9540  0071                     ??_do_I2C_TX:	
  9541                           ; 1 bytes @ 0x1
  9542                           
  9543                           
  9544                           ; 1 bytes @ 0x1
  9545  0071                     	ds	1
  9546  0072                     ??_i2c_setBuffer:	
  9547  0072                     ??_TMR1_WriteTimer:	
  9548                           ; 1 bytes @ 0x2
  9549                           
  9550  0072                     ??_TMR1_ISR:	
  9551                           ; 1 bytes @ 0x2
  9552                           
  9553  0072                     ??i1_PWM6_LoadDutyValue:	
  9554                           ; 1 bytes @ 0x2
  9555                           
  9556  0072                     setCallBack@p:	
  9557                           ; 1 bytes @ 0x2
  9558                           
  9559                           
  9560                           ; 1 bytes @ 0x2
  9561  0072                     	ds	1
  9562  0073                     ??_setCallBack:	
  9563  0073                     ??_INT_ISR:	
  9564                           ; 1 bytes @ 0x3
  9565                           
  9566  0073                     ??_INT_CallBack:	
  9567                           ; 1 bytes @ 0x3
  9568                           
  9569  0073                     i2c_setBuffer@buffer:	
  9570                           ; 1 bytes @ 0x3
  9571                           
  9572                           
  9573                           ; 1 bytes @ 0x3
  9574  0073                     	ds	1
  9575  0074                     ??_i2c_ISR:	
  9576  0074                     ??_h_precisionclock:	
  9577                           ; 1 bytes @ 0x4
  9578                           
  9579  0074                     setCallBack@idx:	
  9580                           ; 1 bytes @ 0x4
  9581                           
  9582                           
  9583                           ; 1 bytes @ 0x4
  9584  0074                     	ds	1
  9585  0075                     ??_i2c_setDataCompleteCallback:	
  9586                           
  9587                           ; 1 bytes @ 0x5
  9588  0075                     	ds	1
  9589  0076                     ?_returnStop:	
  9590  0076                     ?_returnReset:	
  9591                           ; 1 bytes @ 0x6
  9592                           
  9593  0076                     ?_i2c_restartWrite:	
  9594                           ; 1 bytes @ 0x6
  9595                           
  9596  0076                     ?_wr1RegCompleteHandler:	
  9597                           ; 1 bytes @ 0x6
  9598                           
  9599  0076                     ?_rd1RegCompleteHandler:	
  9600                           ; 1 bytes @ 0x6
  9601                           
  9602  0076                     ?_rd2RegCompleteHandler:	
  9603                           ; 1 bytes @ 0x6
  9604                           
  9605  0076                     ?_wr2RegCompleteHandler:	
  9606                           ; 1 bytes @ 0x6
  9607                           
  9608  0076                     ?_rdBlkRegCompleteHandler:	
  9609                           ; 1 bytes @ 0x6
  9610                           
  9611  0076                     returnStop@p:	
  9612                           ; 1 bytes @ 0x6
  9613                           
  9614  0076                     returnReset@p:	
  9615                           ; 1 bytes @ 0x6
  9616                           
  9617  0076                     wr1RegCompleteHandler@p:	
  9618                           ; 1 bytes @ 0x6
  9619                           
  9620  0076                     rd1RegCompleteHandler@p:	
  9621                           ; 1 bytes @ 0x6
  9622                           
  9623  0076                     rd2RegCompleteHandler@p:	
  9624                           ; 1 bytes @ 0x6
  9625                           
  9626  0076                     wr2RegCompleteHandler@p:	
  9627                           ; 1 bytes @ 0x6
  9628                           
  9629  0076                     rdBlkRegCompleteHandler@p:	
  9630                           ; 1 bytes @ 0x6
  9631                           
  9632  0076                     i2c_restartWrite@p:	
  9633                           ; 1 bytes @ 0x6
  9634                           
  9635                           
  9636                           ; 1 bytes @ 0x6
  9637  0076                     	ds	1
  9638  0077                     ??_returnStop:	
  9639  0077                     ??_returnReset:	
  9640                           ; 1 bytes @ 0x7
  9641                           
  9642  0077                     ??_i2c_restartWrite:	
  9643                           ; 1 bytes @ 0x7
  9644                           
  9645  0077                     ??_TMR0_ISR:	
  9646                           ; 1 bytes @ 0x7
  9647                           
  9648  0077                     ??_wr1RegCompleteHandler:	
  9649                           ; 1 bytes @ 0x7
  9650                           
  9651  0077                     ??_rd1RegCompleteHandler:	
  9652                           ; 1 bytes @ 0x7
  9653                           
  9654  0077                     ??_rd2RegCompleteHandler:	
  9655                           ; 1 bytes @ 0x7
  9656                           
  9657  0077                     ??_wr2RegCompleteHandler:	
  9658                           ; 1 bytes @ 0x7
  9659                           
  9660  0077                     ??_rdBlkRegCompleteHandler:	
  9661                           ; 1 bytes @ 0x7
  9662                           
  9663  0077                     ??_INTERRUPT_InterruptManager:	
  9664                           ; 1 bytes @ 0x7
  9665                           
  9666                           
  9667                           	psect	cstackBANK0
  9668  0044                     __pcstackBANK0:	
  9669                           ; 1 bytes @ 0x7
  9670                           
  9671  0044                     ??_i2c1_driver_open:	
  9672  0044                     ??_WriteI2C:	
  9673                           ; 1 bytes @ 0x0
  9674                           
  9675  0044                     ??_ReadI2C:	
  9676                           ; 1 bytes @ 0x0
  9677                           
  9678  0044                     ?_TMR1_SetInterruptHandler:	
  9679                           ; 1 bytes @ 0x0
  9680                           
  9681  0044                     ??_PMD_Initialize:	
  9682                           ; 1 bytes @ 0x0
  9683                           
  9684  0044                     ??_PIN_MANAGER_Initialize:	
  9685                           ; 1 bytes @ 0x0
  9686                           
  9687  0044                     ??_OSCILLATOR_Initialize:	
  9688                           ; 1 bytes @ 0x0
  9689                           
  9690  0044                     ??_PWM6_Initialize:	
  9691                           ; 1 bytes @ 0x0
  9692                           
  9693  0044                     ??_ADCC_Initialize:	
  9694                           ; 1 bytes @ 0x0
  9695                           
  9696  0044                     ??_TMR2_Initialize:	
  9697                           ; 1 bytes @ 0x0
  9698                           
  9699  0044                     ?_TMR0_SetInterruptHandler:	
  9700                           ; 1 bytes @ 0x0
  9701                           
  9702  0044                     ??_Read_S1:	
  9703                           ; 1 bytes @ 0x0
  9704                           
  9705  0044                     ??_Read_S2:	
  9706                           ; 1 bytes @ 0x0
  9707                           
  9708  0044                     ?_LED_bin:	
  9709                           ; 1 bytes @ 0x0
  9710                           
  9711  0044                     ??_I2C_Initialize:	
  9712                           ; 1 bytes @ 0x0
  9713                           
  9714  0044                     ?_i2c_setDataCompleteCallback:	
  9715                           ; 1 bytes @ 0x0
  9716                           
  9717  0044                     ?_DATAEE_ReadByte:	
  9718                           ; 1 bytes @ 0x0
  9719                           
  9720  0044                     ??_ADCC_StartConversion:	
  9721                           ; 1 bytes @ 0x0
  9722                           
  9723  0044                     ??_ADCC_IsConversionDone:	
  9724                           ; 1 bytes @ 0x0
  9725                           
  9726  0044                     ?_INT_SetInterruptHandler:	
  9727                           ; 1 bytes @ 0x0
  9728                           
  9729  0044                     ?_PWM6_LoadDutyValue:	
  9730                           ; 1 bytes @ 0x0
  9731                           
  9732  0044                     ?___bmul:	
  9733                           ; 1 bytes @ 0x0
  9734                           
  9735  0044                     ?_ADCC_GetConversionResult:	
  9736                           ; 1 bytes @ 0x0
  9737                           
  9738  0044                     ?___awdiv:	
  9739                           ; 2 bytes @ 0x0
  9740                           
  9741  0044                     ADCC_StartConversion@channel:	
  9742                           ; 2 bytes @ 0x0
  9743                           
  9744  0044                     Read_S1@val:	
  9745                           ; 1 bytes @ 0x0
  9746                           
  9747  0044                     Read_S2@val:	
  9748                           ; 1 bytes @ 0x0
  9749                           
  9750  0044                     ___bmul@multiplicand:	
  9751                           ; 1 bytes @ 0x0
  9752                           
  9753  0044                     i2c_setDataCompleteCallback@cb:	
  9754                           ; 1 bytes @ 0x0
  9755                           
  9756  0044                     TMR1_SetInterruptHandler@InterruptHandler:	
  9757                           ; 2 bytes @ 0x0
  9758                           
  9759  0044                     DATAEE_ReadByte@bAdd:	
  9760                           ; 2 bytes @ 0x0
  9761                           
  9762  0044                     INT_SetInterruptHandler@InterruptHandler:	
  9763                           ; 2 bytes @ 0x0
  9764                           
  9765  0044                     PWM6_LoadDutyValue@dutyValue:	
  9766                           ; 2 bytes @ 0x0
  9767                           
  9768  0044                     TMR0_SetInterruptHandler@InterruptHandler:	
  9769                           ; 2 bytes @ 0x0
  9770                           
  9771  0044                     LED_bin@value:	
  9772                           ; 2 bytes @ 0x0
  9773                           
  9774  0044                     ___awdiv@divisor:	
  9775                           ; 2 bytes @ 0x0
  9776                           
  9777                           
  9778                           ; 2 bytes @ 0x0
  9779  0044                     	ds	1
  9780  0045                     ??___bmul:	
  9781  0045                     WriteI2C@data_out:	
  9782                           ; 1 bytes @ 0x1
  9783                           
  9784                           
  9785                           ; 1 bytes @ 0x1
  9786  0045                     	ds	1
  9787  0046                     ??_TMR1_SetInterruptHandler:	
  9788  0046                     ??_EXT_INT_Initialize:	
  9789                           ; 1 bytes @ 0x2
  9790                           
  9791  0046                     ??_TMR0_Initialize:	
  9792                           ; 1 bytes @ 0x2
  9793                           
  9794  0046                     ??_TMR0_SetInterruptHandler:	
  9795                           ; 1 bytes @ 0x2
  9796                           
  9797  0046                     ??_cksum:	
  9798                           ; 1 bytes @ 0x2
  9799                           
  9800  0046                     ??_LED_bin:	
  9801                           ; 1 bytes @ 0x2
  9802                           
  9803  0046                     ??_tsttc:	
  9804                           ; 1 bytes @ 0x2
  9805                           
  9806  0046                     ??_TMR1_Initialize:	
  9807                           ; 1 bytes @ 0x2
  9808                           
  9809  0046                     ??_SYSTEM_Initialize:	
  9810                           ; 1 bytes @ 0x2
  9811                           
  9812  0046                     ??_DATAEE_ReadByte:	
  9813                           ; 1 bytes @ 0x2
  9814                           
  9815  0046                     ??_ADCC_GetConversionResult:	
  9816                           ; 1 bytes @ 0x2
  9817                           
  9818  0046                     ??_INT_SetInterruptHandler:	
  9819                           ; 1 bytes @ 0x2
  9820                           
  9821  0046                     ??_PWM6_LoadDutyValue:	
  9822                           ; 1 bytes @ 0x2
  9823                           
  9824  0046                     ?_ADC_read:	
  9825                           ; 1 bytes @ 0x2
  9826                           
  9827  0046                     i2c_setDataCompleteCallback@p:	
  9828                           ; 2 bytes @ 0x2
  9829                           
  9830  0046                     ___bmul@product:	
  9831                           ; 1 bytes @ 0x2
  9832                           
  9833  0046                     ___awdiv@dividend:	
  9834                           ; 1 bytes @ 0x2
  9835                           
  9836                           
  9837                           ; 2 bytes @ 0x2
  9838  0046                     	ds	1
  9839  0047                     tsttc@value:	
  9840  0047                     cksum@res:	
  9841                           ; 1 bytes @ 0x3
  9842                           
  9843  0047                     ___bmul@multiplier:	
  9844                           ; 1 bytes @ 0x3
  9845                           
  9846                           
  9847                           ; 1 bytes @ 0x3
  9848  0047                     	ds	1
  9849  0048                     ??_mod1_LED:	
  9850  0048                     ??_mod2_LED:	
  9851                           ; 1 bytes @ 0x4
  9852                           
  9853  0048                     ??_mod3_LED:	
  9854                           ; 1 bytes @ 0x4
  9855                           
  9856  0048                     ??_mod4_LED:	
  9857                           ; 1 bytes @ 0x4
  9858                           
  9859  0048                     ??_ADC_read:	
  9860                           ; 1 bytes @ 0x4
  9861                           
  9862  0048                     ?_read_ring:	
  9863                           ; 1 bytes @ 0x4
  9864                           
  9865  0048                     ??___awdiv:	
  9866                           ; 1 bytes @ 0x4
  9867                           
  9868  0048                     read_ring@nreg:	
  9869                           ; 1 bytes @ 0x4
  9870                           
  9871  0048                     cksum@i:	
  9872                           ; 1 bytes @ 0x4
  9873                           
  9874                           
  9875                           ; 2 bytes @ 0x4
  9876  0048                     	ds	1
  9877  0049                     read_ring@nreg_init:	
  9878  0049                     ___awdiv@counter:	
  9879                           ; 1 bytes @ 0x5
  9880                           
  9881                           
  9882                           ; 1 bytes @ 0x5
  9883  0049                     	ds	1
  9884  004A                     ?_DATAEE_WriteByte:	
  9885  004A                     read_ring@index:	
  9886                           ; 1 bytes @ 0x6
  9887                           
  9888  004A                     ___awdiv@sign:	
  9889                           ; 1 bytes @ 0x6
  9890                           
  9891  004A                     DATAEE_WriteByte@bAdd:	
  9892                           ; 1 bytes @ 0x6
  9893                           
  9894                           
  9895                           ; 2 bytes @ 0x6
  9896  004A                     	ds	1
  9897  004B                     read_ring@subindex:	
  9898  004B                     ___awdiv@quotient:	
  9899                           ; 1 bytes @ 0x7
  9900                           
  9901                           
  9902                           ; 2 bytes @ 0x7
  9903  004B                     	ds	1
  9904  004C                     ??_read_ring:	
  9905  004C                     DATAEE_WriteByte@bData:	
  9906                           ; 1 bytes @ 0x8
  9907                           
  9908                           
  9909                           ; 1 bytes @ 0x8
  9910  004C                     	ds	1
  9911  004D                     ?_represent_led:	
  9912  004D                     ??_DATAEE_WriteByte:	
  9913                           ; 1 bytes @ 0x9
  9914                           
  9915  004D                     DATAEE_WriteByte@GIEBitValue:	
  9916                           ; 1 bytes @ 0x9
  9917                           
  9918  004D                     represent_led@high_digit:	
  9919                           ; 1 bytes @ 0x9
  9920                           
  9921                           
  9922                           ; 1 bytes @ 0x9
  9923  004D                     	ds	1
  9924  004E                     ??_reset_recv:	
  9925  004E                     ??_cksum_w:	
  9926                           ; 1 bytes @ 0xA
  9927                           
  9928  004E                     ??_represent_led:	
  9929                           ; 1 bytes @ 0xA
  9930                           
  9931  004E                     ?_push_ring:	
  9932                           ; 1 bytes @ 0xA
  9933                           
  9934  004E                     push_ring@nreg:	
  9935                           ; 1 bytes @ 0xA
  9936                           
  9937  004E                     read_ring@i:	
  9938                           ; 1 bytes @ 0xA
  9939                           
  9940  004E                     reset_recv@i:	
  9941                           ; 1 bytes @ 0xA
  9942                           
  9943                           
  9944                           ; 2 bytes @ 0xA
  9945  004E                     	ds	1
  9946  004F                     push_ring@nreg_init:	
  9947  004F                     read_ring@nreg_pt:	
  9948                           ; 1 bytes @ 0xB
  9949                           
  9950                           
  9951                           ; 1 bytes @ 0xB
  9952  004F                     	ds	1
  9953  0050                     push_ring@ring_byte:	
  9954  0050                     read_ring@absindex:	
  9955                           ; 1 bytes @ 0xC
  9956                           
  9957                           
  9958                           ; 1 bytes @ 0xC
  9959  0050                     	ds	1
  9960  0051                     ??_push_ring:	
  9961  0051                     represent_led@val:	
  9962                           ; 1 bytes @ 0xD
  9963                           
  9964                           
  9965                           ; 1 bytes @ 0xD
  9966  0051                     	ds	1
  9967  0052                     represent_led@aux:	
  9968                           
  9969                           ; 1 bytes @ 0xE
  9970  0052                     	ds	1
  9971  0053                     push_ring@i:	
  9972                           
  9973                           ; 1 bytes @ 0xF
  9974  0053                     	ds	1
  9975  0054                     push_ring@nreg_pt:	
  9976                           
  9977                           ; 1 bytes @ 0x10
  9978  0054                     	ds	1
  9979  0055                     ??_main:	
  9980                           
  9981                           ; 1 bytes @ 0x11
  9982  0055                     	ds	3
  9983                           
  9984                           	psect	maintext
  9985  006B                     __pmaintext:	
  9986 ;;
  9987 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  9988 ;;
  9989 ;; *************** function _main *****************
  9990 ;; Defined at:
  9991 ;;		line 63 in file "main.c"
  9992 ;; Parameters:    Size  Location     Type
  9993 ;;		None
  9994 ;; Auto vars:     Size  Location     Type
  9995 ;;		None
  9996 ;; Return value:  Size  Location     Type
  9997 ;;                  1    wreg      void 
  9998 ;; Registers used:
  9999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10000 ;; Tracked objects:
 10001 ;;		On entry : B1F/0
 10002 ;;		On exit  : 0/0
 10003 ;;		Unchanged: 0/0
 10004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10006 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10007 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10008 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10009 ;;Total ram usage:        5 bytes
 10010 ;; Hardware stack levels required when called:    9
 10011 ;; This function calls:
 10012 ;;		_ADC_read
 10013 ;;		_DATAEE_ReadByte
 10014 ;;		_DATAEE_WriteByte
 10015 ;;		_I2C_Initialize
 10016 ;;		_INT_SetInterruptHandler
 10017 ;;		_LED_bin
 10018 ;;		_PWM6_LoadDutyValue
 10019 ;;		_Read_S1
 10020 ;;		_Read_S2
 10021 ;;		_SYSTEM_Initialize
 10022 ;;		_TMR0_SetInterruptHandler
 10023 ;;		_TMR1_SetInterruptHandler
 10024 ;;		_cksum
 10025 ;;		_cksum_w
 10026 ;;		_mod1_LED
 10027 ;;		_mod2_LED
 10028 ;;		_mod3_LED
 10029 ;;		_mod4_LED
 10030 ;;		_push_ring
 10031 ;;		_read_ring
 10032 ;;		_represent_led
 10033 ;;		_reset_recv
 10034 ;;		_tsttc
 10035 ;; This function is called by:
 10036 ;;		Startup code after reset
 10037 ;; This function uses a non-reentrant model
 10038 ;;
 10039                           
 10040                           
 10041                           ;psect for function _main
 10042  006B                     _main:	
 10043  006B                     l6357:	
 10044                           ;incstack = 0
 10045                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10046                           
 10047                           
 10048                           ;main.c: 66:     running = 1;
 10049  006B  147D               	bsf	_running/(0+8),_running& (0+7)
 10050                           
 10051                           ;main.c: 67:     half = 0;
 10052  006C  1277               	bcf	_half/(0+8),_half& (0+7)	;volatile
 10053  006D                     l6359:	
 10054                           
 10055                           ;main.c: 68:     duty_cycle = 0;
 10056  006D  01FC               	clrf	_duty_cycle	;volatile
 10057                           
 10058                           ;main.c: 70:     clkh = 0; clkm = 0; seg = 0;
 10059  006E  0020               	movlb	0	; select bank0
 10060  006F  01BC               	clrf	_clkh	;volatile
 10061  0070  01BB               	clrf	_clkm	;volatile
 10062  0071  01BA               	clrf	_seg	;volatile
 10063                           
 10064                           ;main.c: 71:     last5s = 0;
 10065  0072  01B9               	clrf	_last5s	;volatile
 10066                           
 10067                           ;main.c: 72:     last1m = 0;
 10068  0073  01B8               	clrf	_last1m	;volatile
 10069                           
 10070                           ;main.c: 73:     last3000ms = 0;
 10071  0074  01FB               	clrf	_last3000ms	;volatile
 10072                           
 10073                           ;main.c: 74:     delta10ms = 0;
 10074  0075  01B7               	clrf	_delta10ms	;volatile
 10075                           
 10076                           ;main.c: 75:     delta10ms_2 = 0;
 10077  0076  01FA               	clrf	_delta10ms_2	;volatile
 10078  0077                     l6361:	
 10079                           
 10080                           ;main.c: 77:     s1_pressed = 0;
 10081  0077  11F7               	bcf	_s1_pressed/(0+8),_s1_pressed& (0+7)	;volatile
 10082  0078                     l6363:	
 10083                           
 10084                           ;main.c: 80:     nreg = (unsigned char) (0xF000 + 5 * 30 >= 0xF0FF - 10 ? 256 : 5 * 30);
 10085  0078  1177               	bcf	_s2_pressed/(0+8),_s2_pressed& (0+7)	;volatile
 10086  0079                     l6365:	
 10087  0079                     l1363:	
 10088  0079  3096               	movlw	150
 10089  007A  00D5               	movwf	??_main
 10090  007B  0855               	movf	??_main,w
 10091  007C  00B5               	movwf	_nreg
 10092  007D                     l6369:	
 10093                           
 10094                           ;main.c: 81:     nreg_pt = 0;
 10095  007D  01C3               	clrf	_nreg_pt
 10096  007E                     l6371:	
 10097                           
 10098                           ;main.c: 82:     nreg_init = 0;
 10099  007E  01C2               	clrf	_nreg_init
 10100                           
 10101                           ;main.c: 84:     pmon = 5;
 10102  007F  3005               	movlw	5
 10103  0080  00D5               	movwf	??_main
 10104  0081  0855               	movf	??_main,w
 10105  0082  00B4               	movwf	_pmon
 10106  0083                     l6373:	
 10107                           
 10108                           ;main.c: 85:     alarm = 0;
 10109  0083  10F7               	bcf	_alarm/(0+8),_alarm& (0+7)	;volatile
 10110  0084                     l6375:	
 10111                           
 10112                           ;main.c: 86:     alaf = 0;
 10113  0084  01AF               	clrf	_alaf
 10114  0085                     l6377:	
 10115                           
 10116                           ;main.c: 87:     tala = 3;
 10117  0085  3003               	movlw	3
 10118  0086  00D5               	movwf	??_main
 10119  0087  0855               	movf	??_main,w
 10120  0088  00AE               	movwf	_tala
 10121                           
 10122                           ;main.c: 88:     tala = (tala*1000 << 10);
 10123  0089  01AE               	clrf	_tala
 10124                           
 10125                           ;main.c: 89:     duty_cycle = 0;
 10126  008A  01FC               	clrf	_duty_cycle	;volatile
 10127                           
 10128                           ;main.c: 90:     temp = 0;
 10129  008B  01B3               	clrf	_temp
 10130  008C                     l6379:	
 10131                           
 10132                           ;main.c: 91:     alat = 25;
 10133  008C  3019               	movlw	25
 10134  008D  00D5               	movwf	??_main
 10135  008E  0855               	movf	??_main,w
 10136  008F  00B2               	movwf	_alat
 10137  0090                     l6381:	
 10138                           
 10139                           ;main.c: 92:     lum_bin = 0;
 10140  0090  01B1               	clrf	_lum_bin
 10141  0091                     l6383:	
 10142                           
 10143                           ;main.c: 93:     alal = (__bit) 2;
 10144  0091  01B0               	clrf	_alal
 10145  0092                     l6385:	
 10146                           
 10147                           ;main.c: 96:     if(DATAEE_ReadByte(0xF0FF - 10) == 0xAB) {
 10148  0092  30F5               	movlw	245
 10149  0093  00C4               	movwf	DATAEE_ReadByte@bAdd
 10150  0094  30F0               	movlw	240
 10151  0095  00C5               	movwf	DATAEE_ReadByte@bAdd+1
 10152  0096  318C  24AB  3180   	fcall	_DATAEE_ReadByte
 10153  0099  3AAB               	xorlw	171
 10154  009A  1D03               	skipz
 10155  009B  289D               	goto	u4041
 10156  009C  289E               	goto	u4040
 10157  009D                     u4041:	
 10158  009D  28F2               	goto	l6391
 10159  009E                     u4040:	
 10160  009E                     l6387:	
 10161                           
 10162                           ;main.c: 97:         if(DATAEE_ReadByte(0xF0FF) == cksum()) {
 10163  009E  3187  27E0  3180   	fcall	_cksum
 10164  00A1  0020               	movlb	0	; select bank0
 10165  00A2  00D5               	movwf	??_main
 10166  00A3  30FF               	movlw	255
 10167  00A4  00C4               	movwf	DATAEE_ReadByte@bAdd
 10168  00A5  30F0               	movlw	240
 10169  00A6  00C5               	movwf	DATAEE_ReadByte@bAdd+1
 10170  00A7  318C  24AB  3180   	fcall	_DATAEE_ReadByte
 10171  00AA  0020               	movlb	0	; select bank0
 10172  00AB  0655               	xorwf	??_main,w
 10173  00AC  1D03               	skipz
 10174  00AD  28AF               	goto	u4051
 10175  00AE  28B0               	goto	u4050
 10176  00AF                     u4051:	
 10177  00AF  28F2               	goto	l6391
 10178  00B0                     u4050:	
 10179  00B0                     l6389:	
 10180                           
 10181                           ;main.c: 98:             clkh = DATAEE_ReadByte(0xF0FF - 10 + 1);
 10182  00B0  30F6               	movlw	246
 10183  00B1  00C4               	movwf	DATAEE_ReadByte@bAdd
 10184  00B2  30F0               	movlw	240
 10185  00B3  00C5               	movwf	DATAEE_ReadByte@bAdd+1
 10186  00B4  318C  24AB  3180   	fcall	_DATAEE_ReadByte
 10187  00B7  0020               	movlb	0	; select bank0
 10188  00B8  00D5               	movwf	??_main
 10189  00B9  0855               	movf	??_main,w
 10190  00BA  00BC               	movwf	_clkh	;volatile
 10191                           
 10192                           ;main.c: 99:             clkm = DATAEE_ReadByte(0xF0FF - 10 + 2);
 10193  00BB  30F7               	movlw	247
 10194  00BC  00C4               	movwf	DATAEE_ReadByte@bAdd
 10195  00BD  30F0               	movlw	240
 10196  00BE  00C5               	movwf	DATAEE_ReadByte@bAdd+1
 10197  00BF  318C  24AB  3180   	fcall	_DATAEE_ReadByte
 10198  00C2  0020               	movlb	0	; select bank0
 10199  00C3  00D5               	movwf	??_main
 10200  00C4  0855               	movf	??_main,w
 10201  00C5  00BB               	movwf	_clkm	;volatile
 10202                           
 10203                           ;main.c: 100:             nreg = DATAEE_ReadByte(0xF0FF - 10 + 3);
 10204  00C6  30F8               	movlw	248
 10205  00C7  00C4               	movwf	DATAEE_ReadByte@bAdd
 10206  00C8  30F0               	movlw	240
 10207  00C9  00C5               	movwf	DATAEE_ReadByte@bAdd+1
 10208  00CA  318C  24AB  3180   	fcall	_DATAEE_ReadByte
 10209  00CD  0020               	movlb	0	; select bank0
 10210  00CE  00D5               	movwf	??_main
 10211  00CF  0855               	movf	??_main,w
 10212  00D0  00B5               	movwf	_nreg
 10213                           
 10214                           ;main.c: 101:             nreg_pt = DATAEE_ReadByte(0xF0FF - 10 + 4);
 10215  00D1  30F9               	movlw	249
 10216  00D2  00C4               	movwf	DATAEE_ReadByte@bAdd
 10217  00D3  30F0               	movlw	240
 10218  00D4  00C5               	movwf	DATAEE_ReadByte@bAdd+1
 10219  00D5  318C  24AB  3180   	fcall	_DATAEE_ReadByte
 10220  00D8  0020               	movlb	0	; select bank0
 10221  00D9  00D5               	movwf	??_main
 10222  00DA  0855               	movf	??_main,w
 10223  00DB  00C3               	movwf	_nreg_pt
 10224                           
 10225                           ;main.c: 102:             pmon = DATAEE_ReadByte(0xF0FF - 10 + 5);
 10226  00DC  30FA               	movlw	250
 10227  00DD  00C4               	movwf	DATAEE_ReadByte@bAdd
 10228  00DE  30F0               	movlw	240
 10229  00DF  00C5               	movwf	DATAEE_ReadByte@bAdd+1
 10230  00E0  318C  24AB  3180   	fcall	_DATAEE_ReadByte
 10231  00E3  0020               	movlb	0	; select bank0
 10232  00E4  00D5               	movwf	??_main
 10233  00E5  0855               	movf	??_main,w
 10234  00E6  00B4               	movwf	_pmon
 10235                           
 10236                           ;main.c: 103:             tala = DATAEE_ReadByte(0xF0FF - 10 + 6);
 10237  00E7  30FB               	movlw	251
 10238  00E8  00C4               	movwf	DATAEE_ReadByte@bAdd
 10239  00E9  30F0               	movlw	240
 10240  00EA  00C5               	movwf	DATAEE_ReadByte@bAdd+1
 10241  00EB  318C  24AB  3180   	fcall	_DATAEE_ReadByte
 10242  00EE  0020               	movlb	0	; select bank0
 10243  00EF  00D5               	movwf	??_main
 10244  00F0  0855               	movf	??_main,w
 10245  00F1  00AE               	movwf	_tala
 10246  00F2                     l6391:	
 10247                           
 10248                           ;main.c: 107:     reset_recv();
 10249  00F2  318E  263A  3180   	fcall	_reset_recv
 10250  00F5                     l6393:	
 10251                           
 10252                           ;main.c: 110:     DATAEE_WriteByte(0xF0FF - 10, 0xAB);
 10253  00F5  30F5               	movlw	245
 10254  00F6  0020               	movlb	0	; select bank0
 10255  00F7  00CA               	movwf	DATAEE_WriteByte@bAdd
 10256  00F8  30F0               	movlw	240
 10257  00F9  00CB               	movwf	DATAEE_WriteByte@bAdd+1
 10258  00FA  30AB               	movlw	171
 10259  00FB  00D5               	movwf	??_main
 10260  00FC  0855               	movf	??_main,w
 10261  00FD  00CC               	movwf	DATAEE_WriteByte@bData
 10262  00FE  318E  26B8  3180   	fcall	_DATAEE_WriteByte
 10263  0101                     l6395:	
 10264                           
 10265                           ;main.c: 111:     DATAEE_WriteByte(0xF0FF - 10 + 3, nreg);
 10266  0101  30F8               	movlw	248
 10267  0102  0020               	movlb	0	; select bank0
 10268  0103  00CA               	movwf	DATAEE_WriteByte@bAdd
 10269  0104  30F0               	movlw	240
 10270  0105  00CB               	movwf	DATAEE_WriteByte@bAdd+1
 10271  0106  0835               	movf	_nreg,w
 10272  0107  00D5               	movwf	??_main
 10273  0108  0855               	movf	??_main,w
 10274  0109  00CC               	movwf	DATAEE_WriteByte@bData
 10275  010A  318E  26B8  3180   	fcall	_DATAEE_WriteByte
 10276  010D                     l6397:	
 10277                           
 10278                           ;main.c: 112:     DATAEE_WriteByte(0xF0FF - 10 + 5, pmon);
 10279  010D  30FA               	movlw	250
 10280  010E  0020               	movlb	0	; select bank0
 10281  010F  00CA               	movwf	DATAEE_WriteByte@bAdd
 10282  0110  30F0               	movlw	240
 10283  0111  00CB               	movwf	DATAEE_WriteByte@bAdd+1
 10284  0112  0834               	movf	_pmon,w
 10285  0113  00D5               	movwf	??_main
 10286  0114  0855               	movf	??_main,w
 10287  0115  00CC               	movwf	DATAEE_WriteByte@bData
 10288  0116  318E  26B8  3180   	fcall	_DATAEE_WriteByte
 10289  0119                     l6399:	
 10290                           
 10291                           ;main.c: 113:     DATAEE_WriteByte(0xF0FF - 10 + 6, tala);
 10292  0119  30FB               	movlw	251
 10293  011A  0020               	movlb	0	; select bank0
 10294  011B  00CA               	movwf	DATAEE_WriteByte@bAdd
 10295  011C  30F0               	movlw	240
 10296  011D  00CB               	movwf	DATAEE_WriteByte@bAdd+1
 10297  011E  082E               	movf	_tala,w
 10298  011F  00D5               	movwf	??_main
 10299  0120  0855               	movf	??_main,w
 10300  0121  00CC               	movwf	DATAEE_WriteByte@bData
 10301  0122  318E  26B8  3180   	fcall	_DATAEE_WriteByte
 10302  0125                     l6401:	
 10303                           
 10304                           ;main.c: 114:     cksum_w();
 10305  0125  318C  24CA  3180   	fcall	_cksum_w
 10306  0128                     l6403:	
 10307                           
 10308                           ;main.c: 117:     SYSTEM_Initialize();
 10309  0128  318E  261E  3180   	fcall	_SYSTEM_Initialize
 10310  012B                     l6405:	
 10311                           
 10312                           ;main.c: 118:     I2C_Initialize();
 10313  012B  318C  2402  3180   	fcall	_I2C_Initialize
 10314  012E                     l6407:	
 10315                           
 10316                           ;main.c: 119:     (INTCONbits.GIE = 1);
 10317  012E  178B               	bsf	11,7	;volatile
 10318  012F                     l6409:	
 10319                           
 10320                           ;main.c: 120:     (INTCONbits.PEIE = 1);
 10321  012F  170B               	bsf	11,6	;volatile
 10322  0130                     l6411:	
 10323                           
 10324                           ;main.c: 123:     TMR0_SetInterruptHandler(h_precisionclock);
 10325  0130  3006               	movlw	low _h_precisionclock
 10326  0131  0020               	movlb	0	; select bank0
 10327  0132  00C4               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 10328  0133  3006               	movlw	high _h_precisionclock
 10329  0134  00C5               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 10330  0135  318B  239F  3180   	fcall	_TMR0_SetInterruptHandler
 10331  0138                     l6413:	
 10332                           
 10333                           ;main.c: 124:     TMR1_SetInterruptHandler(h_clock);
 10334  0138  308A               	movlw	low _h_clock
 10335  0139  0020               	movlb	0	; select bank0
 10336  013A  00C4               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 10337  013B  300D               	movlw	high _h_clock
 10338  013C  00C5               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 10339  013D  318B  23A5  3180   	fcall	_TMR1_SetInterruptHandler
 10340  0140                     l6415:	
 10341                           
 10342                           ;main.c: 125:     INT_SetInterruptHandler(sw1_EXT);
 10343  0140  308B               	movlw	low _sw1_EXT
 10344  0141  0020               	movlb	0	; select bank0
 10345  0142  00C4               	movwf	INT_SetInterruptHandler@InterruptHandler
 10346  0143  300F               	movlw	high _sw1_EXT
 10347  0144  00C5               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 10348  0145  318B  2399  3180   	fcall	_INT_SetInterruptHandler
 10349                           
 10350                           ;main.c: 127:     while (running)
 10351  0148  2BF6               	goto	l1366
 10352  0149                     l6417:	
 10353                           
 10354                           ;main.c: 128:     {;main.c: 129:         if(Read_S1()) {
 10355  0149  318C  240C  3180   	fcall	_Read_S1
 10356  014C  3A00               	xorlw	0
 10357  014D  1903               	skipnz
 10358  014E  2950               	goto	u4061
 10359  014F  2951               	goto	u4060
 10360  0150                     u4061:	
 10361  0150  2B27               	goto	l6555
 10362  0151                     u4060:	
 10363  0151                     l6419:	
 10364                           
 10365                           ;main.c: 131:             if(alarm == 1) {
 10366  0151  1CF7               	btfss	_alarm/(0+8),_alarm& (0+7)	;volatile
 10367  0152  2954               	goto	u4071
 10368  0153  2955               	goto	u4070
 10369  0154                     u4071:	
 10370  0154  2B10               	goto	l6553
 10371  0155                     u4070:	
 10372  0155                     l6421:	
 10373                           
 10374                           ;main.c: 132:                 alarm = 0;
 10375  0155  10F7               	bcf	_alarm/(0+8),_alarm& (0+7)	;volatile
 10376  0156                     l6423:	
 10377                           
 10378                           ;main.c: 133:                 PWM6_LoadDutyValue(0);
 10379  0156  3000               	movlw	0
 10380  0157  0020               	movlb	0	; select bank0
 10381  0158  00C4               	movwf	PWM6_LoadDutyValue@dutyValue
 10382  0159  00C5               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10383  015A  318D  25D1  3180   	fcall	_PWM6_LoadDutyValue
 10384  015D                     l6425:	
 10385                           
 10386                           ;main.c: 134:                 select_mode = 0;
 10387  015D  0020               	movlb	0	; select bank0
 10388  015E  01B6               	clrf	_select_mode
 10389                           
 10390                           ;main.c: 135:             }
 10391  015F  2B27               	goto	l6555
 10392  0160                     l6427:	
 10393  0160  318C  242A  3180   	fcall	_mod1_LED
 10394  0163                     l6429:	
 10395                           ;main.c: 140:                             while(!Read_S1() & !Read_S2());
 10396                           
 10397  0163  318C  2416  3180   	fcall	_Read_S2
 10398  0166  3A00               	xorlw	0
 10399  0167  1903               	skipnz
 10400  0168  296A               	goto	u4081
 10401  0169  296C               	goto	u4080
 10402  016A                     u4081:	
 10403  016A  3001               	movlw	1
 10404  016B  296D               	goto	u4082
 10405  016C                     u4080:	
 10406  016C  3000               	movlw	0
 10407  016D                     u4082:	
 10408  016D  0020               	movlb	0	; select bank0
 10409  016E  00D5               	movwf	??_main
 10410  016F  318C  240C  3180   	fcall	_Read_S1
 10411  0172  3A00               	xorlw	0
 10412  0173  1903               	skipnz
 10413  0174  2976               	goto	u4091
 10414  0175  2978               	goto	u4090
 10415  0176                     u4091:	
 10416  0176  3001               	movlw	1
 10417  0177  2979               	goto	u4092
 10418  0178                     u4090:	
 10419  0178  3000               	movlw	0
 10420  0179                     u4092:	
 10421  0179  0020               	movlb	0	; select bank0
 10422  017A  0555               	andwf	??_main,w
 10423  017B  1903               	btfsc	3,2
 10424  017C  2963               	goto	l6429
 10425  017D                     l6431:	
 10426                           
 10427                           ;main.c: 141:                             if(Read_S1())
 10428  017D  318C  240C  3180   	fcall	_Read_S1
 10429  0180  3A00               	xorlw	0
 10430  0181  1903               	skipnz
 10431  0182  2984               	goto	u4101
 10432  0183  2985               	goto	u4100
 10433  0184                     u4101:	
 10434  0184  29A2               	goto	l6445
 10435  0185                     u4100:	
 10436  0185  2B27               	goto	l6555
 10437  0186                     l6435:	
 10438                           
 10439                           ;main.c: 144:                                 represent_led(clkh, 1);
 10440  0186  0020               	movlb	0	; select bank0
 10441  0187  01CD               	clrf	represent_led@high_digit
 10442  0188  0ACD               	incf	represent_led@high_digit,f
 10443  0189  083C               	movf	_clkh,w	;volatile
 10444  018A  3186  26B4  3180   	fcall	_represent_led
 10445  018D                     l6437:	
 10446                           
 10447                           ;main.c: 145:                                 if(Read_S2())
 10448  018D  318C  2416  3180   	fcall	_Read_S2
 10449  0190  3A00               	xorlw	0
 10450  0191  1903               	skipnz
 10451  0192  2994               	goto	u4111
 10452  0193  2995               	goto	u4110
 10453  0194                     u4111:	
 10454  0194  299A               	goto	l6441
 10455  0195                     u4110:	
 10456  0195                     l6439:	
 10457                           
 10458                           ;main.c: 146:                                     clkh += 0x10;
 10459  0195  3010               	movlw	16
 10460  0196  0020               	movlb	0	; select bank0
 10461  0197  00D5               	movwf	??_main
 10462  0198  0855               	movf	??_main,w
 10463  0199  07BC               	addwf	_clkh,f	;volatile
 10464  019A                     l6441:	
 10465                           
 10466                           ;main.c: 147:                                     if(clkh >= 24) clkh = 0;
 10467  019A  3018               	movlw	24
 10468  019B  0020               	movlb	0	; select bank0
 10469  019C  023C               	subwf	_clkh,w	;volatile
 10470  019D  1C03               	skipc
 10471  019E  29A0               	goto	u4121
 10472  019F  29A1               	goto	u4120
 10473  01A0                     u4121:	
 10474  01A0  29A2               	goto	l6445
 10475  01A1                     u4120:	
 10476  01A1                     l6443:	
 10477  01A1  01BC               	clrf	_clkh	;volatile
 10478  01A2                     l6445:	
 10479                           
 10480                           ;main.c: 143:                             while(!Read_S1()) {
 10481  01A2  318C  240C  3180   	fcall	_Read_S1
 10482  01A5  3A00               	xorlw	0
 10483  01A6  1903               	skipnz
 10484  01A7  29A9               	goto	u4131
 10485  01A8  29AA               	goto	u4130
 10486  01A9                     u4131:	
 10487  01A9  2986               	goto	l6435
 10488  01AA                     u4130:	
 10489  01AA  29C6               	goto	l6457
 10490  01AB                     l6447:	
 10491                           
 10492                           ;main.c: 150:                                 represent_led(clkh, 0);
 10493  01AB  0020               	movlb	0	; select bank0
 10494  01AC  01CD               	clrf	represent_led@high_digit
 10495  01AD  083C               	movf	_clkh,w	;volatile
 10496  01AE  3186  26B4  3180   	fcall	_represent_led
 10497  01B1                     l6449:	
 10498                           
 10499                           ;main.c: 151:                                 if(Read_S2())
 10500  01B1  318C  2416  3180   	fcall	_Read_S2
 10501  01B4  3A00               	xorlw	0
 10502  01B5  1903               	skipnz
 10503  01B6  29B8               	goto	u4141
 10504  01B7  29B9               	goto	u4140
 10505  01B8                     u4141:	
 10506  01B8  29BE               	goto	l6453
 10507  01B9                     u4140:	
 10508  01B9                     l6451:	
 10509                           
 10510                           ;main.c: 152:                                     clkh += 0x01;
 10511  01B9  3001               	movlw	1
 10512  01BA  0020               	movlb	0	; select bank0
 10513  01BB  00D5               	movwf	??_main
 10514  01BC  0855               	movf	??_main,w
 10515  01BD  07BC               	addwf	_clkh,f	;volatile
 10516  01BE                     l6453:	
 10517                           
 10518                           ;main.c: 153:                                     if(clkh >= 24) clkh = 0;
 10519  01BE  3018               	movlw	24
 10520  01BF  0020               	movlb	0	; select bank0
 10521  01C0  023C               	subwf	_clkh,w	;volatile
 10522  01C1  1C03               	skipc
 10523  01C2  29C4               	goto	u4151
 10524  01C3  29C5               	goto	u4150
 10525  01C4                     u4151:	
 10526  01C4  29C6               	goto	l6457
 10527  01C5                     u4150:	
 10528  01C5                     l6455:	
 10529  01C5  01BC               	clrf	_clkh	;volatile
 10530  01C6                     l6457:	
 10531                           
 10532                           ;main.c: 149:                             while(!Read_S1()) {
 10533  01C6  318C  240C  3180   	fcall	_Read_S1
 10534  01C9  3A00               	xorlw	0
 10535  01CA  1903               	skipnz
 10536  01CB  29CD               	goto	u4161
 10537  01CC  29CE               	goto	u4160
 10538  01CD                     u4161:	
 10539  01CD  29AB               	goto	l6447
 10540  01CE                     u4160:	
 10541  01CE  29EB               	goto	l6469
 10542  01CF                     l6459:	
 10543                           
 10544                           ;main.c: 156:                                 represent_led(clkh, 1);
 10545  01CF  0020               	movlb	0	; select bank0
 10546  01D0  01CD               	clrf	represent_led@high_digit
 10547  01D1  0ACD               	incf	represent_led@high_digit,f
 10548  01D2  083C               	movf	_clkh,w	;volatile
 10549  01D3  3186  26B4  3180   	fcall	_represent_led
 10550  01D6                     l6461:	
 10551                           
 10552                           ;main.c: 157:                                 if(Read_S2())
 10553  01D6  318C  2416  3180   	fcall	_Read_S2
 10554  01D9  3A00               	xorlw	0
 10555  01DA  1903               	skipnz
 10556  01DB  29DD               	goto	u4171
 10557  01DC  29DE               	goto	u4170
 10558  01DD                     u4171:	
 10559  01DD  29E3               	goto	l6465
 10560  01DE                     u4170:	
 10561  01DE                     l6463:	
 10562                           
 10563                           ;main.c: 158:                                     clkm += 0x10;
 10564  01DE  3010               	movlw	16
 10565  01DF  0020               	movlb	0	; select bank0
 10566  01E0  00D5               	movwf	??_main
 10567  01E1  0855               	movf	??_main,w
 10568  01E2  07BB               	addwf	_clkm,f	;volatile
 10569  01E3                     l6465:	
 10570                           
 10571                           ;main.c: 159:                                     if(clkm >= 60) clkm = 0;
 10572  01E3  303C               	movlw	60
 10573  01E4  0020               	movlb	0	; select bank0
 10574  01E5  023B               	subwf	_clkm,w	;volatile
 10575  01E6  1C03               	skipc
 10576  01E7  29E9               	goto	u4181
 10577  01E8  29EA               	goto	u4180
 10578  01E9                     u4181:	
 10579  01E9  29EB               	goto	l6469
 10580  01EA                     u4180:	
 10581  01EA                     l6467:	
 10582  01EA  01BB               	clrf	_clkm	;volatile
 10583  01EB                     l6469:	
 10584                           
 10585                           ;main.c: 155:                             while(!Read_S1()) {
 10586  01EB  318C  240C  3180   	fcall	_Read_S1
 10587  01EE  3A00               	xorlw	0
 10588  01EF  1903               	skipnz
 10589  01F0  29F2               	goto	u4191
 10590  01F1  29F3               	goto	u4190
 10591  01F2                     u4191:	
 10592  01F2  29CF               	goto	l6459
 10593  01F3                     u4190:	
 10594  01F3  2A0F               	goto	l6481
 10595  01F4                     l6471:	
 10596                           
 10597                           ;main.c: 162:                                 represent_led(clkm, 0);
 10598  01F4  0020               	movlb	0	; select bank0
 10599  01F5  01CD               	clrf	represent_led@high_digit
 10600  01F6  083B               	movf	_clkm,w	;volatile
 10601  01F7  3186  26B4  3180   	fcall	_represent_led
 10602  01FA                     l6473:	
 10603                           
 10604                           ;main.c: 163:                                 if(Read_S2())
 10605  01FA  318C  2416  3180   	fcall	_Read_S2
 10606  01FD  3A00               	xorlw	0
 10607  01FE  1903               	skipnz
 10608  01FF  2A01               	goto	u4201
 10609  0200  2A02               	goto	u4200
 10610  0201                     u4201:	
 10611  0201  2A07               	goto	l6477
 10612  0202                     u4200:	
 10613  0202                     l6475:	
 10614                           
 10615                           ;main.c: 164:                                     clkm += 0x01;
 10616  0202  3001               	movlw	1
 10617  0203  0020               	movlb	0	; select bank0
 10618  0204  00D5               	movwf	??_main
 10619  0205  0855               	movf	??_main,w
 10620  0206  07BB               	addwf	_clkm,f	;volatile
 10621  0207                     l6477:	
 10622                           
 10623                           ;main.c: 165:                                     if(clkm >= 60) clkm = 0;
 10624  0207  303C               	movlw	60
 10625  0208  0020               	movlb	0	; select bank0
 10626  0209  023B               	subwf	_clkm,w	;volatile
 10627  020A  1C03               	skipc
 10628  020B  2A0D               	goto	u4211
 10629  020C  2A0E               	goto	u4210
 10630  020D                     u4211:	
 10631  020D  2A0F               	goto	l6481
 10632  020E                     u4210:	
 10633  020E                     l6479:	
 10634  020E  01BB               	clrf	_clkm	;volatile
 10635  020F                     l6481:	
 10636                           
 10637                           ;main.c: 161:                             while(!Read_S1()) {
 10638  020F  318C  240C  3180   	fcall	_Read_S1
 10639  0212  3A00               	xorlw	0
 10640  0213  1903               	skipnz
 10641  0214  2A16               	goto	u4221
 10642  0215  2A17               	goto	u4220
 10643  0216                     u4221:	
 10644  0216  29F4               	goto	l6471
 10645  0217                     u4220:	
 10646  0217  2B27               	goto	l6555
 10647  0218                     l6483:	
 10648  0218  318C  2420  3180   	fcall	_mod2_LED
 10649  021B                     l6485:	
 10650                           ;main.c: 169:                             while(!Read_S1() & !Read_S2());
 10651                           
 10652  021B  318C  2416  3180   	fcall	_Read_S2
 10653  021E  3A00               	xorlw	0
 10654  021F  1903               	skipnz
 10655  0220  2A22               	goto	u4231
 10656  0221  2A24               	goto	u4230
 10657  0222                     u4231:	
 10658  0222  3001               	movlw	1
 10659  0223  2A25               	goto	u4232
 10660  0224                     u4230:	
 10661  0224  3000               	movlw	0
 10662  0225                     u4232:	
 10663  0225  0020               	movlb	0	; select bank0
 10664  0226  00D5               	movwf	??_main
 10665  0227  318C  240C  3180   	fcall	_Read_S1
 10666  022A  3A00               	xorlw	0
 10667  022B  1903               	skipnz
 10668  022C  2A2E               	goto	u4241
 10669  022D  2A30               	goto	u4240
 10670  022E                     u4241:	
 10671  022E  3001               	movlw	1
 10672  022F  2A31               	goto	u4242
 10673  0230                     u4240:	
 10674  0230  3000               	movlw	0
 10675  0231                     u4242:	
 10676  0231  0020               	movlb	0	; select bank0
 10677  0232  0555               	andwf	??_main,w
 10678  0233  1903               	btfsc	3,2
 10679  0234  2A1B               	goto	l6485
 10680  0235                     l6487:	
 10681                           
 10682                           ;main.c: 170:                             if(Read_S1())
 10683  0235  318C  240C  3180   	fcall	_Read_S1
 10684  0238  3A00               	xorlw	0
 10685  0239  1903               	skipnz
 10686  023A  2A3C               	goto	u4251
 10687  023B  2A3D               	goto	u4250
 10688  023C                     u4251:	
 10689  023C  2A5A               	goto	l6501
 10690  023D                     u4250:	
 10691  023D  2B27               	goto	l6555
 10692  023E                     l6491:	
 10693                           
 10694                           ;main.c: 173:                                 represent_led(alat, 1);
 10695  023E  0020               	movlb	0	; select bank0
 10696  023F  01CD               	clrf	represent_led@high_digit
 10697  0240  0ACD               	incf	represent_led@high_digit,f
 10698  0241  0832               	movf	_alat,w
 10699  0242  3186  26B4  3180   	fcall	_represent_led
 10700  0245                     l6493:	
 10701                           
 10702                           ;main.c: 174:                                 if(Read_S2())
 10703  0245  318C  2416  3180   	fcall	_Read_S2
 10704  0248  3A00               	xorlw	0
 10705  0249  1903               	skipnz
 10706  024A  2A4C               	goto	u4261
 10707  024B  2A4D               	goto	u4260
 10708  024C                     u4261:	
 10709  024C  2A52               	goto	l6497
 10710  024D                     u4260:	
 10711  024D                     l6495:	
 10712                           
 10713                           ;main.c: 175:                                     alat += 0x10;
 10714  024D  3010               	movlw	16
 10715  024E  0020               	movlb	0	; select bank0
 10716  024F  00D5               	movwf	??_main
 10717  0250  0855               	movf	??_main,w
 10718  0251  07B2               	addwf	_alat,f
 10719  0252                     l6497:	
 10720                           
 10721                           ;main.c: 176:                                     if(alat > 50) alat = 0;
 10722  0252  3033               	movlw	51
 10723  0253  0020               	movlb	0	; select bank0
 10724  0254  0232               	subwf	_alat,w
 10725  0255  1C03               	skipc
 10726  0256  2A58               	goto	u4271
 10727  0257  2A59               	goto	u4270
 10728  0258                     u4271:	
 10729  0258  2A5A               	goto	l6501
 10730  0259                     u4270:	
 10731  0259                     l6499:	
 10732  0259  01B2               	clrf	_alat
 10733  025A                     l6501:	
 10734                           
 10735                           ;main.c: 172:                             while(!Read_S1()) {
 10736  025A  318C  240C  3180   	fcall	_Read_S1
 10737  025D  3A00               	xorlw	0
 10738  025E  1903               	skipnz
 10739  025F  2A61               	goto	u4281
 10740  0260  2A62               	goto	u4280
 10741  0261                     u4281:	
 10742  0261  2A3E               	goto	l6491
 10743  0262                     u4280:	
 10744  0262  2A7E               	goto	l6513
 10745  0263                     l6503:	
 10746                           
 10747                           ;main.c: 179:                                 represent_led(alat, 0);
 10748  0263  0020               	movlb	0	; select bank0
 10749  0264  01CD               	clrf	represent_led@high_digit
 10750  0265  0832               	movf	_alat,w
 10751  0266  3186  26B4  3180   	fcall	_represent_led
 10752  0269                     l6505:	
 10753                           
 10754                           ;main.c: 180:                                 if(Read_S2())
 10755  0269  318C  2416  3180   	fcall	_Read_S2
 10756  026C  3A00               	xorlw	0
 10757  026D  1903               	skipnz
 10758  026E  2A70               	goto	u4291
 10759  026F  2A71               	goto	u4290
 10760  0270                     u4291:	
 10761  0270  2A76               	goto	l6509
 10762  0271                     u4290:	
 10763  0271                     l6507:	
 10764                           
 10765                           ;main.c: 181:                                     alat += 0x01;
 10766  0271  3001               	movlw	1
 10767  0272  0020               	movlb	0	; select bank0
 10768  0273  00D5               	movwf	??_main
 10769  0274  0855               	movf	??_main,w
 10770  0275  07B2               	addwf	_alat,f
 10771  0276                     l6509:	
 10772                           
 10773                           ;main.c: 182:                                     if(alat > 50) alat = 0;
 10774  0276  3033               	movlw	51
 10775  0277  0020               	movlb	0	; select bank0
 10776  0278  0232               	subwf	_alat,w
 10777  0279  1C03               	skipc
 10778  027A  2A7C               	goto	u4301
 10779  027B  2A7D               	goto	u4300
 10780  027C                     u4301:	
 10781  027C  2A7E               	goto	l6513
 10782  027D                     u4300:	
 10783  027D                     l6511:	
 10784  027D  01B2               	clrf	_alat
 10785  027E                     l6513:	
 10786                           
 10787                           ;main.c: 178:                             while(!Read_S1()) {
 10788  027E  318C  240C  3180   	fcall	_Read_S1
 10789  0281  3A00               	xorlw	0
 10790  0282  1903               	skipnz
 10791  0283  2A85               	goto	u4311
 10792  0284  2A86               	goto	u4310
 10793  0285                     u4311:	
 10794  0285  2A63               	goto	l6503
 10795  0286                     u4310:	
 10796  0286  2B27               	goto	l6555
 10797  0287                     l6515:	
 10798  0287  318C  2435  3180   	fcall	_mod3_LED
 10799  028A                     l6517:	
 10800                           ;main.c: 186:                             while(!Read_S1() & !Read_S2());
 10801                           
 10802  028A  318C  2416  3180   	fcall	_Read_S2
 10803  028D  3A00               	xorlw	0
 10804  028E  1903               	skipnz
 10805  028F  2A91               	goto	u4321
 10806  0290  2A93               	goto	u4320
 10807  0291                     u4321:	
 10808  0291  3001               	movlw	1
 10809  0292  2A94               	goto	u4322
 10810  0293                     u4320:	
 10811  0293  3000               	movlw	0
 10812  0294                     u4322:	
 10813  0294  0020               	movlb	0	; select bank0
 10814  0295  00D5               	movwf	??_main
 10815  0296  318C  240C  3180   	fcall	_Read_S1
 10816  0299  3A00               	xorlw	0
 10817  029A  1903               	skipnz
 10818  029B  2A9D               	goto	u4331
 10819  029C  2A9F               	goto	u4330
 10820  029D                     u4331:	
 10821  029D  3001               	movlw	1
 10822  029E  2AA0               	goto	u4332
 10823  029F                     u4330:	
 10824  029F  3000               	movlw	0
 10825  02A0                     u4332:	
 10826  02A0  0020               	movlb	0	; select bank0
 10827  02A1  0555               	andwf	??_main,w
 10828  02A2  1903               	btfsc	3,2
 10829  02A3  2A8A               	goto	l6517
 10830  02A4                     l6519:	
 10831                           
 10832                           ;main.c: 187:                             if(Read_S1())
 10833  02A4  318C  240C  3180   	fcall	_Read_S1
 10834  02A7  3A00               	xorlw	0
 10835  02A8  1903               	skipnz
 10836  02A9  2AAB               	goto	u4341
 10837  02AA  2AAC               	goto	u4340
 10838  02AB                     u4341:	
 10839  02AB  2AC8               	goto	l6533
 10840  02AC                     u4340:	
 10841  02AC  2B27               	goto	l6555
 10842  02AD                     l6523:	
 10843                           
 10844                           ;main.c: 190:                                 represent_led(alal, 0);
 10845  02AD  0020               	movlb	0	; select bank0
 10846  02AE  01CD               	clrf	represent_led@high_digit
 10847  02AF  0830               	movf	_alal,w
 10848  02B0  3186  26B4  3180   	fcall	_represent_led
 10849  02B3                     l6525:	
 10850                           
 10851                           ;main.c: 191:                                 if(Read_S2())
 10852  02B3  318C  2416  3180   	fcall	_Read_S2
 10853  02B6  3A00               	xorlw	0
 10854  02B7  1903               	skipnz
 10855  02B8  2ABA               	goto	u4351
 10856  02B9  2ABB               	goto	u4350
 10857  02BA                     u4351:	
 10858  02BA  2AC0               	goto	l6529
 10859  02BB                     u4350:	
 10860  02BB                     l6527:	
 10861                           
 10862                           ;main.c: 192:                                     alal += 0x01;
 10863  02BB  3001               	movlw	1
 10864  02BC  0020               	movlb	0	; select bank0
 10865  02BD  00D5               	movwf	??_main
 10866  02BE  0855               	movf	??_main,w
 10867  02BF  07B0               	addwf	_alal,f
 10868  02C0                     l6529:	
 10869                           
 10870                           ;main.c: 193:                                     if(alal > 3) alal = 0;
 10871  02C0  3004               	movlw	4
 10872  02C1  0020               	movlb	0	; select bank0
 10873  02C2  0230               	subwf	_alal,w
 10874  02C3  1C03               	skipc
 10875  02C4  2AC6               	goto	u4361
 10876  02C5  2AC7               	goto	u4360
 10877  02C6                     u4361:	
 10878  02C6  2AC8               	goto	l6533
 10879  02C7                     u4360:	
 10880  02C7                     l6531:	
 10881  02C7  01B0               	clrf	_alal
 10882  02C8                     l6533:	
 10883                           
 10884                           ;main.c: 189:                             while(!Read_S1()) {
 10885  02C8  318C  240C  3180   	fcall	_Read_S1
 10886  02CB  3A00               	xorlw	0
 10887  02CC  1903               	skipnz
 10888  02CD  2ACF               	goto	u4371
 10889  02CE  2AD0               	goto	u4370
 10890  02CF                     u4371:	
 10891  02CF  2AAD               	goto	l6523
 10892  02D0                     u4370:	
 10893  02D0  2B27               	goto	l6555
 10894  02D1                     l6535:	
 10895  02D1  318C  2440  3180   	fcall	_mod4_LED
 10896  02D4                     l6537:	
 10897                           ;main.c: 197:                             while(!Read_S1() & !Read_S2());
 10898                           
 10899  02D4  318C  2416  3180   	fcall	_Read_S2
 10900  02D7  3A00               	xorlw	0
 10901  02D8  1903               	skipnz
 10902  02D9  2ADB               	goto	u4381
 10903  02DA  2ADD               	goto	u4380
 10904  02DB                     u4381:	
 10905  02DB  3001               	movlw	1
 10906  02DC  2ADE               	goto	u4382
 10907  02DD                     u4380:	
 10908  02DD  3000               	movlw	0
 10909  02DE                     u4382:	
 10910  02DE  0020               	movlb	0	; select bank0
 10911  02DF  00D5               	movwf	??_main
 10912  02E0  318C  240C  3180   	fcall	_Read_S1
 10913  02E3  3A00               	xorlw	0
 10914  02E4  1903               	skipnz
 10915  02E5  2AE7               	goto	u4391
 10916  02E6  2AE9               	goto	u4390
 10917  02E7                     u4391:	
 10918  02E7  3001               	movlw	1
 10919  02E8  2AEA               	goto	u4392
 10920  02E9                     u4390:	
 10921  02E9  3000               	movlw	0
 10922  02EA                     u4392:	
 10923  02EA  0020               	movlb	0	; select bank0
 10924  02EB  0555               	andwf	??_main,w
 10925  02EC  1903               	btfsc	3,2
 10926  02ED  2AD4               	goto	l6537
 10927  02EE                     l6539:	
 10928                           
 10929                           ;main.c: 198:                             if(Read_S1())
 10930  02EE  318C  240C  3180   	fcall	_Read_S1
 10931  02F1  3A00               	xorlw	0
 10932  02F2  1903               	skipnz
 10933  02F3  2AF5               	goto	u4401
 10934  02F4  2AF6               	goto	u4400
 10935  02F5                     u4401:	
 10936  02F5  2B07               	goto	l6549
 10937  02F6                     u4400:	
 10938  02F6  2B27               	goto	l6555
 10939  02F7                     l6543:	
 10940                           
 10941                           ;main.c: 201:                                 represent_led(alaf, 0);
 10942  02F7  0020               	movlb	0	; select bank0
 10943  02F8  01CD               	clrf	represent_led@high_digit
 10944  02F9  082F               	movf	_alaf,w
 10945  02FA  3186  26B4  3180   	fcall	_represent_led
 10946  02FD                     l6545:	
 10947                           
 10948                           ;main.c: 202:                                 if(Read_S2())
 10949  02FD  318C  2416  3180   	fcall	_Read_S2
 10950  0300  3A00               	xorlw	0
 10951  0301  1903               	skipnz
 10952  0302  2B04               	goto	u4411
 10953  0303  2B05               	goto	u4410
 10954  0304                     u4411:	
 10955  0304  2B07               	goto	l6549
 10956  0305                     u4410:	
 10957  0305                     l6547:	
 10958                           
 10959                           ;main.c: 203:                                     alaf = ~alaf;
 10960  0305  0020               	movlb	0	; select bank0
 10961  0306  09AF               	comf	_alaf,f
 10962  0307                     l6549:	
 10963                           
 10964                           ;main.c: 200:                             while(!Read_S1()) {
 10965  0307  318C  240C  3180   	fcall	_Read_S1
 10966  030A  3A00               	xorlw	0
 10967  030B  1903               	skipnz
 10968  030C  2B0E               	goto	u4421
 10969  030D  2B0F               	goto	u4420
 10970  030E                     u4421:	
 10971  030E  2AF7               	goto	l6543
 10972  030F                     u4420:	
 10973  030F  2B27               	goto	l6555
 10974  0310                     l6553:	
 10975  0310  0020               	movlb	0	; select bank0
 10976  0311  0836               	movf	_select_mode,w
 10977  0312  00D5               	movwf	??_main
 10978  0313  01D6               	clrf	??_main+1
 10979                           
 10980                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10981                           ; Switch size 1, requested type "simple"
 10982                           ; Number of cases is 1, Range of values is 0 to 0
 10983                           ; switch strategies available:
 10984                           ; Name         Instructions Cycles
 10985                           ; simple_byte            4     3 (average)
 10986                           ; direct_byte            8     6 (fixed)
 10987                           ; jumptable            260     6 (fixed)
 10988                           ;	Chosen strategy is simple_byte
 10989  0314  0856               	movf	??_main+1,w
 10990  0315  3A00               	xorlw	0	; case 0
 10991  0316  1903               	skipnz
 10992  0317  2B19               	goto	l6759
 10993  0318  295D               	goto	l6425
 10994  0319                     l6759:	
 10995                           
 10996                           ; Switch size 1, requested type "simple"
 10997                           ; Number of cases is 4, Range of values is 1 to 4
 10998                           ; switch strategies available:
 10999                           ; Name         Instructions Cycles
 11000                           ; simple_byte           13     7 (average)
 11001                           ; direct_byte           17     9 (fixed)
 11002                           ; jumptable            263     9 (fixed)
 11003                           ;	Chosen strategy is simple_byte
 11004  0319  0855               	movf	??_main,w
 11005  031A  3A01               	xorlw	1	; case 1
 11006  031B  1903               	skipnz
 11007  031C  2960               	goto	l6427
 11008  031D  3A03               	xorlw	3	; case 2
 11009  031E  1903               	skipnz
 11010  031F  2A18               	goto	l6483
 11011  0320  3A01               	xorlw	1	; case 3
 11012  0321  1903               	skipnz
 11013  0322  2A87               	goto	l6515
 11014  0323  3A07               	xorlw	7	; case 4
 11015  0324  1903               	skipnz
 11016  0325  2AD1               	goto	l6535
 11017  0326  295D               	goto	l6425
 11018  0327                     l6555:	
 11019                           
 11020                           ;main.c: 211:         if(pmon) {
 11021  0327  0020               	movlb	0	; select bank0
 11022  0328  0834               	movf	_pmon,w
 11023  0329  1903               	btfsc	3,2
 11024  032A  2B2C               	goto	u4431
 11025  032B  2B2D               	goto	u4430
 11026  032C                     u4431:	
 11027  032C  2BC9               	goto	l1433
 11028  032D                     u4430:	
 11029  032D                     l6557:	
 11030                           
 11031                           ;main.c: 212:             (INTCONbits.GIE = 0);
 11032  032D  138B               	bcf	11,7	;volatile
 11033  032E                     l6559:	
 11034                           
 11035                           ;main.c: 213:             if(last5s >= pmon) {
 11036  032E  0834               	movf	_pmon,w
 11037  032F  0239               	subwf	_last5s,w	;volatile
 11038  0330  1C03               	skipc
 11039  0331  2B33               	goto	u4441
 11040  0332  2B34               	goto	u4440
 11041  0333                     u4441:	
 11042  0333  2BC8               	goto	l1434
 11043  0334                     u4440:	
 11044  0334                     l6561:	
 11045                           
 11046                           ;main.c: 214:                 last5s = 0;
 11047  0334  01B9               	clrf	_last5s	;volatile
 11048  0335                     l6563:	
 11049                           
 11050                           ;main.c: 215:                (INTCONbits.GIE = 1);
 11051  0335  178B               	bsf	11,7	;volatile
 11052  0336                     l6565:	
 11053                           
 11054                           ;main.c: 218:                 __nop();
 11055  0336  0000               	nop
 11056  0337                     l6567:	
 11057                           
 11058                           ;main.c: 219:                 temp = tsttc();
 11059  0337  3183  23FC  3180   	fcall	_tsttc
 11060  033A  0020               	movlb	0	; select bank0
 11061  033B  00D5               	movwf	??_main
 11062  033C  0855               	movf	??_main,w
 11063  033D  00B3               	movwf	_temp
 11064  033E                     l6569:	
 11065                           
 11066                           ;main.c: 220:                 __nop();
 11067  033E  0000               	nop
 11068  033F                     l6571:	
 11069                           
 11070                           ;main.c: 223:                 lum_bin = (ADC_read() >> 8);
 11071  033F  318D  25EA  3180   	fcall	_ADC_read
 11072  0342  0020               	movlb	0	; select bank0
 11073  0343  0847               	movf	?_ADC_read+1,w
 11074  0344  00D5               	movwf	??_main
 11075  0345  0855               	movf	??_main,w
 11076  0346  00B1               	movwf	_lum_bin
 11077  0347                     l6573:	
 11078                           
 11079                           ;main.c: 224:                 LED_bin(lum_bin);
 11080  0347  0831               	movf	_lum_bin,w
 11081  0348  00D5               	movwf	??_main
 11082  0349  01D6               	clrf	??_main+1
 11083  034A  0855               	movf	??_main,w
 11084  034B  00C4               	movwf	LED_bin@value
 11085  034C  0856               	movf	??_main+1,w
 11086  034D  00C5               	movwf	LED_bin@value+1
 11087  034E  318E  2604  3180   	fcall	_LED_bin
 11088  0351                     l6575:	
 11089                           
 11090                           ;main.c: 227:                 if(((temp > alat) || (lum_bin > alal)) && alaf) alarm = 1;
 11091  0351  0020               	movlb	0	; select bank0
 11092  0352  0833               	movf	_temp,w
 11093  0353  0232               	subwf	_alat,w
 11094  0354  1C03               	skipc
 11095  0355  2B57               	goto	u4451
 11096  0356  2B58               	goto	u4450
 11097  0357                     u4451:	
 11098  0357  2B5E               	goto	l6579
 11099  0358                     u4450:	
 11100  0358                     l6577:	
 11101  0358  0831               	movf	_lum_bin,w
 11102  0359  0230               	subwf	_alal,w
 11103  035A  1803               	skipnc
 11104  035B  2B5D               	goto	u4461
 11105  035C  2B5E               	goto	u4460
 11106  035D                     u4461:	
 11107  035D  2B64               	goto	l6583
 11108  035E                     u4460:	
 11109  035E                     l6579:	
 11110  035E  082F               	movf	_alaf,w
 11111  035F  1903               	btfsc	3,2
 11112  0360  2B62               	goto	u4471
 11113  0361  2B63               	goto	u4470
 11114  0362                     u4471:	
 11115  0362  2B64               	goto	l6583
 11116  0363                     u4470:	
 11117  0363                     l6581:	
 11118  0363  14F7               	bsf	_alarm/(0+8),_alarm& (0+7)	;volatile
 11119  0364                     l6583:	
 11120                           
 11121                           ;main.c: 230:                 if (temp != read_ring(nreg_pt, nreg, nreg_init, 0, 3) || l
      +                          um_bin != read_ring(nreg_pt, nreg, nreg_init, 0, 4)) {
 11122  0364  0835               	movf	_nreg,w
 11123  0365  00D5               	movwf	??_main
 11124  0366  0855               	movf	??_main,w
 11125  0367  00C8               	movwf	read_ring@nreg
 11126  0368  0842               	movf	_nreg_init,w
 11127  0369  00D6               	movwf	??_main+1
 11128  036A  0856               	movf	??_main+1,w
 11129  036B  00C9               	movwf	read_ring@nreg_init
 11130  036C  01CA               	clrf	read_ring@index
 11131  036D  3003               	movlw	3
 11132  036E  00D7               	movwf	??_main+2
 11133  036F  0857               	movf	??_main+2,w
 11134  0370  00CB               	movwf	read_ring@subindex
 11135  0371  0843               	movf	_nreg_pt,w
 11136  0372  318F  27C1  3180   	fcall	_read_ring
 11137  0375  0020               	movlb	0	; select bank0
 11138  0376  0633               	xorwf	_temp,w
 11139  0377  1D03               	skipz
 11140  0378  2B7A               	goto	u4481
 11141  0379  2B7B               	goto	u4480
 11142  037A                     u4481:	
 11143  037A  2B92               	goto	l1440
 11144  037B                     u4480:	
 11145  037B                     l6585:	
 11146  037B  0835               	movf	_nreg,w
 11147  037C  00D5               	movwf	??_main
 11148  037D  0855               	movf	??_main,w
 11149  037E  00C8               	movwf	read_ring@nreg
 11150  037F  0842               	movf	_nreg_init,w
 11151  0380  00D6               	movwf	??_main+1
 11152  0381  0856               	movf	??_main+1,w
 11153  0382  00C9               	movwf	read_ring@nreg_init
 11154  0383  01CA               	clrf	read_ring@index
 11155  0384  3004               	movlw	4
 11156  0385  00D7               	movwf	??_main+2
 11157  0386  0857               	movf	??_main+2,w
 11158  0387  00CB               	movwf	read_ring@subindex
 11159  0388  0843               	movf	_nreg_pt,w
 11160  0389  318F  27C1  3180   	fcall	_read_ring
 11161  038C  0020               	movlb	0	; select bank0
 11162  038D  0631               	xorwf	_lum_bin,w
 11163  038E  1903               	skipnz
 11164  038F  2B91               	goto	u4491
 11165  0390  2B92               	goto	u4490
 11166  0391                     u4491:	
 11167  0391  2BC9               	goto	l1433
 11168  0392                     u4490:	
 11169  0392                     l1440:	
 11170                           
 11171                           ;main.c: 231:                     (INTCONbits.GIE = 0);
 11172  0392  138B               	bcf	11,7	;volatile
 11173  0393                     l6587:	
 11174                           
 11175                           ;main.c: 232:                     ring_byte[0] = clkh;
 11176  0393  083C               	movf	_clkh,w	;volatile
 11177  0394  00D5               	movwf	??_main
 11178  0395  0855               	movf	??_main,w
 11179  0396  00BD               	movwf	_ring_byte
 11180                           
 11181                           ;main.c: 233:                     ring_byte[1] = clkm;
 11182  0397  083B               	movf	_clkm,w	;volatile
 11183  0398  00D5               	movwf	??_main
 11184  0399  0855               	movf	??_main,w
 11185  039A  00BE               	movwf	_ring_byte+1
 11186                           
 11187                           ;main.c: 234:                     ring_byte[2] = seg;
 11188  039B  083A               	movf	_seg,w	;volatile
 11189  039C  00D5               	movwf	??_main
 11190  039D  0855               	movf	??_main,w
 11191  039E  00BF               	movwf	_ring_byte+2
 11192  039F                     l6589:	
 11193                           
 11194                           ;main.c: 235:                     (INTCONbits.GIE = 1);
 11195  039F  178B               	bsf	11,7	;volatile
 11196                           
 11197                           ;main.c: 236:                     ring_byte[3] = temp;
 11198  03A0  0833               	movf	_temp,w
 11199  03A1  00D5               	movwf	??_main
 11200  03A2  0855               	movf	??_main,w
 11201  03A3  00C0               	movwf	_ring_byte+3
 11202                           
 11203                           ;main.c: 237:                     ring_byte[4] = lum_bin;
 11204  03A4  0831               	movf	_lum_bin,w
 11205  03A5  00D5               	movwf	??_main
 11206  03A6  0855               	movf	??_main,w
 11207  03A7  00C1               	movwf	_ring_byte+4
 11208  03A8                     l6591:	
 11209                           
 11210                           ;main.c: 238:                     push_ring(&nreg_pt, nreg, &nreg_init, ring_byte);
 11211  03A8  0835               	movf	_nreg,w
 11212  03A9  00D5               	movwf	??_main
 11213  03AA  0855               	movf	??_main,w
 11214  03AB  00CE               	movwf	push_ring@nreg
 11215  03AC  3042               	movlw	(low (_nreg_init| 0))& (0+255)
 11216  03AD  00D6               	movwf	??_main+1
 11217  03AE  0856               	movf	??_main+1,w
 11218  03AF  00CF               	movwf	push_ring@nreg_init
 11219  03B0  303D               	movlw	(low (_ring_byte| 0))& (0+255)
 11220  03B1  00D7               	movwf	??_main+2
 11221  03B2  0857               	movf	??_main+2,w
 11222  03B3  00D0               	movwf	push_ring@ring_byte
 11223  03B4  3043               	movlw	(low (_nreg_pt| 0))& (0+255)
 11224  03B5  3187  2799  3180   	fcall	_push_ring
 11225  03B8                     l6593:	
 11226                           
 11227                           ;main.c: 241:                     DATAEE_WriteByte(0xF0FF - 10 + 4, nreg_pt);
 11228  03B8  30F9               	movlw	249
 11229  03B9  0020               	movlb	0	; select bank0
 11230  03BA  00CA               	movwf	DATAEE_WriteByte@bAdd
 11231  03BB  30F0               	movlw	240
 11232  03BC  00CB               	movwf	DATAEE_WriteByte@bAdd+1
 11233  03BD  0843               	movf	_nreg_pt,w
 11234  03BE  00D5               	movwf	??_main
 11235  03BF  0855               	movf	??_main,w
 11236  03C0  00CC               	movwf	DATAEE_WriteByte@bData
 11237  03C1  318E  26B8  3180   	fcall	_DATAEE_WriteByte
 11238  03C4                     l6595:	
 11239                           
 11240                           ;main.c: 242:                     cksum_w();
 11241  03C4  318C  24CA  3180   	fcall	_cksum_w
 11242  03C7  2BC9               	goto	l1433
 11243  03C8                     l1434:	
 11244                           ;main.c: 245:             else
 11245                           
 11246                           
 11247                           ;main.c: 246:                 (INTCONbits.GIE = 1);
 11248  03C8  178B               	bsf	11,7	;volatile
 11249  03C9                     l1433:	
 11250                           ;main.c: 247:         }
 11251                           
 11252                           
 11253                           ;main.c: 250:         (INTCONbits.GIE = 0);
 11254  03C9  138B               	bcf	11,7	;volatile
 11255  03CA                     l6597:	
 11256                           
 11257                           ;main.c: 251:         if (last1m >= 1) {
 11258  03CA  0020               	movlb	0	; select bank0
 11259  03CB  0838               	movf	_last1m,w	;volatile
 11260  03CC  1903               	btfsc	3,2
 11261  03CD  2BCF               	goto	u4501
 11262  03CE  2BD0               	goto	u4500
 11263  03CF                     u4501:	
 11264  03CF  2BF5               	goto	l1442
 11265  03D0                     u4500:	
 11266  03D0                     l6599:	
 11267                           
 11268                           ;main.c: 253:             last1m = 0;
 11269  03D0  01B8               	clrf	_last1m	;volatile
 11270  03D1                     l6601:	
 11271                           
 11272                           ;main.c: 254:             aux = clkh;
 11273  03D1  083C               	movf	_clkh,w	;volatile
 11274  03D2  00D5               	movwf	??_main
 11275  03D3  0855               	movf	??_main,w
 11276  03D4  00AD               	movwf	_aux
 11277  03D5                     l6603:	
 11278                           
 11279                           ;main.c: 255:             aux1 = clkm;
 11280  03D5  083B               	movf	_clkm,w	;volatile
 11281  03D6  00D5               	movwf	??_main
 11282  03D7  0855               	movf	??_main,w
 11283  03D8  00AC               	movwf	_aux1
 11284  03D9                     l6605:	
 11285                           
 11286                           ;main.c: 256:             (INTCONbits.GIE = 1);
 11287  03D9  178B               	bsf	11,7	;volatile
 11288  03DA                     l6607:	
 11289                           
 11290                           ;main.c: 257:             DATAEE_WriteByte(0xF0FF - 10 + 1, aux);
 11291  03DA  30F6               	movlw	246
 11292  03DB  00CA               	movwf	DATAEE_WriteByte@bAdd
 11293  03DC  30F0               	movlw	240
 11294  03DD  00CB               	movwf	DATAEE_WriteByte@bAdd+1
 11295  03DE  082D               	movf	_aux,w
 11296  03DF  00D5               	movwf	??_main
 11297  03E0  0855               	movf	??_main,w
 11298  03E1  00CC               	movwf	DATAEE_WriteByte@bData
 11299  03E2  318E  26B8  3180   	fcall	_DATAEE_WriteByte
 11300  03E5                     l6609:	
 11301                           
 11302                           ;main.c: 258:             DATAEE_WriteByte(0xF0FF - 10 + 2, aux1);
 11303  03E5  30F7               	movlw	247
 11304  03E6  0020               	movlb	0	; select bank0
 11305  03E7  00CA               	movwf	DATAEE_WriteByte@bAdd
 11306  03E8  30F0               	movlw	240
 11307  03E9  00CB               	movwf	DATAEE_WriteByte@bAdd+1
 11308  03EA  082C               	movf	_aux1,w
 11309  03EB  00D5               	movwf	??_main
 11310  03EC  0855               	movf	??_main,w
 11311  03ED  00CC               	movwf	DATAEE_WriteByte@bData
 11312  03EE  318E  26B8  3180   	fcall	_DATAEE_WriteByte
 11313  03F1                     l6611:	
 11314                           
 11315                           ;main.c: 259:             cksum_w();
 11316  03F1  318C  24CA  3180   	fcall	_cksum_w
 11317                           
 11318                           ;main.c: 260:         }
 11319  03F4  2BF6               	goto	l1366
 11320  03F5                     l1442:	
 11321                           ;main.c: 261:         else
 11322                           
 11323                           
 11324                           ;main.c: 262:             (INTCONbits.GIE = 1);
 11325  03F5  178B               	bsf	11,7	;volatile
 11326  03F6                     l1366:	
 11327                           ;main.c: 263:     }
 11328                           
 11329                           
 11330                           ;main.c: 127:     while (running)
 11331  03F6  187D               	btfsc	_running/(0+8),_running& (0+7)
 11332  03F7  2BF9               	goto	u4511
 11333  03F8  2BFA               	goto	u4510
 11334  03F9                     u4511:	
 11335  03F9  2949               	goto	l6417
 11336  03FA                     u4510:	
 11337  03FA                     l1445:	
 11338  03FA  3180  284F         	ljmp	start
 11339  03FC                     __end_of_main:	
 11340                           
 11341                           	psect	text1
 11342  03FC                     __ptext1:	
 11343 ;; *************** function _tsttc *****************
 11344 ;; Defined at:
 11345 ;;		line 15 in file "I2C/i2c.c"
 11346 ;; Parameters:    Size  Location     Type
 11347 ;;		None
 11348 ;; Auto vars:     Size  Location     Type
 11349 ;;  value           1    3[BANK0 ] unsigned char 
 11350 ;; Return value:  Size  Location     Type
 11351 ;;                  1    wreg      unsigned char 
 11352 ;; Registers used:
 11353 ;;		wreg, status,2, status,0, pclath, cstack
 11354 ;; Tracked objects:
 11355 ;;		On entry : 0/0
 11356 ;;		On exit  : 0/0
 11357 ;;		Unchanged: 0/0
 11358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11360 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11361 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11362 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11363 ;;Total ram usage:        2 bytes
 11364 ;; Hardware stack levels used:    1
 11365 ;; Hardware stack levels required when called:    7
 11366 ;; This function calls:
 11367 ;;		_ReadI2C
 11368 ;;		_WriteI2C
 11369 ;; This function is called by:
 11370 ;;		_main
 11371 ;; This function uses a non-reentrant model
 11372 ;;
 11373                           
 11374                           
 11375                           ;psect for function _tsttc
 11376  03FC                     _tsttc:	
 11377  03FC                     l36:	
 11378                           ;incstack = 0
 11379                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
 11380                           ;I2C/i2c.c: 17:  unsigned char value;;I2C/i2c.c: 19:     do{
 11381                           
 11382  03FC                     l4769:	
 11383                           ;I2C/i2c.c: 20:         while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11384                           
 11385  03FC  0023               	movlb	3	; select bank3
 11386  03FD  0C0F               	rrf	15,w	;volatile
 11387  03FE  0C89               	rrf	9,f
 11388  03FF  3901               	andlw	1
 11389  0400  0020               	movlb	0	; select bank0
 11390  0401  00C6               	movwf	??_tsttc
 11391  0402  0023               	movlb	3	; select bank3
 11392  0403  0811               	movf	17,w	;volatile
 11393  0404  391F               	andlw	31
 11394  0405  0020               	movlb	0	; select bank0
 11395  0406  0446               	iorwf	??_tsttc,w
 11396  0407  1D03               	btfss	3,2
 11397  0408  2C0A               	goto	u2361
 11398  0409  2C0B               	goto	u2360
 11399  040A                     u2361:	
 11400  040A  2BFC               	goto	l4769
 11401  040B                     u2360:	
 11402  040B                     l39:	
 11403                           
 11404                           ;I2C/i2c.c: 21:         SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0
      +                          x1F) | (SSP1STATbits.R_W));
 11405  040B  0023               	movlb	3	; select bank3
 11406  040C  1411               	bsf	17,0	;volatile
 11407  040D                     l40:	
 11408  040D  1811               	btfsc	17,0	;volatile
 11409  040E  2C10               	goto	u2371
 11410  040F  2C11               	goto	u2370
 11411  0410                     u2371:	
 11412  0410  2C0D               	goto	l40
 11413  0411                     u2370:	
 11414  0411                     l4771:	
 11415  0411  0023               	movlb	3	; select bank3
 11416  0412  0C0F               	rrf	15,w	;volatile
 11417  0413  0C89               	rrf	9,f
 11418  0414  3901               	andlw	1
 11419  0415  0020               	movlb	0	; select bank0
 11420  0416  00C6               	movwf	??_tsttc
 11421  0417  0023               	movlb	3	; select bank3
 11422  0418  0811               	movf	17,w	;volatile
 11423  0419  391F               	andlw	31
 11424  041A  0020               	movlb	0	; select bank0
 11425  041B  0446               	iorwf	??_tsttc,w
 11426  041C  1D03               	btfss	3,2
 11427  041D  2C1F               	goto	u2381
 11428  041E  2C20               	goto	u2380
 11429  041F                     u2381:	
 11430  041F  2C11               	goto	l4771
 11431  0420                     u2380:	
 11432  0420                     l4773:	
 11433                           
 11434                           ;I2C/i2c.c: 23:         WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.
      +                          R_W));
 11435  0420  309A               	movlw	154
 11436  0421  3185  25AC  3183   	fcall	_WriteI2C
 11437  0424                     l4775:	
 11438  0424  0023               	movlb	3	; select bank3
 11439  0425  0C0F               	rrf	15,w	;volatile
 11440  0426  0C89               	rrf	9,f
 11441  0427  3901               	andlw	1
 11442  0428  0020               	movlb	0	; select bank0
 11443  0429  00C6               	movwf	??_tsttc
 11444  042A  0023               	movlb	3	; select bank3
 11445  042B  0811               	movf	17,w	;volatile
 11446  042C  391F               	andlw	31
 11447  042D  0020               	movlb	0	; select bank0
 11448  042E  0446               	iorwf	??_tsttc,w
 11449  042F  1D03               	btfss	3,2
 11450  0430  2C32               	goto	u2391
 11451  0431  2C33               	goto	u2390
 11452  0432                     u2391:	
 11453  0432  2C24               	goto	l4775
 11454  0433                     u2390:	
 11455  0433                     l4777:	
 11456                           
 11457                           ;I2C/i2c.c: 24:         WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11458  0433  3001               	movlw	1
 11459  0434  3185  25AC  3183   	fcall	_WriteI2C
 11460  0437                     l4779:	
 11461  0437  0023               	movlb	3	; select bank3
 11462  0438  0C0F               	rrf	15,w	;volatile
 11463  0439  0C89               	rrf	9,f
 11464  043A  3901               	andlw	1
 11465  043B  0020               	movlb	0	; select bank0
 11466  043C  00C6               	movwf	??_tsttc
 11467  043D  0023               	movlb	3	; select bank3
 11468  043E  0811               	movf	17,w	;volatile
 11469  043F  391F               	andlw	31
 11470  0440  0020               	movlb	0	; select bank0
 11471  0441  0446               	iorwf	??_tsttc,w
 11472  0442  1D03               	btfss	3,2
 11473  0443  2C45               	goto	u2401
 11474  0444  2C46               	goto	u2400
 11475  0445                     u2401:	
 11476  0445  2C37               	goto	l4779
 11477  0446                     u2400:	
 11478  0446                     l51:	
 11479                           
 11480                           ;I2C/i2c.c: 25:         SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 &
      +                           0x1F) | (SSP1STATbits.R_W));
 11481  0446  0023               	movlb	3	; select bank3
 11482  0447  1491               	bsf	17,1	;volatile
 11483  0448                     l52:	
 11484  0448  1891               	btfsc	17,1	;volatile
 11485  0449  2C4B               	goto	u2411
 11486  044A  2C4C               	goto	u2410
 11487  044B                     u2411:	
 11488  044B  2C48               	goto	l52
 11489  044C                     u2410:	
 11490  044C                     l4781:	
 11491  044C  0023               	movlb	3	; select bank3
 11492  044D  0C0F               	rrf	15,w	;volatile
 11493  044E  0C89               	rrf	9,f
 11494  044F  3901               	andlw	1
 11495  0450  0020               	movlb	0	; select bank0
 11496  0451  00C6               	movwf	??_tsttc
 11497  0452  0023               	movlb	3	; select bank3
 11498  0453  0811               	movf	17,w	;volatile
 11499  0454  391F               	andlw	31
 11500  0455  0020               	movlb	0	; select bank0
 11501  0456  0446               	iorwf	??_tsttc,w
 11502  0457  1D03               	btfss	3,2
 11503  0458  2C5A               	goto	u2421
 11504  0459  2C5B               	goto	u2420
 11505  045A                     u2421:	
 11506  045A  2C4C               	goto	l4781
 11507  045B                     u2420:	
 11508  045B                     l4783:	
 11509                           
 11510                           ;I2C/i2c.c: 26:         WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.
      +                          R_W));
 11511  045B  309B               	movlw	155
 11512  045C  3185  25AC  3183   	fcall	_WriteI2C
 11513  045F                     l4785:	
 11514  045F  0023               	movlb	3	; select bank3
 11515  0460  0C0F               	rrf	15,w	;volatile
 11516  0461  0C89               	rrf	9,f
 11517  0462  3901               	andlw	1
 11518  0463  0020               	movlb	0	; select bank0
 11519  0464  00C6               	movwf	??_tsttc
 11520  0465  0023               	movlb	3	; select bank3
 11521  0466  0811               	movf	17,w	;volatile
 11522  0467  391F               	andlw	31
 11523  0468  0020               	movlb	0	; select bank0
 11524  0469  0446               	iorwf	??_tsttc,w
 11525  046A  1D03               	btfss	3,2
 11526  046B  2C6D               	goto	u2431
 11527  046C  2C6E               	goto	u2430
 11528  046D                     u2431:	
 11529  046D  2C5F               	goto	l4785
 11530  046E                     u2430:	
 11531  046E                     l4787:	
 11532                           
 11533                           ;I2C/i2c.c: 27:         value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W)
      +                          );
 11534  046E  318E  2675  3183   	fcall	_ReadI2C
 11535  0471  0020               	movlb	0	; select bank0
 11536  0472  00C6               	movwf	??_tsttc
 11537  0473  0846               	movf	??_tsttc,w
 11538  0474  00C7               	movwf	tsttc@value
 11539  0475                     l4789:	
 11540  0475  0023               	movlb	3	; select bank3
 11541  0476  0C0F               	rrf	15,w	;volatile
 11542  0477  0C89               	rrf	9,f
 11543  0478  3901               	andlw	1
 11544  0479  0020               	movlb	0	; select bank0
 11545  047A  00C6               	movwf	??_tsttc
 11546  047B  0023               	movlb	3	; select bank3
 11547  047C  0811               	movf	17,w	;volatile
 11548  047D  391F               	andlw	31
 11549  047E  0020               	movlb	0	; select bank0
 11550  047F  0446               	iorwf	??_tsttc,w
 11551  0480  1D03               	btfss	3,2
 11552  0481  2C83               	goto	u2441
 11553  0482  2C84               	goto	u2440
 11554  0483                     u2441:	
 11555  0483  2C75               	goto	l4789
 11556  0484                     u2440:	
 11557  0484                     l63:	
 11558                           
 11559                           ;I2C/i2c.c: 28:         SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACK
      +                          EN); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11560  0484  0023               	movlb	3	; select bank3
 11561  0485  1691               	bsf	17,5	;volatile
 11562  0486  1611               	bsf	17,4	;volatile
 11563  0487                     l64:	
 11564  0487  1A11               	btfsc	17,4	;volatile
 11565  0488  2C8A               	goto	u2451
 11566  0489  2C8B               	goto	u2450
 11567  048A                     u2451:	
 11568  048A  2C87               	goto	l64
 11569  048B                     u2450:	
 11570  048B                     l4791:	
 11571  048B  0023               	movlb	3	; select bank3
 11572  048C  0C0F               	rrf	15,w	;volatile
 11573  048D  0C89               	rrf	9,f
 11574  048E  3901               	andlw	1
 11575  048F  0020               	movlb	0	; select bank0
 11576  0490  00C6               	movwf	??_tsttc
 11577  0491  0023               	movlb	3	; select bank3
 11578  0492  0811               	movf	17,w	;volatile
 11579  0493  391F               	andlw	31
 11580  0494  0020               	movlb	0	; select bank0
 11581  0495  0446               	iorwf	??_tsttc,w
 11582  0496  1D03               	btfss	3,2
 11583  0497  2C99               	goto	u2461
 11584  0498  2C9A               	goto	u2460
 11585  0499                     u2461:	
 11586  0499  2C8B               	goto	l4791
 11587  049A                     u2460:	
 11588  049A                     l69:	
 11589                           
 11590                           ;I2C/i2c.c: 29:         SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11591  049A  0023               	movlb	3	; select bank3
 11592  049B  1511               	bsf	17,2	;volatile
 11593  049C                     l70:	
 11594  049C  1911               	btfsc	17,2	;volatile
 11595  049D  2C9F               	goto	u2471
 11596  049E  2CA0               	goto	u2470
 11597  049F                     u2471:	
 11598  049F  2C9C               	goto	l70
 11599  04A0                     u2470:	
 11600  04A0                     l72:	
 11601                           
 11602                           ;I2C/i2c.c: 30:     } while (!(value & 0x40));
 11603  04A0  0020               	movlb	0	; select bank0
 11604  04A1  1F47               	btfss	tsttc@value,6
 11605  04A2  2CA4               	goto	u2481
 11606  04A3  2CA5               	goto	u2480
 11607  04A4                     u2481:	
 11608  04A4  2BFC               	goto	l36
 11609  04A5                     u2480:	
 11610  04A5                     l4793:	
 11611  04A5  0023               	movlb	3	; select bank3
 11612  04A6  0C0F               	rrf	15,w	;volatile
 11613  04A7  0C89               	rrf	9,f
 11614  04A8  3901               	andlw	1
 11615  04A9  0020               	movlb	0	; select bank0
 11616  04AA  00C6               	movwf	??_tsttc
 11617  04AB  0023               	movlb	3	; select bank3
 11618  04AC  0811               	movf	17,w	;volatile
 11619  04AD  391F               	andlw	31
 11620  04AE  0020               	movlb	0	; select bank0
 11621  04AF  0446               	iorwf	??_tsttc,w
 11622  04B0  1D03               	btfss	3,2
 11623  04B1  2CB3               	goto	u2491
 11624  04B2  2CB4               	goto	u2490
 11625  04B3                     u2491:	
 11626  04B3  2CA5               	goto	l4793
 11627  04B4                     u2490:	
 11628  04B4                     l76:	
 11629                           
 11630                           ;I2C/i2c.c: 33:  SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | 
      +                          (SSP1STATbits.R_W));
 11631  04B4  0023               	movlb	3	; select bank3
 11632  04B5  1411               	bsf	17,0	;volatile
 11633  04B6                     l77:	
 11634  04B6  1811               	btfsc	17,0	;volatile
 11635  04B7  2CB9               	goto	u2501
 11636  04B8  2CBA               	goto	u2500
 11637  04B9                     u2501:	
 11638  04B9  2CB6               	goto	l77
 11639  04BA                     u2500:	
 11640  04BA                     l4795:	
 11641  04BA  0023               	movlb	3	; select bank3
 11642  04BB  0C0F               	rrf	15,w	;volatile
 11643  04BC  0C89               	rrf	9,f
 11644  04BD  3901               	andlw	1
 11645  04BE  0020               	movlb	0	; select bank0
 11646  04BF  00C6               	movwf	??_tsttc
 11647  04C0  0023               	movlb	3	; select bank3
 11648  04C1  0811               	movf	17,w	;volatile
 11649  04C2  391F               	andlw	31
 11650  04C3  0020               	movlb	0	; select bank0
 11651  04C4  0446               	iorwf	??_tsttc,w
 11652  04C5  1D03               	btfss	3,2
 11653  04C6  2CC8               	goto	u2511
 11654  04C7  2CC9               	goto	u2510
 11655  04C8                     u2511:	
 11656  04C8  2CBA               	goto	l4795
 11657  04C9                     u2510:	
 11658  04C9                     l4797:	
 11659                           
 11660                           ;I2C/i2c.c: 34:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11661  04C9  309A               	movlw	154
 11662  04CA  3185  25AC  3183   	fcall	_WriteI2C
 11663  04CD                     l4799:	
 11664  04CD  0023               	movlb	3	; select bank3
 11665  04CE  0C0F               	rrf	15,w	;volatile
 11666  04CF  0C89               	rrf	9,f
 11667  04D0  3901               	andlw	1
 11668  04D1  0020               	movlb	0	; select bank0
 11669  04D2  00C6               	movwf	??_tsttc
 11670  04D3  0023               	movlb	3	; select bank3
 11671  04D4  0811               	movf	17,w	;volatile
 11672  04D5  391F               	andlw	31
 11673  04D6  0020               	movlb	0	; select bank0
 11674  04D7  0446               	iorwf	??_tsttc,w
 11675  04D8  1D03               	btfss	3,2
 11676  04D9  2CDB               	goto	u2521
 11677  04DA  2CDC               	goto	u2520
 11678  04DB                     u2521:	
 11679  04DB  2CCD               	goto	l4799
 11680  04DC                     u2520:	
 11681  04DC                     l4801:	
 11682                           
 11683                           ;I2C/i2c.c: 35:  WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11684  04DC  3000               	movlw	0
 11685  04DD  3185  25AC  3183   	fcall	_WriteI2C
 11686  04E0                     l4803:	
 11687  04E0  0023               	movlb	3	; select bank3
 11688  04E1  0C0F               	rrf	15,w	;volatile
 11689  04E2  0C89               	rrf	9,f
 11690  04E3  3901               	andlw	1
 11691  04E4  0020               	movlb	0	; select bank0
 11692  04E5  00C6               	movwf	??_tsttc
 11693  04E6  0023               	movlb	3	; select bank3
 11694  04E7  0811               	movf	17,w	;volatile
 11695  04E8  391F               	andlw	31
 11696  04E9  0020               	movlb	0	; select bank0
 11697  04EA  0446               	iorwf	??_tsttc,w
 11698  04EB  1D03               	btfss	3,2
 11699  04EC  2CEE               	goto	u2531
 11700  04ED  2CEF               	goto	u2530
 11701  04EE                     u2531:	
 11702  04EE  2CE0               	goto	l4803
 11703  04EF                     u2530:	
 11704  04EF                     l88:	
 11705                           
 11706                           ;I2C/i2c.c: 36:  SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) 
      +                          | (SSP1STATbits.R_W));
 11707  04EF  0023               	movlb	3	; select bank3
 11708  04F0  1491               	bsf	17,1	;volatile
 11709  04F1                     l89:	
 11710  04F1  1891               	btfsc	17,1	;volatile
 11711  04F2  2CF4               	goto	u2541
 11712  04F3  2CF5               	goto	u2540
 11713  04F4                     u2541:	
 11714  04F4  2CF1               	goto	l89
 11715  04F5                     u2540:	
 11716  04F5                     l4805:	
 11717  04F5  0023               	movlb	3	; select bank3
 11718  04F6  0C0F               	rrf	15,w	;volatile
 11719  04F7  0C89               	rrf	9,f
 11720  04F8  3901               	andlw	1
 11721  04F9  0020               	movlb	0	; select bank0
 11722  04FA  00C6               	movwf	??_tsttc
 11723  04FB  0023               	movlb	3	; select bank3
 11724  04FC  0811               	movf	17,w	;volatile
 11725  04FD  391F               	andlw	31
 11726  04FE  0020               	movlb	0	; select bank0
 11727  04FF  0446               	iorwf	??_tsttc,w
 11728  0500  1D03               	btfss	3,2
 11729  0501  2D03               	goto	u2551
 11730  0502  2D04               	goto	u2550
 11731  0503                     u2551:	
 11732  0503  2CF5               	goto	l4805
 11733  0504                     u2550:	
 11734  0504                     l4807:	
 11735                           
 11736                           ;I2C/i2c.c: 37:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11737  0504  309B               	movlw	155
 11738  0505  3185  25AC  3183   	fcall	_WriteI2C
 11739  0508                     l4809:	
 11740  0508  0023               	movlb	3	; select bank3
 11741  0509  0C0F               	rrf	15,w	;volatile
 11742  050A  0C89               	rrf	9,f
 11743  050B  3901               	andlw	1
 11744  050C  0020               	movlb	0	; select bank0
 11745  050D  00C6               	movwf	??_tsttc
 11746  050E  0023               	movlb	3	; select bank3
 11747  050F  0811               	movf	17,w	;volatile
 11748  0510  391F               	andlw	31
 11749  0511  0020               	movlb	0	; select bank0
 11750  0512  0446               	iorwf	??_tsttc,w
 11751  0513  1D03               	btfss	3,2
 11752  0514  2D16               	goto	u2561
 11753  0515  2D17               	goto	u2560
 11754  0516                     u2561:	
 11755  0516  2D08               	goto	l4809
 11756  0517                     u2560:	
 11757  0517                     l4811:	
 11758                           
 11759                           ;I2C/i2c.c: 38:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11760  0517  318E  2675  3183   	fcall	_ReadI2C
 11761  051A  0020               	movlb	0	; select bank0
 11762  051B  00C6               	movwf	??_tsttc
 11763  051C  0846               	movf	??_tsttc,w
 11764  051D  00C7               	movwf	tsttc@value
 11765  051E                     l4813:	
 11766  051E  0023               	movlb	3	; select bank3
 11767  051F  0C0F               	rrf	15,w	;volatile
 11768  0520  0C89               	rrf	9,f
 11769  0521  3901               	andlw	1
 11770  0522  0020               	movlb	0	; select bank0
 11771  0523  00C6               	movwf	??_tsttc
 11772  0524  0023               	movlb	3	; select bank3
 11773  0525  0811               	movf	17,w	;volatile
 11774  0526  391F               	andlw	31
 11775  0527  0020               	movlb	0	; select bank0
 11776  0528  0446               	iorwf	??_tsttc,w
 11777  0529  1D03               	btfss	3,2
 11778  052A  2D2C               	goto	u2571
 11779  052B  2D2D               	goto	u2570
 11780  052C                     u2571:	
 11781  052C  2D1E               	goto	l4813
 11782  052D                     u2570:	
 11783  052D                     l100:	
 11784                           
 11785                           ;I2C/i2c.c: 39:  SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); wh
      +                          ile ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11786  052D  0023               	movlb	3	; select bank3
 11787  052E  1691               	bsf	17,5	;volatile
 11788  052F  1611               	bsf	17,4	;volatile
 11789  0530                     l101:	
 11790  0530  1A11               	btfsc	17,4	;volatile
 11791  0531  2D33               	goto	u2581
 11792  0532  2D34               	goto	u2580
 11793  0533                     u2581:	
 11794  0533  2D30               	goto	l101
 11795  0534                     u2580:	
 11796  0534                     l4815:	
 11797  0534  0023               	movlb	3	; select bank3
 11798  0535  0C0F               	rrf	15,w	;volatile
 11799  0536  0C89               	rrf	9,f
 11800  0537  3901               	andlw	1
 11801  0538  0020               	movlb	0	; select bank0
 11802  0539  00C6               	movwf	??_tsttc
 11803  053A  0023               	movlb	3	; select bank3
 11804  053B  0811               	movf	17,w	;volatile
 11805  053C  391F               	andlw	31
 11806  053D  0020               	movlb	0	; select bank0
 11807  053E  0446               	iorwf	??_tsttc,w
 11808  053F  1D03               	btfss	3,2
 11809  0540  2D42               	goto	u2591
 11810  0541  2D43               	goto	u2590
 11811  0542                     u2591:	
 11812  0542  2D34               	goto	l4815
 11813  0543                     u2590:	
 11814  0543                     l106:	
 11815                           
 11816                           ;I2C/i2c.c: 40:  SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11817  0543  0023               	movlb	3	; select bank3
 11818  0544  1511               	bsf	17,2	;volatile
 11819  0545                     l107:	
 11820  0545  1911               	btfsc	17,2	;volatile
 11821  0546  2D48               	goto	u2601
 11822  0547  2D49               	goto	u2600
 11823  0548                     u2601:	
 11824  0548  2D45               	goto	l107
 11825  0549                     u2600:	
 11826  0549                     l4817:	
 11827                           
 11828                           ;I2C/i2c.c: 42:  return value;
 11829  0549  0020               	movlb	0	; select bank0
 11830  054A  0847               	movf	tsttc@value,w
 11831  054B                     l110:	
 11832  054B  0008               	return
 11833  054C                     __end_of_tsttc:	
 11834                           
 11835                           	psect	text2
 11836  05AC                     __ptext2:	
 11837 ;; *************** function _WriteI2C *****************
 11838 ;; Defined at:
 11839 ;;		line 88 in file "I2C/i2c.c"
 11840 ;; Parameters:    Size  Location     Type
 11841 ;;  data_out        1    wreg     unsigned char 
 11842 ;; Auto vars:     Size  Location     Type
 11843 ;;  data_out        1    1[BANK0 ] unsigned char 
 11844 ;; Return value:  Size  Location     Type
 11845 ;;                  1    wreg      char 
 11846 ;; Registers used:
 11847 ;;		wreg, status,2, status,0
 11848 ;; Tracked objects:
 11849 ;;		On entry : 0/0
 11850 ;;		On exit  : 0/0
 11851 ;;		Unchanged: 0/0
 11852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11854 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11855 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11856 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11857 ;;Total ram usage:        2 bytes
 11858 ;; Hardware stack levels used:    1
 11859 ;; Hardware stack levels required when called:    6
 11860 ;; This function calls:
 11861 ;;		Nothing
 11862 ;; This function is called by:
 11863 ;;		_tsttc
 11864 ;; This function uses a non-reentrant model
 11865 ;;
 11866                           
 11867                           
 11868                           ;psect for function _WriteI2C
 11869  05AC                     _WriteI2C:	
 11870                           
 11871                           ;incstack = 0
 11872                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 11873                           ;WriteI2C@data_out stored from wreg
 11874  05AC  0020               	movlb	0	; select bank0
 11875  05AD  00C5               	movwf	WriteI2C@data_out
 11876  05AE                     l4249:	
 11877                           
 11878                           ;I2C/i2c.c: 88: signed char WriteI2C( unsigned char data_out );I2C/i2c.c: 89: {;I2C/i2c.
      +                          c: 90:   SSP1BUF = data_out;
 11879  05AE  0845               	movf	WriteI2C@data_out,w
 11880  05AF  0023               	movlb	3	; select bank3
 11881  05B0  008C               	movwf	12	;volatile
 11882  05B1                     l4251:	
 11883                           
 11884                           ;I2C/i2c.c: 91:   if ( SSP1CON1bits.WCOL )
 11885  05B1  1F90               	btfss	16,7	;volatile
 11886  05B2  2DB4               	goto	u1921
 11887  05B3  2DB5               	goto	u1920
 11888  05B4                     u1921:	
 11889  05B4  2DB6               	goto	l4257
 11890  05B5                     u1920:	
 11891  05B5  2E05               	goto	l126
 11892  05B6                     l4257:	
 11893                           
 11894                           ;I2C/i2c.c: 94:   {;I2C/i2c.c: 95:  if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)!=0x0
      +                          B) )
 11895  05B6  300F               	movlw	15
 11896  05B7  0510               	andwf	16,w	;volatile
 11897  05B8  0020               	movlb	0	; select bank0
 11898  05B9  00C4               	movwf	??_WriteI2C
 11899  05BA  3008               	movlw	8
 11900  05BB  0644               	xorwf	??_WriteI2C,w
 11901  05BC  1903               	btfsc	3,2
 11902  05BD  2DBF               	goto	u1931
 11903  05BE  2DC0               	goto	u1930
 11904  05BF                     u1931:	
 11905  05BF  2DD9               	goto	l4269
 11906  05C0                     u1930:	
 11907  05C0                     l4259:	
 11908  05C0  300F               	movlw	15
 11909  05C1  0023               	movlb	3	; select bank3
 11910  05C2  0510               	andwf	16,w	;volatile
 11911  05C3  0020               	movlb	0	; select bank0
 11912  05C4  00C4               	movwf	??_WriteI2C
 11913  05C5  300B               	movlw	11
 11914  05C6  0644               	xorwf	??_WriteI2C,w
 11915  05C7  1903               	btfsc	3,2
 11916  05C8  2DCA               	goto	u1941
 11917  05C9  2DCB               	goto	u1940
 11918  05CA                     u1941:	
 11919  05CA  2DD9               	goto	l4269
 11920  05CB                     u1940:	
 11921  05CB                     l4261:	
 11922                           
 11923                           ;I2C/i2c.c: 96:  {;I2C/i2c.c: 97:        SSP1CON1bits.CKP = 1;
 11924  05CB  0023               	movlb	3	; select bank3
 11925  05CC  1610               	bsf	16,4	;volatile
 11926  05CD                     l129:	
 11927                           ;I2C/i2c.c: 98:        while ( !PIR3bits.SSP1IF );
 11928                           
 11929  05CD  002E               	movlb	14	; select bank14
 11930  05CE  1C0F               	btfss	15,0	;volatile
 11931  05CF  2DD1               	goto	u1951
 11932  05D0  2DD2               	goto	u1950
 11933  05D1                     u1951:	
 11934  05D1  2DCD               	goto	l129
 11935  05D2                     u1950:	
 11936  05D2                     l131:	
 11937                           
 11938                           ;I2C/i2c.c: 100:        if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 11939  05D2  0023               	movlb	3	; select bank3
 11940  05D3  190F               	btfsc	15,2	;volatile
 11941  05D4  2DD6               	goto	u1961
 11942  05D5  2DD7               	goto	u1960
 11943  05D6                     u1961:	
 11944  05D6  2E05               	goto	l126
 11945  05D7                     u1960:	
 11946  05D7                     l4263:	
 11947  05D7  080F               	movf	15,w	;volatile
 11948  05D8  2E05               	goto	l126
 11949  05D9                     l4269:	
 11950  05D9  300F               	movlw	15
 11951  05DA  0023               	movlb	3	; select bank3
 11952  05DB  0510               	andwf	16,w	;volatile
 11953  05DC  0020               	movlb	0	; select bank0
 11954  05DD  00C4               	movwf	??_WriteI2C
 11955  05DE  3008               	movlw	8
 11956  05DF  0644               	xorwf	??_WriteI2C,w
 11957  05E0  1903               	btfsc	3,2
 11958  05E1  2DE3               	goto	u1971
 11959  05E2  2DE4               	goto	u1970
 11960  05E3                     u1971:	
 11961  05E3  2DEF               	goto	l138
 11962  05E4                     u1970:	
 11963  05E4                     l4271:	
 11964  05E4  300F               	movlw	15
 11965  05E5  0023               	movlb	3	; select bank3
 11966  05E6  0510               	andwf	16,w	;volatile
 11967  05E7  0020               	movlb	0	; select bank0
 11968  05E8  00C4               	movwf	??_WriteI2C
 11969  05E9  300B               	movlw	11
 11970  05EA  0644               	xorwf	??_WriteI2C,w
 11971  05EB  1D03               	btfss	3,2
 11972  05EC  2DEE               	goto	u1981
 11973  05ED  2DEF               	goto	u1980
 11974  05EE                     u1981:	
 11975  05EE  2E05               	goto	l126
 11976  05EF                     u1980:	
 11977  05EF                     l138:	
 11978  05EF  0023               	movlb	3	; select bank3
 11979  05F0  180F               	btfsc	15,0	;volatile
 11980  05F1  2DF3               	goto	u1991
 11981  05F2  2DF4               	goto	u1990
 11982  05F3                     u1991:	
 11983  05F3  2DEF               	goto	l138
 11984  05F4                     u1990:	
 11985  05F4                     l4273:	
 11986  05F4  0023               	movlb	3	; select bank3
 11987  05F5  0C0F               	rrf	15,w	;volatile
 11988  05F6  0C89               	rrf	9,f
 11989  05F7  3901               	andlw	1
 11990  05F8  0020               	movlb	0	; select bank0
 11991  05F9  00C4               	movwf	??_WriteI2C
 11992  05FA  0023               	movlb	3	; select bank3
 11993  05FB  0811               	movf	17,w	;volatile
 11994  05FC  391F               	andlw	31
 11995  05FD  0020               	movlb	0	; select bank0
 11996  05FE  0444               	iorwf	??_WriteI2C,w
 11997  05FF  1D03               	btfss	3,2
 11998  0600  2E02               	goto	u2001
 11999  0601  2E03               	goto	u2000
 12000  0602                     u2001:	
 12001  0602  2DF4               	goto	l4273
 12002  0603                     u2000:	
 12003  0603                     l143:	
 12004                           
 12005                           ;I2C/i2c.c: 113:      if ( SSP1CON2bits.ACKSTAT )
 12006  0603  0023               	movlb	3	; select bank3
 12007  0604  0811               	movf	17,w	;volatile
 12008  0605                     l126:	
 12009  0605  0008               	return
 12010  0606                     __end_of_WriteI2C:	
 12011                           
 12012                           	psect	text3
 12013  0E75                     __ptext3:	
 12014 ;; *************** function _ReadI2C *****************
 12015 ;; Defined at:
 12016 ;;		line 73 in file "I2C/i2c.c"
 12017 ;; Parameters:    Size  Location     Type
 12018 ;;		None
 12019 ;; Auto vars:     Size  Location     Type
 12020 ;;		None
 12021 ;; Return value:  Size  Location     Type
 12022 ;;                  1    wreg      unsigned char 
 12023 ;; Registers used:
 12024 ;;		wreg, status,2, status,0
 12025 ;; Tracked objects:
 12026 ;;		On entry : 0/0
 12027 ;;		On exit  : 0/0
 12028 ;;		Unchanged: 0/0
 12029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12032 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12033 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12034 ;;Total ram usage:        1 bytes
 12035 ;; Hardware stack levels used:    1
 12036 ;; Hardware stack levels required when called:    6
 12037 ;; This function calls:
 12038 ;;		Nothing
 12039 ;; This function is called by:
 12040 ;;		_tsttc
 12041 ;; This function uses a non-reentrant model
 12042 ;;
 12043                           
 12044                           
 12045                           ;psect for function _ReadI2C
 12046  0E75                     _ReadI2C:	
 12047  0E75                     l4279:	
 12048                           ;incstack = 0
 12049                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 12050                           
 12051                           
 12052                           ;I2C/i2c.c: 75: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 12053  0E75  300F               	movlw	15
 12054  0E76  0023               	movlb	3	; select bank3
 12055  0E77  0510               	andwf	16,w	;volatile
 12056  0E78  0020               	movlb	0	; select bank0
 12057  0E79  00C4               	movwf	??_ReadI2C
 12058  0E7A  3008               	movlw	8
 12059  0E7B  0644               	xorwf	??_ReadI2C,w
 12060  0E7C  1903               	btfsc	3,2
 12061  0E7D  2E7F               	goto	u2011
 12062  0E7E  2E80               	goto	u2010
 12063  0E7F                     u2011:	
 12064  0E7F  2E8B               	goto	l118
 12065  0E80                     u2010:	
 12066  0E80                     l4281:	
 12067  0E80  300F               	movlw	15
 12068  0E81  0023               	movlb	3	; select bank3
 12069  0E82  0510               	andwf	16,w	;volatile
 12070  0E83  0020               	movlb	0	; select bank0
 12071  0E84  00C4               	movwf	??_ReadI2C
 12072  0E85  300B               	movlw	11
 12073  0E86  0644               	xorwf	??_ReadI2C,w
 12074  0E87  1D03               	btfss	3,2
 12075  0E88  2E8A               	goto	u2021
 12076  0E89  2E8B               	goto	u2020
 12077  0E8A                     u2021:	
 12078  0E8A  2E8D               	goto	l119
 12079  0E8B                     u2020:	
 12080  0E8B                     l118:	
 12081                           
 12082                           ;I2C/i2c.c: 76:   SSP1CON2bits.RCEN = 1;
 12083  0E8B  0023               	movlb	3	; select bank3
 12084  0E8C  1591               	bsf	17,3	;volatile
 12085  0E8D                     l119:	
 12086  0E8D  0023               	movlb	3	; select bank3
 12087  0E8E  1C0F               	btfss	15,0	;volatile
 12088  0E8F  2E91               	goto	u2031
 12089  0E90  2E92               	goto	u2030
 12090  0E91                     u2031:	
 12091  0E91  2E8D               	goto	l119
 12092  0E92                     u2030:	
 12093  0E92                     l4283:	
 12094                           
 12095                           ;I2C/i2c.c: 78:   return ( SSP1BUF );
 12096  0E92  080C               	movf	12,w	;volatile
 12097  0E93                     l122:	
 12098  0E93  0008               	return
 12099  0E94                     __end_of_ReadI2C:	
 12100                           
 12101                           	psect	text4
 12102  0E3A                     __ptext4:	
 12103 ;; *************** function _reset_recv *****************
 12104 ;; Defined at:
 12105 ;;		line 45 in file "eeprom_rw.c"
 12106 ;; Parameters:    Size  Location     Type
 12107 ;;		None
 12108 ;; Auto vars:     Size  Location     Type
 12109 ;;  i               2   10[BANK0 ] unsigned int 
 12110 ;; Return value:  Size  Location     Type
 12111 ;;                  1    wreg      void 
 12112 ;; Registers used:
 12113 ;;		wreg, status,2, status,0, pclath, cstack
 12114 ;; Tracked objects:
 12115 ;;		On entry : 0/0
 12116 ;;		On exit  : 0/0
 12117 ;;		Unchanged: 0/0
 12118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12120 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12122 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12123 ;;Total ram usage:        2 bytes
 12124 ;; Hardware stack levels used:    1
 12125 ;; Hardware stack levels required when called:    7
 12126 ;; This function calls:
 12127 ;;		_DATAEE_WriteByte
 12128 ;; This function is called by:
 12129 ;;		_main
 12130 ;; This function uses a non-reentrant model
 12131 ;;
 12132                           
 12133                           
 12134                           ;psect for function _reset_recv
 12135  0E3A                     _reset_recv:	
 12136  0E3A                     l6117:	
 12137                           ;incstack = 0
 12138                           ; Regs used in _reset_recv: [wreg+status,2+status,0+pclath+cstack]
 12139                           
 12140                           
 12141                           ;eeprom_rw.c: 47:     for(unsigned int i = 0xF0FF - 10; i <= 0xF0FF; i ++)
 12142  0E3A  30F5               	movlw	245
 12143  0E3B  0020               	movlb	0	; select bank0
 12144  0E3C  00CE               	movwf	reset_recv@i
 12145  0E3D  30F0               	movlw	240
 12146  0E3E  00CF               	movwf	reset_recv@i+1
 12147  0E3F                     l6121:	
 12148                           
 12149                           ;eeprom_rw.c: 48:         DATAEE_WriteByte(i, 0);
 12150  0E3F  084F               	movf	reset_recv@i+1,w
 12151  0E40  00CB               	movwf	DATAEE_WriteByte@bAdd+1
 12152  0E41  084E               	movf	reset_recv@i,w
 12153  0E42  00CA               	movwf	DATAEE_WriteByte@bAdd
 12154  0E43  01CC               	clrf	DATAEE_WriteByte@bData
 12155  0E44  318E  26B8  318E   	fcall	_DATAEE_WriteByte
 12156  0E47                     l6123:	
 12157  0E47  3001               	movlw	1
 12158  0E48  0020               	movlb	0	; select bank0
 12159  0E49  07CE               	addwf	reset_recv@i,f
 12160  0E4A  3000               	movlw	0
 12161  0E4B  3DCF               	addwfc	reset_recv@i+1,f
 12162  0E4C                     l6125:	
 12163  0E4C  30F1               	movlw	241
 12164  0E4D  024F               	subwf	reset_recv@i+1,w
 12165  0E4E  3000               	movlw	0
 12166  0E4F  1903               	skipnz
 12167  0E50  024E               	subwf	reset_recv@i,w
 12168  0E51  1C03               	skipc
 12169  0E52  2E54               	goto	u3691
 12170  0E53  2E55               	goto	u3690
 12171  0E54                     u3691:	
 12172  0E54  2E3F               	goto	l6121
 12173  0E55                     u3690:	
 12174  0E55                     l1567:	
 12175  0E55  0008               	return
 12176  0E56                     __end_of_reset_recv:	
 12177                           
 12178                           	psect	text5
 12179  06B4                     __ptext5:	
 12180 ;; *************** function _represent_led *****************
 12181 ;; Defined at:
 12182 ;;		line 456 in file "main.c"
 12183 ;; Parameters:    Size  Location     Type
 12184 ;;  val             1    wreg     unsigned char 
 12185 ;;  high_digit      1    9[BANK0 ] unsigned char 
 12186 ;; Auto vars:     Size  Location     Type
 12187 ;;  val             1   13[BANK0 ] unsigned char 
 12188 ;;  aux             1   14[BANK0 ] unsigned char 
 12189 ;; Return value:  Size  Location     Type
 12190 ;;                  1    wreg      void 
 12191 ;; Registers used:
 12192 ;;		wreg, status,2, status,0, pclath, cstack
 12193 ;; Tracked objects:
 12194 ;;		On entry : 0/0
 12195 ;;		On exit  : 0/0
 12196 ;;		Unchanged: 0/0
 12197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12198 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12199 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12200 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12201 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12202 ;;Total ram usage:        6 bytes
 12203 ;; Hardware stack levels used:    1
 12204 ;; Hardware stack levels required when called:    7
 12205 ;; This function calls:
 12206 ;;		___awdiv
 12207 ;; This function is called by:
 12208 ;;		_main
 12209 ;; This function uses a non-reentrant model
 12210 ;;
 12211                           
 12212                           
 12213                           ;psect for function _represent_led
 12214  06B4                     _represent_led:	
 12215                           
 12216                           ;incstack = 0
 12217                           ; Regs used in _represent_led: [wreg+status,2+status,0+pclath+cstack]
 12218                           ;represent_led@val stored from wreg
 12219  06B4  0020               	movlb	0	; select bank0
 12220  06B5  00D1               	movwf	represent_led@val
 12221  06B6                     l4969:	
 12222                           
 12223                           ;main.c: 456: void represent_led(unsigned char val, unsigned char high_digit);main.c: 45
      +                          7: {;main.c: 458:     unsigned char aux = val;
 12224  06B6  0851               	movf	represent_led@val,w
 12225  06B7  00CE               	movwf	??_represent_led
 12226  06B8  084E               	movf	??_represent_led,w
 12227  06B9  00D2               	movwf	represent_led@aux
 12228                           
 12229                           ;main.c: 459:     if(val > 99)
 12230  06BA  3064               	movlw	100
 12231  06BB  0251               	subwf	represent_led@val,w
 12232  06BC  1C03               	skipc
 12233  06BD  2EBF               	goto	u2681
 12234  06BE  2EC0               	goto	u2680
 12235  06BF                     u2681:	
 12236  06BF  2EC1               	goto	l4973
 12237  06C0                     u2680:	
 12238  06C0  2F05               	goto	l1529
 12239  06C1                     l4973:	
 12240                           
 12241                           ;main.c: 461:     if(high_digit)
 12242  06C1  084D               	movf	represent_led@high_digit,w
 12243  06C2  1903               	btfsc	3,2
 12244  06C3  2EC5               	goto	u2691
 12245  06C4  2EC6               	goto	u2690
 12246  06C5                     u2691:	
 12247  06C5  2ED9               	goto	l4977
 12248  06C6                     u2690:	
 12249  06C6                     l4975:	
 12250                           
 12251                           ;main.c: 462:         aux = val / 10;
 12252  06C6  300A               	movlw	10
 12253  06C7  00C4               	movwf	___awdiv@divisor
 12254  06C8  3000               	movlw	0
 12255  06C9  00C5               	movwf	___awdiv@divisor+1
 12256  06CA  0851               	movf	represent_led@val,w
 12257  06CB  00CE               	movwf	??_represent_led
 12258  06CC  01CF               	clrf	??_represent_led+1
 12259  06CD  084E               	movf	??_represent_led,w
 12260  06CE  00C6               	movwf	___awdiv@dividend
 12261  06CF  084F               	movf	??_represent_led+1,w
 12262  06D0  00C7               	movwf	___awdiv@dividend+1
 12263  06D1  3185  254C  3186   	fcall	___awdiv
 12264  06D4  0020               	movlb	0	; select bank0
 12265  06D5  0844               	movf	?___awdiv,w
 12266  06D6  00D0               	movwf	??_represent_led+2
 12267  06D7  0850               	movf	??_represent_led+2,w
 12268  06D8  00D2               	movwf	represent_led@aux
 12269  06D9                     l4977:	
 12270                           
 12271                           ;main.c: 463:     LATAbits.LATA4 = aux >> 3;
 12272  06D9  0852               	movf	represent_led@aux,w
 12273  06DA  00CE               	movwf	??_represent_led
 12274  06DB  3003               	movlw	3
 12275  06DC                     u2705:	
 12276  06DC  36CE               	lsrf	??_represent_led,f
 12277  06DD  0B89               	decfsz	9,f
 12278  06DE  2EDC               	goto	u2705
 12279  06DF  084E               	movf	??_represent_led,w
 12280  06E0  00CF               	movwf	??_represent_led+1
 12281  06E1  0ECF               	swapf	??_represent_led+1,f
 12282  06E2  0816               	movf	22,w	;volatile
 12283  06E3  064F               	xorwf	??_represent_led+1,w
 12284  06E4  39EF               	andlw	-17
 12285  06E5  064F               	xorwf	??_represent_led+1,w
 12286  06E6  0096               	movwf	22	;volatile
 12287  06E7                     l4979:	
 12288                           
 12289                           ;main.c: 464:     LATAbits.LATA5 = aux >> 2;
 12290  06E7  0852               	movf	represent_led@aux,w
 12291  06E8  00CE               	movwf	??_represent_led
 12292  06E9  3002               	movlw	2
 12293  06EA                     u2715:	
 12294  06EA  36CE               	lsrf	??_represent_led,f
 12295  06EB  0B89               	decfsz	9,f
 12296  06EC  2EEA               	goto	u2715
 12297  06ED  084E               	movf	??_represent_led,w
 12298  06EE  00CF               	movwf	??_represent_led+1
 12299  06EF  0ECF               	swapf	??_represent_led+1,f
 12300  06F0  0DCF               	rlf	??_represent_led+1,f
 12301  06F1  0816               	movf	22,w	;volatile
 12302  06F2  064F               	xorwf	??_represent_led+1,w
 12303  06F3  39DF               	andlw	-33
 12304  06F4  064F               	xorwf	??_represent_led+1,w
 12305  06F5  0096               	movwf	22	;volatile
 12306  06F6                     l4981:	
 12307                           
 12308                           ;main.c: 465:     LATAbits.LATA6 = aux >> 1;
 12309  06F6  3652               	lsrf	represent_led@aux,w
 12310  06F7  00CE               	movwf	??_represent_led
 12311  06F8  0ECE               	swapf	??_represent_led,f
 12312  06F9  0DCE               	rlf	??_represent_led,f
 12313  06FA  0DCE               	rlf	??_represent_led,f
 12314  06FB  0816               	movf	22,w	;volatile
 12315  06FC  064E               	xorwf	??_represent_led,w
 12316  06FD  39BF               	andlw	-65
 12317  06FE  064E               	xorwf	??_represent_led,w
 12318  06FF  0096               	movwf	22	;volatile
 12319  0700                     l4983:	
 12320                           
 12321                           ;main.c: 466:     LATAbits.LATA7 = aux >> 0;
 12322  0700  0C52               	rrf	represent_led@aux,w
 12323  0701  1C03               	skipc
 12324  0702  1396               	bcf	22,7	;volatile
 12325  0703  1803               	skipnc
 12326  0704  1796               	bsf	22,7	;volatile
 12327  0705                     l1529:	
 12328  0705  0008               	return
 12329  0706                     __end_of_represent_led:	
 12330                           
 12331                           	psect	text6
 12332  054C                     __ptext6:	
 12333 ;; *************** function ___awdiv *****************
 12334 ;; Defined at:
 12335 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 12336 ;; Parameters:    Size  Location     Type
 12337 ;;  divisor         2    0[BANK0 ] int 
 12338 ;;  dividend        2    2[BANK0 ] int 
 12339 ;; Auto vars:     Size  Location     Type
 12340 ;;  quotient        2    7[BANK0 ] int 
 12341 ;;  sign            1    6[BANK0 ] unsigned char 
 12342 ;;  counter         1    5[BANK0 ] unsigned char 
 12343 ;; Return value:  Size  Location     Type
 12344 ;;                  2    0[BANK0 ] int 
 12345 ;; Registers used:
 12346 ;;		wreg, status,2, status,0
 12347 ;; Tracked objects:
 12348 ;;		On entry : 0/0
 12349 ;;		On exit  : 0/0
 12350 ;;		Unchanged: 0/0
 12351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12352 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12353 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12354 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12355 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12356 ;;Total ram usage:        9 bytes
 12357 ;; Hardware stack levels used:    1
 12358 ;; Hardware stack levels required when called:    6
 12359 ;; This function calls:
 12360 ;;		Nothing
 12361 ;; This function is called by:
 12362 ;;		_represent_led
 12363 ;; This function uses a non-reentrant model
 12364 ;;
 12365                           
 12366                           
 12367                           ;psect for function ___awdiv
 12368  054C                     ___awdiv:	
 12369  054C                     l4715:	
 12370                           ;incstack = 0
 12371                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12372                           
 12373  054C  0020               	movlb	0	; select bank0
 12374  054D  01CA               	clrf	___awdiv@sign
 12375  054E                     l4717:	
 12376  054E  1FC5               	btfss	___awdiv@divisor+1,7
 12377  054F  2D51               	goto	u2261
 12378  0550  2D52               	goto	u2260
 12379  0551                     u2261:	
 12380  0551  2D59               	goto	l4723
 12381  0552                     u2260:	
 12382  0552                     l4719:	
 12383  0552  09C4               	comf	___awdiv@divisor,f
 12384  0553  09C5               	comf	___awdiv@divisor+1,f
 12385  0554  0AC4               	incf	___awdiv@divisor,f
 12386  0555  1903               	skipnz
 12387  0556  0AC5               	incf	___awdiv@divisor+1,f
 12388  0557                     l4721:	
 12389  0557  01CA               	clrf	___awdiv@sign
 12390  0558  0ACA               	incf	___awdiv@sign,f
 12391  0559                     l4723:	
 12392  0559  1FC7               	btfss	___awdiv@dividend+1,7
 12393  055A  2D5C               	goto	u2271
 12394  055B  2D5D               	goto	u2270
 12395  055C                     u2271:	
 12396  055C  2D66               	goto	l4729
 12397  055D                     u2270:	
 12398  055D                     l4725:	
 12399  055D  09C6               	comf	___awdiv@dividend,f
 12400  055E  09C7               	comf	___awdiv@dividend+1,f
 12401  055F  0AC6               	incf	___awdiv@dividend,f
 12402  0560  1903               	skipnz
 12403  0561  0AC7               	incf	___awdiv@dividend+1,f
 12404  0562                     l4727:	
 12405  0562  3001               	movlw	1
 12406  0563  00C8               	movwf	??___awdiv
 12407  0564  0848               	movf	??___awdiv,w
 12408  0565  06CA               	xorwf	___awdiv@sign,f
 12409  0566                     l4729:	
 12410  0566  01CB               	clrf	___awdiv@quotient
 12411  0567  01CC               	clrf	___awdiv@quotient+1
 12412  0568                     l4731:	
 12413  0568  0844               	movf	___awdiv@divisor,w
 12414  0569  0445               	iorwf	___awdiv@divisor+1,w
 12415  056A  1903               	btfsc	3,2
 12416  056B  2D6D               	goto	u2281
 12417  056C  2D6E               	goto	u2280
 12418  056D                     u2281:	
 12419  056D  2D9D               	goto	l4751
 12420  056E                     u2280:	
 12421  056E                     l4733:	
 12422  056E  01C9               	clrf	___awdiv@counter
 12423  056F  0AC9               	incf	___awdiv@counter,f
 12424  0570  2D7A               	goto	l4739
 12425  0571                     l4735:	
 12426  0571  3001               	movlw	1
 12427  0572                     u2295:	
 12428  0572  35C4               	lslf	___awdiv@divisor,f
 12429  0573  0DC5               	rlf	___awdiv@divisor+1,f
 12430  0574  0B89               	decfsz	9,f
 12431  0575  2D72               	goto	u2295
 12432  0576                     l4737:	
 12433  0576  3001               	movlw	1
 12434  0577  00C8               	movwf	??___awdiv
 12435  0578  0848               	movf	??___awdiv,w
 12436  0579  07C9               	addwf	___awdiv@counter,f
 12437  057A                     l4739:	
 12438  057A  1FC5               	btfss	___awdiv@divisor+1,7
 12439  057B  2D7D               	goto	u2301
 12440  057C  2D7E               	goto	u2300
 12441  057D                     u2301:	
 12442  057D  2D71               	goto	l4735
 12443  057E                     u2300:	
 12444  057E                     l4741:	
 12445  057E  3001               	movlw	1
 12446  057F                     u2315:	
 12447  057F  35CB               	lslf	___awdiv@quotient,f
 12448  0580  0DCC               	rlf	___awdiv@quotient+1,f
 12449  0581  0B89               	decfsz	9,f
 12450  0582  2D7F               	goto	u2315
 12451  0583  0845               	movf	___awdiv@divisor+1,w
 12452  0584  0247               	subwf	___awdiv@dividend+1,w
 12453  0585  1D03               	skipz
 12454  0586  2D89               	goto	u2325
 12455  0587  0844               	movf	___awdiv@divisor,w
 12456  0588  0246               	subwf	___awdiv@dividend,w
 12457  0589                     u2325:	
 12458  0589  1C03               	skipc
 12459  058A  2D8C               	goto	u2321
 12460  058B  2D8D               	goto	u2320
 12461  058C                     u2321:	
 12462  058C  2D92               	goto	l4747
 12463  058D                     u2320:	
 12464  058D                     l4743:	
 12465  058D  0844               	movf	___awdiv@divisor,w
 12466  058E  02C6               	subwf	___awdiv@dividend,f
 12467  058F  0845               	movf	___awdiv@divisor+1,w
 12468  0590  3BC7               	subwfb	___awdiv@dividend+1,f
 12469  0591                     l4745:	
 12470  0591  144B               	bsf	___awdiv@quotient,0
 12471  0592                     l4747:	
 12472  0592  3001               	movlw	1
 12473  0593                     u2335:	
 12474  0593  36C5               	lsrf	___awdiv@divisor+1,f
 12475  0594  0CC4               	rrf	___awdiv@divisor,f
 12476  0595  0B89               	decfsz	9,f
 12477  0596  2D93               	goto	u2335
 12478  0597                     l4749:	
 12479  0597  3001               	movlw	1
 12480  0598  02C9               	subwf	___awdiv@counter,f
 12481  0599  1D03               	btfss	3,2
 12482  059A  2D9C               	goto	u2341
 12483  059B  2D9D               	goto	u2340
 12484  059C                     u2341:	
 12485  059C  2D7E               	goto	l4741
 12486  059D                     u2340:	
 12487  059D                     l4751:	
 12488  059D  084A               	movf	___awdiv@sign,w
 12489  059E  1903               	btfsc	3,2
 12490  059F  2DA1               	goto	u2351
 12491  05A0  2DA2               	goto	u2350
 12492  05A1                     u2351:	
 12493  05A1  2DA7               	goto	l4755
 12494  05A2                     u2350:	
 12495  05A2                     l4753:	
 12496  05A2  09CB               	comf	___awdiv@quotient,f
 12497  05A3  09CC               	comf	___awdiv@quotient+1,f
 12498  05A4  0ACB               	incf	___awdiv@quotient,f
 12499  05A5  1903               	skipnz
 12500  05A6  0ACC               	incf	___awdiv@quotient+1,f
 12501  05A7                     l4755:	
 12502  05A7  084C               	movf	___awdiv@quotient+1,w
 12503  05A8  00C5               	movwf	?___awdiv+1
 12504  05A9  084B               	movf	___awdiv@quotient,w
 12505  05AA  00C4               	movwf	?___awdiv
 12506  05AB                     l1872:	
 12507  05AB  0008               	return
 12508  05AC                     __end_of___awdiv:	
 12509                           
 12510                           	psect	text7
 12511  0FC1                     __ptext7:	
 12512 ;; *************** function _read_ring *****************
 12513 ;; Defined at:
 12514 ;;		line 13 in file "eeprom_rw.c"
 12515 ;; Parameters:    Size  Location     Type
 12516 ;;  nreg_pt         1    wreg     unsigned char 
 12517 ;;  nreg            1    4[BANK0 ] unsigned char 
 12518 ;;  nreg_init       1    5[BANK0 ] unsigned char 
 12519 ;;  index           1    6[BANK0 ] unsigned char 
 12520 ;;  subindex        1    7[BANK0 ] unsigned char 
 12521 ;; Auto vars:     Size  Location     Type
 12522 ;;  nreg_pt         1   11[BANK0 ] unsigned char 
 12523 ;;  absindex        1   12[BANK0 ] unsigned char 
 12524 ;;  i               1   10[BANK0 ] unsigned char 
 12525 ;; Return value:  Size  Location     Type
 12526 ;;                  1    wreg      unsigned char 
 12527 ;; Registers used:
 12528 ;;		wreg, status,2, status,0, pclath, cstack
 12529 ;; Tracked objects:
 12530 ;;		On entry : 0/0
 12531 ;;		On exit  : 0/0
 12532 ;;		Unchanged: 0/0
 12533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12534 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12535 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12536 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12537 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12538 ;;Total ram usage:        9 bytes
 12539 ;; Hardware stack levels used:    1
 12540 ;; Hardware stack levels required when called:    7
 12541 ;; This function calls:
 12542 ;;		_DATAEE_ReadByte
 12543 ;;		___bmul
 12544 ;; This function is called by:
 12545 ;;		_main
 12546 ;; This function uses a non-reentrant model
 12547 ;;
 12548                           
 12549                           
 12550                           ;psect for function _read_ring
 12551  0FC1                     _read_ring:	
 12552                           
 12553                           ;incstack = 0
 12554                           ; Regs used in _read_ring: [wreg+status,2+status,0+pclath+cstack]
 12555                           ;read_ring@nreg_pt stored from wreg
 12556  0FC1  0020               	movlb	0	; select bank0
 12557  0FC2  00CF               	movwf	read_ring@nreg_pt
 12558  0FC3                     l6185:	
 12559  0FC3                     l6187:	
 12560                           
 12561                           ;eeprom_rw.c: 18:     if(index <= nreg && nreg_init) {
 12562  0FC3  084A               	movf	read_ring@index,w
 12563  0FC4  0248               	subwf	read_ring@nreg,w
 12564  0FC5  1C03               	skipc
 12565  0FC6  2FC8               	goto	u3711
 12566  0FC7  2FC9               	goto	u3710
 12567  0FC8                     u3711:	
 12568  0FC8  2FF3               	goto	l6199
 12569  0FC9                     u3710:	
 12570  0FC9                     l6189:	
 12571  0FC9  0849               	movf	read_ring@nreg_init,w
 12572  0FCA  1903               	btfsc	3,2
 12573  0FCB  2FCD               	goto	u3721
 12574  0FCC  2FCE               	goto	u3720
 12575  0FCD                     u3721:	
 12576  0FCD  2FF3               	goto	l6199
 12577  0FCE                     u3720:	
 12578  0FCE                     l6191:	
 12579                           
 12580                           ;eeprom_rw.c: 19:         absindex = 5 * index + subindex;
 12581  0FCE  3005               	movlw	5
 12582  0FCF  00CC               	movwf	??_read_ring
 12583  0FD0  084C               	movf	??_read_ring,w
 12584  0FD1  00C4               	movwf	___bmul@multiplicand
 12585  0FD2  084A               	movf	read_ring@index,w
 12586  0FD3  318D  2574  318F   	fcall	___bmul
 12587  0FD6  0020               	movlb	0	; select bank0
 12588  0FD7  074B               	addwf	read_ring@subindex,w
 12589  0FD8  00CD               	movwf	??_read_ring+1
 12590  0FD9  084D               	movf	??_read_ring+1,w
 12591  0FDA  00D0               	movwf	read_ring@absindex
 12592  0FDB                     l6193:	
 12593                           
 12594                           ;eeprom_rw.c: 20:         if(absindex <= nreg_pt)
 12595  0FDB  0850               	movf	read_ring@absindex,w
 12596  0FDC  024F               	subwf	read_ring@nreg_pt,w
 12597  0FDD  1C03               	skipc
 12598  0FDE  2FE0               	goto	u3731
 12599  0FDF  2FE1               	goto	u3730
 12600  0FE0                     u3731:	
 12601  0FE0  2FE8               	goto	l6197
 12602  0FE1                     u3730:	
 12603  0FE1                     l6195:	
 12604                           
 12605                           ;eeprom_rw.c: 21:             i = nreg_pt - 5 + absindex;
 12606  0FE1  084F               	movf	read_ring@nreg_pt,w
 12607  0FE2  0750               	addwf	read_ring@absindex,w
 12608  0FE3  3EFB               	addlw	251
 12609  0FE4  00CC               	movwf	??_read_ring
 12610  0FE5  084C               	movf	??_read_ring,w
 12611  0FE6  00CE               	movwf	read_ring@i
 12612  0FE7  2FF5               	goto	l6203
 12613  0FE8                     l6197:	
 12614                           
 12615                           ;eeprom_rw.c: 23:             i = nreg - (nreg_pt - 5 + absindex);
 12616  0FE8  034F               	decf	read_ring@nreg_pt,w
 12617  0FE9  3AFF               	xorlw	255
 12618  0FEA  00CC               	movwf	??_read_ring
 12619  0FEB  0850               	movf	read_ring@absindex,w
 12620  0FEC  024C               	subwf	??_read_ring,w
 12621  0FED  0748               	addwf	read_ring@nreg,w
 12622  0FEE  3E05               	addlw	5
 12623  0FEF  00CD               	movwf	??_read_ring+1
 12624  0FF0  084D               	movf	??_read_ring+1,w
 12625  0FF1  00CE               	movwf	read_ring@i
 12626  0FF2  2FF5               	goto	l6203
 12627  0FF3                     l6199:	
 12628                           
 12629                           ;eeprom_rw.c: 26:         return 0;
 12630  0FF3  3000               	movlw	0
 12631  0FF4  2FFF               	goto	l1554
 12632  0FF5                     l6203:	
 12633                           
 12634                           ;eeprom_rw.c: 28:     return DATAEE_ReadByte(0xF000 + i);
 12635  0FF5  084E               	movf	read_ring@i,w
 12636  0FF6  3E00               	addlw	0
 12637  0FF7  00C4               	movwf	DATAEE_ReadByte@bAdd
 12638  0FF8  30F0               	movlw	240
 12639  0FF9  1803               	skipnc
 12640  0FFA  30F1               	movlw	241
 12641  0FFB  00C5               	movwf	DATAEE_ReadByte@bAdd+1
 12642  0FFC  318C  24AB  318F   	fcall	_DATAEE_ReadByte
 12643  0FFF                     l1554:	
 12644  0FFF  0008               	return
 12645  1000                     __end_of_read_ring:	
 12646                           
 12647                           	psect	text8
 12648  0D74                     __ptext8:	
 12649 ;; *************** function ___bmul *****************
 12650 ;; Defined at:
 12651 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul8.c"
 12652 ;; Parameters:    Size  Location     Type
 12653 ;;  multiplier      1    wreg     unsigned char 
 12654 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 12655 ;; Auto vars:     Size  Location     Type
 12656 ;;  multiplier      1    3[BANK0 ] unsigned char 
 12657 ;;  product         1    2[BANK0 ] unsigned char 
 12658 ;; Return value:  Size  Location     Type
 12659 ;;                  1    wreg      unsigned char 
 12660 ;; Registers used:
 12661 ;;		wreg, status,2, status,0
 12662 ;; Tracked objects:
 12663 ;;		On entry : 0/0
 12664 ;;		On exit  : 0/0
 12665 ;;		Unchanged: 0/0
 12666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12667 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12668 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12669 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12670 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12671 ;;Total ram usage:        4 bytes
 12672 ;; Hardware stack levels used:    1
 12673 ;; Hardware stack levels required when called:    6
 12674 ;; This function calls:
 12675 ;;		Nothing
 12676 ;; This function is called by:
 12677 ;;		_read_ring
 12678 ;; This function uses a non-reentrant model
 12679 ;;
 12680                           
 12681                           
 12682                           ;psect for function ___bmul
 12683  0D74                     ___bmul:	
 12684                           
 12685                           ;incstack = 0
 12686                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 12687                           ;___bmul@multiplier stored from wreg
 12688  0D74  0020               	movlb	0	; select bank0
 12689  0D75  00C7               	movwf	___bmul@multiplier
 12690  0D76                     l4701:	
 12691  0D76  01C6               	clrf	___bmul@product
 12692  0D77                     l4703:	
 12693  0D77  1C47               	btfss	___bmul@multiplier,0
 12694  0D78  2D7A               	goto	u2241
 12695  0D79  2D7B               	goto	u2240
 12696  0D7A                     u2241:	
 12697  0D7A  2D7F               	goto	l4707
 12698  0D7B                     u2240:	
 12699  0D7B                     l4705:	
 12700  0D7B  0844               	movf	___bmul@multiplicand,w
 12701  0D7C  00C5               	movwf	??___bmul
 12702  0D7D  0845               	movf	??___bmul,w
 12703  0D7E  07C6               	addwf	___bmul@product,f
 12704  0D7F                     l4707:	
 12705  0D7F  1003               	clrc
 12706  0D80  0DC4               	rlf	___bmul@multiplicand,f
 12707  0D81                     l4709:	
 12708  0D81  1003               	clrc
 12709  0D82  0CC7               	rrf	___bmul@multiplier,f
 12710  0D83  0847               	movf	___bmul@multiplier,w
 12711  0D84  1D03               	btfss	3,2
 12712  0D85  2D87               	goto	u2251
 12713  0D86  2D88               	goto	u2250
 12714  0D87                     u2251:	
 12715  0D87  2D77               	goto	l4703
 12716  0D88                     u2250:	
 12717  0D88                     l4711:	
 12718  0D88  0846               	movf	___bmul@product,w
 12719  0D89                     l1745:	
 12720  0D89  0008               	return
 12721  0D8A                     __end_of___bmul:	
 12722                           
 12723                           	psect	text9
 12724  0799                     __ptext9:	
 12725 ;; *************** function _push_ring *****************
 12726 ;; Defined at:
 12727 ;;		line 4 in file "eeprom_rw.c"
 12728 ;; Parameters:    Size  Location     Type
 12729 ;;  nreg_pt         1    wreg     PTR unsigned char 
 12730 ;;		 -> nreg_pt(1), 
 12731 ;;  nreg            1   10[BANK0 ] unsigned char 
 12732 ;;  nreg_init       1   11[BANK0 ] PTR unsigned char 
 12733 ;;		 -> nreg_init(1), 
 12734 ;;  ring_byte       1   12[BANK0 ] PTR unsigned char 
 12735 ;;		 -> ring_byte(5), 
 12736 ;; Auto vars:     Size  Location     Type
 12737 ;;  nreg_pt         1   16[BANK0 ] PTR unsigned char 
 12738 ;;		 -> nreg_pt(1), 
 12739 ;;  i               1   15[BANK0 ] unsigned char 
 12740 ;; Return value:  Size  Location     Type
 12741 ;;                  1    wreg      void 
 12742 ;; Registers used:
 12743 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12744 ;; Tracked objects:
 12745 ;;		On entry : 0/0
 12746 ;;		On exit  : 0/0
 12747 ;;		Unchanged: 0/0
 12748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12749 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12750 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12751 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12752 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12753 ;;Total ram usage:        7 bytes
 12754 ;; Hardware stack levels used:    1
 12755 ;; Hardware stack levels required when called:    7
 12756 ;; This function calls:
 12757 ;;		_DATAEE_WriteByte
 12758 ;; This function is called by:
 12759 ;;		_main
 12760 ;; This function uses a non-reentrant model
 12761 ;;
 12762                           
 12763                           
 12764                           ;psect for function _push_ring
 12765  0799                     _push_ring:	
 12766                           
 12767                           ;incstack = 0
 12768                           ; Regs used in _push_ring: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12769                           ;push_ring@nreg_pt stored from wreg
 12770  0799  0020               	movlb	0	; select bank0
 12771  079A  00D4               	movwf	push_ring@nreg_pt
 12772  079B                     l6207:	
 12773                           
 12774                           ;eeprom_rw.c: 4: void push_ring(unsigned char* nreg_pt, unsigned char nreg, unsigned cha
      +                          r* nreg_init, unsigned char* ring_byte);eeprom_rw.c: 5: { if(!(*nreg_init)) (*nreg_init)
      +                           = 1;
 12775  079B  084F               	movf	push_ring@nreg_init,w
 12776  079C  0086               	movwf	6
 12777  079D  0187               	clrf	7
 12778  079E  0801               	movf	1,w
 12779  079F  1D03               	btfss	3,2
 12780  07A0  2FA2               	goto	u3741
 12781  07A1  2FA3               	goto	u3740
 12782  07A2                     u3741:	
 12783  07A2  2FA8               	goto	l6211
 12784  07A3                     u3740:	
 12785  07A3                     l6209:	
 12786  07A3  084F               	movf	push_ring@nreg_init,w
 12787  07A4  0086               	movwf	6
 12788  07A5  0187               	clrf	7
 12789  07A6  0181               	clrf	1
 12790  07A7  0A81               	incf	1,f
 12791  07A8                     l6211:	
 12792                           
 12793                           ;eeprom_rw.c: 6:     for(unsigned char i = 0; i < 5; i++) {
 12794  07A8  01D3               	clrf	push_ring@i
 12795  07A9                     l6217:	
 12796                           
 12797                           ;eeprom_rw.c: 7:         if((*nreg_pt) >= nreg) (*nreg_pt) = 0;
 12798  07A9  0854               	movf	push_ring@nreg_pt,w
 12799  07AA  0086               	movwf	6
 12800  07AB  0187               	clrf	7
 12801  07AC  084E               	movf	push_ring@nreg,w
 12802  07AD  0201               	subwf	1,w
 12803  07AE  1C03               	skipc
 12804  07AF  2FB1               	goto	u3751
 12805  07B0  2FB2               	goto	u3750
 12806  07B1                     u3751:	
 12807  07B1  2FB6               	goto	l6221
 12808  07B2                     u3750:	
 12809  07B2                     l6219:	
 12810  07B2  0854               	movf	push_ring@nreg_pt,w
 12811  07B3  0086               	movwf	6
 12812  07B4  0187               	clrf	7
 12813  07B5  0181               	clrf	1
 12814  07B6                     l6221:	
 12815                           
 12816                           ;eeprom_rw.c: 8:         DATAEE_WriteByte(0xF000 + (*nreg_pt), ring_byte[i]);
 12817  07B6  0854               	movf	push_ring@nreg_pt,w
 12818  07B7  0086               	movwf	6
 12819  07B8  0187               	clrf	7
 12820  07B9  0801               	movf	1,w
 12821  07BA  3E00               	addlw	0
 12822  07BB  00CA               	movwf	DATAEE_WriteByte@bAdd
 12823  07BC  30F0               	movlw	240
 12824  07BD  1803               	skipnc
 12825  07BE  30F1               	movlw	241
 12826  07BF  00CB               	movwf	DATAEE_WriteByte@bAdd+1
 12827  07C0  0853               	movf	push_ring@i,w
 12828  07C1  0750               	addwf	push_ring@ring_byte,w
 12829  07C2  00D1               	movwf	??_push_ring
 12830  07C3  0851               	movf	??_push_ring,w
 12831  07C4  0086               	movwf	6
 12832  07C5  0187               	clrf	7
 12833  07C6  0801               	movf	1,w
 12834  07C7  00D2               	movwf	??_push_ring+1
 12835  07C8  0852               	movf	??_push_ring+1,w
 12836  07C9  00CC               	movwf	DATAEE_WriteByte@bData
 12837  07CA  318E  26B8  3187   	fcall	_DATAEE_WriteByte
 12838  07CD                     l6223:	
 12839                           
 12840                           ;eeprom_rw.c: 9:         (*nreg_pt)++;
 12841  07CD  3001               	movlw	1
 12842  07CE  0020               	movlb	0	; select bank0
 12843  07CF  00D1               	movwf	??_push_ring
 12844  07D0  0854               	movf	push_ring@nreg_pt,w
 12845  07D1  0086               	movwf	6
 12846  07D2  0187               	clrf	7
 12847  07D3  0851               	movf	??_push_ring,w
 12848  07D4  0781               	addwf	1,f
 12849  07D5                     l6225:	
 12850                           
 12851                           ;eeprom_rw.c: 10:     }
 12852  07D5  3001               	movlw	1
 12853  07D6  00D1               	movwf	??_push_ring
 12854  07D7  0851               	movf	??_push_ring,w
 12855  07D8  07D3               	addwf	push_ring@i,f
 12856  07D9                     l6227:	
 12857  07D9  3005               	movlw	5
 12858  07DA  0253               	subwf	push_ring@i,w
 12859  07DB  1C03               	skipc
 12860  07DC  2FDE               	goto	u3761
 12861  07DD  2FDF               	goto	u3760
 12862  07DE                     u3761:	
 12863  07DE  2FA9               	goto	l6217
 12864  07DF                     u3760:	
 12865  07DF                     l1547:	
 12866  07DF  0008               	return
 12867  07E0                     __end_of_push_ring:	
 12868                           
 12869                           	psect	text10
 12870  0C40                     __ptext10:	
 12871 ;; *************** function _mod4_LED *****************
 12872 ;; Defined at:
 12873 ;;		line 347 in file "main.c"
 12874 ;; Parameters:    Size  Location     Type
 12875 ;;		None
 12876 ;; Auto vars:     Size  Location     Type
 12877 ;;		None
 12878 ;; Return value:  Size  Location     Type
 12879 ;;                  1    wreg      void 
 12880 ;; Registers used:
 12881 ;;		wreg, status,2, status,0, pclath, cstack
 12882 ;; Tracked objects:
 12883 ;;		On entry : 0/0
 12884 ;;		On exit  : 0/0
 12885 ;;		Unchanged: 0/0
 12886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12891 ;;Total ram usage:        0 bytes
 12892 ;; Hardware stack levels used:    1
 12893 ;; Hardware stack levels required when called:    7
 12894 ;; This function calls:
 12895 ;;		_PWM6_LoadDutyValue
 12896 ;; This function is called by:
 12897 ;;		_main
 12898 ;; This function uses a non-reentrant model
 12899 ;;
 12900                           
 12901                           
 12902                           ;psect for function _mod4_LED
 12903  0C40                     _mod4_LED:	
 12904  0C40                     l6169:	
 12905                           ;incstack = 0
 12906                           ; Regs used in _mod4_LED: [wreg+status,2+status,0+pclath+cstack]
 12907                           
 12908                           
 12909                           ;main.c: 349:     LATA = 0;
 12910  0C40  0020               	movlb	0	; select bank0
 12911  0C41  0196               	clrf	22	;volatile
 12912  0C42                     l6171:	
 12913                           
 12914                           ;main.c: 350:     PWM6_LoadDutyValue(0);
 12915  0C42  3000               	movlw	0
 12916  0C43  00C4               	movwf	PWM6_LoadDutyValue@dutyValue
 12917  0C44  00C5               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12918  0C45  318D  25D1  318C   	fcall	_PWM6_LoadDutyValue
 12919  0C48                     l6173:	
 12920  0C48  0020               	movlb	0	; select bank0
 12921  0C49  1616               	bsf	22,4	;volatile
 12922  0C4A                     l1490:	
 12923  0C4A  0008               	return
 12924  0C4B                     __end_of_mod4_LED:	
 12925                           
 12926                           	psect	text11
 12927  0C35                     __ptext11:	
 12928 ;; *************** function _mod3_LED *****************
 12929 ;; Defined at:
 12930 ;;		line 340 in file "main.c"
 12931 ;; Parameters:    Size  Location     Type
 12932 ;;		None
 12933 ;; Auto vars:     Size  Location     Type
 12934 ;;		None
 12935 ;; Return value:  Size  Location     Type
 12936 ;;                  1    wreg      void 
 12937 ;; Registers used:
 12938 ;;		wreg, status,2, status,0, pclath, cstack
 12939 ;; Tracked objects:
 12940 ;;		On entry : 0/0
 12941 ;;		On exit  : 0/0
 12942 ;;		Unchanged: 0/0
 12943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12948 ;;Total ram usage:        0 bytes
 12949 ;; Hardware stack levels used:    1
 12950 ;; Hardware stack levels required when called:    7
 12951 ;; This function calls:
 12952 ;;		_PWM6_LoadDutyValue
 12953 ;; This function is called by:
 12954 ;;		_main
 12955 ;; This function uses a non-reentrant model
 12956 ;;
 12957                           
 12958                           
 12959                           ;psect for function _mod3_LED
 12960  0C35                     _mod3_LED:	
 12961  0C35                     l6163:	
 12962                           ;incstack = 0
 12963                           ; Regs used in _mod3_LED: [wreg+status,2+status,0+pclath+cstack]
 12964                           
 12965                           
 12966                           ;main.c: 342:     LATA = 0;
 12967  0C35  0020               	movlb	0	; select bank0
 12968  0C36  0196               	clrf	22	;volatile
 12969  0C37                     l6165:	
 12970                           
 12971                           ;main.c: 343:     PWM6_LoadDutyValue(0);
 12972  0C37  3000               	movlw	0
 12973  0C38  00C4               	movwf	PWM6_LoadDutyValue@dutyValue
 12974  0C39  00C5               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12975  0C3A  318D  25D1  318C   	fcall	_PWM6_LoadDutyValue
 12976  0C3D                     l6167:	
 12977  0C3D  0020               	movlb	0	; select bank0
 12978  0C3E  1696               	bsf	22,5	;volatile
 12979  0C3F                     l1485:	
 12980  0C3F  0008               	return
 12981  0C40                     __end_of_mod3_LED:	
 12982                           
 12983                           	psect	text12
 12984  0C20                     __ptext12:	
 12985 ;; *************** function _mod2_LED *****************
 12986 ;; Defined at:
 12987 ;;		line 334 in file "main.c"
 12988 ;; Parameters:    Size  Location     Type
 12989 ;;		None
 12990 ;; Auto vars:     Size  Location     Type
 12991 ;;		None
 12992 ;; Return value:  Size  Location     Type
 12993 ;;                  1    wreg      void 
 12994 ;; Registers used:
 12995 ;;		wreg, status,2, status,0, pclath, cstack
 12996 ;; Tracked objects:
 12997 ;;		On entry : 0/0
 12998 ;;		On exit  : 0/0
 12999 ;;		Unchanged: 0/0
 13000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13005 ;;Total ram usage:        0 bytes
 13006 ;; Hardware stack levels used:    1
 13007 ;; Hardware stack levels required when called:    7
 13008 ;; This function calls:
 13009 ;;		_PWM6_LoadDutyValue
 13010 ;; This function is called by:
 13011 ;;		_main
 13012 ;; This function uses a non-reentrant model
 13013 ;;
 13014                           
 13015                           
 13016                           ;psect for function _mod2_LED
 13017  0C20                     _mod2_LED:	
 13018  0C20                     l6159:	
 13019                           ;incstack = 0
 13020                           ; Regs used in _mod2_LED: [wreg+status,2+status,0+pclath+cstack]
 13021                           
 13022                           
 13023                           ;main.c: 336:     LATA = 0;
 13024  0C20  0020               	movlb	0	; select bank0
 13025  0C21  0196               	clrf	22	;volatile
 13026  0C22                     l6161:	
 13027                           
 13028                           ;main.c: 337:     PWM6_LoadDutyValue(1023);
 13029  0C22  30FF               	movlw	255
 13030  0C23  00C4               	movwf	PWM6_LoadDutyValue@dutyValue
 13031  0C24  3003               	movlw	3
 13032  0C25  00C5               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13033  0C26  318D  25D1  318C   	fcall	_PWM6_LoadDutyValue
 13034  0C29                     l1480:	
 13035  0C29  0008               	return
 13036  0C2A                     __end_of_mod2_LED:	
 13037                           
 13038                           	psect	text13
 13039  0C2A                     __ptext13:	
 13040 ;; *************** function _mod1_LED *****************
 13041 ;; Defined at:
 13042 ;;		line 327 in file "main.c"
 13043 ;; Parameters:    Size  Location     Type
 13044 ;;		None
 13045 ;; Auto vars:     Size  Location     Type
 13046 ;;		None
 13047 ;; Return value:  Size  Location     Type
 13048 ;;                  1    wreg      void 
 13049 ;; Registers used:
 13050 ;;		wreg, status,2, status,0, pclath, cstack
 13051 ;; Tracked objects:
 13052 ;;		On entry : 0/0
 13053 ;;		On exit  : 0/0
 13054 ;;		Unchanged: 0/0
 13055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13060 ;;Total ram usage:        0 bytes
 13061 ;; Hardware stack levels used:    1
 13062 ;; Hardware stack levels required when called:    7
 13063 ;; This function calls:
 13064 ;;		_PWM6_LoadDutyValue
 13065 ;; This function is called by:
 13066 ;;		_main
 13067 ;; This function uses a non-reentrant model
 13068 ;;
 13069                           
 13070                           
 13071                           ;psect for function _mod1_LED
 13072  0C2A                     _mod1_LED:	
 13073  0C2A                     l6141:	
 13074                           ;incstack = 0
 13075                           ; Regs used in _mod1_LED: [wreg+status,2+status,0+pclath+cstack]
 13076                           
 13077                           
 13078                           ;main.c: 329:     LATA = 0;
 13079  0C2A  0020               	movlb	0	; select bank0
 13080  0C2B  0196               	clrf	22	;volatile
 13081  0C2C                     l6143:	
 13082                           
 13083                           ;main.c: 330:     PWM6_LoadDutyValue(0);
 13084  0C2C  3000               	movlw	0
 13085  0C2D  00C4               	movwf	PWM6_LoadDutyValue@dutyValue
 13086  0C2E  00C5               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13087  0C2F  318D  25D1  318C   	fcall	_PWM6_LoadDutyValue
 13088  0C32                     l6145:	
 13089  0C32  0020               	movlb	0	; select bank0
 13090  0C33  1796               	bsf	22,7	;volatile
 13091  0C34                     l1477:	
 13092  0C34  0008               	return
 13093  0C35                     __end_of_mod1_LED:	
 13094                           
 13095                           	psect	text14
 13096  0DD1                     __ptext14:	
 13097 ;; *************** function _PWM6_LoadDutyValue *****************
 13098 ;; Defined at:
 13099 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 13100 ;; Parameters:    Size  Location     Type
 13101 ;;  dutyValue       2    0[BANK0 ] unsigned short 
 13102 ;; Auto vars:     Size  Location     Type
 13103 ;;		None
 13104 ;; Return value:  Size  Location     Type
 13105 ;;                  1    wreg      void 
 13106 ;; Registers used:
 13107 ;;		wreg, status,2, status,0
 13108 ;; Tracked objects:
 13109 ;;		On entry : 0/0
 13110 ;;		On exit  : 0/0
 13111 ;;		Unchanged: 0/0
 13112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13113 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13115 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13116 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13117 ;;Total ram usage:        4 bytes
 13118 ;; Hardware stack levels used:    1
 13119 ;; Hardware stack levels required when called:    6
 13120 ;; This function calls:
 13121 ;;		Nothing
 13122 ;; This function is called by:
 13123 ;;		_main
 13124 ;;		_mod1_LED
 13125 ;;		_mod2_LED
 13126 ;;		_mod3_LED
 13127 ;;		_mod4_LED
 13128 ;;		_all_LED
 13129 ;; This function uses a non-reentrant model
 13130 ;;
 13131                           
 13132                           
 13133                           ;psect for function _PWM6_LoadDutyValue
 13134  0DD1                     _PWM6_LoadDutyValue:	
 13135  0DD1                     l4645:	
 13136                           ;incstack = 0
 13137                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 13138                           
 13139                           
 13140                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 13141  0DD1  0020               	movlb	0	; select bank0
 13142  0DD2  0845               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 13143  0DD3  00C7               	movwf	??_PWM6_LoadDutyValue+1
 13144  0DD4  0844               	movf	PWM6_LoadDutyValue@dutyValue,w
 13145  0DD5  00C6               	movwf	??_PWM6_LoadDutyValue
 13146  0DD6  36C7               	lsrf	??_PWM6_LoadDutyValue+1,f
 13147  0DD7  0CC6               	rrf	??_PWM6_LoadDutyValue,f
 13148  0DD8  36C7               	lsrf	??_PWM6_LoadDutyValue+1,f
 13149  0DD9  0CC6               	rrf	??_PWM6_LoadDutyValue,f
 13150  0DDA  0846               	movf	??_PWM6_LoadDutyValue,w
 13151  0DDB  0027               	movlb	7	; select bank7
 13152  0DDC  008D               	movwf	13	;volatile
 13153                           
 13154                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 13155  0DDD  0020               	movlb	0	; select bank0
 13156  0DDE  0844               	movf	PWM6_LoadDutyValue@dutyValue,w
 13157  0DDF  3903               	andlw	3
 13158  0DE0  00C6               	movwf	??_PWM6_LoadDutyValue
 13159  0DE1  3005               	movlw	5
 13160  0DE2                     u2135:	
 13161  0DE2  35C6               	lslf	??_PWM6_LoadDutyValue,f
 13162  0DE3  3EFF               	addlw	-1
 13163  0DE4  1D03               	skipz
 13164  0DE5  2DE2               	goto	u2135
 13165  0DE6  3546               	lslf	??_PWM6_LoadDutyValue,w
 13166  0DE7  0027               	movlb	7	; select bank7
 13167  0DE8  008C               	movwf	12	;volatile
 13168  0DE9                     l1104:	
 13169  0DE9  0008               	return
 13170  0DEA                     __end_of_PWM6_LoadDutyValue:	
 13171                           
 13172                           	psect	text15
 13173  0CCA                     __ptext15:	
 13174 ;; *************** function _cksum_w *****************
 13175 ;; Defined at:
 13176 ;;		line 31 in file "eeprom_rw.c"
 13177 ;; Parameters:    Size  Location     Type
 13178 ;;		None
 13179 ;; Auto vars:     Size  Location     Type
 13180 ;;		None
 13181 ;; Return value:  Size  Location     Type
 13182 ;;                  1    wreg      void 
 13183 ;; Registers used:
 13184 ;;		wreg, status,2, status,0, pclath, cstack
 13185 ;; Tracked objects:
 13186 ;;		On entry : 0/0
 13187 ;;		On exit  : 0/0
 13188 ;;		Unchanged: 0/0
 13189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13192 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13193 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13194 ;;Total ram usage:        1 bytes
 13195 ;; Hardware stack levels used:    1
 13196 ;; Hardware stack levels required when called:    8
 13197 ;; This function calls:
 13198 ;;		_DATAEE_WriteByte
 13199 ;;		_cksum
 13200 ;; This function is called by:
 13201 ;;		_main
 13202 ;; This function uses a non-reentrant model
 13203 ;;
 13204                           
 13205                           
 13206                           ;psect for function _cksum_w
 13207  0CCA                     _cksum_w:	
 13208  0CCA                     l6127:	
 13209                           ;incstack = 0
 13210                           ; Regs used in _cksum_w: [wreg+status,2+status,0+pclath+cstack]
 13211                           
 13212                           
 13213                           ;eeprom_rw.c: 33:     DATAEE_WriteByte(0xF0FF, cksum());
 13214  0CCA  30FF               	movlw	255
 13215  0CCB  0020               	movlb	0	; select bank0
 13216  0CCC  00CA               	movwf	DATAEE_WriteByte@bAdd
 13217  0CCD  30F0               	movlw	240
 13218  0CCE  00CB               	movwf	DATAEE_WriteByte@bAdd+1
 13219  0CCF  3187  27E0  318C   	fcall	_cksum
 13220  0CD2  0020               	movlb	0	; select bank0
 13221  0CD3  00CE               	movwf	??_cksum_w
 13222  0CD4  084E               	movf	??_cksum_w,w
 13223  0CD5  00CC               	movwf	DATAEE_WriteByte@bData
 13224  0CD6  318E  26B8  318C   	fcall	_DATAEE_WriteByte
 13225  0CD9                     l1557:	
 13226  0CD9  0008               	return
 13227  0CDA                     __end_of_cksum_w:	
 13228                           
 13229                           	psect	text16
 13230  07E0                     __ptext16:	
 13231 ;; *************** function _cksum *****************
 13232 ;; Defined at:
 13233 ;;		line 36 in file "eeprom_rw.c"
 13234 ;; Parameters:    Size  Location     Type
 13235 ;;		None
 13236 ;; Auto vars:     Size  Location     Type
 13237 ;;  i               2    4[BANK0 ] unsigned int 
 13238 ;;  res             1    3[BANK0 ] unsigned char 
 13239 ;; Return value:  Size  Location     Type
 13240 ;;                  1    wreg      unsigned char 
 13241 ;; Registers used:
 13242 ;;		wreg, status,2, status,0, pclath, cstack
 13243 ;; Tracked objects:
 13244 ;;		On entry : 0/0
 13245 ;;		On exit  : 0/0
 13246 ;;		Unchanged: 0/0
 13247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13249 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13250 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13251 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13252 ;;Total ram usage:        4 bytes
 13253 ;; Hardware stack levels used:    1
 13254 ;; Hardware stack levels required when called:    7
 13255 ;; This function calls:
 13256 ;;		_DATAEE_ReadByte
 13257 ;; This function is called by:
 13258 ;;		_main
 13259 ;;		_cksum_w
 13260 ;; This function uses a non-reentrant model
 13261 ;;
 13262                           
 13263                           
 13264                           ;psect for function _cksum
 13265  07E0                     _cksum:	
 13266  07E0                     l6017:	
 13267                           ;incstack = 0
 13268                           ; Regs used in _cksum: [wreg+status,2+status,0+pclath+cstack]
 13269                           
 13270                           
 13271                           ;eeprom_rw.c: 38:     unsigned char res = 0;
 13272  07E0  0020               	movlb	0	; select bank0
 13273  07E1  01C7               	clrf	cksum@res
 13274  07E2                     l6019:	
 13275                           
 13276                           ;eeprom_rw.c: 39:     for(unsigned int i = 0xF0FF - 10; i < 0xF0FF; i ++) {
 13277  07E2  30F5               	movlw	245
 13278  07E3  00C8               	movwf	cksum@i
 13279  07E4  30F0               	movlw	240
 13280  07E5  00C9               	movwf	cksum@i+1
 13281  07E6                     l6025:	
 13282                           
 13283                           ;eeprom_rw.c: 40:         res += DATAEE_ReadByte(i);
 13284  07E6  0849               	movf	cksum@i+1,w
 13285  07E7  00C5               	movwf	DATAEE_ReadByte@bAdd+1
 13286  07E8  0848               	movf	cksum@i,w
 13287  07E9  00C4               	movwf	DATAEE_ReadByte@bAdd
 13288  07EA  318C  24AB  3187   	fcall	_DATAEE_ReadByte
 13289  07ED  0020               	movlb	0	; select bank0
 13290  07EE  00C6               	movwf	??_cksum
 13291  07EF  0846               	movf	??_cksum,w
 13292  07F0  07C7               	addwf	cksum@res,f
 13293  07F1                     l6027:	
 13294                           
 13295                           ;eeprom_rw.c: 41:     }
 13296  07F1  3001               	movlw	1
 13297  07F2  07C8               	addwf	cksum@i,f
 13298  07F3  3000               	movlw	0
 13299  07F4  3DC9               	addwfc	cksum@i+1,f
 13300  07F5                     l6029:	
 13301  07F5  30F0               	movlw	240
 13302  07F6  0249               	subwf	cksum@i+1,w
 13303  07F7  30FF               	movlw	255
 13304  07F8  1903               	skipnz
 13305  07F9  0248               	subwf	cksum@i,w
 13306  07FA  1C03               	skipc
 13307  07FB  2FFD               	goto	u3651
 13308  07FC  2FFE               	goto	u3650
 13309  07FD                     u3651:	
 13310  07FD  2FE6               	goto	l6025
 13311  07FE                     u3650:	
 13312  07FE                     l6031:	
 13313                           
 13314                           ;eeprom_rw.c: 42:     return res;
 13315  07FE  0847               	movf	cksum@res,w
 13316  07FF                     l1562:	
 13317  07FF  0008               	return
 13318  0800                     __end_of_cksum:	
 13319                           
 13320                           	psect	text17
 13321  0CAB                     __ptext17:	
 13322 ;; *************** function _DATAEE_ReadByte *****************
 13323 ;; Defined at:
 13324 ;;		line 202 in file "mcc_generated_files/memory.c"
 13325 ;; Parameters:    Size  Location     Type
 13326 ;;  bAdd            2    0[BANK0 ] unsigned short 
 13327 ;; Auto vars:     Size  Location     Type
 13328 ;;		None
 13329 ;; Return value:  Size  Location     Type
 13330 ;;                  1    wreg      unsigned char 
 13331 ;; Registers used:
 13332 ;;		wreg, status,2
 13333 ;; Tracked objects:
 13334 ;;		On entry : 0/0
 13335 ;;		On exit  : 0/0
 13336 ;;		Unchanged: 0/0
 13337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13338 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13341 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13342 ;;Total ram usage:        2 bytes
 13343 ;; Hardware stack levels used:    1
 13344 ;; Hardware stack levels required when called:    6
 13345 ;; This function calls:
 13346 ;;		Nothing
 13347 ;; This function is called by:
 13348 ;;		_main
 13349 ;;		_read_ring
 13350 ;;		_cksum
 13351 ;; This function uses a non-reentrant model
 13352 ;;
 13353                           
 13354                           
 13355                           ;psect for function _DATAEE_ReadByte
 13356  0CAB                     _DATAEE_ReadByte:	
 13357  0CAB                     l5697:	
 13358                           ;incstack = 0
 13359                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 13360                           
 13361                           
 13362                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 13363  0CAB  0020               	movlb	0	; select bank0
 13364  0CAC  0845               	movf	DATAEE_ReadByte@bAdd+1,w
 13365  0CAD  0030               	movlb	16	; select bank16
 13366  0CAE  009B               	movwf	27	;volatile
 13367  0CAF                     l5699:	
 13368                           
 13369                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 13370  0CAF  0020               	movlb	0	; select bank0
 13371  0CB0  0844               	movf	DATAEE_ReadByte@bAdd,w
 13372  0CB1  0030               	movlb	16	; select bank16
 13373  0CB2  009A               	movwf	26	;volatile
 13374  0CB3                     l5701:	
 13375                           
 13376                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 13377  0CB3  171E               	bsf	30,6	;volsfr
 13378  0CB4                     l5703:	
 13379                           
 13380                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 13381  0CB4  141E               	bsf	30,0	;volsfr
 13382  0CB5                     l5705:	
 13383                           
 13384                           ;mcc_generated_files/memory.c: 208:     __nop();
 13385  0CB5  0000               	nop
 13386  0CB6                     l5707:	
 13387                           
 13388                           ;mcc_generated_files/memory.c: 209:     __nop();
 13389  0CB6  0000               	nop
 13390  0CB7                     l5709:	
 13391                           
 13392                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 13393  0CB7  0030               	movlb	16	; select bank16
 13394  0CB8  081C               	movf	28,w	;volatile
 13395  0CB9                     l904:	
 13396  0CB9  0008               	return
 13397  0CBA                     __end_of_DATAEE_ReadByte:	
 13398                           
 13399                           	psect	text18
 13400  0EB8                     __ptext18:	
 13401 ;; *************** function _DATAEE_WriteByte *****************
 13402 ;; Defined at:
 13403 ;;		line 180 in file "mcc_generated_files/memory.c"
 13404 ;; Parameters:    Size  Location     Type
 13405 ;;  bAdd            2    6[BANK0 ] unsigned short 
 13406 ;;  bData           1    8[BANK0 ] unsigned char 
 13407 ;; Auto vars:     Size  Location     Type
 13408 ;;  GIEBitValue     1    9[BANK0 ] unsigned char 
 13409 ;; Return value:  Size  Location     Type
 13410 ;;                  1    wreg      void 
 13411 ;; Registers used:
 13412 ;;		wreg, status,2, status,0
 13413 ;; Tracked objects:
 13414 ;;		On entry : 0/0
 13415 ;;		On exit  : 0/0
 13416 ;;		Unchanged: 0/0
 13417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13418 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13419 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13421 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13422 ;;Total ram usage:        4 bytes
 13423 ;; Hardware stack levels used:    1
 13424 ;; Hardware stack levels required when called:    6
 13425 ;; This function calls:
 13426 ;;		Nothing
 13427 ;; This function is called by:
 13428 ;;		_main
 13429 ;;		_push_ring
 13430 ;;		_cksum_w
 13431 ;;		_reset_recv
 13432 ;; This function uses a non-reentrant model
 13433 ;;
 13434                           
 13435                           
 13436                           ;psect for function _DATAEE_WriteByte
 13437  0EB8                     _DATAEE_WriteByte:	
 13438  0EB8                     l5983:	
 13439                           ;incstack = 0
 13440                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 13441                           
 13442                           
 13443                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 13444  0EB8  3000               	movlw	0
 13445  0EB9  1B8B               	btfsc	11,7	;volatile
 13446  0EBA  3001               	movlw	1
 13447  0EBB  0020               	movlb	0	; select bank0
 13448  0EBC  00CD               	movwf	DATAEE_WriteByte@GIEBitValue
 13449                           
 13450                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 13451  0EBD  084B               	movf	DATAEE_WriteByte@bAdd+1,w
 13452  0EBE  0030               	movlb	16	; select bank16
 13453  0EBF  009B               	movwf	27	;volatile
 13454  0EC0                     l5985:	
 13455                           
 13456                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 13457  0EC0  0020               	movlb	0	; select bank0
 13458  0EC1  084A               	movf	DATAEE_WriteByte@bAdd,w
 13459  0EC2  0030               	movlb	16	; select bank16
 13460  0EC3  009A               	movwf	26	;volatile
 13461  0EC4                     l5987:	
 13462                           
 13463                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 13464  0EC4  0020               	movlb	0	; select bank0
 13465  0EC5  084C               	movf	DATAEE_WriteByte@bData,w
 13466  0EC6  0030               	movlb	16	; select bank16
 13467  0EC7  009C               	movwf	28	;volatile
 13468  0EC8                     l5989:	
 13469                           
 13470                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 13471  0EC8  171E               	bsf	30,6	;volsfr
 13472  0EC9                     l5991:	
 13473                           
 13474                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 13475  0EC9  151E               	bsf	30,2	;volsfr
 13476  0ECA                     l5993:	
 13477                           
 13478                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 13479  0ECA  138B               	bcf	11,7	;volatile
 13480  0ECB                     l5995:	
 13481                           
 13482                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 13483  0ECB  3055               	movlw	85
 13484  0ECC  009F               	movwf	31	;volsfr
 13485  0ECD                     l5997:	
 13486                           
 13487                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 13488  0ECD  30AA               	movlw	170
 13489  0ECE  009F               	movwf	31	;volsfr
 13490  0ECF                     l5999:	
 13491                           
 13492                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 13493  0ECF  149E               	bsf	30,1	;volsfr
 13494  0ED0                     l898:	
 13495                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 13496                           
 13497                           
 13498                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 13499  0ED0  189E               	btfsc	30,1	;volsfr
 13500  0ED1  2ED3               	goto	u3641
 13501  0ED2  2ED4               	goto	u3640
 13502  0ED3                     u3641:	
 13503  0ED3  2ED0               	goto	l898
 13504  0ED4                     u3640:	
 13505  0ED4                     l900:	
 13506                           
 13507                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 13508  0ED4  111E               	bcf	30,2	;volsfr
 13509  0ED5                     l6001:	
 13510                           
 13511                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 13512  0ED5  0020               	movlb	0	; select bank0
 13513  0ED6  0C4D               	rrf	DATAEE_WriteByte@GIEBitValue,w
 13514  0ED7  1C03               	skipc
 13515  0ED8  138B               	bcf	11,7	;volatile
 13516  0ED9  1803               	skipnc
 13517  0EDA  178B               	bsf	11,7	;volatile
 13518  0EDB                     l901:	
 13519  0EDB  0008               	return
 13520  0EDC                     __end_of_DATAEE_WriteByte:	
 13521                           
 13522                           	psect	text19
 13523  0E1E                     __ptext19:	
 13524 ;; *************** function _SYSTEM_Initialize *****************
 13525 ;; Defined at:
 13526 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13527 ;; Parameters:    Size  Location     Type
 13528 ;;		None
 13529 ;; Auto vars:     Size  Location     Type
 13530 ;;		None
 13531 ;; Return value:  Size  Location     Type
 13532 ;;                  1    wreg      void 
 13533 ;; Registers used:
 13534 ;;		wreg, status,2, status,0, pclath, cstack
 13535 ;; Tracked objects:
 13536 ;;		On entry : 0/0
 13537 ;;		On exit  : 0/0
 13538 ;;		Unchanged: 0/0
 13539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13544 ;;Total ram usage:        0 bytes
 13545 ;; Hardware stack levels used:    1
 13546 ;; Hardware stack levels required when called:    8
 13547 ;; This function calls:
 13548 ;;		_ADCC_Initialize
 13549 ;;		_EXT_INT_Initialize
 13550 ;;		_OSCILLATOR_Initialize
 13551 ;;		_PIN_MANAGER_Initialize
 13552 ;;		_PMD_Initialize
 13553 ;;		_PWM6_Initialize
 13554 ;;		_TMR0_Initialize
 13555 ;;		_TMR1_Initialize
 13556 ;;		_TMR2_Initialize
 13557 ;; This function is called by:
 13558 ;;		_main
 13559 ;; This function uses a non-reentrant model
 13560 ;;
 13561                           
 13562                           
 13563                           ;psect for function _SYSTEM_Initialize
 13564  0E1E                     _SYSTEM_Initialize:	
 13565  0E1E                     l6099:	
 13566                           ;incstack = 0
 13567                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13568                           
 13569                           
 13570                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 13571  0E1E  318B  23DF  318E   	fcall	_PMD_Initialize
 13572  0E21                     l6101:	
 13573                           
 13574                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 13575  0E21  3187  2750  318E   	fcall	_PIN_MANAGER_Initialize
 13576  0E24                     l6103:	
 13577                           
 13578                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 13579  0E24  318B  23F9  318E   	fcall	_OSCILLATOR_Initialize
 13580  0E27                     l6105:	
 13581                           
 13582                           ;mcc_generated_files/mcc.c: 55:     PWM6_Initialize();
 13583  0E27  318C  2464  318E   	fcall	_PWM6_Initialize
 13584  0E2A                     l6107:	
 13585                           
 13586                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 13587  0E2A  318D  255E  318E   	fcall	_ADCC_Initialize
 13588  0E2D                     l6109:	
 13589                           
 13590                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
 13591  0E2D  318C  249C  318E   	fcall	_TMR2_Initialize
 13592  0E30                     l6111:	
 13593                           
 13594                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 13595  0E30  318C  247F  318E   	fcall	_EXT_INT_Initialize
 13596  0E33                     l6113:	
 13597                           
 13598                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
 13599  0E33  318E  2656  318E   	fcall	_TMR1_Initialize
 13600  0E36                     l6115:	
 13601                           
 13602                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
 13603  0E36  318D  2533  318E   	fcall	_TMR0_Initialize
 13604  0E39                     l618:	
 13605  0E39  0008               	return
 13606  0E3A                     __end_of_SYSTEM_Initialize:	
 13607                           
 13608                           	psect	text20
 13609  0C9C                     __ptext20:	
 13610 ;; *************** function _TMR2_Initialize *****************
 13611 ;; Defined at:
 13612 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 13613 ;; Parameters:    Size  Location     Type
 13614 ;;		None
 13615 ;; Auto vars:     Size  Location     Type
 13616 ;;		None
 13617 ;; Return value:  Size  Location     Type
 13618 ;;                  1    wreg      void 
 13619 ;; Registers used:
 13620 ;;		wreg, status,2
 13621 ;; Tracked objects:
 13622 ;;		On entry : 0/0
 13623 ;;		On exit  : 0/0
 13624 ;;		Unchanged: 0/0
 13625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13630 ;;Total ram usage:        0 bytes
 13631 ;; Hardware stack levels used:    1
 13632 ;; Hardware stack levels required when called:    6
 13633 ;; This function calls:
 13634 ;;		Nothing
 13635 ;; This function is called by:
 13636 ;;		_SYSTEM_Initialize
 13637 ;; This function uses a non-reentrant model
 13638 ;;
 13639                           
 13640                           
 13641                           ;psect for function _TMR2_Initialize
 13642  0C9C                     _TMR2_Initialize:	
 13643  0C9C                     l5955:	
 13644                           ;incstack = 0
 13645                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 13646                           
 13647                           
 13648                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 13649  0C9C  3001               	movlw	1
 13650  0C9D  0025               	movlb	5	; select bank5
 13651  0C9E  0090               	movwf	16	;volatile
 13652                           
 13653                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x20;
 13654  0C9F  3020               	movlw	32
 13655  0CA0  008F               	movwf	15	;volatile
 13656  0CA1                     l5957:	
 13657                           
 13658                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 13659  0CA1  0191               	clrf	17	;volatile
 13660  0CA2                     l5959:	
 13661                           
 13662                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xF9;
 13663  0CA2  30F9               	movlw	249
 13664  0CA3  008D               	movwf	13	;volatile
 13665                           
 13666                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 13667  0CA4  018C               	clrf	12	;volatile
 13668  0CA5                     l5961:	
 13669                           
 13670                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 13671  0CA5  002E               	movlb	14	; select bank14
 13672  0CA6  1090               	bcf	16,1	;volatile
 13673  0CA7                     l5963:	
 13674                           
 13675                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0x80;
 13676  0CA7  3080               	movlw	128
 13677  0CA8  0025               	movlb	5	; select bank5
 13678  0CA9  008E               	movwf	14	;volatile
 13679  0CAA                     l1179:	
 13680  0CAA  0008               	return
 13681  0CAB                     __end_of_TMR2_Initialize:	
 13682                           
 13683                           	psect	text21
 13684  0E56                     __ptext21:	
 13685 ;; *************** function _TMR1_Initialize *****************
 13686 ;; Defined at:
 13687 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 13688 ;; Parameters:    Size  Location     Type
 13689 ;;		None
 13690 ;; Auto vars:     Size  Location     Type
 13691 ;;		None
 13692 ;; Return value:  Size  Location     Type
 13693 ;;                  1    wreg      void 
 13694 ;; Registers used:
 13695 ;;		wreg, status,2, status,0, pclath, cstack
 13696 ;; Tracked objects:
 13697 ;;		On entry : 0/0
 13698 ;;		On exit  : 0/0
 13699 ;;		Unchanged: 0/0
 13700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13705 ;;Total ram usage:        0 bytes
 13706 ;; Hardware stack levels used:    1
 13707 ;; Hardware stack levels required when called:    7
 13708 ;; This function calls:
 13709 ;;		_TMR1_SetInterruptHandler
 13710 ;; This function is called by:
 13711 ;;		_SYSTEM_Initialize
 13712 ;; This function uses a non-reentrant model
 13713 ;;
 13714                           
 13715                           
 13716                           ;psect for function _TMR1_Initialize
 13717  0E56                     _TMR1_Initialize:	
 13718  0E56                     l5863:	
 13719                           ;incstack = 0
 13720                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13721                           
 13722                           
 13723                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 13724  0E56  0024               	movlb	4	; select bank4
 13725  0E57  018F               	clrf	15	;volatile
 13726                           
 13727                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 13728  0E58  0190               	clrf	16	;volatile
 13729  0E59                     l5865:	
 13730                           
 13731                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
 13732  0E59  3004               	movlw	4
 13733  0E5A  0091               	movwf	17	;volatile
 13734  0E5B                     l5867:	
 13735                           
 13736                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xE1;
 13737  0E5B  30E1               	movlw	225
 13738  0E5C  008D               	movwf	13	;volatile
 13739  0E5D                     l5869:	
 13740                           
 13741                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xBA;
 13742  0E5D  30BA               	movlw	186
 13743  0E5E  008C               	movwf	12	;volatile
 13744  0E5F                     l5871:	
 13745                           
 13746                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 13747  0E5F  080D               	movf	13,w	;volatile
 13748  0E60  0020               	movlb	0	; select bank0
 13749  0E61  00A7               	movwf	_timer1ReloadVal+1	;volatile
 13750  0E62  0024               	movlb	4	; select bank4
 13751  0E63  080C               	movf	12,w	;volatile
 13752  0E64  0020               	movlb	0	; select bank0
 13753  0E65  00A6               	movwf	_timer1ReloadVal	;volatile
 13754  0E66                     l5873:	
 13755                           
 13756                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
 13757  0E66  002E               	movlb	14	; select bank14
 13758  0E67  1010               	bcf	16,0	;volatile
 13759  0E68                     l5875:	
 13760                           
 13761                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 13762  0E68  141A               	bsf	26,0	;volatile
 13763  0E69                     l5877:	
 13764                           
 13765                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 13766  0E69  303F               	movlw	low _TMR1_DefaultInterruptHandler
 13767  0E6A  0020               	movlb	0	; select bank0
 13768  0E6B  00C4               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 13769  0E6C  300B               	movlw	high _TMR1_DefaultInterruptHandler
 13770  0E6D  00C5               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 13771  0E6E  318B  23A5  318E   	fcall	_TMR1_SetInterruptHandler
 13772  0E71                     l5879:	
 13773                           
 13774                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x15;
 13775  0E71  3015               	movlw	21
 13776  0E72  0024               	movlb	4	; select bank4
 13777  0E73  008E               	movwf	14	;volatile
 13778  0E74                     l497:	
 13779  0E74  0008               	return
 13780  0E75                     __end_of_TMR1_Initialize:	
 13781                           
 13782                           	psect	text22
 13783  0BA5                     __ptext22:	
 13784 ;; *************** function _TMR1_SetInterruptHandler *****************
 13785 ;; Defined at:
 13786 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 13787 ;; Parameters:    Size  Location     Type
 13788 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 13789 ;;		 -> h_clock(1), TMR1_DefaultInterruptHandler(1), 
 13790 ;; Auto vars:     Size  Location     Type
 13791 ;;		None
 13792 ;; Return value:  Size  Location     Type
 13793 ;;                  1    wreg      void 
 13794 ;; Registers used:
 13795 ;;		wreg
 13796 ;; Tracked objects:
 13797 ;;		On entry : 0/0
 13798 ;;		On exit  : 0/0
 13799 ;;		Unchanged: 0/0
 13800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13801 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13804 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13805 ;;Total ram usage:        2 bytes
 13806 ;; Hardware stack levels used:    1
 13807 ;; Hardware stack levels required when called:    6
 13808 ;; This function calls:
 13809 ;;		Nothing
 13810 ;; This function is called by:
 13811 ;;		_TMR1_Initialize
 13812 ;;		_main
 13813 ;; This function uses a non-reentrant model
 13814 ;;
 13815                           
 13816                           
 13817                           ;psect for function _TMR1_SetInterruptHandler
 13818  0BA5                     _TMR1_SetInterruptHandler:	
 13819  0BA5                     l5695:	
 13820                           ;incstack = 0
 13821                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 13822                           
 13823                           
 13824                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
 13825  0BA5  0020               	movlb	0	; select bank0
 13826  0BA6  0845               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 13827  0BA7  00A5               	movwf	_TMR1_InterruptHandler+1
 13828  0BA8  0844               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 13829  0BA9  00A4               	movwf	_TMR1_InterruptHandler
 13830  0BAA                     l527:	
 13831  0BAA  0008               	return
 13832  0BAB                     __end_of_TMR1_SetInterruptHandler:	
 13833                           
 13834                           	psect	text23
 13835  0D33                     __ptext23:	
 13836 ;; *************** function _TMR0_Initialize *****************
 13837 ;; Defined at:
 13838 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 13839 ;; Parameters:    Size  Location     Type
 13840 ;;		None
 13841 ;; Auto vars:     Size  Location     Type
 13842 ;;		None
 13843 ;; Return value:  Size  Location     Type
 13844 ;;                  1    wreg      void 
 13845 ;; Registers used:
 13846 ;;		wreg, status,2, status,0, pclath, cstack
 13847 ;; Tracked objects:
 13848 ;;		On entry : 0/0
 13849 ;;		On exit  : 0/0
 13850 ;;		Unchanged: 0/0
 13851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13856 ;;Total ram usage:        0 bytes
 13857 ;; Hardware stack levels used:    1
 13858 ;; Hardware stack levels required when called:    7
 13859 ;; This function calls:
 13860 ;;		_TMR0_SetInterruptHandler
 13861 ;; This function is called by:
 13862 ;;		_SYSTEM_Initialize
 13863 ;; This function uses a non-reentrant model
 13864 ;;
 13865                           
 13866                           
 13867                           ;psect for function _TMR0_Initialize
 13868  0D33                     _TMR0_Initialize:	
 13869  0D33                     l5971:	
 13870                           ;incstack = 0
 13871                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13872                           
 13873                           
 13874                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x90;
 13875  0D33  3090               	movlw	144
 13876  0D34  0020               	movlb	0	; select bank0
 13877  0D35  009F               	movwf	31	;volatile
 13878                           
 13879                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0x1E;
 13880  0D36  301E               	movlw	30
 13881  0D37  009D               	movwf	29	;volatile
 13882  0D38                     l5973:	
 13883                           
 13884                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 13885  0D38  019C               	clrf	28	;volatile
 13886  0D39                     l5975:	
 13887                           
 13888                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 13889  0D39  002E               	movlb	14	; select bank14
 13890  0D3A  128C               	bcf	12,5	;volatile
 13891  0D3B                     l5977:	
 13892                           
 13893                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 13894  0D3B  1696               	bsf	22,5	;volatile
 13895  0D3C                     l5979:	
 13896                           
 13897                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 13898  0D3C  303E               	movlw	low _TMR0_DefaultInterruptHandler
 13899  0D3D  0020               	movlb	0	; select bank0
 13900  0D3E  00C4               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 13901  0D3F  300B               	movlw	high _TMR0_DefaultInterruptHandler
 13902  0D40  00C5               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 13903  0D41  318B  239F  318D   	fcall	_TMR0_SetInterruptHandler
 13904  0D44                     l5981:	
 13905                           
 13906                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
 13907  0D44  3080               	movlw	128
 13908  0D45  0020               	movlb	0	; select bank0
 13909  0D46  009E               	movwf	30	;volatile
 13910  0D47                     l1127:	
 13911  0D47  0008               	return
 13912  0D48                     __end_of_TMR0_Initialize:	
 13913                           
 13914                           	psect	text24
 13915  0B9F                     __ptext24:	
 13916 ;; *************** function _TMR0_SetInterruptHandler *****************
 13917 ;; Defined at:
 13918 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 13919 ;; Parameters:    Size  Location     Type
 13920 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 13921 ;;		 -> h_precisionclock(1), TMR0_DefaultInterruptHandler(1), 
 13922 ;; Auto vars:     Size  Location     Type
 13923 ;;		None
 13924 ;; Return value:  Size  Location     Type
 13925 ;;                  1    wreg      void 
 13926 ;; Registers used:
 13927 ;;		wreg
 13928 ;; Tracked objects:
 13929 ;;		On entry : 0/0
 13930 ;;		On exit  : 0/0
 13931 ;;		Unchanged: 0/0
 13932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13933 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13936 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13937 ;;Total ram usage:        2 bytes
 13938 ;; Hardware stack levels used:    1
 13939 ;; Hardware stack levels required when called:    6
 13940 ;; This function calls:
 13941 ;;		Nothing
 13942 ;; This function is called by:
 13943 ;;		_TMR0_Initialize
 13944 ;;		_main
 13945 ;; This function uses a non-reentrant model
 13946 ;;
 13947                           
 13948                           
 13949                           ;psect for function _TMR0_SetInterruptHandler
 13950  0B9F                     _TMR0_SetInterruptHandler:	
 13951  0B9F                     l5715:	
 13952                           ;incstack = 0
 13953                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 13954                           
 13955                           
 13956                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 13957  0B9F  0020               	movlb	0	; select bank0
 13958  0BA0  0845               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 13959  0BA1  00A1               	movwf	_TMR0_InterruptHandler+1
 13960  0BA2  0844               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 13961  0BA3  00A0               	movwf	_TMR0_InterruptHandler
 13962  0BA4                     l1149:	
 13963  0BA4  0008               	return
 13964  0BA5                     __end_of_TMR0_SetInterruptHandler:	
 13965                           
 13966                           	psect	text25
 13967  0C64                     __ptext25:	
 13968 ;; *************** function _PWM6_Initialize *****************
 13969 ;; Defined at:
 13970 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 13971 ;; Parameters:    Size  Location     Type
 13972 ;;		None
 13973 ;; Auto vars:     Size  Location     Type
 13974 ;;		None
 13975 ;; Return value:  Size  Location     Type
 13976 ;;                  1    wreg      void 
 13977 ;; Registers used:
 13978 ;;		wreg, status,2, status,0
 13979 ;; Tracked objects:
 13980 ;;		On entry : 0/0
 13981 ;;		On exit  : 0/0
 13982 ;;		Unchanged: 0/0
 13983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13988 ;;Total ram usage:        0 bytes
 13989 ;; Hardware stack levels used:    1
 13990 ;; Hardware stack levels required when called:    6
 13991 ;; This function calls:
 13992 ;;		Nothing
 13993 ;; This function is called by:
 13994 ;;		_SYSTEM_Initialize
 13995 ;; This function uses a non-reentrant model
 13996 ;;
 13997                           
 13998                           
 13999                           ;psect for function _PWM6_Initialize
 14000  0C64                     _PWM6_Initialize:	
 14001  0C64                     l5945:	
 14002                           ;incstack = 0
 14003                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 14004                           
 14005                           
 14006                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 14007  0C64  3080               	movlw	128
 14008  0C65  0027               	movlb	7	; select bank7
 14009  0C66  008E               	movwf	14	;volatile
 14010                           
 14011                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x3E;
 14012  0C67  303E               	movlw	62
 14013  0C68  008D               	movwf	13	;volatile
 14014                           
 14015                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 14016  0C69  3040               	movlw	64
 14017  0C6A  008C               	movwf	12	;volatile
 14018  0C6B                     l5947:	
 14019                           
 14020                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 14021  0C6B  0024               	movlb	4	; select bank4
 14022  0C6C  081F               	movf	31,w	;volatile
 14023  0C6D  39F3               	andlw	-13
 14024  0C6E  3804               	iorlw	4
 14025  0C6F  009F               	movwf	31	;volatile
 14026  0C70                     l1101:	
 14027  0C70  0008               	return
 14028  0C71                     __end_of_PWM6_Initialize:	
 14029                           
 14030                           	psect	text26
 14031  0BDF                     __ptext26:	
 14032 ;; *************** function _PMD_Initialize *****************
 14033 ;; Defined at:
 14034 ;;		line 77 in file "mcc_generated_files/mcc.c"
 14035 ;; Parameters:    Size  Location     Type
 14036 ;;		None
 14037 ;; Auto vars:     Size  Location     Type
 14038 ;;		None
 14039 ;; Return value:  Size  Location     Type
 14040 ;;                  1    wreg      void 
 14041 ;; Registers used:
 14042 ;;		status,2
 14043 ;; Tracked objects:
 14044 ;;		On entry : 0/0
 14045 ;;		On exit  : 0/0
 14046 ;;		Unchanged: 0/0
 14047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14052 ;;Total ram usage:        0 bytes
 14053 ;; Hardware stack levels used:    1
 14054 ;; Hardware stack levels required when called:    6
 14055 ;; This function calls:
 14056 ;;		Nothing
 14057 ;; This function is called by:
 14058 ;;		_SYSTEM_Initialize
 14059 ;; This function uses a non-reentrant model
 14060 ;;
 14061                           
 14062                           
 14063                           ;psect for function _PMD_Initialize
 14064  0BDF                     _PMD_Initialize:	
 14065  0BDF                     l5881:	
 14066                           ;incstack = 0
 14067                           ; Regs used in _PMD_Initialize: [status,2]
 14068                           
 14069                           
 14070                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 14071  0BDF  002F               	movlb	15	; select bank15
 14072  0BE0  0196               	clrf	22	;volatile
 14073                           
 14074                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 14075  0BE1  0197               	clrf	23	;volatile
 14076                           
 14077                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 14078  0BE2  0198               	clrf	24	;volatile
 14079                           
 14080                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 14081  0BE3  0199               	clrf	25	;volatile
 14082                           
 14083                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 14084  0BE4  019A               	clrf	26	;volatile
 14085                           
 14086                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 14087  0BE5  019B               	clrf	27	;volatile
 14088  0BE6                     l624:	
 14089  0BE6  0008               	return
 14090  0BE7                     __end_of_PMD_Initialize:	
 14091                           
 14092                           	psect	text27
 14093  0750                     __ptext27:	
 14094 ;; *************** function _PIN_MANAGER_Initialize *****************
 14095 ;; Defined at:
 14096 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 14097 ;; Parameters:    Size  Location     Type
 14098 ;;		None
 14099 ;; Auto vars:     Size  Location     Type
 14100 ;;		None
 14101 ;; Return value:  Size  Location     Type
 14102 ;;                  1    wreg      void 
 14103 ;; Registers used:
 14104 ;;		wreg, status,2
 14105 ;; Tracked objects:
 14106 ;;		On entry : 0/0
 14107 ;;		On exit  : 0/0
 14108 ;;		Unchanged: 0/0
 14109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14114 ;;Total ram usage:        0 bytes
 14115 ;; Hardware stack levels used:    1
 14116 ;; Hardware stack levels required when called:    6
 14117 ;; This function calls:
 14118 ;;		Nothing
 14119 ;; This function is called by:
 14120 ;;		_SYSTEM_Initialize
 14121 ;; This function uses a non-reentrant model
 14122 ;;
 14123                           
 14124                           
 14125                           ;psect for function _PIN_MANAGER_Initialize
 14126  0750                     _PIN_MANAGER_Initialize:	
 14127  0750                     l5883:	
 14128                           ;incstack = 0
 14129                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 14130                           
 14131                           
 14132                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 14133  0750  0020               	movlb	0	; select bank0
 14134  0751  019A               	clrf	26	;volatile
 14135                           
 14136                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 14137  0752  0199               	clrf	25	;volatile
 14138                           
 14139                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 14140  0753  0196               	clrf	22	;volatile
 14141                           
 14142                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 14143  0754  0197               	clrf	23	;volatile
 14144                           
 14145                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 14146  0755  0198               	clrf	24	;volatile
 14147  0756                     l5885:	
 14148                           
 14149                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 14150  0756  3007               	movlw	7
 14151  0757  0095               	movwf	21	;volatile
 14152  0758                     l5887:	
 14153                           
 14154                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
 14155  0758  300F               	movlw	15
 14156  0759  0091               	movwf	17	;volatile
 14157  075A                     l5889:	
 14158                           
 14159                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 14160  075A  30FF               	movlw	255
 14161  075B  0092               	movwf	18	;volatile
 14162  075C                     l5891:	
 14163                           
 14164                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 14165  075C  30FF               	movlw	255
 14166  075D  0093               	movwf	19	;volatile
 14167  075E                     l5893:	
 14168                           
 14169                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 14170  075E  30FF               	movlw	255
 14171  075F  0094               	movwf	20	;volatile
 14172  0760                     l5895:	
 14173                           
 14174                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 14175  0760  30FF               	movlw	255
 14176  0761  003E               	movlb	30	; select bank30
 14177  0762  00D9               	movwf	89	;volatile
 14178  0763                     l5897:	
 14179                           
 14180                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC7;
 14181  0763  30C7               	movlw	199
 14182  0764  00CE               	movwf	78	;volatile
 14183  0765                     l5899:	
 14184                           
 14185                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
 14186  0765  30EF               	movlw	239
 14187  0766  00C3               	movwf	67	;volatile
 14188  0767                     l5901:	
 14189                           
 14190                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 14191  0767  3007               	movlw	7
 14192  0768  00E4               	movwf	100	;volatile
 14193  0769                     l5903:	
 14194                           
 14195                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
 14196  0769  30FF               	movlw	255
 14197  076A  00B8               	movwf	56	;volatile
 14198                           
 14199                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 14200  076B  01DA               	clrf	90	;volatile
 14201                           
 14202                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 14203  076C  01E5               	clrf	101	;volatile
 14204                           
 14205                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 14206  076D  01C4               	clrf	68	;volatile
 14207                           
 14208                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 14209  076E  01B9               	clrf	57	;volatile
 14210                           
 14211                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 14212  076F  01CF               	clrf	79	;volatile
 14213                           
 14214                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 14215  0770  01E6               	clrf	102	;volatile
 14216                           
 14217                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 14218  0771  01BA               	clrf	58	;volatile
 14219                           
 14220                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 14221  0772  01C5               	clrf	69	;volatile
 14222                           
 14223                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 14224  0773  01D0               	clrf	80	;volatile
 14225                           
 14226                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 14227  0774  01DB               	clrf	91	;volatile
 14228  0775                     l5905:	
 14229                           
 14230                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 14231  0775  30FF               	movlw	255
 14232  0776  00BB               	movwf	59	;volatile
 14233  0777                     l5907:	
 14234                           
 14235                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 14236  0777  30FF               	movlw	255
 14237  0778  00C6               	movwf	70	;volatile
 14238  0779                     l5909:	
 14239                           
 14240                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 14241  0779  30FF               	movlw	255
 14242  077A  00D1               	movwf	81	;volatile
 14243  077B                     l5911:	
 14244                           
 14245                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 14246  077B  30FF               	movlw	255
 14247  077C  00DC               	movwf	92	;volatile
 14248  077D                     l5913:	
 14249                           
 14250                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 14251  077D  3007               	movlw	7
 14252  077E  00E7               	movwf	103	;volatile
 14253  077F                     l5915:	
 14254                           
 14255                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 14256  077F  30FF               	movlw	255
 14257  0780  00BC               	movwf	60	;volatile
 14258  0781                     l5917:	
 14259                           
 14260                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 14261  0781  30FF               	movlw	255
 14262  0782  00C7               	movwf	71	;volatile
 14263  0783                     l5919:	
 14264                           
 14265                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 14266  0783  30FF               	movlw	255
 14267  0784  00D2               	movwf	82	;volatile
 14268  0785                     l5921:	
 14269                           
 14270                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 14271  0785  30FF               	movlw	255
 14272  0786  00DD               	movwf	93	;volatile
 14273  0787                     l5923:	
 14274                           
 14275                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 14276  0787  3007               	movlw	7
 14277  0788  00E8               	movwf	104	;volatile
 14278  0789                     l5925:	
 14279                           
 14280                           ;mcc_generated_files/pin_manager.c: 127:     INTPPS = 0x0C;
 14281  0789  300C               	movlw	12
 14282  078A  003D               	movlb	29	; select bank29
 14283  078B  0090               	movwf	16	;volatile
 14284  078C                     l5927:	
 14285                           
 14286                           ;mcc_generated_files/pin_manager.c: 128:     SSP1CLKPPS = 0x13;
 14287  078C  3013               	movlw	19
 14288  078D  00C5               	movwf	69	;volatile
 14289  078E                     l5929:	
 14290                           
 14291                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x14;
 14292  078E  3014               	movlw	20
 14293  078F  003E               	movlb	30	; select bank30
 14294  0790  00A3               	movwf	35	;volatile
 14295  0791                     l5931:	
 14296                           
 14297                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x15;
 14298  0791  3015               	movlw	21
 14299  0792  00A4               	movwf	36	;volatile
 14300  0793                     l5933:	
 14301                           
 14302                           ;mcc_generated_files/pin_manager.c: 131:     RA6PPS = 0x0E;
 14303  0793  300E               	movlw	14
 14304  0794  0096               	movwf	22	;volatile
 14305  0795                     l5935:	
 14306                           
 14307                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 14308  0795  3014               	movlw	20
 14309  0796  003D               	movlb	29	; select bank29
 14310  0797  00C6               	movwf	70	;volatile
 14311  0798                     l709:	
 14312  0798  0008               	return
 14313  0799                     __end_of_PIN_MANAGER_Initialize:	
 14314                           
 14315                           	psect	text28
 14316  0BF9                     __ptext28:	
 14317 ;; *************** function _OSCILLATOR_Initialize *****************
 14318 ;; Defined at:
 14319 ;;		line 63 in file "mcc_generated_files/mcc.c"
 14320 ;; Parameters:    Size  Location     Type
 14321 ;;		None
 14322 ;; Auto vars:     Size  Location     Type
 14323 ;;		None
 14324 ;; Return value:  Size  Location     Type
 14325 ;;                  1    wreg      void 
 14326 ;; Registers used:
 14327 ;;		wreg, status,2
 14328 ;; Tracked objects:
 14329 ;;		On entry : 0/0
 14330 ;;		On exit  : 0/0
 14331 ;;		Unchanged: 0/0
 14332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14337 ;;Total ram usage:        0 bytes
 14338 ;; Hardware stack levels used:    1
 14339 ;; Hardware stack levels required when called:    6
 14340 ;; This function calls:
 14341 ;;		Nothing
 14342 ;; This function is called by:
 14343 ;;		_SYSTEM_Initialize
 14344 ;; This function uses a non-reentrant model
 14345 ;;
 14346                           
 14347                           
 14348                           ;psect for function _OSCILLATOR_Initialize
 14349  0BF9                     _OSCILLATOR_Initialize:	
 14350  0BF9                     l5937:	
 14351                           ;incstack = 0
 14352                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 14353                           
 14354                           
 14355                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x62;
 14356  0BF9  3062               	movlw	98
 14357  0BFA  0031               	movlb	17	; select bank17
 14358  0BFB  008D               	movwf	13	;volatile
 14359  0BFC                     l5939:	
 14360                           
 14361                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
 14362  0BFC  018F               	clrf	15	;volatile
 14363  0BFD                     l5941:	
 14364                           
 14365                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
 14366  0BFD  0191               	clrf	17	;volatile
 14367                           
 14368                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x02;
 14369  0BFE  3002               	movlw	2
 14370  0BFF  0093               	movwf	19	;volatile
 14371  0C00                     l5943:	
 14372                           
 14373                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 14374  0C00  0192               	clrf	18	;volatile
 14375  0C01                     l621:	
 14376  0C01  0008               	return
 14377  0C02                     __end_of_OSCILLATOR_Initialize:	
 14378                           
 14379                           	psect	text29
 14380  0C7F                     __ptext29:	
 14381 ;; *************** function _EXT_INT_Initialize *****************
 14382 ;; Defined at:
 14383 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 14384 ;; Parameters:    Size  Location     Type
 14385 ;;		None
 14386 ;; Auto vars:     Size  Location     Type
 14387 ;;		None
 14388 ;; Return value:  Size  Location     Type
 14389 ;;                  1    wreg      void 
 14390 ;; Registers used:
 14391 ;;		wreg, status,2, status,0, pclath, cstack
 14392 ;; Tracked objects:
 14393 ;;		On entry : 0/0
 14394 ;;		On exit  : 0/0
 14395 ;;		Unchanged: 0/0
 14396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14401 ;;Total ram usage:        0 bytes
 14402 ;; Hardware stack levels used:    1
 14403 ;; Hardware stack levels required when called:    7
 14404 ;; This function calls:
 14405 ;;		_INT_SetInterruptHandler
 14406 ;; This function is called by:
 14407 ;;		_SYSTEM_Initialize
 14408 ;; This function uses a non-reentrant model
 14409 ;;
 14410                           
 14411                           
 14412                           ;psect for function _EXT_INT_Initialize
 14413  0C7F                     _EXT_INT_Initialize:	
 14414  0C7F                     l5965:	
 14415                           ;incstack = 0
 14416                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14417                           
 14418                           
 14419                           ;mcc_generated_files/ext_int.c: 64:     (PIR0bits.INTF = 0);
 14420  0C7F  002E               	movlb	14	; select bank14
 14421  0C80  100C               	bcf	12,0	;volatile
 14422                           
 14423                           ;mcc_generated_files/ext_int.c: 65:     (INTCONbits.INTEDG = 1);
 14424  0C81  140B               	bsf	11,0	;volatile
 14425  0C82                     l5967:	
 14426                           
 14427                           ;mcc_generated_files/ext_int.c: 67:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
 14428  0C82  303D               	movlw	low _INT_DefaultInterruptHandler
 14429  0C83  0020               	movlb	0	; select bank0
 14430  0C84  00C4               	movwf	INT_SetInterruptHandler@InterruptHandler
 14431  0C85  300B               	movlw	high _INT_DefaultInterruptHandler
 14432  0C86  00C5               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 14433  0C87  318B  2399  318C   	fcall	_INT_SetInterruptHandler
 14434  0C8A                     l5969:	
 14435                           
 14436                           ;mcc_generated_files/ext_int.c: 68:     (PIE0bits.INTE = 1);
 14437  0C8A  002E               	movlb	14	; select bank14
 14438  0C8B  1416               	bsf	22,0	;volatile
 14439  0C8C                     l1090:	
 14440  0C8C  0008               	return
 14441  0C8D                     __end_of_EXT_INT_Initialize:	
 14442                           
 14443                           	psect	text30
 14444  0B99                     __ptext30:	
 14445 ;; *************** function _INT_SetInterruptHandler *****************
 14446 ;; Defined at:
 14447 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 14448 ;; Parameters:    Size  Location     Type
 14449 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 14450 ;;		 -> sw1_EXT(1), INT_DefaultInterruptHandler(1), 
 14451 ;; Auto vars:     Size  Location     Type
 14452 ;;		None
 14453 ;; Return value:  Size  Location     Type
 14454 ;;                  1    wreg      void 
 14455 ;; Registers used:
 14456 ;;		wreg
 14457 ;; Tracked objects:
 14458 ;;		On entry : 0/0
 14459 ;;		On exit  : 0/0
 14460 ;;		Unchanged: 0/0
 14461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14462 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14465 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14466 ;;Total ram usage:        2 bytes
 14467 ;; Hardware stack levels used:    1
 14468 ;; Hardware stack levels required when called:    6
 14469 ;; This function calls:
 14470 ;;		Nothing
 14471 ;; This function is called by:
 14472 ;;		_EXT_INT_Initialize
 14473 ;;		_main
 14474 ;; This function uses a non-reentrant model
 14475 ;;
 14476                           
 14477                           
 14478                           ;psect for function _INT_SetInterruptHandler
 14479  0B99                     _INT_SetInterruptHandler:	
 14480  0B99                     l5713:	
 14481                           ;incstack = 0
 14482                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 14483                           
 14484                           
 14485                           ;mcc_generated_files/ext_int.c: 51:     INT_InterruptHandler = InterruptHandler;
 14486  0B99  0020               	movlb	0	; select bank0
 14487  0B9A  0845               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
 14488  0B9B  00A3               	movwf	_INT_InterruptHandler+1
 14489  0B9C  0844               	movf	INT_SetInterruptHandler@InterruptHandler,w
 14490  0B9D  00A2               	movwf	_INT_InterruptHandler
 14491  0B9E                     l1084:	
 14492  0B9E  0008               	return
 14493  0B9F                     __end_of_INT_SetInterruptHandler:	
 14494                           
 14495                           	psect	text31
 14496  0D5E                     __ptext31:	
 14497 ;; *************** function _ADCC_Initialize *****************
 14498 ;; Defined at:
 14499 ;;		line 63 in file "mcc_generated_files/adcc.c"
 14500 ;; Parameters:    Size  Location     Type
 14501 ;;		None
 14502 ;; Auto vars:     Size  Location     Type
 14503 ;;		None
 14504 ;; Return value:  Size  Location     Type
 14505 ;;                  1    wreg      void 
 14506 ;; Registers used:
 14507 ;;		wreg, status,2
 14508 ;; Tracked objects:
 14509 ;;		On entry : 0/0
 14510 ;;		On exit  : 0/0
 14511 ;;		Unchanged: 0/0
 14512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14517 ;;Total ram usage:        0 bytes
 14518 ;; Hardware stack levels used:    1
 14519 ;; Hardware stack levels required when called:    6
 14520 ;; This function calls:
 14521 ;;		Nothing
 14522 ;; This function is called by:
 14523 ;;		_SYSTEM_Initialize
 14524 ;; This function uses a non-reentrant model
 14525 ;;
 14526                           
 14527                           
 14528                           ;psect for function _ADCC_Initialize
 14529  0D5E                     _ADCC_Initialize:	
 14530  0D5E                     l5949:	
 14531                           ;incstack = 0
 14532                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 14533                           
 14534                           
 14535                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 14536  0D5E  0022               	movlb	2	; select bank2
 14537  0D5F  018E               	clrf	14	;volatile
 14538                           
 14539                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 14540  0D60  018F               	clrf	15	;volatile
 14541                           
 14542                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 14543  0D61  0190               	clrf	16	;volatile
 14544                           
 14545                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 14546  0D62  0191               	clrf	17	;volatile
 14547                           
 14548                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 14549  0D63  0192               	clrf	18	;volatile
 14550                           
 14551                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 14552  0D64  0193               	clrf	19	;volatile
 14553                           
 14554                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 14555  0D65  018D               	clrf	13	;volatile
 14556                           
 14557                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 14558  0D66  0021               	movlb	1	; select bank1
 14559  0D67  019E               	clrf	30	;volatile
 14560                           
 14561                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 14562  0D68  019B               	clrf	27	;volatile
 14563                           
 14564                           ;mcc_generated_files/adcc.c: 85:     ADCON1 = 0x00;
 14565  0D69  0194               	clrf	20	;volatile
 14566                           
 14567                           ;mcc_generated_files/adcc.c: 87:     ADCON2 = 0x00;
 14568  0D6A  0195               	clrf	21	;volatile
 14569                           
 14570                           ;mcc_generated_files/adcc.c: 89:     ADCON3 = 0x00;
 14571  0D6B  0196               	clrf	22	;volatile
 14572                           
 14573                           ;mcc_generated_files/adcc.c: 91:     ADSTAT = 0x00;
 14574  0D6C  0197               	clrf	23	;volatile
 14575                           
 14576                           ;mcc_generated_files/adcc.c: 93:     ADREF = 0x00;
 14577  0D6D  019A               	clrf	26	;volatile
 14578                           
 14579                           ;mcc_generated_files/adcc.c: 95:     ADACT = 0x00;
 14580  0D6E  0199               	clrf	25	;volatile
 14581                           
 14582                           ;mcc_generated_files/adcc.c: 97:     ADCLK = 0x00;
 14583  0D6F  0198               	clrf	24	;volatile
 14584  0D70                     l5951:	
 14585                           
 14586                           ;mcc_generated_files/adcc.c: 99:     ADCON0 = 0x84;
 14587  0D70  3084               	movlw	132
 14588  0D71  0093               	movwf	19	;volatile
 14589  0D72                     l5953:	
 14590                           
 14591                           ;mcc_generated_files/adcc.c: 101:     ADACQ = 0x00;
 14592  0D72  019D               	clrf	29	;volatile
 14593  0D73                     l983:	
 14594  0D73  0008               	return
 14595  0D74                     __end_of_ADCC_Initialize:	
 14596                           
 14597                           	psect	text32
 14598  0C16                     __ptext32:	
 14599 ;; *************** function _Read_S2 *****************
 14600 ;; Defined at:
 14601 ;;		line 409 in file "main.c"
 14602 ;; Parameters:    Size  Location     Type
 14603 ;;		None
 14604 ;; Auto vars:     Size  Location     Type
 14605 ;;  val             1    0[BANK0 ] unsigned char 
 14606 ;; Return value:  Size  Location     Type
 14607 ;;                  1    wreg      unsigned char 
 14608 ;; Registers used:
 14609 ;;		wreg, status,2
 14610 ;; Tracked objects:
 14611 ;;		On entry : 0/0
 14612 ;;		On exit  : 0/0
 14613 ;;		Unchanged: 0/0
 14614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14616 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14618 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14619 ;;Total ram usage:        1 bytes
 14620 ;; Hardware stack levels used:    1
 14621 ;; Hardware stack levels required when called:    6
 14622 ;; This function calls:
 14623 ;;		Nothing
 14624 ;; This function is called by:
 14625 ;;		_main
 14626 ;; This function uses a non-reentrant model
 14627 ;;
 14628                           
 14629                           
 14630                           ;psect for function _Read_S2
 14631  0C16                     _Read_S2:	
 14632  0C16                     l6147:	
 14633                           ;incstack = 0
 14634                           ; Regs used in _Read_S2: [wreg+status,2]
 14635                           
 14636                           
 14637                           ;main.c: 411:     unsigned char val;;main.c: 412:     (INTCONbits.GIE = 0);
 14638  0C16  138B               	bcf	11,7	;volatile
 14639  0C17                     l6149:	
 14640                           
 14641                           ;main.c: 413:     val = s1_pressed;
 14642  0C17  3000               	movlw	0
 14643  0C18  19F7               	btfsc	_s1_pressed/(0+8),_s1_pressed& (0+7)	;volatile
 14644  0C19  3001               	movlw	1
 14645  0C1A  0020               	movlb	0	; select bank0
 14646  0C1B  00C4               	movwf	Read_S2@val
 14647  0C1C                     l6151:	
 14648                           
 14649                           ;main.c: 414:     s1_pressed = 0;
 14650  0C1C  11F7               	bcf	_s1_pressed/(0+8),_s1_pressed& (0+7)	;volatile
 14651  0C1D                     l6153:	
 14652                           
 14653                           ;main.c: 415:     (INTCONbits.GIE = 1);
 14654  0C1D  178B               	bsf	11,7	;volatile
 14655  0C1E                     l6155:	
 14656                           
 14657                           ;main.c: 416:     return val;
 14658  0C1E  0844               	movf	Read_S2@val,w
 14659  0C1F                     l1514:	
 14660  0C1F  0008               	return
 14661  0C20                     __end_of_Read_S2:	
 14662                           
 14663                           	psect	text33
 14664  0C0C                     __ptext33:	
 14665 ;; *************** function _Read_S1 *****************
 14666 ;; Defined at:
 14667 ;;		line 399 in file "main.c"
 14668 ;; Parameters:    Size  Location     Type
 14669 ;;		None
 14670 ;; Auto vars:     Size  Location     Type
 14671 ;;  val             1    0[BANK0 ] unsigned char 
 14672 ;; Return value:  Size  Location     Type
 14673 ;;                  1    wreg      unsigned char 
 14674 ;; Registers used:
 14675 ;;		wreg, status,2
 14676 ;; Tracked objects:
 14677 ;;		On entry : 0/0
 14678 ;;		On exit  : 0/0
 14679 ;;		Unchanged: 0/0
 14680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14682 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14684 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14685 ;;Total ram usage:        1 bytes
 14686 ;; Hardware stack levels used:    1
 14687 ;; Hardware stack levels required when called:    6
 14688 ;; This function calls:
 14689 ;;		Nothing
 14690 ;; This function is called by:
 14691 ;;		_main
 14692 ;; This function uses a non-reentrant model
 14693 ;;
 14694                           
 14695                           
 14696                           ;psect for function _Read_S1
 14697  0C0C                     _Read_S1:	
 14698  0C0C                     l6129:	
 14699                           ;incstack = 0
 14700                           ; Regs used in _Read_S1: [wreg+status,2]
 14701                           
 14702                           
 14703                           ;main.c: 401:     unsigned char val;;main.c: 402:     (INTCONbits.GIE = 0);
 14704  0C0C  138B               	bcf	11,7	;volatile
 14705  0C0D                     l6131:	
 14706                           
 14707                           ;main.c: 403:     val = s1_pressed;
 14708  0C0D  3000               	movlw	0
 14709  0C0E  19F7               	btfsc	_s1_pressed/(0+8),_s1_pressed& (0+7)	;volatile
 14710  0C0F  3001               	movlw	1
 14711  0C10  0020               	movlb	0	; select bank0
 14712  0C11  00C4               	movwf	Read_S1@val
 14713  0C12                     l6133:	
 14714                           
 14715                           ;main.c: 404:     s1_pressed = 0;
 14716  0C12  11F7               	bcf	_s1_pressed/(0+8),_s1_pressed& (0+7)	;volatile
 14717  0C13                     l6135:	
 14718                           
 14719                           ;main.c: 405:     (INTCONbits.GIE = 1);
 14720  0C13  178B               	bsf	11,7	;volatile
 14721  0C14                     l6137:	
 14722                           
 14723                           ;main.c: 406:     return val;
 14724  0C14  0844               	movf	Read_S1@val,w
 14725  0C15                     l1511:	
 14726  0C15  0008               	return
 14727  0C16                     __end_of_Read_S1:	
 14728                           
 14729                           	psect	text34
 14730  0E04                     __ptext34:	
 14731 ;; *************** function _LED_bin *****************
 14732 ;; Defined at:
 14733 ;;		line 359 in file "main.c"
 14734 ;; Parameters:    Size  Location     Type
 14735 ;;  value           2    0[BANK0 ] unsigned int 
 14736 ;; Auto vars:     Size  Location     Type
 14737 ;;		None
 14738 ;; Return value:  Size  Location     Type
 14739 ;;                  1    wreg      void 
 14740 ;; Registers used:
 14741 ;;		wreg, status,2, status,0
 14742 ;; Tracked objects:
 14743 ;;		On entry : 0/0
 14744 ;;		On exit  : 0/0
 14745 ;;		Unchanged: 0/0
 14746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14747 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14749 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14750 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14751 ;;Total ram usage:        5 bytes
 14752 ;; Hardware stack levels used:    1
 14753 ;; Hardware stack levels required when called:    6
 14754 ;; This function calls:
 14755 ;;		Nothing
 14756 ;; This function is called by:
 14757 ;;		_main
 14758 ;; This function uses a non-reentrant model
 14759 ;;
 14760                           
 14761                           
 14762                           ;psect for function _LED_bin
 14763  0E04                     _LED_bin:	
 14764  0E04                     l5011:	
 14765                           ;incstack = 0
 14766                           ; Regs used in _LED_bin: [wreg+status,2+status,0]
 14767                           
 14768                           
 14769                           ;main.c: 359: void LED_bin(unsigned int value);main.c: 360: {;main.c: 362:     LATAbits.
      +                          LATA4 = (value & 1);
 14770  0E04  0020               	movlb	0	; select bank0
 14771  0E05  0844               	movf	LED_bin@value,w
 14772  0E06  3901               	andlw	1
 14773  0E07  00C6               	movwf	??_LED_bin
 14774  0E08  0EC6               	swapf	??_LED_bin,f
 14775  0E09  0816               	movf	22,w	;volatile
 14776  0E0A  0646               	xorwf	??_LED_bin,w
 14777  0E0B  39EF               	andlw	-17
 14778  0E0C  0646               	xorwf	??_LED_bin,w
 14779  0E0D  0096               	movwf	22	;volatile
 14780                           
 14781                           ;main.c: 363:     LATAbits.LATA5 = (value >> 1);
 14782  0E0E  0845               	movf	LED_bin@value+1,w
 14783  0E0F  00C7               	movwf	??_LED_bin+1
 14784  0E10  0844               	movf	LED_bin@value,w
 14785  0E11  00C6               	movwf	??_LED_bin
 14786  0E12  36C7               	lsrf	??_LED_bin+1,f
 14787  0E13  0CC6               	rrf	??_LED_bin,f
 14788  0E14  0846               	movf	??_LED_bin,w
 14789  0E15  00C8               	movwf	??_LED_bin+2
 14790  0E16  0EC8               	swapf	??_LED_bin+2,f
 14791  0E17  0DC8               	rlf	??_LED_bin+2,f
 14792  0E18  0816               	movf	22,w	;volatile
 14793  0E19  0648               	xorwf	??_LED_bin+2,w
 14794  0E1A  39DF               	andlw	-33
 14795  0E1B  0648               	xorwf	??_LED_bin+2,w
 14796  0E1C  0096               	movwf	22	;volatile
 14797  0E1D                     l1493:	
 14798  0E1D  0008               	return
 14799  0E1E                     __end_of_LED_bin:	
 14800                           
 14801                           	psect	text35
 14802  0C02                     __ptext35:	
 14803 ;; *************** function _I2C_Initialize *****************
 14804 ;; Defined at:
 14805 ;;		line 5 in file "I2C/i2c.c"
 14806 ;; Parameters:    Size  Location     Type
 14807 ;;		None
 14808 ;; Auto vars:     Size  Location     Type
 14809 ;;		None
 14810 ;; Return value:  Size  Location     Type
 14811 ;;                  1    wreg      void 
 14812 ;; Registers used:
 14813 ;;		wreg, status,2, status,0, pclath, cstack
 14814 ;; Tracked objects:
 14815 ;;		On entry : 0/0
 14816 ;;		On exit  : 0/0
 14817 ;;		Unchanged: 0/0
 14818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14823 ;;Total ram usage:        0 bytes
 14824 ;; Hardware stack levels used:    1
 14825 ;; Hardware stack levels required when called:    7
 14826 ;; This function calls:
 14827 ;;		_i2c1_driver_open
 14828 ;; This function is called by:
 14829 ;;		_main
 14830 ;; This function uses a non-reentrant model
 14831 ;;
 14832                           
 14833                           
 14834                           ;psect for function _I2C_Initialize
 14835  0C02                     _I2C_Initialize:	
 14836  0C02                     l6035:	
 14837                           ;incstack = 0
 14838                           ; Regs used in _I2C_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14839                           
 14840                           
 14841                           ;I2C/i2c.c: 7:     i2c1_driver_open();
 14842  0C02  318C  244B  318C   	fcall	_i2c1_driver_open
 14843  0C05                     l6037:	
 14844                           
 14845                           ;I2C/i2c.c: 8:     TRISCbits.TRISC3 = 1;
 14846  0C05  0020               	movlb	0	; select bank0
 14847  0C06  1593               	bsf	19,3	;volatile
 14848  0C07                     l6039:	
 14849                           
 14850                           ;I2C/i2c.c: 9:     TRISCbits.TRISC4 = 1;
 14851  0C07  1613               	bsf	19,4	;volatile
 14852  0C08                     l6041:	
 14853                           
 14854                           ;I2C/i2c.c: 10:     WPUC3 = 1;
 14855  0C08  003E               	movlb	30	; select bank30
 14856  0C09  15CF               	bsf	79,3	;volatile
 14857  0C0A                     l6043:	
 14858                           
 14859                           ;I2C/i2c.c: 11:     WPUC4 = 1;
 14860  0C0A  164F               	bsf	79,4	;volatile
 14861  0C0B                     l33:	
 14862  0C0B  0008               	return
 14863  0C0C                     __end_of_I2C_Initialize:	
 14864                           
 14865                           	psect	text36
 14866  0C4B                     __ptext36:	
 14867 ;; *************** function _i2c1_driver_open *****************
 14868 ;; Defined at:
 14869 ;;		line 84 in file "mcc_generated_files/i2c1_driver.c"
 14870 ;; Parameters:    Size  Location     Type
 14871 ;;		None
 14872 ;; Auto vars:     Size  Location     Type
 14873 ;;		None
 14874 ;; Return value:  Size  Location     Type
 14875 ;;		None               void
 14876 ;; Registers used:
 14877 ;;		wreg, status,2
 14878 ;; Tracked objects:
 14879 ;;		On entry : 0/0
 14880 ;;		On exit  : 0/0
 14881 ;;		Unchanged: 0/0
 14882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14887 ;;Total ram usage:        0 bytes
 14888 ;; Hardware stack levels used:    1
 14889 ;; Hardware stack levels required when called:    6
 14890 ;; This function calls:
 14891 ;;		Nothing
 14892 ;; This function is called by:
 14893 ;;		_I2C_Initialize
 14894 ;;		_i2c_open
 14895 ;; This function uses a non-reentrant model
 14896 ;;
 14897                           
 14898                           
 14899                           ;psect for function _i2c1_driver_open
 14900  0C4B                     _i2c1_driver_open:	
 14901  0C4B                     l5717:	
 14902                           ;incstack = 0
 14903                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 14904                           
 14905  0C4B  0023               	movlb	3	; select bank3
 14906  0C4C  1A90               	btfsc	16,5	;volatile
 14907  0C4D  2C4F               	goto	u3571
 14908  0C4E  2C50               	goto	u3570
 14909  0C4F                     u3571:	
 14910  0C4F  2C56               	goto	l773
 14911  0C50                     u3570:	
 14912  0C50                     l5719:	
 14913  0C50  018F               	clrf	15	;volatile
 14914  0C51                     l5721:	
 14915  0C51  3028               	movlw	40
 14916  0C52  0090               	movwf	16	;volatile
 14917  0C53                     l5723:	
 14918  0C53  0191               	clrf	17	;volatile
 14919  0C54  3003               	movlw	3
 14920  0C55  008D               	movwf	13	;volatile
 14921  0C56                     l773:	
 14922  0C56  0008               	return
 14923  0C57                     __end_of_i2c1_driver_open:	
 14924                           
 14925                           	psect	text37
 14926  0DEA                     __ptext37:	
 14927 ;; *************** function _ADC_read *****************
 14928 ;; Defined at:
 14929 ;;		line 438 in file "main.c"
 14930 ;; Parameters:    Size  Location     Type
 14931 ;;		None
 14932 ;; Auto vars:     Size  Location     Type
 14933 ;;		None
 14934 ;; Return value:  Size  Location     Type
 14935 ;;                  2    2[BANK0 ] unsigned int 
 14936 ;; Registers used:
 14937 ;;		wreg, status,2, status,0, pclath, cstack
 14938 ;; Tracked objects:
 14939 ;;		On entry : 0/0
 14940 ;;		On exit  : 0/0
 14941 ;;		Unchanged: 0/0
 14942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14943 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14946 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14947 ;;Total ram usage:        2 bytes
 14948 ;; Hardware stack levels used:    1
 14949 ;; Hardware stack levels required when called:    7
 14950 ;; This function calls:
 14951 ;;		_ADCC_GetConversionResult
 14952 ;;		_ADCC_IsConversionDone
 14953 ;;		_ADCC_StartConversion
 14954 ;; This function is called by:
 14955 ;;		_main
 14956 ;; This function uses a non-reentrant model
 14957 ;;
 14958                           
 14959                           
 14960                           ;psect for function _ADC_read
 14961  0DEA                     _ADC_read:	
 14962  0DEA                     l6175:	
 14963                           ;incstack = 0
 14964                           ; Regs used in _ADC_read: [wreg+status,2+status,0+pclath+cstack]
 14965                           
 14966                           
 14967                           ;main.c: 440:    ADCC_StartConversion(channel_ANA0);
 14968  0DEA  3000               	movlw	0
 14969  0DEB  318B  23D7  318D   	fcall	_ADCC_StartConversion
 14970                           
 14971                           ;main.c: 441:     while(!ADCC_IsConversionDone()){
 14972  0DEE  2DF3               	goto	l6179
 14973  0DEF                     l6177:	
 14974                           
 14975                           ;main.c: 442:         _delay((unsigned long)((1)*(1000000/4000.0)));
 14976  0DEF  3053               	movlw	83
 14977  0DF0                     u4527:	
 14978  0DF0  0B89               	decfsz	9,f
 14979  0DF1  2DF0               	goto	u4527
 14980  0DF2  0000               	nop
 14981  0DF3                     l6179:	
 14982                           
 14983                           ;main.c: 441:     while(!ADCC_IsConversionDone()){
 14984  0DF3  318B  23B8  318D   	fcall	_ADCC_IsConversionDone
 14985  0DF6  3A00               	xorlw	0
 14986  0DF7  1903               	skipnz
 14987  0DF8  2DFA               	goto	u3701
 14988  0DF9  2DFB               	goto	u3700
 14989  0DFA                     u3701:	
 14990  0DFA  2DEF               	goto	l6177
 14991  0DFB                     u3700:	
 14992  0DFB                     l6181:	
 14993                           
 14994                           ;main.c: 445:     return ADCC_GetConversionResult();
 14995  0DFB  318B  23F0  318D   	fcall	_ADCC_GetConversionResult
 14996  0DFE  0020               	movlb	0	; select bank0
 14997  0DFF  0845               	movf	?_ADCC_GetConversionResult+1,w
 14998  0E00  00C7               	movwf	?_ADC_read+1
 14999  0E01  0844               	movf	?_ADCC_GetConversionResult,w
 15000  0E02  00C6               	movwf	?_ADC_read
 15001  0E03                     l1525:	
 15002  0E03  0008               	return
 15003  0E04                     __end_of_ADC_read:	
 15004                           
 15005                           	psect	text38
 15006  0BD7                     __ptext38:	
 15007 ;; *************** function _ADCC_StartConversion *****************
 15008 ;; Defined at:
 15009 ;;		line 106 in file "mcc_generated_files/adcc.c"
 15010 ;; Parameters:    Size  Location     Type
 15011 ;;  channel         1    wreg     enum E12246
 15012 ;; Auto vars:     Size  Location     Type
 15013 ;;  channel         1    0[BANK0 ] enum E12246
 15014 ;; Return value:  Size  Location     Type
 15015 ;;                  1    wreg      void 
 15016 ;; Registers used:
 15017 ;;		wreg
 15018 ;; Tracked objects:
 15019 ;;		On entry : 0/0
 15020 ;;		On exit  : 0/0
 15021 ;;		Unchanged: 0/0
 15022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15024 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15026 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15027 ;;Total ram usage:        1 bytes
 15028 ;; Hardware stack levels used:    1
 15029 ;; Hardware stack levels required when called:    6
 15030 ;; This function calls:
 15031 ;;		Nothing
 15032 ;; This function is called by:
 15033 ;;		_ADC_read
 15034 ;; This function uses a non-reentrant model
 15035 ;;
 15036                           
 15037                           
 15038                           ;psect for function _ADCC_StartConversion
 15039  0BD7                     _ADCC_StartConversion:	
 15040                           
 15041                           ;incstack = 0
 15042                           ; Regs used in _ADCC_StartConversion: [wreg]
 15043                           ;ADCC_StartConversion@channel stored from wreg
 15044  0BD7  0020               	movlb	0	; select bank0
 15045  0BD8  00C4               	movwf	ADCC_StartConversion@channel
 15046  0BD9                     l6003:	
 15047                           
 15048                           ;mcc_generated_files/adcc.c: 106: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 107: {;mcc_generated_files/adcc.c: 109:     ADPCH = channel;
 15049  0BD9  0844               	movf	ADCC_StartConversion@channel,w
 15050  0BDA  0021               	movlb	1	; select bank1
 15051  0BDB  009E               	movwf	30	;volatile
 15052  0BDC                     l6005:	
 15053                           
 15054                           ;mcc_generated_files/adcc.c: 112:     ADCON0bits.ADON = 1;
 15055  0BDC  1793               	bsf	19,7	;volatile
 15056  0BDD                     l6007:	
 15057                           
 15058                           ;mcc_generated_files/adcc.c: 115:     ADCON0bits.ADGO = 1;
 15059  0BDD  1413               	bsf	19,0	;volatile
 15060  0BDE                     l986:	
 15061  0BDE  0008               	return
 15062  0BDF                     __end_of_ADCC_StartConversion:	
 15063                           
 15064                           	psect	text39
 15065  0BB8                     __ptext39:	
 15066 ;; *************** function _ADCC_IsConversionDone *****************
 15067 ;; Defined at:
 15068 ;;		line 118 in file "mcc_generated_files/adcc.c"
 15069 ;; Parameters:    Size  Location     Type
 15070 ;;		None
 15071 ;; Auto vars:     Size  Location     Type
 15072 ;;		None
 15073 ;; Return value:  Size  Location     Type
 15074 ;;                  1    wreg      _Bool 
 15075 ;; Registers used:
 15076 ;;		wreg, status,0
 15077 ;; Tracked objects:
 15078 ;;		On entry : 0/0
 15079 ;;		On exit  : 0/0
 15080 ;;		Unchanged: 0/0
 15081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15086 ;;Total ram usage:        0 bytes
 15087 ;; Hardware stack levels used:    1
 15088 ;; Hardware stack levels required when called:    6
 15089 ;; This function calls:
 15090 ;;		Nothing
 15091 ;; This function is called by:
 15092 ;;		_ADC_read
 15093 ;; This function uses a non-reentrant model
 15094 ;;
 15095                           
 15096                           
 15097                           ;psect for function _ADCC_IsConversionDone
 15098  0BB8                     _ADCC_IsConversionDone:	
 15099  0BB8                     l6009:	
 15100                           ;incstack = 0
 15101                           ; Regs used in _ADCC_IsConversionDone: [wreg+status,0]
 15102                           
 15103                           
 15104                           ;mcc_generated_files/adcc.c: 121:     return ((unsigned char)(!ADCON0bits.ADGO));
 15105  0BB8  1003               	clrc
 15106  0BB9  0021               	movlb	1	; select bank1
 15107  0BBA  1C13               	btfss	19,0	;volatile
 15108  0BBB  1403               	setc
 15109  0BBC  3000               	movlw	0
 15110  0BBD  3D09               	addwfc	9,w
 15111  0BBE                     l989:	
 15112  0BBE  0008               	return
 15113  0BBF                     __end_of_ADCC_IsConversionDone:	
 15114                           
 15115                           	psect	text40
 15116  0BF0                     __ptext40:	
 15117 ;; *************** function _ADCC_GetConversionResult *****************
 15118 ;; Defined at:
 15119 ;;		line 124 in file "mcc_generated_files/adcc.c"
 15120 ;; Parameters:    Size  Location     Type
 15121 ;;		None
 15122 ;; Auto vars:     Size  Location     Type
 15123 ;;		None
 15124 ;; Return value:  Size  Location     Type
 15125 ;;                  2    0[BANK0 ] unsigned short 
 15126 ;; Registers used:
 15127 ;;		wreg
 15128 ;; Tracked objects:
 15129 ;;		On entry : 0/0
 15130 ;;		On exit  : 0/0
 15131 ;;		Unchanged: 0/0
 15132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15133 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15136 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15137 ;;Total ram usage:        2 bytes
 15138 ;; Hardware stack levels used:    1
 15139 ;; Hardware stack levels required when called:    6
 15140 ;; This function calls:
 15141 ;;		Nothing
 15142 ;; This function is called by:
 15143 ;;		_ADC_read
 15144 ;; This function uses a non-reentrant model
 15145 ;;
 15146                           
 15147                           
 15148                           ;psect for function _ADCC_GetConversionResult
 15149  0BF0                     _ADCC_GetConversionResult:	
 15150  0BF0                     l6013:	
 15151                           ;incstack = 0
 15152                           ; Regs used in _ADCC_GetConversionResult: [wreg]
 15153                           
 15154                           
 15155                           ;mcc_generated_files/adcc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 15156  0BF0  0021               	movlb	1	; select bank1
 15157  0BF1  080D               	movf	13,w	;volatile
 15158  0BF2  0020               	movlb	0	; select bank0
 15159  0BF3  00C5               	movwf	?_ADCC_GetConversionResult+1
 15160  0BF4  0021               	movlb	1	; select bank1
 15161  0BF5  080C               	movf	12,w	;volatile
 15162  0BF6  0020               	movlb	0	; select bank0
 15163  0BF7  00C4               	movwf	?_ADCC_GetConversionResult
 15164  0BF8                     l992:	
 15165  0BF8  0008               	return
 15166  0BF9                     __end_of_ADCC_GetConversionResult:	
 15167                           
 15168                           	psect	intentry
 15169  0004                     __pintentry:	
 15170 ;; *************** function _INTERRUPT_InterruptManager *****************
 15171 ;; Defined at:
 15172 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 15173 ;; Parameters:    Size  Location     Type
 15174 ;;		None
 15175 ;; Auto vars:     Size  Location     Type
 15176 ;;		None
 15177 ;; Return value:  Size  Location     Type
 15178 ;;                  1    wreg      void 
 15179 ;; Registers used:
 15180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15181 ;; Tracked objects:
 15182 ;;		On entry : 0/0
 15183 ;;		On exit  : 0/0
 15184 ;;		Unchanged: 0/0
 15185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15190 ;;Total ram usage:        0 bytes
 15191 ;; Hardware stack levels used:    1
 15192 ;; Hardware stack levels required when called:    5
 15193 ;; This function calls:
 15194 ;;		Absolute function
 15195 ;;		_INT_ISR
 15196 ;;		_TMR0_ISR
 15197 ;;		_TMR1_ISR
 15198 ;;		_i2c_ISR
 15199 ;;		_i2c_busCollisionISR
 15200 ;; This function is called by:
 15201 ;;		Interrupt level 1
 15202 ;; This function uses a non-reentrant model
 15203 ;;
 15204                           
 15205  0004                     _INTERRUPT_InterruptManager:	
 15206                           
 15207                           ;incstack = 0
 15208  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 15209                           
 15210                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15211  0005  3180               	pagesel	$
 15212  0006                     i1l6333:	
 15213                           
 15214                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.INTE == 1 && PIR0bits.INTF
      +                           == 1)
 15215  0006  002E               	movlb	14	; select bank14
 15216  0007  1C16               	btfss	22,0	;volatile
 15217  0008  280A               	goto	u393_21
 15218  0009  280B               	goto	u393_20
 15219  000A                     u393_21:	
 15220  000A  2813               	goto	i1l559
 15221  000B                     u393_20:	
 15222  000B                     i1l6335:	
 15223  000B  1C0C               	btfss	12,0	;volatile
 15224  000C  280E               	goto	u394_21
 15225  000D  280F               	goto	u394_20
 15226  000E                     u394_21:	
 15227  000E  2813               	goto	i1l559
 15228  000F                     u394_20:	
 15229  000F                     i1l6337:	
 15230                           
 15231                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         INT_ISR();
 15232  000F  318B  2393  3180   	fcall	_INT_ISR
 15233                           
 15234                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 15235  0012  284D               	goto	i1l571
 15236  0013                     i1l559:	
 15237                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.TMR0IE == 1 && PIR0bi
      +                          ts.TMR0IF == 1)
 15238                           
 15239  0013  1E96               	btfss	22,5	;volatile
 15240  0014  2816               	goto	u395_21
 15241  0015  2817               	goto	u395_20
 15242  0016                     u395_21:	
 15243  0016  281F               	goto	i1l561
 15244  0017                     u395_20:	
 15245  0017                     i1l6339:	
 15246  0017  1E8C               	btfss	12,5	;volatile
 15247  0018  281A               	goto	u396_21
 15248  0019  281B               	goto	u396_20
 15249  001A                     u396_21:	
 15250  001A  281F               	goto	i1l561
 15251  001B                     u396_20:	
 15252  001B                     i1l6341:	
 15253                           
 15254                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
 15255  001B  318C  248D  3180   	fcall	_TMR0_ISR
 15256                           
 15257                           ;mcc_generated_files/interrupt_manager.c: 62:     }
 15258  001E  284D               	goto	i1l571
 15259  001F                     i1l561:	
 15260                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
 15261                           
 15262  001F  1F0B               	btfss	11,6	;volatile
 15263  0020  2822               	goto	u397_21
 15264  0021  2823               	goto	u397_20
 15265  0022                     u397_21:	
 15266  0022  284D               	goto	i1l565
 15267  0023                     u397_20:	
 15268  0023                     i1l6343:	
 15269                           
 15270                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 15271  0023  1C99               	btfss	25,1	;volatile
 15272  0024  2826               	goto	u398_21
 15273  0025  2827               	goto	u398_20
 15274  0026                     u398_21:	
 15275  0026  2832               	goto	i1l564
 15276  0027                     u398_20:	
 15277  0027                     i1l6345:	
 15278  0027  1C8F               	btfss	15,1	;volatile
 15279  0028  282A               	goto	u399_21
 15280  0029  282B               	goto	u399_20
 15281  002A                     u399_21:	
 15282  002A  2832               	goto	i1l564
 15283  002B                     u399_20:	
 15284  002B                     i1l6347:	
 15285                           
 15286                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             i2c1_driver_busCollisionISR();
 15287  002B  0020               	movlb	0	; select bank0
 15288  002C  082B               	movf	_i2c1_driver_busCollisionISR+1,w
 15289  002D  008A               	movwf	10
 15290  002E  082A               	movf	_i2c1_driver_busCollisionISR,w
 15291  002F  000A               	callw
 15292  0030  3180               	pagesel	$
 15293                           
 15294                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 15295  0031  284D               	goto	i1l571
 15296  0032                     i1l564:	
 15297                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 15298                           
 15299  0032  1C19               	btfss	25,0	;volatile
 15300  0033  2835               	goto	u400_21
 15301  0034  2836               	goto	u400_20
 15302  0035                     u400_21:	
 15303  0035  2841               	goto	i1l566
 15304  0036                     u400_20:	
 15305  0036                     i1l6349:	
 15306  0036  1C0F               	btfss	15,0	;volatile
 15307  0037  2839               	goto	u401_21
 15308  0038  283A               	goto	u401_20
 15309  0039                     u401_21:	
 15310  0039  2841               	goto	i1l566
 15311  003A                     u401_20:	
 15312  003A                     i1l6351:	
 15313                           
 15314                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             i2c1_driver_i2cISR();
 15315  003A  0020               	movlb	0	; select bank0
 15316  003B  0829               	movf	_i2c1_driver_i2cISR+1,w
 15317  003C  008A               	movwf	10
 15318  003D  0828               	movf	_i2c1_driver_i2cISR,w
 15319  003E  000A               	callw
 15320  003F  3180               	pagesel	$
 15321                           
 15322                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 15323  0040  284D               	goto	i1l571
 15324  0041                     i1l566:	
 15325                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE4bits.TMR1IE == 1 && PI
      +                          R4bits.TMR1IF == 1)
 15326                           
 15327  0041  1C1A               	btfss	26,0	;volatile
 15328  0042  2844               	goto	u402_21
 15329  0043  2845               	goto	u402_20
 15330  0044                     u402_21:	
 15331  0044  284D               	goto	i1l565
 15332  0045                     u402_20:	
 15333  0045                     i1l6353:	
 15334  0045  1C10               	btfss	16,0	;volatile
 15335  0046  2848               	goto	u403_21
 15336  0047  2849               	goto	u403_20
 15337  0048                     u403_21:	
 15338  0048  284D               	goto	i1l565
 15339  0049                     u403_20:	
 15340  0049                     i1l6355:	
 15341                           
 15342                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             TMR1_ISR();
 15343  0049  318D  25A1  3180   	fcall	_TMR1_ISR
 15344                           
 15345                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 15346  004C  284D               	goto	i1l571
 15347  004D                     i1l565:	
 15348  004D                     i1l571:	
 15349                           ;mcc_generated_files/interrupt_manager.c: 81:     }
 15350                           
 15351  004D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 15352  004E  0009               	retfie
 15353  004F                     __end_of_INTERRUPT_InterruptManager:	
 15354                           
 15355                           	psect	text42
 15356  0B62                     __ptext42:	
 15357 ;; *************** function _i2c_busCollisionISR *****************
 15358 ;; Defined at:
 15359 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 15360 ;; Parameters:    Size  Location     Type
 15361 ;;		None
 15362 ;; Auto vars:     Size  Location     Type
 15363 ;;		None
 15364 ;; Return value:  Size  Location     Type
 15365 ;;                  1    wreg      void 
 15366 ;; Registers used:
 15367 ;;		status,2, status,0, pclath, cstack
 15368 ;; Tracked objects:
 15369 ;;		On entry : 0/0
 15370 ;;		On exit  : 0/0
 15371 ;;		Unchanged: 0/0
 15372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15377 ;;Total ram usage:        0 bytes
 15378 ;; Hardware stack levels used:    1
 15379 ;; Hardware stack levels required when called:    1
 15380 ;; This function calls:
 15381 ;;		_i2c1_driver_clearBusCollision
 15382 ;; This function is called by:
 15383 ;;		_i2c_open
 15384 ;;		_INTERRUPT_InterruptManager
 15385 ;; This function uses a non-reentrant model
 15386 ;;
 15387                           
 15388                           
 15389                           ;psect for function _i2c_busCollisionISR
 15390  0B62                     _i2c_busCollisionISR:	
 15391  0B62                     i1l4889:	
 15392                           ;incstack = 0
 15393                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 15394                           
 15395                           
 15396                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
 15397  0B62  318B  2357  318B   	fcall	_i2c1_driver_clearBusCollision
 15398  0B65                     i1l346:	
 15399  0B65  0008               	return
 15400  0B66                     __end_of_i2c_busCollisionISR:	
 15401                           
 15402                           	psect	text43
 15403  0B57                     __ptext43:	
 15404 ;; *************** function _i2c1_driver_clearBusCollision *****************
 15405 ;; Defined at:
 15406 ;;		line 254 in file "mcc_generated_files/i2c1_driver.c"
 15407 ;; Parameters:    Size  Location     Type
 15408 ;;		None
 15409 ;; Auto vars:     Size  Location     Type
 15410 ;;		None
 15411 ;; Return value:  Size  Location     Type
 15412 ;;                  1    wreg      void 
 15413 ;; Registers used:
 15414 ;;		None
 15415 ;; Tracked objects:
 15416 ;;		On entry : 0/0
 15417 ;;		On exit  : 0/0
 15418 ;;		Unchanged: 0/0
 15419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15424 ;;Total ram usage:        0 bytes
 15425 ;; Hardware stack levels used:    1
 15426 ;; This function calls:
 15427 ;;		Nothing
 15428 ;; This function is called by:
 15429 ;;		_i2c_busCollisionISR
 15430 ;; This function uses a non-reentrant model
 15431 ;;
 15432                           
 15433                           
 15434                           ;psect for function _i2c1_driver_clearBusCollision
 15435  0B57                     _i2c1_driver_clearBusCollision:	
 15436  0B57                     i1l4471:	
 15437                           ;incstack = 0
 15438                           ; Regs used in _i2c1_driver_clearBusCollision: []
 15439                           
 15440                           
 15441                           ;mcc_generated_files/i2c1_driver.c: 256:     PIR3bits.BCL1IF = 0;
 15442  0B57  002E               	movlb	14	; select bank14
 15443  0B58  108F               	bcf	15,1	;volatile
 15444  0B59                     i1l851:	
 15445  0B59  0008               	return
 15446  0B5A                     __end_of_i2c1_driver_clearBusCollision:	
 15447                           
 15448                           	psect	text44
 15449  0F02                     __ptext44:	
 15450 ;; *************** function _i2c_ISR *****************
 15451 ;; Defined at:
 15452 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 15453 ;; Parameters:    Size  Location     Type
 15454 ;;		None
 15455 ;; Auto vars:     Size  Location     Type
 15456 ;;		None
 15457 ;; Return value:  Size  Location     Type
 15458 ;;                  1    wreg      void 
 15459 ;; Registers used:
 15460 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15461 ;; Tracked objects:
 15462 ;;		On entry : 0/0
 15463 ;;		On exit  : 0/0
 15464 ;;		Unchanged: 0/0
 15465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15468 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15469 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15470 ;;Total ram usage:        3 bytes
 15471 ;; Hardware stack levels used:    1
 15472 ;; Hardware stack levels required when called:    4
 15473 ;; This function calls:
 15474 ;;		_do_I2C_DO_ACK
 15475 ;;		_do_I2C_DO_ADDRESS_NACK
 15476 ;;		_do_I2C_DO_NACK_RESTART
 15477 ;;		_do_I2C_DO_NACK_STOP
 15478 ;;		_do_I2C_IDLE
 15479 ;;		_do_I2C_RCEN
 15480 ;;		_do_I2C_RESET
 15481 ;;		_do_I2C_RX
 15482 ;;		_do_I2C_SEND_ADR_READ
 15483 ;;		_do_I2C_SEND_ADR_WRITE
 15484 ;;		_do_I2C_SEND_RESTART
 15485 ;;		_do_I2C_SEND_RESTART_READ
 15486 ;;		_do_I2C_SEND_RESTART_WRITE
 15487 ;;		_do_I2C_SEND_STOP
 15488 ;;		_do_I2C_TX
 15489 ;;		_do_I2C_TX_EMPTY
 15490 ;;		_i2c1_driver_isNACK
 15491 ;;		_mssp1_clearIRQ
 15492 ;; This function is called by:
 15493 ;;		_i2c_open
 15494 ;;		_i2c_poller
 15495 ;;		_INTERRUPT_InterruptManager
 15496 ;; This function uses a non-reentrant model
 15497 ;;
 15498                           
 15499                           
 15500                           ;psect for function _i2c_ISR
 15501  0F02                     _i2c_ISR:	
 15502  0F02                     i1l6089:	
 15503                           ;incstack = 0
 15504                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15505                           
 15506                           
 15507                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
 15508  0F02  318B  2354  318F   	fcall	_mssp1_clearIRQ
 15509  0F05                     i1l6091:	
 15510                           
 15511                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
 15512  0F05  0021               	movlb	1	; select bank1
 15513  0F06  1DA0               	btfss	_i2c_status^(0+128),3
 15514  0F07  2F09               	goto	u367_21
 15515  0F08  2F0A               	goto	u367_20
 15516  0F09                     u367_21:	
 15517  0F09  2F16               	goto	i1l6097
 15518  0F0A                     u367_20:	
 15519  0F0A                     i1l6093:	
 15520  0F0A  318B  23BF  318F   	fcall	_i2c1_driver_isNACK
 15521  0F0D  1C03               	btfss	3,0
 15522  0F0E  2F10               	goto	u368_21
 15523  0F0F  2F11               	goto	u368_20
 15524  0F10                     u368_21:	
 15525  0F10  2F16               	goto	i1l6097
 15526  0F11                     u368_20:	
 15527  0F11                     i1l6095:	
 15528                           
 15529                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
 15530  0F11  300F               	movlw	15
 15531  0F12  00F4               	movwf	??_i2c_ISR
 15532  0F13  0874               	movf	??_i2c_ISR,w
 15533  0F14  0021               	movlb	1	; select bank1
 15534  0F15  00A9               	movwf	(_i2c_status^(0+128)+9)
 15535  0F16                     i1l6097:	
 15536                           
 15537                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
 15538  0F16  0021               	movlb	1	; select bank1
 15539  0F17  0829               	movf	(_i2c_status^(0+128)+9),w
 15540  0F18  00F4               	movwf	??_i2c_ISR
 15541  0F19  01F5               	clrf	??_i2c_ISR+1
 15542  0F1A  35F4               	lslf	??_i2c_ISR,f
 15543  0F1B  0DF5               	rlf	??_i2c_ISR+1,f
 15544  0F1C  3000               	movlw	low (_fsmStateTable| (0+32768))
 15545  0F1D  0774               	addwf	??_i2c_ISR,w
 15546  0F1E  0084               	movwf	4
 15547  0F1F  3090               	movlw	high (_fsmStateTable| (0+32768))
 15548  0F20  3D75               	addwfc	??_i2c_ISR+1,w
 15549  0F21  0085               	movwf	5
 15550  0F22  3F01               	moviw [1]fsr0
 15551  0F23  008A               	movwf	10
 15552  0F24  3F00               	moviw [0]fsr0
 15553  0F25  000A               	callw
 15554  0F26  318F               	pagesel	$
 15555  0F27  00F6               	movwf	??_i2c_ISR+2
 15556  0F28  0876               	movf	??_i2c_ISR+2,w
 15557  0F29  0021               	movlb	1	; select bank1
 15558  0F2A  00A9               	movwf	(_i2c_status^(0+128)+9)
 15559  0F2B                     i1l343:	
 15560  0F2B  0008               	return
 15561  0F2C                     __end_of_i2c_ISR:	
 15562                           
 15563                           	psect	text45
 15564  0B54                     __ptext45:	
 15565 ;; *************** function _mssp1_clearIRQ *****************
 15566 ;; Defined at:
 15567 ;;		line 54 in file "mcc_generated_files/i2c1_driver.c"
 15568 ;; Parameters:    Size  Location     Type
 15569 ;;		None
 15570 ;; Auto vars:     Size  Location     Type
 15571 ;;		None
 15572 ;; Return value:  Size  Location     Type
 15573 ;;                  1    wreg      void 
 15574 ;; Registers used:
 15575 ;;		None
 15576 ;; Tracked objects:
 15577 ;;		On entry : 0/0
 15578 ;;		On exit  : 0/0
 15579 ;;		Unchanged: 0/0
 15580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15585 ;;Total ram usage:        0 bytes
 15586 ;; Hardware stack levels used:    1
 15587 ;; This function calls:
 15588 ;;		Nothing
 15589 ;; This function is called by:
 15590 ;;		_i2c_ISR
 15591 ;;		_i2c_open
 15592 ;;		_i2c_close
 15593 ;; This function uses a non-reentrant model
 15594 ;;
 15595                           
 15596                           
 15597                           ;psect for function _mssp1_clearIRQ
 15598  0B54                     _mssp1_clearIRQ:	
 15599  0B54                     i1l4287:	
 15600                           ;incstack = 0
 15601                           ; Regs used in _mssp1_clearIRQ: []
 15602                           
 15603                           
 15604                           ;mcc_generated_files/i2c1_driver.c: 56:         SSP1CON1 = 0x28;
 15605  0B54  002E               	movlb	14	; select bank14
 15606  0B55  100F               	bcf	15,0	;volatile
 15607  0B56                     i1l755:	
 15608  0B56  0008               	return
 15609  0B57                     __end_of_mssp1_clearIRQ:	
 15610                           
 15611                           	psect	text46
 15612  0706                     __ptext46:	
 15613 ;; *************** function _do_I2C_RX *****************
 15614 ;; Defined at:
 15615 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 15616 ;; Parameters:    Size  Location     Type
 15617 ;;		None
 15618 ;; Auto vars:     Size  Location     Type
 15619 ;;		None
 15620 ;; Return value:  Size  Location     Type
 15621 ;;                  1    wreg      enum E12722
 15622 ;; Registers used:
 15623 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15624 ;; Tracked objects:
 15625 ;;		On entry : 0/0
 15626 ;;		On exit  : 0/0
 15627 ;;		Unchanged: 0/0
 15628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15631 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15632 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15633 ;;Total ram usage:        3 bytes
 15634 ;; Hardware stack levels used:    1
 15635 ;; Hardware stack levels required when called:    3
 15636 ;; This function calls:
 15637 ;;		Absolute function
 15638 ;;		_do_I2C_DO_NACK_RESTART
 15639 ;;		_do_I2C_DO_NACK_STOP
 15640 ;;		_i2c1_driver_getRXData
 15641 ;;		_i2c1_driver_sendACK
 15642 ;;		_i2c_restartWrite
 15643 ;;		_rd1RegCompleteHandler
 15644 ;;		_rd2RegCompleteHandler
 15645 ;;		_rdBlkRegCompleteHandler
 15646 ;;		_returnReset
 15647 ;;		_returnStop
 15648 ;;		_wr1RegCompleteHandler
 15649 ;;		_wr2RegCompleteHandler
 15650 ;; This function is called by:
 15651 ;;		_i2c_ISR
 15652 ;; This function uses a non-reentrant model
 15653 ;;
 15654                           
 15655                           
 15656                           ;psect for function _do_I2C_RX
 15657  0706                     _do_I2C_RX:	
 15658  0706                     i1l5805:	
 15659                           ;incstack = 0
 15660                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15661                           
 15662                           
 15663                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
 15664  0706  318B  234E  3187   	fcall	_i2c1_driver_getRXData
 15665  0709  00F0               	movwf	??_do_I2C_RX
 15666  070A  0021               	movlb	1	; select bank1
 15667  070B  0822               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 15668  070C  0086               	movwf	6
 15669  070D  0187               	clrf	7
 15670  070E  0870               	movf	??_do_I2C_RX,w
 15671  070F  0081               	movwf	1
 15672  0710                     i1l5807:	
 15673  0710  3001               	movlw	1
 15674  0711  00F0               	movwf	??_do_I2C_RX
 15675  0712  0870               	movf	??_do_I2C_RX,w
 15676  0713  07A2               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 15677  0714                     i1l5809:	
 15678                           
 15679                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
 15680  0714  3001               	movlw	1
 15681  0715  02A3               	subwf	(_i2c_status^(0+128)+3),f
 15682  0716  3000               	movlw	0
 15683  0717  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 15684  0718  0823               	movf	(_i2c_status^(0+128)+3),w
 15685  0719  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 15686  071A  1903               	btfsc	3,2
 15687  071B  2F1D               	goto	u363_21
 15688  071C  2F1E               	goto	u363_20
 15689  071D                     u363_21:	
 15690  071D  2F23               	goto	i1l318
 15691  071E                     u363_20:	
 15692  071E                     i1l5811:	
 15693                           
 15694                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
 15695  071E  318B  235A  3187   	fcall	_i2c1_driver_sendACK
 15696  0721                     i1l5813:	
 15697                           
 15698                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
 15699  0721  3005               	movlw	5
 15700  0722  2F4F               	goto	i1l319
 15701  0723                     i1l318:	
 15702                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
 15703                           
 15704                           
 15705                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
 15706  0723  1520               	bsf	_i2c_status^(0+128),2
 15707                           
 15708                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 15709  0724  2F2D               	goto	i1l5829
 15710  0725                     i1l5819:	
 15711                           
 15712                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
 15713  0725  318B  238E  3187   	fcall	_do_I2C_DO_NACK_RESTART
 15714  0728  2F4F               	goto	i1l319
 15715  0729                     i1l5823:	
 15716                           
 15717                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
 15718  0729  318B  2389  3187   	fcall	_do_I2C_DO_NACK_STOP
 15719  072C  2F4F               	goto	i1l319
 15720  072D                     i1l5829:	
 15721  072D  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 15722  072E  00F0               	movwf	??_do_I2C_RX
 15723  072F  0870               	movf	??_do_I2C_RX,w
 15724  0730  00F6               	movwf	rdBlkRegCompleteHandler@p
 15725  0731  300B               	movlw	11
 15726  0732  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 15727  0733  0086               	movwf	6
 15728  0734  0187               	clrf	7
 15729  0735  3F41               	moviw [1]fsr1
 15730  0736  008A               	movwf	10
 15731  0737  3F40               	moviw [0]fsr1
 15732  0738  000A               	callw
 15733  0739  3187               	pagesel	$
 15734  073A  00F1               	movwf	??_do_I2C_RX+1
 15735  073B  01F2               	clrf	??_do_I2C_RX+2
 15736                           
 15737                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15738                           ; Switch size 1, requested type "simple"
 15739                           ; Number of cases is 1, Range of values is 0 to 0
 15740                           ; switch strategies available:
 15741                           ; Name         Instructions Cycles
 15742                           ; simple_byte            4     3 (average)
 15743                           ; direct_byte            8     6 (fixed)
 15744                           ; jumptable            260     6 (fixed)
 15745                           ;	Chosen strategy is simple_byte
 15746  073C  0872               	movf	??_do_I2C_RX+2,w
 15747  073D  3A00               	xorlw	0	; case 0
 15748  073E  1903               	skipnz
 15749  073F  2F41               	goto	i1l6761
 15750  0740  2F29               	goto	i1l5823
 15751  0741                     i1l6761:	
 15752                           
 15753                           ; Switch size 1, requested type "simple"
 15754                           ; Number of cases is 4, Range of values is 1 to 4
 15755                           ; switch strategies available:
 15756                           ; Name         Instructions Cycles
 15757                           ; simple_byte           13     7 (average)
 15758                           ; direct_byte           17     9 (fixed)
 15759                           ; jumptable            263     9 (fixed)
 15760                           ;	Chosen strategy is simple_byte
 15761  0741  0871               	movf	??_do_I2C_RX+1,w
 15762  0742  3A01               	xorlw	1	; case 1
 15763  0743  1903               	skipnz
 15764  0744  2F29               	goto	i1l5823
 15765  0745  3A03               	xorlw	3	; case 2
 15766  0746  1903               	skipnz
 15767  0747  2F25               	goto	i1l5819
 15768  0748  3A01               	xorlw	1	; case 3
 15769  0749  1903               	skipnz
 15770  074A  2F25               	goto	i1l5819
 15771  074B  3A07               	xorlw	7	; case 4
 15772  074C  1903               	skipnz
 15773  074D  2F29               	goto	i1l5823
 15774  074E  2F29               	goto	i1l5823
 15775  074F                     i1l319:	
 15776  074F  0008               	return
 15777  0750                     __end_of_do_I2C_RX:	
 15778                           
 15779                           	psect	text47
 15780  0660                     __ptext47:	
 15781 ;; *************** function _do_I2C_TX *****************
 15782 ;; Defined at:
 15783 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 15784 ;; Parameters:    Size  Location     Type
 15785 ;;		None
 15786 ;; Auto vars:     Size  Location     Type
 15787 ;;		None
 15788 ;; Return value:  Size  Location     Type
 15789 ;;                  1    wreg      enum E12722
 15790 ;; Registers used:
 15791 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15792 ;; Tracked objects:
 15793 ;;		On entry : 0/0
 15794 ;;		On exit  : 0/0
 15795 ;;		Unchanged: 0/0
 15796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15799 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15800 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15801 ;;Total ram usage:        3 bytes
 15802 ;; Hardware stack levels used:    1
 15803 ;; Hardware stack levels required when called:    3
 15804 ;; This function calls:
 15805 ;;		Absolute function
 15806 ;;		_do_I2C_SEND_RESTART_READ
 15807 ;;		_do_I2C_SEND_RESTART_WRITE
 15808 ;;		_do_I2C_SEND_STOP
 15809 ;;		_i2c1_driver_TXData
 15810 ;;		_i2c1_driver_isNACK
 15811 ;;		_i2c_restartWrite
 15812 ;;		_rd1RegCompleteHandler
 15813 ;;		_rd2RegCompleteHandler
 15814 ;;		_rdBlkRegCompleteHandler
 15815 ;;		_returnReset
 15816 ;;		_returnStop
 15817 ;;		_wr1RegCompleteHandler
 15818 ;;		_wr2RegCompleteHandler
 15819 ;; This function is called by:
 15820 ;;		_i2c_ISR
 15821 ;; This function uses a non-reentrant model
 15822 ;;
 15823                           
 15824                           
 15825                           ;psect for function _do_I2C_TX
 15826  0660                     _do_I2C_TX:	
 15827  0660                     i1l5771:	
 15828                           ;incstack = 0
 15829                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15830                           
 15831                           
 15832                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
 15833  0660  318B  23BF  3186   	fcall	_i2c1_driver_isNACK
 15834  0663  1C03               	btfss	3,0
 15835  0664  2E66               	goto	u361_21
 15836  0665  2E67               	goto	u361_20
 15837  0666                     u361_21:	
 15838  0666  2E97               	goto	i1l302
 15839  0667                     u361_20:	
 15840  0667  2E74               	goto	i1l5789
 15841  0668                     i1l5775:	
 15842                           
 15843                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
 15844  0668  318B  2370  3186   	fcall	_do_I2C_SEND_RESTART_READ
 15845  066B  2EB3               	goto	i1l305
 15846  066C                     i1l5779:	
 15847                           
 15848                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
 15849  066C  318B  2375  3186   	fcall	_do_I2C_SEND_RESTART_WRITE
 15850  066F  2EB3               	goto	i1l305
 15851  0670                     i1l5783:	
 15852                           
 15853                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
 15854  0670  318B  237F  3186   	fcall	_do_I2C_SEND_STOP
 15855  0673  2EB3               	goto	i1l305
 15856  0674                     i1l5789:	
 15857  0674  0021               	movlb	1	; select bank1
 15858  0675  083A               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 15859  0676  00F1               	movwf	??_do_I2C_TX
 15860  0677  0871               	movf	??_do_I2C_TX,w
 15861  0678  00F6               	movwf	rdBlkRegCompleteHandler@p
 15862  0679  3011               	movlw	17
 15863  067A  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 15864  067B  0086               	movwf	6
 15865  067C  0187               	clrf	7
 15866  067D  3F41               	moviw [1]fsr1
 15867  067E  008A               	movwf	10
 15868  067F  3F40               	moviw [0]fsr1
 15869  0680  000A               	callw
 15870  0681  3186               	pagesel	$
 15871  0682  00F2               	movwf	??_do_I2C_TX+1
 15872  0683  01F3               	clrf	??_do_I2C_TX+2
 15873                           
 15874                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15875                           ; Switch size 1, requested type "simple"
 15876                           ; Number of cases is 1, Range of values is 0 to 0
 15877                           ; switch strategies available:
 15878                           ; Name         Instructions Cycles
 15879                           ; simple_byte            4     3 (average)
 15880                           ; direct_byte            8     6 (fixed)
 15881                           ; jumptable            260     6 (fixed)
 15882                           ;	Chosen strategy is simple_byte
 15883  0684  0873               	movf	??_do_I2C_TX+2,w
 15884  0685  3A00               	xorlw	0	; case 0
 15885  0686  1903               	skipnz
 15886  0687  2E89               	goto	i1l6763
 15887  0688  2E70               	goto	i1l5783
 15888  0689                     i1l6763:	
 15889                           
 15890                           ; Switch size 1, requested type "simple"
 15891                           ; Number of cases is 4, Range of values is 1 to 4
 15892                           ; switch strategies available:
 15893                           ; Name         Instructions Cycles
 15894                           ; simple_byte           13     7 (average)
 15895                           ; direct_byte           17     9 (fixed)
 15896                           ; jumptable            263     9 (fixed)
 15897                           ;	Chosen strategy is simple_byte
 15898  0689  0872               	movf	??_do_I2C_TX+1,w
 15899  068A  3A01               	xorlw	1	; case 1
 15900  068B  1903               	skipnz
 15901  068C  2E70               	goto	i1l5783
 15902  068D  3A03               	xorlw	3	; case 2
 15903  068E  1903               	skipnz
 15904  068F  2E68               	goto	i1l5775
 15905  0690  3A01               	xorlw	1	; case 3
 15906  0691  1903               	skipnz
 15907  0692  2E6C               	goto	i1l5779
 15908  0693  3A07               	xorlw	7	; case 4
 15909  0694  1903               	skipnz
 15910  0695  2E70               	goto	i1l5783
 15911  0696  2E70               	goto	i1l5783
 15912  0697                     i1l302:	
 15913                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
 15914                           
 15915                           
 15916                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
 15917  0697  0021               	movlb	1	; select bank1
 15918  0698  11A0               	bcf	_i2c_status^(0+128),3
 15919  0699                     i1l5791:	
 15920                           
 15921                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
 15922  0699  3002               	movlw	2
 15923  069A  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 15924  069B  0086               	movwf	6
 15925  069C  0187               	clrf	7
 15926  069D  3F40               	moviw [0]fsr1
 15927  069E  0084               	movwf	4
 15928  069F  0185               	clrf	5
 15929  06A0  0A81               	incf	1,f
 15930  06A1  0800               	movf	0,w
 15931  06A2  318B  2366  3186   	fcall	_i2c1_driver_TXData
 15932  06A5                     i1l5793:	
 15933                           
 15934                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
 15935  06A5  3001               	movlw	1
 15936  06A6  0021               	movlb	1	; select bank1
 15937  06A7  02A3               	subwf	(_i2c_status^(0+128)+3),f
 15938  06A8  3000               	movlw	0
 15939  06A9  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 15940  06AA  0823               	movf	(_i2c_status^(0+128)+3),w
 15941  06AB  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 15942  06AC  1D03               	btfss	3,2
 15943  06AD  2EAF               	goto	u362_21
 15944  06AE  2EB0               	goto	u362_20
 15945  06AF                     u362_21:	
 15946  06AF  2EB2               	goto	i1l5797
 15947  06B0                     u362_20:	
 15948  06B0                     i1l5795:	
 15949  06B0  3006               	movlw	6
 15950  06B1  2EB3               	goto	i1l305
 15951  06B2                     i1l5797:	
 15952  06B2  3003               	movlw	3
 15953  06B3                     i1l305:	
 15954  06B3  0008               	return
 15955  06B4                     __end_of_do_I2C_TX:	
 15956                           
 15957                           	psect	text48
 15958  0F2C                     __ptext48:	
 15959 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 15960 ;; Defined at:
 15961 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 15962 ;; Parameters:    Size  Location     Type
 15963 ;;		None
 15964 ;; Auto vars:     Size  Location     Type
 15965 ;;		None
 15966 ;; Return value:  Size  Location     Type
 15967 ;;                  1    wreg      enum E12722
 15968 ;; Registers used:
 15969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15970 ;; Tracked objects:
 15971 ;;		On entry : 0/0
 15972 ;;		On exit  : 0/0
 15973 ;;		Unchanged: 0/0
 15974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15977 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15978 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15979 ;;Total ram usage:        3 bytes
 15980 ;; Hardware stack levels used:    1
 15981 ;; Hardware stack levels required when called:    3
 15982 ;; This function calls:
 15983 ;;		Absolute function
 15984 ;;		_do_I2C_SEND_RESTART
 15985 ;;		_do_I2C_SEND_STOP
 15986 ;;		_i2c_restartWrite
 15987 ;;		_rd1RegCompleteHandler
 15988 ;;		_rd2RegCompleteHandler
 15989 ;;		_rdBlkRegCompleteHandler
 15990 ;;		_returnReset
 15991 ;;		_returnStop
 15992 ;;		_wr1RegCompleteHandler
 15993 ;;		_wr2RegCompleteHandler
 15994 ;; This function is called by:
 15995 ;;		_i2c_ISR
 15996 ;; This function uses a non-reentrant model
 15997 ;;
 15998                           
 15999                           
 16000                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 16001  0F2C                     _do_I2C_DO_ADDRESS_NACK:	
 16002  0F2C                     i1l5749:	
 16003                           ;incstack = 0
 16004                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16005                           
 16006                           
 16007                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
 16008  0F2C  0021               	movlb	1	; select bank1
 16009  0F2D  11A0               	bcf	_i2c_status^(0+128),3
 16010  0F2E                     i1l5751:	
 16011                           
 16012                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
 16013  0F2E  3002               	movlw	2
 16014  0F2F  00F0               	movwf	??_do_I2C_DO_ADDRESS_NACK
 16015  0F30  0870               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 16016  0F31  00AA               	movwf	(_i2c_status^(0+128)+10)
 16017                           
 16018                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
 16019  0F32  2F3B               	goto	i1l5763
 16020  0F33                     i1l5753:	
 16021                           
 16022                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
 16023  0F33  318B  237A  318F   	fcall	_do_I2C_SEND_RESTART
 16024  0F36  2F57               	goto	i1l297
 16025  0F37                     i1l5757:	
 16026                           
 16027                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
 16028  0F37  318B  237F  318F   	fcall	_do_I2C_SEND_STOP
 16029  0F3A  2F57               	goto	i1l297
 16030  0F3B                     i1l5763:	
 16031  0F3B  0839               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 16032  0F3C  00F0               	movwf	??_do_I2C_DO_ADDRESS_NACK
 16033  0F3D  0870               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 16034  0F3E  00F6               	movwf	rdBlkRegCompleteHandler@p
 16035  0F3F  300F               	movlw	15
 16036  0F40  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 16037  0F41  0086               	movwf	6
 16038  0F42  0187               	clrf	7
 16039  0F43  3F41               	moviw [1]fsr1
 16040  0F44  008A               	movwf	10
 16041  0F45  3F40               	moviw [0]fsr1
 16042  0F46  000A               	callw
 16043  0F47  318F               	pagesel	$
 16044  0F48  00F1               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
 16045  0F49  01F2               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
 16046                           
 16047                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16048                           ; Switch size 1, requested type "simple"
 16049                           ; Number of cases is 1, Range of values is 0 to 0
 16050                           ; switch strategies available:
 16051                           ; Name         Instructions Cycles
 16052                           ; simple_byte            4     3 (average)
 16053                           ; direct_byte            8     6 (fixed)
 16054                           ; jumptable            260     6 (fixed)
 16055                           ;	Chosen strategy is simple_byte
 16056  0F4A  0872               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
 16057  0F4B  3A00               	xorlw	0	; case 0
 16058  0F4C  1903               	skipnz
 16059  0F4D  2F4F               	goto	i1l6765
 16060  0F4E  2F37               	goto	i1l5757
 16061  0F4F                     i1l6765:	
 16062                           
 16063                           ; Switch size 1, requested type "simple"
 16064                           ; Number of cases is 2, Range of values is 2 to 3
 16065                           ; switch strategies available:
 16066                           ; Name         Instructions Cycles
 16067                           ; simple_byte            7     4 (average)
 16068                           ; direct_byte           13     9 (fixed)
 16069                           ; jumptable            263     9 (fixed)
 16070                           ;	Chosen strategy is simple_byte
 16071  0F4F  0871               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
 16072  0F50  3A02               	xorlw	2	; case 2
 16073  0F51  1903               	skipnz
 16074  0F52  2F33               	goto	i1l5753
 16075  0F53  3A01               	xorlw	1	; case 3
 16076  0F54  1903               	skipnz
 16077  0F55  2F33               	goto	i1l5753
 16078  0F56  2F37               	goto	i1l5757
 16079  0F57                     i1l297:	
 16080  0F57  0008               	return
 16081  0F58                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 16082                           
 16083                           	psect	text49
 16084  0B8E                     __ptext49:	
 16085 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 16086 ;; Defined at:
 16087 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 16088 ;; Parameters:    Size  Location     Type
 16089 ;;		None
 16090 ;; Auto vars:     Size  Location     Type
 16091 ;;		None
 16092 ;; Return value:  Size  Location     Type
 16093 ;;                  1    wreg      enum E12722
 16094 ;; Registers used:
 16095 ;;		wreg, status,2, status,0, pclath, cstack
 16096 ;; Tracked objects:
 16097 ;;		On entry : 0/0
 16098 ;;		On exit  : 0/0
 16099 ;;		Unchanged: 0/0
 16100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16105 ;;Total ram usage:        0 bytes
 16106 ;; Hardware stack levels used:    1
 16107 ;; Hardware stack levels required when called:    1
 16108 ;; This function calls:
 16109 ;;		_i2c1_driver_sendNACK
 16110 ;; This function is called by:
 16111 ;;		_do_I2C_RX
 16112 ;;		_i2c_ISR
 16113 ;; This function uses a non-reentrant model
 16114 ;;
 16115                           
 16116                           
 16117                           ;psect for function _do_I2C_DO_NACK_RESTART
 16118  0B8E                     _do_I2C_DO_NACK_RESTART:	
 16119  0B8E                     i1l4119:	
 16120                           ;incstack = 0
 16121                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 16122                           
 16123                           
 16124                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
 16125  0B8E  318B  235E  318B   	fcall	_i2c1_driver_sendNACK
 16126  0B91                     i1l4121:	
 16127                           
 16128                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
 16129  0B91  3009               	movlw	9
 16130  0B92                     i1l291:	
 16131  0B92  0008               	return
 16132  0B93                     __end_of_do_I2C_DO_NACK_RESTART:	
 16133                           
 16134                           	psect	text50
 16135  0B89                     __ptext50:	
 16136 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 16137 ;; Defined at:
 16138 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 16139 ;; Parameters:    Size  Location     Type
 16140 ;;		None
 16141 ;; Auto vars:     Size  Location     Type
 16142 ;;		None
 16143 ;; Return value:  Size  Location     Type
 16144 ;;                  1    wreg      enum E12722
 16145 ;; Registers used:
 16146 ;;		wreg, status,2, status,0, pclath, cstack
 16147 ;; Tracked objects:
 16148 ;;		On entry : 0/0
 16149 ;;		On exit  : 0/0
 16150 ;;		Unchanged: 0/0
 16151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16156 ;;Total ram usage:        0 bytes
 16157 ;; Hardware stack levels used:    1
 16158 ;; Hardware stack levels required when called:    1
 16159 ;; This function calls:
 16160 ;;		_i2c1_driver_sendNACK
 16161 ;; This function is called by:
 16162 ;;		_do_I2C_RX
 16163 ;;		_i2c_ISR
 16164 ;; This function uses a non-reentrant model
 16165 ;;
 16166                           
 16167                           
 16168                           ;psect for function _do_I2C_DO_NACK_STOP
 16169  0B89                     _do_I2C_DO_NACK_STOP:	
 16170  0B89                     i1l4113:	
 16171                           ;incstack = 0
 16172                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 16173                           
 16174                           
 16175                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
 16176  0B89  318B  235E  318B   	fcall	_i2c1_driver_sendNACK
 16177  0B8C                     i1l4115:	
 16178                           
 16179                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
 16180  0B8C  300A               	movlw	10
 16181  0B8D                     i1l288:	
 16182  0B8D  0008               	return
 16183  0B8E                     __end_of_do_I2C_DO_NACK_STOP:	
 16184                           
 16185                           	psect	text51
 16186  0B84                     __ptext51:	
 16187 ;; *************** function _do_I2C_DO_ACK *****************
 16188 ;; Defined at:
 16189 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 16190 ;; Parameters:    Size  Location     Type
 16191 ;;		None
 16192 ;; Auto vars:     Size  Location     Type
 16193 ;;		None
 16194 ;; Return value:  Size  Location     Type
 16195 ;;                  1    wreg      enum E12722
 16196 ;; Registers used:
 16197 ;;		wreg, status,2, status,0, pclath, cstack
 16198 ;; Tracked objects:
 16199 ;;		On entry : 0/0
 16200 ;;		On exit  : 0/0
 16201 ;;		Unchanged: 0/0
 16202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16207 ;;Total ram usage:        0 bytes
 16208 ;; Hardware stack levels used:    1
 16209 ;; Hardware stack levels required when called:    1
 16210 ;; This function calls:
 16211 ;;		_i2c1_driver_sendACK
 16212 ;; This function is called by:
 16213 ;;		_i2c_ISR
 16214 ;; This function uses a non-reentrant model
 16215 ;;
 16216                           
 16217                           
 16218                           ;psect for function _do_I2C_DO_ACK
 16219  0B84                     _do_I2C_DO_ACK:	
 16220  0B84                     i1l4351:	
 16221                           ;incstack = 0
 16222                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 16223                           
 16224                           
 16225                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
 16226  0B84  318B  235A  318B   	fcall	_i2c1_driver_sendACK
 16227  0B87                     i1l4353:	
 16228                           
 16229                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
 16230  0B87  3005               	movlw	5
 16231  0B88                     i1l285:	
 16232  0B88  0008               	return
 16233  0B89                     __end_of_do_I2C_DO_ACK:	
 16234                           
 16235                           	psect	text52
 16236  0BB1                     __ptext52:	
 16237 ;; *************** function _do_I2C_RCEN *****************
 16238 ;; Defined at:
 16239 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 16240 ;; Parameters:    Size  Location     Type
 16241 ;;		None
 16242 ;; Auto vars:     Size  Location     Type
 16243 ;;		None
 16244 ;; Return value:  Size  Location     Type
 16245 ;;                  1    wreg      enum E12722
 16246 ;; Registers used:
 16247 ;;		wreg, status,2, status,0, pclath, cstack
 16248 ;; Tracked objects:
 16249 ;;		On entry : 0/0
 16250 ;;		On exit  : 0/0
 16251 ;;		Unchanged: 0/0
 16252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16257 ;;Total ram usage:        0 bytes
 16258 ;; Hardware stack levels used:    1
 16259 ;; Hardware stack levels required when called:    1
 16260 ;; This function calls:
 16261 ;;		_i2c1_driver_startRX
 16262 ;; This function is called by:
 16263 ;;		_i2c_ISR
 16264 ;; This function uses a non-reentrant model
 16265 ;;
 16266                           
 16267                           
 16268                           ;psect for function _do_I2C_RCEN
 16269  0BB1                     _do_I2C_RCEN:	
 16270  0BB1                     i1l4343:	
 16271                           ;incstack = 0
 16272                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 16273                           
 16274                           
 16275                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
 16276  0BB1  0021               	movlb	1	; select bank1
 16277  0BB2  11A0               	bcf	_i2c_status^(0+128),3
 16278  0BB3                     i1l4345:	
 16279                           
 16280                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
 16281  0BB3  318B  234B  318B   	fcall	_i2c1_driver_startRX
 16282  0BB6                     i1l4347:	
 16283                           
 16284                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
 16285  0BB6  3004               	movlw	4
 16286  0BB7                     i1l282:	
 16287  0BB7  0008               	return
 16288  0BB8                     __end_of_do_I2C_RCEN:	
 16289                           
 16290                           	psect	text53
 16291  0BCF                     __ptext53:	
 16292 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 16293 ;; Defined at:
 16294 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 16295 ;; Parameters:    Size  Location     Type
 16296 ;;		None
 16297 ;; Auto vars:     Size  Location     Type
 16298 ;;		None
 16299 ;; Return value:  Size  Location     Type
 16300 ;;                  1    wreg      enum E12722
 16301 ;; Registers used:
 16302 ;;		wreg, status,2, status,0, pclath, cstack
 16303 ;; Tracked objects:
 16304 ;;		On entry : 0/0
 16305 ;;		On exit  : 0/0
 16306 ;;		Unchanged: 0/0
 16307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16312 ;;Total ram usage:        0 bytes
 16313 ;; Hardware stack levels used:    1
 16314 ;; Hardware stack levels required when called:    1
 16315 ;; This function calls:
 16316 ;;		_i2c1_driver_TXData
 16317 ;; This function is called by:
 16318 ;;		_i2c_ISR
 16319 ;; This function uses a non-reentrant model
 16320 ;;
 16321                           
 16322                           
 16323                           ;psect for function _do_I2C_SEND_ADR_WRITE
 16324  0BCF                     _do_I2C_SEND_ADR_WRITE:	
 16325  0BCF                     i1l4335:	
 16326                           ;incstack = 0
 16327                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 16328                           
 16329                           
 16330                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
 16331  0BCF  0021               	movlb	1	; select bank1
 16332  0BD0  15A0               	bsf	_i2c_status^(0+128),3
 16333  0BD1                     i1l4337:	
 16334                           
 16335                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
 16336  0BD1  3521               	lslf	(_i2c_status^(0+128)+1),w
 16337  0BD2  318B  2366  318B   	fcall	_i2c1_driver_TXData
 16338  0BD5                     i1l4339:	
 16339                           
 16340                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
 16341  0BD5  3003               	movlw	3
 16342  0BD6                     i1l279:	
 16343  0BD6  0008               	return
 16344  0BD7                     __end_of_do_I2C_SEND_ADR_WRITE:	
 16345                           
 16346                           	psect	text54
 16347  0BE7                     __ptext54:	
 16348 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 16349 ;; Defined at:
 16350 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 16351 ;; Parameters:    Size  Location     Type
 16352 ;;		None
 16353 ;; Auto vars:     Size  Location     Type
 16354 ;;		None
 16355 ;; Return value:  Size  Location     Type
 16356 ;;                  1    wreg      enum E12722
 16357 ;; Registers used:
 16358 ;;		wreg, status,2, status,0, pclath, cstack
 16359 ;; Tracked objects:
 16360 ;;		On entry : 0/0
 16361 ;;		On exit  : 0/0
 16362 ;;		Unchanged: 0/0
 16363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16368 ;;Total ram usage:        0 bytes
 16369 ;; Hardware stack levels used:    1
 16370 ;; Hardware stack levels required when called:    1
 16371 ;; This function calls:
 16372 ;;		_i2c1_driver_TXData
 16373 ;; This function is called by:
 16374 ;;		_i2c_ISR
 16375 ;; This function uses a non-reentrant model
 16376 ;;
 16377                           
 16378                           
 16379                           ;psect for function _do_I2C_SEND_ADR_READ
 16380  0BE7                     _do_I2C_SEND_ADR_READ:	
 16381  0BE7                     i1l4327:	
 16382                           ;incstack = 0
 16383                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 16384                           
 16385                           
 16386                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
 16387  0BE7  0021               	movlb	1	; select bank1
 16388  0BE8  15A0               	bsf	_i2c_status^(0+128),3
 16389  0BE9                     i1l4329:	
 16390                           
 16391                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
 16392  0BE9  1403               	setc
 16393  0BEA  0D21               	rlf	(_i2c_status^(0+128)+1),w
 16394  0BEB  318B  2366  318B   	fcall	_i2c1_driver_TXData
 16395  0BEE                     i1l4331:	
 16396                           
 16397                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
 16398  0BEE  3005               	movlw	5
 16399  0BEF                     i1l276:	
 16400  0BEF  0008               	return
 16401  0BF0                     __end_of_do_I2C_SEND_ADR_READ:	
 16402                           
 16403                           	psect	text55
 16404  0B7F                     __ptext55:	
 16405 ;; *************** function _do_I2C_SEND_STOP *****************
 16406 ;; Defined at:
 16407 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 16408 ;; Parameters:    Size  Location     Type
 16409 ;;		None
 16410 ;; Auto vars:     Size  Location     Type
 16411 ;;		None
 16412 ;; Return value:  Size  Location     Type
 16413 ;;                  1    wreg      enum E12722
 16414 ;; Registers used:
 16415 ;;		wreg, status,2, status,0, pclath, cstack
 16416 ;; Tracked objects:
 16417 ;;		On entry : 0/0
 16418 ;;		On exit  : 0/0
 16419 ;;		Unchanged: 0/0
 16420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16425 ;;Total ram usage:        0 bytes
 16426 ;; Hardware stack levels used:    1
 16427 ;; Hardware stack levels required when called:    1
 16428 ;; This function calls:
 16429 ;;		_i2c1_driver_stop
 16430 ;; This function is called by:
 16431 ;;		_do_I2C_DO_ADDRESS_NACK
 16432 ;;		_do_I2C_TX
 16433 ;;		_do_I2C_TX_EMPTY
 16434 ;;		_i2c_ISR
 16435 ;; This function uses a non-reentrant model
 16436 ;;
 16437                           
 16438                           
 16439                           ;psect for function _do_I2C_SEND_STOP
 16440  0B7F                     _do_I2C_SEND_STOP:	
 16441  0B7F                     i1l4101:	
 16442                           ;incstack = 0
 16443                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 16444                           
 16445                           
 16446                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
 16447  0B7F  318B  2348  318B   	fcall	_i2c1_driver_stop
 16448  0B82                     i1l4103:	
 16449                           
 16450                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
 16451  0B82  3000               	movlw	0
 16452  0B83                     i1l273:	
 16453  0B83  0008               	return
 16454  0B84                     __end_of_do_I2C_SEND_STOP:	
 16455                           
 16456                           	psect	text56
 16457  0B7A                     __ptext56:	
 16458 ;; *************** function _do_I2C_SEND_RESTART *****************
 16459 ;; Defined at:
 16460 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 16461 ;; Parameters:    Size  Location     Type
 16462 ;;		None
 16463 ;; Auto vars:     Size  Location     Type
 16464 ;;		None
 16465 ;; Return value:  Size  Location     Type
 16466 ;;                  1    wreg      enum E12722
 16467 ;; Registers used:
 16468 ;;		wreg, status,2, status,0, pclath, cstack
 16469 ;; Tracked objects:
 16470 ;;		On entry : 0/0
 16471 ;;		On exit  : 0/0
 16472 ;;		Unchanged: 0/0
 16473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16478 ;;Total ram usage:        0 bytes
 16479 ;; Hardware stack levels used:    1
 16480 ;; Hardware stack levels required when called:    1
 16481 ;; This function calls:
 16482 ;;		_i2c1_driver_restart
 16483 ;; This function is called by:
 16484 ;;		_do_I2C_DO_ADDRESS_NACK
 16485 ;;		_do_I2C_TX_EMPTY
 16486 ;;		_i2c_ISR
 16487 ;; This function uses a non-reentrant model
 16488 ;;
 16489                           
 16490                           
 16491                           ;psect for function _do_I2C_SEND_RESTART
 16492  0B7A                     _do_I2C_SEND_RESTART:	
 16493  0B7A                     i1l4095:	
 16494                           ;incstack = 0
 16495                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 16496                           
 16497                           
 16498                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
 16499  0B7A  318B  2345  318B   	fcall	_i2c1_driver_restart
 16500  0B7D                     i1l4097:	
 16501                           
 16502                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
 16503  0B7D  3001               	movlw	1
 16504  0B7E                     i1l270:	
 16505  0B7E  0008               	return
 16506  0B7F                     __end_of_do_I2C_SEND_RESTART:	
 16507                           
 16508                           	psect	text57
 16509  0B75                     __ptext57:	
 16510 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 16511 ;; Defined at:
 16512 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 16513 ;; Parameters:    Size  Location     Type
 16514 ;;		None
 16515 ;; Auto vars:     Size  Location     Type
 16516 ;;		None
 16517 ;; Return value:  Size  Location     Type
 16518 ;;                  1    wreg      enum E12722
 16519 ;; Registers used:
 16520 ;;		wreg, status,2, status,0, pclath, cstack
 16521 ;; Tracked objects:
 16522 ;;		On entry : 0/0
 16523 ;;		On exit  : 0/0
 16524 ;;		Unchanged: 0/0
 16525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16530 ;;Total ram usage:        0 bytes
 16531 ;; Hardware stack levels used:    1
 16532 ;; Hardware stack levels required when called:    1
 16533 ;; This function calls:
 16534 ;;		_i2c1_driver_restart
 16535 ;; This function is called by:
 16536 ;;		_do_I2C_TX
 16537 ;;		_i2c_ISR
 16538 ;; This function uses a non-reentrant model
 16539 ;;
 16540                           
 16541                           
 16542                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 16543  0B75                     _do_I2C_SEND_RESTART_WRITE:	
 16544  0B75                     i1l4089:	
 16545                           ;incstack = 0
 16546                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 16547                           
 16548                           
 16549                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
 16550  0B75  318B  2345  318B   	fcall	_i2c1_driver_restart
 16551  0B78                     i1l4091:	
 16552                           
 16553                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
 16554  0B78  3002               	movlw	2
 16555  0B79                     i1l267:	
 16556  0B79  0008               	return
 16557  0B7A                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 16558                           
 16559                           	psect	text58
 16560  0B70                     __ptext58:	
 16561 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 16562 ;; Defined at:
 16563 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 16564 ;; Parameters:    Size  Location     Type
 16565 ;;		None
 16566 ;; Auto vars:     Size  Location     Type
 16567 ;;		None
 16568 ;; Return value:  Size  Location     Type
 16569 ;;                  1    wreg      enum E12722
 16570 ;; Registers used:
 16571 ;;		wreg, status,2, status,0, pclath, cstack
 16572 ;; Tracked objects:
 16573 ;;		On entry : 0/0
 16574 ;;		On exit  : 0/0
 16575 ;;		Unchanged: 0/0
 16576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16581 ;;Total ram usage:        0 bytes
 16582 ;; Hardware stack levels used:    1
 16583 ;; Hardware stack levels required when called:    1
 16584 ;; This function calls:
 16585 ;;		_i2c1_driver_restart
 16586 ;; This function is called by:
 16587 ;;		_do_I2C_TX
 16588 ;;		_i2c_ISR
 16589 ;; This function uses a non-reentrant model
 16590 ;;
 16591                           
 16592                           
 16593                           ;psect for function _do_I2C_SEND_RESTART_READ
 16594  0B70                     _do_I2C_SEND_RESTART_READ:	
 16595  0B70                     i1l4083:	
 16596                           ;incstack = 0
 16597                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 16598                           
 16599                           
 16600                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
 16601  0B70  318B  2345  318B   	fcall	_i2c1_driver_restart
 16602  0B73                     i1l4085:	
 16603                           
 16604                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
 16605  0B73  3001               	movlw	1
 16606  0B74                     i1l264:	
 16607  0B74  0008               	return
 16608  0B75                     __end_of_do_I2C_SEND_RESTART_READ:	
 16609                           
 16610                           	psect	text59
 16611  0B6B                     __ptext59:	
 16612 ;; *************** function _do_I2C_IDLE *****************
 16613 ;; Defined at:
 16614 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 16615 ;; Parameters:    Size  Location     Type
 16616 ;;		None
 16617 ;; Auto vars:     Size  Location     Type
 16618 ;;		None
 16619 ;; Return value:  Size  Location     Type
 16620 ;;                  1    wreg      enum E12722
 16621 ;; Registers used:
 16622 ;;		wreg, status,2
 16623 ;; Tracked objects:
 16624 ;;		On entry : 0/0
 16625 ;;		On exit  : 0/0
 16626 ;;		Unchanged: 0/0
 16627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16632 ;;Total ram usage:        0 bytes
 16633 ;; Hardware stack levels used:    1
 16634 ;; This function calls:
 16635 ;;		Nothing
 16636 ;; This function is called by:
 16637 ;;		_i2c_ISR
 16638 ;; This function uses a non-reentrant model
 16639 ;;
 16640                           
 16641                           
 16642                           ;psect for function _do_I2C_IDLE
 16643  0B6B                     _do_I2C_IDLE:	
 16644  0B6B                     i1l4319:	
 16645                           ;incstack = 0
 16646                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 16647                           
 16648                           
 16649                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
 16650  0B6B  0021               	movlb	1	; select bank1
 16651  0B6C  1020               	bcf	_i2c_status^(0+128),0
 16652  0B6D                     i1l4321:	
 16653                           
 16654                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
 16655  0B6D  01AA               	clrf	(_i2c_status^(0+128)+10)
 16656  0B6E                     i1l4323:	
 16657                           
 16658                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
 16659  0B6E  300E               	movlw	14
 16660  0B6F                     i1l261:	
 16661  0B6F  0008               	return
 16662  0B70                     __end_of_do_I2C_IDLE:	
 16663                           
 16664                           	psect	text60
 16665  0BC7                     __ptext60:	
 16666 ;; *************** function _do_I2C_RESET *****************
 16667 ;; Defined at:
 16668 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 16669 ;; Parameters:    Size  Location     Type
 16670 ;;		None
 16671 ;; Auto vars:     Size  Location     Type
 16672 ;;		None
 16673 ;; Return value:  Size  Location     Type
 16674 ;;                  1    wreg      enum E12722
 16675 ;; Registers used:
 16676 ;;		wreg, status,2, status,0, pclath, cstack
 16677 ;; Tracked objects:
 16678 ;;		On entry : 0/0
 16679 ;;		On exit  : 0/0
 16680 ;;		Unchanged: 0/0
 16681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16686 ;;Total ram usage:        0 bytes
 16687 ;; Hardware stack levels used:    1
 16688 ;; Hardware stack levels required when called:    1
 16689 ;; This function calls:
 16690 ;;		_i2c1_driver_resetBus
 16691 ;; This function is called by:
 16692 ;;		_i2c_ISR
 16693 ;; This function uses a non-reentrant model
 16694 ;;
 16695                           
 16696                           
 16697                           ;psect for function _do_I2C_RESET
 16698  0BC7                     _do_I2C_RESET:	
 16699  0BC7                     i1l4309:	
 16700                           ;incstack = 0
 16701                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 16702                           
 16703                           
 16704                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
 16705  0BC7  318B  2340  318B   	fcall	_i2c1_driver_resetBus
 16706  0BCA                     i1l4311:	
 16707                           
 16708                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
 16709  0BCA  0021               	movlb	1	; select bank1
 16710  0BCB  1020               	bcf	_i2c_status^(0+128),0
 16711  0BCC                     i1l4313:	
 16712                           
 16713                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
 16714  0BCC  01AA               	clrf	(_i2c_status^(0+128)+10)
 16715  0BCD                     i1l4315:	
 16716                           
 16717                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
 16718  0BCD  300E               	movlw	14
 16719  0BCE                     i1l258:	
 16720  0BCE  0008               	return
 16721  0BCF                     __end_of_do_I2C_RESET:	
 16722                           
 16723                           	psect	text61
 16724  0F58                     __ptext61:	
 16725 ;; *************** function _do_I2C_TX_EMPTY *****************
 16726 ;; Defined at:
 16727 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 16728 ;; Parameters:    Size  Location     Type
 16729 ;;		None
 16730 ;; Auto vars:     Size  Location     Type
 16731 ;;		None
 16732 ;; Return value:  Size  Location     Type
 16733 ;;                  1    wreg      enum E12722
 16734 ;; Registers used:
 16735 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16736 ;; Tracked objects:
 16737 ;;		On entry : 0/0
 16738 ;;		On exit  : 0/0
 16739 ;;		Unchanged: 0/0
 16740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16743 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16744 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16745 ;;Total ram usage:        3 bytes
 16746 ;; Hardware stack levels used:    1
 16747 ;; Hardware stack levels required when called:    3
 16748 ;; This function calls:
 16749 ;;		Absolute function
 16750 ;;		_do_I2C_SEND_RESTART
 16751 ;;		_do_I2C_SEND_STOP
 16752 ;;		_i2c_restartWrite
 16753 ;;		_mssp1_setIRQ
 16754 ;;		_rd1RegCompleteHandler
 16755 ;;		_rd2RegCompleteHandler
 16756 ;;		_rdBlkRegCompleteHandler
 16757 ;;		_returnReset
 16758 ;;		_returnStop
 16759 ;;		_wr1RegCompleteHandler
 16760 ;;		_wr2RegCompleteHandler
 16761 ;; This function is called by:
 16762 ;;		_i2c_ISR
 16763 ;; This function uses a non-reentrant model
 16764 ;;
 16765                           
 16766                           
 16767                           ;psect for function _do_I2C_TX_EMPTY
 16768  0F58                     _do_I2C_TX_EMPTY:	
 16769  0F58                     i1l5837:	
 16770                           ;incstack = 0
 16771                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16772                           
 16773                           
 16774                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
 16775  0F58  0021               	movlb	1	; select bank1
 16776  0F59  1520               	bsf	_i2c_status^(0+128),2
 16777                           
 16778                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 16779  0F5A  2F68               	goto	i1l5855
 16780  0F5B                     i1l5839:	
 16781                           
 16782                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
 16783  0F5B  318B  237A  318F   	fcall	_do_I2C_SEND_RESTART
 16784  0F5E  2F8A               	goto	i1l333
 16785  0F5F                     i1l5843:	
 16786                           
 16787                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
 16788  0F5F  318B  2351  318F   	fcall	_mssp1_setIRQ
 16789  0F62                     i1l5845:	
 16790                           
 16791                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
 16792  0F62  3003               	movlw	3
 16793  0F63  2F8A               	goto	i1l333
 16794  0F64                     i1l5849:	
 16795                           
 16796                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
 16797  0F64  318B  237F  318F   	fcall	_do_I2C_SEND_STOP
 16798  0F67  2F8A               	goto	i1l333
 16799  0F68                     i1l5855:	
 16800  0F68  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 16801  0F69  00F0               	movwf	??_do_I2C_TX_EMPTY
 16802  0F6A  0870               	movf	??_do_I2C_TX_EMPTY,w
 16803  0F6B  00F6               	movwf	rdBlkRegCompleteHandler@p
 16804  0F6C  300B               	movlw	11
 16805  0F6D  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 16806  0F6E  0086               	movwf	6
 16807  0F6F  0187               	clrf	7
 16808  0F70  3F41               	moviw [1]fsr1
 16809  0F71  008A               	movwf	10
 16810  0F72  3F40               	moviw [0]fsr1
 16811  0F73  000A               	callw
 16812  0F74  318F               	pagesel	$
 16813  0F75  00F1               	movwf	??_do_I2C_TX_EMPTY+1
 16814  0F76  01F2               	clrf	??_do_I2C_TX_EMPTY+2
 16815                           
 16816                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16817                           ; Switch size 1, requested type "simple"
 16818                           ; Number of cases is 1, Range of values is 0 to 0
 16819                           ; switch strategies available:
 16820                           ; Name         Instructions Cycles
 16821                           ; simple_byte            4     3 (average)
 16822                           ; direct_byte            8     6 (fixed)
 16823                           ; jumptable            260     6 (fixed)
 16824                           ;	Chosen strategy is simple_byte
 16825  0F77  0872               	movf	??_do_I2C_TX_EMPTY+2,w
 16826  0F78  3A00               	xorlw	0	; case 0
 16827  0F79  1903               	skipnz
 16828  0F7A  2F7C               	goto	i1l6767
 16829  0F7B  2F64               	goto	i1l5849
 16830  0F7C                     i1l6767:	
 16831                           
 16832                           ; Switch size 1, requested type "simple"
 16833                           ; Number of cases is 4, Range of values is 1 to 4
 16834                           ; switch strategies available:
 16835                           ; Name         Instructions Cycles
 16836                           ; simple_byte           13     7 (average)
 16837                           ; direct_byte           17     9 (fixed)
 16838                           ; jumptable            263     9 (fixed)
 16839                           ;	Chosen strategy is simple_byte
 16840  0F7C  0871               	movf	??_do_I2C_TX_EMPTY+1,w
 16841  0F7D  3A01               	xorlw	1	; case 1
 16842  0F7E  1903               	skipnz
 16843  0F7F  2F64               	goto	i1l5849
 16844  0F80  3A03               	xorlw	3	; case 2
 16845  0F81  1903               	skipnz
 16846  0F82  2F5B               	goto	i1l5839
 16847  0F83  3A01               	xorlw	1	; case 3
 16848  0F84  1903               	skipnz
 16849  0F85  2F5B               	goto	i1l5839
 16850  0F86  3A07               	xorlw	7	; case 4
 16851  0F87  1903               	skipnz
 16852  0F88  2F5F               	goto	i1l5843
 16853  0F89  2F64               	goto	i1l5849
 16854  0F8A                     i1l333:	
 16855  0F8A  0008               	return
 16856  0F8B                     __end_of_do_I2C_TX_EMPTY:	
 16857                           
 16858                           	psect	text62
 16859  0B51                     __ptext62:	
 16860 ;; *************** function _mssp1_setIRQ *****************
 16861 ;; Defined at:
 16862 ;;		line 59 in file "mcc_generated_files/i2c1_driver.c"
 16863 ;; Parameters:    Size  Location     Type
 16864 ;;		None
 16865 ;; Auto vars:     Size  Location     Type
 16866 ;;		None
 16867 ;; Return value:  Size  Location     Type
 16868 ;;                  1    wreg      void 
 16869 ;; Registers used:
 16870 ;;		None
 16871 ;; Tracked objects:
 16872 ;;		On entry : 0/0
 16873 ;;		On exit  : 0/0
 16874 ;;		Unchanged: 0/0
 16875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16880 ;;Total ram usage:        0 bytes
 16881 ;; Hardware stack levels used:    1
 16882 ;; This function calls:
 16883 ;;		Nothing
 16884 ;; This function is called by:
 16885 ;;		_do_I2C_TX_EMPTY
 16886 ;; This function uses a non-reentrant model
 16887 ;;
 16888                           
 16889                           
 16890                           ;psect for function _mssp1_setIRQ
 16891  0B51                     _mssp1_setIRQ:	
 16892  0B51                     i1l4133:	
 16893                           ;incstack = 0
 16894                           ; Regs used in _mssp1_setIRQ: []
 16895                           
 16896                           
 16897                           ;mcc_generated_files/i2c1_driver.c: 61:     else
 16898  0B51  002E               	movlb	14	; select bank14
 16899  0B52  140F               	bsf	15,0	;volatile
 16900  0B53                     i1l758:	
 16901  0B53  0008               	return
 16902  0B54                     __end_of_mssp1_setIRQ:	
 16903                           
 16904                           	psect	text63
 16905  0BBF                     __ptext63:	
 16906 ;; *************** function _i2c1_driver_isNACK *****************
 16907 ;; Defined at:
 16908 ;;		line 162 in file "mcc_generated_files/i2c1_driver.c"
 16909 ;; Parameters:    Size  Location     Type
 16910 ;;		None
 16911 ;; Auto vars:     Size  Location     Type
 16912 ;;		None
 16913 ;; Return value:  Size  Location     Type
 16914 ;;		None               void
 16915 ;; Registers used:
 16916 ;;		wreg, status,2, status,0
 16917 ;; Tracked objects:
 16918 ;;		On entry : 0/0
 16919 ;;		On exit  : 0/0
 16920 ;;		Unchanged: 0/0
 16921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16924 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16925 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16926 ;;Total ram usage:        1 bytes
 16927 ;; Hardware stack levels used:    1
 16928 ;; This function calls:
 16929 ;;		Nothing
 16930 ;; This function is called by:
 16931 ;;		_do_I2C_TX
 16932 ;;		_i2c_ISR
 16933 ;; This function uses a non-reentrant model
 16934 ;;
 16935                           
 16936                           
 16937                           ;psect for function _i2c1_driver_isNACK
 16938  0BBF                     _i2c1_driver_isNACK:	
 16939  0BBF                     i1l4125:	
 16940                           ;incstack = 0
 16941                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 16942                           
 16943                           
 16944                           ;mcc_generated_files/i2c1_driver.c: 164:     return SSP1CON2bits.ACKSTAT;
 16945  0BBF  0023               	movlb	3	; select bank3
 16946  0BC0  0E11               	swapf	17,w	;volatile
 16947  0BC1  0C89               	rrf	9,f
 16948  0BC2  0C89               	rrf	9,f
 16949  0BC3  3901               	andlw	1
 16950  0BC4  00F0               	movwf	??_i2c1_driver_isNACK
 16951  0BC5  0C70               	rrf	??_i2c1_driver_isNACK,w
 16952  0BC6                     i1l793:	
 16953  0BC6  0008               	return
 16954  0BC7                     __end_of_i2c1_driver_isNACK:	
 16955                           
 16956                           	psect	text64
 16957  0B66                     __ptext64:	
 16958 ;; *************** function _i2c1_driver_TXData *****************
 16959 ;; Defined at:
 16960 ;;		line 187 in file "mcc_generated_files/i2c1_driver.c"
 16961 ;; Parameters:    Size  Location     Type
 16962 ;;  d               1    wreg     unsigned char 
 16963 ;; Auto vars:     Size  Location     Type
 16964 ;;  d               1    0[COMMON] unsigned char 
 16965 ;; Return value:  Size  Location     Type
 16966 ;;                  1    wreg      void 
 16967 ;; Registers used:
 16968 ;;		wreg
 16969 ;; Tracked objects:
 16970 ;;		On entry : 0/0
 16971 ;;		On exit  : 0/0
 16972 ;;		Unchanged: 0/0
 16973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16975 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16977 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16978 ;;Total ram usage:        1 bytes
 16979 ;; Hardware stack levels used:    1
 16980 ;; This function calls:
 16981 ;;		Nothing
 16982 ;; This function is called by:
 16983 ;;		_do_I2C_SEND_ADR_READ
 16984 ;;		_do_I2C_SEND_ADR_WRITE
 16985 ;;		_do_I2C_TX
 16986 ;; This function uses a non-reentrant model
 16987 ;;
 16988                           
 16989                           
 16990                           ;psect for function _i2c1_driver_TXData
 16991  0B66                     _i2c1_driver_TXData:	
 16992                           
 16993                           ;incstack = 0
 16994                           ; Regs used in _i2c1_driver_TXData: [wreg]
 16995                           ;i2c1_driver_TXData@d stored from wreg
 16996  0B66  00F0               	movwf	i2c1_driver_TXData@d
 16997  0B67                     i1l4107:	
 16998                           
 16999                           ;mcc_generated_files/i2c1_driver.c: 187: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 188: {;mcc_generated_files/i2c1_driver.c: 18
      +                          9:     SSP1BUF = d;
 17000  0B67  0870               	movf	i2c1_driver_TXData@d,w
 17001  0B68  0023               	movlb	3	; select bank3
 17002  0B69  008C               	movwf	12	;volatile
 17003  0B6A                     i1l808:	
 17004  0B6A  0008               	return
 17005  0B6B                     __end_of_i2c1_driver_TXData:	
 17006                           
 17007                           	psect	text65
 17008  0B4E                     __ptext65:	
 17009 ;; *************** function _i2c1_driver_getRXData *****************
 17010 ;; Defined at:
 17011 ;;		line 172 in file "mcc_generated_files/i2c1_driver.c"
 17012 ;; Parameters:    Size  Location     Type
 17013 ;;		None
 17014 ;; Auto vars:     Size  Location     Type
 17015 ;;		None
 17016 ;; Return value:  Size  Location     Type
 17017 ;;                  1    wreg      unsigned char 
 17018 ;; Registers used:
 17019 ;;		wreg
 17020 ;; Tracked objects:
 17021 ;;		On entry : 0/0
 17022 ;;		On exit  : 0/0
 17023 ;;		Unchanged: 0/0
 17024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17029 ;;Total ram usage:        0 bytes
 17030 ;; Hardware stack levels used:    1
 17031 ;; This function calls:
 17032 ;;		Nothing
 17033 ;; This function is called by:
 17034 ;;		_do_I2C_RX
 17035 ;; This function uses a non-reentrant model
 17036 ;;
 17037                           
 17038                           
 17039                           ;psect for function _i2c1_driver_getRXData
 17040  0B4E                     _i2c1_driver_getRXData:	
 17041  0B4E                     i1l4129:	
 17042                           ;incstack = 0
 17043                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 17044                           
 17045                           
 17046                           ;mcc_generated_files/i2c1_driver.c: 174:     return SSP1BUF;
 17047  0B4E  0023               	movlb	3	; select bank3
 17048  0B4F  080C               	movf	12,w	;volatile
 17049  0B50                     i1l799:	
 17050  0B50  0008               	return
 17051  0B51                     __end_of_i2c1_driver_getRXData:	
 17052                           
 17053                           	psect	text66
 17054  0B5E                     __ptext66:	
 17055 ;; *************** function _i2c1_driver_sendNACK *****************
 17056 ;; Defined at:
 17057 ;;		line 203 in file "mcc_generated_files/i2c1_driver.c"
 17058 ;; Parameters:    Size  Location     Type
 17059 ;;		None
 17060 ;; Auto vars:     Size  Location     Type
 17061 ;;		None
 17062 ;; Return value:  Size  Location     Type
 17063 ;;                  1    wreg      void 
 17064 ;; Registers used:
 17065 ;;		None
 17066 ;; Tracked objects:
 17067 ;;		On entry : 0/0
 17068 ;;		On exit  : 0/0
 17069 ;;		Unchanged: 0/0
 17070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17075 ;;Total ram usage:        0 bytes
 17076 ;; Hardware stack levels used:    1
 17077 ;; This function calls:
 17078 ;;		Nothing
 17079 ;; This function is called by:
 17080 ;;		_do_I2C_DO_NACK_STOP
 17081 ;;		_do_I2C_DO_NACK_RESTART
 17082 ;; This function uses a non-reentrant model
 17083 ;;
 17084                           
 17085                           
 17086                           ;psect for function _i2c1_driver_sendNACK
 17087  0B5E                     _i2c1_driver_sendNACK:	
 17088  0B5E                     i1l4073:	
 17089                           ;incstack = 0
 17090                           ; Regs used in _i2c1_driver_sendNACK: []
 17091                           
 17092                           
 17093                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKDT = 1;
 17094  0B5E  0023               	movlb	3	; select bank3
 17095  0B5F  1691               	bsf	17,5	;volatile
 17096                           
 17097                           ;mcc_generated_files/i2c1_driver.c: 206:     SSP1CON2bits.ACKEN = 1;
 17098  0B60  1611               	bsf	17,4	;volatile
 17099  0B61                     i1l817:	
 17100  0B61  0008               	return
 17101  0B62                     __end_of_i2c1_driver_sendNACK:	
 17102                           
 17103                           	psect	text67
 17104  0B40                     __ptext67:	
 17105 ;; *************** function _i2c1_driver_resetBus *****************
 17106 ;; Defined at:
 17107 ;;		line 142 in file "mcc_generated_files/i2c1_driver.c"
 17108 ;; Parameters:    Size  Location     Type
 17109 ;;		None
 17110 ;; Auto vars:     Size  Location     Type
 17111 ;;		None
 17112 ;; Return value:  Size  Location     Type
 17113 ;;                  1    wreg      void 
 17114 ;; Registers used:
 17115 ;;		None
 17116 ;; Tracked objects:
 17117 ;;		On entry : 0/0
 17118 ;;		On exit  : 0/0
 17119 ;;		Unchanged: 0/0
 17120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17125 ;;Total ram usage:        0 bytes
 17126 ;; Hardware stack levels used:    1
 17127 ;; This function calls:
 17128 ;;		Nothing
 17129 ;; This function is called by:
 17130 ;;		_do_I2C_RESET
 17131 ;; This function uses a non-reentrant model
 17132 ;;
 17133                           
 17134                           
 17135                           ;psect for function _i2c1_driver_resetBus
 17136  0B40                     _i2c1_driver_resetBus:	
 17137  0B40                     i1l781:	
 17138                           ;incstack = 0
 17139                           ; Regs used in _i2c1_driver_resetBus: []
 17140                           
 17141  0B40  0008               	return
 17142  0B41                     __end_of_i2c1_driver_resetBus:	
 17143                           
 17144                           	psect	text68
 17145  0B4B                     __ptext68:	
 17146 ;; *************** function _i2c1_driver_startRX *****************
 17147 ;; Defined at:
 17148 ;;		line 167 in file "mcc_generated_files/i2c1_driver.c"
 17149 ;; Parameters:    Size  Location     Type
 17150 ;;		None
 17151 ;; Auto vars:     Size  Location     Type
 17152 ;;		None
 17153 ;; Return value:  Size  Location     Type
 17154 ;;                  1    wreg      void 
 17155 ;; Registers used:
 17156 ;;		None
 17157 ;; Tracked objects:
 17158 ;;		On entry : 0/0
 17159 ;;		On exit  : 0/0
 17160 ;;		Unchanged: 0/0
 17161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17166 ;;Total ram usage:        0 bytes
 17167 ;; Hardware stack levels used:    1
 17168 ;; This function calls:
 17169 ;;		Nothing
 17170 ;; This function is called by:
 17171 ;;		_do_I2C_RCEN
 17172 ;; This function uses a non-reentrant model
 17173 ;;
 17174                           
 17175                           
 17176                           ;psect for function _i2c1_driver_startRX
 17177  0B4B                     _i2c1_driver_startRX:	
 17178  0B4B                     i1l4109:	
 17179                           ;incstack = 0
 17180                           ; Regs used in _i2c1_driver_startRX: []
 17181                           
 17182                           
 17183                           ;mcc_generated_files/i2c1_driver.c: 169:     SSP1CON2bits.RCEN = 1;
 17184  0B4B  0023               	movlb	3	; select bank3
 17185  0B4C  1591               	bsf	17,3	;volatile
 17186  0B4D                     i1l796:	
 17187  0B4D  0008               	return
 17188  0B4E                     __end_of_i2c1_driver_startRX:	
 17189                           
 17190                           	psect	text69
 17191  0DB8                     __ptext69:	
 17192 ;; *************** function _rdBlkRegCompleteHandler *****************
 17193 ;; Defined at:
 17194 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17195 ;; Parameters:    Size  Location     Type
 17196 ;;  p               1    6[COMMON] PTR void 
 17197 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17198 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17199 ;; Auto vars:     Size  Location     Type
 17200 ;;		None
 17201 ;; Return value:  Size  Location     Type
 17202 ;;                  1    wreg      enum E358
 17203 ;; Registers used:
 17204 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17205 ;; Tracked objects:
 17206 ;;		On entry : 0/0
 17207 ;;		On exit  : 0/0
 17208 ;;		Unchanged: 0/0
 17209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17210 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17213 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17214 ;;Total ram usage:        1 bytes
 17215 ;; Hardware stack levels used:    1
 17216 ;; Hardware stack levels required when called:    2
 17217 ;; This function calls:
 17218 ;;		_i2c_setBuffer
 17219 ;;		_i2c_setDataCompleteCallback
 17220 ;; This function is called by:
 17221 ;;		_i2c_readDataBlock
 17222 ;;		_do_I2C_DO_ADDRESS_NACK
 17223 ;;		_do_I2C_TX
 17224 ;;		_do_I2C_RX
 17225 ;;		_do_I2C_TX_EMPTY
 17226 ;; This function uses a non-reentrant model
 17227 ;;
 17228                           
 17229                           
 17230                           ;psect for function _rdBlkRegCompleteHandler
 17231  0DB8                     _rdBlkRegCompleteHandler:	
 17232  0DB8                     i1l5689:	
 17233                           ;incstack = 0
 17234                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 17235                           
 17236                           
 17237                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
 17238  0DB8  0876               	movf	rdBlkRegCompleteHandler@p,w
 17239  0DB9  0086               	movwf	6
 17240  0DBA  0187               	clrf	7
 17241  0DBB  3F40               	moviw [0]fsr1
 17242  0DBC  00F0               	movwf	i2c_setBuffer@bufferSize
 17243  0DBD  3F41               	moviw [1]fsr1
 17244  0DBE  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17245  0DBF  0876               	movf	rdBlkRegCompleteHandler@p,w
 17246  0DC0  3E02               	addlw	2
 17247  0DC1  0086               	movwf	6
 17248  0DC2  0187               	clrf	7
 17249  0DC3  0801               	movf	1,w
 17250  0DC4  318C  24BA  318D   	fcall	_i2c_setBuffer
 17251                           
 17252                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 17253  0DC7  3000               	movlw	0
 17254  0DC8  0020               	movlb	0	; select bank0
 17255  0DC9  00C4               	movwf	i2c_setDataCompleteCallback@cb
 17256  0DCA  00C5               	movwf	i2c_setDataCompleteCallback@cb+1
 17257  0DCB  01C6               	clrf	i2c_setDataCompleteCallback@p
 17258  0DCC  318C  2471  318D   	fcall	_i2c_setDataCompleteCallback
 17259  0DCF                     i1l5691:	
 17260                           
 17261                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
 17262  0DCF  3002               	movlw	2
 17263  0DD0                     i1l436:	
 17264  0DD0  0008               	return
 17265  0DD1                     __end_of_rdBlkRegCompleteHandler:	
 17266                           
 17267                           	psect	text70
 17268  0D21                     __ptext70:	
 17269 ;; *************** function _rd2RegCompleteHandler *****************
 17270 ;; Defined at:
 17271 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17272 ;; Parameters:    Size  Location     Type
 17273 ;;  p               1    6[COMMON] PTR void 
 17274 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17275 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17276 ;; Auto vars:     Size  Location     Type
 17277 ;;		None
 17278 ;; Return value:  Size  Location     Type
 17279 ;;                  1    wreg      enum E358
 17280 ;; Registers used:
 17281 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17282 ;; Tracked objects:
 17283 ;;		On entry : 0/0
 17284 ;;		On exit  : 0/0
 17285 ;;		Unchanged: 0/0
 17286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17287 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17290 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17291 ;;Total ram usage:        1 bytes
 17292 ;; Hardware stack levels used:    1
 17293 ;; Hardware stack levels required when called:    2
 17294 ;; This function calls:
 17295 ;;		_i2c_setBuffer
 17296 ;;		_i2c_setDataCompleteCallback
 17297 ;; This function is called by:
 17298 ;;		_i2c_read2ByteRegister
 17299 ;;		_do_I2C_DO_ADDRESS_NACK
 17300 ;;		_do_I2C_TX
 17301 ;;		_do_I2C_RX
 17302 ;;		_do_I2C_TX_EMPTY
 17303 ;; This function uses a non-reentrant model
 17304 ;;
 17305                           
 17306                           
 17307                           ;psect for function _rd2RegCompleteHandler
 17308  0D21                     _rd2RegCompleteHandler:	
 17309  0D21                     i1l5673:	
 17310                           ;incstack = 0
 17311                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17312                           
 17313                           
 17314                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
 17315  0D21  3002               	movlw	2
 17316  0D22  00F0               	movwf	i2c_setBuffer@bufferSize
 17317  0D23  3000               	movlw	0
 17318  0D24  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17319  0D25  0876               	movf	rd2RegCompleteHandler@p,w
 17320  0D26  318C  24BA  318D   	fcall	_i2c_setBuffer
 17321  0D29                     i1l5675:	
 17322                           
 17323                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 17324  0D29  3000               	movlw	0
 17325  0D2A  0020               	movlb	0	; select bank0
 17326  0D2B  00C4               	movwf	i2c_setDataCompleteCallback@cb
 17327  0D2C  00C5               	movwf	i2c_setDataCompleteCallback@cb+1
 17328  0D2D  01C6               	clrf	i2c_setDataCompleteCallback@p
 17329  0D2E  318C  2471  318D   	fcall	_i2c_setDataCompleteCallback
 17330  0D31                     i1l5677:	
 17331                           
 17332                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
 17333  0D31  3002               	movlw	2
 17334  0D32                     i1l412:	
 17335  0D32  0008               	return
 17336  0D33                     __end_of_rd2RegCompleteHandler:	
 17337                           
 17338                           	psect	text71
 17339  0D0F                     __ptext71:	
 17340 ;; *************** function _rd1RegCompleteHandler *****************
 17341 ;; Defined at:
 17342 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17343 ;; Parameters:    Size  Location     Type
 17344 ;;  p               1    6[COMMON] PTR void 
 17345 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17346 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17347 ;; Auto vars:     Size  Location     Type
 17348 ;;		None
 17349 ;; Return value:  Size  Location     Type
 17350 ;;                  1    wreg      enum E358
 17351 ;; Registers used:
 17352 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17353 ;; Tracked objects:
 17354 ;;		On entry : 0/0
 17355 ;;		On exit  : 0/0
 17356 ;;		Unchanged: 0/0
 17357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17358 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17361 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17362 ;;Total ram usage:        1 bytes
 17363 ;; Hardware stack levels used:    1
 17364 ;; Hardware stack levels required when called:    2
 17365 ;; This function calls:
 17366 ;;		_i2c_setBuffer
 17367 ;;		_i2c_setDataCompleteCallback
 17368 ;; This function is called by:
 17369 ;;		_i2c_read1ByteRegister
 17370 ;;		_do_I2C_DO_ADDRESS_NACK
 17371 ;;		_do_I2C_TX
 17372 ;;		_do_I2C_RX
 17373 ;;		_do_I2C_TX_EMPTY
 17374 ;; This function uses a non-reentrant model
 17375 ;;
 17376                           
 17377                           
 17378                           ;psect for function _rd1RegCompleteHandler
 17379  0D0F                     _rd1RegCompleteHandler:	
 17380  0D0F                     i1l5665:	
 17381                           ;incstack = 0
 17382                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17383                           
 17384                           
 17385                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
 17386  0D0F  3001               	movlw	1
 17387  0D10  00F0               	movwf	i2c_setBuffer@bufferSize
 17388  0D11  3000               	movlw	0
 17389  0D12  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17390  0D13  0876               	movf	rd1RegCompleteHandler@p,w
 17391  0D14  318C  24BA  318D   	fcall	_i2c_setBuffer
 17392  0D17                     i1l5667:	
 17393                           
 17394                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 17395  0D17  3000               	movlw	0
 17396  0D18  0020               	movlb	0	; select bank0
 17397  0D19  00C4               	movwf	i2c_setDataCompleteCallback@cb
 17398  0D1A  00C5               	movwf	i2c_setDataCompleteCallback@cb+1
 17399  0D1B  01C6               	clrf	i2c_setDataCompleteCallback@p
 17400  0D1C  318C  2471  318D   	fcall	_i2c_setDataCompleteCallback
 17401  0D1F                     i1l5669:	
 17402                           
 17403                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
 17404  0D1F  3002               	movlw	2
 17405  0D20                     i1l397:	
 17406  0D20  0008               	return
 17407  0D21                     __end_of_rd1RegCompleteHandler:	
 17408                           
 17409                           	psect	text72
 17410  0CFD                     __ptext72:	
 17411 ;; *************** function _wr1RegCompleteHandler *****************
 17412 ;; Defined at:
 17413 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17414 ;; Parameters:    Size  Location     Type
 17415 ;;  p               1    6[COMMON] PTR void 
 17416 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17417 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17418 ;; Auto vars:     Size  Location     Type
 17419 ;;		None
 17420 ;; Return value:  Size  Location     Type
 17421 ;;                  1    wreg      enum E358
 17422 ;; Registers used:
 17423 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17424 ;; Tracked objects:
 17425 ;;		On entry : 0/0
 17426 ;;		On exit  : 0/0
 17427 ;;		Unchanged: 0/0
 17428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17429 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17432 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17433 ;;Total ram usage:        1 bytes
 17434 ;; Hardware stack levels used:    1
 17435 ;; Hardware stack levels required when called:    2
 17436 ;; This function calls:
 17437 ;;		_i2c_setBuffer
 17438 ;;		_i2c_setDataCompleteCallback
 17439 ;; This function is called by:
 17440 ;;		_i2c_write1ByteRegister
 17441 ;;		_do_I2C_DO_ADDRESS_NACK
 17442 ;;		_do_I2C_TX
 17443 ;;		_do_I2C_RX
 17444 ;;		_do_I2C_TX_EMPTY
 17445 ;; This function uses a non-reentrant model
 17446 ;;
 17447                           
 17448                           
 17449                           ;psect for function _wr1RegCompleteHandler
 17450  0CFD                     _wr1RegCompleteHandler:	
 17451  0CFD                     i1l5657:	
 17452                           ;incstack = 0
 17453                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17454                           
 17455                           
 17456                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
 17457  0CFD  3001               	movlw	1
 17458  0CFE  00F0               	movwf	i2c_setBuffer@bufferSize
 17459  0CFF  3000               	movlw	0
 17460  0D00  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17461  0D01  0876               	movf	wr1RegCompleteHandler@p,w
 17462  0D02  318C  24BA  318C   	fcall	_i2c_setBuffer
 17463  0D05                     i1l5659:	
 17464                           
 17465                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 17466  0D05  3000               	movlw	0
 17467  0D06  0020               	movlb	0	; select bank0
 17468  0D07  00C4               	movwf	i2c_setDataCompleteCallback@cb
 17469  0D08  00C5               	movwf	i2c_setDataCompleteCallback@cb+1
 17470  0D09  01C6               	clrf	i2c_setDataCompleteCallback@p
 17471  0D0A  318C  2471  318C   	fcall	_i2c_setDataCompleteCallback
 17472  0D0D                     i1l5661:	
 17473                           
 17474                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
 17475  0D0D  3004               	movlw	4
 17476  0D0E                     i1l376:	
 17477  0D0E  0008               	return
 17478  0D0F                     __end_of_wr1RegCompleteHandler:	
 17479                           
 17480                           	psect	text73
 17481  0002                     __ptext73:	
 17482 ;; *************** function _i2c_restartWrite *****************
 17483 ;; Defined at:
 17484 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 17485 ;; Parameters:    Size  Location     Type
 17486 ;;  p               1    6[COMMON] PTR void 
 17487 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17488 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17489 ;; Auto vars:     Size  Location     Type
 17490 ;;		None
 17491 ;; Return value:  Size  Location     Type
 17492 ;;                  1    wreg      enum E358
 17493 ;; Registers used:
 17494 ;;		wreg
 17495 ;; Tracked objects:
 17496 ;;		On entry : 0/0
 17497 ;;		On exit  : 0/0
 17498 ;;		Unchanged: 0/0
 17499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17500 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17503 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17504 ;;Total ram usage:        1 bytes
 17505 ;; Hardware stack levels used:    1
 17506 ;; This function calls:
 17507 ;;		Nothing
 17508 ;; This function is called by:
 17509 ;;		_i2c_write1ByteRegister
 17510 ;;		_i2c_writeNBytes
 17511 ;;		_i2c_read1ByteRegister
 17512 ;;		_i2c_read2ByteRegister
 17513 ;;		_i2c_write2ByteRegister
 17514 ;;		_i2c_readDataBlock
 17515 ;;		_do_I2C_DO_ADDRESS_NACK
 17516 ;;		_do_I2C_TX
 17517 ;;		_do_I2C_RX
 17518 ;;		_do_I2C_TX_EMPTY
 17519 ;; This function uses a non-reentrant model
 17520 ;;
 17521                           
 17522                           
 17523                           ;psect for function _i2c_restartWrite
 17524  0002                     _i2c_restartWrite:	
 17525  0002                     i1l4181:	
 17526                           ;incstack = 0
 17527                           ; Regs used in _i2c_restartWrite: [wreg]
 17528                           
 17529                           
 17530                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
 17531  0002  3003               	movlw	3
 17532  0003                     i1l463:	
 17533  0003  0008               	return
 17534  0004                     __end_of_i2c_restartWrite:	
 17535                           
 17536                           	psect	text74
 17537  0B43                     __ptext74:	
 17538 ;; *************** function _returnReset *****************
 17539 ;; Defined at:
 17540 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 17541 ;; Parameters:    Size  Location     Type
 17542 ;;  p               1    6[COMMON] PTR void 
 17543 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17544 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17545 ;; Auto vars:     Size  Location     Type
 17546 ;;		None
 17547 ;; Return value:  Size  Location     Type
 17548 ;;                  1    wreg      enum E12568
 17549 ;; Registers used:
 17550 ;;		wreg
 17551 ;; Tracked objects:
 17552 ;;		On entry : 0/0
 17553 ;;		On exit  : 0/0
 17554 ;;		Unchanged: 0/0
 17555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17556 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17559 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17560 ;;Total ram usage:        1 bytes
 17561 ;; Hardware stack levels used:    1
 17562 ;; This function calls:
 17563 ;;		Nothing
 17564 ;; This function is called by:
 17565 ;;		_i2c_open
 17566 ;;		_do_I2C_DO_ADDRESS_NACK
 17567 ;;		_do_I2C_TX
 17568 ;;		_do_I2C_RX
 17569 ;;		_do_I2C_TX_EMPTY
 17570 ;; This function uses a non-reentrant model
 17571 ;;
 17572                           
 17573                           
 17574                           ;psect for function _returnReset
 17575  0B43                     _returnReset:	
 17576  0B43                     i1l4139:	
 17577                           ;incstack = 0
 17578                           ; Regs used in _returnReset: [wreg]
 17579                           
 17580                           
 17581                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 17582  0B43  3005               	movlw	5
 17583  0B44                     i1l352:	
 17584  0B44  0008               	return
 17585  0B45                     __end_of_returnReset:	
 17586                           
 17587                           	psect	text75
 17588  0B41                     __ptext75:	
 17589 ;; *************** function _returnStop *****************
 17590 ;; Defined at:
 17591 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 17592 ;; Parameters:    Size  Location     Type
 17593 ;;  p               1    6[COMMON] PTR void 
 17594 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17595 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17596 ;; Auto vars:     Size  Location     Type
 17597 ;;		None
 17598 ;; Return value:  Size  Location     Type
 17599 ;;                  1    wreg      enum E12568
 17600 ;; Registers used:
 17601 ;;		wreg
 17602 ;; Tracked objects:
 17603 ;;		On entry : 0/0
 17604 ;;		On exit  : 0/0
 17605 ;;		Unchanged: 0/0
 17606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17607 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17610 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17611 ;;Total ram usage:        1 bytes
 17612 ;; Hardware stack levels used:    1
 17613 ;; This function calls:
 17614 ;;		Nothing
 17615 ;; This function is called by:
 17616 ;;		_setCallBack
 17617 ;;		_i2c_open
 17618 ;;		_do_I2C_DO_ADDRESS_NACK
 17619 ;;		_do_I2C_TX
 17620 ;;		_do_I2C_RX
 17621 ;;		_do_I2C_TX_EMPTY
 17622 ;; This function uses a non-reentrant model
 17623 ;;
 17624                           
 17625                           
 17626                           ;psect for function _returnStop
 17627  0B41                     _returnStop:	
 17628  0B41                     i1l4135:	
 17629                           ;incstack = 0
 17630                           ; Regs used in _returnStop: [wreg]
 17631                           
 17632                           
 17633                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
 17634  0B41  3001               	movlw	1
 17635  0B42                     i1l349:	
 17636  0B42  0008               	return
 17637  0B43                     __end_of_returnStop:	
 17638                           
 17639                           	psect	text76
 17640  0CEB                     __ptext76:	
 17641 ;; *************** function _wr2RegCompleteHandler *****************
 17642 ;; Defined at:
 17643 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17644 ;; Parameters:    Size  Location     Type
 17645 ;;  p               1    6[COMMON] PTR void 
 17646 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17647 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17648 ;; Auto vars:     Size  Location     Type
 17649 ;;		None
 17650 ;; Return value:  Size  Location     Type
 17651 ;;                  1    wreg      enum E358
 17652 ;; Registers used:
 17653 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17654 ;; Tracked objects:
 17655 ;;		On entry : 0/0
 17656 ;;		On exit  : 0/0
 17657 ;;		Unchanged: 0/0
 17658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17659 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17662 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17663 ;;Total ram usage:        1 bytes
 17664 ;; Hardware stack levels used:    1
 17665 ;; Hardware stack levels required when called:    2
 17666 ;; This function calls:
 17667 ;;		_i2c_setBuffer
 17668 ;;		_i2c_setDataCompleteCallback
 17669 ;; This function is called by:
 17670 ;;		_i2c_write2ByteRegister
 17671 ;;		_do_I2C_DO_ADDRESS_NACK
 17672 ;;		_do_I2C_TX
 17673 ;;		_do_I2C_RX
 17674 ;;		_do_I2C_TX_EMPTY
 17675 ;; This function uses a non-reentrant model
 17676 ;;
 17677                           
 17678                           
 17679                           ;psect for function _wr2RegCompleteHandler
 17680  0CEB                     _wr2RegCompleteHandler:	
 17681  0CEB                     i1l5681:	
 17682                           ;incstack = 0
 17683                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17684                           
 17685                           
 17686                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
 17687  0CEB  3002               	movlw	2
 17688  0CEC  00F0               	movwf	i2c_setBuffer@bufferSize
 17689  0CED  3000               	movlw	0
 17690  0CEE  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17691  0CEF  0876               	movf	wr2RegCompleteHandler@p,w
 17692  0CF0  318C  24BA  318C   	fcall	_i2c_setBuffer
 17693  0CF3                     i1l5683:	
 17694                           
 17695                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 17696  0CF3  3000               	movlw	0
 17697  0CF4  0020               	movlb	0	; select bank0
 17698  0CF5  00C4               	movwf	i2c_setDataCompleteCallback@cb
 17699  0CF6  00C5               	movwf	i2c_setDataCompleteCallback@cb+1
 17700  0CF7  01C6               	clrf	i2c_setDataCompleteCallback@p
 17701  0CF8  318C  2471  318C   	fcall	_i2c_setDataCompleteCallback
 17702  0CFB                     i1l5685:	
 17703                           
 17704                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
 17705  0CFB  3004               	movlw	4
 17706  0CFC                     i1l424:	
 17707  0CFC  0008               	return
 17708  0CFD                     __end_of_wr2RegCompleteHandler:	
 17709                           
 17710                           	psect	text77
 17711  0C71                     __ptext77:	
 17712 ;; *************** function _i2c_setDataCompleteCallback *****************
 17713 ;; Defined at:
 17714 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 17715 ;; Parameters:    Size  Location     Type
 17716 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
 17717 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 17718 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 17719 ;;  p               1    2[BANK0 ] PTR void 
 17720 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17721 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17722 ;; Auto vars:     Size  Location     Type
 17723 ;;		None
 17724 ;; Return value:  Size  Location     Type
 17725 ;;                  1    wreg      void 
 17726 ;; Registers used:
 17727 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17728 ;; Tracked objects:
 17729 ;;		On entry : 0/0
 17730 ;;		On exit  : 0/0
 17731 ;;		Unchanged: 0/0
 17732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17733 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17735 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17736 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17737 ;;Total ram usage:        4 bytes
 17738 ;; Hardware stack levels used:    1
 17739 ;; Hardware stack levels required when called:    1
 17740 ;; This function calls:
 17741 ;;		_setCallBack
 17742 ;; This function is called by:
 17743 ;;		_wr1RegCompleteHandler
 17744 ;;		_rd1RegCompleteHandler
 17745 ;;		_rd2RegCompleteHandler
 17746 ;;		_wr2RegCompleteHandler
 17747 ;;		_rdBlkRegCompleteHandler
 17748 ;;		_i2c_write1ByteRegister
 17749 ;;		_i2c_read1ByteRegister
 17750 ;;		_i2c_read2ByteRegister
 17751 ;;		_i2c_write2ByteRegister
 17752 ;;		_i2c_readDataBlock
 17753 ;; This function uses a non-reentrant model
 17754 ;;
 17755                           
 17756                           
 17757                           ;psect for function _i2c_setDataCompleteCallback
 17758  0C71                     _i2c_setDataCompleteCallback:	
 17759  0C71                     i1l5647:	
 17760                           ;incstack = 0
 17761                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 17762                           
 17763                           
 17764                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
 17765  0C71  0020               	movlb	0	; select bank0
 17766  0C72  0845               	movf	i2c_setDataCompleteCallback@cb+1,w
 17767  0C73  00F1               	movwf	setCallBack@cb+1
 17768  0C74  0844               	movf	i2c_setDataCompleteCallback@cb,w
 17769  0C75  00F0               	movwf	setCallBack@cb
 17770  0C76  0846               	movf	i2c_setDataCompleteCallback@p,w
 17771  0C77  00F5               	movwf	??_i2c_setDataCompleteCallback
 17772  0C78  0875               	movf	??_i2c_setDataCompleteCallback,w
 17773  0C79  00F2               	movwf	setCallBack@p
 17774  0C7A  3000               	movlw	0
 17775  0C7B  318E  26DC  318C   	fcall	_setCallBack
 17776  0C7E                     i1l206:	
 17777  0C7E  0008               	return
 17778  0C7F                     __end_of_i2c_setDataCompleteCallback:	
 17779                           
 17780                           	psect	text78
 17781  0EDC                     __ptext78:	
 17782 ;; *************** function _setCallBack *****************
 17783 ;; Defined at:
 17784 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 17785 ;; Parameters:    Size  Location     Type
 17786 ;;  idx             1    wreg     enum E12740
 17787 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 17788 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 17789 ;;		 -> i2c_restartWrite(1), wr1RegCompleteHandler(1), Absolute function(1), 
 17790 ;;  p               1    2[COMMON] PTR void 
 17791 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17792 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17793 ;; Auto vars:     Size  Location     Type
 17794 ;;  idx             1    4[COMMON] enum E12740
 17795 ;; Return value:  Size  Location     Type
 17796 ;;                  1    wreg      void 
 17797 ;; Registers used:
 17798 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17799 ;; Tracked objects:
 17800 ;;		On entry : 0/0
 17801 ;;		On exit  : 0/0
 17802 ;;		Unchanged: 0/0
 17803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17804 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17806 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17807 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17808 ;;Total ram usage:        5 bytes
 17809 ;; Hardware stack levels used:    1
 17810 ;; This function calls:
 17811 ;;		Nothing
 17812 ;; This function is called by:
 17813 ;;		_i2c_setDataCompleteCallback
 17814 ;;		_i2c_setWriteCollisionCallback
 17815 ;;		_i2c_setAddressNACKCallback
 17816 ;;		_i2c_setDataNACKCallback
 17817 ;;		_i2c_setTimeOutCallback
 17818 ;; This function uses a non-reentrant model
 17819 ;;
 17820                           
 17821                           
 17822                           ;psect for function _setCallBack
 17823  0EDC                     _setCallBack:	
 17824                           
 17825                           ;incstack = 0
 17826                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 17827                           ;setCallBack@idx stored from wreg
 17828  0EDC  00F4               	movwf	setCallBack@idx
 17829  0EDD                     i1l4055:	
 17830                           
 17831                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
 17832  0EDD  0870               	movf	setCallBack@cb,w
 17833  0EDE  0471               	iorwf	setCallBack@cb+1,w
 17834  0EDF  1903               	btfsc	3,2
 17835  0EE0  2EE2               	goto	u182_21
 17836  0EE1  2EE3               	goto	u182_20
 17837  0EE2                     u182_21:	
 17838  0EE2  2EF4               	goto	i1l4059
 17839  0EE3                     u182_20:	
 17840  0EE3                     i1l4057:	
 17841                           
 17842                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
 17843  0EE3  3574               	lslf	setCallBack@idx,w
 17844  0EE4  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 17845  0EE5  0086               	movwf	6
 17846  0EE6  0187               	clrf	7
 17847  0EE7  0870               	movf	setCallBack@cb,w
 17848  0EE8  3FC0               	movwi [0]fsr1
 17849  0EE9  0871               	movf	setCallBack@cb+1,w
 17850  0EEA  3FC1               	movwi [1]fsr1
 17851                           
 17852                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
 17853  0EEB  0872               	movf	setCallBack@p,w
 17854  0EEC  00F3               	movwf	??_setCallBack
 17855  0EED  0874               	movf	setCallBack@idx,w
 17856  0EEE  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 17857  0EEF  0086               	movwf	6
 17858  0EF0  0187               	clrf	7
 17859  0EF1  0873               	movf	??_setCallBack,w
 17860  0EF2  0081               	movwf	1
 17861                           
 17862                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
 17863  0EF3  2F01               	goto	i1l357
 17864  0EF4                     i1l4059:	
 17865                           
 17866                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
 17867  0EF4  3574               	lslf	setCallBack@idx,w
 17868  0EF5  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 17869  0EF6  0086               	movwf	6
 17870  0EF7  0187               	clrf	7
 17871  0EF8  3041               	movlw	low _returnStop
 17872  0EF9  3FC0               	movwi [0]fsr1
 17873  0EFA  300B               	movlw	high _returnStop
 17874  0EFB  3FC1               	movwi [1]fsr1
 17875                           
 17876                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
 17877  0EFC  0874               	movf	setCallBack@idx,w
 17878  0EFD  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 17879  0EFE  0086               	movwf	6
 17880  0EFF  0187               	clrf	7
 17881  0F00  0181               	clrf	1
 17882  0F01                     i1l357:	
 17883  0F01  0008               	return
 17884  0F02                     __end_of_setCallBack:	
 17885                           
 17886                           	psect	text79
 17887  0CBA                     __ptext79:	
 17888 ;; *************** function _i2c_setBuffer *****************
 17889 ;; Defined at:
 17890 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 17891 ;; Parameters:    Size  Location     Type
 17892 ;;  buffer          1    wreg     PTR void 
 17893 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 17894 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 17895 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 17896 ;;  bufferSize      2    0[COMMON] unsigned int 
 17897 ;; Auto vars:     Size  Location     Type
 17898 ;;  buffer          1    3[COMMON] PTR void 
 17899 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 17900 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 17901 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 17902 ;; Return value:  Size  Location     Type
 17903 ;;                  1    wreg      void 
 17904 ;; Registers used:
 17905 ;;		wreg
 17906 ;; Tracked objects:
 17907 ;;		On entry : 0/0
 17908 ;;		On exit  : 0/0
 17909 ;;		Unchanged: 0/0
 17910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17911 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17912 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17913 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17914 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17915 ;;Total ram usage:        4 bytes
 17916 ;; Hardware stack levels used:    1
 17917 ;; This function calls:
 17918 ;;		Nothing
 17919 ;; This function is called by:
 17920 ;;		_wr1RegCompleteHandler
 17921 ;;		_rd1RegCompleteHandler
 17922 ;;		_rd2RegCompleteHandler
 17923 ;;		_wr2RegCompleteHandler
 17924 ;;		_rdBlkRegCompleteHandler
 17925 ;;		_i2c_write1ByteRegister
 17926 ;;		_i2c_writeNBytes
 17927 ;;		_i2c_read1ByteRegister
 17928 ;;		_i2c_read2ByteRegister
 17929 ;;		_i2c_write2ByteRegister
 17930 ;;		_i2c_readDataBlock
 17931 ;;		_i2c_readNBytes
 17932 ;; This function uses a non-reentrant model
 17933 ;;
 17934                           
 17935                           
 17936                           ;psect for function _i2c_setBuffer
 17937  0CBA                     _i2c_setBuffer:	
 17938                           
 17939                           ;incstack = 0
 17940                           ; Regs used in _i2c_setBuffer: [wreg]
 17941                           ;i2c_setBuffer@buffer stored from wreg
 17942  0CBA  00F3               	movwf	i2c_setBuffer@buffer
 17943  0CBB                     i1l4063:	
 17944                           
 17945                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
 17946  0CBB  0021               	movlb	1	; select bank1
 17947  0CBC  1D20               	btfss	_i2c_status^(0+128),2
 17948  0CBD  2CBF               	goto	u183_21
 17949  0CBE  2CC0               	goto	u183_20
 17950  0CBF                     u183_21:	
 17951  0CBF  2CC9               	goto	i1l236
 17952  0CC0                     u183_20:	
 17953  0CC0                     i1l4065:	
 17954                           
 17955                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
 17956  0CC0  0873               	movf	i2c_setBuffer@buffer,w
 17957  0CC1  00F2               	movwf	??_i2c_setBuffer
 17958  0CC2  0872               	movf	??_i2c_setBuffer,w
 17959  0CC3  00A2               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 17960                           
 17961                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
 17962  0CC4  0871               	movf	i2c_setBuffer@bufferSize+1,w
 17963  0CC5  00A4               	movwf	((_i2c_status+1)^(0+128)+3)
 17964  0CC6  0870               	movf	i2c_setBuffer@bufferSize,w
 17965  0CC7  00A3               	movwf	(_i2c_status^(0+128)+3)
 17966  0CC8                     i1l4067:	
 17967                           
 17968                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
 17969  0CC8  1120               	bcf	_i2c_status^(0+128),2
 17970  0CC9                     i1l236:	
 17971  0CC9  0008               	return
 17972  0CCA                     __end_of_i2c_setBuffer:	
 17973                           
 17974                           	psect	text80
 17975  0B48                     __ptext80:	
 17976 ;; *************** function _i2c1_driver_stop *****************
 17977 ;; Defined at:
 17978 ;;		line 157 in file "mcc_generated_files/i2c1_driver.c"
 17979 ;; Parameters:    Size  Location     Type
 17980 ;;		None
 17981 ;; Auto vars:     Size  Location     Type
 17982 ;;		None
 17983 ;; Return value:  Size  Location     Type
 17984 ;;                  1    wreg      void 
 17985 ;; Registers used:
 17986 ;;		None
 17987 ;; Tracked objects:
 17988 ;;		On entry : 0/0
 17989 ;;		On exit  : 0/0
 17990 ;;		Unchanged: 0/0
 17991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17996 ;;Total ram usage:        0 bytes
 17997 ;; Hardware stack levels used:    1
 17998 ;; This function calls:
 17999 ;;		Nothing
 18000 ;; This function is called by:
 18001 ;;		_do_I2C_SEND_STOP
 18002 ;; This function uses a non-reentrant model
 18003 ;;
 18004                           
 18005                           
 18006                           ;psect for function _i2c1_driver_stop
 18007  0B48                     _i2c1_driver_stop:	
 18008  0B48                     i1l4071:	
 18009                           ;incstack = 0
 18010                           ; Regs used in _i2c1_driver_stop: []
 18011                           
 18012                           
 18013                           ;mcc_generated_files/i2c1_driver.c: 159:     SSP1CON2bits.PEN = 1;
 18014  0B48  0023               	movlb	3	; select bank3
 18015  0B49  1511               	bsf	17,2	;volatile
 18016  0B4A                     i1l790:	
 18017  0B4A  0008               	return
 18018  0B4B                     __end_of_i2c1_driver_stop:	
 18019                           
 18020                           	psect	text81
 18021  0B45                     __ptext81:	
 18022 ;; *************** function _i2c1_driver_restart *****************
 18023 ;; Defined at:
 18024 ;;		line 152 in file "mcc_generated_files/i2c1_driver.c"
 18025 ;; Parameters:    Size  Location     Type
 18026 ;;		None
 18027 ;; Auto vars:     Size  Location     Type
 18028 ;;		None
 18029 ;; Return value:  Size  Location     Type
 18030 ;;                  1    wreg      void 
 18031 ;; Registers used:
 18032 ;;		None
 18033 ;; Tracked objects:
 18034 ;;		On entry : 0/0
 18035 ;;		On exit  : 0/0
 18036 ;;		Unchanged: 0/0
 18037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18042 ;;Total ram usage:        0 bytes
 18043 ;; Hardware stack levels used:    1
 18044 ;; This function calls:
 18045 ;;		Nothing
 18046 ;; This function is called by:
 18047 ;;		_do_I2C_SEND_RESTART_READ
 18048 ;;		_do_I2C_SEND_RESTART_WRITE
 18049 ;;		_do_I2C_SEND_RESTART
 18050 ;; This function uses a non-reentrant model
 18051 ;;
 18052                           
 18053                           
 18054                           ;psect for function _i2c1_driver_restart
 18055  0B45                     _i2c1_driver_restart:	
 18056  0B45                     i1l4069:	
 18057                           ;incstack = 0
 18058                           ; Regs used in _i2c1_driver_restart: []
 18059                           
 18060                           
 18061                           ;mcc_generated_files/i2c1_driver.c: 154:     SSP1CON2bits.RSEN = 1;
 18062  0B45  0023               	movlb	3	; select bank3
 18063  0B46  1491               	bsf	17,1	;volatile
 18064  0B47                     i1l787:	
 18065  0B47  0008               	return
 18066  0B48                     __end_of_i2c1_driver_restart:	
 18067                           
 18068                           	psect	text82
 18069  0B5A                     __ptext82:	
 18070 ;; *************** function _i2c1_driver_sendACK *****************
 18071 ;; Defined at:
 18072 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
 18073 ;; Parameters:    Size  Location     Type
 18074 ;;		None
 18075 ;; Auto vars:     Size  Location     Type
 18076 ;;		None
 18077 ;; Return value:  Size  Location     Type
 18078 ;;                  1    wreg      void 
 18079 ;; Registers used:
 18080 ;;		None
 18081 ;; Tracked objects:
 18082 ;;		On entry : 0/0
 18083 ;;		On exit  : 0/0
 18084 ;;		Unchanged: 0/0
 18085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18090 ;;Total ram usage:        0 bytes
 18091 ;; Hardware stack levels used:    1
 18092 ;; This function calls:
 18093 ;;		Nothing
 18094 ;; This function is called by:
 18095 ;;		_do_I2C_DO_ACK
 18096 ;;		_do_I2C_RX
 18097 ;; This function uses a non-reentrant model
 18098 ;;
 18099                           
 18100                           
 18101                           ;psect for function _i2c1_driver_sendACK
 18102  0B5A                     _i2c1_driver_sendACK:	
 18103  0B5A                     i1l4111:	
 18104                           ;incstack = 0
 18105                           ; Regs used in _i2c1_driver_sendACK: []
 18106                           
 18107                           
 18108                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKDT = 0;
 18109  0B5A  0023               	movlb	3	; select bank3
 18110  0B5B  1291               	bcf	17,5	;volatile
 18111                           
 18112                           ;mcc_generated_files/i2c1_driver.c: 200:     SSP1CON2bits.ACKEN = 1;
 18113  0B5C  1611               	bsf	17,4	;volatile
 18114  0B5D                     i1l814:	
 18115  0B5D  0008               	return
 18116  0B5E                     __end_of_i2c1_driver_sendACK:	
 18117                           
 18118                           	psect	text83
 18119  0DA1                     __ptext83:	
 18120 ;; *************** function _TMR1_ISR *****************
 18121 ;; Defined at:
 18122 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 18123 ;; Parameters:    Size  Location     Type
 18124 ;;		None
 18125 ;; Auto vars:     Size  Location     Type
 18126 ;;		None
 18127 ;; Return value:  Size  Location     Type
 18128 ;;                  1    wreg      void 
 18129 ;; Registers used:
 18130 ;;		wreg, status,2, status,0, pclath, cstack
 18131 ;; Tracked objects:
 18132 ;;		On entry : 0/0
 18133 ;;		On exit  : 0/0
 18134 ;;		Unchanged: 0/0
 18135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18140 ;;Total ram usage:        0 bytes
 18141 ;; Hardware stack levels used:    1
 18142 ;; Hardware stack levels required when called:    2
 18143 ;; This function calls:
 18144 ;;		Absolute function
 18145 ;;		_TMR1_DefaultInterruptHandler
 18146 ;;		_TMR1_WriteTimer
 18147 ;;		_h_clock
 18148 ;; This function is called by:
 18149 ;;		_INTERRUPT_InterruptManager
 18150 ;; This function uses a non-reentrant model
 18151 ;;
 18152                           
 18153                           
 18154                           ;psect for function _TMR1_ISR
 18155  0DA1                     _TMR1_ISR:	
 18156  0DA1                     i1l4891:	
 18157                           ;incstack = 0
 18158                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 18159                           
 18160                           
 18161                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 18162  0DA1  002E               	movlb	14	; select bank14
 18163  0DA2  1010               	bcf	16,0	;volatile
 18164  0DA3                     i1l4893:	
 18165                           
 18166                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 18167  0DA3  0020               	movlb	0	; select bank0
 18168  0DA4  0827               	movf	_timer1ReloadVal+1,w	;volatile
 18169  0DA5  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 18170  0DA6  0826               	movf	_timer1ReloadVal,w	;volatile
 18171  0DA7  00F0               	movwf	TMR1_WriteTimer@timerVal
 18172  0DA8  318C  24DA  318D   	fcall	_TMR1_WriteTimer
 18173  0DAB                     i1l4895:	
 18174                           
 18175                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 18176  0DAB  0020               	movlb	0	; select bank0
 18177  0DAC  0824               	movf	_TMR1_InterruptHandler,w
 18178  0DAD  0425               	iorwf	_TMR1_InterruptHandler+1,w
 18179  0DAE  1903               	btfsc	3,2
 18180  0DAF  2DB1               	goto	u265_21
 18181  0DB0  2DB2               	goto	u265_20
 18182  0DB1                     u265_21:	
 18183  0DB1  2DB7               	goto	i1l524
 18184  0DB2                     u265_20:	
 18185  0DB2                     i1l4897:	
 18186                           
 18187                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 18188  0DB2  0825               	movf	_TMR1_InterruptHandler+1,w
 18189  0DB3  008A               	movwf	10
 18190  0DB4  0824               	movf	_TMR1_InterruptHandler,w
 18191  0DB5  000A               	callw
 18192  0DB6  318D               	pagesel	$
 18193  0DB7                     i1l524:	
 18194  0DB7  0008               	return
 18195  0DB8                     __end_of_TMR1_ISR:	
 18196                           
 18197                           	psect	text84
 18198  0B3F                     __ptext84:	
 18199 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 18200 ;; Defined at:
 18201 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 18202 ;; Parameters:    Size  Location     Type
 18203 ;;		None
 18204 ;; Auto vars:     Size  Location     Type
 18205 ;;		None
 18206 ;; Return value:  Size  Location     Type
 18207 ;;                  1    wreg      void 
 18208 ;; Registers used:
 18209 ;;		None
 18210 ;; Tracked objects:
 18211 ;;		On entry : 0/0
 18212 ;;		On exit  : 0/0
 18213 ;;		Unchanged: 0/0
 18214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18219 ;;Total ram usage:        0 bytes
 18220 ;; Hardware stack levels used:    1
 18221 ;; This function calls:
 18222 ;;		Nothing
 18223 ;; This function is called by:
 18224 ;;		_TMR1_Initialize
 18225 ;;		_TMR1_ISR
 18226 ;; This function uses a non-reentrant model
 18227 ;;
 18228                           
 18229                           
 18230                           ;psect for function _TMR1_DefaultInterruptHandler
 18231  0B3F                     _TMR1_DefaultInterruptHandler:	
 18232  0B3F                     i1l530:	
 18233                           ;incstack = 0
 18234                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 18235                           
 18236  0B3F  0008               	return
 18237  0B40                     __end_of_TMR1_DefaultInterruptHandler:	
 18238                           
 18239                           	psect	text85
 18240  0D8A                     __ptext85:	
 18241 ;; *************** function _h_clock *****************
 18242 ;; Defined at:
 18243 ;;		line 271 in file "main.c"
 18244 ;; Parameters:    Size  Location     Type
 18245 ;;		None
 18246 ;; Auto vars:     Size  Location     Type
 18247 ;;		None
 18248 ;; Return value:  Size  Location     Type
 18249 ;;                  1    wreg      void 
 18250 ;; Registers used:
 18251 ;;		wreg, status,2, status,0, pclath, cstack
 18252 ;; Tracked objects:
 18253 ;;		On entry : 0/0
 18254 ;;		On exit  : 0/0
 18255 ;;		Unchanged: 0/0
 18256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18261 ;;Total ram usage:        0 bytes
 18262 ;; Hardware stack levels used:    1
 18263 ;; Hardware stack levels required when called:    1
 18264 ;; This function calls:
 18265 ;;		_update_clock
 18266 ;; This function is called by:
 18267 ;;		_main
 18268 ;;		_TMR1_ISR
 18269 ;; This function uses a non-reentrant model
 18270 ;;
 18271                           
 18272                           
 18273                           ;psect for function _h_clock
 18274  0D8A                     _h_clock:	
 18275  0D8A                     i1l1448:	
 18276                           ;incstack = 0
 18277                           ; Regs used in _h_clock: [wreg+status,2+status,0+pclath+cstack]
 18278                           ;main.c: 273:     do { LATAbits.LATA7 = ~LATAbits.LATA7; } while(0);
 18279                           
 18280  0D8A                     i1l4665:	
 18281  0D8A  1003               	clrc
 18282  0D8B  0020               	movlb	0	; select bank0
 18283  0D8C  1F96               	btfss	22,7	;volatile
 18284  0D8D  1403               	setc
 18285  0D8E  1803               	btfsc	3,0
 18286  0D8F  2D91               	goto	u215_21
 18287  0D90  2D94               	goto	u215_20
 18288  0D91                     u215_21:	
 18289  0D91  0020               	movlb	0	; select bank0
 18290  0D92  1796               	bsf	22,7	;volatile
 18291  0D93  2D96               	goto	u216_24
 18292  0D94                     u215_20:	
 18293  0D94  0020               	movlb	0	; select bank0
 18294  0D95  1396               	bcf	22,7	;volatile
 18295  0D96                     u216_24:	
 18296  0D96                     i1l4667:	
 18297                           
 18298                           ;main.c: 274:     if(!half) {
 18299  0D96  1A77               	btfsc	_half/(0+8),_half& (0+7)	;volatile
 18300  0D97  2D99               	goto	u217_21
 18301  0D98  2D9A               	goto	u217_20
 18302  0D99                     u217_21:	
 18303  0D99  2D9F               	goto	i1l1450
 18304  0D9A                     u217_20:	
 18305  0D9A                     i1l4669:	
 18306                           
 18307                           ;main.c: 275:         update_clock();
 18308  0D9A  318E  2694  318D   	fcall	_update_clock
 18309  0D9D                     i1l4671:	
 18310                           
 18311                           ;main.c: 276:         half = 1;
 18312  0D9D  1677               	bsf	_half/(0+8),_half& (0+7)	;volatile
 18313                           
 18314                           ;main.c: 277:     }
 18315  0D9E  2DA0               	goto	i1l1452
 18316  0D9F                     i1l1450:	
 18317                           ;main.c: 278:     else {
 18318                           
 18319                           
 18320                           ;main.c: 279:         half = 0;
 18321  0D9F  1277               	bcf	_half/(0+8),_half& (0+7)	;volatile
 18322  0DA0                     i1l1452:	
 18323  0DA0  0008               	return
 18324  0DA1                     __end_of_h_clock:	
 18325                           
 18326                           	psect	text86
 18327  0E94                     __ptext86:	
 18328 ;; *************** function _update_clock *****************
 18329 ;; Defined at:
 18330 ;;		line 419 in file "main.c"
 18331 ;; Parameters:    Size  Location     Type
 18332 ;;		None
 18333 ;; Auto vars:     Size  Location     Type
 18334 ;;		None
 18335 ;; Return value:  Size  Location     Type
 18336 ;;                  1    wreg      void 
 18337 ;; Registers used:
 18338 ;;		wreg, status,2, status,0
 18339 ;; Tracked objects:
 18340 ;;		On entry : 0/0
 18341 ;;		On exit  : 0/0
 18342 ;;		Unchanged: 0/0
 18343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18346 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18347 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18348 ;;Total ram usage:        1 bytes
 18349 ;; Hardware stack levels used:    1
 18350 ;; This function calls:
 18351 ;;		Nothing
 18352 ;; This function is called by:
 18353 ;;		_h_clock
 18354 ;; This function uses a non-reentrant model
 18355 ;;
 18356                           
 18357                           
 18358                           ;psect for function _update_clock
 18359  0E94                     _update_clock:	
 18360  0E94                     i1l4207:	
 18361                           ;incstack = 0
 18362                           ; Regs used in _update_clock: [wreg+status,2+status,0]
 18363                           
 18364                           
 18365                           ;main.c: 420:     seg++;
 18366  0E94  3001               	movlw	1
 18367  0E95  00F0               	movwf	??_update_clock
 18368  0E96  0870               	movf	??_update_clock,w
 18369  0E97  0020               	movlb	0	; select bank0
 18370  0E98  07BA               	addwf	_seg,f	;volatile
 18371                           
 18372                           ;main.c: 421:     last5s++;
 18373  0E99  3001               	movlw	1
 18374  0E9A  00F0               	movwf	??_update_clock
 18375  0E9B  0870               	movf	??_update_clock,w
 18376  0E9C  07B9               	addwf	_last5s,f	;volatile
 18377  0E9D                     i1l4209:	
 18378                           
 18379                           ;main.c: 422:     if(seg >= 60) {
 18380  0E9D  303C               	movlw	60
 18381  0E9E  023A               	subwf	_seg,w	;volatile
 18382  0E9F  1C03               	skipc
 18383  0EA0  2EA2               	goto	u185_21
 18384  0EA1  2EA3               	goto	u185_20
 18385  0EA2                     u185_21:	
 18386  0EA2  2EB7               	goto	i1l1519
 18387  0EA3                     u185_20:	
 18388  0EA3                     i1l4211:	
 18389                           
 18390                           ;main.c: 423:         clkm++;
 18391  0EA3  3001               	movlw	1
 18392  0EA4  00F0               	movwf	??_update_clock
 18393  0EA5  0870               	movf	??_update_clock,w
 18394  0EA6  07BB               	addwf	_clkm,f	;volatile
 18395                           
 18396                           ;main.c: 424:         last1m++;
 18397  0EA7  3001               	movlw	1
 18398  0EA8  00F0               	movwf	??_update_clock
 18399  0EA9  0870               	movf	??_update_clock,w
 18400  0EAA  07B8               	addwf	_last1m,f	;volatile
 18401  0EAB                     i1l4213:	
 18402                           
 18403                           ;main.c: 425:         seg = 0;
 18404  0EAB  01BA               	clrf	_seg	;volatile
 18405  0EAC                     i1l4215:	
 18406                           
 18407                           ;main.c: 426:         if(clkm >= 60) {
 18408  0EAC  303C               	movlw	60
 18409  0EAD  023B               	subwf	_clkm,w	;volatile
 18410  0EAE  1C03               	skipc
 18411  0EAF  2EB1               	goto	u186_21
 18412  0EB0  2EB2               	goto	u186_20
 18413  0EB1                     u186_21:	
 18414  0EB1  2EB7               	goto	i1l1519
 18415  0EB2                     u186_20:	
 18416  0EB2                     i1l4217:	
 18417                           
 18418                           ;main.c: 427:             clkh++;
 18419  0EB2  3001               	movlw	1
 18420  0EB3  00F0               	movwf	??_update_clock
 18421  0EB4  0870               	movf	??_update_clock,w
 18422  0EB5  07BC               	addwf	_clkh,f	;volatile
 18423  0EB6                     i1l4219:	
 18424                           
 18425                           ;main.c: 428:             clkm = 0;
 18426  0EB6  01BB               	clrf	_clkm	;volatile
 18427  0EB7                     i1l1519:	
 18428  0EB7  0008               	return
 18429  0EB8                     __end_of_update_clock:	
 18430                           
 18431                           	psect	text87
 18432  0CDA                     __ptext87:	
 18433 ;; *************** function _TMR1_WriteTimer *****************
 18434 ;; Defined at:
 18435 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 18436 ;; Parameters:    Size  Location     Type
 18437 ;;  timerVal        2    0[COMMON] unsigned short 
 18438 ;; Auto vars:     Size  Location     Type
 18439 ;;		None
 18440 ;; Return value:  Size  Location     Type
 18441 ;;                  1    wreg      void 
 18442 ;; Registers used:
 18443 ;;		wreg, status,2
 18444 ;; Tracked objects:
 18445 ;;		On entry : 0/0
 18446 ;;		On exit  : 0/0
 18447 ;;		Unchanged: 0/0
 18448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18449 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18452 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18453 ;;Total ram usage:        2 bytes
 18454 ;; Hardware stack levels used:    1
 18455 ;; This function calls:
 18456 ;;		Nothing
 18457 ;; This function is called by:
 18458 ;;		_TMR1_ISR
 18459 ;;		_TMR1_Reload
 18460 ;; This function uses a non-reentrant model
 18461 ;;
 18462                           
 18463                           
 18464                           ;psect for function _TMR1_WriteTimer
 18465  0CDA                     _TMR1_WriteTimer:	
 18466  0CDA                     i1l4491:	
 18467                           ;incstack = 0
 18468                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 18469                           
 18470                           
 18471                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 18472  0CDA  0024               	movlb	4	; select bank4
 18473  0CDB  1D0E               	btfss	14,2	;volatile
 18474  0CDC  2CDE               	goto	u210_21
 18475  0CDD  2CDF               	goto	u210_20
 18476  0CDE                     u210_21:	
 18477  0CDE  2CE6               	goto	i1l4501
 18478  0CDF                     u210_20:	
 18479  0CDF                     i1l4493:	
 18480                           
 18481                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 18482  0CDF  100E               	bcf	14,0	;volatile
 18483  0CE0                     i1l4495:	
 18484                           
 18485                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 18486  0CE0  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 18487  0CE1  008D               	movwf	13	;volatile
 18488  0CE2                     i1l4497:	
 18489                           
 18490                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 18491  0CE2  0870               	movf	TMR1_WriteTimer@timerVal,w
 18492  0CE3  008C               	movwf	12	;volatile
 18493  0CE4                     i1l4499:	
 18494                           
 18495                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 18496  0CE4  140E               	bsf	14,0	;volatile
 18497                           
 18498                           ;mcc_generated_files/tmr1.c: 140:     }
 18499  0CE5  2CEA               	goto	i1l511
 18500  0CE6                     i1l4501:	
 18501                           
 18502                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 18503  0CE6  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 18504  0CE7  008D               	movwf	13	;volatile
 18505  0CE8                     i1l4503:	
 18506                           
 18507                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 18508  0CE8  0870               	movf	TMR1_WriteTimer@timerVal,w
 18509  0CE9  008C               	movwf	12	;volatile
 18510  0CEA                     i1l511:	
 18511  0CEA  0008               	return
 18512  0CEB                     __end_of_TMR1_WriteTimer:	
 18513                           
 18514                           	psect	text88
 18515  0C8D                     __ptext88:	
 18516 ;; *************** function _TMR0_ISR *****************
 18517 ;; Defined at:
 18518 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 18519 ;; Parameters:    Size  Location     Type
 18520 ;;		None
 18521 ;; Auto vars:     Size  Location     Type
 18522 ;;		None
 18523 ;; Return value:  Size  Location     Type
 18524 ;;                  1    wreg      void 
 18525 ;; Registers used:
 18526 ;;		wreg, status,2, status,0, pclath, cstack
 18527 ;; Tracked objects:
 18528 ;;		On entry : 0/0
 18529 ;;		On exit  : 0/0
 18530 ;;		Unchanged: 0/0
 18531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18536 ;;Total ram usage:        0 bytes
 18537 ;; Hardware stack levels used:    1
 18538 ;; Hardware stack levels required when called:    2
 18539 ;; This function calls:
 18540 ;;		Absolute function
 18541 ;;		_TMR0_DefaultInterruptHandler
 18542 ;;		_h_precisionclock
 18543 ;; This function is called by:
 18544 ;;		_INTERRUPT_InterruptManager
 18545 ;; This function uses a non-reentrant model
 18546 ;;
 18547                           
 18548                           
 18549                           ;psect for function _TMR0_ISR
 18550  0C8D                     _TMR0_ISR:	
 18551  0C8D                     i1l4903:	
 18552                           ;incstack = 0
 18553                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 18554                           
 18555                           
 18556                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 18557  0C8D  002E               	movlb	14	; select bank14
 18558  0C8E  128C               	bcf	12,5	;volatile
 18559  0C8F                     i1l4905:	
 18560                           
 18561                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 18562  0C8F  0020               	movlb	0	; select bank0
 18563  0C90  0820               	movf	_TMR0_InterruptHandler,w
 18564  0C91  0421               	iorwf	_TMR0_InterruptHandler+1,w
 18565  0C92  1903               	btfsc	3,2
 18566  0C93  2C95               	goto	u266_21
 18567  0C94  2C96               	goto	u266_20
 18568  0C95                     u266_21:	
 18569  0C95  2C9B               	goto	i1l1146
 18570  0C96                     u266_20:	
 18571  0C96                     i1l4907:	
 18572                           
 18573                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 18574  0C96  0821               	movf	_TMR0_InterruptHandler+1,w
 18575  0C97  008A               	movwf	10
 18576  0C98  0820               	movf	_TMR0_InterruptHandler,w
 18577  0C99  000A               	callw
 18578  0C9A  318C               	pagesel	$
 18579  0C9B                     i1l1146:	
 18580  0C9B  0008               	return
 18581  0C9C                     __end_of_TMR0_ISR:	
 18582                           
 18583                           	psect	text89
 18584  0B3E                     __ptext89:	
 18585 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 18586 ;; Defined at:
 18587 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 18588 ;; Parameters:    Size  Location     Type
 18589 ;;		None
 18590 ;; Auto vars:     Size  Location     Type
 18591 ;;		None
 18592 ;; Return value:  Size  Location     Type
 18593 ;;                  1    wreg      void 
 18594 ;; Registers used:
 18595 ;;		None
 18596 ;; Tracked objects:
 18597 ;;		On entry : 0/0
 18598 ;;		On exit  : 0/0
 18599 ;;		Unchanged: 0/0
 18600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18605 ;;Total ram usage:        0 bytes
 18606 ;; Hardware stack levels used:    1
 18607 ;; This function calls:
 18608 ;;		Nothing
 18609 ;; This function is called by:
 18610 ;;		_TMR0_Initialize
 18611 ;;		_TMR0_ISR
 18612 ;; This function uses a non-reentrant model
 18613 ;;
 18614                           
 18615                           
 18616                           ;psect for function _TMR0_DefaultInterruptHandler
 18617  0B3E                     _TMR0_DefaultInterruptHandler:	
 18618  0B3E                     i1l1152:	
 18619                           ;incstack = 0
 18620                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 18621                           
 18622  0B3E  0008               	return
 18623  0B3F                     __end_of_TMR0_DefaultInterruptHandler:	
 18624                           
 18625                           	psect	text90
 18626  0606                     __ptext90:	
 18627 ;; *************** function _h_precisionclock *****************
 18628 ;; Defined at:
 18629 ;;		line 283 in file "main.c"
 18630 ;; Parameters:    Size  Location     Type
 18631 ;;		None
 18632 ;; Auto vars:     Size  Location     Type
 18633 ;;		None
 18634 ;; Return value:  Size  Location     Type
 18635 ;;                  1    wreg      void 
 18636 ;; Registers used:
 18637 ;;		wreg, status,2, status,0, pclath, cstack
 18638 ;; Tracked objects:
 18639 ;;		On entry : 0/0
 18640 ;;		On exit  : 0/0
 18641 ;;		Unchanged: 0/0
 18642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18645 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18646 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18647 ;;Total ram usage:        3 bytes
 18648 ;; Hardware stack levels used:    1
 18649 ;; Hardware stack levels required when called:    1
 18650 ;; This function calls:
 18651 ;;		i1_PWM6_LoadDutyValue
 18652 ;; This function is called by:
 18653 ;;		_main
 18654 ;;		_TMR0_ISR
 18655 ;; This function uses a non-reentrant model
 18656 ;;
 18657                           
 18658                           
 18659                           ;psect for function _h_precisionclock
 18660  0606                     _h_precisionclock:	
 18661  0606                     i1l4673:	
 18662                           ;incstack = 0
 18663                           ; Regs used in _h_precisionclock: [wreg+status,2+status,0+pclath+cstack]
 18664                           
 18665                           
 18666                           ;main.c: 285:     if(alarm) {
 18667  0606  1CF7               	btfss	_alarm/(0+8),_alarm& (0+7)	;volatile
 18668  0607  2E09               	goto	u218_21
 18669  0608  2E0A               	goto	u218_20
 18670  0609                     u218_21:	
 18671  0609  2E20               	goto	i1l4681
 18672  060A                     u218_20:	
 18673  060A                     i1l4675:	
 18674                           
 18675                           ;main.c: 286:         if(last3000ms >= tala) {
 18676  060A  0020               	movlb	0	; select bank0
 18677  060B  082E               	movf	_tala,w
 18678  060C  027B               	subwf	_last3000ms,w	;volatile
 18679  060D  1C03               	skipc
 18680  060E  2E10               	goto	u219_21
 18681  060F  2E11               	goto	u219_20
 18682  0610                     u219_21:	
 18683  0610  2E22               	goto	i1l4683
 18684  0611                     u219_20:	
 18685  0611                     i1l4677:	
 18686                           
 18687                           ;main.c: 287:             duty_cycle++;
 18688  0611  3001               	movlw	1
 18689  0612  00F4               	movwf	??_h_precisionclock
 18690  0613  0874               	movf	??_h_precisionclock,w
 18691  0614  07FC               	addwf	_duty_cycle,f	;volatile
 18692  0615                     i1l4679:	
 18693                           
 18694                           ;main.c: 288:             PWM6_LoadDutyValue(duty_cycle);
 18695  0615  087C               	movf	_duty_cycle,w	;volatile
 18696  0616  00F4               	movwf	??_h_precisionclock
 18697  0617  01F5               	clrf	??_h_precisionclock+1
 18698  0618  0874               	movf	??_h_precisionclock,w
 18699  0619  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 18700  061A  0875               	movf	??_h_precisionclock+1,w
 18701  061B  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 18702  061C  318D  2548  3186   	fcall	i1_PWM6_LoadDutyValue
 18703  061F  2E22               	goto	i1l4683
 18704  0620                     i1l4681:	
 18705                           
 18706                           ;main.c: 292:         duty_cycle = 0;
 18707  0620  01FC               	clrf	_duty_cycle	;volatile
 18708                           
 18709                           ;main.c: 293:         last3000ms = 0;
 18710  0621  01FB               	clrf	_last3000ms	;volatile
 18711  0622                     i1l4683:	
 18712                           
 18713                           ;main.c: 297:     if(LATCbits.LATC5) {
 18714  0622  0020               	movlb	0	; select bank0
 18715  0623  1E98               	btfss	24,5	;volatile
 18716  0624  2E26               	goto	u220_21
 18717  0625  2E27               	goto	u220_20
 18718  0626                     u220_21:	
 18719  0626  2E57               	goto	i1l4697
 18720  0627                     u220_20:	
 18721  0627                     i1l4685:	
 18722                           
 18723                           ;main.c: 298:         if (!delta10ms_2) {
 18724  0627  087A               	movf	_delta10ms_2,w	;volatile
 18725  0628  1D03               	btfss	3,2
 18726  0629  2E2B               	goto	u221_21
 18727  062A  2E2C               	goto	u221_20
 18728  062B                     u221_21:	
 18729  062B  2E32               	goto	i1l4691
 18730  062C                     u221_20:	
 18731  062C                     i1l4687:	
 18732                           
 18733                           ;main.c: 299:             delta10ms_2 = ms;
 18734  062C  0878               	movf	_ms,w	;volatile
 18735  062D  00F4               	movwf	??_h_precisionclock
 18736  062E  0874               	movf	??_h_precisionclock,w
 18737  062F  00FA               	movwf	_delta10ms_2	;volatile
 18738  0630                     i1l4689:	
 18739                           
 18740                           ;main.c: 300:             s2_pressed = 1;
 18741  0630  1577               	bsf	_s2_pressed/(0+8),_s2_pressed& (0+7)	;volatile
 18742                           
 18743                           ;main.c: 301:         } else if ((delta10ms_2 - ms >= 10) || (delta10ms_2 - ms <= -10)) 
      +                          {
 18744  0631  2E57               	goto	i1l4697
 18745  0632                     i1l4691:	
 18746  0632  087A               	movf	_delta10ms_2,w	;volatile
 18747  0633  00F4               	movwf	??_h_precisionclock
 18748  0634  0878               	movf	_ms,w	;volatile
 18749  0635  0274               	subwf	??_h_precisionclock,w
 18750  0636  00F5               	movwf	??_h_precisionclock+1
 18751  0637  0979               	comf	_ms+1,w	;volatile
 18752  0638  1803               	skipnc
 18753  0639  0A89               	incf	9,f
 18754  063A  00F6               	movwf	??_h_precisionclock+2
 18755  063B  3000               	movlw	0
 18756  063C  0276               	subwf	??_h_precisionclock+2,w
 18757  063D  300A               	movlw	10
 18758  063E  1903               	skipnz
 18759  063F  0275               	subwf	??_h_precisionclock+1,w
 18760  0640  1803               	skipnc
 18761  0641  2E43               	goto	u222_21
 18762  0642  2E44               	goto	u222_20
 18763  0643                     u222_21:	
 18764  0643  2E56               	goto	i1l4695
 18765  0644                     u222_20:	
 18766  0644                     i1l4693:	
 18767  0644  087A               	movf	_delta10ms_2,w	;volatile
 18768  0645  00F4               	movwf	??_h_precisionclock
 18769  0646  0878               	movf	_ms,w	;volatile
 18770  0647  0274               	subwf	??_h_precisionclock,w
 18771  0648  00F5               	movwf	??_h_precisionclock+1
 18772  0649  0979               	comf	_ms+1,w	;volatile
 18773  064A  1803               	skipnc
 18774  064B  0A89               	incf	9,f
 18775  064C  00F6               	movwf	??_h_precisionclock+2
 18776  064D  30FF               	movlw	255
 18777  064E  0276               	subwf	??_h_precisionclock+2,w
 18778  064F  30F7               	movlw	247
 18779  0650  1903               	skipnz
 18780  0651  0275               	subwf	??_h_precisionclock+1,w
 18781  0652  1803               	skipnc
 18782  0653  2E55               	goto	u223_21
 18783  0654  2E56               	goto	u223_20
 18784  0655                     u223_21:	
 18785  0655  2E57               	goto	i1l4697
 18786  0656                     u223_20:	
 18787  0656                     i1l4695:	
 18788                           
 18789                           ;main.c: 302:             delta10ms_2 = 0;
 18790  0656  01FA               	clrf	_delta10ms_2	;volatile
 18791  0657                     i1l4697:	
 18792                           
 18793                           ;main.c: 306:     ms++;
 18794  0657  3001               	movlw	1
 18795  0658  07F8               	addwf	_ms,f	;volatile
 18796  0659  3000               	movlw	0
 18797  065A  3DF9               	addwfc	_ms+1,f	;volatile
 18798  065B                     i1l4699:	
 18799                           
 18800                           ;main.c: 307:     last3000ms++;
 18801  065B  3001               	movlw	1
 18802  065C  00F4               	movwf	??_h_precisionclock
 18803  065D  0874               	movf	??_h_precisionclock,w
 18804  065E  07FB               	addwf	_last3000ms,f	;volatile
 18805  065F                     i1l1464:	
 18806  065F  0008               	return
 18807  0660                     __end_of_h_precisionclock:	
 18808                           
 18809                           	psect	text91
 18810  0D48                     __ptext91:	
 18811 ;; *************** function i1_PWM6_LoadDutyValue *****************
 18812 ;; Defined at:
 18813 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 18814 ;; Parameters:    Size  Location     Type
 18815 ;;  dutyValue       2    0[COMMON] unsigned short 
 18816 ;; Auto vars:     Size  Location     Type
 18817 ;;		None
 18818 ;; Return value:  Size  Location     Type
 18819 ;;                  1    wreg      void 
 18820 ;; Registers used:
 18821 ;;		wreg, status,2, status,0
 18822 ;; Tracked objects:
 18823 ;;		On entry : 0/0
 18824 ;;		On exit  : 0/0
 18825 ;;		Unchanged: 0/0
 18826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18827 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18829 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18830 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18831 ;;Total ram usage:        4 bytes
 18832 ;; Hardware stack levels used:    1
 18833 ;; This function calls:
 18834 ;;		Nothing
 18835 ;; This function is called by:
 18836 ;;		_h_precisionclock
 18837 ;; This function uses a non-reentrant model
 18838 ;;
 18839                           
 18840                           
 18841                           ;psect for function i1_PWM6_LoadDutyValue
 18842  0D48                     i1_PWM6_LoadDutyValue:	
 18843  0D48                     i1l4235:	
 18844                           ;incstack = 0
 18845                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 18846                           
 18847                           
 18848                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 18849  0D48  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 18850  0D49  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 18851  0D4A  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 18852  0D4B  00F2               	movwf	??i1_PWM6_LoadDutyValue
 18853  0D4C  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 18854  0D4D  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 18855  0D4E  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 18856  0D4F  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 18857  0D50  0872               	movf	??i1_PWM6_LoadDutyValue,w
 18858  0D51  0027               	movlb	7	; select bank7
 18859  0D52  008D               	movwf	13	;volatile
 18860                           
 18861                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 18862  0D53  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 18863  0D54  3903               	andlw	3
 18864  0D55  00F2               	movwf	??i1_PWM6_LoadDutyValue
 18865  0D56  3005               	movlw	5
 18866  0D57                     u190_25:	
 18867  0D57  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 18868  0D58  3EFF               	addlw	-1
 18869  0D59  1D03               	skipz
 18870  0D5A  2D57               	goto	u190_25
 18871  0D5B  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 18872  0D5C  008C               	movwf	12	;volatile
 18873  0D5D                     i1l1104:	
 18874  0D5D  0008               	return
 18875  0D5E                     __end_ofi1_PWM6_LoadDutyValue:	
 18876                           
 18877                           	psect	text92
 18878  0B93                     __ptext92:	
 18879 ;; *************** function _INT_ISR *****************
 18880 ;; Defined at:
 18881 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 18882 ;; Parameters:    Size  Location     Type
 18883 ;;		None
 18884 ;; Auto vars:     Size  Location     Type
 18885 ;;		None
 18886 ;; Return value:  Size  Location     Type
 18887 ;;                  1    wreg      void 
 18888 ;; Registers used:
 18889 ;;		wreg, status,2, status,0, pclath, cstack
 18890 ;; Tracked objects:
 18891 ;;		On entry : 0/0
 18892 ;;		On exit  : 0/0
 18893 ;;		Unchanged: 0/0
 18894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18899 ;;Total ram usage:        0 bytes
 18900 ;; Hardware stack levels used:    1
 18901 ;; Hardware stack levels required when called:    2
 18902 ;; This function calls:
 18903 ;;		_INT_CallBack
 18904 ;; This function is called by:
 18905 ;;		_INTERRUPT_InterruptManager
 18906 ;; This function uses a non-reentrant model
 18907 ;;
 18908                           
 18909                           
 18910                           ;psect for function _INT_ISR
 18911  0B93                     _INT_ISR:	
 18912  0B93                     i1l4899:	
 18913                           ;incstack = 0
 18914                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 18915                           
 18916                           
 18917                           ;mcc_generated_files/ext_int.c: 34:     (PIR0bits.INTF = 0);
 18918  0B93  002E               	movlb	14	; select bank14
 18919  0B94  100C               	bcf	12,0	;volatile
 18920  0B95                     i1l4901:	
 18921                           
 18922                           ;mcc_generated_files/ext_int.c: 37:     INT_CallBack();
 18923  0B95  318C  2457  318B   	fcall	_INT_CallBack
 18924  0B98                     i1l1077:	
 18925  0B98  0008               	return
 18926  0B99                     __end_of_INT_ISR:	
 18927                           
 18928                           	psect	text93
 18929  0C57                     __ptext93:	
 18930 ;; *************** function _INT_CallBack *****************
 18931 ;; Defined at:
 18932 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 18933 ;; Parameters:    Size  Location     Type
 18934 ;;		None
 18935 ;; Auto vars:     Size  Location     Type
 18936 ;;		None
 18937 ;; Return value:  Size  Location     Type
 18938 ;;                  1    wreg      void 
 18939 ;; Registers used:
 18940 ;;		wreg, status,2, status,0, pclath, cstack
 18941 ;; Tracked objects:
 18942 ;;		On entry : 0/0
 18943 ;;		On exit  : 0/0
 18944 ;;		Unchanged: 0/0
 18945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18950 ;;Total ram usage:        0 bytes
 18951 ;; Hardware stack levels used:    1
 18952 ;; Hardware stack levels required when called:    1
 18953 ;; This function calls:
 18954 ;;		Absolute function
 18955 ;;		_INT_DefaultInterruptHandler
 18956 ;;		_sw1_EXT
 18957 ;; This function is called by:
 18958 ;;		_INT_ISR
 18959 ;; This function uses a non-reentrant model
 18960 ;;
 18961                           
 18962                           
 18963                           ;psect for function _INT_CallBack
 18964  0C57                     _INT_CallBack:	
 18965  0C57                     i1l4641:	
 18966                           ;incstack = 0
 18967                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 18968                           
 18969                           
 18970                           ;mcc_generated_files/ext_int.c: 44:     if(INT_InterruptHandler)
 18971  0C57  0020               	movlb	0	; select bank0
 18972  0C58  0822               	movf	_INT_InterruptHandler,w
 18973  0C59  0423               	iorwf	_INT_InterruptHandler+1,w
 18974  0C5A  1903               	btfsc	3,2
 18975  0C5B  2C5D               	goto	u212_21
 18976  0C5C  2C5E               	goto	u212_20
 18977  0C5D                     u212_21:	
 18978  0C5D  2C63               	goto	i1l1081
 18979  0C5E                     u212_20:	
 18980  0C5E                     i1l4643:	
 18981                           
 18982                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          _InterruptHandler();
 18983  0C5E  0823               	movf	_INT_InterruptHandler+1,w
 18984  0C5F  008A               	movwf	10
 18985  0C60  0822               	movf	_INT_InterruptHandler,w
 18986  0C61  000A               	callw
 18987  0C62  318C               	pagesel	$
 18988  0C63                     i1l1081:	
 18989  0C63  0008               	return
 18990  0C64                     __end_of_INT_CallBack:	
 18991                           
 18992                           	psect	text94
 18993  0B3D                     __ptext94:	
 18994 ;; *************** function _INT_DefaultInterruptHandler *****************
 18995 ;; Defined at:
 18996 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 18997 ;; Parameters:    Size  Location     Type
 18998 ;;		None
 18999 ;; Auto vars:     Size  Location     Type
 19000 ;;		None
 19001 ;; Return value:  Size  Location     Type
 19002 ;;                  1    wreg      void 
 19003 ;; Registers used:
 19004 ;;		None
 19005 ;; Tracked objects:
 19006 ;;		On entry : 0/0
 19007 ;;		On exit  : 0/0
 19008 ;;		Unchanged: 0/0
 19009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19014 ;;Total ram usage:        0 bytes
 19015 ;; Hardware stack levels used:    1
 19016 ;; This function calls:
 19017 ;;		Nothing
 19018 ;; This function is called by:
 19019 ;;		_EXT_INT_Initialize
 19020 ;;		_INT_CallBack
 19021 ;; This function uses a non-reentrant model
 19022 ;;
 19023                           
 19024                           
 19025                           ;psect for function _INT_DefaultInterruptHandler
 19026  0B3D                     _INT_DefaultInterruptHandler:	
 19027  0B3D                     i1l1087:	
 19028                           ;incstack = 0
 19029                           ; Regs used in _INT_DefaultInterruptHandler: []
 19030                           
 19031  0B3D  0008               	return
 19032  0B3E                     __end_of_INT_DefaultInterruptHandler:	
 19033                           
 19034                           	psect	text95
 19035  0F8B                     __ptext95:	
 19036 ;; *************** function _sw1_EXT *****************
 19037 ;; Defined at:
 19038 ;;		line 310 in file "main.c"
 19039 ;; Parameters:    Size  Location     Type
 19040 ;;		None
 19041 ;; Auto vars:     Size  Location     Type
 19042 ;;		None
 19043 ;; Return value:  Size  Location     Type
 19044 ;;                  1    wreg      void 
 19045 ;; Registers used:
 19046 ;;		wreg, status,2, status,0
 19047 ;; Tracked objects:
 19048 ;;		On entry : 0/0
 19049 ;;		On exit  : 0/0
 19050 ;;		Unchanged: 0/0
 19051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19054 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19055 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19056 ;;Total ram usage:        3 bytes
 19057 ;; Hardware stack levels used:    1
 19058 ;; This function calls:
 19059 ;;		Nothing
 19060 ;; This function is called by:
 19061 ;;		_main
 19062 ;;		_INT_CallBack
 19063 ;; This function uses a non-reentrant model
 19064 ;;
 19065                           
 19066                           
 19067                           ;psect for function _sw1_EXT
 19068  0F8B                     _sw1_EXT:	
 19069  0F8B                     i1l4221:	
 19070                           ;incstack = 0
 19071                           ; Regs used in _sw1_EXT: [wreg+status,2+status,0]
 19072                           
 19073                           
 19074                           ;main.c: 312:     if(!delta10ms) {
 19075  0F8B  0020               	movlb	0	; select bank0
 19076  0F8C  0837               	movf	_delta10ms,w	;volatile
 19077  0F8D  1D03               	btfss	3,2
 19078  0F8E  2F90               	goto	u187_21
 19079  0F8F  2F91               	goto	u187_20
 19080  0F90                     u187_21:	
 19081  0F90  2F9B               	goto	i1l4229
 19082  0F91                     u187_20:	
 19083  0F91                     i1l4223:	
 19084                           
 19085                           ;main.c: 313:         delta10ms = ms;
 19086  0F91  0878               	movf	_ms,w	;volatile
 19087  0F92  00F0               	movwf	??_sw1_EXT
 19088  0F93  0870               	movf	??_sw1_EXT,w
 19089  0F94  00B7               	movwf	_delta10ms	;volatile
 19090  0F95                     i1l4225:	
 19091                           
 19092                           ;main.c: 314:         s1_pressed = 1;
 19093  0F95  15F7               	bsf	_s1_pressed/(0+8),_s1_pressed& (0+7)	;volatile
 19094  0F96                     i1l4227:	
 19095                           
 19096                           ;main.c: 315:         select_mode++;
 19097  0F96  3001               	movlw	1
 19098  0F97  00F0               	movwf	??_sw1_EXT
 19099  0F98  0870               	movf	??_sw1_EXT,w
 19100  0F99  07B6               	addwf	_select_mode,f
 19101                           
 19102                           ;main.c: 316:     }
 19103  0F9A  2FC0               	goto	i1l1472
 19104  0F9B                     i1l4229:	
 19105  0F9B  0837               	movf	_delta10ms,w	;volatile
 19106  0F9C  00F0               	movwf	??_sw1_EXT
 19107  0F9D  0878               	movf	_ms,w	;volatile
 19108  0F9E  0270               	subwf	??_sw1_EXT,w
 19109  0F9F  00F1               	movwf	??_sw1_EXT+1
 19110  0FA0  0979               	comf	_ms+1,w	;volatile
 19111  0FA1  1803               	skipnc
 19112  0FA2  0A89               	incf	9,f
 19113  0FA3  00F2               	movwf	??_sw1_EXT+2
 19114  0FA4  3000               	movlw	0
 19115  0FA5  0272               	subwf	??_sw1_EXT+2,w
 19116  0FA6  300A               	movlw	10
 19117  0FA7  1903               	skipnz
 19118  0FA8  0271               	subwf	??_sw1_EXT+1,w
 19119  0FA9  1803               	skipnc
 19120  0FAA  2FAC               	goto	u188_21
 19121  0FAB  2FAD               	goto	u188_20
 19122  0FAC                     u188_21:	
 19123  0FAC  2FBF               	goto	i1l4233
 19124  0FAD                     u188_20:	
 19125  0FAD                     i1l4231:	
 19126  0FAD  0837               	movf	_delta10ms,w	;volatile
 19127  0FAE  00F0               	movwf	??_sw1_EXT
 19128  0FAF  0878               	movf	_ms,w	;volatile
 19129  0FB0  0270               	subwf	??_sw1_EXT,w
 19130  0FB1  00F1               	movwf	??_sw1_EXT+1
 19131  0FB2  0979               	comf	_ms+1,w	;volatile
 19132  0FB3  1803               	skipnc
 19133  0FB4  0A89               	incf	9,f
 19134  0FB5  00F2               	movwf	??_sw1_EXT+2
 19135  0FB6  30FF               	movlw	255
 19136  0FB7  0272               	subwf	??_sw1_EXT+2,w
 19137  0FB8  30F7               	movlw	247
 19138  0FB9  1903               	skipnz
 19139  0FBA  0271               	subwf	??_sw1_EXT+1,w
 19140  0FBB  1803               	skipnc
 19141  0FBC  2FBE               	goto	u189_21
 19142  0FBD  2FBF               	goto	u189_20
 19143  0FBE                     u189_21:	
 19144  0FBE  2FC0               	goto	i1l1472
 19145  0FBF                     u189_20:	
 19146  0FBF                     i1l4233:	
 19147                           
 19148                           ;main.c: 318:         delta10ms = 0;
 19149  0FBF  01B7               	clrf	_delta10ms	;volatile
 19150  0FC0                     i1l1472:	
 19151  0FC0  0008               	return
 19152  0FC1                     __end_of_sw1_EXT:	
 19153  007E                     btemp	set	126	;btemp
 19154  007E                     int$flags	set	126
 19155  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    32
    Data        0
    BSS         70
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     22      58
    BANK1            80      0      29
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$3484$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$3490	const PTR FTN()enum E12722 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX$3489	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$3484	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), wr1RegCompleteHandler(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S473$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    push_ring@ring_byte	PTR unsigned char  size(1) Largest target is 5
		 -> ring_byte(BANK0[5]), 

    push_ring@nreg_pt	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_pt(BANK0[1]), 

    push_ring@nreg_init	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_init(BANK0[1]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> h_precisionclock(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> h_precisionclock(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> h_clock(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> h_clock(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S791$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), wr1RegCompleteHandler(), Absolute function(), 

    fsmStateTable	const PTR FTN()enum E12722[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S473$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S473$callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), wr1RegCompleteHandler(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), wr1RegCompleteHandler(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    S473$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_i2c_ISR
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c1_driver_TXData
    _do_I2C_TX->_i2c1_driver_isNACK
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _TMR1_ISR->_TMR1_WriteTimer
    _h_clock->_update_clock
    _TMR0_ISR->_h_precisionclock
    _h_precisionclock->i1_PWM6_LoadDutyValue
    _INT_CallBack->_sw1_EXT

Critical Paths under _main in BANK0

    _main->_push_ring
    _tsttc->_WriteI2C
    _reset_recv->_DATAEE_WriteByte
    _represent_led->___awdiv
    _read_ring->___bmul
    _push_ring->_DATAEE_WriteByte
    _mod4_LED->_PWM6_LoadDutyValue
    _mod3_LED->_PWM6_LoadDutyValue
    _mod2_LED->_PWM6_LoadDutyValue
    _mod1_LED->_PWM6_LoadDutyValue
    _cksum_w->_DATAEE_WriteByte
    _cksum->_DATAEE_ReadByte
    _DATAEE_WriteByte->_cksum
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _ADC_read->_ADCC_GetConversionResult

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   19841
                                             17 BANK0      5     5      0
                           _ADC_read
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                     _I2C_Initialize
            _INT_SetInterruptHandler
                            _LED_bin
                 _PWM6_LoadDutyValue
                            _Read_S1
                            _Read_S2
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR1_SetInterruptHandler
                              _cksum
                            _cksum_w
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
                          _push_ring
                          _read_ring
                      _represent_led
                         _reset_recv
                              _tsttc
 ---------------------------------------------------------------------------------
 (1) _tsttc                                                2     2      0      68
                                              2 BANK0      2     2      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _reset_recv                                           2     2      0    2026
                                             10 BANK0      2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (1) _represent_led                                        6     5      1    1238
                                              9 BANK0      6     5      1
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _read_ring                                            9     5      4    2265
                                              4 BANK0      9     5      4
                    _DATAEE_ReadByte
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _push_ring                                            7     4      3    2580
                                             10 BANK0      7     4      3
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (1) _mod4_LED                                             0     0      0     626
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (1) _mod3_LED                                             0     0      0     626
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (1) _mod2_LED                                             0     0      0     626
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (1) _mod1_LED                                             0     0      0     626
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM6_LoadDutyValue                                   4     2      2     626
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _cksum_w                                              1     1      0    3025
                                             10 BANK0      1     1      0
                   _DATAEE_WriteByte
                              _cksum
 ---------------------------------------------------------------------------------
 (2) _cksum                                                4     4      0    1098
                                              2 BANK0      4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2     962
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3    1927
                                              6 BANK0      4     1      3
                              _cksum (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     633
                    _ADCC_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_S2                                              1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Read_S1                                              1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LED_bin                                              5     3      2     120
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Initialize                                       0     0      0       0
                   _i2c1_driver_open
 ---------------------------------------------------------------------------------
 (2) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             2     0      2      31
                                              2 BANK0      2     0      2
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0   84720
                   Absolute function *
                            _INT_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (5) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_ISR                                              3     3      0   84410
                                              4 COMMON     3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (6) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_TX_EMPTY                                      3     3      0   21086
                                              0 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_TX                                            3     3      0   21108
                                              1 COMMON     3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_TXData                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_RX                                            3     3      0   21086
                                              0 COMMON     3     3      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_DO_ADDRESS_NACK                               3     3      0   21086
                                              0 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _wr2RegCompleteHandler                                1     0      1    4159
                                              6 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _wr1RegCompleteHandler                                1     0      1    4159
                                              6 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _returnStop                                           1     0      1       0
                                              6 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (7) _returnReset                                          1     0      1       0
                                              6 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (7) _rdBlkRegCompleteHandler                              1     0      1    4450
                                              6 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rd2RegCompleteHandler                                1     0      1    4159
                                              6 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rd1RegCompleteHandler                                1     0      1    4159
                                              6 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _i2c_setDataCompleteCallback                          4     1      3    2776
                                              5 COMMON     1     1      0
                                              0 BANK0      3     0      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (9) _setCallBack                                          5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (8) _i2c_setBuffer                                        4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _i2c_restartWrite                                     1     0      1       0
                                              6 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                            _h_clock *
 ---------------------------------------------------------------------------------
 (6) _h_clock                                              0     0      0       0
                       _update_clock
 ---------------------------------------------------------------------------------
 (7) _update_clock                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0      70
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                   _h_precisionclock *
 ---------------------------------------------------------------------------------
 (6) _h_precisionclock                                     3     3      0      70
                                              4 COMMON     3     3      0
               i1_PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (7) i1_PWM6_LoadDutyValue                                 4     2      2      70
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT_CallBack                                         0     0      0       0
                   Absolute function *
        _INT_DefaultInterruptHandler *
                            _sw1_EXT *
 ---------------------------------------------------------------------------------
 (7) _sw1_EXT                                              3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (7) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_read
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
   _DATAEE_ReadByte
   _DATAEE_WriteByte
     _cksum (ARG)
       _DATAEE_ReadByte
   _I2C_Initialize
     _i2c1_driver_open
   _INT_SetInterruptHandler
   _LED_bin
   _PWM6_LoadDutyValue
   _Read_S1
   _Read_S2
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
   _TMR0_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _cksum
     _DATAEE_ReadByte
   _cksum_w
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
   _mod1_LED
     _PWM6_LoadDutyValue
   _mod2_LED
     _PWM6_LoadDutyValue
   _mod3_LED
     _PWM6_LoadDutyValue
   _mod4_LED
     _PWM6_LoadDutyValue
   _push_ring
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
   _read_ring
     _DATAEE_ReadByte
     ___bmul
   _represent_led
     ___awdiv
   _reset_recv
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
   _tsttc
     _ReadI2C
     _WriteI2C

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _INT_ISR *
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _sw1_EXT *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _h_precisionclock *
       i1_PWM6_LoadDutyValue
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _h_clock *
       _update_clock
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c1_driver_sendNACK
       _i2c1_driver_getRXData *
       _i2c1_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c1_driver_restart
     _do_I2C_SEND_STOP *
       _i2c1_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c1_driver_TXData *
       _i2c1_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _mssp1_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      3A       5       72.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      1D       7       36.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      65      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      65      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 01 13:40:08 2019

                            _update_clock 0E94                              returnReset@p 0076  
                          ___bmul@product 0046                               __CFG_CP$OFF 0000  
                                      l40 040D                                        l33 0C0B  
                                      l51 0446                                        l52 0448  
                                      l36 03FC                                        l70 049C  
                                      l63 0484                                        l39 040B  
                                      l72 04A0                                        l64 0487  
                                      l76 04B4                                        l77 04B6  
                                      l69 049A                                        l88 04EF  
                                      l89 04F1                              ___awdiv@sign 004A  
                    __size_of_do_I2C_IDLE 0005                                        _ms 0078  
                     _do_I2C_SEND_RESTART 0B7A                      __size_of_do_I2C_RCEN 0007  
             __size_of_PWM6_LoadDutyValue 0019                               __CFG_LVP$ON 0000  
                                     l100 052D                                       l101 0530  
                                     l110 054B                                       l122 0E93  
                                     l106 0543                                       l131 05D2  
                                     l107 0545                                       l118 0E8B  
                                     l126 0605                                       l119 0E8D  
                                     l143 0603                                       l129 05CD  
                                     l138 05EF                                       l621 0C01  
                                     l527 0BAA                                       l624 0BE6  
                                     l618 0E39                                       l900 0ED4  
                                     l709 0798                                       l901 0EDB  
                                     l904 0CB9                                       l497 0E74  
                                     l773 0C56                                       l983 0D73  
                                     l992 0BF8                                       l986 0BDE  
                                     l898 0ED0                                       l989 0BBE  
                                     _PR2 028D                              __CFG_CPD$OFF 0000  
                         _timer1ReloadVal 0026                                       _aux 002D  
                                     _seg 003A                  __end_of_h_precisionclock 0660  
           i2c_setDataCompleteCallback@cb 0044                   __size_of_PMD_Initialize 0008  
                         _TMR2_Initialize 0C9C                     __size_of_do_I2C_RESET 0008  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                            __CFG_ZCD$OFF 0000                           __end_of_LED_bin 0E1E  
                                    l1101 0C70                                      l1104 0DE9  
                 ??_rd2RegCompleteHandler 0077                                      l1127 0D47  
                                    l1090 0C8C                                      l1084 0B9E  
                                    l1149 0BA4                                      l1511 0C15  
                                    l1440 0392                                      l1433 03C9  
                                    l1514 0C1F                                      l1442 03F5  
                                    l1434 03C8                                      l1179 0CAA  
                                    l1363 0079                                      l1525 0E03  
                                    l1445 03FA                                      l1366 03F6  
                                    l1480 0C29                                      l1529 0705  
                                    l1562 07FF                                      l1490 0C4A  
                                    l1554 0FFF                                      l5011 0E04  
                                    l1547 07DF                                      l1493 0E1D  
                                    l1557 0CD9                                      l1477 0C34  
                                    l1485 0C3F                                      l1567 0E55  
                                    l6001 0ED5                                      l1745 0D89  
                                    l6003 0BD9                                      l4251 05B1  
                                    l6013 0BF0                                      l6005 0BDC  
                                    l6101 0E21                                      l4261 05CB  
                    _ADCC_StartConversion 0BD7                                      l6007 0BDD  
                                    l6111 0E30                                      l6103 0E24  
                                    l6031 07FE                                      l4271 05E4  
                                    l4263 05D7                                      l1872 05AB  
                                    l6009 0BB8                                      l6041 0C08  
                                    l6113 0E33                                      l6105 0E27  
                                    l6025 07E6                                      l6017 07E0  
                                    l6121 0E3F                                      l4281 0E80  
                                    l4273 05F4                                      l4257 05B6  
                                    l4249 05AE                                      l6043 0C0A  
                                    l6035 0C02                                      l6131 0C0D  
                                    l6115 0E36                                      l6107 0E2A  
                                    l6027 07F1                                      l6019 07E2  
                                    l6211 07A8                                      l6203 0FF5  
                                    l6123 0E47                                      l4283 0E92  
                                    l4259 05C0                                      l6037 0C05  
                                    l6133 0C12                                      l6109 0E2D  
                                    l6029 07F5                                      l6141 0C2A  
                                    l6221 07B6                                      l4701 0D76  
                                    l6125 0E4C                                      l6117 0E3A  
                                    l4269 05D9                                      l6039 0C07  
                                    l6135 0C13                                      l6151 0C1C  
                                    l6127 0CCA                                      l6143 0C2C  
                                    l6223 07CD                                      l6207 079B  
                                    l4711 0D88                                      l4703 0D77  
                                    l4279 0E75                                      l6137 0C14  
                                    l6129 0C0C                                      l6153 0C1D  
                                    l6145 0C32                                      l6161 0C22  
                                    l6225 07D5                                      l6217 07A9  
                                    l6209 07A3                                      l4705 0D7B  
                                    l4721 0557                                      l4801 04DC  
                                    l6401 0125                                      l6155 0C1E  
                                    l6147 0C16                                      l6163 0C35  
                                    l6171 0C42                                      l6227 07D9  
                                    l6219 07B2                                      l4707 0D7F  
                                    l4731 0568                                      l4723 0559  
                                    l4715 054C                                      l4811 0517  
                                    l4803 04E0                                      l6411 0130  
                                    l6403 0128                                      l6181 0DFB  
                                    l6149 0C17                                      l5701 0CB3  
                                    l4645 0DD1                                      l6165 0C37  
                                    l6173 0C48                                      l4709 0D81  
                                    l4741 057E                                      l4733 056E  
                                    l4725 055D                                      l4717 054E  
                                    l4813 051E                                      l4805 04F5  
                                    l6501 025A                                      l6421 0155  
                                    l6413 0138                                      l6405 012B  
                                    l6175 0DEA                                      l5703 0CB4  
                                    l6159 0C20                                      l6167 0C3D  
                                    l6191 0FCE                                      l4743 058D  
                                    l4735 0571                                      l4751 059D  
                                    l4727 0562                                      l4719 0552  
                                    l4815 0534                                      l4807 0504  
                                    l6511 027D                                      l6503 0263  
                                    l6431 017D                                      l6423 0156  
                                    l6415 0140                                      l6407 012E  
                                    l6177 0DEF                                      l5721 0C51  
                                    l5713 0B99                                      l5705 0CB5  
                                    l6169 0C40                                      l6193 0FDB  
                                    l6185 0FC3                                      l4753 05A2  
                                    l4745 0591                                      l4737 0576  
                                    l4729 0566                                      l4817 0549  
                                    l4809 0508                                      l6601 03D1  
                                    l6505 0269                                      l6513 027E  
                                    l6441 019A                                      l6425 015D  
                                    l6417 0149                                      l6409 012F  
                                    l6361 0077                                      l6179 0DF3  
                                    l5723 0C53                                      l5715 0B9F  
                                    l6099 0E1E                                      l5707 0CB6  
                                    l6195 0FE1                                      l6187 0FC3  
                                    l4755 05A7                                      l4747 0592  
                                    l4739 057A                                      l4771 0411  
                                    l6611 03F1                                      l6603 03D5  
                                    l6531 02C7                                      l6523 02AD  
                                    l6515 0287                                      l6507 0271  
                                    l6451 01B9                                      l6443 01A1  
                                    l6435 0186                                      l6427 0160  
                                    l6419 0151                                      l6371 007E  
                                    l6363 0078                                      l5717 0C4B  
                                    l5901 0767                                      l5709 0CB7  
                                    l6197 0FE8                                      l6189 0FC9  
                                    l4749 0597                                      l4781 044C  
                                    l4773 0420                                      l6605 03D9  
                                    l6525 02B3                                      l6533 02C8  
                                    l6517 028A                                      l6509 0276  
                                    l6461 01D6                                      l6453 01BE  
                                    l6437 018D                                      l6445 01A2  
                                    l6429 0163                                      l6381 0090  
                                    l6373 0083                                      l6365 0079  
                                    l6357 006B                                      l5719 0C50  
                                    l5911 077B                                      l5903 0769  
                                    l6199 0FF3                                      l4791 048B  
                                    l4783 045B                                      l4775 0424  
                                    l6607 03DA                                      l6543 02F7  
                                    l6535 02D1                                      l6527 02BB  
                                    l6519 02A4                                      l6471 01F4  
                                    l6463 01DE                                      l6455 01C5  
                                    l6447 01AB                                      l6439 0195  
                                    l6391 00F2                                      l6383 0091  
                                    l6375 0084                                      l6359 006D  
                                    l5921 0785                                      l5913 077D  
                                    l5905 0775                                      l4793 04A5  
                                    l4785 045F                                      l4777 0433  
                                    l4769 03FC                                      l6609 03E5  
                                    l6561 0334                                      l6545 02FD  
                                    l6537 02D4                                      l6529 02C0  
                                    l6473 01FA                                      l6481 020F  
                                    l6465 01E3                                      l6449 01B1  
                                    l6457 01C6                                      l6553 0310  
                                    l6393 00F5                                      l6385 0092  
                                    l6377 0085                                      l6369 007D  
                                    l5931 0791                                      l5923 0787  
                                    l5915 077F                                      l5907 0777  
                                    l4795 04BA                                      l4787 046E  
                                    l4779 0437                                      l6571 033F  
                                    l6563 0335                                      l6547 0305  
                                    l6539 02EE                                      l6491 023E  
                                    l6483 0218                                      l6475 0202  
                                    l6467 01EA                                      l6459 01CF  
                                    l6555 0327                                      l6395 0101  
                                    l6387 009E                                      l6379 008C  
                                    l5941 0BFD                                      l5933 0793  
                                    l5925 0789                                      l5917 0781  
                                    l5909 0779                                      l4981 06F6  
                                    l4973 06C1                                      l4797 04C9  
                                    l4789 0475                                      l6581 0363  
                                    l6573 0347                                      l6565 0336  
                                    l6557 032D                                      l6549 0307  
                                    l6493 0245                                      l6485 021B  
                                    l6477 0207                                      l6469 01EB  
                                    l6397 010D                                      l6389 00B0  
                                    l5951 0D70                                      l5943 0C00  
                                    l5935 0795                                      l5927 078C  
                                    l5919 0783                                      l5695 0BA5  
                                    l5871 0E5F                                      l5863 0E56  
                                    l4983 0700                                      l4975 06C6  
                                    l4799 04CD                                      l6591 03A8  
                                    l6583 0364                                      l6575 0351  
                                    l6567 0337                                      l6559 032E  
                                    l6495 024D                                      l6487 0235  
                                    l6479 020E                                      l6399 0119  
                                    l5953 0D72                                      l5937 0BF9  
                                    l5929 078E                                      l5881 0BDF  
                                    l5945 0C64                                      l5873 0E66  
                                    l5865 0E59                                      l5961 0CA5  
                                    l5697 0CAB                                      l4977 06D9  
                                    l4969 06B6                                      l6593 03B8  
                                    l6585 037B                                      l6577 0358  
                                    l6569 033E                                      l6497 0252  
                                    l5939 0BFC                                      l5891 075C  
                                    l5883 0750                                      l5947 0C6B  
                                    l5971 0D33                                      l5875 0E68  
                                    l5867 0E5B                                      l5963 0CA7  
                                    l5955 0C9C                                      l5699 0CAF  
                                    l4979 06E7                                      l6595 03C4  
                                    l6587 0393                                      l6579 035E  
                                    l6499 0259                                      l5949 0D5E  
                                    l5965 0C7F                                      l5893 075E  
                                    l5885 0756                                      l5981 0D44  
                                    l5973 0D38                                      l5877 0E69  
                                    l5869 0E5D                                      l5957 0CA1  
                                    l6597 03CA                                      l6589 039F  
                                    l5967 0C82                                      l5895 0760  
                                    l5887 0758                                      l5975 0D39  
                                    l5879 0E71                                      l5959 0CA2  
                                    l5991 0EC9                                      l5983 0EB8  
                                    l6599 03D0                                      l6759 0319  
                                    l5969 0C8A                                      l5897 0763  
                                    l5889 075A                                      l5977 0D3B  
                                    l5993 0ECA                                      l5985 0EC0  
                                    l5899 0765                                      l5979 0D3C  
                                    l5995 0ECB                                      l5987 0EC4  
                                    l5997 0ECD                                      l5989 0EC8  
                                    l5999 0ECF                                      u2000 0603  
                                    u2001 0602                                      u2010 0E80  
                                    u2011 0E7F                                      u2020 0E8B  
                                    u2021 0E8A                                      u2030 0E92  
                                    u2031 0E91                                      u2300 057E  
                                    u2301 057D                                      _LATA 0016  
                                    _LATB 0017                           __end_of_INT_ISR 0B99  
                                    u2135 0DE2                                      _LATC 0018  
                                    u2240 0D7B                                      u2320 058D  
                                    u2400 0446                                      _LATD 0019  
                                    u2241 0D7A                                      u2321 058C  
                                    u2401 0445                                      _LATE 001A  
                                    u2250 0D88                                      u2410 044C  
                                    u2251 0D87                                      u2315 057F  
                                    u2411 044B                                      u2340 059D  
                                    u2260 0552                                      u2500 04BA  
                                    u2420 045B                                      u4100 0185  
                                    u2341 059C                                      u2325 0589  
                                    u2261 0551                                      u2501 04B9  
                                    u2421 045A                                      u4101 0184  
                                    u2350 05A2                                      u2270 055D  
                                    u2510 04C9                                      u2430 046E  
                                    u4110 0195                                      u2351 05A1  
                                    u2335 0593                                      u2271 055C  
                                    u2511 04C8                                      u2431 046D  
                                    u4111 0194                                      u2280 056E  
                                    u2600 0549                                      u2520 04DC  
                                    u2440 0484                                      u2360 040B  
                                    u4200 0202                                      u4120 01A1  
                                    u4040 009E                                      u2281 056D  
                                    u2601 0548                                      u2521 04DB  
                                    u2441 0483                                      u2361 040A  
                                    u4201 0201                                      u4121 01A0  
                                    u4041 009D                                      u2530 04EF  
                                    u2450 048B                                      u2370 0411  
                                    u4210 020E                                      u4130 01AA  
                                    u4050 00B0                                      _T2PR 028D  
                                    u2531 04EE                                      u2451 048A  
                                    u2371 0410                                      u4211 020D  
                                    u4131 01A9                                      u4051 00AF  
                                    u2540 04F5                                      u2460 049A  
                                    u2380 0420                                      u4300 027D  
                                    u4220 0217                                      u4140 01B9  
                                    u4060 0151                                      u2541 04F4  
                                    u2461 0499                                      u2381 041F  
                                    u4301 027C                                      u4221 0216  
                                    u4141 01B8                                      u4061 0150  
                                    u2550 0504                                      u2470 04A0  
                                    u2390 0433                                      u4310 0286  
                                    u4230 0224                                      u4150 01C5  
                                    u4070 0155                                      u2295 0572  
                                    u2551 0503                                      u2471 049F  
                                    u2391 0432                                      u4311 0285  
                                    u4231 0222                                      u4151 01C4  
                                    u4071 0154                                Read_S1@val 0044  
                                    u1920 05B5                                      u2560 0517  
                                    u2480 04A5                                      u4400 02F6  
                                    u4320 0293                                      u4240 0230  
                                    u4232 0225                                      u4160 01CE  
                                    u4080 016C                                      u2705 06DC  
                                    u1921 05B4                                      u2561 0516  
                                    u2481 04A4                                      u4401 02F5  
                                    u4321 0291                                      u4241 022E  
                                    u4161 01CD                                      u4081 016A  
                                    u1930 05C0                                      u2570 052D  
                                    u2490 04B4                                      u4410 0305  
                                    u4330 029F                                      u4322 0294  
                                    u4250 023D                                      u4242 0231  
                                    u4170 01DE                                      u4090 0178  
                                    u4082 016D                                      u2715 06EA  
                                    u1931 05BF                                      u2571 052C  
                                    u2491 04B3                                      u4411 0304  
                                    u4331 029D                                      u4251 023C  
                                    u4171 01DD                                      u4091 0176  
                                    u3700 0DFB                                      u1940 05CB  
                                    u2580 0534                                      u4500 03D0  
                                    u4420 030F                                      u4340 02AC  
                                    u4332 02A0                                      u4260 024D  
                                    u4180 01EA                                      u4092 0179  
                                    u3701 0DFA                                      u1941 05CA  
                                    u2581 0533                                      u4501 03CF  
                                    u4421 030E                                      u4341 02AB  
                                    u4261 024C                                      u4181 01E9  
                                    u3710 0FC9                                      u1950 05D2  
                                    u2590 0543                                      u4510 03FA  
                                    u4430 032D                                      u4350 02BB  
                                    u4270 0259                                      u4190 01F3  
                                    u3711 0FC8                                      u1951 05D1  
                                    u2591 0542                                      u4511 03F9  
                                    u4431 032C                                      u4351 02BA  
                                    u4271 0258                                      u4191 01F2  
                                    u3640 0ED4                                      u3720 0FCE  
                                    u2680 06C0                                      u1960 05D7  
                                    u4440 0334                                      u4360 02C7  
                                    u4280 0262                                      u3641 0ED3  
                                    u3721 0FCD                                      u2681 06BF  
                                    u1961 05D6                                      u4441 0333  
                                    u4361 02C6                                      u4281 0261  
                                    u3570 0C50                                      u3650 07FE  
                                    u3730 0FE1                                      u2690 06C6  
                                    u1970 05E4                                      u4450 0358  
                                    u4370 02D0                                      u4290 0271  
                                    u3571 0C4F                                      u3651 07FD  
                                    u3731 0FE0                                      u2691 06C5  
                                    u1971 05E3                                      u4451 0357  
                                    u4371 02CF                                      u4291 0270  
                                    u3740 07A3                                      u1980 05EF  
                                    u4460 035E                                      u4380 02DD  
                                    _PMD0 0796                                      u3741 07A2  
                                    u1981 05EE                                      u4461 035D  
                                    u4381 02DB                                      _PMD1 0797  
                                    u3750 07B2                                      u1990 05F4  
                                    u4470 0363                                      u4390 02E9  
                                    u4382 02DE                                      _PMD2 0798  
                                    u4527 0DF0                                      u3751 07B1  
                                    u1991 05F3                                      u4471 0362  
                                    u4391 02E7                                Read_S2@val 0044  
                                    _PMD3 0799                                      u3760 07DF  
                                    u4480 037B                                      u4392 02EA  
                                    _PMD4 079A                                      u3761 07DE  
                                    u4481 037A                                      _PMD5 079B  
                                    u3690 0E55                                      u4490 0392  
                                    u3691 0E54                                      u4491 0391  
                    ?_do_I2C_SEND_RESTART 0070                                      _TMR2 028C  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                                      _WPUD 0F5A  
                                    _WPUE 0F65                   ??_wr2RegCompleteHandler 0077  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
       __size_of_do_I2C_SEND_RESTART_READ 0005                                      _alaf 002F  
                                    _alal 0030                                      _alat 0032  
                                    _aux1 002C                                      _half 03BC  
                                    _clkh 003C                 ?_do_I2C_SEND_RESTART_READ 0070  
                                    _clkm 003B                                      _main 006B  
                                    _tala 002E                 __size_of_do_I2C_SEND_STOP 0005  
                  __size_of_do_I2C_DO_ACK 0005                                      _nreg 0035  
                                    _temp 0033                                      _pmon 0034  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
     __end_of_INT_DefaultInterruptHandler 0B3E               _INT_DefaultInterruptHandler 0B3D  
                   ?_do_I2C_SEND_ADR_READ 0070           ??_i2c1_driver_clearBusCollision 0070  
                                    start 004F                          __end_of_ADC_read 0E04  
         __end_of_INT_SetInterruptHandler 0B9F                             _i2c_setBuffer 0CBA  
              ??_TMR1_SetInterruptHandler 0046                             __CFG_CSWEN$ON 0000  
                       ___bmul@multiplier 0047                             __CFG_MCLRE$ON 0000  
                         __end_of_i2c_ISR 0F2C                           __end_of_ReadI2C 0E94  
        __size_of_rdBlkRegCompleteHandler 0019                           __end_of_Read_S1 0C16  
                         __end_of_Read_S2 0C20                  ??_do_I2C_DO_NACK_RESTART 0070  
               __size_of_DATAEE_WriteByte 0024                   __end_of_TMR0_Initialize 0D48  
                            _do_I2C_RESET 0BC7            ??_TMR0_DefaultInterruptHandler 0070  
          __size_of_OSCILLATOR_Initialize 0009             __end_of_OSCILLATOR_Initialize 0C02  
                                   _ADACQ 009D                                     _ADCAP 009B  
                                   _ADACT 0099                  __end_of_i2c1_driver_open 0C57  
                                   ?_main 0070                                     _ADCLK 0098  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                           __end_of___awdiv 05AC  
                __end_of_i2c1_driver_stop 0B4B                                     _ADPRE 009C  
                           __CFG_WDTE$OFF 0000                                     _ADRPT 010D  
                                   _T1CLK 0211                           ___awdiv@divisor 0044  
                                   _T1CON 020E                                     _T2CON 028E  
                                   _T2HLT 028F                __end_of_i2c1_driver_TXData 0B6B  
                          __CFG_DEBUG$OFF 0000                                     _T2TMR 028C  
                                   i1l206 0C7E                                     i1l302 0697  
                                   i1l305 06B3                                     _T2RST 0291  
                                   i1l236 0CC9                                     i1l412 0D32  
                                   i1l333 0F8A                                     i1l261 0B6F  
                                   i1l270 0B7E                                     i1l318 0723  
                                   i1l511 0CEA                                     i1l319 074F  
                                   i1l343 0F2B                                     i1l424 0CFC  
                                   i1l352 0B44                                     i1l264 0B74  
                                   i1l273 0B83                                     i1l530 0B3F  
                                   i1l258 0BCE                                     i1l282 0BB7  
                                   i1l346 0B65                                     i1l267 0B79  
                                   i1l291 0B92                                     i1l524 0DB7  
                                   i1l436 0DD0                                     i1l276 0BEF  
                                   i1l357 0F01                                     i1l349 0B42  
                                   i1l285 0B88                                     i1l463 0003  
                                   i1l279 0BD6                                     i1l376 0D0E  
                                   i1l288 0B8D                                     i1l297 0F57  
                                   i1l561 001F                                     i1l571 004D  
                                   i1l564 0032                                     i1l397 0D20  
                                   i1l565 004D                                     i1l814 0B5D  
                                   i1l566 0041                                     i1l559 0013  
                                   i1l808 0B6A                                     i1l817 0B61  
                                   i1l755 0B56                                     i1l851 0B59  
                                   i1l781 0B40                                     i1l790 0B4A  
                                   i1l758 0B53                                     i1l793 0BC6  
                                   i1l787 0B47                                     i1l796 0B4D  
                                   i1l799 0B50                           ___awdiv@counter 0049  
                                   _OSCEN 0891                                     _TMR0H 001D  
                                   _TMR1H 020D                                     _TMR0L 001C  
                                   _TMR1L 020C                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                                   _WPUC3 7A7B                                     _WPUC4 7A7C  
       __size_of_TMR0_SetInterruptHandler 0006                           __end_of_h_clock 0DA1  
                         _PWM6_Initialize 0C64                 ?_TMR0_SetInterruptHandler 0044  
                 ??_ADCC_IsConversionDone 0044                          __end_of_TMR0_ISR 0C9C  
                        __end_of_TMR1_ISR 0DB8                           __end_of_sw1_EXT 0FC1  
                         __end_of_cksum_w 0CDA                           _DATAEE_ReadByte 0CAB  
                                   _alarm 03B9                __end_of_i2c1_driver_isNACK 0BC7  
                                   _cksum 07E0                     ?_ADCC_StartConversion 0070  
              ?_do_I2C_SEND_RESTART_WRITE 0070                     ??_do_I2C_SEND_RESTART 0070  
                                   _tsttc 03FC                   __end_of_TMR1_Initialize 0E75  
                          __pbitbssCOMMON 03B8                                     pclath 000A  
                 __size_of_mssp1_clearIRQ 0003                    ?_do_I2C_SEND_ADR_WRITE 0070  
                                   status 0003                                     wtemp0 007E  
                         _TMR1_WriteTimer 0CDA                            ?_i2c_setBuffer 0070  
                            ?_setCallBack 0070                             _fsmStateTable 1000  
                         __initialization 0051                                _i2c_status 00A0  
                            __end_of_main 03FC                   represent_led@high_digit 004D  
                 __end_of_TMR2_Initialize 0CAB               ?_INTERRUPT_InterruptManager 0070  
                           setCallBack@cb 0070                             _do_I2C_DO_ACK 0B84  
                                  ??_main 0055                         ?_i2c_restartWrite 0076  
           __size_of_i2c1_driver_sendNACK 0004                                 ??_LED_bin 0046  
                      ??_i2c_restartWrite 0077             __size_of_i2c1_driver_resetBus 0001  
                               ??_INT_ISR 0073                   ?_do_I2C_DO_ADDRESS_NACK 0070  
                                  _ADACCH 0091                                    _ADACCL 0090  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  ?_cksum 0070                                    _ADERRH 0117  
                                  _ADERRL 0116                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    _ADRESH 008D  
                                  _ADRESL 008C                                    _ADSTAT 0097  
                                  _ADUTHH 0111                          ___awdiv@dividend 0046  
                                  _ADUTHL 0110                          __end_of_WriteI2C 0606  
                                  _ANSELA 0F38                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                                    _ANSELD 0F59  
                                  _ANSELE 0F64                        __CFG_RSTOSC$HFINT1 0000  
                                  _T0CON0 001E                                    _T0CON1 001F  
                                  _T1GATE 0210                                    _T1GCON 020F  
                                  ?_tsttc 0070                                    _RA6PPS 0F16  
                                  _RC3PPS 0F23                                    i1l1104 0D5D  
                 TMR1_WriteTimer@timerVal 0070                                    _RC4PPS 0F24  
                                  i1l1152 0B3E                                    i1l1081 0C63  
                                  i1l1146 0C9B                                    i1l1077 0B98  
                                  i1l1087 0B3D                                    _ODCONA 0F3A  
                                  i1l1450 0D9F                                    _ODCONB 0F45  
                                  _ODCONC 0F50                                    i1l1452 0DA0  
                                  _ODCOND 0F5B                                    i1l4101 0B7F  
                                  _ODCONE 0F66                                    i1l1519 0EB7  
                                  i1l4111 0B5A                                    i1l4103 0B82  
                                  i1l1472 0FC0                                    i1l1464 065F  
                                  i1l1448 0D8A                                    i1l4113 0B89  
                                  i1l4121 0B91                                    i1l4211 0EA3  
                                  i1l4107 0B67                                    i1l4115 0B8C  
                                  i1l4221 0F8B                                    i1l4213 0EAB  
                                  i1l4109 0B4B                                    i1l4125 0BBF  
                                  i1l4133 0B51                                    i1l4231 0FAD  
                                  i1l4223 0F91                                    i1l4215 0EAC  
                                  i1l4207 0E94                                    i1l4071 0B48  
                                  i1l4063 0CBB                                    i1l4055 0EDD  
                                  i1l4135 0B41                                    i1l4311 0BCA  
                                  i1l4119 0B8E                                    u210_20 0CDF  
                                  i1l4233 0FBF                                    i1l4225 0F95  
                                  u210_21 0CDE                                    i1l4217 0EB2  
                                  i1l4209 0E9D                                    i1l4065 0CC0  
                                  i1l4057 0EE3                                    i1l4073 0B5E  
                                  i1l4129 0B4E                                    i1l4313 0BCC  
                                  i1l4321 0B6D                                    i1l4227 0F96  
                                  i1l4235 0D48                                    i1l4219 0EB6  
                                  i1l4067 0CC8                                    i1l4059 0EF4  
                                  i1l4139 0B43                                    i1l4315 0BCD  
                                  i1l4323 0B6E                                    i1l4083 0B70  
                                  i1l4091 0B78                                    i1l4331 0BEE  
                                  i1l4229 0F9B                                    i1l4501 0CE6  
                                  i1l4069 0B45                                    i1l4181 0002  
                                  i1l4309 0BC7                                    i1l4085 0B73  
                                  i1l4503 0CE8                                    i1l4319 0B6B  
                                  i1l4095 0B7A                                    i1l4327 0BE7  
                                  i1l4335 0BCF                                    i1l4343 0BB1  
                                  i1l4351 0B84                                    i1l4089 0B75  
                                  i1l4097 0B7D                                    i1l4329 0BE9  
                                  i1l4337 0BD1                                    i1l4345 0BB3  
                                  i1l4353 0B87                                    i1l4339 0BD5  
                                  i1l4347 0BB6                                    i1l4287 0B54  
                                  i1l4471 0B57                                    u212_20 0C5E  
                                  u220_20 0627                                    u212_21 0C5D  
                                  i1l4641 0C57                                    u220_21 0626  
                                  i1l4643 0C5E                                    i1l4491 0CDA  
                                  i1l6091 0F05                                    i1l4901 0B95  
                                  i1l4493 0CDF                                    i1l6093 0F0A  
                                  i1l6341 001B                                    i1l6333 0006  
                                  i1l4903 0C8D                                    i1l4495 0CE0  
                                  i1l4671 0D9D                                    i1l6095 0F11  
                                  i1l6351 003A                                    i1l6343 0023  
                                  i1l6335 000B                                    u221_20 062C  
                                  u221_21 062B                                    i1l4681 0620  
                                  i1l4673 0606                                    i1l4905 0C8F  
                                  i1l4497 0CE2                                    i1l4665 0D8A  
                                  i1l6097 0F16                                    i1l6089 0F02  
                                  i1l6353 0045                                    i1l6345 0027  
                                  i1l6337 000F                                    i1l4691 0632  
                                  i1l4683 0622                                    i1l4675 060A  
                                  i1l4907 0C96                                    i1l4499 0CE4  
                                  i1l4667 0D96                                    i1l5811 071E  
                                  i1l6355 0049                                    i1l6347 002B  
                                  i1l6339 0017                                    i1l4693 0644  
                                  i1l4685 0627                                    i1l4677 0611  
                                  i1l4669 0D9A                                    i1l5661 0D0D  
                                  i1l5813 0721                                    i1l5805 0706  
                                  i1l6349 0036                                    i1l4695 0656  
                                  i1l4687 062C                                    i1l4679 0615  
                                  i1l5647 0C71                                    i1l5751 0F2E  
                                  i1l5823 0729                                    i1l5807 0710  
                                  u222_20 0644                                    u222_21 0643  
                                  i1l4689 0630                                    i1l4697 0657  
                                  i1l5681 0CEB                                    i1l5657 0CFD  
                                  i1l5665 0D0F                                    i1l5673 0D21  
                                  i1l5753 0F33                                    i1l5809 0714  
                                  i1l4699 065B                                    i1l4891 0DA1  
                                  i1l5683 0CF3                                    i1l5659 0D05  
                                  i1l5667 0D17                                    i1l5675 0D29  
                                  i1l5691 0DCF                                    i1l5843 0F5F  
                                  i1l5763 0F3B                                    i1l5771 0660  
                                  i1l5819 0725                                    i1l4893 0DA3  
                                  i1l5685 0CFB                                    i1l5669 0D1F  
                                  i1l5677 0D31                                    i1l5845 0F62  
                                  i1l5837 0F58                                    i1l5757 0F37  
                                  i1l5749 0F2C                                    i1l5829 072D  
                                  i1l4895 0DAB                                    i1l5839 0F5B  
                                  i1l5855 0F68                                    i1l5791 0699  
                                  i1l5783 0670                                    i1l5775 0668  
                                  u223_20 0656                                    u215_20 0D94  
                                  u223_21 0655                                    u215_21 0D91  
                                  i1l4897 0DB2                                    i1l5689 0DB8  
                                  i1l5849 0F64                                    i1l5793 06A5  
                                  i1l6761 0741                                    i1l4889 0B62  
                                  i1l4899 0B93                                    i1l5795 06B0  
                                  i1l6763 0689                                    i1l5779 066C  
                                  i1l6765 0F4F                                    i1l5797 06B2  
                                  i1l5789 0674                                    i1l6767 0F7C  
                                  u400_20 0036                                    u400_21 0035  
                                  _INLVLA 0F3C                                    _INLVLB 0F47  
                                  _INLVLC 0F52                                    u216_24 0D96  
                                  _INLVLD 0F5D                                    _INLVLE 0F68  
                                  u217_20 0D9A                                    u401_20 003A  
                                  u217_21 0D99                                    u401_21 0039  
                                  u218_20 060A                                    u402_20 0045  
                                  u218_21 0609                                    u402_21 0044  
                                  u219_20 0611                                    u403_20 0049  
                                  u219_21 0610                                    u403_21 0048  
                                  u182_20 0EE3                                    u182_21 0EE2  
                                  u190_25 0D57                                    u183_20 0CC0  
                                  u183_21 0CBF                                    _INTPPS 0E90  
                                  u185_20 0EA3                                    u265_20 0DB2  
                                  u361_20 0667                                    u185_21 0EA2  
                                  u265_21 0DB1                                    u361_21 0666  
                                  u266_20 0C96                                    u186_20 0EB2  
                                  u362_20 06B0                                    u266_21 0C95  
                                  u186_21 0EB1                                    u362_21 06AF  
                                  u187_20 0F91                                    u363_20 071E  
                                  u187_21 0F90                                    u363_21 071D  
                                  u188_20 0FAD                                    u188_21 0FAC  
                                  u189_20 0FBF                                    u189_21 0FBE  
                                  u367_20 0F0A                                    u367_21 0F09  
                                  u368_20 0F11                                    u368_21 0F10  
                                  u393_20 000B                                    u393_21 000A  
                                  u394_20 000F                                    u394_21 000E  
                                  u395_20 0017                                    u395_21 0016  
                                  u396_20 001B                                    u396_21 001A  
                                  _OSCFRQ 0893                                    u397_20 0023  
                                  u397_21 0022                                    u398_20 0027  
                                  u398_21 0026                                    u399_20 002B  
                                  u399_21 002A                    ??_do_I2C_SEND_ADR_READ 0070  
                rdBlkRegCompleteHandler@p 0076                                 ??_i2c_ISR 0074  
                               ??_ReadI2C 0044                ??_ADCC_GetConversionResult 0046  
                               ??_Read_S1 0044                                 ??_Read_S2 0044  
                          __CFG_PWRTE$OFF 0000              __end_ofi1_PWM6_LoadDutyValue 0D5E  
                   _i2c1_driver_getRXData 0B4E                          __end_of_mod1_LED 0C35  
                        __end_of_mod2_LED 0C2A                          __end_of_mod3_LED 0C40  
                        __end_of_mod4_LED 0C4B      __end_of_TMR1_DefaultInterruptHandler 0B40  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 0B3F  
                            _CCPTMRS1bits 021F                                    ___bmul 0D74  
             __end_of_do_I2C_DO_NACK_STOP 0B8E       __end_of_i2c_setDataCompleteCallback 0C7F  
             _i2c_setDataCompleteCallback 0C71                                 ??___awdiv 0048  
   __end_of_i2c1_driver_clearBusCollision 0B5A    __size_of_i2c1_driver_clearBusCollision 0003  
           _i2c1_driver_clearBusCollision 0B57                            __CFG_STVREN$ON 0000  
         __size_of_do_I2C_DO_NACK_RESTART 0005                                    _last1m 0038  
                                  _last5s 0039                          ?_TMR0_Initialize 0070  
                 __end_of_PWM6_Initialize 0C71                          ___awdiv@quotient 004B  
                          ?_do_I2C_DO_ACK 0070                                 ??_h_clock 0071  
                 __size_of_I2C_Initialize 000A                                    cksum@i 0048  
                           ?_INT_CallBack 0070                   __end_of_DATAEE_ReadByte 0CBA  
                               ??_sw1_EXT 0070                                 ??_cksum_w 004E  
                         _ADCC_Initialize 0D5E                                _s1_pressed 03BB  
             __end_of_i2c1_driver_sendACK 0B5E                            _PMD_Initialize 0BDF  
          __end_of_do_I2C_DO_ADDRESS_NACK 0F58                                _s2_pressed 03BA  
             __end_of_i2c1_driver_restart 0B48                              ?_returnReset 0076  
                               ?_ADC_read 0046                    ??_ADCC_StartConversion 0044  
             __end_of_i2c1_driver_startRX 0B4E          __size_of_INT_SetInterruptHandler 0006  
TMR0_SetInterruptHandler@InterruptHandler 0044   INT_SetInterruptHandler@InterruptHandler 0044  
TMR1_SetInterruptHandler@InterruptHandler 0044                   __end_of_TMR1_WriteTimer 0CEB  
                        ?_TMR1_Initialize 0070                         _SYSTEM_Initialize 0E1E  
                 __end_of__initialization 0067                           ??_i2c_setBuffer 0072  
                        _do_I2C_SEND_STOP 0B7F                        __size_of_do_I2C_RX 004A  
                      __size_of_do_I2C_TX 0054                        ?_SYSTEM_Initialize 0070  
                __size_of_do_I2C_TX_EMPTY 0033                       ___bmul@multiplicand 0044  
                 _rdBlkRegCompleteHandler 0DB8                          represent_led@aux 0052  
                        represent_led@val 0051                            __pcstackCOMMON 0070  
                     ??_SYSTEM_Initialize 0046                                 ?_TMR0_ISR 0070  
                               ?_TMR1_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                           __end_of_cksum 0800                          _DATAEE_WriteByte 0EB8  
                           __end_of_tsttc 054C                          ?_TMR2_Initialize 0070  
                            LED_bin@value 0044                            ??_INT_CallBack 0073  
                  __end_of_PMD_Initialize 0BE7                     __end_of_represent_led 0706  
             __size_of_EXT_INT_Initialize 000E                         ?_h_precisionclock 0070  
                              ??_ADC_read 0048               ADCC_StartConversion@channel 0044  
                          setCallBack@idx 0074                                   ??_cksum 0046  
                      ??_h_precisionclock 0074                    _do_I2C_DO_NACK_RESTART 0B8E  
               __end_of_SYSTEM_Initialize 0E3A                                   ??_tsttc 0046  
                          _mssp1_clearIRQ 0B54                                __pbssBANK0 0020  
                              __pbssBANK1 00A0            __size_of_rd2RegCompleteHandler 0012  
           __end_of_rd2RegCompleteHandler 0D33                        read_ring@nreg_init 0049  
          __size_of_wr2RegCompleteHandler 0012             __end_of_wr2RegCompleteHandler 0CFD  
                   _rd1RegCompleteHandler 0D0F                    ?_i2c1_driver_getRXData 0070  
                      __size_of_read_ring 003F                     _wr1RegCompleteHandler 0CFD  
            __size_of_i2c_busCollisionISR 0004                                __pmaintext 006B  
                           ??_do_I2C_IDLE 0070                      __size_of_setCallBack 0026  
                           ??_do_I2C_RCEN 0070                                   ?___bmul 0044  
        __end_of_TMR0_SetInterruptHandler 0BA5                                ??_TMR0_ISR 0077  
                              ??_TMR1_ISR 0072                           __CFG_PPS1WAY$ON 0000  
                 __end_of_ADCC_Initialize 0D74                __end_of_PWM6_LoadDutyValue 0DEA  
                         ??_do_I2C_DO_ACK 0070                                __pintentry 0004  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                                 _ADPREVH 008F                                   _ADPREVL 008E  
                        ?_PWM6_Initialize 0070                                 ?_WriteI2C 0070  
                     i2c_setBuffer@buffer 0073                                   _ADSTPTH 0113  
                                 _ADSTPTL 0112                           ?_PMD_Initialize 0070  
          ?_i2c1_driver_clearBusCollision 0070                                _last3000ms 007B  
                        ?_DATAEE_ReadByte 0044                         ?_i2c1_driver_open 0070  
                       __end_of_do_I2C_RX 0750                         __end_of_do_I2C_TX 06B4  
                       ?_i2c1_driver_stop 0070             i1PWM6_LoadDutyValue@dutyValue 0070  
                                 _LED_bin 0E04                        ??_i2c1_driver_open 0044  
                                 _INT_ISR 0B93                        ??_i2c1_driver_stop 0070  
                                 _OSCCON1 088D                                   _OSCCON3 088F  
                           ?_mssp1_setIRQ 0070                      i1_PWM6_LoadDutyValue 0D48  
                                 _NVMADRH 081B                                   _NVMADRL 081A  
                                 _NVMDATH 081D                                   _OSCTUNE 0892  
                                 _NVMDATL 081C                                   _NVMCON2 081F  
                                 _PWM6DCH 038D                                   _PWM6DCL 038C  
                                 _PWM6CON 038E                                   _SSP1ADD 018D  
                                 _SLRCONA 0F3B                                   _SLRCONB 0F46  
                                 _SLRCONC 0F51                                   _SLRCOND 0F5C  
                                 _SLRCONE 0F67                                   _SSP1BUF 018C  
                  __end_of_mssp1_clearIRQ 0B57                                   _SSP1MSK 018E  
          __size_of_ADCC_IsConversionDone 0007                                 ?_mod1_LED 0070  
                               ?_mod2_LED 0070                                 ?_mod3_LED 0070  
                               ?_mod4_LED 0070             __end_of_ADCC_IsConversionDone 0BBF  
                 ??_do_I2C_SEND_ADR_WRITE 0071                        __size_of_push_ring 0047  
                        ?_TMR1_WriteTimer 0070               ??_do_I2C_SEND_RESTART_WRITE 0070  
                      _i2c1_driver_TXData 0B66                      DATAEE_WriteByte@bAdd 004A  
                      _i2c1_driver_i2cISR 0028                                   _i2c_ISR 0F02  
               ??_rdBlkRegCompleteHandler 0077                                   _ReadI2C 0E75  
                                 _Read_S1 0C0C                                   _Read_S2 0C16  
                      _i2c1_driver_isNACK 0BBF                       ?_i2c1_driver_TXData 0070  
                    __CFG_SCANE$available 0000                           __size_of___bmul 0016  
                                 ___awdiv 054C                         ??_do_I2C_TX_EMPTY 0070  
                     ?_i2c1_driver_isNACK 0070                                ??_WriteI2C 0044  
                          _I2C_Initialize 0C02                                   _h_clock 0D8A  
                                 __ptext1 03FC                                   __ptext2 05AC  
                                 __ptext3 0E75                                   __ptext4 0E3A  
                                 __ptext5 06B4                                   __ptext6 054C  
                                 __ptext7 0FC1                                   __ptext8 0D74  
                                 __ptext9 0799                       __end_of_do_I2C_IDLE 0B70  
                     __end_of_do_I2C_RCEN 0BB8                                   _sw1_EXT 0F8B  
          ??_TMR1_DefaultInterruptHandler 0070                                   _cksum_w 0CCA  
                               _T1CONbits 020E                     _OSCILLATOR_Initialize 0BF9  
                               _T2CONbits 028E               __end_of_do_I2C_SEND_RESTART 0B7F  
                          ??_mssp1_setIRQ 0070                                _duty_cycle 007C  
                             reset_recv@i 004E         __size_of_TMR1_SetInterruptHandler 0006  
                   ?i1_PWM6_LoadDutyValue 0070                      ??_i2c1_driver_TXData 0070  
                       __end_of_read_ring 1000                  ??_PIN_MANAGER_Initialize 0044  
               ?_TMR1_SetInterruptHandler 0044                                 _T2HLTbits 028F  
                                 _nreg_pt 0043                   _INT_SetInterruptHandler 0B99  
                                 _lum_bin 0031                           ?_mssp1_clearIRQ 0070  
                              ??_mod1_LED 0048                                ??_mod2_LED 0048  
                              ??_mod3_LED 0048                                ??_mod4_LED 0048  
                _do_I2C_SEND_RESTART_READ 0B70                __size_of_SYSTEM_Initialize 001C  
                                 clrloop0 0BAC                                   _running 03E8  
                    __size_of_returnReset 0002                      end_of_initialization 0067  
                               _T2RSTbits 0291                      ??_i2c1_driver_isNACK 0070  
               __size_of_i2c_restartWrite 0002              __end_of_i2c1_driver_sendNACK 0B62  
                  ?_rd1RegCompleteHandler 0076                      __end_of_INT_CallBack 0C64  
                  ?_wr1RegCompleteHandler 0076              __end_of_i2c1_driver_resetBus 0B41  
                              _reset_recv 0E3A                             push_ring@nreg 004E  
               _do_I2C_SEND_RESTART_WRITE 0B75                    __end_of_I2C_Initialize 0C0C  
                        ?_ADCC_Initialize 0070                         __end_of_push_ring 07E0  
                   __CFG_WDTCPS$WDTCPS_14 0000                                _returnStop 0B41  
                _TMR0_SetInterruptHandler 0B9F           __end_of_rdBlkRegCompleteHandler 0DD1  
                __end_of_do_I2C_SEND_STOP 0B84                      __CFG_WDTCCS$HFINTOSC 0000  
                               _TRISCbits 0013      __size_of_i2c_setDataCompleteCallback 000E  
                             returnStop@p 0076                          __CFG_FEXTOSC$OFF 0000  
                       __size_of_ADC_read 001A                  __end_of_DATAEE_WriteByte 0EDC  
            i2c_setDataCompleteCallback@p 0046             __size_of_do_I2C_SEND_ADR_READ 0009  
                           ?_update_clock 0070                               _do_I2C_IDLE 0B6B  
                             _do_I2C_RCEN 0BB1                           ?_I2C_Initialize 0070  
                          __end_of___bmul 0D8A                         __size_of_TMR0_ISR 000F  
                       __size_of_TMR1_ISR 0017                    ?_OSCILLATOR_Initialize 0070  
       __size_of_ADCC_GetConversionResult 0009                 ??_INT_SetInterruptHandler 0046  
            __size_of_do_I2C_DO_NACK_STOP 0005                 ?_ADCC_GetConversionResult 0044  
                  ??i1_PWM6_LoadDutyValue 0072                   ?_do_I2C_DO_NACK_RESTART 0070  
                           __pbitnvCOMMON 03E8                       start_initialization 0051  
                     _i2c_busCollisionISR 0B62                  __size_of_TMR0_Initialize 0015  
         __size_of_PIN_MANAGER_Initialize 0049                          WriteI2C@data_out 0045  
           __size_of_ADCC_StartConversion 0008                              setCallBack@p 0072  
            __size_of_i2c1_driver_sendACK 0004                   i2c_setBuffer@bufferSize 0070  
                 ??_i2c1_driver_getRXData 0070                    rd1RegCompleteHandler@p 0076  
            __size_of_i2c1_driver_restart 0003              __size_of_i2c1_driver_startRX 0003  
                     DATAEE_ReadByte@bAdd 0044                     __end_of_i2c_setBuffer 0CCA  
            ?_INT_DefaultInterruptHandler 0070                 __size_of_h_precisionclock 005A  
                    ?_i2c_busCollisionISR 0070                            ??_update_clock 0070  
                        __CFG_LPBOREN$OFF 0000                               ?_reset_recv 0070  
                    __end_of_mssp1_setIRQ 0B54                  __size_of_TMR1_Initialize 001F  
                                ??___bmul 0045                          ??_PMD_Initialize 0044  
                  wr1RegCompleteHandler@p 0076                             ?_do_I2C_RESET 0070  
              __end_of_EXT_INT_Initialize 0C8D                               ?_returnStop 0076  
          __end_of_do_I2C_DO_NACK_RESTART 0B93                                read_ring@i 004E  
                    _i2c1_driver_sendNACK 0B5E                         read_ring@absindex 0050  
                       __size_of_WriteI2C 005A                                  ?_LED_bin 0044  
                             __pbssCOMMON 0078                                 ___latbits 0002  
                    _i2c1_driver_resetBus 0B40                                  ?_INT_ISR 0070  
                           __pcstackBANK0 0044                        _PWM6_LoadDutyValue 0DD1  
                __size_of_TMR2_Initialize 000F                               _delta10ms_2 007A  
                               _do_I2C_RX 0706                                 _do_I2C_TX 0660  
                   __size_of_INT_CallBack 000D            __size_of_do_I2C_SEND_ADR_WRITE 0008  
                       __size_of_mod1_LED 000B                         __size_of_mod2_LED 000A  
           __end_of_do_I2C_SEND_ADR_WRITE 0BD7                         __size_of_mod3_LED 000B  
                       __size_of_mod4_LED 000B                       ?_PWM6_LoadDutyValue 0044  
                        _i2c_restartWrite 0002                 __size_of_i2c1_driver_open 000C  
               __size_of_i2c1_driver_stop 0003                                  ?_i2c_ISR 0070  
                         _do_I2C_TX_EMPTY 0F58                                  ?_ReadI2C 0070  
                   _TMR0_InterruptHandler 0020                             ??_setCallBack 0073  
                                ?_Read_S1 0070                                  ?_Read_S2 0070  
                  __size_of_represent_led 0052                                 _delta10ms 0037  
                   _rd2RegCompleteHandler 0D21                     ??_i2c_busCollisionISR 0070  
                   __end_of_fsmStateTable 1020                    _PIN_MANAGER_Initialize 0750  
                   _wr2RegCompleteHandler 0CEB             ??_INT_DefaultInterruptHandler 0070  
        __end_of_TMR1_SetInterruptHandler 0BAB                         read_ring@subindex 004B  
                          ??_do_I2C_RESET 0070                                  ?___awdiv 0044  
                ??_do_I2C_DO_ADDRESS_NACK 0070               _i2c1_driver_busCollisionISR 002A  
                   __end_of_do_I2C_DO_ACK 0B89                      ??_PWM6_LoadDutyValue 0046  
                                ?_h_clock 0070              ??_INTERRUPT_InterruptManager 0077  
              ??_do_I2C_SEND_RESTART_READ 0070                     ?_i2c1_driver_sendNACK 0070  
                                ?_sw1_EXT 0070                                  ?_cksum_w 0070  
                            _INT_CallBack 0C57                          ??_mssp1_clearIRQ 0070  
                   ?_i2c1_driver_resetBus 0070        __size_of_do_I2C_SEND_RESTART_WRITE 0005  
                                _ADC_read 0DEA                                ?_do_I2C_RX 0070  
                              ?_do_I2C_TX 0070                  __size_of_PWM6_Initialize 000D  
                     __size_of_reset_recv 001C                            __size_of_cksum 0020  
                                _T2CLKCON 0290                  __size_of_DATAEE_ReadByte 000F  
                 ??_rd1RegCompleteHandler 0077                                 _read_ring 0FC1  
                          __size_of_tsttc 0150                   ??_wr1RegCompleteHandler 0077  
                   _ADCC_IsConversionDone 0BB8                         ??_TMR0_Initialize 0046  
                                _LATAbits 0016                                  _LATCbits 0018  
                     __size_of_returnStop 0002                                 clear_ram0 0BAB  
                                _PIE0bits 0716                                 _nreg_init 0042  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 004B  
              ??_TMR0_SetInterruptHandler 0046                                  _PIR0bits 070C  
                             _config_mode 03B8                                  _PIR3bits 070F  
                               _ring_byte 003D                                  _PIR4bits 0710  
                                _SSP1CON1 0190                                  _SSP1CON2 0191  
                                _TMR0_ISR 0C8D                                  _TMR1_ISR 0DA1  
            ?_i2c_setDataCompleteCallback 0044                                  _SSP1STAT 018F  
                     __end_of_setCallBack 0F02                          push_ring@nreg_pt 0054  
                       ??_TMR1_Initialize 0046                                _ADCON0bits 0093  
                              _ADCON1bits 0094                                _ADCON2bits 0095  
                              _ADCON3bits 0096                                 _push_ring 0799  
                           _represent_led 06B4                         ?_do_I2C_SEND_STOP 0070  
    __size_of_INT_DefaultInterruptHandler 0001                             ??_returnReset 0077  
                      ??_do_I2C_SEND_STOP 0070               __size_of_i2c1_driver_TXData 0005  
                        __size_of_LED_bin 001A                     DATAEE_WriteByte@bData 004C  
                    __end_of_update_clock 0EB8         __end_of_do_I2C_SEND_RESTART_WRITE 0B7A  
                        __size_of_INT_ISR 0006                   __end_of_do_I2C_TX_EMPTY 0F8B  
                              ?_read_ring 0048                  ?_rdBlkRegCompleteHandler 0076  
                       ?_DATAEE_WriteByte 004A              __size_of_do_I2C_SEND_RESTART 0005  
             __size_of_i2c1_driver_isNACK 0008                     __size_of_mssp1_setIRQ 0003  
                       ??_TMR2_Initialize 0044                    ?_rd2RegCompleteHandler 0076  
                      ??_DATAEE_WriteByte 004D                       _do_I2C_DO_NACK_STOP 0B89  
                        __size_of_i2c_ISR 002A                    ?_wr2RegCompleteHandler 0076  
                        _h_precisionclock 0606                          ??_I2C_Initialize 0044  
                        __size_of_ReadI2C 001F                                _ADSTATbits 0097  
                        __size_of_Read_S1 000A                          __size_of_Read_S2 000A  
        __end_of_ADCC_GetConversionResult 0BF9                              ?_do_I2C_IDLE 0070  
                            ?_do_I2C_RCEN 0070                                push_ring@i 0053  
                 ??_OSCILLATOR_Initialize 0044                       _i2c1_driver_sendACK 0B5A  
                        __size_of___awdiv 0060           __size_of_do_I2C_DO_ADDRESS_NACK 002C  
                     i2c1_driver_TXData@d 0070                    ??_i2c1_driver_sendNACK 0070  
           ??_i2c_setDataCompleteCallback 0075                                  _WriteI2C 05AC  
                     _i2c1_driver_restart 0B45                  _TMR1_SetInterruptHandler 0BA5  
                          ?_represent_led 004D                          __size_of_h_clock 0017  
                    ?_do_I2C_DO_NACK_STOP 0070                       _i2c1_driver_startRX 0B4B  
            __end_of_do_I2C_SEND_ADR_READ 0BF0                                ?_push_ring 004E  
                  ??_i2c1_driver_resetBus 0070                     _TMR1_InterruptHandler 0024  
                        __size_of_sw1_EXT 0036                          __size_of_cksum_w 0010  
                              _T0CON0bits 001E                  __size_of_ADCC_Initialize 0016  
                        read_ring@nreg_pt 004F                              _mssp1_setIRQ 0B51  
                             ??_do_I2C_RX 0070                               ??_do_I2C_TX 0071  
                                __ptext10 0C40                                  __ptext11 0C35  
                                __ptext20 0C9C                                  __ptext12 0C20  
                                __ptext21 0E56                                  __ptext13 0C2A  
                              _T1GCONbits 020F                                  __ptext30 0B99  
                                __ptext22 0BA5                                  __ptext14 0DD1  
                                __ptext31 0D5E                                  __ptext23 0D33  
                                __ptext15 0CCA                                  __ptext40 0BF0  
                                __ptext32 0C16                                  __ptext24 0B9F  
                                __ptext16 07E0                                  __ptext33 0C0C  
                                __ptext25 0C64                                  __ptext17 0CAB  
                                __ptext50 0B89                                  __ptext42 0B62  
                                __ptext34 0E04                                  __ptext26 0BDF  
                                __ptext18 0EB8                                  __ptext51 0B84  
                                __ptext43 0B57                                  __ptext35 0C02  
                                __ptext27 0750                                  __ptext19 0E1E  
                                __ptext60 0BC7                                  __ptext52 0BB1  
                                __ptext44 0F02                                  __ptext36 0C4B  
                                __ptext28 0BF9                                  __ptext61 0F58  
                                __ptext53 0BCF                                  __ptext45 0B54  
                                __ptext37 0DEA                                  __ptext29 0C7F  
                                __ptext70 0D21                                  __ptext62 0B51  
                                __ptext54 0BE7                                  __ptext46 0706  
                                __ptext38 0BD7                                  __ptext71 0D0F  
                                __ptext63 0BBF                                  __ptext55 0B7F  
                                __ptext47 0660                                  __ptext39 0BB8  
                                __ptext80 0B48                                  __ptext72 0CFD  
                                __ptext64 0B66                                  __ptext56 0B7A  
                                __ptext48 0F2C                                  __ptext81 0B45  
                                __ptext73 0002                                  __ptext65 0B4E  
                                __ptext57 0B75                                  __ptext49 0B8E  
                                __ptext90 0606                                  __ptext82 0B5A  
                                __ptext74 0B43                                  __ptext66 0B5E  
                                __ptext58 0B70                                  __ptext91 0D48  
                                __ptext83 0DA1                                  __ptext75 0B41  
                                __ptext67 0B40                                  __ptext59 0B6B  
                                __ptext92 0B93                                  __ptext84 0B3F  
                                __ptext76 0CEB                                  __ptext68 0B4B  
                                __ptext93 0C57                                  __ptext85 0D8A  
                                __ptext77 0C71                                  __ptext69 0DB8  
                                __ptext94 0B3D                                  __ptext86 0E94  
                                __ptext78 0EDC                                  __ptext95 0F8B  
                                __ptext87 0CDA                                  __ptext79 0CBA  
                                __ptext88 0C8D                                  __ptext89 0B3E  
                                _mod1_LED 0C2A                              _SSP1CON1bits 0190  
                                _mod2_LED 0C20                              _SSP1CON2bits 0191  
                                _mod3_LED 0C35                                  _mod4_LED 0C40  
                  ?_ADCC_IsConversionDone 0070                      ?_i2c1_driver_sendACK 0070  
                    __end_of_do_I2C_RESET 0BCF               DATAEE_WriteByte@GIEBitValue 004D  
                    ?_i2c1_driver_restart 0070                       __end_of_returnReset 0B45  
                        _i2c1_driver_open 0C4B                         ??_PWM6_Initialize 0044  
                        _i2c1_driver_stop 0B48                             __size_of_main 0391  
                    ?_i2c1_driver_startRX 0070            __size_of_i2c1_driver_getRXData 0003  
           __end_of_i2c1_driver_getRXData 0B51      __end_of_TMR0_DefaultInterruptHandler 0B3F  
   __size_of_TMR0_DefaultInterruptHandler 0001              _TMR0_DefaultInterruptHandler 0B3E  
                       ??_DATAEE_ReadByte 0046                      __CFG_WDTCWS$WDTCWS_7 0000  
                             _setCallBack 0EDC                              ??_reset_recv 004E  
                              tsttc@value 0047              __end_of_ADCC_StartConversion 0BDF  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 004F  
              _INTERRUPT_InterruptManager 0004                              _SSP1STATbits 018F  
                       ??_TMR1_WriteTimer 0072                                  cksum@res 0047  
        __end_of_do_I2C_SEND_RESTART_READ 0B75                              ??_returnStop 0077  
                __end_of_i2c_restartWrite 0004                     ??_do_I2C_DO_NACK_STOP 0070  
                              _INTCONbits 000B                               _NVMCON1bits 081E  
           __size_ofi1_PWM6_LoadDutyValue 0016                      _INT_InterruptHandler 0022  
                      __end_of_reset_recv 0E56                     ??_i2c1_driver_sendACK 0070  
                      _EXT_INT_Initialize 0C7F                          ?_do_I2C_TX_EMPTY 0070  
                             _select_mode 0036                               ??_read_ring 004C  
                  _do_I2C_DO_ADDRESS_NACK 0F2C                                  intlevel1 0000  
                   ??_i2c1_driver_restart 0070                    rd2RegCompleteHandler@p 0076  
                   ??_i2c1_driver_startRX 0070                   ?_PIN_MANAGER_Initialize 0070  
                       i2c_restartWrite@p 0076                         __CFG_CLKOUTEN$OFF 0000  
                     ?_EXT_INT_Initialize 0070                        __end_of_returnStop 0B43  
           ?_TMR0_DefaultInterruptHandler 0070                    wr2RegCompleteHandler@p 0076  
                ?_INT_SetInterruptHandler 0044                  _ADCC_GetConversionResult 0BF0  
                         ??_represent_led 004E                             __pstringtext1 1000  
                   __size_of_update_clock 0024                      ??_EXT_INT_Initialize 0046  
                          read_ring@index 004A                               ??_push_ring 0051  
                              _SSP1DATPPS 0EC6                                _SSP1CLKPPS 0EC5  
                         _TMR0_Initialize 0D33                    __size_of_i2c_setBuffer 0010  
                             _returnReset 0B43               PWM6_LoadDutyValue@dutyValue 0044  
                           read_ring@nreg 0048            __end_of_PIN_MANAGER_Initialize 0799  
                       ??_ADCC_Initialize 0044               __end_of_i2c_busCollisionISR 0B66  
          __size_of_rd1RegCompleteHandler 0012             __end_of_rd1RegCompleteHandler 0D21  
                      push_ring@nreg_init 004F            __size_of_wr1RegCompleteHandler 0012  
           __end_of_wr1RegCompleteHandler 0D0F                     _do_I2C_SEND_ADR_WRITE 0BCF  
                      push_ring@ring_byte 0050                      _do_I2C_SEND_ADR_READ 0BE7  
                         _TMR1_Initialize 0E56  
