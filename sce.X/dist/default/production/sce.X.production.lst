

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Oct 29 17:55:54 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	bitnvCOMMON,global,bit,class=COMMON,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssEEDATA,global,class=EEDATA,space=3,delta=2
     9                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,inline,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,delta=2
    54                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	text46,local,class=CODE,merge=1,delta=2
    62                           	psect	text47,local,class=CODE,merge=1,delta=2
    63                           	psect	text48,local,class=CODE,merge=1,delta=2
    64                           	psect	text49,local,class=CODE,merge=1,delta=2
    65                           	psect	text50,local,class=CODE,merge=1,delta=2
    66                           	psect	text51,local,class=CODE,merge=1,delta=2
    67                           	psect	text52,local,class=CODE,merge=1,delta=2
    68                           	psect	text53,local,class=CODE,merge=1,delta=2
    69                           	psect	text54,local,class=CODE,merge=1,delta=2
    70                           	psect	text55,local,class=CODE,merge=1,delta=2
    71                           	psect	text56,local,class=CODE,merge=1,delta=2
    72                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text60,local,class=CODE,merge=1,delta=2
    76                           	psect	text61,local,class=CODE,merge=1,delta=2
    77                           	psect	text62,local,class=CODE,merge=1,delta=2
    78                           	psect	text63,local,class=CODE,merge=1,delta=2
    79                           	psect	text64,local,class=CODE,merge=1,delta=2
    80                           	dabs	1,0x7E,2
    81  0000                     
    82                           ; Version 2.10
    83                           ; Generated 31/07/2019 GMT
    84                           ; 
    85                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC16F18875 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116  0000                     	;# 
   117  0001                     	;# 
   118  0002                     	;# 
   119  0003                     	;# 
   120  0004                     	;# 
   121  0005                     	;# 
   122  0006                     	;# 
   123  0007                     	;# 
   124  0008                     	;# 
   125  0009                     	;# 
   126  000A                     	;# 
   127  000B                     	;# 
   128  000C                     	;# 
   129  000D                     	;# 
   130  000E                     	;# 
   131  000F                     	;# 
   132  0010                     	;# 
   133  0011                     	;# 
   134  0012                     	;# 
   135  0013                     	;# 
   136  0014                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001C                     	;# 
   144  001C                     	;# 
   145  001D                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  008C                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  008E                     	;# 
   154  008F                     	;# 
   155  0090                     	;# 
   156  0090                     	;# 
   157  0091                     	;# 
   158  0093                     	;# 
   159  0094                     	;# 
   160  0095                     	;# 
   161  0096                     	;# 
   162  0097                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009A                     	;# 
   166  009B                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009E                     	;# 
   170  010C                     	;# 
   171  010D                     	;# 
   172  010E                     	;# 
   173  010E                     	;# 
   174  010F                     	;# 
   175  0110                     	;# 
   176  0110                     	;# 
   177  0111                     	;# 
   178  0112                     	;# 
   179  0112                     	;# 
   180  0113                     	;# 
   181  0114                     	;# 
   182  0114                     	;# 
   183  0115                     	;# 
   184  0116                     	;# 
   185  0116                     	;# 
   186  0117                     	;# 
   187  0119                     	;# 
   188  0119                     	;# 
   189  0119                     	;# 
   190  011A                     	;# 
   191  011A                     	;# 
   192  011A                     	;# 
   193  011B                     	;# 
   194  011B                     	;# 
   195  011B                     	;# 
   196  011B                     	;# 
   197  011B                     	;# 
   198  011C                     	;# 
   199  011C                     	;# 
   200  011C                     	;# 
   201  011D                     	;# 
   202  011D                     	;# 
   203  011D                     	;# 
   204  011E                     	;# 
   205  011E                     	;# 
   206  011E                     	;# 
   207  011F                     	;# 
   208  011F                     	;# 
   209  011F                     	;# 
   210  011F                     	;# 
   211  011F                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  018E                     	;# 
   215  018F                     	;# 
   216  0190                     	;# 
   217  0191                     	;# 
   218  0192                     	;# 
   219  0196                     	;# 
   220  0197                     	;# 
   221  0198                     	;# 
   222  0199                     	;# 
   223  019A                     	;# 
   224  019B                     	;# 
   225  019C                     	;# 
   226  020C                     	;# 
   227  020C                     	;# 
   228  020D                     	;# 
   229  020E                     	;# 
   230  020F                     	;# 
   231  020F                     	;# 
   232  0210                     	;# 
   233  0210                     	;# 
   234  0211                     	;# 
   235  0211                     	;# 
   236  0212                     	;# 
   237  0212                     	;# 
   238  0213                     	;# 
   239  0214                     	;# 
   240  0215                     	;# 
   241  0215                     	;# 
   242  0216                     	;# 
   243  0216                     	;# 
   244  0217                     	;# 
   245  0217                     	;# 
   246  0218                     	;# 
   247  0218                     	;# 
   248  0219                     	;# 
   249  021A                     	;# 
   250  021B                     	;# 
   251  021B                     	;# 
   252  021C                     	;# 
   253  021C                     	;# 
   254  021D                     	;# 
   255  021D                     	;# 
   256  021E                     	;# 
   257  021F                     	;# 
   258  028C                     	;# 
   259  028C                     	;# 
   260  028D                     	;# 
   261  028D                     	;# 
   262  028E                     	;# 
   263  028F                     	;# 
   264  0290                     	;# 
   265  0290                     	;# 
   266  0291                     	;# 
   267  0292                     	;# 
   268  0292                     	;# 
   269  0293                     	;# 
   270  0293                     	;# 
   271  0294                     	;# 
   272  0295                     	;# 
   273  0296                     	;# 
   274  0296                     	;# 
   275  0297                     	;# 
   276  0298                     	;# 
   277  0298                     	;# 
   278  0299                     	;# 
   279  0299                     	;# 
   280  029A                     	;# 
   281  029B                     	;# 
   282  029C                     	;# 
   283  029C                     	;# 
   284  029D                     	;# 
   285  030C                     	;# 
   286  030C                     	;# 
   287  030D                     	;# 
   288  030E                     	;# 
   289  030F                     	;# 
   290  0310                     	;# 
   291  0310                     	;# 
   292  0311                     	;# 
   293  0312                     	;# 
   294  0313                     	;# 
   295  0314                     	;# 
   296  0314                     	;# 
   297  0315                     	;# 
   298  0316                     	;# 
   299  0317                     	;# 
   300  0318                     	;# 
   301  0318                     	;# 
   302  0319                     	;# 
   303  031A                     	;# 
   304  031B                     	;# 
   305  031C                     	;# 
   306  031C                     	;# 
   307  031D                     	;# 
   308  031E                     	;# 
   309  031F                     	;# 
   310  038C                     	;# 
   311  038C                     	;# 
   312  038D                     	;# 
   313  038E                     	;# 
   314  0390                     	;# 
   315  0390                     	;# 
   316  0391                     	;# 
   317  0392                     	;# 
   318  040C                     	;# 
   319  040D                     	;# 
   320  040E                     	;# 
   321  040F                     	;# 
   322  0410                     	;# 
   323  0411                     	;# 
   324  0416                     	;# 
   325  0416                     	;# 
   326  0417                     	;# 
   327  0418                     	;# 
   328  0418                     	;# 
   329  0419                     	;# 
   330  041A                     	;# 
   331  041A                     	;# 
   332  041B                     	;# 
   333  041C                     	;# 
   334  041C                     	;# 
   335  041D                     	;# 
   336  041E                     	;# 
   337  041F                     	;# 
   338  048C                     	;# 
   339  048C                     	;# 
   340  048D                     	;# 
   341  048E                     	;# 
   342  048F                     	;# 
   343  048F                     	;# 
   344  0490                     	;# 
   345  0491                     	;# 
   346  0492                     	;# 
   347  0492                     	;# 
   348  0493                     	;# 
   349  0494                     	;# 
   350  0495                     	;# 
   351  0495                     	;# 
   352  0496                     	;# 
   353  0497                     	;# 
   354  0498                     	;# 
   355  0499                     	;# 
   356  049A                     	;# 
   357  049B                     	;# 
   358  049C                     	;# 
   359  049D                     	;# 
   360  050C                     	;# 
   361  050C                     	;# 
   362  050D                     	;# 
   363  050E                     	;# 
   364  050F                     	;# 
   365  050F                     	;# 
   366  0510                     	;# 
   367  0511                     	;# 
   368  0512                     	;# 
   369  0512                     	;# 
   370  0513                     	;# 
   371  0514                     	;# 
   372  0515                     	;# 
   373  0515                     	;# 
   374  0516                     	;# 
   375  0517                     	;# 
   376  0518                     	;# 
   377  0519                     	;# 
   378  051A                     	;# 
   379  051B                     	;# 
   380  051C                     	;# 
   381  051D                     	;# 
   382  058C                     	;# 
   383  058C                     	;# 
   384  058D                     	;# 
   385  058E                     	;# 
   386  058F                     	;# 
   387  058F                     	;# 
   388  0590                     	;# 
   389  0591                     	;# 
   390  0592                     	;# 
   391  0593                     	;# 
   392  060C                     	;# 
   393  060D                     	;# 
   394  060E                     	;# 
   395  060F                     	;# 
   396  0610                     	;# 
   397  0611                     	;# 
   398  0612                     	;# 
   399  0613                     	;# 
   400  0614                     	;# 
   401  0616                     	;# 
   402  0617                     	;# 
   403  0618                     	;# 
   404  0619                     	;# 
   405  061A                     	;# 
   406  061B                     	;# 
   407  061C                     	;# 
   408  061D                     	;# 
   409  061E                     	;# 
   410  068C                     	;# 
   411  068D                     	;# 
   412  068E                     	;# 
   413  068F                     	;# 
   414  0690                     	;# 
   415  0691                     	;# 
   416  0692                     	;# 
   417  0693                     	;# 
   418  0694                     	;# 
   419  070C                     	;# 
   420  070D                     	;# 
   421  070E                     	;# 
   422  070F                     	;# 
   423  0710                     	;# 
   424  0711                     	;# 
   425  0712                     	;# 
   426  0713                     	;# 
   427  0714                     	;# 
   428  0716                     	;# 
   429  0717                     	;# 
   430  0718                     	;# 
   431  0719                     	;# 
   432  071A                     	;# 
   433  071B                     	;# 
   434  071C                     	;# 
   435  071D                     	;# 
   436  071E                     	;# 
   437  0796                     	;# 
   438  0797                     	;# 
   439  0798                     	;# 
   440  0799                     	;# 
   441  079A                     	;# 
   442  079B                     	;# 
   443  080C                     	;# 
   444  080D                     	;# 
   445  080E                     	;# 
   446  080F                     	;# 
   447  0810                     	;# 
   448  0811                     	;# 
   449  0812                     	;# 
   450  0813                     	;# 
   451  0814                     	;# 
   452  081A                     	;# 
   453  081B                     	;# 
   454  081C                     	;# 
   455  081D                     	;# 
   456  081E                     	;# 
   457  081F                     	;# 
   458  088C                     	;# 
   459  088D                     	;# 
   460  088E                     	;# 
   461  088F                     	;# 
   462  0890                     	;# 
   463  0891                     	;# 
   464  0892                     	;# 
   465  0893                     	;# 
   466  0895                     	;# 
   467  0896                     	;# 
   468  0897                     	;# 
   469  0898                     	;# 
   470  0899                     	;# 
   471  089A                     	;# 
   472  089B                     	;# 
   473  090C                     	;# 
   474  090E                     	;# 
   475  090F                     	;# 
   476  091F                     	;# 
   477  091F                     	;# 
   478  098F                     	;# 
   479  098F                     	;# 
   480  0990                     	;# 
   481  0991                     	;# 
   482  0992                     	;# 
   483  0993                     	;# 
   484  0994                     	;# 
   485  0995                     	;# 
   486  0996                     	;# 
   487  0997                     	;# 
   488  0E0F                     	;# 
   489  0E10                     	;# 
   490  0E11                     	;# 
   491  0E12                     	;# 
   492  0E13                     	;# 
   493  0E14                     	;# 
   494  0E15                     	;# 
   495  0E16                     	;# 
   496  0E17                     	;# 
   497  0E18                     	;# 
   498  0E19                     	;# 
   499  0E1A                     	;# 
   500  0E1B                     	;# 
   501  0E1C                     	;# 
   502  0E1D                     	;# 
   503  0E1E                     	;# 
   504  0E1F                     	;# 
   505  0E20                     	;# 
   506  0E21                     	;# 
   507  0E22                     	;# 
   508  0E23                     	;# 
   509  0E24                     	;# 
   510  0E25                     	;# 
   511  0E26                     	;# 
   512  0E27                     	;# 
   513  0E28                     	;# 
   514  0E29                     	;# 
   515  0E2A                     	;# 
   516  0E2B                     	;# 
   517  0E2C                     	;# 
   518  0E2D                     	;# 
   519  0E2E                     	;# 
   520  0E2F                     	;# 
   521  0E30                     	;# 
   522  0E31                     	;# 
   523  0E32                     	;# 
   524  0E33                     	;# 
   525  0E34                     	;# 
   526  0E35                     	;# 
   527  0E36                     	;# 
   528  0E37                     	;# 
   529  0E8F                     	;# 
   530  0E90                     	;# 
   531  0E91                     	;# 
   532  0E92                     	;# 
   533  0E93                     	;# 
   534  0E94                     	;# 
   535  0E95                     	;# 
   536  0E96                     	;# 
   537  0E97                     	;# 
   538  0E9C                     	;# 
   539  0E9D                     	;# 
   540  0E9E                     	;# 
   541  0EA1                     	;# 
   542  0EA2                     	;# 
   543  0EA3                     	;# 
   544  0EA4                     	;# 
   545  0EA5                     	;# 
   546  0EA9                     	;# 
   547  0EAA                     	;# 
   548  0EAB                     	;# 
   549  0EAC                     	;# 
   550  0EB1                     	;# 
   551  0EB2                     	;# 
   552  0EB3                     	;# 
   553  0EB8                     	;# 
   554  0EB9                     	;# 
   555  0EBA                     	;# 
   556  0EBB                     	;# 
   557  0EBC                     	;# 
   558  0EBD                     	;# 
   559  0EBE                     	;# 
   560  0EC3                     	;# 
   561  0EC5                     	;# 
   562  0EC6                     	;# 
   563  0EC7                     	;# 
   564  0EC8                     	;# 
   565  0EC9                     	;# 
   566  0ECA                     	;# 
   567  0ECB                     	;# 
   568  0ECC                     	;# 
   569  0F10                     	;# 
   570  0F11                     	;# 
   571  0F12                     	;# 
   572  0F13                     	;# 
   573  0F14                     	;# 
   574  0F15                     	;# 
   575  0F16                     	;# 
   576  0F17                     	;# 
   577  0F18                     	;# 
   578  0F19                     	;# 
   579  0F1A                     	;# 
   580  0F1B                     	;# 
   581  0F1C                     	;# 
   582  0F1D                     	;# 
   583  0F1E                     	;# 
   584  0F1F                     	;# 
   585  0F20                     	;# 
   586  0F21                     	;# 
   587  0F22                     	;# 
   588  0F23                     	;# 
   589  0F24                     	;# 
   590  0F25                     	;# 
   591  0F26                     	;# 
   592  0F27                     	;# 
   593  0F28                     	;# 
   594  0F29                     	;# 
   595  0F2A                     	;# 
   596  0F2B                     	;# 
   597  0F2C                     	;# 
   598  0F2D                     	;# 
   599  0F2E                     	;# 
   600  0F2F                     	;# 
   601  0F30                     	;# 
   602  0F31                     	;# 
   603  0F32                     	;# 
   604  0F38                     	;# 
   605  0F39                     	;# 
   606  0F3A                     	;# 
   607  0F3B                     	;# 
   608  0F3C                     	;# 
   609  0F3D                     	;# 
   610  0F3E                     	;# 
   611  0F3F                     	;# 
   612  0F40                     	;# 
   613  0F41                     	;# 
   614  0F43                     	;# 
   615  0F44                     	;# 
   616  0F45                     	;# 
   617  0F46                     	;# 
   618  0F47                     	;# 
   619  0F48                     	;# 
   620  0F49                     	;# 
   621  0F4A                     	;# 
   622  0F4B                     	;# 
   623  0F4C                     	;# 
   624  0F4E                     	;# 
   625  0F4F                     	;# 
   626  0F50                     	;# 
   627  0F51                     	;# 
   628  0F52                     	;# 
   629  0F53                     	;# 
   630  0F54                     	;# 
   631  0F55                     	;# 
   632  0F56                     	;# 
   633  0F57                     	;# 
   634  0F59                     	;# 
   635  0F5A                     	;# 
   636  0F5B                     	;# 
   637  0F5C                     	;# 
   638  0F5D                     	;# 
   639  0F61                     	;# 
   640  0F62                     	;# 
   641  0F64                     	;# 
   642  0F65                     	;# 
   643  0F66                     	;# 
   644  0F67                     	;# 
   645  0F68                     	;# 
   646  0F69                     	;# 
   647  0F6A                     	;# 
   648  0F6B                     	;# 
   649  0F6C                     	;# 
   650  0F6D                     	;# 
   651  0FE4                     	;# 
   652  0FE5                     	;# 
   653  0FE6                     	;# 
   654  0FE7                     	;# 
   655  0FE8                     	;# 
   656  0FE9                     	;# 
   657  0FEA                     	;# 
   658  0FEB                     	;# 
   659  0FED                     	;# 
   660  0FEE                     	;# 
   661  0FEF                     	;# 
   662  0000                     	;# 
   663  0001                     	;# 
   664  0002                     	;# 
   665  0003                     	;# 
   666  0004                     	;# 
   667  0005                     	;# 
   668  0006                     	;# 
   669  0007                     	;# 
   670  0008                     	;# 
   671  0009                     	;# 
   672  000A                     	;# 
   673  000B                     	;# 
   674  000C                     	;# 
   675  000D                     	;# 
   676  000E                     	;# 
   677  000F                     	;# 
   678  0010                     	;# 
   679  0011                     	;# 
   680  0012                     	;# 
   681  0013                     	;# 
   682  0014                     	;# 
   683  0015                     	;# 
   684  0016                     	;# 
   685  0017                     	;# 
   686  0018                     	;# 
   687  0019                     	;# 
   688  001A                     	;# 
   689  001C                     	;# 
   690  001C                     	;# 
   691  001D                     	;# 
   692  001D                     	;# 
   693  001E                     	;# 
   694  001F                     	;# 
   695  008C                     	;# 
   696  008C                     	;# 
   697  008D                     	;# 
   698  008E                     	;# 
   699  008E                     	;# 
   700  008F                     	;# 
   701  0090                     	;# 
   702  0090                     	;# 
   703  0091                     	;# 
   704  0093                     	;# 
   705  0094                     	;# 
   706  0095                     	;# 
   707  0096                     	;# 
   708  0097                     	;# 
   709  0098                     	;# 
   710  0099                     	;# 
   711  009A                     	;# 
   712  009B                     	;# 
   713  009C                     	;# 
   714  009D                     	;# 
   715  009E                     	;# 
   716  010C                     	;# 
   717  010D                     	;# 
   718  010E                     	;# 
   719  010E                     	;# 
   720  010F                     	;# 
   721  0110                     	;# 
   722  0110                     	;# 
   723  0111                     	;# 
   724  0112                     	;# 
   725  0112                     	;# 
   726  0113                     	;# 
   727  0114                     	;# 
   728  0114                     	;# 
   729  0115                     	;# 
   730  0116                     	;# 
   731  0116                     	;# 
   732  0117                     	;# 
   733  0119                     	;# 
   734  0119                     	;# 
   735  0119                     	;# 
   736  011A                     	;# 
   737  011A                     	;# 
   738  011A                     	;# 
   739  011B                     	;# 
   740  011B                     	;# 
   741  011B                     	;# 
   742  011B                     	;# 
   743  011B                     	;# 
   744  011C                     	;# 
   745  011C                     	;# 
   746  011C                     	;# 
   747  011D                     	;# 
   748  011D                     	;# 
   749  011D                     	;# 
   750  011E                     	;# 
   751  011E                     	;# 
   752  011E                     	;# 
   753  011F                     	;# 
   754  011F                     	;# 
   755  011F                     	;# 
   756  011F                     	;# 
   757  011F                     	;# 
   758  018C                     	;# 
   759  018D                     	;# 
   760  018E                     	;# 
   761  018F                     	;# 
   762  0190                     	;# 
   763  0191                     	;# 
   764  0192                     	;# 
   765  0196                     	;# 
   766  0197                     	;# 
   767  0198                     	;# 
   768  0199                     	;# 
   769  019A                     	;# 
   770  019B                     	;# 
   771  019C                     	;# 
   772  020C                     	;# 
   773  020C                     	;# 
   774  020D                     	;# 
   775  020E                     	;# 
   776  020F                     	;# 
   777  020F                     	;# 
   778  0210                     	;# 
   779  0210                     	;# 
   780  0211                     	;# 
   781  0211                     	;# 
   782  0212                     	;# 
   783  0212                     	;# 
   784  0213                     	;# 
   785  0214                     	;# 
   786  0215                     	;# 
   787  0215                     	;# 
   788  0216                     	;# 
   789  0216                     	;# 
   790  0217                     	;# 
   791  0217                     	;# 
   792  0218                     	;# 
   793  0218                     	;# 
   794  0219                     	;# 
   795  021A                     	;# 
   796  021B                     	;# 
   797  021B                     	;# 
   798  021C                     	;# 
   799  021C                     	;# 
   800  021D                     	;# 
   801  021D                     	;# 
   802  021E                     	;# 
   803  021F                     	;# 
   804  028C                     	;# 
   805  028C                     	;# 
   806  028D                     	;# 
   807  028D                     	;# 
   808  028E                     	;# 
   809  028F                     	;# 
   810  0290                     	;# 
   811  0290                     	;# 
   812  0291                     	;# 
   813  0292                     	;# 
   814  0292                     	;# 
   815  0293                     	;# 
   816  0293                     	;# 
   817  0294                     	;# 
   818  0295                     	;# 
   819  0296                     	;# 
   820  0296                     	;# 
   821  0297                     	;# 
   822  0298                     	;# 
   823  0298                     	;# 
   824  0299                     	;# 
   825  0299                     	;# 
   826  029A                     	;# 
   827  029B                     	;# 
   828  029C                     	;# 
   829  029C                     	;# 
   830  029D                     	;# 
   831  030C                     	;# 
   832  030C                     	;# 
   833  030D                     	;# 
   834  030E                     	;# 
   835  030F                     	;# 
   836  0310                     	;# 
   837  0310                     	;# 
   838  0311                     	;# 
   839  0312                     	;# 
   840  0313                     	;# 
   841  0314                     	;# 
   842  0314                     	;# 
   843  0315                     	;# 
   844  0316                     	;# 
   845  0317                     	;# 
   846  0318                     	;# 
   847  0318                     	;# 
   848  0319                     	;# 
   849  031A                     	;# 
   850  031B                     	;# 
   851  031C                     	;# 
   852  031C                     	;# 
   853  031D                     	;# 
   854  031E                     	;# 
   855  031F                     	;# 
   856  038C                     	;# 
   857  038C                     	;# 
   858  038D                     	;# 
   859  038E                     	;# 
   860  0390                     	;# 
   861  0390                     	;# 
   862  0391                     	;# 
   863  0392                     	;# 
   864  040C                     	;# 
   865  040D                     	;# 
   866  040E                     	;# 
   867  040F                     	;# 
   868  0410                     	;# 
   869  0411                     	;# 
   870  0416                     	;# 
   871  0416                     	;# 
   872  0417                     	;# 
   873  0418                     	;# 
   874  0418                     	;# 
   875  0419                     	;# 
   876  041A                     	;# 
   877  041A                     	;# 
   878  041B                     	;# 
   879  041C                     	;# 
   880  041C                     	;# 
   881  041D                     	;# 
   882  041E                     	;# 
   883  041F                     	;# 
   884  048C                     	;# 
   885  048C                     	;# 
   886  048D                     	;# 
   887  048E                     	;# 
   888  048F                     	;# 
   889  048F                     	;# 
   890  0490                     	;# 
   891  0491                     	;# 
   892  0492                     	;# 
   893  0492                     	;# 
   894  0493                     	;# 
   895  0494                     	;# 
   896  0495                     	;# 
   897  0495                     	;# 
   898  0496                     	;# 
   899  0497                     	;# 
   900  0498                     	;# 
   901  0499                     	;# 
   902  049A                     	;# 
   903  049B                     	;# 
   904  049C                     	;# 
   905  049D                     	;# 
   906  050C                     	;# 
   907  050C                     	;# 
   908  050D                     	;# 
   909  050E                     	;# 
   910  050F                     	;# 
   911  050F                     	;# 
   912  0510                     	;# 
   913  0511                     	;# 
   914  0512                     	;# 
   915  0512                     	;# 
   916  0513                     	;# 
   917  0514                     	;# 
   918  0515                     	;# 
   919  0515                     	;# 
   920  0516                     	;# 
   921  0517                     	;# 
   922  0518                     	;# 
   923  0519                     	;# 
   924  051A                     	;# 
   925  051B                     	;# 
   926  051C                     	;# 
   927  051D                     	;# 
   928  058C                     	;# 
   929  058C                     	;# 
   930  058D                     	;# 
   931  058E                     	;# 
   932  058F                     	;# 
   933  058F                     	;# 
   934  0590                     	;# 
   935  0591                     	;# 
   936  0592                     	;# 
   937  0593                     	;# 
   938  060C                     	;# 
   939  060D                     	;# 
   940  060E                     	;# 
   941  060F                     	;# 
   942  0610                     	;# 
   943  0611                     	;# 
   944  0612                     	;# 
   945  0613                     	;# 
   946  0614                     	;# 
   947  0616                     	;# 
   948  0617                     	;# 
   949  0618                     	;# 
   950  0619                     	;# 
   951  061A                     	;# 
   952  061B                     	;# 
   953  061C                     	;# 
   954  061D                     	;# 
   955  061E                     	;# 
   956  068C                     	;# 
   957  068D                     	;# 
   958  068E                     	;# 
   959  068F                     	;# 
   960  0690                     	;# 
   961  0691                     	;# 
   962  0692                     	;# 
   963  0693                     	;# 
   964  0694                     	;# 
   965  070C                     	;# 
   966  070D                     	;# 
   967  070E                     	;# 
   968  070F                     	;# 
   969  0710                     	;# 
   970  0711                     	;# 
   971  0712                     	;# 
   972  0713                     	;# 
   973  0714                     	;# 
   974  0716                     	;# 
   975  0717                     	;# 
   976  0718                     	;# 
   977  0719                     	;# 
   978  071A                     	;# 
   979  071B                     	;# 
   980  071C                     	;# 
   981  071D                     	;# 
   982  071E                     	;# 
   983  0796                     	;# 
   984  0797                     	;# 
   985  0798                     	;# 
   986  0799                     	;# 
   987  079A                     	;# 
   988  079B                     	;# 
   989  080C                     	;# 
   990  080D                     	;# 
   991  080E                     	;# 
   992  080F                     	;# 
   993  0810                     	;# 
   994  0811                     	;# 
   995  0812                     	;# 
   996  0813                     	;# 
   997  0814                     	;# 
   998  081A                     	;# 
   999  081B                     	;# 
  1000  081C                     	;# 
  1001  081D                     	;# 
  1002  081E                     	;# 
  1003  081F                     	;# 
  1004  088C                     	;# 
  1005  088D                     	;# 
  1006  088E                     	;# 
  1007  088F                     	;# 
  1008  0890                     	;# 
  1009  0891                     	;# 
  1010  0892                     	;# 
  1011  0893                     	;# 
  1012  0895                     	;# 
  1013  0896                     	;# 
  1014  0897                     	;# 
  1015  0898                     	;# 
  1016  0899                     	;# 
  1017  089A                     	;# 
  1018  089B                     	;# 
  1019  090C                     	;# 
  1020  090E                     	;# 
  1021  090F                     	;# 
  1022  091F                     	;# 
  1023  091F                     	;# 
  1024  098F                     	;# 
  1025  098F                     	;# 
  1026  0990                     	;# 
  1027  0991                     	;# 
  1028  0992                     	;# 
  1029  0993                     	;# 
  1030  0994                     	;# 
  1031  0995                     	;# 
  1032  0996                     	;# 
  1033  0997                     	;# 
  1034  0E0F                     	;# 
  1035  0E10                     	;# 
  1036  0E11                     	;# 
  1037  0E12                     	;# 
  1038  0E13                     	;# 
  1039  0E14                     	;# 
  1040  0E15                     	;# 
  1041  0E16                     	;# 
  1042  0E17                     	;# 
  1043  0E18                     	;# 
  1044  0E19                     	;# 
  1045  0E1A                     	;# 
  1046  0E1B                     	;# 
  1047  0E1C                     	;# 
  1048  0E1D                     	;# 
  1049  0E1E                     	;# 
  1050  0E1F                     	;# 
  1051  0E20                     	;# 
  1052  0E21                     	;# 
  1053  0E22                     	;# 
  1054  0E23                     	;# 
  1055  0E24                     	;# 
  1056  0E25                     	;# 
  1057  0E26                     	;# 
  1058  0E27                     	;# 
  1059  0E28                     	;# 
  1060  0E29                     	;# 
  1061  0E2A                     	;# 
  1062  0E2B                     	;# 
  1063  0E2C                     	;# 
  1064  0E2D                     	;# 
  1065  0E2E                     	;# 
  1066  0E2F                     	;# 
  1067  0E30                     	;# 
  1068  0E31                     	;# 
  1069  0E32                     	;# 
  1070  0E33                     	;# 
  1071  0E34                     	;# 
  1072  0E35                     	;# 
  1073  0E36                     	;# 
  1074  0E37                     	;# 
  1075  0E8F                     	;# 
  1076  0E90                     	;# 
  1077  0E91                     	;# 
  1078  0E92                     	;# 
  1079  0E93                     	;# 
  1080  0E94                     	;# 
  1081  0E95                     	;# 
  1082  0E96                     	;# 
  1083  0E97                     	;# 
  1084  0E9C                     	;# 
  1085  0E9D                     	;# 
  1086  0E9E                     	;# 
  1087  0EA1                     	;# 
  1088  0EA2                     	;# 
  1089  0EA3                     	;# 
  1090  0EA4                     	;# 
  1091  0EA5                     	;# 
  1092  0EA9                     	;# 
  1093  0EAA                     	;# 
  1094  0EAB                     	;# 
  1095  0EAC                     	;# 
  1096  0EB1                     	;# 
  1097  0EB2                     	;# 
  1098  0EB3                     	;# 
  1099  0EB8                     	;# 
  1100  0EB9                     	;# 
  1101  0EBA                     	;# 
  1102  0EBB                     	;# 
  1103  0EBC                     	;# 
  1104  0EBD                     	;# 
  1105  0EBE                     	;# 
  1106  0EC3                     	;# 
  1107  0EC5                     	;# 
  1108  0EC6                     	;# 
  1109  0EC7                     	;# 
  1110  0EC8                     	;# 
  1111  0EC9                     	;# 
  1112  0ECA                     	;# 
  1113  0ECB                     	;# 
  1114  0ECC                     	;# 
  1115  0F10                     	;# 
  1116  0F11                     	;# 
  1117  0F12                     	;# 
  1118  0F13                     	;# 
  1119  0F14                     	;# 
  1120  0F15                     	;# 
  1121  0F16                     	;# 
  1122  0F17                     	;# 
  1123  0F18                     	;# 
  1124  0F19                     	;# 
  1125  0F1A                     	;# 
  1126  0F1B                     	;# 
  1127  0F1C                     	;# 
  1128  0F1D                     	;# 
  1129  0F1E                     	;# 
  1130  0F1F                     	;# 
  1131  0F20                     	;# 
  1132  0F21                     	;# 
  1133  0F22                     	;# 
  1134  0F23                     	;# 
  1135  0F24                     	;# 
  1136  0F25                     	;# 
  1137  0F26                     	;# 
  1138  0F27                     	;# 
  1139  0F28                     	;# 
  1140  0F29                     	;# 
  1141  0F2A                     	;# 
  1142  0F2B                     	;# 
  1143  0F2C                     	;# 
  1144  0F2D                     	;# 
  1145  0F2E                     	;# 
  1146  0F2F                     	;# 
  1147  0F30                     	;# 
  1148  0F31                     	;# 
  1149  0F32                     	;# 
  1150  0F38                     	;# 
  1151  0F39                     	;# 
  1152  0F3A                     	;# 
  1153  0F3B                     	;# 
  1154  0F3C                     	;# 
  1155  0F3D                     	;# 
  1156  0F3E                     	;# 
  1157  0F3F                     	;# 
  1158  0F40                     	;# 
  1159  0F41                     	;# 
  1160  0F43                     	;# 
  1161  0F44                     	;# 
  1162  0F45                     	;# 
  1163  0F46                     	;# 
  1164  0F47                     	;# 
  1165  0F48                     	;# 
  1166  0F49                     	;# 
  1167  0F4A                     	;# 
  1168  0F4B                     	;# 
  1169  0F4C                     	;# 
  1170  0F4E                     	;# 
  1171  0F4F                     	;# 
  1172  0F50                     	;# 
  1173  0F51                     	;# 
  1174  0F52                     	;# 
  1175  0F53                     	;# 
  1176  0F54                     	;# 
  1177  0F55                     	;# 
  1178  0F56                     	;# 
  1179  0F57                     	;# 
  1180  0F59                     	;# 
  1181  0F5A                     	;# 
  1182  0F5B                     	;# 
  1183  0F5C                     	;# 
  1184  0F5D                     	;# 
  1185  0F61                     	;# 
  1186  0F62                     	;# 
  1187  0F64                     	;# 
  1188  0F65                     	;# 
  1189  0F66                     	;# 
  1190  0F67                     	;# 
  1191  0F68                     	;# 
  1192  0F69                     	;# 
  1193  0F6A                     	;# 
  1194  0F6B                     	;# 
  1195  0F6C                     	;# 
  1196  0F6D                     	;# 
  1197  0FE4                     	;# 
  1198  0FE5                     	;# 
  1199  0FE6                     	;# 
  1200  0FE7                     	;# 
  1201  0FE8                     	;# 
  1202  0FE9                     	;# 
  1203  0FEA                     	;# 
  1204  0FEB                     	;# 
  1205  0FED                     	;# 
  1206  0FEE                     	;# 
  1207  0FEF                     	;# 
  1208  0000                     	;# 
  1209  0001                     	;# 
  1210  0002                     	;# 
  1211  0003                     	;# 
  1212  0004                     	;# 
  1213  0005                     	;# 
  1214  0006                     	;# 
  1215  0007                     	;# 
  1216  0008                     	;# 
  1217  0009                     	;# 
  1218  000A                     	;# 
  1219  000B                     	;# 
  1220  000C                     	;# 
  1221  000D                     	;# 
  1222  000E                     	;# 
  1223  000F                     	;# 
  1224  0010                     	;# 
  1225  0011                     	;# 
  1226  0012                     	;# 
  1227  0013                     	;# 
  1228  0014                     	;# 
  1229  0015                     	;# 
  1230  0016                     	;# 
  1231  0017                     	;# 
  1232  0018                     	;# 
  1233  0019                     	;# 
  1234  001A                     	;# 
  1235  001C                     	;# 
  1236  001C                     	;# 
  1237  001D                     	;# 
  1238  001D                     	;# 
  1239  001E                     	;# 
  1240  001F                     	;# 
  1241  008C                     	;# 
  1242  008C                     	;# 
  1243  008D                     	;# 
  1244  008E                     	;# 
  1245  008E                     	;# 
  1246  008F                     	;# 
  1247  0090                     	;# 
  1248  0090                     	;# 
  1249  0091                     	;# 
  1250  0093                     	;# 
  1251  0094                     	;# 
  1252  0095                     	;# 
  1253  0096                     	;# 
  1254  0097                     	;# 
  1255  0098                     	;# 
  1256  0099                     	;# 
  1257  009A                     	;# 
  1258  009B                     	;# 
  1259  009C                     	;# 
  1260  009D                     	;# 
  1261  009E                     	;# 
  1262  010C                     	;# 
  1263  010D                     	;# 
  1264  010E                     	;# 
  1265  010E                     	;# 
  1266  010F                     	;# 
  1267  0110                     	;# 
  1268  0110                     	;# 
  1269  0111                     	;# 
  1270  0112                     	;# 
  1271  0112                     	;# 
  1272  0113                     	;# 
  1273  0114                     	;# 
  1274  0114                     	;# 
  1275  0115                     	;# 
  1276  0116                     	;# 
  1277  0116                     	;# 
  1278  0117                     	;# 
  1279  0119                     	;# 
  1280  0119                     	;# 
  1281  0119                     	;# 
  1282  011A                     	;# 
  1283  011A                     	;# 
  1284  011A                     	;# 
  1285  011B                     	;# 
  1286  011B                     	;# 
  1287  011B                     	;# 
  1288  011B                     	;# 
  1289  011B                     	;# 
  1290  011C                     	;# 
  1291  011C                     	;# 
  1292  011C                     	;# 
  1293  011D                     	;# 
  1294  011D                     	;# 
  1295  011D                     	;# 
  1296  011E                     	;# 
  1297  011E                     	;# 
  1298  011E                     	;# 
  1299  011F                     	;# 
  1300  011F                     	;# 
  1301  011F                     	;# 
  1302  011F                     	;# 
  1303  011F                     	;# 
  1304  018C                     	;# 
  1305  018D                     	;# 
  1306  018E                     	;# 
  1307  018F                     	;# 
  1308  0190                     	;# 
  1309  0191                     	;# 
  1310  0192                     	;# 
  1311  0196                     	;# 
  1312  0197                     	;# 
  1313  0198                     	;# 
  1314  0199                     	;# 
  1315  019A                     	;# 
  1316  019B                     	;# 
  1317  019C                     	;# 
  1318  020C                     	;# 
  1319  020C                     	;# 
  1320  020D                     	;# 
  1321  020E                     	;# 
  1322  020F                     	;# 
  1323  020F                     	;# 
  1324  0210                     	;# 
  1325  0210                     	;# 
  1326  0211                     	;# 
  1327  0211                     	;# 
  1328  0212                     	;# 
  1329  0212                     	;# 
  1330  0213                     	;# 
  1331  0214                     	;# 
  1332  0215                     	;# 
  1333  0215                     	;# 
  1334  0216                     	;# 
  1335  0216                     	;# 
  1336  0217                     	;# 
  1337  0217                     	;# 
  1338  0218                     	;# 
  1339  0218                     	;# 
  1340  0219                     	;# 
  1341  021A                     	;# 
  1342  021B                     	;# 
  1343  021B                     	;# 
  1344  021C                     	;# 
  1345  021C                     	;# 
  1346  021D                     	;# 
  1347  021D                     	;# 
  1348  021E                     	;# 
  1349  021F                     	;# 
  1350  028C                     	;# 
  1351  028C                     	;# 
  1352  028D                     	;# 
  1353  028D                     	;# 
  1354  028E                     	;# 
  1355  028F                     	;# 
  1356  0290                     	;# 
  1357  0290                     	;# 
  1358  0291                     	;# 
  1359  0292                     	;# 
  1360  0292                     	;# 
  1361  0293                     	;# 
  1362  0293                     	;# 
  1363  0294                     	;# 
  1364  0295                     	;# 
  1365  0296                     	;# 
  1366  0296                     	;# 
  1367  0297                     	;# 
  1368  0298                     	;# 
  1369  0298                     	;# 
  1370  0299                     	;# 
  1371  0299                     	;# 
  1372  029A                     	;# 
  1373  029B                     	;# 
  1374  029C                     	;# 
  1375  029C                     	;# 
  1376  029D                     	;# 
  1377  030C                     	;# 
  1378  030C                     	;# 
  1379  030D                     	;# 
  1380  030E                     	;# 
  1381  030F                     	;# 
  1382  0310                     	;# 
  1383  0310                     	;# 
  1384  0311                     	;# 
  1385  0312                     	;# 
  1386  0313                     	;# 
  1387  0314                     	;# 
  1388  0314                     	;# 
  1389  0315                     	;# 
  1390  0316                     	;# 
  1391  0317                     	;# 
  1392  0318                     	;# 
  1393  0318                     	;# 
  1394  0319                     	;# 
  1395  031A                     	;# 
  1396  031B                     	;# 
  1397  031C                     	;# 
  1398  031C                     	;# 
  1399  031D                     	;# 
  1400  031E                     	;# 
  1401  031F                     	;# 
  1402  038C                     	;# 
  1403  038C                     	;# 
  1404  038D                     	;# 
  1405  038E                     	;# 
  1406  0390                     	;# 
  1407  0390                     	;# 
  1408  0391                     	;# 
  1409  0392                     	;# 
  1410  040C                     	;# 
  1411  040D                     	;# 
  1412  040E                     	;# 
  1413  040F                     	;# 
  1414  0410                     	;# 
  1415  0411                     	;# 
  1416  0416                     	;# 
  1417  0416                     	;# 
  1418  0417                     	;# 
  1419  0418                     	;# 
  1420  0418                     	;# 
  1421  0419                     	;# 
  1422  041A                     	;# 
  1423  041A                     	;# 
  1424  041B                     	;# 
  1425  041C                     	;# 
  1426  041C                     	;# 
  1427  041D                     	;# 
  1428  041E                     	;# 
  1429  041F                     	;# 
  1430  048C                     	;# 
  1431  048C                     	;# 
  1432  048D                     	;# 
  1433  048E                     	;# 
  1434  048F                     	;# 
  1435  048F                     	;# 
  1436  0490                     	;# 
  1437  0491                     	;# 
  1438  0492                     	;# 
  1439  0492                     	;# 
  1440  0493                     	;# 
  1441  0494                     	;# 
  1442  0495                     	;# 
  1443  0495                     	;# 
  1444  0496                     	;# 
  1445  0497                     	;# 
  1446  0498                     	;# 
  1447  0499                     	;# 
  1448  049A                     	;# 
  1449  049B                     	;# 
  1450  049C                     	;# 
  1451  049D                     	;# 
  1452  050C                     	;# 
  1453  050C                     	;# 
  1454  050D                     	;# 
  1455  050E                     	;# 
  1456  050F                     	;# 
  1457  050F                     	;# 
  1458  0510                     	;# 
  1459  0511                     	;# 
  1460  0512                     	;# 
  1461  0512                     	;# 
  1462  0513                     	;# 
  1463  0514                     	;# 
  1464  0515                     	;# 
  1465  0515                     	;# 
  1466  0516                     	;# 
  1467  0517                     	;# 
  1468  0518                     	;# 
  1469  0519                     	;# 
  1470  051A                     	;# 
  1471  051B                     	;# 
  1472  051C                     	;# 
  1473  051D                     	;# 
  1474  058C                     	;# 
  1475  058C                     	;# 
  1476  058D                     	;# 
  1477  058E                     	;# 
  1478  058F                     	;# 
  1479  058F                     	;# 
  1480  0590                     	;# 
  1481  0591                     	;# 
  1482  0592                     	;# 
  1483  0593                     	;# 
  1484  060C                     	;# 
  1485  060D                     	;# 
  1486  060E                     	;# 
  1487  060F                     	;# 
  1488  0610                     	;# 
  1489  0611                     	;# 
  1490  0612                     	;# 
  1491  0613                     	;# 
  1492  0614                     	;# 
  1493  0616                     	;# 
  1494  0617                     	;# 
  1495  0618                     	;# 
  1496  0619                     	;# 
  1497  061A                     	;# 
  1498  061B                     	;# 
  1499  061C                     	;# 
  1500  061D                     	;# 
  1501  061E                     	;# 
  1502  068C                     	;# 
  1503  068D                     	;# 
  1504  068E                     	;# 
  1505  068F                     	;# 
  1506  0690                     	;# 
  1507  0691                     	;# 
  1508  0692                     	;# 
  1509  0693                     	;# 
  1510  0694                     	;# 
  1511  070C                     	;# 
  1512  070D                     	;# 
  1513  070E                     	;# 
  1514  070F                     	;# 
  1515  0710                     	;# 
  1516  0711                     	;# 
  1517  0712                     	;# 
  1518  0713                     	;# 
  1519  0714                     	;# 
  1520  0716                     	;# 
  1521  0717                     	;# 
  1522  0718                     	;# 
  1523  0719                     	;# 
  1524  071A                     	;# 
  1525  071B                     	;# 
  1526  071C                     	;# 
  1527  071D                     	;# 
  1528  071E                     	;# 
  1529  0796                     	;# 
  1530  0797                     	;# 
  1531  0798                     	;# 
  1532  0799                     	;# 
  1533  079A                     	;# 
  1534  079B                     	;# 
  1535  080C                     	;# 
  1536  080D                     	;# 
  1537  080E                     	;# 
  1538  080F                     	;# 
  1539  0810                     	;# 
  1540  0811                     	;# 
  1541  0812                     	;# 
  1542  0813                     	;# 
  1543  0814                     	;# 
  1544  081A                     	;# 
  1545  081B                     	;# 
  1546  081C                     	;# 
  1547  081D                     	;# 
  1548  081E                     	;# 
  1549  081F                     	;# 
  1550  088C                     	;# 
  1551  088D                     	;# 
  1552  088E                     	;# 
  1553  088F                     	;# 
  1554  0890                     	;# 
  1555  0891                     	;# 
  1556  0892                     	;# 
  1557  0893                     	;# 
  1558  0895                     	;# 
  1559  0896                     	;# 
  1560  0897                     	;# 
  1561  0898                     	;# 
  1562  0899                     	;# 
  1563  089A                     	;# 
  1564  089B                     	;# 
  1565  090C                     	;# 
  1566  090E                     	;# 
  1567  090F                     	;# 
  1568  091F                     	;# 
  1569  091F                     	;# 
  1570  098F                     	;# 
  1571  098F                     	;# 
  1572  0990                     	;# 
  1573  0991                     	;# 
  1574  0992                     	;# 
  1575  0993                     	;# 
  1576  0994                     	;# 
  1577  0995                     	;# 
  1578  0996                     	;# 
  1579  0997                     	;# 
  1580  0E0F                     	;# 
  1581  0E10                     	;# 
  1582  0E11                     	;# 
  1583  0E12                     	;# 
  1584  0E13                     	;# 
  1585  0E14                     	;# 
  1586  0E15                     	;# 
  1587  0E16                     	;# 
  1588  0E17                     	;# 
  1589  0E18                     	;# 
  1590  0E19                     	;# 
  1591  0E1A                     	;# 
  1592  0E1B                     	;# 
  1593  0E1C                     	;# 
  1594  0E1D                     	;# 
  1595  0E1E                     	;# 
  1596  0E1F                     	;# 
  1597  0E20                     	;# 
  1598  0E21                     	;# 
  1599  0E22                     	;# 
  1600  0E23                     	;# 
  1601  0E24                     	;# 
  1602  0E25                     	;# 
  1603  0E26                     	;# 
  1604  0E27                     	;# 
  1605  0E28                     	;# 
  1606  0E29                     	;# 
  1607  0E2A                     	;# 
  1608  0E2B                     	;# 
  1609  0E2C                     	;# 
  1610  0E2D                     	;# 
  1611  0E2E                     	;# 
  1612  0E2F                     	;# 
  1613  0E30                     	;# 
  1614  0E31                     	;# 
  1615  0E32                     	;# 
  1616  0E33                     	;# 
  1617  0E34                     	;# 
  1618  0E35                     	;# 
  1619  0E36                     	;# 
  1620  0E37                     	;# 
  1621  0E8F                     	;# 
  1622  0E90                     	;# 
  1623  0E91                     	;# 
  1624  0E92                     	;# 
  1625  0E93                     	;# 
  1626  0E94                     	;# 
  1627  0E95                     	;# 
  1628  0E96                     	;# 
  1629  0E97                     	;# 
  1630  0E9C                     	;# 
  1631  0E9D                     	;# 
  1632  0E9E                     	;# 
  1633  0EA1                     	;# 
  1634  0EA2                     	;# 
  1635  0EA3                     	;# 
  1636  0EA4                     	;# 
  1637  0EA5                     	;# 
  1638  0EA9                     	;# 
  1639  0EAA                     	;# 
  1640  0EAB                     	;# 
  1641  0EAC                     	;# 
  1642  0EB1                     	;# 
  1643  0EB2                     	;# 
  1644  0EB3                     	;# 
  1645  0EB8                     	;# 
  1646  0EB9                     	;# 
  1647  0EBA                     	;# 
  1648  0EBB                     	;# 
  1649  0EBC                     	;# 
  1650  0EBD                     	;# 
  1651  0EBE                     	;# 
  1652  0EC3                     	;# 
  1653  0EC5                     	;# 
  1654  0EC6                     	;# 
  1655  0EC7                     	;# 
  1656  0EC8                     	;# 
  1657  0EC9                     	;# 
  1658  0ECA                     	;# 
  1659  0ECB                     	;# 
  1660  0ECC                     	;# 
  1661  0F10                     	;# 
  1662  0F11                     	;# 
  1663  0F12                     	;# 
  1664  0F13                     	;# 
  1665  0F14                     	;# 
  1666  0F15                     	;# 
  1667  0F16                     	;# 
  1668  0F17                     	;# 
  1669  0F18                     	;# 
  1670  0F19                     	;# 
  1671  0F1A                     	;# 
  1672  0F1B                     	;# 
  1673  0F1C                     	;# 
  1674  0F1D                     	;# 
  1675  0F1E                     	;# 
  1676  0F1F                     	;# 
  1677  0F20                     	;# 
  1678  0F21                     	;# 
  1679  0F22                     	;# 
  1680  0F23                     	;# 
  1681  0F24                     	;# 
  1682  0F25                     	;# 
  1683  0F26                     	;# 
  1684  0F27                     	;# 
  1685  0F28                     	;# 
  1686  0F29                     	;# 
  1687  0F2A                     	;# 
  1688  0F2B                     	;# 
  1689  0F2C                     	;# 
  1690  0F2D                     	;# 
  1691  0F2E                     	;# 
  1692  0F2F                     	;# 
  1693  0F30                     	;# 
  1694  0F31                     	;# 
  1695  0F32                     	;# 
  1696  0F38                     	;# 
  1697  0F39                     	;# 
  1698  0F3A                     	;# 
  1699  0F3B                     	;# 
  1700  0F3C                     	;# 
  1701  0F3D                     	;# 
  1702  0F3E                     	;# 
  1703  0F3F                     	;# 
  1704  0F40                     	;# 
  1705  0F41                     	;# 
  1706  0F43                     	;# 
  1707  0F44                     	;# 
  1708  0F45                     	;# 
  1709  0F46                     	;# 
  1710  0F47                     	;# 
  1711  0F48                     	;# 
  1712  0F49                     	;# 
  1713  0F4A                     	;# 
  1714  0F4B                     	;# 
  1715  0F4C                     	;# 
  1716  0F4E                     	;# 
  1717  0F4F                     	;# 
  1718  0F50                     	;# 
  1719  0F51                     	;# 
  1720  0F52                     	;# 
  1721  0F53                     	;# 
  1722  0F54                     	;# 
  1723  0F55                     	;# 
  1724  0F56                     	;# 
  1725  0F57                     	;# 
  1726  0F59                     	;# 
  1727  0F5A                     	;# 
  1728  0F5B                     	;# 
  1729  0F5C                     	;# 
  1730  0F5D                     	;# 
  1731  0F61                     	;# 
  1732  0F62                     	;# 
  1733  0F64                     	;# 
  1734  0F65                     	;# 
  1735  0F66                     	;# 
  1736  0F67                     	;# 
  1737  0F68                     	;# 
  1738  0F69                     	;# 
  1739  0F6A                     	;# 
  1740  0F6B                     	;# 
  1741  0F6C                     	;# 
  1742  0F6D                     	;# 
  1743  0FE4                     	;# 
  1744  0FE5                     	;# 
  1745  0FE6                     	;# 
  1746  0FE7                     	;# 
  1747  0FE8                     	;# 
  1748  0FE9                     	;# 
  1749  0FEA                     	;# 
  1750  0FEB                     	;# 
  1751  0FED                     	;# 
  1752  0FEE                     	;# 
  1753  0FEF                     	;# 
  1754  0000                     	;# 
  1755  0001                     	;# 
  1756  0002                     	;# 
  1757  0003                     	;# 
  1758  0004                     	;# 
  1759  0005                     	;# 
  1760  0006                     	;# 
  1761  0007                     	;# 
  1762  0008                     	;# 
  1763  0009                     	;# 
  1764  000A                     	;# 
  1765  000B                     	;# 
  1766  000C                     	;# 
  1767  000D                     	;# 
  1768  000E                     	;# 
  1769  000F                     	;# 
  1770  0010                     	;# 
  1771  0011                     	;# 
  1772  0012                     	;# 
  1773  0013                     	;# 
  1774  0014                     	;# 
  1775  0015                     	;# 
  1776  0016                     	;# 
  1777  0017                     	;# 
  1778  0018                     	;# 
  1779  0019                     	;# 
  1780  001A                     	;# 
  1781  001C                     	;# 
  1782  001C                     	;# 
  1783  001D                     	;# 
  1784  001D                     	;# 
  1785  001E                     	;# 
  1786  001F                     	;# 
  1787  008C                     	;# 
  1788  008C                     	;# 
  1789  008D                     	;# 
  1790  008E                     	;# 
  1791  008E                     	;# 
  1792  008F                     	;# 
  1793  0090                     	;# 
  1794  0090                     	;# 
  1795  0091                     	;# 
  1796  0093                     	;# 
  1797  0094                     	;# 
  1798  0095                     	;# 
  1799  0096                     	;# 
  1800  0097                     	;# 
  1801  0098                     	;# 
  1802  0099                     	;# 
  1803  009A                     	;# 
  1804  009B                     	;# 
  1805  009C                     	;# 
  1806  009D                     	;# 
  1807  009E                     	;# 
  1808  010C                     	;# 
  1809  010D                     	;# 
  1810  010E                     	;# 
  1811  010E                     	;# 
  1812  010F                     	;# 
  1813  0110                     	;# 
  1814  0110                     	;# 
  1815  0111                     	;# 
  1816  0112                     	;# 
  1817  0112                     	;# 
  1818  0113                     	;# 
  1819  0114                     	;# 
  1820  0114                     	;# 
  1821  0115                     	;# 
  1822  0116                     	;# 
  1823  0116                     	;# 
  1824  0117                     	;# 
  1825  0119                     	;# 
  1826  0119                     	;# 
  1827  0119                     	;# 
  1828  011A                     	;# 
  1829  011A                     	;# 
  1830  011A                     	;# 
  1831  011B                     	;# 
  1832  011B                     	;# 
  1833  011B                     	;# 
  1834  011B                     	;# 
  1835  011B                     	;# 
  1836  011C                     	;# 
  1837  011C                     	;# 
  1838  011C                     	;# 
  1839  011D                     	;# 
  1840  011D                     	;# 
  1841  011D                     	;# 
  1842  011E                     	;# 
  1843  011E                     	;# 
  1844  011E                     	;# 
  1845  011F                     	;# 
  1846  011F                     	;# 
  1847  011F                     	;# 
  1848  011F                     	;# 
  1849  011F                     	;# 
  1850  018C                     	;# 
  1851  018D                     	;# 
  1852  018E                     	;# 
  1853  018F                     	;# 
  1854  0190                     	;# 
  1855  0191                     	;# 
  1856  0192                     	;# 
  1857  0196                     	;# 
  1858  0197                     	;# 
  1859  0198                     	;# 
  1860  0199                     	;# 
  1861  019A                     	;# 
  1862  019B                     	;# 
  1863  019C                     	;# 
  1864  020C                     	;# 
  1865  020C                     	;# 
  1866  020D                     	;# 
  1867  020E                     	;# 
  1868  020F                     	;# 
  1869  020F                     	;# 
  1870  0210                     	;# 
  1871  0210                     	;# 
  1872  0211                     	;# 
  1873  0211                     	;# 
  1874  0212                     	;# 
  1875  0212                     	;# 
  1876  0213                     	;# 
  1877  0214                     	;# 
  1878  0215                     	;# 
  1879  0215                     	;# 
  1880  0216                     	;# 
  1881  0216                     	;# 
  1882  0217                     	;# 
  1883  0217                     	;# 
  1884  0218                     	;# 
  1885  0218                     	;# 
  1886  0219                     	;# 
  1887  021A                     	;# 
  1888  021B                     	;# 
  1889  021B                     	;# 
  1890  021C                     	;# 
  1891  021C                     	;# 
  1892  021D                     	;# 
  1893  021D                     	;# 
  1894  021E                     	;# 
  1895  021F                     	;# 
  1896  028C                     	;# 
  1897  028C                     	;# 
  1898  028D                     	;# 
  1899  028D                     	;# 
  1900  028E                     	;# 
  1901  028F                     	;# 
  1902  0290                     	;# 
  1903  0290                     	;# 
  1904  0291                     	;# 
  1905  0292                     	;# 
  1906  0292                     	;# 
  1907  0293                     	;# 
  1908  0293                     	;# 
  1909  0294                     	;# 
  1910  0295                     	;# 
  1911  0296                     	;# 
  1912  0296                     	;# 
  1913  0297                     	;# 
  1914  0298                     	;# 
  1915  0298                     	;# 
  1916  0299                     	;# 
  1917  0299                     	;# 
  1918  029A                     	;# 
  1919  029B                     	;# 
  1920  029C                     	;# 
  1921  029C                     	;# 
  1922  029D                     	;# 
  1923  030C                     	;# 
  1924  030C                     	;# 
  1925  030D                     	;# 
  1926  030E                     	;# 
  1927  030F                     	;# 
  1928  0310                     	;# 
  1929  0310                     	;# 
  1930  0311                     	;# 
  1931  0312                     	;# 
  1932  0313                     	;# 
  1933  0314                     	;# 
  1934  0314                     	;# 
  1935  0315                     	;# 
  1936  0316                     	;# 
  1937  0317                     	;# 
  1938  0318                     	;# 
  1939  0318                     	;# 
  1940  0319                     	;# 
  1941  031A                     	;# 
  1942  031B                     	;# 
  1943  031C                     	;# 
  1944  031C                     	;# 
  1945  031D                     	;# 
  1946  031E                     	;# 
  1947  031F                     	;# 
  1948  038C                     	;# 
  1949  038C                     	;# 
  1950  038D                     	;# 
  1951  038E                     	;# 
  1952  0390                     	;# 
  1953  0390                     	;# 
  1954  0391                     	;# 
  1955  0392                     	;# 
  1956  040C                     	;# 
  1957  040D                     	;# 
  1958  040E                     	;# 
  1959  040F                     	;# 
  1960  0410                     	;# 
  1961  0411                     	;# 
  1962  0416                     	;# 
  1963  0416                     	;# 
  1964  0417                     	;# 
  1965  0418                     	;# 
  1966  0418                     	;# 
  1967  0419                     	;# 
  1968  041A                     	;# 
  1969  041A                     	;# 
  1970  041B                     	;# 
  1971  041C                     	;# 
  1972  041C                     	;# 
  1973  041D                     	;# 
  1974  041E                     	;# 
  1975  041F                     	;# 
  1976  048C                     	;# 
  1977  048C                     	;# 
  1978  048D                     	;# 
  1979  048E                     	;# 
  1980  048F                     	;# 
  1981  048F                     	;# 
  1982  0490                     	;# 
  1983  0491                     	;# 
  1984  0492                     	;# 
  1985  0492                     	;# 
  1986  0493                     	;# 
  1987  0494                     	;# 
  1988  0495                     	;# 
  1989  0495                     	;# 
  1990  0496                     	;# 
  1991  0497                     	;# 
  1992  0498                     	;# 
  1993  0499                     	;# 
  1994  049A                     	;# 
  1995  049B                     	;# 
  1996  049C                     	;# 
  1997  049D                     	;# 
  1998  050C                     	;# 
  1999  050C                     	;# 
  2000  050D                     	;# 
  2001  050E                     	;# 
  2002  050F                     	;# 
  2003  050F                     	;# 
  2004  0510                     	;# 
  2005  0511                     	;# 
  2006  0512                     	;# 
  2007  0512                     	;# 
  2008  0513                     	;# 
  2009  0514                     	;# 
  2010  0515                     	;# 
  2011  0515                     	;# 
  2012  0516                     	;# 
  2013  0517                     	;# 
  2014  0518                     	;# 
  2015  0519                     	;# 
  2016  051A                     	;# 
  2017  051B                     	;# 
  2018  051C                     	;# 
  2019  051D                     	;# 
  2020  058C                     	;# 
  2021  058C                     	;# 
  2022  058D                     	;# 
  2023  058E                     	;# 
  2024  058F                     	;# 
  2025  058F                     	;# 
  2026  0590                     	;# 
  2027  0591                     	;# 
  2028  0592                     	;# 
  2029  0593                     	;# 
  2030  060C                     	;# 
  2031  060D                     	;# 
  2032  060E                     	;# 
  2033  060F                     	;# 
  2034  0610                     	;# 
  2035  0611                     	;# 
  2036  0612                     	;# 
  2037  0613                     	;# 
  2038  0614                     	;# 
  2039  0616                     	;# 
  2040  0617                     	;# 
  2041  0618                     	;# 
  2042  0619                     	;# 
  2043  061A                     	;# 
  2044  061B                     	;# 
  2045  061C                     	;# 
  2046  061D                     	;# 
  2047  061E                     	;# 
  2048  068C                     	;# 
  2049  068D                     	;# 
  2050  068E                     	;# 
  2051  068F                     	;# 
  2052  0690                     	;# 
  2053  0691                     	;# 
  2054  0692                     	;# 
  2055  0693                     	;# 
  2056  0694                     	;# 
  2057  070C                     	;# 
  2058  070D                     	;# 
  2059  070E                     	;# 
  2060  070F                     	;# 
  2061  0710                     	;# 
  2062  0711                     	;# 
  2063  0712                     	;# 
  2064  0713                     	;# 
  2065  0714                     	;# 
  2066  0716                     	;# 
  2067  0717                     	;# 
  2068  0718                     	;# 
  2069  0719                     	;# 
  2070  071A                     	;# 
  2071  071B                     	;# 
  2072  071C                     	;# 
  2073  071D                     	;# 
  2074  071E                     	;# 
  2075  0796                     	;# 
  2076  0797                     	;# 
  2077  0798                     	;# 
  2078  0799                     	;# 
  2079  079A                     	;# 
  2080  079B                     	;# 
  2081  080C                     	;# 
  2082  080D                     	;# 
  2083  080E                     	;# 
  2084  080F                     	;# 
  2085  0810                     	;# 
  2086  0811                     	;# 
  2087  0812                     	;# 
  2088  0813                     	;# 
  2089  0814                     	;# 
  2090  081A                     	;# 
  2091  081B                     	;# 
  2092  081C                     	;# 
  2093  081D                     	;# 
  2094  081E                     	;# 
  2095  081F                     	;# 
  2096  088C                     	;# 
  2097  088D                     	;# 
  2098  088E                     	;# 
  2099  088F                     	;# 
  2100  0890                     	;# 
  2101  0891                     	;# 
  2102  0892                     	;# 
  2103  0893                     	;# 
  2104  0895                     	;# 
  2105  0896                     	;# 
  2106  0897                     	;# 
  2107  0898                     	;# 
  2108  0899                     	;# 
  2109  089A                     	;# 
  2110  089B                     	;# 
  2111  090C                     	;# 
  2112  090E                     	;# 
  2113  090F                     	;# 
  2114  091F                     	;# 
  2115  091F                     	;# 
  2116  098F                     	;# 
  2117  098F                     	;# 
  2118  0990                     	;# 
  2119  0991                     	;# 
  2120  0992                     	;# 
  2121  0993                     	;# 
  2122  0994                     	;# 
  2123  0995                     	;# 
  2124  0996                     	;# 
  2125  0997                     	;# 
  2126  0E0F                     	;# 
  2127  0E10                     	;# 
  2128  0E11                     	;# 
  2129  0E12                     	;# 
  2130  0E13                     	;# 
  2131  0E14                     	;# 
  2132  0E15                     	;# 
  2133  0E16                     	;# 
  2134  0E17                     	;# 
  2135  0E18                     	;# 
  2136  0E19                     	;# 
  2137  0E1A                     	;# 
  2138  0E1B                     	;# 
  2139  0E1C                     	;# 
  2140  0E1D                     	;# 
  2141  0E1E                     	;# 
  2142  0E1F                     	;# 
  2143  0E20                     	;# 
  2144  0E21                     	;# 
  2145  0E22                     	;# 
  2146  0E23                     	;# 
  2147  0E24                     	;# 
  2148  0E25                     	;# 
  2149  0E26                     	;# 
  2150  0E27                     	;# 
  2151  0E28                     	;# 
  2152  0E29                     	;# 
  2153  0E2A                     	;# 
  2154  0E2B                     	;# 
  2155  0E2C                     	;# 
  2156  0E2D                     	;# 
  2157  0E2E                     	;# 
  2158  0E2F                     	;# 
  2159  0E30                     	;# 
  2160  0E31                     	;# 
  2161  0E32                     	;# 
  2162  0E33                     	;# 
  2163  0E34                     	;# 
  2164  0E35                     	;# 
  2165  0E36                     	;# 
  2166  0E37                     	;# 
  2167  0E8F                     	;# 
  2168  0E90                     	;# 
  2169  0E91                     	;# 
  2170  0E92                     	;# 
  2171  0E93                     	;# 
  2172  0E94                     	;# 
  2173  0E95                     	;# 
  2174  0E96                     	;# 
  2175  0E97                     	;# 
  2176  0E9C                     	;# 
  2177  0E9D                     	;# 
  2178  0E9E                     	;# 
  2179  0EA1                     	;# 
  2180  0EA2                     	;# 
  2181  0EA3                     	;# 
  2182  0EA4                     	;# 
  2183  0EA5                     	;# 
  2184  0EA9                     	;# 
  2185  0EAA                     	;# 
  2186  0EAB                     	;# 
  2187  0EAC                     	;# 
  2188  0EB1                     	;# 
  2189  0EB2                     	;# 
  2190  0EB3                     	;# 
  2191  0EB8                     	;# 
  2192  0EB9                     	;# 
  2193  0EBA                     	;# 
  2194  0EBB                     	;# 
  2195  0EBC                     	;# 
  2196  0EBD                     	;# 
  2197  0EBE                     	;# 
  2198  0EC3                     	;# 
  2199  0EC5                     	;# 
  2200  0EC6                     	;# 
  2201  0EC7                     	;# 
  2202  0EC8                     	;# 
  2203  0EC9                     	;# 
  2204  0ECA                     	;# 
  2205  0ECB                     	;# 
  2206  0ECC                     	;# 
  2207  0F10                     	;# 
  2208  0F11                     	;# 
  2209  0F12                     	;# 
  2210  0F13                     	;# 
  2211  0F14                     	;# 
  2212  0F15                     	;# 
  2213  0F16                     	;# 
  2214  0F17                     	;# 
  2215  0F18                     	;# 
  2216  0F19                     	;# 
  2217  0F1A                     	;# 
  2218  0F1B                     	;# 
  2219  0F1C                     	;# 
  2220  0F1D                     	;# 
  2221  0F1E                     	;# 
  2222  0F1F                     	;# 
  2223  0F20                     	;# 
  2224  0F21                     	;# 
  2225  0F22                     	;# 
  2226  0F23                     	;# 
  2227  0F24                     	;# 
  2228  0F25                     	;# 
  2229  0F26                     	;# 
  2230  0F27                     	;# 
  2231  0F28                     	;# 
  2232  0F29                     	;# 
  2233  0F2A                     	;# 
  2234  0F2B                     	;# 
  2235  0F2C                     	;# 
  2236  0F2D                     	;# 
  2237  0F2E                     	;# 
  2238  0F2F                     	;# 
  2239  0F30                     	;# 
  2240  0F31                     	;# 
  2241  0F32                     	;# 
  2242  0F38                     	;# 
  2243  0F39                     	;# 
  2244  0F3A                     	;# 
  2245  0F3B                     	;# 
  2246  0F3C                     	;# 
  2247  0F3D                     	;# 
  2248  0F3E                     	;# 
  2249  0F3F                     	;# 
  2250  0F40                     	;# 
  2251  0F41                     	;# 
  2252  0F43                     	;# 
  2253  0F44                     	;# 
  2254  0F45                     	;# 
  2255  0F46                     	;# 
  2256  0F47                     	;# 
  2257  0F48                     	;# 
  2258  0F49                     	;# 
  2259  0F4A                     	;# 
  2260  0F4B                     	;# 
  2261  0F4C                     	;# 
  2262  0F4E                     	;# 
  2263  0F4F                     	;# 
  2264  0F50                     	;# 
  2265  0F51                     	;# 
  2266  0F52                     	;# 
  2267  0F53                     	;# 
  2268  0F54                     	;# 
  2269  0F55                     	;# 
  2270  0F56                     	;# 
  2271  0F57                     	;# 
  2272  0F59                     	;# 
  2273  0F5A                     	;# 
  2274  0F5B                     	;# 
  2275  0F5C                     	;# 
  2276  0F5D                     	;# 
  2277  0F61                     	;# 
  2278  0F62                     	;# 
  2279  0F64                     	;# 
  2280  0F65                     	;# 
  2281  0F66                     	;# 
  2282  0F67                     	;# 
  2283  0F68                     	;# 
  2284  0F69                     	;# 
  2285  0F6A                     	;# 
  2286  0F6B                     	;# 
  2287  0F6C                     	;# 
  2288  0F6D                     	;# 
  2289  0FE4                     	;# 
  2290  0FE5                     	;# 
  2291  0FE6                     	;# 
  2292  0FE7                     	;# 
  2293  0FE8                     	;# 
  2294  0FE9                     	;# 
  2295  0FEA                     	;# 
  2296  0FEB                     	;# 
  2297  0FED                     	;# 
  2298  0FEE                     	;# 
  2299  0FEF                     	;# 
  2300  0000                     	;# 
  2301  0001                     	;# 
  2302  0002                     	;# 
  2303  0003                     	;# 
  2304  0004                     	;# 
  2305  0005                     	;# 
  2306  0006                     	;# 
  2307  0007                     	;# 
  2308  0008                     	;# 
  2309  0009                     	;# 
  2310  000A                     	;# 
  2311  000B                     	;# 
  2312  000C                     	;# 
  2313  000D                     	;# 
  2314  000E                     	;# 
  2315  000F                     	;# 
  2316  0010                     	;# 
  2317  0011                     	;# 
  2318  0012                     	;# 
  2319  0013                     	;# 
  2320  0014                     	;# 
  2321  0015                     	;# 
  2322  0016                     	;# 
  2323  0017                     	;# 
  2324  0018                     	;# 
  2325  0019                     	;# 
  2326  001A                     	;# 
  2327  001C                     	;# 
  2328  001C                     	;# 
  2329  001D                     	;# 
  2330  001D                     	;# 
  2331  001E                     	;# 
  2332  001F                     	;# 
  2333  008C                     	;# 
  2334  008C                     	;# 
  2335  008D                     	;# 
  2336  008E                     	;# 
  2337  008E                     	;# 
  2338  008F                     	;# 
  2339  0090                     	;# 
  2340  0090                     	;# 
  2341  0091                     	;# 
  2342  0093                     	;# 
  2343  0094                     	;# 
  2344  0095                     	;# 
  2345  0096                     	;# 
  2346  0097                     	;# 
  2347  0098                     	;# 
  2348  0099                     	;# 
  2349  009A                     	;# 
  2350  009B                     	;# 
  2351  009C                     	;# 
  2352  009D                     	;# 
  2353  009E                     	;# 
  2354  010C                     	;# 
  2355  010D                     	;# 
  2356  010E                     	;# 
  2357  010E                     	;# 
  2358  010F                     	;# 
  2359  0110                     	;# 
  2360  0110                     	;# 
  2361  0111                     	;# 
  2362  0112                     	;# 
  2363  0112                     	;# 
  2364  0113                     	;# 
  2365  0114                     	;# 
  2366  0114                     	;# 
  2367  0115                     	;# 
  2368  0116                     	;# 
  2369  0116                     	;# 
  2370  0117                     	;# 
  2371  0119                     	;# 
  2372  0119                     	;# 
  2373  0119                     	;# 
  2374  011A                     	;# 
  2375  011A                     	;# 
  2376  011A                     	;# 
  2377  011B                     	;# 
  2378  011B                     	;# 
  2379  011B                     	;# 
  2380  011B                     	;# 
  2381  011B                     	;# 
  2382  011C                     	;# 
  2383  011C                     	;# 
  2384  011C                     	;# 
  2385  011D                     	;# 
  2386  011D                     	;# 
  2387  011D                     	;# 
  2388  011E                     	;# 
  2389  011E                     	;# 
  2390  011E                     	;# 
  2391  011F                     	;# 
  2392  011F                     	;# 
  2393  011F                     	;# 
  2394  011F                     	;# 
  2395  011F                     	;# 
  2396  018C                     	;# 
  2397  018D                     	;# 
  2398  018E                     	;# 
  2399  018F                     	;# 
  2400  0190                     	;# 
  2401  0191                     	;# 
  2402  0192                     	;# 
  2403  0196                     	;# 
  2404  0197                     	;# 
  2405  0198                     	;# 
  2406  0199                     	;# 
  2407  019A                     	;# 
  2408  019B                     	;# 
  2409  019C                     	;# 
  2410  020C                     	;# 
  2411  020C                     	;# 
  2412  020D                     	;# 
  2413  020E                     	;# 
  2414  020F                     	;# 
  2415  020F                     	;# 
  2416  0210                     	;# 
  2417  0210                     	;# 
  2418  0211                     	;# 
  2419  0211                     	;# 
  2420  0212                     	;# 
  2421  0212                     	;# 
  2422  0213                     	;# 
  2423  0214                     	;# 
  2424  0215                     	;# 
  2425  0215                     	;# 
  2426  0216                     	;# 
  2427  0216                     	;# 
  2428  0217                     	;# 
  2429  0217                     	;# 
  2430  0218                     	;# 
  2431  0218                     	;# 
  2432  0219                     	;# 
  2433  021A                     	;# 
  2434  021B                     	;# 
  2435  021B                     	;# 
  2436  021C                     	;# 
  2437  021C                     	;# 
  2438  021D                     	;# 
  2439  021D                     	;# 
  2440  021E                     	;# 
  2441  021F                     	;# 
  2442  028C                     	;# 
  2443  028C                     	;# 
  2444  028D                     	;# 
  2445  028D                     	;# 
  2446  028E                     	;# 
  2447  028F                     	;# 
  2448  0290                     	;# 
  2449  0290                     	;# 
  2450  0291                     	;# 
  2451  0292                     	;# 
  2452  0292                     	;# 
  2453  0293                     	;# 
  2454  0293                     	;# 
  2455  0294                     	;# 
  2456  0295                     	;# 
  2457  0296                     	;# 
  2458  0296                     	;# 
  2459  0297                     	;# 
  2460  0298                     	;# 
  2461  0298                     	;# 
  2462  0299                     	;# 
  2463  0299                     	;# 
  2464  029A                     	;# 
  2465  029B                     	;# 
  2466  029C                     	;# 
  2467  029C                     	;# 
  2468  029D                     	;# 
  2469  030C                     	;# 
  2470  030C                     	;# 
  2471  030D                     	;# 
  2472  030E                     	;# 
  2473  030F                     	;# 
  2474  0310                     	;# 
  2475  0310                     	;# 
  2476  0311                     	;# 
  2477  0312                     	;# 
  2478  0313                     	;# 
  2479  0314                     	;# 
  2480  0314                     	;# 
  2481  0315                     	;# 
  2482  0316                     	;# 
  2483  0317                     	;# 
  2484  0318                     	;# 
  2485  0318                     	;# 
  2486  0319                     	;# 
  2487  031A                     	;# 
  2488  031B                     	;# 
  2489  031C                     	;# 
  2490  031C                     	;# 
  2491  031D                     	;# 
  2492  031E                     	;# 
  2493  031F                     	;# 
  2494  038C                     	;# 
  2495  038C                     	;# 
  2496  038D                     	;# 
  2497  038E                     	;# 
  2498  0390                     	;# 
  2499  0390                     	;# 
  2500  0391                     	;# 
  2501  0392                     	;# 
  2502  040C                     	;# 
  2503  040D                     	;# 
  2504  040E                     	;# 
  2505  040F                     	;# 
  2506  0410                     	;# 
  2507  0411                     	;# 
  2508  0416                     	;# 
  2509  0416                     	;# 
  2510  0417                     	;# 
  2511  0418                     	;# 
  2512  0418                     	;# 
  2513  0419                     	;# 
  2514  041A                     	;# 
  2515  041A                     	;# 
  2516  041B                     	;# 
  2517  041C                     	;# 
  2518  041C                     	;# 
  2519  041D                     	;# 
  2520  041E                     	;# 
  2521  041F                     	;# 
  2522  048C                     	;# 
  2523  048C                     	;# 
  2524  048D                     	;# 
  2525  048E                     	;# 
  2526  048F                     	;# 
  2527  048F                     	;# 
  2528  0490                     	;# 
  2529  0491                     	;# 
  2530  0492                     	;# 
  2531  0492                     	;# 
  2532  0493                     	;# 
  2533  0494                     	;# 
  2534  0495                     	;# 
  2535  0495                     	;# 
  2536  0496                     	;# 
  2537  0497                     	;# 
  2538  0498                     	;# 
  2539  0499                     	;# 
  2540  049A                     	;# 
  2541  049B                     	;# 
  2542  049C                     	;# 
  2543  049D                     	;# 
  2544  050C                     	;# 
  2545  050C                     	;# 
  2546  050D                     	;# 
  2547  050E                     	;# 
  2548  050F                     	;# 
  2549  050F                     	;# 
  2550  0510                     	;# 
  2551  0511                     	;# 
  2552  0512                     	;# 
  2553  0512                     	;# 
  2554  0513                     	;# 
  2555  0514                     	;# 
  2556  0515                     	;# 
  2557  0515                     	;# 
  2558  0516                     	;# 
  2559  0517                     	;# 
  2560  0518                     	;# 
  2561  0519                     	;# 
  2562  051A                     	;# 
  2563  051B                     	;# 
  2564  051C                     	;# 
  2565  051D                     	;# 
  2566  058C                     	;# 
  2567  058C                     	;# 
  2568  058D                     	;# 
  2569  058E                     	;# 
  2570  058F                     	;# 
  2571  058F                     	;# 
  2572  0590                     	;# 
  2573  0591                     	;# 
  2574  0592                     	;# 
  2575  0593                     	;# 
  2576  060C                     	;# 
  2577  060D                     	;# 
  2578  060E                     	;# 
  2579  060F                     	;# 
  2580  0610                     	;# 
  2581  0611                     	;# 
  2582  0612                     	;# 
  2583  0613                     	;# 
  2584  0614                     	;# 
  2585  0616                     	;# 
  2586  0617                     	;# 
  2587  0618                     	;# 
  2588  0619                     	;# 
  2589  061A                     	;# 
  2590  061B                     	;# 
  2591  061C                     	;# 
  2592  061D                     	;# 
  2593  061E                     	;# 
  2594  068C                     	;# 
  2595  068D                     	;# 
  2596  068E                     	;# 
  2597  068F                     	;# 
  2598  0690                     	;# 
  2599  0691                     	;# 
  2600  0692                     	;# 
  2601  0693                     	;# 
  2602  0694                     	;# 
  2603  070C                     	;# 
  2604  070D                     	;# 
  2605  070E                     	;# 
  2606  070F                     	;# 
  2607  0710                     	;# 
  2608  0711                     	;# 
  2609  0712                     	;# 
  2610  0713                     	;# 
  2611  0714                     	;# 
  2612  0716                     	;# 
  2613  0717                     	;# 
  2614  0718                     	;# 
  2615  0719                     	;# 
  2616  071A                     	;# 
  2617  071B                     	;# 
  2618  071C                     	;# 
  2619  071D                     	;# 
  2620  071E                     	;# 
  2621  0796                     	;# 
  2622  0797                     	;# 
  2623  0798                     	;# 
  2624  0799                     	;# 
  2625  079A                     	;# 
  2626  079B                     	;# 
  2627  080C                     	;# 
  2628  080D                     	;# 
  2629  080E                     	;# 
  2630  080F                     	;# 
  2631  0810                     	;# 
  2632  0811                     	;# 
  2633  0812                     	;# 
  2634  0813                     	;# 
  2635  0814                     	;# 
  2636  081A                     	;# 
  2637  081B                     	;# 
  2638  081C                     	;# 
  2639  081D                     	;# 
  2640  081E                     	;# 
  2641  081F                     	;# 
  2642  088C                     	;# 
  2643  088D                     	;# 
  2644  088E                     	;# 
  2645  088F                     	;# 
  2646  0890                     	;# 
  2647  0891                     	;# 
  2648  0892                     	;# 
  2649  0893                     	;# 
  2650  0895                     	;# 
  2651  0896                     	;# 
  2652  0897                     	;# 
  2653  0898                     	;# 
  2654  0899                     	;# 
  2655  089A                     	;# 
  2656  089B                     	;# 
  2657  090C                     	;# 
  2658  090E                     	;# 
  2659  090F                     	;# 
  2660  091F                     	;# 
  2661  091F                     	;# 
  2662  098F                     	;# 
  2663  098F                     	;# 
  2664  0990                     	;# 
  2665  0991                     	;# 
  2666  0992                     	;# 
  2667  0993                     	;# 
  2668  0994                     	;# 
  2669  0995                     	;# 
  2670  0996                     	;# 
  2671  0997                     	;# 
  2672  0E0F                     	;# 
  2673  0E10                     	;# 
  2674  0E11                     	;# 
  2675  0E12                     	;# 
  2676  0E13                     	;# 
  2677  0E14                     	;# 
  2678  0E15                     	;# 
  2679  0E16                     	;# 
  2680  0E17                     	;# 
  2681  0E18                     	;# 
  2682  0E19                     	;# 
  2683  0E1A                     	;# 
  2684  0E1B                     	;# 
  2685  0E1C                     	;# 
  2686  0E1D                     	;# 
  2687  0E1E                     	;# 
  2688  0E1F                     	;# 
  2689  0E20                     	;# 
  2690  0E21                     	;# 
  2691  0E22                     	;# 
  2692  0E23                     	;# 
  2693  0E24                     	;# 
  2694  0E25                     	;# 
  2695  0E26                     	;# 
  2696  0E27                     	;# 
  2697  0E28                     	;# 
  2698  0E29                     	;# 
  2699  0E2A                     	;# 
  2700  0E2B                     	;# 
  2701  0E2C                     	;# 
  2702  0E2D                     	;# 
  2703  0E2E                     	;# 
  2704  0E2F                     	;# 
  2705  0E30                     	;# 
  2706  0E31                     	;# 
  2707  0E32                     	;# 
  2708  0E33                     	;# 
  2709  0E34                     	;# 
  2710  0E35                     	;# 
  2711  0E36                     	;# 
  2712  0E37                     	;# 
  2713  0E8F                     	;# 
  2714  0E90                     	;# 
  2715  0E91                     	;# 
  2716  0E92                     	;# 
  2717  0E93                     	;# 
  2718  0E94                     	;# 
  2719  0E95                     	;# 
  2720  0E96                     	;# 
  2721  0E97                     	;# 
  2722  0E9C                     	;# 
  2723  0E9D                     	;# 
  2724  0E9E                     	;# 
  2725  0EA1                     	;# 
  2726  0EA2                     	;# 
  2727  0EA3                     	;# 
  2728  0EA4                     	;# 
  2729  0EA5                     	;# 
  2730  0EA9                     	;# 
  2731  0EAA                     	;# 
  2732  0EAB                     	;# 
  2733  0EAC                     	;# 
  2734  0EB1                     	;# 
  2735  0EB2                     	;# 
  2736  0EB3                     	;# 
  2737  0EB8                     	;# 
  2738  0EB9                     	;# 
  2739  0EBA                     	;# 
  2740  0EBB                     	;# 
  2741  0EBC                     	;# 
  2742  0EBD                     	;# 
  2743  0EBE                     	;# 
  2744  0EC3                     	;# 
  2745  0EC5                     	;# 
  2746  0EC6                     	;# 
  2747  0EC7                     	;# 
  2748  0EC8                     	;# 
  2749  0EC9                     	;# 
  2750  0ECA                     	;# 
  2751  0ECB                     	;# 
  2752  0ECC                     	;# 
  2753  0F10                     	;# 
  2754  0F11                     	;# 
  2755  0F12                     	;# 
  2756  0F13                     	;# 
  2757  0F14                     	;# 
  2758  0F15                     	;# 
  2759  0F16                     	;# 
  2760  0F17                     	;# 
  2761  0F18                     	;# 
  2762  0F19                     	;# 
  2763  0F1A                     	;# 
  2764  0F1B                     	;# 
  2765  0F1C                     	;# 
  2766  0F1D                     	;# 
  2767  0F1E                     	;# 
  2768  0F1F                     	;# 
  2769  0F20                     	;# 
  2770  0F21                     	;# 
  2771  0F22                     	;# 
  2772  0F23                     	;# 
  2773  0F24                     	;# 
  2774  0F25                     	;# 
  2775  0F26                     	;# 
  2776  0F27                     	;# 
  2777  0F28                     	;# 
  2778  0F29                     	;# 
  2779  0F2A                     	;# 
  2780  0F2B                     	;# 
  2781  0F2C                     	;# 
  2782  0F2D                     	;# 
  2783  0F2E                     	;# 
  2784  0F2F                     	;# 
  2785  0F30                     	;# 
  2786  0F31                     	;# 
  2787  0F32                     	;# 
  2788  0F38                     	;# 
  2789  0F39                     	;# 
  2790  0F3A                     	;# 
  2791  0F3B                     	;# 
  2792  0F3C                     	;# 
  2793  0F3D                     	;# 
  2794  0F3E                     	;# 
  2795  0F3F                     	;# 
  2796  0F40                     	;# 
  2797  0F41                     	;# 
  2798  0F43                     	;# 
  2799  0F44                     	;# 
  2800  0F45                     	;# 
  2801  0F46                     	;# 
  2802  0F47                     	;# 
  2803  0F48                     	;# 
  2804  0F49                     	;# 
  2805  0F4A                     	;# 
  2806  0F4B                     	;# 
  2807  0F4C                     	;# 
  2808  0F4E                     	;# 
  2809  0F4F                     	;# 
  2810  0F50                     	;# 
  2811  0F51                     	;# 
  2812  0F52                     	;# 
  2813  0F53                     	;# 
  2814  0F54                     	;# 
  2815  0F55                     	;# 
  2816  0F56                     	;# 
  2817  0F57                     	;# 
  2818  0F59                     	;# 
  2819  0F5A                     	;# 
  2820  0F5B                     	;# 
  2821  0F5C                     	;# 
  2822  0F5D                     	;# 
  2823  0F61                     	;# 
  2824  0F62                     	;# 
  2825  0F64                     	;# 
  2826  0F65                     	;# 
  2827  0F66                     	;# 
  2828  0F67                     	;# 
  2829  0F68                     	;# 
  2830  0F69                     	;# 
  2831  0F6A                     	;# 
  2832  0F6B                     	;# 
  2833  0F6C                     	;# 
  2834  0F6D                     	;# 
  2835  0FE4                     	;# 
  2836  0FE5                     	;# 
  2837  0FE6                     	;# 
  2838  0FE7                     	;# 
  2839  0FE8                     	;# 
  2840  0FE9                     	;# 
  2841  0FEA                     	;# 
  2842  0FEB                     	;# 
  2843  0FED                     	;# 
  2844  0FEE                     	;# 
  2845  0FEF                     	;# 
  2846  0000                     	;# 
  2847  0001                     	;# 
  2848  0002                     	;# 
  2849  0003                     	;# 
  2850  0004                     	;# 
  2851  0005                     	;# 
  2852  0006                     	;# 
  2853  0007                     	;# 
  2854  0008                     	;# 
  2855  0009                     	;# 
  2856  000A                     	;# 
  2857  000B                     	;# 
  2858  000C                     	;# 
  2859  000D                     	;# 
  2860  000E                     	;# 
  2861  000F                     	;# 
  2862  0010                     	;# 
  2863  0011                     	;# 
  2864  0012                     	;# 
  2865  0013                     	;# 
  2866  0014                     	;# 
  2867  0015                     	;# 
  2868  0016                     	;# 
  2869  0017                     	;# 
  2870  0018                     	;# 
  2871  0019                     	;# 
  2872  001A                     	;# 
  2873  001C                     	;# 
  2874  001C                     	;# 
  2875  001D                     	;# 
  2876  001D                     	;# 
  2877  001E                     	;# 
  2878  001F                     	;# 
  2879  008C                     	;# 
  2880  008C                     	;# 
  2881  008D                     	;# 
  2882  008E                     	;# 
  2883  008E                     	;# 
  2884  008F                     	;# 
  2885  0090                     	;# 
  2886  0090                     	;# 
  2887  0091                     	;# 
  2888  0093                     	;# 
  2889  0094                     	;# 
  2890  0095                     	;# 
  2891  0096                     	;# 
  2892  0097                     	;# 
  2893  0098                     	;# 
  2894  0099                     	;# 
  2895  009A                     	;# 
  2896  009B                     	;# 
  2897  009C                     	;# 
  2898  009D                     	;# 
  2899  009E                     	;# 
  2900  010C                     	;# 
  2901  010D                     	;# 
  2902  010E                     	;# 
  2903  010E                     	;# 
  2904  010F                     	;# 
  2905  0110                     	;# 
  2906  0110                     	;# 
  2907  0111                     	;# 
  2908  0112                     	;# 
  2909  0112                     	;# 
  2910  0113                     	;# 
  2911  0114                     	;# 
  2912  0114                     	;# 
  2913  0115                     	;# 
  2914  0116                     	;# 
  2915  0116                     	;# 
  2916  0117                     	;# 
  2917  0119                     	;# 
  2918  0119                     	;# 
  2919  0119                     	;# 
  2920  011A                     	;# 
  2921  011A                     	;# 
  2922  011A                     	;# 
  2923  011B                     	;# 
  2924  011B                     	;# 
  2925  011B                     	;# 
  2926  011B                     	;# 
  2927  011B                     	;# 
  2928  011C                     	;# 
  2929  011C                     	;# 
  2930  011C                     	;# 
  2931  011D                     	;# 
  2932  011D                     	;# 
  2933  011D                     	;# 
  2934  011E                     	;# 
  2935  011E                     	;# 
  2936  011E                     	;# 
  2937  011F                     	;# 
  2938  011F                     	;# 
  2939  011F                     	;# 
  2940  011F                     	;# 
  2941  011F                     	;# 
  2942  018C                     	;# 
  2943  018D                     	;# 
  2944  018E                     	;# 
  2945  018F                     	;# 
  2946  0190                     	;# 
  2947  0191                     	;# 
  2948  0192                     	;# 
  2949  0196                     	;# 
  2950  0197                     	;# 
  2951  0198                     	;# 
  2952  0199                     	;# 
  2953  019A                     	;# 
  2954  019B                     	;# 
  2955  019C                     	;# 
  2956  020C                     	;# 
  2957  020C                     	;# 
  2958  020D                     	;# 
  2959  020E                     	;# 
  2960  020F                     	;# 
  2961  020F                     	;# 
  2962  0210                     	;# 
  2963  0210                     	;# 
  2964  0211                     	;# 
  2965  0211                     	;# 
  2966  0212                     	;# 
  2967  0212                     	;# 
  2968  0213                     	;# 
  2969  0214                     	;# 
  2970  0215                     	;# 
  2971  0215                     	;# 
  2972  0216                     	;# 
  2973  0216                     	;# 
  2974  0217                     	;# 
  2975  0217                     	;# 
  2976  0218                     	;# 
  2977  0218                     	;# 
  2978  0219                     	;# 
  2979  021A                     	;# 
  2980  021B                     	;# 
  2981  021B                     	;# 
  2982  021C                     	;# 
  2983  021C                     	;# 
  2984  021D                     	;# 
  2985  021D                     	;# 
  2986  021E                     	;# 
  2987  021F                     	;# 
  2988  028C                     	;# 
  2989  028C                     	;# 
  2990  028D                     	;# 
  2991  028D                     	;# 
  2992  028E                     	;# 
  2993  028F                     	;# 
  2994  0290                     	;# 
  2995  0290                     	;# 
  2996  0291                     	;# 
  2997  0292                     	;# 
  2998  0292                     	;# 
  2999  0293                     	;# 
  3000  0293                     	;# 
  3001  0294                     	;# 
  3002  0295                     	;# 
  3003  0296                     	;# 
  3004  0296                     	;# 
  3005  0297                     	;# 
  3006  0298                     	;# 
  3007  0298                     	;# 
  3008  0299                     	;# 
  3009  0299                     	;# 
  3010  029A                     	;# 
  3011  029B                     	;# 
  3012  029C                     	;# 
  3013  029C                     	;# 
  3014  029D                     	;# 
  3015  030C                     	;# 
  3016  030C                     	;# 
  3017  030D                     	;# 
  3018  030E                     	;# 
  3019  030F                     	;# 
  3020  0310                     	;# 
  3021  0310                     	;# 
  3022  0311                     	;# 
  3023  0312                     	;# 
  3024  0313                     	;# 
  3025  0314                     	;# 
  3026  0314                     	;# 
  3027  0315                     	;# 
  3028  0316                     	;# 
  3029  0317                     	;# 
  3030  0318                     	;# 
  3031  0318                     	;# 
  3032  0319                     	;# 
  3033  031A                     	;# 
  3034  031B                     	;# 
  3035  031C                     	;# 
  3036  031C                     	;# 
  3037  031D                     	;# 
  3038  031E                     	;# 
  3039  031F                     	;# 
  3040  038C                     	;# 
  3041  038C                     	;# 
  3042  038D                     	;# 
  3043  038E                     	;# 
  3044  0390                     	;# 
  3045  0390                     	;# 
  3046  0391                     	;# 
  3047  0392                     	;# 
  3048  040C                     	;# 
  3049  040D                     	;# 
  3050  040E                     	;# 
  3051  040F                     	;# 
  3052  0410                     	;# 
  3053  0411                     	;# 
  3054  0416                     	;# 
  3055  0416                     	;# 
  3056  0417                     	;# 
  3057  0418                     	;# 
  3058  0418                     	;# 
  3059  0419                     	;# 
  3060  041A                     	;# 
  3061  041A                     	;# 
  3062  041B                     	;# 
  3063  041C                     	;# 
  3064  041C                     	;# 
  3065  041D                     	;# 
  3066  041E                     	;# 
  3067  041F                     	;# 
  3068  048C                     	;# 
  3069  048C                     	;# 
  3070  048D                     	;# 
  3071  048E                     	;# 
  3072  048F                     	;# 
  3073  048F                     	;# 
  3074  0490                     	;# 
  3075  0491                     	;# 
  3076  0492                     	;# 
  3077  0492                     	;# 
  3078  0493                     	;# 
  3079  0494                     	;# 
  3080  0495                     	;# 
  3081  0495                     	;# 
  3082  0496                     	;# 
  3083  0497                     	;# 
  3084  0498                     	;# 
  3085  0499                     	;# 
  3086  049A                     	;# 
  3087  049B                     	;# 
  3088  049C                     	;# 
  3089  049D                     	;# 
  3090  050C                     	;# 
  3091  050C                     	;# 
  3092  050D                     	;# 
  3093  050E                     	;# 
  3094  050F                     	;# 
  3095  050F                     	;# 
  3096  0510                     	;# 
  3097  0511                     	;# 
  3098  0512                     	;# 
  3099  0512                     	;# 
  3100  0513                     	;# 
  3101  0514                     	;# 
  3102  0515                     	;# 
  3103  0515                     	;# 
  3104  0516                     	;# 
  3105  0517                     	;# 
  3106  0518                     	;# 
  3107  0519                     	;# 
  3108  051A                     	;# 
  3109  051B                     	;# 
  3110  051C                     	;# 
  3111  051D                     	;# 
  3112  058C                     	;# 
  3113  058C                     	;# 
  3114  058D                     	;# 
  3115  058E                     	;# 
  3116  058F                     	;# 
  3117  058F                     	;# 
  3118  0590                     	;# 
  3119  0591                     	;# 
  3120  0592                     	;# 
  3121  0593                     	;# 
  3122  060C                     	;# 
  3123  060D                     	;# 
  3124  060E                     	;# 
  3125  060F                     	;# 
  3126  0610                     	;# 
  3127  0611                     	;# 
  3128  0612                     	;# 
  3129  0613                     	;# 
  3130  0614                     	;# 
  3131  0616                     	;# 
  3132  0617                     	;# 
  3133  0618                     	;# 
  3134  0619                     	;# 
  3135  061A                     	;# 
  3136  061B                     	;# 
  3137  061C                     	;# 
  3138  061D                     	;# 
  3139  061E                     	;# 
  3140  068C                     	;# 
  3141  068D                     	;# 
  3142  068E                     	;# 
  3143  068F                     	;# 
  3144  0690                     	;# 
  3145  0691                     	;# 
  3146  0692                     	;# 
  3147  0693                     	;# 
  3148  0694                     	;# 
  3149  070C                     	;# 
  3150  070D                     	;# 
  3151  070E                     	;# 
  3152  070F                     	;# 
  3153  0710                     	;# 
  3154  0711                     	;# 
  3155  0712                     	;# 
  3156  0713                     	;# 
  3157  0714                     	;# 
  3158  0716                     	;# 
  3159  0717                     	;# 
  3160  0718                     	;# 
  3161  0719                     	;# 
  3162  071A                     	;# 
  3163  071B                     	;# 
  3164  071C                     	;# 
  3165  071D                     	;# 
  3166  071E                     	;# 
  3167  0796                     	;# 
  3168  0797                     	;# 
  3169  0798                     	;# 
  3170  0799                     	;# 
  3171  079A                     	;# 
  3172  079B                     	;# 
  3173  080C                     	;# 
  3174  080D                     	;# 
  3175  080E                     	;# 
  3176  080F                     	;# 
  3177  0810                     	;# 
  3178  0811                     	;# 
  3179  0812                     	;# 
  3180  0813                     	;# 
  3181  0814                     	;# 
  3182  081A                     	;# 
  3183  081B                     	;# 
  3184  081C                     	;# 
  3185  081D                     	;# 
  3186  081E                     	;# 
  3187  081F                     	;# 
  3188  088C                     	;# 
  3189  088D                     	;# 
  3190  088E                     	;# 
  3191  088F                     	;# 
  3192  0890                     	;# 
  3193  0891                     	;# 
  3194  0892                     	;# 
  3195  0893                     	;# 
  3196  0895                     	;# 
  3197  0896                     	;# 
  3198  0897                     	;# 
  3199  0898                     	;# 
  3200  0899                     	;# 
  3201  089A                     	;# 
  3202  089B                     	;# 
  3203  090C                     	;# 
  3204  090E                     	;# 
  3205  090F                     	;# 
  3206  091F                     	;# 
  3207  091F                     	;# 
  3208  098F                     	;# 
  3209  098F                     	;# 
  3210  0990                     	;# 
  3211  0991                     	;# 
  3212  0992                     	;# 
  3213  0993                     	;# 
  3214  0994                     	;# 
  3215  0995                     	;# 
  3216  0996                     	;# 
  3217  0997                     	;# 
  3218  0E0F                     	;# 
  3219  0E10                     	;# 
  3220  0E11                     	;# 
  3221  0E12                     	;# 
  3222  0E13                     	;# 
  3223  0E14                     	;# 
  3224  0E15                     	;# 
  3225  0E16                     	;# 
  3226  0E17                     	;# 
  3227  0E18                     	;# 
  3228  0E19                     	;# 
  3229  0E1A                     	;# 
  3230  0E1B                     	;# 
  3231  0E1C                     	;# 
  3232  0E1D                     	;# 
  3233  0E1E                     	;# 
  3234  0E1F                     	;# 
  3235  0E20                     	;# 
  3236  0E21                     	;# 
  3237  0E22                     	;# 
  3238  0E23                     	;# 
  3239  0E24                     	;# 
  3240  0E25                     	;# 
  3241  0E26                     	;# 
  3242  0E27                     	;# 
  3243  0E28                     	;# 
  3244  0E29                     	;# 
  3245  0E2A                     	;# 
  3246  0E2B                     	;# 
  3247  0E2C                     	;# 
  3248  0E2D                     	;# 
  3249  0E2E                     	;# 
  3250  0E2F                     	;# 
  3251  0E30                     	;# 
  3252  0E31                     	;# 
  3253  0E32                     	;# 
  3254  0E33                     	;# 
  3255  0E34                     	;# 
  3256  0E35                     	;# 
  3257  0E36                     	;# 
  3258  0E37                     	;# 
  3259  0E8F                     	;# 
  3260  0E90                     	;# 
  3261  0E91                     	;# 
  3262  0E92                     	;# 
  3263  0E93                     	;# 
  3264  0E94                     	;# 
  3265  0E95                     	;# 
  3266  0E96                     	;# 
  3267  0E97                     	;# 
  3268  0E9C                     	;# 
  3269  0E9D                     	;# 
  3270  0E9E                     	;# 
  3271  0EA1                     	;# 
  3272  0EA2                     	;# 
  3273  0EA3                     	;# 
  3274  0EA4                     	;# 
  3275  0EA5                     	;# 
  3276  0EA9                     	;# 
  3277  0EAA                     	;# 
  3278  0EAB                     	;# 
  3279  0EAC                     	;# 
  3280  0EB1                     	;# 
  3281  0EB2                     	;# 
  3282  0EB3                     	;# 
  3283  0EB8                     	;# 
  3284  0EB9                     	;# 
  3285  0EBA                     	;# 
  3286  0EBB                     	;# 
  3287  0EBC                     	;# 
  3288  0EBD                     	;# 
  3289  0EBE                     	;# 
  3290  0EC3                     	;# 
  3291  0EC5                     	;# 
  3292  0EC6                     	;# 
  3293  0EC7                     	;# 
  3294  0EC8                     	;# 
  3295  0EC9                     	;# 
  3296  0ECA                     	;# 
  3297  0ECB                     	;# 
  3298  0ECC                     	;# 
  3299  0F10                     	;# 
  3300  0F11                     	;# 
  3301  0F12                     	;# 
  3302  0F13                     	;# 
  3303  0F14                     	;# 
  3304  0F15                     	;# 
  3305  0F16                     	;# 
  3306  0F17                     	;# 
  3307  0F18                     	;# 
  3308  0F19                     	;# 
  3309  0F1A                     	;# 
  3310  0F1B                     	;# 
  3311  0F1C                     	;# 
  3312  0F1D                     	;# 
  3313  0F1E                     	;# 
  3314  0F1F                     	;# 
  3315  0F20                     	;# 
  3316  0F21                     	;# 
  3317  0F22                     	;# 
  3318  0F23                     	;# 
  3319  0F24                     	;# 
  3320  0F25                     	;# 
  3321  0F26                     	;# 
  3322  0F27                     	;# 
  3323  0F28                     	;# 
  3324  0F29                     	;# 
  3325  0F2A                     	;# 
  3326  0F2B                     	;# 
  3327  0F2C                     	;# 
  3328  0F2D                     	;# 
  3329  0F2E                     	;# 
  3330  0F2F                     	;# 
  3331  0F30                     	;# 
  3332  0F31                     	;# 
  3333  0F32                     	;# 
  3334  0F38                     	;# 
  3335  0F39                     	;# 
  3336  0F3A                     	;# 
  3337  0F3B                     	;# 
  3338  0F3C                     	;# 
  3339  0F3D                     	;# 
  3340  0F3E                     	;# 
  3341  0F3F                     	;# 
  3342  0F40                     	;# 
  3343  0F41                     	;# 
  3344  0F43                     	;# 
  3345  0F44                     	;# 
  3346  0F45                     	;# 
  3347  0F46                     	;# 
  3348  0F47                     	;# 
  3349  0F48                     	;# 
  3350  0F49                     	;# 
  3351  0F4A                     	;# 
  3352  0F4B                     	;# 
  3353  0F4C                     	;# 
  3354  0F4E                     	;# 
  3355  0F4F                     	;# 
  3356  0F50                     	;# 
  3357  0F51                     	;# 
  3358  0F52                     	;# 
  3359  0F53                     	;# 
  3360  0F54                     	;# 
  3361  0F55                     	;# 
  3362  0F56                     	;# 
  3363  0F57                     	;# 
  3364  0F59                     	;# 
  3365  0F5A                     	;# 
  3366  0F5B                     	;# 
  3367  0F5C                     	;# 
  3368  0F5D                     	;# 
  3369  0F61                     	;# 
  3370  0F62                     	;# 
  3371  0F64                     	;# 
  3372  0F65                     	;# 
  3373  0F66                     	;# 
  3374  0F67                     	;# 
  3375  0F68                     	;# 
  3376  0F69                     	;# 
  3377  0F6A                     	;# 
  3378  0F6B                     	;# 
  3379  0F6C                     	;# 
  3380  0F6D                     	;# 
  3381  0FE4                     	;# 
  3382  0FE5                     	;# 
  3383  0FE6                     	;# 
  3384  0FE7                     	;# 
  3385  0FE8                     	;# 
  3386  0FE9                     	;# 
  3387  0FEA                     	;# 
  3388  0FEB                     	;# 
  3389  0FED                     	;# 
  3390  0FEE                     	;# 
  3391  0FEF                     	;# 
  3392  0000                     	;# 
  3393  0001                     	;# 
  3394  0002                     	;# 
  3395  0003                     	;# 
  3396  0004                     	;# 
  3397  0005                     	;# 
  3398  0006                     	;# 
  3399  0007                     	;# 
  3400  0008                     	;# 
  3401  0009                     	;# 
  3402  000A                     	;# 
  3403  000B                     	;# 
  3404  000C                     	;# 
  3405  000D                     	;# 
  3406  000E                     	;# 
  3407  000F                     	;# 
  3408  0010                     	;# 
  3409  0011                     	;# 
  3410  0012                     	;# 
  3411  0013                     	;# 
  3412  0014                     	;# 
  3413  0015                     	;# 
  3414  0016                     	;# 
  3415  0017                     	;# 
  3416  0018                     	;# 
  3417  0019                     	;# 
  3418  001A                     	;# 
  3419  001C                     	;# 
  3420  001C                     	;# 
  3421  001D                     	;# 
  3422  001D                     	;# 
  3423  001E                     	;# 
  3424  001F                     	;# 
  3425  008C                     	;# 
  3426  008C                     	;# 
  3427  008D                     	;# 
  3428  008E                     	;# 
  3429  008E                     	;# 
  3430  008F                     	;# 
  3431  0090                     	;# 
  3432  0090                     	;# 
  3433  0091                     	;# 
  3434  0093                     	;# 
  3435  0094                     	;# 
  3436  0095                     	;# 
  3437  0096                     	;# 
  3438  0097                     	;# 
  3439  0098                     	;# 
  3440  0099                     	;# 
  3441  009A                     	;# 
  3442  009B                     	;# 
  3443  009C                     	;# 
  3444  009D                     	;# 
  3445  009E                     	;# 
  3446  010C                     	;# 
  3447  010D                     	;# 
  3448  010E                     	;# 
  3449  010E                     	;# 
  3450  010F                     	;# 
  3451  0110                     	;# 
  3452  0110                     	;# 
  3453  0111                     	;# 
  3454  0112                     	;# 
  3455  0112                     	;# 
  3456  0113                     	;# 
  3457  0114                     	;# 
  3458  0114                     	;# 
  3459  0115                     	;# 
  3460  0116                     	;# 
  3461  0116                     	;# 
  3462  0117                     	;# 
  3463  0119                     	;# 
  3464  0119                     	;# 
  3465  0119                     	;# 
  3466  011A                     	;# 
  3467  011A                     	;# 
  3468  011A                     	;# 
  3469  011B                     	;# 
  3470  011B                     	;# 
  3471  011B                     	;# 
  3472  011B                     	;# 
  3473  011B                     	;# 
  3474  011C                     	;# 
  3475  011C                     	;# 
  3476  011C                     	;# 
  3477  011D                     	;# 
  3478  011D                     	;# 
  3479  011D                     	;# 
  3480  011E                     	;# 
  3481  011E                     	;# 
  3482  011E                     	;# 
  3483  011F                     	;# 
  3484  011F                     	;# 
  3485  011F                     	;# 
  3486  011F                     	;# 
  3487  011F                     	;# 
  3488  018C                     	;# 
  3489  018D                     	;# 
  3490  018E                     	;# 
  3491  018F                     	;# 
  3492  0190                     	;# 
  3493  0191                     	;# 
  3494  0192                     	;# 
  3495  0196                     	;# 
  3496  0197                     	;# 
  3497  0198                     	;# 
  3498  0199                     	;# 
  3499  019A                     	;# 
  3500  019B                     	;# 
  3501  019C                     	;# 
  3502  020C                     	;# 
  3503  020C                     	;# 
  3504  020D                     	;# 
  3505  020E                     	;# 
  3506  020F                     	;# 
  3507  020F                     	;# 
  3508  0210                     	;# 
  3509  0210                     	;# 
  3510  0211                     	;# 
  3511  0211                     	;# 
  3512  0212                     	;# 
  3513  0212                     	;# 
  3514  0213                     	;# 
  3515  0214                     	;# 
  3516  0215                     	;# 
  3517  0215                     	;# 
  3518  0216                     	;# 
  3519  0216                     	;# 
  3520  0217                     	;# 
  3521  0217                     	;# 
  3522  0218                     	;# 
  3523  0218                     	;# 
  3524  0219                     	;# 
  3525  021A                     	;# 
  3526  021B                     	;# 
  3527  021B                     	;# 
  3528  021C                     	;# 
  3529  021C                     	;# 
  3530  021D                     	;# 
  3531  021D                     	;# 
  3532  021E                     	;# 
  3533  021F                     	;# 
  3534  028C                     	;# 
  3535  028C                     	;# 
  3536  028D                     	;# 
  3537  028D                     	;# 
  3538  028E                     	;# 
  3539  028F                     	;# 
  3540  0290                     	;# 
  3541  0290                     	;# 
  3542  0291                     	;# 
  3543  0292                     	;# 
  3544  0292                     	;# 
  3545  0293                     	;# 
  3546  0293                     	;# 
  3547  0294                     	;# 
  3548  0295                     	;# 
  3549  0296                     	;# 
  3550  0296                     	;# 
  3551  0297                     	;# 
  3552  0298                     	;# 
  3553  0298                     	;# 
  3554  0299                     	;# 
  3555  0299                     	;# 
  3556  029A                     	;# 
  3557  029B                     	;# 
  3558  029C                     	;# 
  3559  029C                     	;# 
  3560  029D                     	;# 
  3561  030C                     	;# 
  3562  030C                     	;# 
  3563  030D                     	;# 
  3564  030E                     	;# 
  3565  030F                     	;# 
  3566  0310                     	;# 
  3567  0310                     	;# 
  3568  0311                     	;# 
  3569  0312                     	;# 
  3570  0313                     	;# 
  3571  0314                     	;# 
  3572  0314                     	;# 
  3573  0315                     	;# 
  3574  0316                     	;# 
  3575  0317                     	;# 
  3576  0318                     	;# 
  3577  0318                     	;# 
  3578  0319                     	;# 
  3579  031A                     	;# 
  3580  031B                     	;# 
  3581  031C                     	;# 
  3582  031C                     	;# 
  3583  031D                     	;# 
  3584  031E                     	;# 
  3585  031F                     	;# 
  3586  038C                     	;# 
  3587  038C                     	;# 
  3588  038D                     	;# 
  3589  038E                     	;# 
  3590  0390                     	;# 
  3591  0390                     	;# 
  3592  0391                     	;# 
  3593  0392                     	;# 
  3594  040C                     	;# 
  3595  040D                     	;# 
  3596  040E                     	;# 
  3597  040F                     	;# 
  3598  0410                     	;# 
  3599  0411                     	;# 
  3600  0416                     	;# 
  3601  0416                     	;# 
  3602  0417                     	;# 
  3603  0418                     	;# 
  3604  0418                     	;# 
  3605  0419                     	;# 
  3606  041A                     	;# 
  3607  041A                     	;# 
  3608  041B                     	;# 
  3609  041C                     	;# 
  3610  041C                     	;# 
  3611  041D                     	;# 
  3612  041E                     	;# 
  3613  041F                     	;# 
  3614  048C                     	;# 
  3615  048C                     	;# 
  3616  048D                     	;# 
  3617  048E                     	;# 
  3618  048F                     	;# 
  3619  048F                     	;# 
  3620  0490                     	;# 
  3621  0491                     	;# 
  3622  0492                     	;# 
  3623  0492                     	;# 
  3624  0493                     	;# 
  3625  0494                     	;# 
  3626  0495                     	;# 
  3627  0495                     	;# 
  3628  0496                     	;# 
  3629  0497                     	;# 
  3630  0498                     	;# 
  3631  0499                     	;# 
  3632  049A                     	;# 
  3633  049B                     	;# 
  3634  049C                     	;# 
  3635  049D                     	;# 
  3636  050C                     	;# 
  3637  050C                     	;# 
  3638  050D                     	;# 
  3639  050E                     	;# 
  3640  050F                     	;# 
  3641  050F                     	;# 
  3642  0510                     	;# 
  3643  0511                     	;# 
  3644  0512                     	;# 
  3645  0512                     	;# 
  3646  0513                     	;# 
  3647  0514                     	;# 
  3648  0515                     	;# 
  3649  0515                     	;# 
  3650  0516                     	;# 
  3651  0517                     	;# 
  3652  0518                     	;# 
  3653  0519                     	;# 
  3654  051A                     	;# 
  3655  051B                     	;# 
  3656  051C                     	;# 
  3657  051D                     	;# 
  3658  058C                     	;# 
  3659  058C                     	;# 
  3660  058D                     	;# 
  3661  058E                     	;# 
  3662  058F                     	;# 
  3663  058F                     	;# 
  3664  0590                     	;# 
  3665  0591                     	;# 
  3666  0592                     	;# 
  3667  0593                     	;# 
  3668  060C                     	;# 
  3669  060D                     	;# 
  3670  060E                     	;# 
  3671  060F                     	;# 
  3672  0610                     	;# 
  3673  0611                     	;# 
  3674  0612                     	;# 
  3675  0613                     	;# 
  3676  0614                     	;# 
  3677  0616                     	;# 
  3678  0617                     	;# 
  3679  0618                     	;# 
  3680  0619                     	;# 
  3681  061A                     	;# 
  3682  061B                     	;# 
  3683  061C                     	;# 
  3684  061D                     	;# 
  3685  061E                     	;# 
  3686  068C                     	;# 
  3687  068D                     	;# 
  3688  068E                     	;# 
  3689  068F                     	;# 
  3690  0690                     	;# 
  3691  0691                     	;# 
  3692  0692                     	;# 
  3693  0693                     	;# 
  3694  0694                     	;# 
  3695  070C                     	;# 
  3696  070D                     	;# 
  3697  070E                     	;# 
  3698  070F                     	;# 
  3699  0710                     	;# 
  3700  0711                     	;# 
  3701  0712                     	;# 
  3702  0713                     	;# 
  3703  0714                     	;# 
  3704  0716                     	;# 
  3705  0717                     	;# 
  3706  0718                     	;# 
  3707  0719                     	;# 
  3708  071A                     	;# 
  3709  071B                     	;# 
  3710  071C                     	;# 
  3711  071D                     	;# 
  3712  071E                     	;# 
  3713  0796                     	;# 
  3714  0797                     	;# 
  3715  0798                     	;# 
  3716  0799                     	;# 
  3717  079A                     	;# 
  3718  079B                     	;# 
  3719  080C                     	;# 
  3720  080D                     	;# 
  3721  080E                     	;# 
  3722  080F                     	;# 
  3723  0810                     	;# 
  3724  0811                     	;# 
  3725  0812                     	;# 
  3726  0813                     	;# 
  3727  0814                     	;# 
  3728  081A                     	;# 
  3729  081B                     	;# 
  3730  081C                     	;# 
  3731  081D                     	;# 
  3732  081E                     	;# 
  3733  081F                     	;# 
  3734  088C                     	;# 
  3735  088D                     	;# 
  3736  088E                     	;# 
  3737  088F                     	;# 
  3738  0890                     	;# 
  3739  0891                     	;# 
  3740  0892                     	;# 
  3741  0893                     	;# 
  3742  0895                     	;# 
  3743  0896                     	;# 
  3744  0897                     	;# 
  3745  0898                     	;# 
  3746  0899                     	;# 
  3747  089A                     	;# 
  3748  089B                     	;# 
  3749  090C                     	;# 
  3750  090E                     	;# 
  3751  090F                     	;# 
  3752  091F                     	;# 
  3753  091F                     	;# 
  3754  098F                     	;# 
  3755  098F                     	;# 
  3756  0990                     	;# 
  3757  0991                     	;# 
  3758  0992                     	;# 
  3759  0993                     	;# 
  3760  0994                     	;# 
  3761  0995                     	;# 
  3762  0996                     	;# 
  3763  0997                     	;# 
  3764  0E0F                     	;# 
  3765  0E10                     	;# 
  3766  0E11                     	;# 
  3767  0E12                     	;# 
  3768  0E13                     	;# 
  3769  0E14                     	;# 
  3770  0E15                     	;# 
  3771  0E16                     	;# 
  3772  0E17                     	;# 
  3773  0E18                     	;# 
  3774  0E19                     	;# 
  3775  0E1A                     	;# 
  3776  0E1B                     	;# 
  3777  0E1C                     	;# 
  3778  0E1D                     	;# 
  3779  0E1E                     	;# 
  3780  0E1F                     	;# 
  3781  0E20                     	;# 
  3782  0E21                     	;# 
  3783  0E22                     	;# 
  3784  0E23                     	;# 
  3785  0E24                     	;# 
  3786  0E25                     	;# 
  3787  0E26                     	;# 
  3788  0E27                     	;# 
  3789  0E28                     	;# 
  3790  0E29                     	;# 
  3791  0E2A                     	;# 
  3792  0E2B                     	;# 
  3793  0E2C                     	;# 
  3794  0E2D                     	;# 
  3795  0E2E                     	;# 
  3796  0E2F                     	;# 
  3797  0E30                     	;# 
  3798  0E31                     	;# 
  3799  0E32                     	;# 
  3800  0E33                     	;# 
  3801  0E34                     	;# 
  3802  0E35                     	;# 
  3803  0E36                     	;# 
  3804  0E37                     	;# 
  3805  0E8F                     	;# 
  3806  0E90                     	;# 
  3807  0E91                     	;# 
  3808  0E92                     	;# 
  3809  0E93                     	;# 
  3810  0E94                     	;# 
  3811  0E95                     	;# 
  3812  0E96                     	;# 
  3813  0E97                     	;# 
  3814  0E9C                     	;# 
  3815  0E9D                     	;# 
  3816  0E9E                     	;# 
  3817  0EA1                     	;# 
  3818  0EA2                     	;# 
  3819  0EA3                     	;# 
  3820  0EA4                     	;# 
  3821  0EA5                     	;# 
  3822  0EA9                     	;# 
  3823  0EAA                     	;# 
  3824  0EAB                     	;# 
  3825  0EAC                     	;# 
  3826  0EB1                     	;# 
  3827  0EB2                     	;# 
  3828  0EB3                     	;# 
  3829  0EB8                     	;# 
  3830  0EB9                     	;# 
  3831  0EBA                     	;# 
  3832  0EBB                     	;# 
  3833  0EBC                     	;# 
  3834  0EBD                     	;# 
  3835  0EBE                     	;# 
  3836  0EC3                     	;# 
  3837  0EC5                     	;# 
  3838  0EC6                     	;# 
  3839  0EC7                     	;# 
  3840  0EC8                     	;# 
  3841  0EC9                     	;# 
  3842  0ECA                     	;# 
  3843  0ECB                     	;# 
  3844  0ECC                     	;# 
  3845  0F10                     	;# 
  3846  0F11                     	;# 
  3847  0F12                     	;# 
  3848  0F13                     	;# 
  3849  0F14                     	;# 
  3850  0F15                     	;# 
  3851  0F16                     	;# 
  3852  0F17                     	;# 
  3853  0F18                     	;# 
  3854  0F19                     	;# 
  3855  0F1A                     	;# 
  3856  0F1B                     	;# 
  3857  0F1C                     	;# 
  3858  0F1D                     	;# 
  3859  0F1E                     	;# 
  3860  0F1F                     	;# 
  3861  0F20                     	;# 
  3862  0F21                     	;# 
  3863  0F22                     	;# 
  3864  0F23                     	;# 
  3865  0F24                     	;# 
  3866  0F25                     	;# 
  3867  0F26                     	;# 
  3868  0F27                     	;# 
  3869  0F28                     	;# 
  3870  0F29                     	;# 
  3871  0F2A                     	;# 
  3872  0F2B                     	;# 
  3873  0F2C                     	;# 
  3874  0F2D                     	;# 
  3875  0F2E                     	;# 
  3876  0F2F                     	;# 
  3877  0F30                     	;# 
  3878  0F31                     	;# 
  3879  0F32                     	;# 
  3880  0F38                     	;# 
  3881  0F39                     	;# 
  3882  0F3A                     	;# 
  3883  0F3B                     	;# 
  3884  0F3C                     	;# 
  3885  0F3D                     	;# 
  3886  0F3E                     	;# 
  3887  0F3F                     	;# 
  3888  0F40                     	;# 
  3889  0F41                     	;# 
  3890  0F43                     	;# 
  3891  0F44                     	;# 
  3892  0F45                     	;# 
  3893  0F46                     	;# 
  3894  0F47                     	;# 
  3895  0F48                     	;# 
  3896  0F49                     	;# 
  3897  0F4A                     	;# 
  3898  0F4B                     	;# 
  3899  0F4C                     	;# 
  3900  0F4E                     	;# 
  3901  0F4F                     	;# 
  3902  0F50                     	;# 
  3903  0F51                     	;# 
  3904  0F52                     	;# 
  3905  0F53                     	;# 
  3906  0F54                     	;# 
  3907  0F55                     	;# 
  3908  0F56                     	;# 
  3909  0F57                     	;# 
  3910  0F59                     	;# 
  3911  0F5A                     	;# 
  3912  0F5B                     	;# 
  3913  0F5C                     	;# 
  3914  0F5D                     	;# 
  3915  0F61                     	;# 
  3916  0F62                     	;# 
  3917  0F64                     	;# 
  3918  0F65                     	;# 
  3919  0F66                     	;# 
  3920  0F67                     	;# 
  3921  0F68                     	;# 
  3922  0F69                     	;# 
  3923  0F6A                     	;# 
  3924  0F6B                     	;# 
  3925  0F6C                     	;# 
  3926  0F6D                     	;# 
  3927  0FE4                     	;# 
  3928  0FE5                     	;# 
  3929  0FE6                     	;# 
  3930  0FE7                     	;# 
  3931  0FE8                     	;# 
  3932  0FE9                     	;# 
  3933  0FEA                     	;# 
  3934  0FEB                     	;# 
  3935  0FED                     	;# 
  3936  0FEE                     	;# 
  3937  0FEF                     	;# 
  3938  0000                     	;# 
  3939  0001                     	;# 
  3940  0002                     	;# 
  3941  0003                     	;# 
  3942  0004                     	;# 
  3943  0005                     	;# 
  3944  0006                     	;# 
  3945  0007                     	;# 
  3946  0008                     	;# 
  3947  0009                     	;# 
  3948  000A                     	;# 
  3949  000B                     	;# 
  3950  000C                     	;# 
  3951  000D                     	;# 
  3952  000E                     	;# 
  3953  000F                     	;# 
  3954  0010                     	;# 
  3955  0011                     	;# 
  3956  0012                     	;# 
  3957  0013                     	;# 
  3958  0014                     	;# 
  3959  0015                     	;# 
  3960  0016                     	;# 
  3961  0017                     	;# 
  3962  0018                     	;# 
  3963  0019                     	;# 
  3964  001A                     	;# 
  3965  001C                     	;# 
  3966  001C                     	;# 
  3967  001D                     	;# 
  3968  001D                     	;# 
  3969  001E                     	;# 
  3970  001F                     	;# 
  3971  008C                     	;# 
  3972  008C                     	;# 
  3973  008D                     	;# 
  3974  008E                     	;# 
  3975  008E                     	;# 
  3976  008F                     	;# 
  3977  0090                     	;# 
  3978  0090                     	;# 
  3979  0091                     	;# 
  3980  0093                     	;# 
  3981  0094                     	;# 
  3982  0095                     	;# 
  3983  0096                     	;# 
  3984  0097                     	;# 
  3985  0098                     	;# 
  3986  0099                     	;# 
  3987  009A                     	;# 
  3988  009B                     	;# 
  3989  009C                     	;# 
  3990  009D                     	;# 
  3991  009E                     	;# 
  3992  010C                     	;# 
  3993  010D                     	;# 
  3994  010E                     	;# 
  3995  010E                     	;# 
  3996  010F                     	;# 
  3997  0110                     	;# 
  3998  0110                     	;# 
  3999  0111                     	;# 
  4000  0112                     	;# 
  4001  0112                     	;# 
  4002  0113                     	;# 
  4003  0114                     	;# 
  4004  0114                     	;# 
  4005  0115                     	;# 
  4006  0116                     	;# 
  4007  0116                     	;# 
  4008  0117                     	;# 
  4009  0119                     	;# 
  4010  0119                     	;# 
  4011  0119                     	;# 
  4012  011A                     	;# 
  4013  011A                     	;# 
  4014  011A                     	;# 
  4015  011B                     	;# 
  4016  011B                     	;# 
  4017  011B                     	;# 
  4018  011B                     	;# 
  4019  011B                     	;# 
  4020  011C                     	;# 
  4021  011C                     	;# 
  4022  011C                     	;# 
  4023  011D                     	;# 
  4024  011D                     	;# 
  4025  011D                     	;# 
  4026  011E                     	;# 
  4027  011E                     	;# 
  4028  011E                     	;# 
  4029  011F                     	;# 
  4030  011F                     	;# 
  4031  011F                     	;# 
  4032  011F                     	;# 
  4033  011F                     	;# 
  4034  018C                     	;# 
  4035  018D                     	;# 
  4036  018E                     	;# 
  4037  018F                     	;# 
  4038  0190                     	;# 
  4039  0191                     	;# 
  4040  0192                     	;# 
  4041  0196                     	;# 
  4042  0197                     	;# 
  4043  0198                     	;# 
  4044  0199                     	;# 
  4045  019A                     	;# 
  4046  019B                     	;# 
  4047  019C                     	;# 
  4048  020C                     	;# 
  4049  020C                     	;# 
  4050  020D                     	;# 
  4051  020E                     	;# 
  4052  020F                     	;# 
  4053  020F                     	;# 
  4054  0210                     	;# 
  4055  0210                     	;# 
  4056  0211                     	;# 
  4057  0211                     	;# 
  4058  0212                     	;# 
  4059  0212                     	;# 
  4060  0213                     	;# 
  4061  0214                     	;# 
  4062  0215                     	;# 
  4063  0215                     	;# 
  4064  0216                     	;# 
  4065  0216                     	;# 
  4066  0217                     	;# 
  4067  0217                     	;# 
  4068  0218                     	;# 
  4069  0218                     	;# 
  4070  0219                     	;# 
  4071  021A                     	;# 
  4072  021B                     	;# 
  4073  021B                     	;# 
  4074  021C                     	;# 
  4075  021C                     	;# 
  4076  021D                     	;# 
  4077  021D                     	;# 
  4078  021E                     	;# 
  4079  021F                     	;# 
  4080  028C                     	;# 
  4081  028C                     	;# 
  4082  028D                     	;# 
  4083  028D                     	;# 
  4084  028E                     	;# 
  4085  028F                     	;# 
  4086  0290                     	;# 
  4087  0290                     	;# 
  4088  0291                     	;# 
  4089  0292                     	;# 
  4090  0292                     	;# 
  4091  0293                     	;# 
  4092  0293                     	;# 
  4093  0294                     	;# 
  4094  0295                     	;# 
  4095  0296                     	;# 
  4096  0296                     	;# 
  4097  0297                     	;# 
  4098  0298                     	;# 
  4099  0298                     	;# 
  4100  0299                     	;# 
  4101  0299                     	;# 
  4102  029A                     	;# 
  4103  029B                     	;# 
  4104  029C                     	;# 
  4105  029C                     	;# 
  4106  029D                     	;# 
  4107  030C                     	;# 
  4108  030C                     	;# 
  4109  030D                     	;# 
  4110  030E                     	;# 
  4111  030F                     	;# 
  4112  0310                     	;# 
  4113  0310                     	;# 
  4114  0311                     	;# 
  4115  0312                     	;# 
  4116  0313                     	;# 
  4117  0314                     	;# 
  4118  0314                     	;# 
  4119  0315                     	;# 
  4120  0316                     	;# 
  4121  0317                     	;# 
  4122  0318                     	;# 
  4123  0318                     	;# 
  4124  0319                     	;# 
  4125  031A                     	;# 
  4126  031B                     	;# 
  4127  031C                     	;# 
  4128  031C                     	;# 
  4129  031D                     	;# 
  4130  031E                     	;# 
  4131  031F                     	;# 
  4132  038C                     	;# 
  4133  038C                     	;# 
  4134  038D                     	;# 
  4135  038E                     	;# 
  4136  0390                     	;# 
  4137  0390                     	;# 
  4138  0391                     	;# 
  4139  0392                     	;# 
  4140  040C                     	;# 
  4141  040D                     	;# 
  4142  040E                     	;# 
  4143  040F                     	;# 
  4144  0410                     	;# 
  4145  0411                     	;# 
  4146  0416                     	;# 
  4147  0416                     	;# 
  4148  0417                     	;# 
  4149  0418                     	;# 
  4150  0418                     	;# 
  4151  0419                     	;# 
  4152  041A                     	;# 
  4153  041A                     	;# 
  4154  041B                     	;# 
  4155  041C                     	;# 
  4156  041C                     	;# 
  4157  041D                     	;# 
  4158  041E                     	;# 
  4159  041F                     	;# 
  4160  048C                     	;# 
  4161  048C                     	;# 
  4162  048D                     	;# 
  4163  048E                     	;# 
  4164  048F                     	;# 
  4165  048F                     	;# 
  4166  0490                     	;# 
  4167  0491                     	;# 
  4168  0492                     	;# 
  4169  0492                     	;# 
  4170  0493                     	;# 
  4171  0494                     	;# 
  4172  0495                     	;# 
  4173  0495                     	;# 
  4174  0496                     	;# 
  4175  0497                     	;# 
  4176  0498                     	;# 
  4177  0499                     	;# 
  4178  049A                     	;# 
  4179  049B                     	;# 
  4180  049C                     	;# 
  4181  049D                     	;# 
  4182  050C                     	;# 
  4183  050C                     	;# 
  4184  050D                     	;# 
  4185  050E                     	;# 
  4186  050F                     	;# 
  4187  050F                     	;# 
  4188  0510                     	;# 
  4189  0511                     	;# 
  4190  0512                     	;# 
  4191  0512                     	;# 
  4192  0513                     	;# 
  4193  0514                     	;# 
  4194  0515                     	;# 
  4195  0515                     	;# 
  4196  0516                     	;# 
  4197  0517                     	;# 
  4198  0518                     	;# 
  4199  0519                     	;# 
  4200  051A                     	;# 
  4201  051B                     	;# 
  4202  051C                     	;# 
  4203  051D                     	;# 
  4204  058C                     	;# 
  4205  058C                     	;# 
  4206  058D                     	;# 
  4207  058E                     	;# 
  4208  058F                     	;# 
  4209  058F                     	;# 
  4210  0590                     	;# 
  4211  0591                     	;# 
  4212  0592                     	;# 
  4213  0593                     	;# 
  4214  060C                     	;# 
  4215  060D                     	;# 
  4216  060E                     	;# 
  4217  060F                     	;# 
  4218  0610                     	;# 
  4219  0611                     	;# 
  4220  0612                     	;# 
  4221  0613                     	;# 
  4222  0614                     	;# 
  4223  0616                     	;# 
  4224  0617                     	;# 
  4225  0618                     	;# 
  4226  0619                     	;# 
  4227  061A                     	;# 
  4228  061B                     	;# 
  4229  061C                     	;# 
  4230  061D                     	;# 
  4231  061E                     	;# 
  4232  068C                     	;# 
  4233  068D                     	;# 
  4234  068E                     	;# 
  4235  068F                     	;# 
  4236  0690                     	;# 
  4237  0691                     	;# 
  4238  0692                     	;# 
  4239  0693                     	;# 
  4240  0694                     	;# 
  4241  070C                     	;# 
  4242  070D                     	;# 
  4243  070E                     	;# 
  4244  070F                     	;# 
  4245  0710                     	;# 
  4246  0711                     	;# 
  4247  0712                     	;# 
  4248  0713                     	;# 
  4249  0714                     	;# 
  4250  0716                     	;# 
  4251  0717                     	;# 
  4252  0718                     	;# 
  4253  0719                     	;# 
  4254  071A                     	;# 
  4255  071B                     	;# 
  4256  071C                     	;# 
  4257  071D                     	;# 
  4258  071E                     	;# 
  4259  0796                     	;# 
  4260  0797                     	;# 
  4261  0798                     	;# 
  4262  0799                     	;# 
  4263  079A                     	;# 
  4264  079B                     	;# 
  4265  080C                     	;# 
  4266  080D                     	;# 
  4267  080E                     	;# 
  4268  080F                     	;# 
  4269  0810                     	;# 
  4270  0811                     	;# 
  4271  0812                     	;# 
  4272  0813                     	;# 
  4273  0814                     	;# 
  4274  081A                     	;# 
  4275  081B                     	;# 
  4276  081C                     	;# 
  4277  081D                     	;# 
  4278  081E                     	;# 
  4279  081F                     	;# 
  4280  088C                     	;# 
  4281  088D                     	;# 
  4282  088E                     	;# 
  4283  088F                     	;# 
  4284  0890                     	;# 
  4285  0891                     	;# 
  4286  0892                     	;# 
  4287  0893                     	;# 
  4288  0895                     	;# 
  4289  0896                     	;# 
  4290  0897                     	;# 
  4291  0898                     	;# 
  4292  0899                     	;# 
  4293  089A                     	;# 
  4294  089B                     	;# 
  4295  090C                     	;# 
  4296  090E                     	;# 
  4297  090F                     	;# 
  4298  091F                     	;# 
  4299  091F                     	;# 
  4300  098F                     	;# 
  4301  098F                     	;# 
  4302  0990                     	;# 
  4303  0991                     	;# 
  4304  0992                     	;# 
  4305  0993                     	;# 
  4306  0994                     	;# 
  4307  0995                     	;# 
  4308  0996                     	;# 
  4309  0997                     	;# 
  4310  0E0F                     	;# 
  4311  0E10                     	;# 
  4312  0E11                     	;# 
  4313  0E12                     	;# 
  4314  0E13                     	;# 
  4315  0E14                     	;# 
  4316  0E15                     	;# 
  4317  0E16                     	;# 
  4318  0E17                     	;# 
  4319  0E18                     	;# 
  4320  0E19                     	;# 
  4321  0E1A                     	;# 
  4322  0E1B                     	;# 
  4323  0E1C                     	;# 
  4324  0E1D                     	;# 
  4325  0E1E                     	;# 
  4326  0E1F                     	;# 
  4327  0E20                     	;# 
  4328  0E21                     	;# 
  4329  0E22                     	;# 
  4330  0E23                     	;# 
  4331  0E24                     	;# 
  4332  0E25                     	;# 
  4333  0E26                     	;# 
  4334  0E27                     	;# 
  4335  0E28                     	;# 
  4336  0E29                     	;# 
  4337  0E2A                     	;# 
  4338  0E2B                     	;# 
  4339  0E2C                     	;# 
  4340  0E2D                     	;# 
  4341  0E2E                     	;# 
  4342  0E2F                     	;# 
  4343  0E30                     	;# 
  4344  0E31                     	;# 
  4345  0E32                     	;# 
  4346  0E33                     	;# 
  4347  0E34                     	;# 
  4348  0E35                     	;# 
  4349  0E36                     	;# 
  4350  0E37                     	;# 
  4351  0E8F                     	;# 
  4352  0E90                     	;# 
  4353  0E91                     	;# 
  4354  0E92                     	;# 
  4355  0E93                     	;# 
  4356  0E94                     	;# 
  4357  0E95                     	;# 
  4358  0E96                     	;# 
  4359  0E97                     	;# 
  4360  0E9C                     	;# 
  4361  0E9D                     	;# 
  4362  0E9E                     	;# 
  4363  0EA1                     	;# 
  4364  0EA2                     	;# 
  4365  0EA3                     	;# 
  4366  0EA4                     	;# 
  4367  0EA5                     	;# 
  4368  0EA9                     	;# 
  4369  0EAA                     	;# 
  4370  0EAB                     	;# 
  4371  0EAC                     	;# 
  4372  0EB1                     	;# 
  4373  0EB2                     	;# 
  4374  0EB3                     	;# 
  4375  0EB8                     	;# 
  4376  0EB9                     	;# 
  4377  0EBA                     	;# 
  4378  0EBB                     	;# 
  4379  0EBC                     	;# 
  4380  0EBD                     	;# 
  4381  0EBE                     	;# 
  4382  0EC3                     	;# 
  4383  0EC5                     	;# 
  4384  0EC6                     	;# 
  4385  0EC7                     	;# 
  4386  0EC8                     	;# 
  4387  0EC9                     	;# 
  4388  0ECA                     	;# 
  4389  0ECB                     	;# 
  4390  0ECC                     	;# 
  4391  0F10                     	;# 
  4392  0F11                     	;# 
  4393  0F12                     	;# 
  4394  0F13                     	;# 
  4395  0F14                     	;# 
  4396  0F15                     	;# 
  4397  0F16                     	;# 
  4398  0F17                     	;# 
  4399  0F18                     	;# 
  4400  0F19                     	;# 
  4401  0F1A                     	;# 
  4402  0F1B                     	;# 
  4403  0F1C                     	;# 
  4404  0F1D                     	;# 
  4405  0F1E                     	;# 
  4406  0F1F                     	;# 
  4407  0F20                     	;# 
  4408  0F21                     	;# 
  4409  0F22                     	;# 
  4410  0F23                     	;# 
  4411  0F24                     	;# 
  4412  0F25                     	;# 
  4413  0F26                     	;# 
  4414  0F27                     	;# 
  4415  0F28                     	;# 
  4416  0F29                     	;# 
  4417  0F2A                     	;# 
  4418  0F2B                     	;# 
  4419  0F2C                     	;# 
  4420  0F2D                     	;# 
  4421  0F2E                     	;# 
  4422  0F2F                     	;# 
  4423  0F30                     	;# 
  4424  0F31                     	;# 
  4425  0F32                     	;# 
  4426  0F38                     	;# 
  4427  0F39                     	;# 
  4428  0F3A                     	;# 
  4429  0F3B                     	;# 
  4430  0F3C                     	;# 
  4431  0F3D                     	;# 
  4432  0F3E                     	;# 
  4433  0F3F                     	;# 
  4434  0F40                     	;# 
  4435  0F41                     	;# 
  4436  0F43                     	;# 
  4437  0F44                     	;# 
  4438  0F45                     	;# 
  4439  0F46                     	;# 
  4440  0F47                     	;# 
  4441  0F48                     	;# 
  4442  0F49                     	;# 
  4443  0F4A                     	;# 
  4444  0F4B                     	;# 
  4445  0F4C                     	;# 
  4446  0F4E                     	;# 
  4447  0F4F                     	;# 
  4448  0F50                     	;# 
  4449  0F51                     	;# 
  4450  0F52                     	;# 
  4451  0F53                     	;# 
  4452  0F54                     	;# 
  4453  0F55                     	;# 
  4454  0F56                     	;# 
  4455  0F57                     	;# 
  4456  0F59                     	;# 
  4457  0F5A                     	;# 
  4458  0F5B                     	;# 
  4459  0F5C                     	;# 
  4460  0F5D                     	;# 
  4461  0F61                     	;# 
  4462  0F62                     	;# 
  4463  0F64                     	;# 
  4464  0F65                     	;# 
  4465  0F66                     	;# 
  4466  0F67                     	;# 
  4467  0F68                     	;# 
  4468  0F69                     	;# 
  4469  0F6A                     	;# 
  4470  0F6B                     	;# 
  4471  0F6C                     	;# 
  4472  0F6D                     	;# 
  4473  0FE4                     	;# 
  4474  0FE5                     	;# 
  4475  0FE6                     	;# 
  4476  0FE7                     	;# 
  4477  0FE8                     	;# 
  4478  0FE9                     	;# 
  4479  0FEA                     	;# 
  4480  0FEB                     	;# 
  4481  0FED                     	;# 
  4482  0FEE                     	;# 
  4483  0FEF                     	;# 
  4484  0000                     	;# 
  4485  0001                     	;# 
  4486  0002                     	;# 
  4487  0003                     	;# 
  4488  0004                     	;# 
  4489  0005                     	;# 
  4490  0006                     	;# 
  4491  0007                     	;# 
  4492  0008                     	;# 
  4493  0009                     	;# 
  4494  000A                     	;# 
  4495  000B                     	;# 
  4496  000C                     	;# 
  4497  000D                     	;# 
  4498  000E                     	;# 
  4499  000F                     	;# 
  4500  0010                     	;# 
  4501  0011                     	;# 
  4502  0012                     	;# 
  4503  0013                     	;# 
  4504  0014                     	;# 
  4505  0015                     	;# 
  4506  0016                     	;# 
  4507  0017                     	;# 
  4508  0018                     	;# 
  4509  0019                     	;# 
  4510  001A                     	;# 
  4511  001C                     	;# 
  4512  001C                     	;# 
  4513  001D                     	;# 
  4514  001D                     	;# 
  4515  001E                     	;# 
  4516  001F                     	;# 
  4517  008C                     	;# 
  4518  008C                     	;# 
  4519  008D                     	;# 
  4520  008E                     	;# 
  4521  008E                     	;# 
  4522  008F                     	;# 
  4523  0090                     	;# 
  4524  0090                     	;# 
  4525  0091                     	;# 
  4526  0093                     	;# 
  4527  0094                     	;# 
  4528  0095                     	;# 
  4529  0096                     	;# 
  4530  0097                     	;# 
  4531  0098                     	;# 
  4532  0099                     	;# 
  4533  009A                     	;# 
  4534  009B                     	;# 
  4535  009C                     	;# 
  4536  009D                     	;# 
  4537  009E                     	;# 
  4538  010C                     	;# 
  4539  010D                     	;# 
  4540  010E                     	;# 
  4541  010E                     	;# 
  4542  010F                     	;# 
  4543  0110                     	;# 
  4544  0110                     	;# 
  4545  0111                     	;# 
  4546  0112                     	;# 
  4547  0112                     	;# 
  4548  0113                     	;# 
  4549  0114                     	;# 
  4550  0114                     	;# 
  4551  0115                     	;# 
  4552  0116                     	;# 
  4553  0116                     	;# 
  4554  0117                     	;# 
  4555  0119                     	;# 
  4556  0119                     	;# 
  4557  0119                     	;# 
  4558  011A                     	;# 
  4559  011A                     	;# 
  4560  011A                     	;# 
  4561  011B                     	;# 
  4562  011B                     	;# 
  4563  011B                     	;# 
  4564  011B                     	;# 
  4565  011B                     	;# 
  4566  011C                     	;# 
  4567  011C                     	;# 
  4568  011C                     	;# 
  4569  011D                     	;# 
  4570  011D                     	;# 
  4571  011D                     	;# 
  4572  011E                     	;# 
  4573  011E                     	;# 
  4574  011E                     	;# 
  4575  011F                     	;# 
  4576  011F                     	;# 
  4577  011F                     	;# 
  4578  011F                     	;# 
  4579  011F                     	;# 
  4580  018C                     	;# 
  4581  018D                     	;# 
  4582  018E                     	;# 
  4583  018F                     	;# 
  4584  0190                     	;# 
  4585  0191                     	;# 
  4586  0192                     	;# 
  4587  0196                     	;# 
  4588  0197                     	;# 
  4589  0198                     	;# 
  4590  0199                     	;# 
  4591  019A                     	;# 
  4592  019B                     	;# 
  4593  019C                     	;# 
  4594  020C                     	;# 
  4595  020C                     	;# 
  4596  020D                     	;# 
  4597  020E                     	;# 
  4598  020F                     	;# 
  4599  020F                     	;# 
  4600  0210                     	;# 
  4601  0210                     	;# 
  4602  0211                     	;# 
  4603  0211                     	;# 
  4604  0212                     	;# 
  4605  0212                     	;# 
  4606  0213                     	;# 
  4607  0214                     	;# 
  4608  0215                     	;# 
  4609  0215                     	;# 
  4610  0216                     	;# 
  4611  0216                     	;# 
  4612  0217                     	;# 
  4613  0217                     	;# 
  4614  0218                     	;# 
  4615  0218                     	;# 
  4616  0219                     	;# 
  4617  021A                     	;# 
  4618  021B                     	;# 
  4619  021B                     	;# 
  4620  021C                     	;# 
  4621  021C                     	;# 
  4622  021D                     	;# 
  4623  021D                     	;# 
  4624  021E                     	;# 
  4625  021F                     	;# 
  4626  028C                     	;# 
  4627  028C                     	;# 
  4628  028D                     	;# 
  4629  028D                     	;# 
  4630  028E                     	;# 
  4631  028F                     	;# 
  4632  0290                     	;# 
  4633  0290                     	;# 
  4634  0291                     	;# 
  4635  0292                     	;# 
  4636  0292                     	;# 
  4637  0293                     	;# 
  4638  0293                     	;# 
  4639  0294                     	;# 
  4640  0295                     	;# 
  4641  0296                     	;# 
  4642  0296                     	;# 
  4643  0297                     	;# 
  4644  0298                     	;# 
  4645  0298                     	;# 
  4646  0299                     	;# 
  4647  0299                     	;# 
  4648  029A                     	;# 
  4649  029B                     	;# 
  4650  029C                     	;# 
  4651  029C                     	;# 
  4652  029D                     	;# 
  4653  030C                     	;# 
  4654  030C                     	;# 
  4655  030D                     	;# 
  4656  030E                     	;# 
  4657  030F                     	;# 
  4658  0310                     	;# 
  4659  0310                     	;# 
  4660  0311                     	;# 
  4661  0312                     	;# 
  4662  0313                     	;# 
  4663  0314                     	;# 
  4664  0314                     	;# 
  4665  0315                     	;# 
  4666  0316                     	;# 
  4667  0317                     	;# 
  4668  0318                     	;# 
  4669  0318                     	;# 
  4670  0319                     	;# 
  4671  031A                     	;# 
  4672  031B                     	;# 
  4673  031C                     	;# 
  4674  031C                     	;# 
  4675  031D                     	;# 
  4676  031E                     	;# 
  4677  031F                     	;# 
  4678  038C                     	;# 
  4679  038C                     	;# 
  4680  038D                     	;# 
  4681  038E                     	;# 
  4682  0390                     	;# 
  4683  0390                     	;# 
  4684  0391                     	;# 
  4685  0392                     	;# 
  4686  040C                     	;# 
  4687  040D                     	;# 
  4688  040E                     	;# 
  4689  040F                     	;# 
  4690  0410                     	;# 
  4691  0411                     	;# 
  4692  0416                     	;# 
  4693  0416                     	;# 
  4694  0417                     	;# 
  4695  0418                     	;# 
  4696  0418                     	;# 
  4697  0419                     	;# 
  4698  041A                     	;# 
  4699  041A                     	;# 
  4700  041B                     	;# 
  4701  041C                     	;# 
  4702  041C                     	;# 
  4703  041D                     	;# 
  4704  041E                     	;# 
  4705  041F                     	;# 
  4706  048C                     	;# 
  4707  048C                     	;# 
  4708  048D                     	;# 
  4709  048E                     	;# 
  4710  048F                     	;# 
  4711  048F                     	;# 
  4712  0490                     	;# 
  4713  0491                     	;# 
  4714  0492                     	;# 
  4715  0492                     	;# 
  4716  0493                     	;# 
  4717  0494                     	;# 
  4718  0495                     	;# 
  4719  0495                     	;# 
  4720  0496                     	;# 
  4721  0497                     	;# 
  4722  0498                     	;# 
  4723  0499                     	;# 
  4724  049A                     	;# 
  4725  049B                     	;# 
  4726  049C                     	;# 
  4727  049D                     	;# 
  4728  050C                     	;# 
  4729  050C                     	;# 
  4730  050D                     	;# 
  4731  050E                     	;# 
  4732  050F                     	;# 
  4733  050F                     	;# 
  4734  0510                     	;# 
  4735  0511                     	;# 
  4736  0512                     	;# 
  4737  0512                     	;# 
  4738  0513                     	;# 
  4739  0514                     	;# 
  4740  0515                     	;# 
  4741  0515                     	;# 
  4742  0516                     	;# 
  4743  0517                     	;# 
  4744  0518                     	;# 
  4745  0519                     	;# 
  4746  051A                     	;# 
  4747  051B                     	;# 
  4748  051C                     	;# 
  4749  051D                     	;# 
  4750  058C                     	;# 
  4751  058C                     	;# 
  4752  058D                     	;# 
  4753  058E                     	;# 
  4754  058F                     	;# 
  4755  058F                     	;# 
  4756  0590                     	;# 
  4757  0591                     	;# 
  4758  0592                     	;# 
  4759  0593                     	;# 
  4760  060C                     	;# 
  4761  060D                     	;# 
  4762  060E                     	;# 
  4763  060F                     	;# 
  4764  0610                     	;# 
  4765  0611                     	;# 
  4766  0612                     	;# 
  4767  0613                     	;# 
  4768  0614                     	;# 
  4769  0616                     	;# 
  4770  0617                     	;# 
  4771  0618                     	;# 
  4772  0619                     	;# 
  4773  061A                     	;# 
  4774  061B                     	;# 
  4775  061C                     	;# 
  4776  061D                     	;# 
  4777  061E                     	;# 
  4778  068C                     	;# 
  4779  068D                     	;# 
  4780  068E                     	;# 
  4781  068F                     	;# 
  4782  0690                     	;# 
  4783  0691                     	;# 
  4784  0692                     	;# 
  4785  0693                     	;# 
  4786  0694                     	;# 
  4787  070C                     	;# 
  4788  070D                     	;# 
  4789  070E                     	;# 
  4790  070F                     	;# 
  4791  0710                     	;# 
  4792  0711                     	;# 
  4793  0712                     	;# 
  4794  0713                     	;# 
  4795  0714                     	;# 
  4796  0716                     	;# 
  4797  0717                     	;# 
  4798  0718                     	;# 
  4799  0719                     	;# 
  4800  071A                     	;# 
  4801  071B                     	;# 
  4802  071C                     	;# 
  4803  071D                     	;# 
  4804  071E                     	;# 
  4805  0796                     	;# 
  4806  0797                     	;# 
  4807  0798                     	;# 
  4808  0799                     	;# 
  4809  079A                     	;# 
  4810  079B                     	;# 
  4811  080C                     	;# 
  4812  080D                     	;# 
  4813  080E                     	;# 
  4814  080F                     	;# 
  4815  0810                     	;# 
  4816  0811                     	;# 
  4817  0812                     	;# 
  4818  0813                     	;# 
  4819  0814                     	;# 
  4820  081A                     	;# 
  4821  081B                     	;# 
  4822  081C                     	;# 
  4823  081D                     	;# 
  4824  081E                     	;# 
  4825  081F                     	;# 
  4826  088C                     	;# 
  4827  088D                     	;# 
  4828  088E                     	;# 
  4829  088F                     	;# 
  4830  0890                     	;# 
  4831  0891                     	;# 
  4832  0892                     	;# 
  4833  0893                     	;# 
  4834  0895                     	;# 
  4835  0896                     	;# 
  4836  0897                     	;# 
  4837  0898                     	;# 
  4838  0899                     	;# 
  4839  089A                     	;# 
  4840  089B                     	;# 
  4841  090C                     	;# 
  4842  090E                     	;# 
  4843  090F                     	;# 
  4844  091F                     	;# 
  4845  091F                     	;# 
  4846  098F                     	;# 
  4847  098F                     	;# 
  4848  0990                     	;# 
  4849  0991                     	;# 
  4850  0992                     	;# 
  4851  0993                     	;# 
  4852  0994                     	;# 
  4853  0995                     	;# 
  4854  0996                     	;# 
  4855  0997                     	;# 
  4856  0E0F                     	;# 
  4857  0E10                     	;# 
  4858  0E11                     	;# 
  4859  0E12                     	;# 
  4860  0E13                     	;# 
  4861  0E14                     	;# 
  4862  0E15                     	;# 
  4863  0E16                     	;# 
  4864  0E17                     	;# 
  4865  0E18                     	;# 
  4866  0E19                     	;# 
  4867  0E1A                     	;# 
  4868  0E1B                     	;# 
  4869  0E1C                     	;# 
  4870  0E1D                     	;# 
  4871  0E1E                     	;# 
  4872  0E1F                     	;# 
  4873  0E20                     	;# 
  4874  0E21                     	;# 
  4875  0E22                     	;# 
  4876  0E23                     	;# 
  4877  0E24                     	;# 
  4878  0E25                     	;# 
  4879  0E26                     	;# 
  4880  0E27                     	;# 
  4881  0E28                     	;# 
  4882  0E29                     	;# 
  4883  0E2A                     	;# 
  4884  0E2B                     	;# 
  4885  0E2C                     	;# 
  4886  0E2D                     	;# 
  4887  0E2E                     	;# 
  4888  0E2F                     	;# 
  4889  0E30                     	;# 
  4890  0E31                     	;# 
  4891  0E32                     	;# 
  4892  0E33                     	;# 
  4893  0E34                     	;# 
  4894  0E35                     	;# 
  4895  0E36                     	;# 
  4896  0E37                     	;# 
  4897  0E8F                     	;# 
  4898  0E90                     	;# 
  4899  0E91                     	;# 
  4900  0E92                     	;# 
  4901  0E93                     	;# 
  4902  0E94                     	;# 
  4903  0E95                     	;# 
  4904  0E96                     	;# 
  4905  0E97                     	;# 
  4906  0E9C                     	;# 
  4907  0E9D                     	;# 
  4908  0E9E                     	;# 
  4909  0EA1                     	;# 
  4910  0EA2                     	;# 
  4911  0EA3                     	;# 
  4912  0EA4                     	;# 
  4913  0EA5                     	;# 
  4914  0EA9                     	;# 
  4915  0EAA                     	;# 
  4916  0EAB                     	;# 
  4917  0EAC                     	;# 
  4918  0EB1                     	;# 
  4919  0EB2                     	;# 
  4920  0EB3                     	;# 
  4921  0EB8                     	;# 
  4922  0EB9                     	;# 
  4923  0EBA                     	;# 
  4924  0EBB                     	;# 
  4925  0EBC                     	;# 
  4926  0EBD                     	;# 
  4927  0EBE                     	;# 
  4928  0EC3                     	;# 
  4929  0EC5                     	;# 
  4930  0EC6                     	;# 
  4931  0EC7                     	;# 
  4932  0EC8                     	;# 
  4933  0EC9                     	;# 
  4934  0ECA                     	;# 
  4935  0ECB                     	;# 
  4936  0ECC                     	;# 
  4937  0F10                     	;# 
  4938  0F11                     	;# 
  4939  0F12                     	;# 
  4940  0F13                     	;# 
  4941  0F14                     	;# 
  4942  0F15                     	;# 
  4943  0F16                     	;# 
  4944  0F17                     	;# 
  4945  0F18                     	;# 
  4946  0F19                     	;# 
  4947  0F1A                     	;# 
  4948  0F1B                     	;# 
  4949  0F1C                     	;# 
  4950  0F1D                     	;# 
  4951  0F1E                     	;# 
  4952  0F1F                     	;# 
  4953  0F20                     	;# 
  4954  0F21                     	;# 
  4955  0F22                     	;# 
  4956  0F23                     	;# 
  4957  0F24                     	;# 
  4958  0F25                     	;# 
  4959  0F26                     	;# 
  4960  0F27                     	;# 
  4961  0F28                     	;# 
  4962  0F29                     	;# 
  4963  0F2A                     	;# 
  4964  0F2B                     	;# 
  4965  0F2C                     	;# 
  4966  0F2D                     	;# 
  4967  0F2E                     	;# 
  4968  0F2F                     	;# 
  4969  0F30                     	;# 
  4970  0F31                     	;# 
  4971  0F32                     	;# 
  4972  0F38                     	;# 
  4973  0F39                     	;# 
  4974  0F3A                     	;# 
  4975  0F3B                     	;# 
  4976  0F3C                     	;# 
  4977  0F3D                     	;# 
  4978  0F3E                     	;# 
  4979  0F3F                     	;# 
  4980  0F40                     	;# 
  4981  0F41                     	;# 
  4982  0F43                     	;# 
  4983  0F44                     	;# 
  4984  0F45                     	;# 
  4985  0F46                     	;# 
  4986  0F47                     	;# 
  4987  0F48                     	;# 
  4988  0F49                     	;# 
  4989  0F4A                     	;# 
  4990  0F4B                     	;# 
  4991  0F4C                     	;# 
  4992  0F4E                     	;# 
  4993  0F4F                     	;# 
  4994  0F50                     	;# 
  4995  0F51                     	;# 
  4996  0F52                     	;# 
  4997  0F53                     	;# 
  4998  0F54                     	;# 
  4999  0F55                     	;# 
  5000  0F56                     	;# 
  5001  0F57                     	;# 
  5002  0F59                     	;# 
  5003  0F5A                     	;# 
  5004  0F5B                     	;# 
  5005  0F5C                     	;# 
  5006  0F5D                     	;# 
  5007  0F61                     	;# 
  5008  0F62                     	;# 
  5009  0F64                     	;# 
  5010  0F65                     	;# 
  5011  0F66                     	;# 
  5012  0F67                     	;# 
  5013  0F68                     	;# 
  5014  0F69                     	;# 
  5015  0F6A                     	;# 
  5016  0F6B                     	;# 
  5017  0F6C                     	;# 
  5018  0F6D                     	;# 
  5019  0FE4                     	;# 
  5020  0FE5                     	;# 
  5021  0FE6                     	;# 
  5022  0FE7                     	;# 
  5023  0FE8                     	;# 
  5024  0FE9                     	;# 
  5025  0FEA                     	;# 
  5026  0FEB                     	;# 
  5027  0FED                     	;# 
  5028  0FEE                     	;# 
  5029  0FEF                     	;# 
  5030  0000                     	;# 
  5031  0001                     	;# 
  5032  0002                     	;# 
  5033  0003                     	;# 
  5034  0004                     	;# 
  5035  0005                     	;# 
  5036  0006                     	;# 
  5037  0007                     	;# 
  5038  0008                     	;# 
  5039  0009                     	;# 
  5040  000A                     	;# 
  5041  000B                     	;# 
  5042  000C                     	;# 
  5043  000D                     	;# 
  5044  000E                     	;# 
  5045  000F                     	;# 
  5046  0010                     	;# 
  5047  0011                     	;# 
  5048  0012                     	;# 
  5049  0013                     	;# 
  5050  0014                     	;# 
  5051  0015                     	;# 
  5052  0016                     	;# 
  5053  0017                     	;# 
  5054  0018                     	;# 
  5055  0019                     	;# 
  5056  001A                     	;# 
  5057  001C                     	;# 
  5058  001C                     	;# 
  5059  001D                     	;# 
  5060  001D                     	;# 
  5061  001E                     	;# 
  5062  001F                     	;# 
  5063  008C                     	;# 
  5064  008C                     	;# 
  5065  008D                     	;# 
  5066  008E                     	;# 
  5067  008E                     	;# 
  5068  008F                     	;# 
  5069  0090                     	;# 
  5070  0090                     	;# 
  5071  0091                     	;# 
  5072  0093                     	;# 
  5073  0094                     	;# 
  5074  0095                     	;# 
  5075  0096                     	;# 
  5076  0097                     	;# 
  5077  0098                     	;# 
  5078  0099                     	;# 
  5079  009A                     	;# 
  5080  009B                     	;# 
  5081  009C                     	;# 
  5082  009D                     	;# 
  5083  009E                     	;# 
  5084  010C                     	;# 
  5085  010D                     	;# 
  5086  010E                     	;# 
  5087  010E                     	;# 
  5088  010F                     	;# 
  5089  0110                     	;# 
  5090  0110                     	;# 
  5091  0111                     	;# 
  5092  0112                     	;# 
  5093  0112                     	;# 
  5094  0113                     	;# 
  5095  0114                     	;# 
  5096  0114                     	;# 
  5097  0115                     	;# 
  5098  0116                     	;# 
  5099  0116                     	;# 
  5100  0117                     	;# 
  5101  0119                     	;# 
  5102  0119                     	;# 
  5103  0119                     	;# 
  5104  011A                     	;# 
  5105  011A                     	;# 
  5106  011A                     	;# 
  5107  011B                     	;# 
  5108  011B                     	;# 
  5109  011B                     	;# 
  5110  011B                     	;# 
  5111  011B                     	;# 
  5112  011C                     	;# 
  5113  011C                     	;# 
  5114  011C                     	;# 
  5115  011D                     	;# 
  5116  011D                     	;# 
  5117  011D                     	;# 
  5118  011E                     	;# 
  5119  011E                     	;# 
  5120  011E                     	;# 
  5121  011F                     	;# 
  5122  011F                     	;# 
  5123  011F                     	;# 
  5124  011F                     	;# 
  5125  011F                     	;# 
  5126  018C                     	;# 
  5127  018D                     	;# 
  5128  018E                     	;# 
  5129  018F                     	;# 
  5130  0190                     	;# 
  5131  0191                     	;# 
  5132  0192                     	;# 
  5133  0196                     	;# 
  5134  0197                     	;# 
  5135  0198                     	;# 
  5136  0199                     	;# 
  5137  019A                     	;# 
  5138  019B                     	;# 
  5139  019C                     	;# 
  5140  020C                     	;# 
  5141  020C                     	;# 
  5142  020D                     	;# 
  5143  020E                     	;# 
  5144  020F                     	;# 
  5145  020F                     	;# 
  5146  0210                     	;# 
  5147  0210                     	;# 
  5148  0211                     	;# 
  5149  0211                     	;# 
  5150  0212                     	;# 
  5151  0212                     	;# 
  5152  0213                     	;# 
  5153  0214                     	;# 
  5154  0215                     	;# 
  5155  0215                     	;# 
  5156  0216                     	;# 
  5157  0216                     	;# 
  5158  0217                     	;# 
  5159  0217                     	;# 
  5160  0218                     	;# 
  5161  0218                     	;# 
  5162  0219                     	;# 
  5163  021A                     	;# 
  5164  021B                     	;# 
  5165  021B                     	;# 
  5166  021C                     	;# 
  5167  021C                     	;# 
  5168  021D                     	;# 
  5169  021D                     	;# 
  5170  021E                     	;# 
  5171  021F                     	;# 
  5172  028C                     	;# 
  5173  028C                     	;# 
  5174  028D                     	;# 
  5175  028D                     	;# 
  5176  028E                     	;# 
  5177  028F                     	;# 
  5178  0290                     	;# 
  5179  0290                     	;# 
  5180  0291                     	;# 
  5181  0292                     	;# 
  5182  0292                     	;# 
  5183  0293                     	;# 
  5184  0293                     	;# 
  5185  0294                     	;# 
  5186  0295                     	;# 
  5187  0296                     	;# 
  5188  0296                     	;# 
  5189  0297                     	;# 
  5190  0298                     	;# 
  5191  0298                     	;# 
  5192  0299                     	;# 
  5193  0299                     	;# 
  5194  029A                     	;# 
  5195  029B                     	;# 
  5196  029C                     	;# 
  5197  029C                     	;# 
  5198  029D                     	;# 
  5199  030C                     	;# 
  5200  030C                     	;# 
  5201  030D                     	;# 
  5202  030E                     	;# 
  5203  030F                     	;# 
  5204  0310                     	;# 
  5205  0310                     	;# 
  5206  0311                     	;# 
  5207  0312                     	;# 
  5208  0313                     	;# 
  5209  0314                     	;# 
  5210  0314                     	;# 
  5211  0315                     	;# 
  5212  0316                     	;# 
  5213  0317                     	;# 
  5214  0318                     	;# 
  5215  0318                     	;# 
  5216  0319                     	;# 
  5217  031A                     	;# 
  5218  031B                     	;# 
  5219  031C                     	;# 
  5220  031C                     	;# 
  5221  031D                     	;# 
  5222  031E                     	;# 
  5223  031F                     	;# 
  5224  038C                     	;# 
  5225  038C                     	;# 
  5226  038D                     	;# 
  5227  038E                     	;# 
  5228  0390                     	;# 
  5229  0390                     	;# 
  5230  0391                     	;# 
  5231  0392                     	;# 
  5232  040C                     	;# 
  5233  040D                     	;# 
  5234  040E                     	;# 
  5235  040F                     	;# 
  5236  0410                     	;# 
  5237  0411                     	;# 
  5238  0416                     	;# 
  5239  0416                     	;# 
  5240  0417                     	;# 
  5241  0418                     	;# 
  5242  0418                     	;# 
  5243  0419                     	;# 
  5244  041A                     	;# 
  5245  041A                     	;# 
  5246  041B                     	;# 
  5247  041C                     	;# 
  5248  041C                     	;# 
  5249  041D                     	;# 
  5250  041E                     	;# 
  5251  041F                     	;# 
  5252  048C                     	;# 
  5253  048C                     	;# 
  5254  048D                     	;# 
  5255  048E                     	;# 
  5256  048F                     	;# 
  5257  048F                     	;# 
  5258  0490                     	;# 
  5259  0491                     	;# 
  5260  0492                     	;# 
  5261  0492                     	;# 
  5262  0493                     	;# 
  5263  0494                     	;# 
  5264  0495                     	;# 
  5265  0495                     	;# 
  5266  0496                     	;# 
  5267  0497                     	;# 
  5268  0498                     	;# 
  5269  0499                     	;# 
  5270  049A                     	;# 
  5271  049B                     	;# 
  5272  049C                     	;# 
  5273  049D                     	;# 
  5274  050C                     	;# 
  5275  050C                     	;# 
  5276  050D                     	;# 
  5277  050E                     	;# 
  5278  050F                     	;# 
  5279  050F                     	;# 
  5280  0510                     	;# 
  5281  0511                     	;# 
  5282  0512                     	;# 
  5283  0512                     	;# 
  5284  0513                     	;# 
  5285  0514                     	;# 
  5286  0515                     	;# 
  5287  0515                     	;# 
  5288  0516                     	;# 
  5289  0517                     	;# 
  5290  0518                     	;# 
  5291  0519                     	;# 
  5292  051A                     	;# 
  5293  051B                     	;# 
  5294  051C                     	;# 
  5295  051D                     	;# 
  5296  058C                     	;# 
  5297  058C                     	;# 
  5298  058D                     	;# 
  5299  058E                     	;# 
  5300  058F                     	;# 
  5301  058F                     	;# 
  5302  0590                     	;# 
  5303  0591                     	;# 
  5304  0592                     	;# 
  5305  0593                     	;# 
  5306  060C                     	;# 
  5307  060D                     	;# 
  5308  060E                     	;# 
  5309  060F                     	;# 
  5310  0610                     	;# 
  5311  0611                     	;# 
  5312  0612                     	;# 
  5313  0613                     	;# 
  5314  0614                     	;# 
  5315  0616                     	;# 
  5316  0617                     	;# 
  5317  0618                     	;# 
  5318  0619                     	;# 
  5319  061A                     	;# 
  5320  061B                     	;# 
  5321  061C                     	;# 
  5322  061D                     	;# 
  5323  061E                     	;# 
  5324  068C                     	;# 
  5325  068D                     	;# 
  5326  068E                     	;# 
  5327  068F                     	;# 
  5328  0690                     	;# 
  5329  0691                     	;# 
  5330  0692                     	;# 
  5331  0693                     	;# 
  5332  0694                     	;# 
  5333  070C                     	;# 
  5334  070D                     	;# 
  5335  070E                     	;# 
  5336  070F                     	;# 
  5337  0710                     	;# 
  5338  0711                     	;# 
  5339  0712                     	;# 
  5340  0713                     	;# 
  5341  0714                     	;# 
  5342  0716                     	;# 
  5343  0717                     	;# 
  5344  0718                     	;# 
  5345  0719                     	;# 
  5346  071A                     	;# 
  5347  071B                     	;# 
  5348  071C                     	;# 
  5349  071D                     	;# 
  5350  071E                     	;# 
  5351  0796                     	;# 
  5352  0797                     	;# 
  5353  0798                     	;# 
  5354  0799                     	;# 
  5355  079A                     	;# 
  5356  079B                     	;# 
  5357  080C                     	;# 
  5358  080D                     	;# 
  5359  080E                     	;# 
  5360  080F                     	;# 
  5361  0810                     	;# 
  5362  0811                     	;# 
  5363  0812                     	;# 
  5364  0813                     	;# 
  5365  0814                     	;# 
  5366  081A                     	;# 
  5367  081B                     	;# 
  5368  081C                     	;# 
  5369  081D                     	;# 
  5370  081E                     	;# 
  5371  081F                     	;# 
  5372  088C                     	;# 
  5373  088D                     	;# 
  5374  088E                     	;# 
  5375  088F                     	;# 
  5376  0890                     	;# 
  5377  0891                     	;# 
  5378  0892                     	;# 
  5379  0893                     	;# 
  5380  0895                     	;# 
  5381  0896                     	;# 
  5382  0897                     	;# 
  5383  0898                     	;# 
  5384  0899                     	;# 
  5385  089A                     	;# 
  5386  089B                     	;# 
  5387  090C                     	;# 
  5388  090E                     	;# 
  5389  090F                     	;# 
  5390  091F                     	;# 
  5391  091F                     	;# 
  5392  098F                     	;# 
  5393  098F                     	;# 
  5394  0990                     	;# 
  5395  0991                     	;# 
  5396  0992                     	;# 
  5397  0993                     	;# 
  5398  0994                     	;# 
  5399  0995                     	;# 
  5400  0996                     	;# 
  5401  0997                     	;# 
  5402  0E0F                     	;# 
  5403  0E10                     	;# 
  5404  0E11                     	;# 
  5405  0E12                     	;# 
  5406  0E13                     	;# 
  5407  0E14                     	;# 
  5408  0E15                     	;# 
  5409  0E16                     	;# 
  5410  0E17                     	;# 
  5411  0E18                     	;# 
  5412  0E19                     	;# 
  5413  0E1A                     	;# 
  5414  0E1B                     	;# 
  5415  0E1C                     	;# 
  5416  0E1D                     	;# 
  5417  0E1E                     	;# 
  5418  0E1F                     	;# 
  5419  0E20                     	;# 
  5420  0E21                     	;# 
  5421  0E22                     	;# 
  5422  0E23                     	;# 
  5423  0E24                     	;# 
  5424  0E25                     	;# 
  5425  0E26                     	;# 
  5426  0E27                     	;# 
  5427  0E28                     	;# 
  5428  0E29                     	;# 
  5429  0E2A                     	;# 
  5430  0E2B                     	;# 
  5431  0E2C                     	;# 
  5432  0E2D                     	;# 
  5433  0E2E                     	;# 
  5434  0E2F                     	;# 
  5435  0E30                     	;# 
  5436  0E31                     	;# 
  5437  0E32                     	;# 
  5438  0E33                     	;# 
  5439  0E34                     	;# 
  5440  0E35                     	;# 
  5441  0E36                     	;# 
  5442  0E37                     	;# 
  5443  0E8F                     	;# 
  5444  0E90                     	;# 
  5445  0E91                     	;# 
  5446  0E92                     	;# 
  5447  0E93                     	;# 
  5448  0E94                     	;# 
  5449  0E95                     	;# 
  5450  0E96                     	;# 
  5451  0E97                     	;# 
  5452  0E9C                     	;# 
  5453  0E9D                     	;# 
  5454  0E9E                     	;# 
  5455  0EA1                     	;# 
  5456  0EA2                     	;# 
  5457  0EA3                     	;# 
  5458  0EA4                     	;# 
  5459  0EA5                     	;# 
  5460  0EA9                     	;# 
  5461  0EAA                     	;# 
  5462  0EAB                     	;# 
  5463  0EAC                     	;# 
  5464  0EB1                     	;# 
  5465  0EB2                     	;# 
  5466  0EB3                     	;# 
  5467  0EB8                     	;# 
  5468  0EB9                     	;# 
  5469  0EBA                     	;# 
  5470  0EBB                     	;# 
  5471  0EBC                     	;# 
  5472  0EBD                     	;# 
  5473  0EBE                     	;# 
  5474  0EC3                     	;# 
  5475  0EC5                     	;# 
  5476  0EC6                     	;# 
  5477  0EC7                     	;# 
  5478  0EC8                     	;# 
  5479  0EC9                     	;# 
  5480  0ECA                     	;# 
  5481  0ECB                     	;# 
  5482  0ECC                     	;# 
  5483  0F10                     	;# 
  5484  0F11                     	;# 
  5485  0F12                     	;# 
  5486  0F13                     	;# 
  5487  0F14                     	;# 
  5488  0F15                     	;# 
  5489  0F16                     	;# 
  5490  0F17                     	;# 
  5491  0F18                     	;# 
  5492  0F19                     	;# 
  5493  0F1A                     	;# 
  5494  0F1B                     	;# 
  5495  0F1C                     	;# 
  5496  0F1D                     	;# 
  5497  0F1E                     	;# 
  5498  0F1F                     	;# 
  5499  0F20                     	;# 
  5500  0F21                     	;# 
  5501  0F22                     	;# 
  5502  0F23                     	;# 
  5503  0F24                     	;# 
  5504  0F25                     	;# 
  5505  0F26                     	;# 
  5506  0F27                     	;# 
  5507  0F28                     	;# 
  5508  0F29                     	;# 
  5509  0F2A                     	;# 
  5510  0F2B                     	;# 
  5511  0F2C                     	;# 
  5512  0F2D                     	;# 
  5513  0F2E                     	;# 
  5514  0F2F                     	;# 
  5515  0F30                     	;# 
  5516  0F31                     	;# 
  5517  0F32                     	;# 
  5518  0F38                     	;# 
  5519  0F39                     	;# 
  5520  0F3A                     	;# 
  5521  0F3B                     	;# 
  5522  0F3C                     	;# 
  5523  0F3D                     	;# 
  5524  0F3E                     	;# 
  5525  0F3F                     	;# 
  5526  0F40                     	;# 
  5527  0F41                     	;# 
  5528  0F43                     	;# 
  5529  0F44                     	;# 
  5530  0F45                     	;# 
  5531  0F46                     	;# 
  5532  0F47                     	;# 
  5533  0F48                     	;# 
  5534  0F49                     	;# 
  5535  0F4A                     	;# 
  5536  0F4B                     	;# 
  5537  0F4C                     	;# 
  5538  0F4E                     	;# 
  5539  0F4F                     	;# 
  5540  0F50                     	;# 
  5541  0F51                     	;# 
  5542  0F52                     	;# 
  5543  0F53                     	;# 
  5544  0F54                     	;# 
  5545  0F55                     	;# 
  5546  0F56                     	;# 
  5547  0F57                     	;# 
  5548  0F59                     	;# 
  5549  0F5A                     	;# 
  5550  0F5B                     	;# 
  5551  0F5C                     	;# 
  5552  0F5D                     	;# 
  5553  0F61                     	;# 
  5554  0F62                     	;# 
  5555  0F64                     	;# 
  5556  0F65                     	;# 
  5557  0F66                     	;# 
  5558  0F67                     	;# 
  5559  0F68                     	;# 
  5560  0F69                     	;# 
  5561  0F6A                     	;# 
  5562  0F6B                     	;# 
  5563  0F6C                     	;# 
  5564  0F6D                     	;# 
  5565  0FE4                     	;# 
  5566  0FE5                     	;# 
  5567  0FE6                     	;# 
  5568  0FE7                     	;# 
  5569  0FE8                     	;# 
  5570  0FE9                     	;# 
  5571  0FEA                     	;# 
  5572  0FEB                     	;# 
  5573  0FED                     	;# 
  5574  0FEE                     	;# 
  5575  0FEF                     	;# 
  5576                           
  5577                           	psect	stringtext1
  5578  041B                     __pstringtext1:	
  5579  041B                     _fsmStateTable:	
  5580  041B  34EA               	retlw	low _do_I2C_IDLE
  5581  041C  3405               	retlw	high _do_I2C_IDLE
  5582  041D  3483               	retlw	low _do_I2C_SEND_ADR_READ
  5583  041E  3405               	retlw	high _do_I2C_SEND_ADR_READ
  5584  041F  349C               	retlw	low _do_I2C_SEND_ADR_WRITE
  5585  0420  3405               	retlw	high _do_I2C_SEND_ADR_WRITE
  5586  0421  346D               	retlw	low _do_I2C_TX
  5587  0422  3401               	retlw	high _do_I2C_TX
  5588  0423  340E               	retlw	low _do_I2C_RX
  5589  0424  3402               	retlw	high _do_I2C_RX
  5590  0425  34B4               	retlw	low _do_I2C_RCEN
  5591  0426  3405               	retlw	high _do_I2C_RCEN
  5592  0427  34D1               	retlw	low _do_I2C_TX_EMPTY
  5593  0428  3402               	retlw	high _do_I2C_TX_EMPTY
  5594  0429  34E5               	retlw	low _do_I2C_SEND_RESTART_READ
  5595  042A  3405               	retlw	high _do_I2C_SEND_RESTART_READ
  5596  042B  34E0               	retlw	low _do_I2C_SEND_RESTART_WRITE
  5597  042C  3405               	retlw	high _do_I2C_SEND_RESTART_WRITE
  5598  042D  34DB               	retlw	low _do_I2C_SEND_RESTART
  5599  042E  3405               	retlw	high _do_I2C_SEND_RESTART
  5600  042F  34D6               	retlw	low _do_I2C_SEND_STOP
  5601  0430  3405               	retlw	high _do_I2C_SEND_STOP
  5602  0431  34D1               	retlw	low _do_I2C_DO_ACK
  5603  0432  3405               	retlw	high _do_I2C_DO_ACK
  5604  0433  34CC               	retlw	low _do_I2C_DO_NACK_STOP
  5605  0434  3405               	retlw	high _do_I2C_DO_NACK_STOP
  5606  0435  34C7               	retlw	low _do_I2C_DO_NACK_RESTART
  5607  0436  3405               	retlw	high _do_I2C_DO_NACK_RESTART
  5608  0437  34A4               	retlw	low _do_I2C_RESET
  5609  0438  3405               	retlw	high _do_I2C_RESET
  5610  0439  3433               	retlw	low _do_I2C_DO_ADDRESS_NACK
  5611  043A  3403               	retlw	high _do_I2C_DO_ADDRESS_NACK
  5612  043B                     __end_of_fsmStateTable:	
  5613                           
  5614                           	psect	bitnvCOMMON
  5615  03E8                     __pbitnvCOMMON:	
  5616  03E8                     _running:	
  5617  03E8                     	ds	1
  5618                           
  5619                           	psect	nvBANK0
  5620  0069                     __pnvBANK0:	
  5621  0069                     _duty_cycle:	
  5622  0069                     	ds	2
  5623  006B                     _pmon:	
  5624  006B                     	ds	1
  5625  006C                     _nreg:	
  5626  006C                     	ds	1
  5627  0003                     _STATUSbits	set	3
  5628  0013                     _TRISCbits	set	19
  5629  0016                     _LATAbits	set	22
  5630  0014                     _TRISD	set	20
  5631  0013                     _TRISC	set	19
  5632  0012                     _TRISB	set	18
  5633  0011                     _TRISA	set	17
  5634  0015                     _TRISE	set	21
  5635  0018                     _LATC	set	24
  5636  0017                     _LATB	set	23
  5637  0016                     _LATA	set	22
  5638  0019                     _LATD	set	25
  5639  001A                     _LATE	set	26
  5640  000B                     _INTCONbits	set	11
  5641  018E                     _SSP1MSK	set	398
  5642  018D                     _SSP1ADD	set	397
  5643  018F                     _SSP1STAT	set	399
  5644  0191                     _SSP1CON2	set	401
  5645  0190                     _SSP1CON1bits	set	400
  5646  018C                     _SSP1BUF	set	396
  5647  018F                     _SSP1STATbits	set	399
  5648  0191                     _SSP1CON2bits	set	401
  5649  0190                     _SSP1CON1	set	400
  5650  020F                     _T1GCONbits	set	527
  5651  020E                     _T1CONbits	set	526
  5652  020E                     _T1CON	set	526
  5653  020C                     _TMR1L	set	524
  5654  020D                     _TMR1H	set	525
  5655  0211                     _T1CLK	set	529
  5656  0210                     _T1GATE	set	528
  5657  020F                     _T1GCON	set	527
  5658  0719                     _PIE3bits	set	1817
  5659  071A                     _PIE4bits	set	1818
  5660  0710                     _PIR4bits	set	1808
  5661  070F                     _PIR3bits	set	1807
  5662  079B                     _PMD5	set	1947
  5663  079A                     _PMD4	set	1946
  5664  0799                     _PMD3	set	1945
  5665  0798                     _PMD2	set	1944
  5666  0797                     _PMD1	set	1943
  5667  0796                     _PMD0	set	1942
  5668  081F                     _NVMCON2	set	2079
  5669  081C                     _NVMDATL	set	2076
  5670  081D                     _NVMDATH	set	2077
  5671  081E                     _NVMCON1bits	set	2078
  5672  081B                     _NVMADRH	set	2075
  5673  081A                     _NVMADRL	set	2074
  5674  0892                     _OSCTUNE	set	2194
  5675  0893                     _OSCFRQ	set	2195
  5676  0891                     _OSCEN	set	2193
  5677  088F                     _OSCCON3	set	2191
  5678  088D                     _OSCCON1	set	2189
  5679  0EC6                     _SSP1DATPPS	set	3782
  5680  0EC5                     _SSP1CLKPPS	set	3781
  5681  0F24                     _RC4PPS	set	3876
  5682  0F23                     _RC3PPS	set	3875
  5683  0F68                     _INLVLE	set	3944
  5684  0F5D                     _INLVLD	set	3933
  5685  0F52                     _INLVLC	set	3922
  5686  0F47                     _INLVLB	set	3911
  5687  0F3C                     _INLVLA	set	3900
  5688  0F67                     _SLRCONE	set	3943
  5689  0F5C                     _SLRCOND	set	3932
  5690  0F51                     _SLRCONC	set	3921
  5691  0F46                     _SLRCONB	set	3910
  5692  0F3B                     _SLRCONA	set	3899
  5693  0F5B                     _ODCOND	set	3931
  5694  0F50                     _ODCONC	set	3920
  5695  0F45                     _ODCONB	set	3909
  5696  0F3A                     _ODCONA	set	3898
  5697  0F66                     _ODCONE	set	3942
  5698  0F4F                     _WPUC	set	3919
  5699  0F39                     _WPUA	set	3897
  5700  0F44                     _WPUB	set	3908
  5701  0F65                     _WPUE	set	3941
  5702  0F5A                     _WPUD	set	3930
  5703  0F38                     _ANSELA	set	3896
  5704  0F64                     _ANSELE	set	3940
  5705  0F43                     _ANSELB	set	3907
  5706  0F4E                     _ANSELC	set	3918
  5707  0F59                     _ANSELD	set	3929
  5708  7A7C                     _WPUC4	set	31356
  5709  7A7B                     _WPUC3	set	31355
  5710                           
  5711                           ; #config settings
  5712  0000                     
  5713                           	psect	cinit
  5714  0039                     start_initialization:	
  5715  0039                     __initialization:	
  5716                           
  5717                           ; Clear objects allocated to BITCOMMON
  5718  0039  01FC               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  5719                           
  5720                           ; Clear objects allocated to COMMON
  5721  003A  01F8               	clrf	__pbssCOMMON& (0+127)
  5722  003B  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  5723  003C  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  5724  003D  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  5725                           
  5726                           ; Clear objects allocated to BANK0
  5727  003E  3020               	movlw	low __pbssBANK0
  5728  003F  0084               	movwf	4
  5729  0040  3000               	movlw	high __pbssBANK0
  5730  0041  0085               	movwf	5
  5731  0042  3039               	movlw	57
  5732  0043  3185  25BB  3180   	fcall	clear_ram0
  5733  0046                     end_of_initialization:	
  5734                           ;End of C runtime variable initialization code
  5735                           
  5736  0046                     __end_of__initialization:	
  5737  0046  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5738  0047  0020               	movlb	0
  5739  0048  3180  284A         	ljmp	_main	;jump to C main() function
  5740                           
  5741                           	psect	bssEEDATA
  5742  0000                     __pbssEEDATA:	
  5743  0000                     _buffer:	
  5744  0000  0000               	db	0
  5745  0001  0000               	db	0
  5746  0002  0000               	db	0
  5747  0003  0000               	db	0
  5748  0004  0000               	db	0
  5749  0005  0000               	db	0
  5750  0006  0000               	db	0
  5751  0007  0000               	db	0
  5752  0008  0000               	db	0
  5753  0009  0000               	db	0
  5754  000A  0000               	db	0
  5755  000B  0000               	db	0
  5756  000C  0000               	db	0
  5757  000D  0000               	db	0
  5758  000E  0000               	db	0
  5759  000F  0000               	db	0
  5760  0010  0000               	db	0
  5761  0011  0000               	db	0
  5762  0012  0000               	db	0
  5763  0013  0000               	db	0
  5764  0014  0000               	db	0
  5765  0015  0000               	db	0
  5766  0016  0000               	db	0
  5767  0017  0000               	db	0
  5768  0018  0000               	db	0
  5769  0019  0000               	db	0
  5770  001A  0000               	db	0
  5771  001B  0000               	db	0
  5772  001C  0000               	db	0
  5773  001D  0000               	db	0
  5774  001E  0000               	db	0
  5775  001F  0000               	db	0
  5776  0020  0000               	db	0
  5777  0021  0000               	db	0
  5778  0022  0000               	db	0
  5779  0023  0000               	db	0
  5780  0024  0000               	db	0
  5781  0025  0000               	db	0
  5782  0026  0000               	db	0
  5783  0027  0000               	db	0
  5784  0028  0000               	db	0
  5785  0029  0000               	db	0
  5786  002A  0000               	db	0
  5787  002B  0000               	db	0
  5788  002C  0000               	db	0
  5789  002D  0000               	db	0
  5790  002E  0000               	db	0
  5791  002F  0000               	db	0
  5792  0030  0000               	db	0
  5793  0031  0000               	db	0
  5794  0032  0000               	db	0
  5795  0033  0000               	db	0
  5796  0034  0000               	db	0
  5797  0035  0000               	db	0
  5798  0036  0000               	db	0
  5799  0037  0000               	db	0
  5800  0038  0000               	db	0
  5801  0039  0000               	db	0
  5802  003A  0000               	db	0
  5803  003B  0000               	db	0
  5804  003C  0000               	db	0
  5805  003D  0000               	db	0
  5806  003E  0000               	db	0
  5807  003F  0000               	db	0
  5808  0040  0000               	db	0
  5809  0041  0000               	db	0
  5810  0042  0000               	db	0
  5811  0043  0000               	db	0
  5812  0044  0000               	db	0
  5813  0045  0000               	db	0
  5814  0046  0000               	db	0
  5815  0047  0000               	db	0
  5816  0048  0000               	db	0
  5817  0049  0000               	db	0
  5818  004A  0000               	db	0
  5819  004B  0000               	db	0
  5820  004C  0000               	db	0
  5821  004D  0000               	db	0
  5822  004E  0000               	db	0
  5823  004F  0000               	db	0
  5824  0050  0000               	db	0
  5825  0051  0000               	db	0
  5826  0052  0000               	db	0
  5827  0053  0000               	db	0
  5828  0054  0000               	db	0
  5829  0055  0000               	db	0
  5830  0056  0000               	db	0
  5831  0057  0000               	db	0
  5832  0058  0000               	db	0
  5833  0059  0000               	db	0
  5834  005A  0000               	db	0
  5835  005B  0000               	db	0
  5836  005C  0000               	db	0
  5837  005D  0000               	db	0
  5838  005E  0000               	db	0
  5839  005F  0000               	db	0
  5840  0060  0000               	db	0
  5841  0061  0000               	db	0
  5842  0062  0000               	db	0
  5843  0063  0000               	db	0
  5844  0064  0000               	db	0
  5845  0065  0000               	db	0
  5846  0066  0000               	db	0
  5847  0067  0000               	db	0
  5848  0068  0000               	db	0
  5849  0069  0000               	db	0
  5850  006A  0000               	db	0
  5851  006B  0000               	db	0
  5852  006C  0000               	db	0
  5853  006D  0000               	db	0
  5854  006E  0000               	db	0
  5855  006F  0000               	db	0
  5856  0070  0000               	db	0
  5857  0071  0000               	db	0
  5858  0072  0000               	db	0
  5859  0073  0000               	db	0
  5860  0074  0000               	db	0
  5861  0075  0000               	db	0
  5862  0076  0000               	db	0
  5863  0077  0000               	db	0
  5864  0078  0000               	db	0
  5865  0079  0000               	db	0
  5866  007A  0000               	db	0
  5867  007B  0000               	db	0
  5868  007C  0000               	db	0
  5869  007D  0000               	db	0
  5870  007E  0000               	db	0
  5871  007F  0000               	db	0
  5872  0080  0000               	db	0
  5873  0081  0000               	db	0
  5874  0082  0000               	db	0
  5875  0083  0000               	db	0
  5876  0084  0000               	db	0
  5877  0085  0000               	db	0
  5878  0086  0000               	db	0
  5879  0087  0000               	db	0
  5880  0088  0000               	db	0
  5881  0089  0000               	db	0
  5882  008A  0000               	db	0
  5883  008B  0000               	db	0
  5884  008C  0000               	db	0
  5885  008D  0000               	db	0
  5886  008E  0000               	db	0
  5887  008F  0000               	db	0
  5888  0090  0000               	db	0
  5889  0091  0000               	db	0
  5890  0092  0000               	db	0
  5891  0093  0000               	db	0
  5892  0094  0000               	db	0
  5893  0095  0000               	db	0
  5894  0096                     _recovery_data:	
  5895  0096  0000               	db	0
  5896  0097  0000               	db	0
  5897  0098  0000               	db	0
  5898  0099  0000               	db	0
  5899  009A  0000               	db	0
  5900                           
  5901                           	psect	bitbssCOMMON
  5902  03E0                     __pbitbssCOMMON:	
  5903  03E0                     _nreg_init:	
  5904  03E0                     	ds	1
  5905  03E1                     _configuration_mode:	
  5906  03E1                     	ds	1
  5907  03E2                     _half:	
  5908  03E2                     	ds	1
  5909                           
  5910                           	psect	bssCOMMON
  5911  0078                     __pbssCOMMON:	
  5912  0078                     _timer1ReloadVal:	
  5913  0078                     	ds	2
  5914  007A                     _aux:	
  5915  007A                     	ds	1
  5916  007B                     _value:	
  5917  007B                     	ds	1
  5918                           
  5919                           	psect	bssBANK0
  5920  0020                     __pbssBANK0:	
  5921  0020                     _i2c_status:	
  5922  0020                     	ds	29
  5923  003D                     _ring_byte:	
  5924  003D                     	ds	5
  5925  0042                     _task_schedule:	
  5926  0042                     	ds	2
  5927  0044                     _convertedValue:	
  5928  0044                     	ds	2
  5929  0046                     _TMR1_InterruptHandler:	
  5930  0046                     	ds	2
  5931  0048                     _i2c1_driver_i2cISR:	
  5932  0048                     	ds	2
  5933  004A                     _i2c1_driver_busCollisionISR:	
  5934  004A                     	ds	2
  5935  004C                     _last1m_aux:	
  5936  004C                     	ds	1
  5937  004D                     _last5s_aux:	
  5938  004D                     	ds	1
  5939  004E                     _lum:	
  5940  004E                     	ds	1
  5941  004F                     _temp:	
  5942  004F                     	ds	1
  5943  0050                     _nreg_pt:	
  5944  0050                     	ds	1
  5945  0051                     _last1m:	
  5946  0051                     	ds	1
  5947  0052                     _last5s:	
  5948  0052                     	ds	1
  5949  0053                     _seg_aux:	
  5950  0053                     	ds	1
  5951  0054                     _seg:	
  5952  0054                     	ds	1
  5953  0055                     _clkm_aux:	
  5954  0055                     	ds	1
  5955  0056                     _clkm:	
  5956  0056                     	ds	1
  5957  0057                     _clkh_aux:	
  5958  0057                     	ds	1
  5959  0058                     _clkh:	
  5960  0058                     	ds	1
  5961                           
  5962                           	psect	clrtext
  5963  05BB                     clear_ram0:	
  5964                           ;	Called with FSR0 containing the base address, and
  5965                           ;	WREG with the size to clear
  5966                           
  5967  05BB  0064               	clrwdt	;clear the watchdog before getting into this loop
  5968  05BC                     clrloop0:	
  5969  05BC  0180               	clrf	0	;clear RAM location pointed to by FSR
  5970  05BD  3101               	addfsr 0,1
  5971  05BE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5972  05BF  2DBC               	goto	clrloop0	;have we reached the end yet?
  5973  05C0  3400               	retlw	0	;all done for this memory range, return
  5974                           
  5975                           	psect	cstackCOMMON
  5976  0070                     __pcstackCOMMON:	
  5977  0070                     ?_i2c1_driver_open:	
  5978  0070                     ?_i2c1_driver_isNACK:	
  5979                           ; 1 bit 
  5980                           
  5981  0070                     ?_setCallBack:	
  5982                           ; 1 bit 
  5983                           
  5984  0070                     ?_mssp1_clearIRQ:	
  5985                           ; 1 bytes @ 0x0
  5986                           
  5987  0070                     ??_mssp1_clearIRQ:	
  5988                           ; 1 bytes @ 0x0
  5989                           
  5990  0070                     ?_i2c_busCollisionISR:	
  5991                           ; 1 bytes @ 0x0
  5992                           
  5993  0070                     ??_i2c_busCollisionISR:	
  5994                           ; 1 bytes @ 0x0
  5995                           
  5996  0070                     ?_i2c_ISR:	
  5997                           ; 1 bytes @ 0x0
  5998                           
  5999  0070                     ?_i2c1_driver_resetBus:	
  6000                           ; 1 bytes @ 0x0
  6001                           
  6002  0070                     ??_i2c1_driver_resetBus:	
  6003                           ; 1 bytes @ 0x0
  6004                           
  6005  0070                     ?_i2c1_driver_restart:	
  6006                           ; 1 bytes @ 0x0
  6007                           
  6008  0070                     ??_i2c1_driver_restart:	
  6009                           ; 1 bytes @ 0x0
  6010                           
  6011  0070                     ?_i2c1_driver_stop:	
  6012                           ; 1 bytes @ 0x0
  6013                           
  6014  0070                     ??_i2c1_driver_stop:	
  6015                           ; 1 bytes @ 0x0
  6016                           
  6017  0070                     ?_i2c1_driver_TXData:	
  6018                           ; 1 bytes @ 0x0
  6019                           
  6020  0070                     ??_i2c1_driver_TXData:	
  6021                           ; 1 bytes @ 0x0
  6022                           
  6023  0070                     ?_i2c1_driver_startRX:	
  6024                           ; 1 bytes @ 0x0
  6025                           
  6026  0070                     ??_i2c1_driver_startRX:	
  6027                           ; 1 bytes @ 0x0
  6028                           
  6029  0070                     ?_i2c1_driver_sendACK:	
  6030                           ; 1 bytes @ 0x0
  6031                           
  6032  0070                     ??_i2c1_driver_sendACK:	
  6033                           ; 1 bytes @ 0x0
  6034                           
  6035  0070                     ?_i2c1_driver_sendNACK:	
  6036                           ; 1 bytes @ 0x0
  6037                           
  6038  0070                     ??_i2c1_driver_sendNACK:	
  6039                           ; 1 bytes @ 0x0
  6040                           
  6041  0070                     ??_i2c1_driver_isNACK:	
  6042                           ; 1 bytes @ 0x0
  6043                           
  6044  0070                     ?_i2c1_driver_getRXData:	
  6045                           ; 1 bytes @ 0x0
  6046                           
  6047  0070                     ??_i2c1_driver_getRXData:	
  6048                           ; 1 bytes @ 0x0
  6049                           
  6050  0070                     ?_mssp1_setIRQ:	
  6051                           ; 1 bytes @ 0x0
  6052                           
  6053  0070                     ??_mssp1_setIRQ:	
  6054                           ; 1 bytes @ 0x0
  6055                           
  6056  0070                     ?_i2c1_driver_clearBusCollision:	
  6057                           ; 1 bytes @ 0x0
  6058                           
  6059  0070                     ??_i2c1_driver_clearBusCollision:	
  6060                           ; 1 bytes @ 0x0
  6061                           
  6062  0070                     ?_TMR1_DefaultInterruptHandler:	
  6063                           ; 1 bytes @ 0x0
  6064                           
  6065  0070                     ??_TMR1_DefaultInterruptHandler:	
  6066                           ; 1 bytes @ 0x0
  6067                           
  6068  0070                     ?_PMD_Initialize:	
  6069                           ; 1 bytes @ 0x0
  6070                           
  6071  0070                     ?_PIN_MANAGER_Initialize:	
  6072                           ; 1 bytes @ 0x0
  6073                           
  6074  0070                     ?_OSCILLATOR_Initialize:	
  6075                           ; 1 bytes @ 0x0
  6076                           
  6077  0070                     ?_update_clock:	
  6078                           ; 1 bytes @ 0x0
  6079                           
  6080  0070                     ??_update_clock:	
  6081                           ; 1 bytes @ 0x0
  6082                           
  6083  0070                     ?_cksum:	
  6084                           ; 1 bytes @ 0x0
  6085                           
  6086  0070                     ?_cksum_w:	
  6087                           ; 1 bytes @ 0x0
  6088                           
  6089  0070                     ?_push_ring:	
  6090                           ; 1 bytes @ 0x0
  6091                           
  6092  0070                     ?_i2c_setBuffer:	
  6093                           ; 1 bytes @ 0x0
  6094                           
  6095  0070                     ?_do_I2C_RESET:	
  6096                           ; 1 bytes @ 0x0
  6097                           
  6098  0070                     ??_do_I2C_RESET:	
  6099                           ; 1 bytes @ 0x0
  6100                           
  6101  0070                     ?_do_I2C_IDLE:	
  6102                           ; 1 bytes @ 0x0
  6103                           
  6104  0070                     ??_do_I2C_IDLE:	
  6105                           ; 1 bytes @ 0x0
  6106                           
  6107  0070                     ?_do_I2C_SEND_RESTART_READ:	
  6108                           ; 1 bytes @ 0x0
  6109                           
  6110  0070                     ??_do_I2C_SEND_RESTART_READ:	
  6111                           ; 1 bytes @ 0x0
  6112                           
  6113  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  6114                           ; 1 bytes @ 0x0
  6115                           
  6116  0070                     ??_do_I2C_SEND_RESTART_WRITE:	
  6117                           ; 1 bytes @ 0x0
  6118                           
  6119  0070                     ?_do_I2C_SEND_RESTART:	
  6120                           ; 1 bytes @ 0x0
  6121                           
  6122  0070                     ??_do_I2C_SEND_RESTART:	
  6123                           ; 1 bytes @ 0x0
  6124                           
  6125  0070                     ?_do_I2C_SEND_STOP:	
  6126                           ; 1 bytes @ 0x0
  6127                           
  6128  0070                     ??_do_I2C_SEND_STOP:	
  6129                           ; 1 bytes @ 0x0
  6130                           
  6131  0070                     ?_do_I2C_SEND_ADR_READ:	
  6132                           ; 1 bytes @ 0x0
  6133                           
  6134  0070                     ??_do_I2C_SEND_ADR_READ:	
  6135                           ; 1 bytes @ 0x0
  6136                           
  6137  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  6138                           ; 1 bytes @ 0x0
  6139                           
  6140  0070                     ?_do_I2C_RCEN:	
  6141                           ; 1 bytes @ 0x0
  6142                           
  6143  0070                     ??_do_I2C_RCEN:	
  6144                           ; 1 bytes @ 0x0
  6145                           
  6146  0070                     ?_do_I2C_DO_ACK:	
  6147                           ; 1 bytes @ 0x0
  6148                           
  6149  0070                     ??_do_I2C_DO_ACK:	
  6150                           ; 1 bytes @ 0x0
  6151                           
  6152  0070                     ?_do_I2C_DO_NACK_STOP:	
  6153                           ; 1 bytes @ 0x0
  6154                           
  6155  0070                     ??_do_I2C_DO_NACK_STOP:	
  6156                           ; 1 bytes @ 0x0
  6157                           
  6158  0070                     ?_do_I2C_DO_NACK_RESTART:	
  6159                           ; 1 bytes @ 0x0
  6160                           
  6161  0070                     ??_do_I2C_DO_NACK_RESTART:	
  6162                           ; 1 bytes @ 0x0
  6163                           
  6164  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  6165                           ; 1 bytes @ 0x0
  6166                           
  6167  0070                     ??_do_I2C_DO_ADDRESS_NACK:	
  6168                           ; 1 bytes @ 0x0
  6169                           
  6170  0070                     ?_do_I2C_TX:	
  6171                           ; 1 bytes @ 0x0
  6172                           
  6173  0070                     ?_do_I2C_RX:	
  6174                           ; 1 bytes @ 0x0
  6175                           
  6176  0070                     ??_do_I2C_RX:	
  6177                           ; 1 bytes @ 0x0
  6178                           
  6179  0070                     ?_do_I2C_TX_EMPTY:	
  6180                           ; 1 bytes @ 0x0
  6181                           
  6182  0070                     ??_do_I2C_TX_EMPTY:	
  6183                           ; 1 bytes @ 0x0
  6184                           
  6185  0070                     ?_TMR1_Initialize:	
  6186                           ; 1 bytes @ 0x0
  6187                           
  6188  0070                     ?_TMR1_WriteTimer:	
  6189                           ; 1 bytes @ 0x0
  6190                           
  6191  0070                     ?_TMR1_ISR:	
  6192                           ; 1 bytes @ 0x0
  6193                           
  6194  0070                     ?_INTERRUPT_InterruptManager:	
  6195                           ; 1 bytes @ 0x0
  6196                           
  6197  0070                     ?_SYSTEM_Initialize:	
  6198                           ; 1 bytes @ 0x0
  6199                           
  6200  0070                     ?_h_clock:	
  6201                           ; 1 bytes @ 0x0
  6202                           
  6203  0070                     ?_main:	
  6204                           ; 1 bytes @ 0x0
  6205                           
  6206  0070                     ?___eetoc:	
  6207                           ; 1 bytes @ 0x0
  6208                           
  6209  0070                     i2c1_driver_TXData@d:	
  6210                           ; 1 bytes @ 0x0
  6211                           
  6212  0070                     i2c_setBuffer@bufferSize:	
  6213                           ; 1 bytes @ 0x0
  6214                           
  6215  0070                     setCallBack@cb:	
  6216                           ; 2 bytes @ 0x0
  6217                           
  6218  0070                     TMR1_WriteTimer@timerVal:	
  6219                           ; 2 bytes @ 0x0
  6220                           
  6221                           
  6222                           ; 2 bytes @ 0x0
  6223  0070                     	ds	1
  6224  0071                     ??_do_I2C_SEND_ADR_WRITE:	
  6225  0071                     ??_do_I2C_TX:	
  6226                           ; 1 bytes @ 0x1
  6227                           
  6228  0071                     ??_h_clock:	
  6229                           ; 1 bytes @ 0x1
  6230                           
  6231                           
  6232                           ; 1 bytes @ 0x1
  6233  0071                     	ds	1
  6234  0072                     ??_i2c_setBuffer:	
  6235  0072                     ??_TMR1_WriteTimer:	
  6236                           ; 1 bytes @ 0x2
  6237                           
  6238  0072                     ??_TMR1_ISR:	
  6239                           ; 1 bytes @ 0x2
  6240                           
  6241  0072                     setCallBack@p:	
  6242                           ; 1 bytes @ 0x2
  6243                           
  6244                           
  6245                           ; 1 bytes @ 0x2
  6246  0072                     	ds	1
  6247  0073                     ??_setCallBack:	
  6248  0073                     i2c_setBuffer@buffer:	
  6249                           ; 1 bytes @ 0x3
  6250                           
  6251                           
  6252                           ; 1 bytes @ 0x3
  6253  0073                     	ds	1
  6254  0074                     ??_i2c_ISR:	
  6255  0074                     setCallBack@idx:	
  6256                           ; 1 bytes @ 0x4
  6257                           
  6258                           
  6259                           ; 1 bytes @ 0x4
  6260  0074                     	ds	1
  6261  0075                     ?_i2c_setDataCompleteCallback:	
  6262  0075                     i2c_setDataCompleteCallback@cb:	
  6263                           ; 1 bytes @ 0x5
  6264                           
  6265                           
  6266                           ; 2 bytes @ 0x5
  6267  0075                     	ds	2
  6268  0077                     ??_INTERRUPT_InterruptManager:	
  6269  0077                     i2c_setDataCompleteCallback@p:	
  6270                           ; 1 bytes @ 0x7
  6271                           
  6272                           
  6273                           ; 1 bytes @ 0x7
  6274  0077                     	ds	1
  6275  0078                     ??_returnStop:	
  6276  0078                     ??_returnReset:	
  6277                           ; 1 bytes @ 0x8
  6278                           
  6279  0078                     ??_i2c_restartWrite:	
  6280                           ; 1 bytes @ 0x8
  6281                           
  6282  0078                     ??_wr1RegCompleteHandler:	
  6283                           ; 1 bytes @ 0x8
  6284                           
  6285  0078                     ??_rd1RegCompleteHandler:	
  6286                           ; 1 bytes @ 0x8
  6287                           
  6288  0078                     ??_rd2RegCompleteHandler:	
  6289                           ; 1 bytes @ 0x8
  6290                           
  6291  0078                     ??_wr2RegCompleteHandler:	
  6292                           ; 1 bytes @ 0x8
  6293                           
  6294  0078                     ??_rdBlkRegCompleteHandler:	
  6295                           ; 1 bytes @ 0x8
  6296                           
  6297                           
  6298                           	psect	cstackBANK0
  6299  0059                     __pcstackBANK0:	
  6300                           ; 1 bytes @ 0x8
  6301                           
  6302  0059                     ??_i2c1_driver_open:	
  6303  0059                     ?_TMR1_SetInterruptHandler:	
  6304                           ; 1 bytes @ 0x0
  6305                           
  6306  0059                     ??_PMD_Initialize:	
  6307                           ; 1 bytes @ 0x0
  6308                           
  6309  0059                     ??_PIN_MANAGER_Initialize:	
  6310                           ; 1 bytes @ 0x0
  6311                           
  6312  0059                     ??_OSCILLATOR_Initialize:	
  6313                           ; 1 bytes @ 0x0
  6314                           
  6315  0059                     ??_i2c_setDataCompleteCallback:	
  6316                           ; 1 bytes @ 0x0
  6317                           
  6318  0059                     ?_DATAEE_WriteByte:	
  6319                           ; 1 bytes @ 0x0
  6320                           
  6321  0059                     ?___eecpymem:	
  6322                           ; 1 bytes @ 0x0
  6323                           
  6324  0059                     ?___memcpyee:	
  6325                           ; 1 bytes @ 0x0
  6326                           
  6327  0059                     ?___bmul:	
  6328                           ; 1 bytes @ 0x0
  6329                           
  6330  0059                     ___eecpymem@from:	
  6331                           ; 1 bytes @ 0x0
  6332                           
  6333  0059                     ___memcpyee@from:	
  6334                           ; 1 bytes @ 0x0
  6335                           
  6336  0059                     ___bmul@multiplicand:	
  6337                           ; 1 bytes @ 0x0
  6338                           
  6339  0059                     TMR1_SetInterruptHandler@InterruptHandler:	
  6340                           ; 1 bytes @ 0x0
  6341                           
  6342  0059                     DATAEE_WriteByte@bAdd:	
  6343                           ; 2 bytes @ 0x0
  6344                           
  6345                           
  6346                           ; 2 bytes @ 0x0
  6347  0059                     	ds	1
  6348  005A                     ?_returnStop:	
  6349  005A                     ?_returnReset:	
  6350                           ; 1 bytes @ 0x1
  6351                           
  6352  005A                     ?_i2c_restartWrite:	
  6353                           ; 1 bytes @ 0x1
  6354                           
  6355  005A                     ?_wr1RegCompleteHandler:	
  6356                           ; 1 bytes @ 0x1
  6357                           
  6358  005A                     ?_rd1RegCompleteHandler:	
  6359                           ; 1 bytes @ 0x1
  6360                           
  6361  005A                     ?_rd2RegCompleteHandler:	
  6362                           ; 1 bytes @ 0x1
  6363                           
  6364  005A                     ?_wr2RegCompleteHandler:	
  6365                           ; 1 bytes @ 0x1
  6366                           
  6367  005A                     ?_rdBlkRegCompleteHandler:	
  6368                           ; 1 bytes @ 0x1
  6369                           
  6370  005A                     ??___bmul:	
  6371                           ; 1 bytes @ 0x1
  6372                           
  6373  005A                     returnStop@p:	
  6374                           ; 1 bytes @ 0x1
  6375                           
  6376  005A                     returnReset@p:	
  6377                           ; 1 bytes @ 0x1
  6378                           
  6379  005A                     wr1RegCompleteHandler@p:	
  6380                           ; 1 bytes @ 0x1
  6381                           
  6382  005A                     rd1RegCompleteHandler@p:	
  6383                           ; 1 bytes @ 0x1
  6384                           
  6385  005A                     rd2RegCompleteHandler@p:	
  6386                           ; 1 bytes @ 0x1
  6387                           
  6388  005A                     wr2RegCompleteHandler@p:	
  6389                           ; 1 bytes @ 0x1
  6390                           
  6391  005A                     rdBlkRegCompleteHandler@p:	
  6392                           ; 1 bytes @ 0x1
  6393                           
  6394  005A                     i2c_restartWrite@p:	
  6395                           ; 1 bytes @ 0x1
  6396                           
  6397  005A                     ___eecpymem@size:	
  6398                           ; 1 bytes @ 0x1
  6399                           
  6400  005A                     ___memcpyee@size:	
  6401                           ; 1 bytes @ 0x1
  6402                           
  6403                           
  6404                           ; 1 bytes @ 0x1
  6405  005A                     	ds	1
  6406  005B                     ??_TMR1_SetInterruptHandler:	
  6407  005B                     ??_TMR1_Initialize:	
  6408                           ; 1 bytes @ 0x2
  6409                           
  6410  005B                     ??_SYSTEM_Initialize:	
  6411                           ; 1 bytes @ 0x2
  6412                           
  6413  005B                     ??___eecpymem:	
  6414                           ; 1 bytes @ 0x2
  6415                           
  6416  005B                     ??___memcpyee:	
  6417                           ; 1 bytes @ 0x2
  6418                           
  6419  005B                     DATAEE_WriteByte@bData:	
  6420                           ; 1 bytes @ 0x2
  6421                           
  6422  005B                     ___bmul@product:	
  6423                           ; 1 bytes @ 0x2
  6424                           
  6425                           
  6426                           ; 1 bytes @ 0x2
  6427  005B                     	ds	1
  6428  005C                     ??_DATAEE_WriteByte:	
  6429  005C                     DATAEE_WriteByte@GIEBitValue:	
  6430                           ; 1 bytes @ 0x3
  6431                           
  6432  005C                     ___eecpymem@cp:	
  6433                           ; 1 bytes @ 0x3
  6434                           
  6435  005C                     ___memcpyee@ptr:	
  6436                           ; 1 bytes @ 0x3
  6437                           
  6438  005C                     ___bmul@multiplier:	
  6439                           ; 1 bytes @ 0x3
  6440                           
  6441                           
  6442                           ; 1 bytes @ 0x3
  6443  005C                     	ds	1
  6444  005D                     ??_push_ring:	
  6445  005D                     ___eecpymem@to:	
  6446                           ; 1 bytes @ 0x4
  6447                           
  6448  005D                     ___memcpyee@to:	
  6449                           ; 1 bytes @ 0x4
  6450                           
  6451                           
  6452                           ; 1 bytes @ 0x4
  6453  005D                     	ds	1
  6454  005E                     ??___eetoc:	
  6455  005E                     push_ring@address:	
  6456                           ; 1 bytes @ 0x5
  6457                           
  6458                           
  6459                           ; 1 bytes @ 0x5
  6460  005E                     	ds	1
  6461  005F                     push_ring@i:	
  6462  005F                     ___eetoc@addr:	
  6463                           ; 1 bytes @ 0x6
  6464                           
  6465                           
  6466                           ; 1 bytes @ 0x6
  6467  005F                     	ds	1
  6468  0060                     ___eetoc@data:	
  6469                           
  6470                           ; 1 bytes @ 0x7
  6471  0060                     	ds	1
  6472  0061                     ??_cksum:	
  6473  0061                     ?_read_ring:	
  6474                           ; 1 bytes @ 0x8
  6475                           
  6476  0061                     read_ring@subindex:	
  6477                           ; 1 bytes @ 0x8
  6478                           
  6479                           
  6480                           ; 1 bytes @ 0x8
  6481  0061                     	ds	1
  6482  0062                     ??_read_ring:	
  6483  0062                     cksum@res:	
  6484                           ; 1 bytes @ 0x9
  6485                           
  6486                           
  6487                           ; 1 bytes @ 0x9
  6488  0062                     	ds	1
  6489  0063                     cksum@i:	
  6490                           
  6491                           ; 1 bytes @ 0xA
  6492  0063                     	ds	1
  6493  0064                     ?___ctoee:	
  6494  0064                     read_ring@i:	
  6495                           ; 1 bytes @ 0xB
  6496                           
  6497  0064                     ___ctoee@data:	
  6498                           ; 1 bytes @ 0xB
  6499                           
  6500                           
  6501                           ; 1 bytes @ 0xB
  6502  0064                     	ds	1
  6503  0065                     ??___ctoee:	
  6504  0065                     read_ring@index:	
  6505                           ; 1 bytes @ 0xC
  6506                           
  6507                           
  6508                           ; 1 bytes @ 0xC
  6509  0065                     	ds	1
  6510  0066                     read_ring@absindex:	
  6511  0066                     ___ctoee@addr:	
  6512                           ; 1 bytes @ 0xD
  6513                           
  6514                           
  6515                           ; 1 bytes @ 0xD
  6516  0066                     	ds	1
  6517  0067                     ??_cksum_w:	
  6518                           
  6519                           ; 1 bytes @ 0xE
  6520  0067                     	ds	1
  6521  0068                     ??_main:	
  6522                           
  6523                           ; 1 bytes @ 0xF
  6524  0068                     	ds	1
  6525                           
  6526                           	psect	maintext
  6527  004A                     __pmaintext:	
  6528 ;;
  6529 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  6530 ;;
  6531 ;; *************** function _main *****************
  6532 ;; Defined at:
  6533 ;;		line 61 in file "main.c"
  6534 ;; Parameters:    Size  Location     Type
  6535 ;;		None
  6536 ;; Auto vars:     Size  Location     Type
  6537 ;;		None
  6538 ;; Return value:  Size  Location     Type
  6539 ;;                  1    wreg      void 
  6540 ;; Registers used:
  6541 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6542 ;; Tracked objects:
  6543 ;;		On entry : B1F/0
  6544 ;;		On exit  : 0/0
  6545 ;;		Unchanged: 0/0
  6546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6549 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6550 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6551 ;;Total ram usage:        1 bytes
  6552 ;; Hardware stack levels required when called:   10
  6553 ;; This function calls:
  6554 ;;		_DATAEE_WriteByte
  6555 ;;		_SYSTEM_Initialize
  6556 ;;		_TMR1_SetInterruptHandler
  6557 ;;		___ctoee
  6558 ;;		___eetoc
  6559 ;;		_cksum
  6560 ;;		_cksum_w
  6561 ;;		_i2c1_driver_open
  6562 ;;		_push_ring
  6563 ;;		_read_ring
  6564 ;; This function is called by:
  6565 ;;		Startup code after reset
  6566 ;; This function uses a non-reentrant model
  6567 ;;
  6568                           
  6569                           
  6570                           ;psect for function _main
  6571  004A                     _main:	
  6572  004A                     l4417:	
  6573                           ;incstack = 0
  6574                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6575                           
  6576                           
  6577                           ;main.c: 63:     clkh = 0;
  6578  004A  0020               	movlb	0	; select bank0
  6579  004B  01D8               	clrf	_clkh	;volatile
  6580                           
  6581                           ;main.c: 64:     clkm = 0;
  6582  004C  01D6               	clrf	_clkm	;volatile
  6583                           
  6584                           ;main.c: 65:     seg = 0;
  6585  004D  01D4               	clrf	_seg	;volatile
  6586                           
  6587                           ;main.c: 66:     last5s = 0;
  6588  004E  01D2               	clrf	_last5s	;volatile
  6589                           
  6590                           ;main.c: 67:     last1m = 0;
  6591  004F  01D1               	clrf	_last1m	;volatile
  6592  0050                     l4419:	
  6593                           
  6594                           ;main.c: 68:     configuration_mode = 0;
  6595  0050  10FC               	bcf	_configuration_mode/(0+8),_configuration_mode& (0+7)
  6596  0051                     l4421:	
  6597                           
  6598                           ;main.c: 69:     nreg = 5*30;
  6599  0051  3096               	movlw	150
  6600  0052  00E8               	movwf	??_main
  6601  0053  0868               	movf	??_main,w
  6602  0054  00EC               	movwf	_nreg
  6603  0055                     l4423:	
  6604                           
  6605                           ;main.c: 70:     nreg_pt = 0;
  6606  0055  01D0               	clrf	_nreg_pt
  6607  0056                     l4425:	
  6608                           
  6609                           ;main.c: 71:     nreg_init = 0;
  6610  0056  107C               	bcf	_nreg_init/(0+8),_nreg_init& (0+7)
  6611                           
  6612                           ;main.c: 72:     pmon = 5;
  6613  0057  3005               	movlw	5
  6614  0058  00E8               	movwf	??_main
  6615  0059  0868               	movf	??_main,w
  6616  005A  00EB               	movwf	_pmon
  6617  005B                     l4427:	
  6618                           
  6619                           ;main.c: 73:     running = 1;
  6620  005B  147D               	bsf	_running/(0+8),_running& (0+7)
  6621  005C                     l4429:	
  6622                           
  6623                           ;main.c: 74:     temp = 0;
  6624  005C  01CF               	clrf	_temp
  6625  005D                     l4431:	
  6626                           
  6627                           ;main.c: 75:     lum = 0;
  6628  005D  01CE               	clrf	_lum
  6629  005E                     l4433:	
  6630                           
  6631                           ;main.c: 76:     convertedValue = 0;
  6632  005E  01C4               	clrf	_convertedValue
  6633  005F  01C5               	clrf	_convertedValue+1
  6634  0060                     l4435:	
  6635                           
  6636                           ;main.c: 77:     duty_cycle = 25;
  6637  0060  3019               	movlw	25
  6638  0061  00E9               	movwf	_duty_cycle
  6639  0062  3000               	movlw	0
  6640  0063  00EA               	movwf	_duty_cycle+1
  6641                           
  6642                           ;main.c: 78:     task_schedule = 0;
  6643  0064  01C2               	clrf	_task_schedule
  6644  0065  01C3               	clrf	_task_schedule+1
  6645  0066                     l4437:	
  6646                           
  6647                           ;main.c: 81:     if(recovery_data[0] == 0xAB) {
  6648  0066  3096               	movlw	(low _recovery_data)& (0+255)
  6649  0067  3185  2534  3180   	fcall	___eetoc
  6650  006A  3AAB               	xorlw	171
  6651  006B  1D03               	skipz
  6652  006C  286E               	goto	u2211
  6653  006D  286F               	goto	u2210
  6654  006E                     u2211:	
  6655  006E  2896               	goto	l890
  6656  006F                     u2210:	
  6657  006F                     l4439:	
  6658                           
  6659                           ;main.c: 82:         if(recovery_data[5 - 1] == cksum()) {
  6660  006F  309A               	movlw	(low (_recovery_data+4))& (0+255)
  6661  0070  3185  2534  3180   	fcall	___eetoc
  6662  0073  0020               	movlb	0	; select bank0
  6663  0074  00E8               	movwf	??_main
  6664  0075  3184  2470  3180   	fcall	_cksum
  6665  0078  0020               	movlb	0	; select bank0
  6666  0079  0668               	xorwf	??_main,w
  6667  007A  1D03               	skipz
  6668  007B  287D               	goto	u2221
  6669  007C  287E               	goto	u2220
  6670  007D                     u2221:	
  6671  007D  2896               	goto	l890
  6672  007E                     u2220:	
  6673  007E                     l4441:	
  6674                           
  6675                           ;main.c: 83:             clkh = recovery_data[1];
  6676  007E  3097               	movlw	(low (_recovery_data+1))& (0+255)
  6677  007F  3185  2534  3180   	fcall	___eetoc
  6678  0082  0020               	movlb	0	; select bank0
  6679  0083  00E8               	movwf	??_main
  6680  0084  0868               	movf	??_main,w
  6681  0085  00D8               	movwf	_clkh	;volatile
  6682                           
  6683                           ;main.c: 84:             clkm = recovery_data[2];
  6684  0086  3098               	movlw	(low (_recovery_data+2))& (0+255)
  6685  0087  3185  2534  3180   	fcall	___eetoc
  6686  008A  0020               	movlb	0	; select bank0
  6687  008B  00E8               	movwf	??_main
  6688  008C  0868               	movf	??_main,w
  6689  008D  00D6               	movwf	_clkm	;volatile
  6690                           
  6691                           ;main.c: 85:             nreg_pt = recovery_data[3];
  6692  008E  3099               	movlw	(low (_recovery_data+3))& (0+255)
  6693  008F  3185  2534  3180   	fcall	___eetoc
  6694  0092  0020               	movlb	0	; select bank0
  6695  0093  00E8               	movwf	??_main
  6696  0094  0868               	movf	??_main,w
  6697  0095  00D0               	movwf	_nreg_pt
  6698  0096                     l890:	
  6699                           ;main.c: 87:     }
  6700                           
  6701                           
  6702                           ;main.c: 90:     recovery_data[0] = 0xAB;
  6703  0096  30AB               	movlw	171
  6704  0097  0020               	movlb	0	; select bank0
  6705  0098  00E8               	movwf	??_main
  6706  0099  0868               	movf	??_main,w
  6707  009A  00E4               	movwf	___ctoee@data
  6708  009B  3096               	movlw	(low _recovery_data)& (0+255)
  6709  009C  3185  2551  3180   	fcall	___ctoee
  6710                           
  6711                           ;main.c: 91:     cksum_w();
  6712  009F  3185  2577  3180   	fcall	_cksum_w
  6713  00A2                     l4443:	
  6714                           
  6715                           ;main.c: 93:     SYSTEM_Initialize();
  6716  00A2  3185  255E  3180   	fcall	_SYSTEM_Initialize
  6717  00A5                     l4445:	
  6718                           
  6719                           ;main.c: 94:     (INTCONbits.GIE = 1);
  6720  00A5  178B               	bsf	11,7	;volatile
  6721  00A6                     l4447:	
  6722                           
  6723                           ;main.c: 95:     (INTCONbits.PEIE = 1);
  6724  00A6  170B               	bsf	11,6	;volatile
  6725  00A7                     l4449:	
  6726                           
  6727                           ;main.c: 97:     TMR1_SetInterruptHandler(h_clock);
  6728  00A7  3088               	movlw	low _h_clock
  6729  00A8  0020               	movlb	0	; select bank0
  6730  00A9  00D9               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  6731  00AA  3004               	movlw	high _h_clock
  6732  00AB  00DA               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  6733  00AC  3185  25C1  3180   	fcall	_TMR1_SetInterruptHandler
  6734  00AF                     l4451:	
  6735                           
  6736                           ;main.c: 99:     i2c1_driver_open();
  6737  00AF  3185  256B  3180   	fcall	_i2c1_driver_open
  6738  00B2                     l4453:	
  6739                           
  6740                           ;main.c: 100:     TRISCbits.TRISC3 = 1;
  6741  00B2  0020               	movlb	0	; select bank0
  6742  00B3  1593               	bsf	19,3	;volatile
  6743  00B4                     l4455:	
  6744                           
  6745                           ;main.c: 101:     TRISCbits.TRISC4 = 1;
  6746  00B4  1613               	bsf	19,4	;volatile
  6747  00B5                     l4457:	
  6748                           
  6749                           ;main.c: 102:     WPUC3 = 1;
  6750  00B5  003E               	movlb	30	; select bank30
  6751  00B6  15CF               	bsf	79,3	;volatile
  6752  00B7                     l4459:	
  6753                           
  6754                           ;main.c: 103:     WPUC4 = 1;
  6755  00B7  164F               	bsf	79,4	;volatile
  6756                           
  6757                           ;main.c: 105:     while (running)
  6758  00B8  2967               	goto	l4511
  6759  00B9                     l893:	
  6760                           
  6761                           ;main.c: 106:     {;main.c: 107:         (INTCONbits.GIE = 0);
  6762  00B9  138B               	bcf	11,7	;volatile
  6763  00BA                     l4461:	
  6764                           
  6765                           ;main.c: 108:         clkh_aux = clkh;
  6766  00BA  0020               	movlb	0	; select bank0
  6767  00BB  0858               	movf	_clkh,w	;volatile
  6768  00BC  00E8               	movwf	??_main
  6769  00BD  0868               	movf	??_main,w
  6770  00BE  00D7               	movwf	_clkh_aux	;volatile
  6771                           
  6772                           ;main.c: 109:         clkm_aux = clkm;
  6773  00BF  0856               	movf	_clkm,w	;volatile
  6774  00C0  00E8               	movwf	??_main
  6775  00C1  0868               	movf	??_main,w
  6776  00C2  00D5               	movwf	_clkm_aux	;volatile
  6777                           
  6778                           ;main.c: 110:         seg_aux = seg;
  6779  00C3  0854               	movf	_seg,w	;volatile
  6780  00C4  00E8               	movwf	??_main
  6781  00C5  0868               	movf	??_main,w
  6782  00C6  00D3               	movwf	_seg_aux	;volatile
  6783                           
  6784                           ;main.c: 111:         last5s_aux = last5s;
  6785  00C7  0852               	movf	_last5s,w	;volatile
  6786  00C8  00E8               	movwf	??_main
  6787  00C9  0868               	movf	??_main,w
  6788  00CA  00CD               	movwf	_last5s_aux
  6789                           
  6790                           ;main.c: 112:         last1m_aux = last1m;
  6791  00CB  0851               	movf	_last1m,w	;volatile
  6792  00CC  00E8               	movwf	??_main
  6793  00CD  0868               	movf	??_main,w
  6794  00CE  00CC               	movwf	_last1m_aux
  6795  00CF                     l4463:	
  6796                           
  6797                           ;main.c: 113:         (INTCONbits.GIE = 1);
  6798  00CF  178B               	bsf	11,7	;volatile
  6799  00D0                     l4467:	
  6800                           
  6801                           ;main.c: 119:         if(pmon) {
  6802  00D0  086B               	movf	_pmon,w
  6803  00D1  1903               	btfsc	3,2
  6804  00D2  28D4               	goto	u2231
  6805  00D3  28D5               	goto	u2230
  6806  00D4                     u2231:	
  6807  00D4  294A               	goto	l4501
  6808  00D5                     u2230:	
  6809  00D5                     l4469:	
  6810                           
  6811                           ;main.c: 120:             if(last5s_aux >= 5) {
  6812  00D5  3005               	movlw	5
  6813  00D6  024D               	subwf	_last5s_aux,w
  6814  00D7  1C03               	skipc
  6815  00D8  28DA               	goto	u2241
  6816  00D9  28DB               	goto	u2240
  6817  00DA                     u2241:	
  6818  00DA  294A               	goto	l4501
  6819  00DB                     u2240:	
  6820  00DB                     l4471:	
  6821                           
  6822                           ;main.c: 123:                 __nop();
  6823  00DB  0000               	nop
  6824  00DC                     l4473:	
  6825                           
  6826                           ;main.c: 125:                 temp++;
  6827  00DC  3001               	movlw	1
  6828  00DD  0020               	movlb	0	; select bank0
  6829  00DE  00E8               	movwf	??_main
  6830  00DF  0868               	movf	??_main,w
  6831  00E0  07CF               	addwf	_temp,f
  6832  00E1                     l4475:	
  6833                           
  6834                           ;main.c: 126:                 __nop();
  6835  00E1  0000               	nop
  6836  00E2                     l4477:	
  6837                           
  6838                           ;main.c: 129:                    DATAEE_WriteByte(0xF000, 0xAA);
  6839  00E2  3000               	movlw	0
  6840  00E3  0020               	movlb	0	; select bank0
  6841  00E4  00D9               	movwf	DATAEE_WriteByte@bAdd
  6842  00E5  30F0               	movlw	240
  6843  00E6  00DA               	movwf	DATAEE_WriteByte@bAdd+1
  6844  00E7  30AA               	movlw	170
  6845  00E8  00E8               	movwf	??_main
  6846  00E9  0868               	movf	??_main,w
  6847  00EA  00DB               	movwf	DATAEE_WriteByte@bData
  6848  00EB  3183  23D3  3180   	fcall	_DATAEE_WriteByte
  6849  00EE                     l4479:	
  6850                           
  6851                           ;main.c: 130:                    DATAEE_WriteByte(0xF001, 0xAA);
  6852  00EE  3001               	movlw	1
  6853  00EF  0020               	movlb	0	; select bank0
  6854  00F0  00D9               	movwf	DATAEE_WriteByte@bAdd
  6855  00F1  30F0               	movlw	240
  6856  00F2  00DA               	movwf	DATAEE_WriteByte@bAdd+1
  6857  00F3  30AA               	movlw	170
  6858  00F4  00E8               	movwf	??_main
  6859  00F5  0868               	movf	??_main,w
  6860  00F6  00DB               	movwf	DATAEE_WriteByte@bData
  6861  00F7  3183  23D3  3180   	fcall	_DATAEE_WriteByte
  6862  00FA                     l4481:	
  6863                           
  6864                           ;main.c: 133:                 if (temp != read_ring(0, 3) || lum != read_ring(0, 4)) {
  6865  00FA  3003               	movlw	3
  6866  00FB  0020               	movlb	0	; select bank0
  6867  00FC  00E8               	movwf	??_main
  6868  00FD  0868               	movf	??_main,w
  6869  00FE  00E1               	movwf	read_ring@subindex
  6870  00FF  3000               	movlw	0
  6871  0100  3182  229D  3180   	fcall	_read_ring
  6872  0103  0020               	movlb	0	; select bank0
  6873  0104  064F               	xorwf	_temp,w
  6874  0105  1D03               	skipz
  6875  0106  2908               	goto	u2251
  6876  0107  2909               	goto	u2250
  6877  0108                     u2251:	
  6878  0108  2917               	goto	l4485
  6879  0109                     u2250:	
  6880  0109                     l4483:	
  6881  0109  3004               	movlw	4
  6882  010A  00E8               	movwf	??_main
  6883  010B  0868               	movf	??_main,w
  6884  010C  00E1               	movwf	read_ring@subindex
  6885  010D  3000               	movlw	0
  6886  010E  3182  229D  3180   	fcall	_read_ring
  6887  0111  0020               	movlb	0	; select bank0
  6888  0112  064E               	xorwf	_lum,w
  6889  0113  1903               	skipnz
  6890  0114  2916               	goto	u2261
  6891  0115  2917               	goto	u2260
  6892  0116                     u2261:	
  6893  0116  2946               	goto	l4495
  6894  0117                     u2260:	
  6895  0117                     l4485:	
  6896                           
  6897                           ;main.c: 134:                     ring_byte[0] = clkh_aux;
  6898  0117  0857               	movf	_clkh_aux,w	;volatile
  6899  0118  00E8               	movwf	??_main
  6900  0119  0868               	movf	??_main,w
  6901  011A  00BD               	movwf	_ring_byte
  6902                           
  6903                           ;main.c: 135:                     ring_byte[1] = clkm_aux;
  6904  011B  0855               	movf	_clkm_aux,w	;volatile
  6905  011C  00E8               	movwf	??_main
  6906  011D  0868               	movf	??_main,w
  6907  011E  00BE               	movwf	_ring_byte+1
  6908                           
  6909                           ;main.c: 136:                     ring_byte[2] = seg_aux;
  6910  011F  0853               	movf	_seg_aux,w	;volatile
  6911  0120  00E8               	movwf	??_main
  6912  0121  0868               	movf	??_main,w
  6913  0122  00BF               	movwf	_ring_byte+2
  6914                           
  6915                           ;main.c: 137:                     ring_byte[3] = temp;
  6916  0123  084F               	movf	_temp,w
  6917  0124  00E8               	movwf	??_main
  6918  0125  0868               	movf	??_main,w
  6919  0126  00C0               	movwf	_ring_byte+3
  6920                           
  6921                           ;main.c: 138:                     ring_byte[4] = lum;
  6922  0127  084E               	movf	_lum,w
  6923  0128  00E8               	movwf	??_main
  6924  0129  0868               	movf	??_main,w
  6925  012A  00C1               	movwf	_ring_byte+4
  6926  012B                     l4487:	
  6927                           
  6928                           ;main.c: 139:                     push_ring();
  6929  012B  3183  23AF  3180   	fcall	_push_ring
  6930  012E                     l4489:	
  6931                           
  6932                           ;main.c: 140:                     DATAEE_WriteByte(buffer, 0xAA);
  6933  012E  3000               	movlw	low _buffer
  6934  012F  0020               	movlb	0	; select bank0
  6935  0130  00D9               	movwf	DATAEE_WriteByte@bAdd
  6936  0131  3000               	movlw	high _buffer
  6937  0132  00DA               	movwf	DATAEE_WriteByte@bAdd+1
  6938  0133  30AA               	movlw	170
  6939  0134  00E8               	movwf	??_main
  6940  0135  0868               	movf	??_main,w
  6941  0136  00DB               	movwf	DATAEE_WriteByte@bData
  6942  0137  3183  23D3  3180   	fcall	_DATAEE_WriteByte
  6943  013A                     l4491:	
  6944                           
  6945                           ;main.c: 142:                     recovery_data[3] = nreg_pt;
  6946  013A  0020               	movlb	0	; select bank0
  6947  013B  0850               	movf	_nreg_pt,w
  6948  013C  00E8               	movwf	??_main
  6949  013D  0868               	movf	??_main,w
  6950  013E  00E4               	movwf	___ctoee@data
  6951  013F  3099               	movlw	(low (_recovery_data+3))& (0+255)
  6952  0140  3185  2551  3180   	fcall	___ctoee
  6953  0143                     l4493:	
  6954                           
  6955                           ;main.c: 143:                     cksum_w();
  6956  0143  3185  2577  3180   	fcall	_cksum_w
  6957  0146                     l4495:	
  6958                           
  6959                           ;main.c: 146:                 (INTCONbits.GIE = 0);
  6960  0146  138B               	bcf	11,7	;volatile
  6961  0147                     l4497:	
  6962                           
  6963                           ;main.c: 147:                 last5s_aux = 0;
  6964  0147  0020               	movlb	0	; select bank0
  6965  0148  01CD               	clrf	_last5s_aux
  6966  0149                     l4499:	
  6967                           
  6968                           ;main.c: 148:                 (INTCONbits.GIE = 1);
  6969  0149  178B               	bsf	11,7	;volatile
  6970  014A                     l4501:	
  6971                           
  6972                           ;main.c: 153:         if (last1m >= 1) {
  6973  014A  0851               	movf	_last1m,w	;volatile
  6974  014B  1903               	btfsc	3,2
  6975  014C  294E               	goto	u2271
  6976  014D  294F               	goto	u2270
  6977  014E                     u2271:	
  6978  014E  2967               	goto	l4511
  6979  014F                     u2270:	
  6980  014F                     l4503:	
  6981                           
  6982                           ;main.c: 156:             recovery_data[1] = clkh_aux;
  6983  014F  0857               	movf	_clkh_aux,w	;volatile
  6984  0150  00E8               	movwf	??_main
  6985  0151  0868               	movf	??_main,w
  6986  0152  00E4               	movwf	___ctoee@data
  6987  0153  3097               	movlw	(low (_recovery_data+1))& (0+255)
  6988  0154  3185  2551  3180   	fcall	___ctoee
  6989                           
  6990                           ;main.c: 157:             recovery_data[2] = clkm_aux;
  6991  0157  0020               	movlb	0	; select bank0
  6992  0158  0855               	movf	_clkm_aux,w	;volatile
  6993  0159  00E8               	movwf	??_main
  6994  015A  0868               	movf	??_main,w
  6995  015B  00E4               	movwf	___ctoee@data
  6996  015C  3098               	movlw	(low (_recovery_data+2))& (0+255)
  6997  015D  3185  2551  3180   	fcall	___ctoee
  6998                           
  6999                           ;main.c: 158:             cksum_w();
  7000  0160  3185  2577  3180   	fcall	_cksum_w
  7001  0163                     l4505:	
  7002                           
  7003                           ;main.c: 160:             (INTCONbits.GIE = 0);
  7004  0163  138B               	bcf	11,7	;volatile
  7005  0164                     l4507:	
  7006                           
  7007                           ;main.c: 161:             last1m = 0;
  7008  0164  0020               	movlb	0	; select bank0
  7009  0165  01D1               	clrf	_last1m	;volatile
  7010  0166                     l4509:	
  7011                           
  7012                           ;main.c: 162:             (INTCONbits.GIE = 1);
  7013  0166  178B               	bsf	11,7	;volatile
  7014  0167                     l4511:	
  7015                           
  7016                           ;main.c: 105:     while (running)
  7017  0167  187D               	btfsc	_running/(0+8),_running& (0+7)
  7018  0168  296A               	goto	u2281
  7019  0169  296B               	goto	u2280
  7020  016A                     u2281:	
  7021  016A  28B9               	goto	l893
  7022  016B                     u2280:	
  7023  016B                     l902:	
  7024  016B  3180  2837         	ljmp	start
  7025  016D                     __end_of_main:	
  7026                           
  7027                           	psect	text1
  7028  029D                     __ptext1:	
  7029 ;; *************** function _read_ring *****************
  7030 ;; Defined at:
  7031 ;;		line 181 in file "main.c"
  7032 ;; Parameters:    Size  Location     Type
  7033 ;;  index           1    wreg     unsigned char 
  7034 ;;  subindex        1    8[BANK0 ] unsigned char 
  7035 ;; Auto vars:     Size  Location     Type
  7036 ;;  index           1   12[BANK0 ] unsigned char 
  7037 ;;  absindex        1   13[BANK0 ] unsigned char 
  7038 ;;  i               1   11[BANK0 ] unsigned char 
  7039 ;; Return value:  Size  Location     Type
  7040 ;;                  1    wreg      unsigned char 
  7041 ;; Registers used:
  7042 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7043 ;; Tracked objects:
  7044 ;;		On entry : 0/0
  7045 ;;		On exit  : 0/0
  7046 ;;		Unchanged: 0/0
  7047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7048 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7049 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7050 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7051 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7052 ;;Total ram usage:        6 bytes
  7053 ;; Hardware stack levels used:    1
  7054 ;; Hardware stack levels required when called:    8
  7055 ;; This function calls:
  7056 ;;		___bmul
  7057 ;;		___eetoc
  7058 ;; This function is called by:
  7059 ;;		_main
  7060 ;; This function uses a non-reentrant model
  7061 ;;
  7062                           
  7063                           
  7064                           ;psect for function _read_ring
  7065  029D                     _read_ring:	
  7066                           
  7067                           ;incstack = 0
  7068                           ; Regs used in _read_ring: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7069                           ;read_ring@index stored from wreg
  7070  029D  0020               	movlb	0	; select bank0
  7071  029E  00E5               	movwf	read_ring@index
  7072  029F                     l3549:	
  7073  029F                     l3551:	
  7074                           
  7075                           ;main.c: 186:     if(index <= 30 && nreg_init) {
  7076  029F  301F               	movlw	31
  7077  02A0  0265               	subwf	read_ring@index,w
  7078  02A1  1803               	skipnc
  7079  02A2  2AA4               	goto	u1471
  7080  02A3  2AA5               	goto	u1470
  7081  02A4                     u1471:	
  7082  02A4  2AC9               	goto	l3563
  7083  02A5                     u1470:	
  7084  02A5                     l3553:	
  7085  02A5  1C7C               	btfss	_nreg_init/(0+8),_nreg_init& (0+7)
  7086  02A6  2AA8               	goto	u1481
  7087  02A7  2AA9               	goto	u1480
  7088  02A8                     u1481:	
  7089  02A8  2AC9               	goto	l3563
  7090  02A9                     u1480:	
  7091  02A9                     l3555:	
  7092                           
  7093                           ;main.c: 187:         absindex = 5 * index + subindex;
  7094  02A9  3005               	movlw	5
  7095  02AA  00E2               	movwf	??_read_ring
  7096  02AB  0862               	movf	??_read_ring,w
  7097  02AC  00D9               	movwf	___bmul@multiplicand
  7098  02AD  0865               	movf	read_ring@index,w
  7099  02AE  3184  249F  3182   	fcall	___bmul
  7100  02B1  0020               	movlb	0	; select bank0
  7101  02B2  0761               	addwf	read_ring@subindex,w
  7102  02B3  00E3               	movwf	??_read_ring+1
  7103  02B4  0863               	movf	??_read_ring+1,w
  7104  02B5  00E6               	movwf	read_ring@absindex
  7105  02B6                     l3557:	
  7106                           
  7107                           ;main.c: 188:         if(absindex <= nreg_pt)
  7108  02B6  0866               	movf	read_ring@absindex,w
  7109  02B7  0250               	subwf	_nreg_pt,w
  7110  02B8  1C03               	skipc
  7111  02B9  2ABB               	goto	u1491
  7112  02BA  2ABC               	goto	u1490
  7113  02BB                     u1491:	
  7114  02BB  2AC2               	goto	l3561
  7115  02BC                     u1490:	
  7116  02BC                     l3559:	
  7117                           
  7118                           ;main.c: 189:             i = nreg_pt - absindex;
  7119  02BC  0866               	movf	read_ring@absindex,w
  7120  02BD  0250               	subwf	_nreg_pt,w
  7121  02BE  00E2               	movwf	??_read_ring
  7122  02BF  0862               	movf	??_read_ring,w
  7123  02C0  00E4               	movwf	read_ring@i
  7124  02C1  2ACB               	goto	l3567
  7125  02C2                     l3561:	
  7126                           
  7127                           ;main.c: 191:             i = nreg - (nreg_pt - absindex);
  7128  02C2  0850               	movf	_nreg_pt,w
  7129  02C3  026C               	subwf	_nreg,w
  7130  02C4  0766               	addwf	read_ring@absindex,w
  7131  02C5  00E2               	movwf	??_read_ring
  7132  02C6  0862               	movf	??_read_ring,w
  7133  02C7  00E4               	movwf	read_ring@i
  7134  02C8  2ACB               	goto	l3567
  7135  02C9                     l3563:	
  7136                           
  7137                           ;main.c: 194:         return 0;
  7138  02C9  3000               	movlw	0
  7139  02CA  2AD0               	goto	l917
  7140  02CB                     l3567:	
  7141                           
  7142                           ;main.c: 196:     return buffer[i];
  7143  02CB  0864               	movf	read_ring@i,w
  7144  02CC  3E00               	addlw	low _buffer
  7145  02CD  3185  2534  3182   	fcall	___eetoc
  7146  02D0                     l917:	
  7147  02D0  0008               	return
  7148  02D1                     __end_of_read_ring:	
  7149                           
  7150                           	psect	text2
  7151  049F                     __ptext2:	
  7152 ;; *************** function ___bmul *****************
  7153 ;; Defined at:
  7154 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul8.c"
  7155 ;; Parameters:    Size  Location     Type
  7156 ;;  multiplier      1    wreg     unsigned char 
  7157 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  7158 ;; Auto vars:     Size  Location     Type
  7159 ;;  multiplier      1    3[BANK0 ] unsigned char 
  7160 ;;  product         1    2[BANK0 ] unsigned char 
  7161 ;; Return value:  Size  Location     Type
  7162 ;;                  1    wreg      unsigned char 
  7163 ;; Registers used:
  7164 ;;		wreg, status,2, status,0
  7165 ;; Tracked objects:
  7166 ;;		On entry : 0/0
  7167 ;;		On exit  : 0/0
  7168 ;;		Unchanged: 0/0
  7169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7170 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7171 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7172 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7173 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7174 ;;Total ram usage:        4 bytes
  7175 ;; Hardware stack levels used:    1
  7176 ;; Hardware stack levels required when called:    6
  7177 ;; This function calls:
  7178 ;;		Nothing
  7179 ;; This function is called by:
  7180 ;;		_read_ring
  7181 ;; This function uses a non-reentrant model
  7182 ;;
  7183                           
  7184                           
  7185                           ;psect for function ___bmul
  7186  049F                     ___bmul:	
  7187                           
  7188                           ;incstack = 0
  7189                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7190                           ;___bmul@multiplier stored from wreg
  7191  049F  0020               	movlb	0	; select bank0
  7192  04A0  00DC               	movwf	___bmul@multiplier
  7193  04A1                     l3435:	
  7194  04A1  01DB               	clrf	___bmul@product
  7195  04A2                     l3437:	
  7196  04A2  1C5C               	btfss	___bmul@multiplier,0
  7197  04A3  2CA5               	goto	u1391
  7198  04A4  2CA6               	goto	u1390
  7199  04A5                     u1391:	
  7200  04A5  2CAA               	goto	l3441
  7201  04A6                     u1390:	
  7202  04A6                     l3439:	
  7203  04A6  0859               	movf	___bmul@multiplicand,w
  7204  04A7  00DA               	movwf	??___bmul
  7205  04A8  085A               	movf	??___bmul,w
  7206  04A9  07DB               	addwf	___bmul@product,f
  7207  04AA                     l3441:	
  7208  04AA  1003               	clrc
  7209  04AB  0DD9               	rlf	___bmul@multiplicand,f
  7210  04AC                     l3443:	
  7211  04AC  1003               	clrc
  7212  04AD  0CDC               	rrf	___bmul@multiplier,f
  7213  04AE  085C               	movf	___bmul@multiplier,w
  7214  04AF  1D03               	btfss	3,2
  7215  04B0  2CB2               	goto	u1401
  7216  04B1  2CB3               	goto	u1400
  7217  04B2                     u1401:	
  7218  04B2  2CA2               	goto	l3437
  7219  04B3                     u1400:	
  7220  04B3                     l3445:	
  7221  04B3  085B               	movf	___bmul@product,w
  7222  04B4                     l1185:	
  7223  04B4  0008               	return
  7224  04B5                     __end_of___bmul:	
  7225                           
  7226                           	psect	text3
  7227  03AF                     __ptext3:	
  7228 ;; *************** function _push_ring *****************
  7229 ;; Defined at:
  7230 ;;		line 199 in file "main.c"
  7231 ;; Parameters:    Size  Location     Type
  7232 ;;		None
  7233 ;; Auto vars:     Size  Location     Type
  7234 ;;  i               1    6[BANK0 ] unsigned char 
  7235 ;;  address         1    5[BANK0 ] unsigned char 
  7236 ;; Return value:  Size  Location     Type
  7237 ;;                  1    wreg      void 
  7238 ;; Registers used:
  7239 ;;		wreg, status,2, status,0, pclath, cstack
  7240 ;; Tracked objects:
  7241 ;;		On entry : 0/0
  7242 ;;		On exit  : 0/0
  7243 ;;		Unchanged: 0/0
  7244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7246 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7247 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7248 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7249 ;;Total ram usage:        3 bytes
  7250 ;; Hardware stack levels used:    1
  7251 ;; Hardware stack levels required when called:    7
  7252 ;; This function calls:
  7253 ;;		_DATAEE_WriteByte
  7254 ;; This function is called by:
  7255 ;;		_main
  7256 ;; This function uses a non-reentrant model
  7257 ;;
  7258                           
  7259                           
  7260                           ;psect for function _push_ring
  7261  03AF                     _push_ring:	
  7262  03AF                     l4271:	
  7263                           ;incstack = 0
  7264                           ; Regs used in _push_ring: [wreg+status,2+status,0+pclath+cstack]
  7265                           
  7266  03AF  0020               	movlb	0	; select bank0
  7267  03B0  01DE               	clrf	push_ring@address
  7268  03B1                     l4273:	
  7269                           
  7270                           ;main.c: 201:     if(!nreg_init) nreg_init = 1;
  7271  03B1  187C               	btfsc	_nreg_init/(0+8),_nreg_init& (0+7)
  7272  03B2  2BB4               	goto	u1961
  7273  03B3  2BB5               	goto	u1960
  7274  03B4                     u1961:	
  7275  03B4  2BB6               	goto	l4277
  7276  03B5                     u1960:	
  7277  03B5                     l4275:	
  7278  03B5  147C               	bsf	_nreg_init/(0+8),_nreg_init& (0+7)
  7279  03B6                     l4277:	
  7280                           
  7281                           ;main.c: 202:     for(unsigned char i = 0; i < 5; i++) {
  7282  03B6  01DF               	clrf	push_ring@i
  7283  03B7                     l4283:	
  7284                           
  7285                           ;main.c: 205:         DATAEE_WriteByte(address + nreg_pt, 0xAC);
  7286  03B7  085E               	movf	push_ring@address,w
  7287  03B8  0750               	addwf	_nreg_pt,w
  7288  03B9  00D9               	movwf	DATAEE_WriteByte@bAdd
  7289  03BA  01DA               	clrf	DATAEE_WriteByte@bAdd+1
  7290  03BB  0DDA               	rlf	DATAEE_WriteByte@bAdd+1,f
  7291  03BC  30AC               	movlw	172
  7292  03BD  00DD               	movwf	??_push_ring
  7293  03BE  085D               	movf	??_push_ring,w
  7294  03BF  00DB               	movwf	DATAEE_WriteByte@bData
  7295  03C0  3183  23D3  3183   	fcall	_DATAEE_WriteByte
  7296  03C3                     l4285:	
  7297                           
  7298                           ;main.c: 206:         nreg_pt ++;
  7299  03C3  3001               	movlw	1
  7300  03C4  0020               	movlb	0	; select bank0
  7301  03C5  00DD               	movwf	??_push_ring
  7302  03C6  085D               	movf	??_push_ring,w
  7303  03C7  07D0               	addwf	_nreg_pt,f
  7304  03C8                     l4287:	
  7305                           
  7306                           ;main.c: 207:     }
  7307  03C8  3001               	movlw	1
  7308  03C9  00DD               	movwf	??_push_ring
  7309  03CA  085D               	movf	??_push_ring,w
  7310  03CB  07DF               	addwf	push_ring@i,f
  7311  03CC                     l4289:	
  7312  03CC  3005               	movlw	5
  7313  03CD  025F               	subwf	push_ring@i,w
  7314  03CE  1C03               	skipc
  7315  03CF  2BD1               	goto	u1971
  7316  03D0  2BD2               	goto	u1970
  7317  03D1                     u1971:	
  7318  03D1  2BB7               	goto	l4283
  7319  03D2                     u1970:	
  7320  03D2                     l923:	
  7321  03D2  0008               	return
  7322  03D3                     __end_of_push_ring:	
  7323                           
  7324                           	psect	text4
  7325  03D3                     __ptext4:	
  7326 ;; *************** function _DATAEE_WriteByte *****************
  7327 ;; Defined at:
  7328 ;;		line 180 in file "mcc_generated_files/memory.c"
  7329 ;; Parameters:    Size  Location     Type
  7330 ;;  bAdd            2    0[BANK0 ] unsigned short 
  7331 ;;  bData           1    2[BANK0 ] unsigned char 
  7332 ;; Auto vars:     Size  Location     Type
  7333 ;;  GIEBitValue     1    3[BANK0 ] unsigned char 
  7334 ;; Return value:  Size  Location     Type
  7335 ;;                  1    wreg      void 
  7336 ;; Registers used:
  7337 ;;		wreg, status,2, status,0
  7338 ;; Tracked objects:
  7339 ;;		On entry : 0/0
  7340 ;;		On exit  : 0/0
  7341 ;;		Unchanged: 0/0
  7342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7343 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7344 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7346 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7347 ;;Total ram usage:        4 bytes
  7348 ;; Hardware stack levels used:    1
  7349 ;; Hardware stack levels required when called:    6
  7350 ;; This function calls:
  7351 ;;		Nothing
  7352 ;; This function is called by:
  7353 ;;		_main
  7354 ;;		_push_ring
  7355 ;; This function uses a non-reentrant model
  7356 ;;
  7357                           
  7358                           
  7359                           ;psect for function _DATAEE_WriteByte
  7360  03D3                     _DATAEE_WriteByte:	
  7361  03D3                     l4175:	
  7362                           ;incstack = 0
  7363                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
  7364                           
  7365                           
  7366                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
  7367  03D3  3000               	movlw	0
  7368  03D4  1B8B               	btfsc	11,7	;volatile
  7369  03D5  3001               	movlw	1
  7370  03D6  0020               	movlb	0	; select bank0
  7371  03D7  00DC               	movwf	DATAEE_WriteByte@GIEBitValue
  7372                           
  7373                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
  7374  03D8  085A               	movf	DATAEE_WriteByte@bAdd+1,w
  7375  03D9  0030               	movlb	16	; select bank16
  7376  03DA  009B               	movwf	27	;volatile
  7377  03DB                     l4177:	
  7378                           
  7379                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
  7380  03DB  0020               	movlb	0	; select bank0
  7381  03DC  0859               	movf	DATAEE_WriteByte@bAdd,w
  7382  03DD  0030               	movlb	16	; select bank16
  7383  03DE  009A               	movwf	26	;volatile
  7384  03DF                     l4179:	
  7385                           
  7386                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
  7387  03DF  0020               	movlb	0	; select bank0
  7388  03E0  085B               	movf	DATAEE_WriteByte@bData,w
  7389  03E1  0030               	movlb	16	; select bank16
  7390  03E2  009C               	movwf	28	;volatile
  7391  03E3                     l4181:	
  7392                           
  7393                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
  7394  03E3  171E               	bsf	30,6	;volsfr
  7395  03E4                     l4183:	
  7396                           
  7397                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
  7398  03E4  151E               	bsf	30,2	;volsfr
  7399  03E5                     l4185:	
  7400                           
  7401                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
  7402  03E5  138B               	bcf	11,7	;volatile
  7403  03E6                     l4187:	
  7404                           
  7405                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
  7406  03E6  3055               	movlw	85
  7407  03E7  009F               	movwf	31	;volsfr
  7408  03E8                     l4189:	
  7409                           
  7410                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
  7411  03E8  30AA               	movlw	170
  7412  03E9  009F               	movwf	31	;volsfr
  7413  03EA                     l4191:	
  7414                           
  7415                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
  7416  03EA  149E               	bsf	30,1	;volsfr
  7417  03EB                     l776:	
  7418                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
  7419                           
  7420                           
  7421                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
  7422  03EB  189E               	btfsc	30,1	;volsfr
  7423  03EC  2BEE               	goto	u1911
  7424  03ED  2BEF               	goto	u1910
  7425  03EE                     u1911:	
  7426  03EE  2BEB               	goto	l776
  7427  03EF                     u1910:	
  7428  03EF                     l778:	
  7429                           
  7430                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
  7431  03EF  111E               	bcf	30,2	;volsfr
  7432  03F0                     l4193:	
  7433                           
  7434                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
  7435  03F0  0020               	movlb	0	; select bank0
  7436  03F1  0C5C               	rrf	DATAEE_WriteByte@GIEBitValue,w
  7437  03F2  1C03               	skipc
  7438  03F3  138B               	bcf	11,7	;volatile
  7439  03F4  1803               	skipnc
  7440  03F5  178B               	bsf	11,7	;volatile
  7441  03F6                     l779:	
  7442  03F6  0008               	return
  7443  03F7                     __end_of_DATAEE_WriteByte:	
  7444                           
  7445                           	psect	text5
  7446  056B                     __ptext5:	
  7447 ;; *************** function _i2c1_driver_open *****************
  7448 ;; Defined at:
  7449 ;;		line 84 in file "mcc_generated_files/i2c1_driver.c"
  7450 ;; Parameters:    Size  Location     Type
  7451 ;;		None
  7452 ;; Auto vars:     Size  Location     Type
  7453 ;;		None
  7454 ;; Return value:  Size  Location     Type
  7455 ;;		None               void
  7456 ;; Registers used:
  7457 ;;		wreg, status,2
  7458 ;; Tracked objects:
  7459 ;;		On entry : 0/0
  7460 ;;		On exit  : 0/0
  7461 ;;		Unchanged: 0/0
  7462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7467 ;;Total ram usage:        0 bytes
  7468 ;; Hardware stack levels used:    1
  7469 ;; Hardware stack levels required when called:    6
  7470 ;; This function calls:
  7471 ;;		Nothing
  7472 ;; This function is called by:
  7473 ;;		_main
  7474 ;;		_i2c_open
  7475 ;; This function uses a non-reentrant model
  7476 ;;
  7477                           
  7478                           
  7479                           ;psect for function _i2c1_driver_open
  7480  056B                     _i2c1_driver_open:	
  7481  056B                     l4233:	
  7482                           ;incstack = 0
  7483                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
  7484                           
  7485  056B  0023               	movlb	3	; select bank3
  7486  056C  1A90               	btfsc	16,5	;volatile
  7487  056D  2D6F               	goto	u1931
  7488  056E  2D70               	goto	u1930
  7489  056F                     u1931:	
  7490  056F  2D76               	goto	l651
  7491  0570                     u1930:	
  7492  0570                     l4235:	
  7493  0570  018F               	clrf	15	;volatile
  7494  0571                     l4237:	
  7495  0571  3028               	movlw	40
  7496  0572  0090               	movwf	16	;volatile
  7497  0573                     l4239:	
  7498  0573  0191               	clrf	17	;volatile
  7499  0574  3003               	movlw	3
  7500  0575  008D               	movwf	13	;volatile
  7501  0576                     l651:	
  7502  0576  0008               	return
  7503  0577                     __end_of_i2c1_driver_open:	
  7504                           
  7505                           	psect	text6
  7506  0577                     __ptext6:	
  7507 ;; *************** function _cksum_w *****************
  7508 ;; Defined at:
  7509 ;;		line 167 in file "main.c"
  7510 ;; Parameters:    Size  Location     Type
  7511 ;;		None
  7512 ;; Auto vars:     Size  Location     Type
  7513 ;;		None
  7514 ;; Return value:  Size  Location     Type
  7515 ;;                  1    wreg      void 
  7516 ;; Registers used:
  7517 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7518 ;; Tracked objects:
  7519 ;;		On entry : 0/0
  7520 ;;		On exit  : 0/0
  7521 ;;		Unchanged: 0/0
  7522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7525 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7526 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7527 ;;Total ram usage:        1 bytes
  7528 ;; Hardware stack levels used:    1
  7529 ;; Hardware stack levels required when called:    9
  7530 ;; This function calls:
  7531 ;;		___ctoee
  7532 ;;		_cksum
  7533 ;; This function is called by:
  7534 ;;		_main
  7535 ;; This function uses a non-reentrant model
  7536 ;;
  7537                           
  7538                           
  7539                           ;psect for function _cksum_w
  7540  0577                     _cksum_w:	
  7541  0577                     l3547:	
  7542                           ;incstack = 0
  7543                           ; Regs used in _cksum_w: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7544                           
  7545                           
  7546                           ;main.c: 169:     recovery_data[5 - 1] = cksum();
  7547  0577  3184  2470  3185   	fcall	_cksum
  7548  057A  0020               	movlb	0	; select bank0
  7549  057B  00E7               	movwf	??_cksum_w
  7550  057C  0867               	movf	??_cksum_w,w
  7551  057D  00E4               	movwf	___ctoee@data
  7552  057E  309A               	movlw	(low (_recovery_data+4))& (0+255)
  7553  057F  3185  2551  3185   	fcall	___ctoee
  7554  0582                     l905:	
  7555  0582  0008               	return
  7556  0583                     __end_of_cksum_w:	
  7557                           
  7558                           	psect	text7
  7559  0470                     __ptext7:	
  7560 ;; *************** function _cksum *****************
  7561 ;; Defined at:
  7562 ;;		line 172 in file "main.c"
  7563 ;; Parameters:    Size  Location     Type
  7564 ;;		None
  7565 ;; Auto vars:     Size  Location     Type
  7566 ;;  i               1   10[BANK0 ] unsigned char 
  7567 ;;  res             1    9[BANK0 ] unsigned char 
  7568 ;; Return value:  Size  Location     Type
  7569 ;;                  1    wreg      unsigned char 
  7570 ;; Registers used:
  7571 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7572 ;; Tracked objects:
  7573 ;;		On entry : 0/0
  7574 ;;		On exit  : 0/0
  7575 ;;		Unchanged: 0/0
  7576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7578 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7579 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7580 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7581 ;;Total ram usage:        3 bytes
  7582 ;; Hardware stack levels used:    1
  7583 ;; Hardware stack levels required when called:    8
  7584 ;; This function calls:
  7585 ;;		___eetoc
  7586 ;; This function is called by:
  7587 ;;		_main
  7588 ;;		_cksum_w
  7589 ;; This function uses a non-reentrant model
  7590 ;;
  7591                           
  7592                           
  7593                           ;psect for function _cksum
  7594  0470                     _cksum:	
  7595  0470                     l3415:	
  7596                           ;incstack = 0
  7597                           ; Regs used in _cksum: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7598                           
  7599                           
  7600                           ;main.c: 174:     unsigned char res = 0;
  7601  0470  0020               	movlb	0	; select bank0
  7602  0471  01E2               	clrf	cksum@res
  7603                           
  7604                           ;main.c: 175:     for(unsigned char i = 0; i < 5; i ++) {
  7605  0472  01E3               	clrf	cksum@i
  7606  0473                     l3421:	
  7607                           
  7608                           ;main.c: 176:         res += recovery_data[i];
  7609  0473  0863               	movf	cksum@i,w
  7610  0474  3E96               	addlw	low _recovery_data
  7611  0475  3185  2534  3184   	fcall	___eetoc
  7612  0478  0020               	movlb	0	; select bank0
  7613  0479  00E1               	movwf	??_cksum
  7614  047A  0861               	movf	??_cksum,w
  7615  047B  07E2               	addwf	cksum@res,f
  7616  047C                     l3423:	
  7617                           
  7618                           ;main.c: 177:     }
  7619  047C  3001               	movlw	1
  7620  047D  00E1               	movwf	??_cksum
  7621  047E  0861               	movf	??_cksum,w
  7622  047F  07E3               	addwf	cksum@i,f
  7623  0480                     l3425:	
  7624  0480  3005               	movlw	5
  7625  0481  0263               	subwf	cksum@i,w
  7626  0482  1C03               	skipc
  7627  0483  2C85               	goto	u1381
  7628  0484  2C86               	goto	u1380
  7629  0485                     u1381:	
  7630  0485  2C73               	goto	l3421
  7631  0486                     u1380:	
  7632  0486                     l3427:	
  7633                           
  7634                           ;main.c: 178:     return res;
  7635  0486  0862               	movf	cksum@res,w
  7636  0487                     l910:	
  7637  0487  0008               	return
  7638  0488                     __end_of_cksum:	
  7639                           
  7640                           	psect	text8
  7641  0534                     __ptext8:	
  7642 ;; *************** function ___eetoc *****************
  7643 ;; Defined at:
  7644 ;;		line 104 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c"
  7645 ;; Parameters:    Size  Location     Type
  7646 ;;  addr            1    wreg     PTR eeprom void 
  7647 ;;		 -> buffer(150), recovery_data(5), 
  7648 ;; Auto vars:     Size  Location     Type
  7649 ;;  addr            1    6[BANK0 ] PTR eeprom void 
  7650 ;;		 -> buffer(150), recovery_data(5), 
  7651 ;;  data            1    7[BANK0 ] unsigned char 
  7652 ;; Return value:  Size  Location     Type
  7653 ;;                  1    wreg      unsigned char 
  7654 ;; Registers used:
  7655 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7656 ;; Tracked objects:
  7657 ;;		On entry : 0/0
  7658 ;;		On exit  : 0/0
  7659 ;;		Unchanged: 0/0
  7660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7662 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7663 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7664 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7665 ;;Total ram usage:        3 bytes
  7666 ;; Hardware stack levels used:    1
  7667 ;; Hardware stack levels required when called:    7
  7668 ;; This function calls:
  7669 ;;		___eecpymem
  7670 ;; This function is called by:
  7671 ;;		_main
  7672 ;;		_cksum
  7673 ;;		_read_ring
  7674 ;; This function uses a non-reentrant model
  7675 ;;
  7676                           
  7677                           
  7678                           ;psect for function ___eetoc
  7679  0534                     ___eetoc:	
  7680                           
  7681                           ;incstack = 0
  7682                           ; Regs used in ___eetoc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7683                           ;___eetoc@addr stored from wreg
  7684  0534  0020               	movlb	0	; select bank0
  7685  0535  00DF               	movwf	___eetoc@addr
  7686  0536                     l3107:	
  7687                           
  7688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 104: __eetoc
      +                          (__eeprom void *addr);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__e
      +                          eprom.c: 105: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.
      +                          c: 106:  unsigned char data;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          pic\__eeprom.c: 107:  __eecpymem((unsigned char *) &data,addr,1);
  7689  0536  085F               	movf	___eetoc@addr,w
  7690  0537  00DE               	movwf	??___eetoc
  7691  0538  085E               	movf	??___eetoc,w
  7692  0539  00D9               	movwf	___eecpymem@from
  7693  053A  01DA               	clrf	___eecpymem@size
  7694  053B  0ADA               	incf	___eecpymem@size,f
  7695  053C  3060               	movlw	(low (___eetoc@data| 0))& (0+255)
  7696  053D  3183  2304  3185   	fcall	___eecpymem
  7697  0540                     l3109:	
  7698                           
  7699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 108:  return
      +                           data;
  7700  0540  0020               	movlb	0	; select bank0
  7701  0541  0860               	movf	___eetoc@data,w
  7702  0542                     l1052:	
  7703  0542  0008               	return
  7704  0543                     __end_of___eetoc:	
  7705                           
  7706                           	psect	text9
  7707  0304                     __ptext9:	
  7708 ;; *************** function ___eecpymem *****************
  7709 ;; Defined at:
  7710 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c"
  7711 ;; Parameters:    Size  Location     Type
  7712 ;;  to              1    wreg     PTR volatile unsigned ch
  7713 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
  7714 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  7715 ;;  from            1    0[BANK0 ] PTR eeprom unsigned char
  7716 ;;		 -> buffer(150), recovery_data(5), 
  7717 ;;  size            1    1[BANK0 ] unsigned char 
  7718 ;; Auto vars:     Size  Location     Type
  7719 ;;  to              1    4[BANK0 ] PTR volatile unsigned ch
  7720 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
  7721 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  7722 ;;  cp              1    3[BANK0 ] PTR volatile unsigned ch
  7723 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
  7724 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  7725 ;; Return value:  Size  Location     Type
  7726 ;;                  1    wreg      void 
  7727 ;; Registers used:
  7728 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7729 ;; Tracked objects:
  7730 ;;		On entry : 0/0
  7731 ;;		On exit  : 0/0
  7732 ;;		Unchanged: 0/0
  7733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7734 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7735 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7736 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7737 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7738 ;;Total ram usage:        5 bytes
  7739 ;; Hardware stack levels used:    1
  7740 ;; Hardware stack levels required when called:    6
  7741 ;; This function calls:
  7742 ;;		Nothing
  7743 ;; This function is called by:
  7744 ;;		___eetoc
  7745 ;; This function uses a non-reentrant model
  7746 ;;
  7747                           
  7748                           
  7749                           ;psect for function ___eecpymem
  7750  0304                     ___eecpymem:	
  7751                           
  7752                           ;incstack = 0
  7753                           ; Regs used in ___eecpymem: [wreg+fsr1l+fsr1h+status,2+status,0]
  7754                           ;___eecpymem@to stored from wreg
  7755  0304  0020               	movlb	0	; select bank0
  7756  0305  00DD               	movwf	___eecpymem@to
  7757  0306                     l2941:	
  7758                           
  7759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 6: __eecpyme
      +                          m(volatile unsigned char *to, __eeprom unsigned char * from, unsigned char size);C:\Prog
      +                          ram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 6: };C:\Program File
      +                          s (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 6: ;C:\Program Files (x86)\M
      +                          icrochip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 6: ;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 6: };C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\pic\__eeprom.c: 7: {
  7760  0306  085D               	movf	___eecpymem@to,w
  7761  0307  00DB               	movwf	??___eecpymem
  7762  0308  085B               	movf	??___eecpymem,w
  7763  0309  00DC               	movwf	___eecpymem@cp
  7764  030A                     l1026:	
  7765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 24:  };C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 24: __fltoee(__eep
      +                          rom void *addr, double data)
  7766                           
  7767                           
  7768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 22:  while (
      +                          NVMCON1bits.WR) {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eepro
      +                          m.c: 22: 
  7769  030A  0030               	movlb	16	; select bank16
  7770  030B  189E               	btfsc	30,1	;volsfr
  7771  030C  2B0E               	goto	u1161
  7772  030D  2B0F               	goto	u1160
  7773  030E                     u1161:	
  7774  030E  2B0A               	goto	l1026
  7775  030F                     u1160:	
  7776  030F                     l1028:	
  7777                           
  7778                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 25:  NVMCON1
      +                          bits.NVMREGS = 1;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eepro
      +                          m.c: 25: {
  7779  030F  171E               	bsf	30,6	;volsfr
  7780  0310                     l2943:	
  7781                           
  7782                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 26:  NVMADRL
      +                           = (unsigned char) from;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\
      +                          __eeprom.c: 26:  __memcpyee(addr,(unsigned char *) &data,4);
  7783  0310  0020               	movlb	0	; select bank0
  7784  0311  0859               	movf	___eecpymem@from,w
  7785  0312  0030               	movlb	16	; select bank16
  7786  0313  009A               	movwf	26	;volatile
  7787                           
  7788                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 27:  NVMADRH
      +                           = 0x70;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 27: 
      +                           return data;
  7789  0314  3070               	movlw	112
  7790  0315  009B               	movwf	27	;volatile
  7791                           
  7792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 28:  while (
      +                          size--) {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 28:
      +                           }
  7793  0316  2B2A               	goto	l2951
  7794  0317                     l1030:	
  7795                           
  7796                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 29:   NVMCON
      +                          1bits.RD = 1;
  7797  0317  0030               	movlb	16	; select bank16
  7798  0318  141E               	bsf	30,0	;volsfr
  7799  0319                     l2945:	
  7800                           
  7801                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 30:   *cp++ 
      +                          = NVMDATL;
  7802  0319  081C               	movf	28,w	;volatile
  7803  031A  0020               	movlb	0	; select bank0
  7804  031B  00DB               	movwf	??___eecpymem
  7805  031C  085C               	movf	___eecpymem@cp,w
  7806  031D  0086               	movwf	6
  7807  031E  0187               	clrf	7
  7808  031F  085B               	movf	??___eecpymem,w
  7809  0320  0081               	movwf	1
  7810  0321                     l2947:	
  7811  0321  3001               	movlw	1
  7812  0322  00DB               	movwf	??___eecpymem
  7813  0323  085B               	movf	??___eecpymem,w
  7814  0324  07DC               	addwf	___eecpymem@cp,f
  7815  0325                     l2949:	
  7816                           
  7817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 31:   NVMADR
      +                          L++;
  7818  0325  3001               	movlw	1
  7819  0326  00DB               	movwf	??___eecpymem
  7820  0327  085B               	movf	??___eecpymem,w
  7821  0328  0030               	movlb	16	; select bank16
  7822  0329  079A               	addwf	26,f	;volatile
  7823  032A                     l2951:	
  7824                           
  7825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 28:  while (
      +                          size--) {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 28:
      +                           }
  7826  032A  3001               	movlw	1
  7827  032B  0020               	movlb	0	; select bank0
  7828  032C  02DA               	subwf	___eecpymem@size,f
  7829  032D  0A5A               	incf	___eecpymem@size,w
  7830  032E  1D03               	btfss	3,2
  7831  032F  2B31               	goto	u1171
  7832  0330  2B32               	goto	u1170
  7833  0331                     u1171:	
  7834  0331  2B17               	goto	l1030
  7835  0332                     u1170:	
  7836  0332                     l1032:	
  7837  0332  0008               	return
  7838  0333                     __end_of___eecpymem:	
  7839                           
  7840                           	psect	text10
  7841  0551                     __ptext10:	
  7842 ;; *************** function ___ctoee *****************
  7843 ;; Defined at:
  7844 ;;		line 150 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c"
  7845 ;; Parameters:    Size  Location     Type
  7846 ;;  addr            1    wreg     PTR eeprom void 
  7847 ;;		 -> recovery_data(5), 
  7848 ;;  data            1   11[BANK0 ] unsigned char 
  7849 ;; Auto vars:     Size  Location     Type
  7850 ;;  addr            1   13[BANK0 ] PTR eeprom void 
  7851 ;;		 -> recovery_data(5), 
  7852 ;; Return value:  Size  Location     Type
  7853 ;;                  1    wreg      unsigned char 
  7854 ;; Registers used:
  7855 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7856 ;; Tracked objects:
  7857 ;;		On entry : 0/0
  7858 ;;		On exit  : 0/0
  7859 ;;		Unchanged: 0/0
  7860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7861 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7862 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7863 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7864 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7865 ;;Total ram usage:        3 bytes
  7866 ;; Hardware stack levels used:    1
  7867 ;; Hardware stack levels required when called:    7
  7868 ;; This function calls:
  7869 ;;		___memcpyee
  7870 ;; This function is called by:
  7871 ;;		_main
  7872 ;;		_cksum_w
  7873 ;; This function uses a non-reentrant model
  7874 ;;
  7875                           
  7876                           
  7877                           ;psect for function ___ctoee
  7878  0551                     ___ctoee:	
  7879                           
  7880                           ;incstack = 0
  7881                           ; Regs used in ___ctoee: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7882                           ;___ctoee@addr stored from wreg
  7883  0551  0020               	movlb	0	; select bank0
  7884  0552  00E6               	movwf	___ctoee@addr
  7885  0553                     l3431:	
  7886  0553  3064               	movlw	(low (___ctoee@data| 0))& (0+255)
  7887  0554  00E5               	movwf	??___ctoee
  7888  0555  0865               	movf	??___ctoee,w
  7889  0556  00D9               	movwf	___memcpyee@from
  7890  0557  01DA               	clrf	___memcpyee@size
  7891  0558  0ADA               	incf	___memcpyee@size,f
  7892  0559  0866               	movf	___ctoee@addr,w
  7893  055A  3181  21C1  3185   	fcall	___memcpyee
  7894  055D                     l1067:	
  7895  055D  0008               	return
  7896  055E                     __end_of___ctoee:	
  7897                           
  7898                           	psect	text11
  7899  01C1                     __ptext11:	
  7900 ;; *************** function ___memcpyee *****************
  7901 ;; Defined at:
  7902 ;;		line 39 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c"
  7903 ;; Parameters:    Size  Location     Type
  7904 ;;  to              1    wreg     PTR eeprom unsigned char
  7905 ;;		 -> recovery_data(5), 
  7906 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  7907 ;;		 -> __fltoee@data(4), __fttoee@data(4), __otoee@data(8), __ltoee@data(4), 
  7908 ;;		 -> __mtoee@data(3), __itoee@data(2), __ctoee@data(1), 
  7909 ;;  size            1    1[BANK0 ] unsigned char 
  7910 ;; Auto vars:     Size  Location     Type
  7911 ;;  to              1    4[BANK0 ] PTR eeprom unsigned char
  7912 ;;		 -> recovery_data(5), 
  7913 ;;  ptr             1    3[BANK0 ] PTR const unsigned char 
  7914 ;;		 -> __fltoee@data(4), __fttoee@data(4), __otoee@data(8), __ltoee@data(4), 
  7915 ;;		 -> __mtoee@data(3), __itoee@data(2), __ctoee@data(1), 
  7916 ;; Return value:  Size  Location     Type
  7917 ;;                  1    wreg      void 
  7918 ;; Registers used:
  7919 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/0
  7922 ;;		On exit  : 0/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7925 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7926 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7927 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7928 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7929 ;;Total ram usage:        5 bytes
  7930 ;; Hardware stack levels used:    1
  7931 ;; Hardware stack levels required when called:    6
  7932 ;; This function calls:
  7933 ;;		Nothing
  7934 ;; This function is called by:
  7935 ;;		___ctoee
  7936 ;; This function uses a non-reentrant model
  7937 ;;
  7938                           
  7939                           
  7940                           ;psect for function ___memcpyee
  7941  01C1                     ___memcpyee:	
  7942                           
  7943                           ;incstack = 0
  7944                           ; Regs used in ___memcpyee: [wreg+fsr1l+fsr1h+status,2+status,0]
  7945                           ;___memcpyee@to stored from wreg
  7946  01C1  0020               	movlb	0	; select bank0
  7947  01C2  00DD               	movwf	___memcpyee@to
  7948  01C3                     l3079:	
  7949                           
  7950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 39: __memcpy
      +                          ee(__eeprom unsigned char * to, const unsigned char *from, unsigned char size);C:\Progra
      +                          m Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 40: {;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 41:  const unsigned char *ptr
      +                           =from;
  7951  01C3  0859               	movf	___memcpyee@from,w
  7952  01C4  00DB               	movwf	??___memcpyee
  7953  01C5  085B               	movf	??___memcpyee,w
  7954  01C6  00DC               	movwf	___memcpyee@ptr
  7955  01C7                     l1035:	
  7956                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 71:  }
  7957                           
  7958                           
  7959                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 69:  while (
      +                          NVMCON1bits.WR) {
  7960  01C7  0030               	movlb	16	; select bank16
  7961  01C8  189E               	btfsc	30,1	;volsfr
  7962  01C9  29CB               	goto	u1211
  7963  01CA  29CC               	goto	u1210
  7964  01CB                     u1211:	
  7965  01CB  29C7               	goto	l1035
  7966  01CC                     u1210:	
  7967  01CC                     l1037:	
  7968                           
  7969                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 72:  NVMCON1
      +                          bits.NVMREGS = 1;
  7970  01CC  171E               	bsf	30,6	;volsfr
  7971  01CD                     l3081:	
  7972                           
  7973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 73:  NVMADRL
      +                           = (unsigned char) to - 1U;
  7974  01CD  0020               	movlb	0	; select bank0
  7975  01CE  085D               	movf	___memcpyee@to,w
  7976  01CF  3EFF               	addlw	255
  7977  01D0  0030               	movlb	16	; select bank16
  7978  01D1  009A               	movwf	26	;volatile
  7979  01D2                     l3083:	
  7980                           
  7981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 74:  NVMADRH
      +                           = 0x70;
  7982  01D2  3070               	movlw	112
  7983  01D3  009B               	movwf	27	;volatile
  7984  01D4                     l3085:	
  7985                           
  7986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 75:  NVMDATH
      +                           = 0;
  7987  01D4  019D               	clrf	29	;volatile
  7988                           
  7989                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 76:  while (
      +                          size--) {
  7990  01D5  2A05               	goto	l3105
  7991  01D6                     l1040:	
  7992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 79:   }
  7993                           
  7994                           
  7995                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 77:   while 
      +                          (NVMCON1bits.WR) {
  7996  01D6  0030               	movlb	16	; select bank16
  7997  01D7  189E               	btfsc	30,1	;volsfr
  7998  01D8  29DA               	goto	u1221
  7999  01D9  29DB               	goto	u1220
  8000  01DA                     u1221:	
  8001  01DA  29D6               	goto	l1040
  8002  01DB                     u1220:	
  8003  01DB                     l3087:	
  8004                           
  8005                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 80:   NVMDAT
      +                          L = *ptr++;
  8006  01DB  0020               	movlb	0	; select bank0
  8007  01DC  085C               	movf	___memcpyee@ptr,w
  8008  01DD  0086               	movwf	6
  8009  01DE  0187               	clrf	7
  8010  01DF  0801               	movf	1,w
  8011  01E0  0030               	movlb	16	; select bank16
  8012  01E1  009C               	movwf	28	;volatile
  8013  01E2                     l3089:	
  8014  01E2  3001               	movlw	1
  8015  01E3  0020               	movlb	0	; select bank0
  8016  01E4  00DB               	movwf	??___memcpyee
  8017  01E5  085B               	movf	??___memcpyee,w
  8018  01E6  07DC               	addwf	___memcpyee@ptr,f
  8019  01E7                     l3091:	
  8020                           
  8021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 81:   NVMADR
      +                          L++;
  8022  01E7  3001               	movlw	1
  8023  01E8  00DB               	movwf	??___memcpyee
  8024  01E9  085B               	movf	??___memcpyee,w
  8025  01EA  0030               	movlb	16	; select bank16
  8026  01EB  079A               	addwf	26,f	;volatile
  8027  01EC                     l3093:	
  8028                           
  8029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 82:   STATUS
      +                          bits.CARRY = 0;
  8030  01EC  0020               	movlb	0	; select bank0
  8031  01ED  1003               	bcf	3,0	;volatile
  8032  01EE                     l3095:	
  8033                           
  8034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 83:   if (IN
      +                          TCONbits.GIE) {
  8035  01EE  1F8B               	btfss	11,7	;volatile
  8036  01EF  29F1               	goto	u1231
  8037  01F0  29F2               	goto	u1230
  8038  01F1                     u1231:	
  8039  01F1  29F3               	goto	l1043
  8040  01F2                     u1230:	
  8041  01F2                     l3097:	
  8042                           
  8043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 84:    STATU
      +                          Sbits.CARRY = 1;
  8044  01F2  1403               	bsf	3,0	;volatile
  8045  01F3                     l1043:	
  8046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 85:   }
  8047                           
  8048                           
  8049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 86:   NVMCON
      +                          1bits.WREN = 1;
  8050  01F3  0030               	movlb	16	; select bank16
  8051  01F4  151E               	bsf	30,2	;volsfr
  8052  01F5                     l3099:	
  8053                           
  8054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 87:   NVMCON
      +                          2 = 0x55;
  8055  01F5  3055               	movlw	85
  8056  01F6  009F               	movwf	31	;volsfr
  8057                           
  8058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 88:   NVMCON
      +                          2 = 0xAA;
  8059  01F7  30AA               	movlw	170
  8060  01F8  009F               	movwf	31	;volsfr
  8061  01F9                     l3101:	
  8062                           
  8063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 89:   NVMCON
      +                          1bits.WR = 1;
  8064  01F9  149E               	bsf	30,1	;volsfr
  8065  01FA                     l1044:	
  8066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 92:   }
  8067                           
  8068                           
  8069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 90:   while 
      +                          (NVMCON1bits.WR) {
  8070  01FA  189E               	btfsc	30,1	;volsfr
  8071  01FB  29FD               	goto	u1241
  8072  01FC  29FE               	goto	u1240
  8073  01FD                     u1241:	
  8074  01FD  29FA               	goto	l1044
  8075  01FE                     u1240:	
  8076  01FE                     l1046:	
  8077                           
  8078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 93:   NVMCON
      +                          1bits.WREN = 0;
  8079  01FE  111E               	bcf	30,2	;volsfr
  8080                           
  8081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 94:   if (ST
      +                          ATUSbits.CARRY) {
  8082  01FF  0020               	movlb	0	; select bank0
  8083  0200  1C03               	btfss	3,0	;volatile
  8084  0201  2A03               	goto	u1251
  8085  0202  2A04               	goto	u1250
  8086  0203                     u1251:	
  8087  0203  2A05               	goto	l3105
  8088  0204                     u1250:	
  8089  0204                     l3103:	
  8090                           
  8091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 95:    INTCO
      +                          Nbits.GIE = 1;
  8092  0204  178B               	bsf	11,7	;volatile
  8093  0205                     l3105:	
  8094                           
  8095                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\pic\__eeprom.c: 76:  while (
      +                          size--) {
  8096  0205  3001               	movlw	1
  8097  0206  0020               	movlb	0	; select bank0
  8098  0207  02DA               	subwf	___memcpyee@size,f
  8099  0208  0A5A               	incf	___memcpyee@size,w
  8100  0209  1D03               	btfss	3,2
  8101  020A  2A0C               	goto	u1261
  8102  020B  2A0D               	goto	u1260
  8103  020C                     u1261:	
  8104  020C  29D6               	goto	l1040
  8105  020D                     u1260:	
  8106  020D                     l1049:	
  8107  020D  0008               	return
  8108  020E                     __end_of___memcpyee:	
  8109                           
  8110                           	psect	text12
  8111  055E                     __ptext12:	
  8112 ;; *************** function _SYSTEM_Initialize *****************
  8113 ;; Defined at:
  8114 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8115 ;; Parameters:    Size  Location     Type
  8116 ;;		None
  8117 ;; Auto vars:     Size  Location     Type
  8118 ;;		None
  8119 ;; Return value:  Size  Location     Type
  8120 ;;                  1    wreg      void 
  8121 ;; Registers used:
  8122 ;;		wreg, status,2, status,0, pclath, cstack
  8123 ;; Tracked objects:
  8124 ;;		On entry : 0/0
  8125 ;;		On exit  : 0/0
  8126 ;;		Unchanged: 0/0
  8127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8132 ;;Total ram usage:        0 bytes
  8133 ;; Hardware stack levels used:    1
  8134 ;; Hardware stack levels required when called:    8
  8135 ;; This function calls:
  8136 ;;		_OSCILLATOR_Initialize
  8137 ;;		_PIN_MANAGER_Initialize
  8138 ;;		_PMD_Initialize
  8139 ;;		_TMR1_Initialize
  8140 ;; This function is called by:
  8141 ;;		_main
  8142 ;; This function uses a non-reentrant model
  8143 ;;
  8144                           
  8145                           
  8146                           ;psect for function _SYSTEM_Initialize
  8147  055E                     _SYSTEM_Initialize:	
  8148  055E                     l4263:	
  8149                           ;incstack = 0
  8150                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8151                           
  8152                           
  8153                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  8154  055E  3185  258C  3185   	fcall	_PMD_Initialize
  8155  0561                     l4265:	
  8156                           
  8157                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8158  0561  3182  2258  3185   	fcall	_PIN_MANAGER_Initialize
  8159  0564                     l4267:	
  8160                           
  8161                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8162  0564  3185  2594  3185   	fcall	_OSCILLATOR_Initialize
  8163  0567                     l4269:	
  8164                           
  8165                           ;mcc_generated_files/mcc.c: 55:     TMR1_Initialize();
  8166  0567  3184  243B  3185   	fcall	_TMR1_Initialize
  8167  056A                     l500:	
  8168  056A  0008               	return
  8169  056B                     __end_of_SYSTEM_Initialize:	
  8170                           
  8171                           	psect	text13
  8172  043B                     __ptext13:	
  8173 ;; *************** function _TMR1_Initialize *****************
  8174 ;; Defined at:
  8175 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  8176 ;; Parameters:    Size  Location     Type
  8177 ;;		None
  8178 ;; Auto vars:     Size  Location     Type
  8179 ;;		None
  8180 ;; Return value:  Size  Location     Type
  8181 ;;                  1    wreg      void 
  8182 ;; Registers used:
  8183 ;;		wreg, status,2, status,0, pclath, cstack
  8184 ;; Tracked objects:
  8185 ;;		On entry : 0/0
  8186 ;;		On exit  : 0/0
  8187 ;;		Unchanged: 0/0
  8188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8193 ;;Total ram usage:        0 bytes
  8194 ;; Hardware stack levels used:    1
  8195 ;; Hardware stack levels required when called:    7
  8196 ;; This function calls:
  8197 ;;		_TMR1_SetInterruptHandler
  8198 ;; This function is called by:
  8199 ;;		_SYSTEM_Initialize
  8200 ;; This function uses a non-reentrant model
  8201 ;;
  8202                           
  8203                           
  8204                           ;psect for function _TMR1_Initialize
  8205  043B                     _TMR1_Initialize:	
  8206  043B                     l4095:	
  8207                           ;incstack = 0
  8208                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8209                           
  8210                           
  8211                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  8212  043B  0024               	movlb	4	; select bank4
  8213  043C  018F               	clrf	15	;volatile
  8214                           
  8215                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
  8216  043D  0190               	clrf	16	;volatile
  8217  043E                     l4097:	
  8218                           
  8219                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
  8220  043E  3004               	movlw	4
  8221  043F  0091               	movwf	17	;volatile
  8222  0440                     l4099:	
  8223                           
  8224                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xF0;
  8225  0440  30F0               	movlw	240
  8226  0441  008D               	movwf	13	;volatile
  8227  0442                     l4101:	
  8228                           
  8229                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xDD;
  8230  0442  30DD               	movlw	221
  8231  0443  008C               	movwf	12	;volatile
  8232  0444                     l4103:	
  8233                           
  8234                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8235  0444  080D               	movf	13,w	;volatile
  8236  0445  00F9               	movwf	_timer1ReloadVal+1	;volatile
  8237  0446  080C               	movf	12,w	;volatile
  8238  0447  00F8               	movwf	_timer1ReloadVal	;volatile
  8239  0448                     l4105:	
  8240                           
  8241                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
  8242  0448  002E               	movlb	14	; select bank14
  8243  0449  1010               	bcf	16,0	;volatile
  8244  044A                     l4107:	
  8245                           
  8246                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
  8247  044A  141A               	bsf	26,0	;volatile
  8248  044B                     l4109:	
  8249                           
  8250                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  8251  044B  301C               	movlw	low _TMR1_DefaultInterruptHandler
  8252  044C  0020               	movlb	0	; select bank0
  8253  044D  00D9               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  8254  044E  3006               	movlw	high _TMR1_DefaultInterruptHandler
  8255  044F  00DA               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  8256  0450  3185  25C1  3184   	fcall	_TMR1_SetInterruptHandler
  8257  0453                     l4111:	
  8258                           
  8259                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x25;
  8260  0453  3025               	movlw	37
  8261  0454  0024               	movlb	4	; select bank4
  8262  0455  008E               	movwf	14	;volatile
  8263  0456                     l401:	
  8264  0456  0008               	return
  8265  0457                     __end_of_TMR1_Initialize:	
  8266                           
  8267                           	psect	text14
  8268  05C1                     __ptext14:	
  8269 ;; *************** function _TMR1_SetInterruptHandler *****************
  8270 ;; Defined at:
  8271 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  8272 ;; Parameters:    Size  Location     Type
  8273 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8274 ;;		 -> h_clock(1), TMR1_DefaultInterruptHandler(1), 
  8275 ;; Auto vars:     Size  Location     Type
  8276 ;;		None
  8277 ;; Return value:  Size  Location     Type
  8278 ;;                  1    wreg      void 
  8279 ;; Registers used:
  8280 ;;		wreg
  8281 ;; Tracked objects:
  8282 ;;		On entry : 0/0
  8283 ;;		On exit  : 0/0
  8284 ;;		Unchanged: 0/0
  8285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8286 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8289 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8290 ;;Total ram usage:        2 bytes
  8291 ;; Hardware stack levels used:    1
  8292 ;; Hardware stack levels required when called:    6
  8293 ;; This function calls:
  8294 ;;		Nothing
  8295 ;; This function is called by:
  8296 ;;		_TMR1_Initialize
  8297 ;;		_main
  8298 ;; This function uses a non-reentrant model
  8299 ;;
  8300                           
  8301                           
  8302                           ;psect for function _TMR1_SetInterruptHandler
  8303  05C1                     _TMR1_SetInterruptHandler:	
  8304  05C1                     l3965:	
  8305                           ;incstack = 0
  8306                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  8307                           
  8308                           
  8309                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  8310  05C1  0020               	movlb	0	; select bank0
  8311  05C2  085A               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  8312  05C3  00C7               	movwf	_TMR1_InterruptHandler+1
  8313  05C4  0859               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  8314  05C5  00C6               	movwf	_TMR1_InterruptHandler
  8315  05C6                     l431:	
  8316  05C6  0008               	return
  8317  05C7                     __end_of_TMR1_SetInterruptHandler:	
  8318                           
  8319                           	psect	text15
  8320  058C                     __ptext15:	
  8321 ;; *************** function _PMD_Initialize *****************
  8322 ;; Defined at:
  8323 ;;		line 72 in file "mcc_generated_files/mcc.c"
  8324 ;; Parameters:    Size  Location     Type
  8325 ;;		None
  8326 ;; Auto vars:     Size  Location     Type
  8327 ;;		None
  8328 ;; Return value:  Size  Location     Type
  8329 ;;                  1    wreg      void 
  8330 ;; Registers used:
  8331 ;;		status,2
  8332 ;; Tracked objects:
  8333 ;;		On entry : 0/0
  8334 ;;		On exit  : 0/0
  8335 ;;		Unchanged: 0/0
  8336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8341 ;;Total ram usage:        0 bytes
  8342 ;; Hardware stack levels used:    1
  8343 ;; Hardware stack levels required when called:    6
  8344 ;; This function calls:
  8345 ;;		Nothing
  8346 ;; This function is called by:
  8347 ;;		_SYSTEM_Initialize
  8348 ;; This function uses a non-reentrant model
  8349 ;;
  8350                           
  8351                           
  8352                           ;psect for function _PMD_Initialize
  8353  058C                     _PMD_Initialize:	
  8354  058C                     l4113:	
  8355                           ;incstack = 0
  8356                           ; Regs used in _PMD_Initialize: [status,2]
  8357                           
  8358                           
  8359                           ;mcc_generated_files/mcc.c: 75:     PMD0 = 0x00;
  8360  058C  002F               	movlb	15	; select bank15
  8361  058D  0196               	clrf	22	;volatile
  8362                           
  8363                           ;mcc_generated_files/mcc.c: 77:     PMD1 = 0x00;
  8364  058E  0197               	clrf	23	;volatile
  8365                           
  8366                           ;mcc_generated_files/mcc.c: 79:     PMD2 = 0x00;
  8367  058F  0198               	clrf	24	;volatile
  8368                           
  8369                           ;mcc_generated_files/mcc.c: 81:     PMD3 = 0x00;
  8370  0590  0199               	clrf	25	;volatile
  8371                           
  8372                           ;mcc_generated_files/mcc.c: 83:     PMD4 = 0x00;
  8373  0591  019A               	clrf	26	;volatile
  8374                           
  8375                           ;mcc_generated_files/mcc.c: 85:     PMD5 = 0x00;
  8376  0592  019B               	clrf	27	;volatile
  8377  0593                     l506:	
  8378  0593  0008               	return
  8379  0594                     __end_of_PMD_Initialize:	
  8380                           
  8381                           	psect	text16
  8382  0258                     __ptext16:	
  8383 ;; *************** function _PIN_MANAGER_Initialize *****************
  8384 ;; Defined at:
  8385 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;		None
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;		None
  8390 ;; Return value:  Size  Location     Type
  8391 ;;                  1    wreg      void 
  8392 ;; Registers used:
  8393 ;;		wreg, status,2
  8394 ;; Tracked objects:
  8395 ;;		On entry : 0/0
  8396 ;;		On exit  : 0/0
  8397 ;;		Unchanged: 0/0
  8398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8403 ;;Total ram usage:        0 bytes
  8404 ;; Hardware stack levels used:    1
  8405 ;; Hardware stack levels required when called:    6
  8406 ;; This function calls:
  8407 ;;		Nothing
  8408 ;; This function is called by:
  8409 ;;		_SYSTEM_Initialize
  8410 ;; This function uses a non-reentrant model
  8411 ;;
  8412                           
  8413                           
  8414                           ;psect for function _PIN_MANAGER_Initialize
  8415  0258                     _PIN_MANAGER_Initialize:	
  8416  0258                     l4115:	
  8417                           ;incstack = 0
  8418                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8419                           
  8420                           
  8421                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  8422  0258  0020               	movlb	0	; select bank0
  8423  0259  019A               	clrf	26	;volatile
  8424                           
  8425                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  8426  025A  0199               	clrf	25	;volatile
  8427                           
  8428                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  8429  025B  0196               	clrf	22	;volatile
  8430                           
  8431                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  8432  025C  0197               	clrf	23	;volatile
  8433                           
  8434                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  8435  025D  0198               	clrf	24	;volatile
  8436  025E                     l4117:	
  8437                           
  8438                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  8439  025E  3007               	movlw	7
  8440  025F  0095               	movwf	21	;volatile
  8441  0260                     l4119:	
  8442                           
  8443                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x6F;
  8444  0260  306F               	movlw	111
  8445  0261  0091               	movwf	17	;volatile
  8446  0262                     l4121:	
  8447                           
  8448                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  8449  0262  30FF               	movlw	255
  8450  0263  0092               	movwf	18	;volatile
  8451  0264                     l4123:	
  8452                           
  8453                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  8454  0264  30FF               	movlw	255
  8455  0265  0093               	movwf	19	;volatile
  8456  0266                     l4125:	
  8457                           
  8458                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  8459  0266  30FF               	movlw	255
  8460  0267  0094               	movwf	20	;volatile
  8461  0268                     l4127:	
  8462                           
  8463                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  8464  0268  30FF               	movlw	255
  8465  0269  003E               	movlb	30	; select bank30
  8466  026A  00D9               	movwf	89	;volatile
  8467  026B                     l4129:	
  8468                           
  8469                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xE7;
  8470  026B  30E7               	movlw	231
  8471  026C  00CE               	movwf	78	;volatile
  8472  026D                     l4131:	
  8473                           
  8474                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xFF;
  8475  026D  30FF               	movlw	255
  8476  026E  00C3               	movwf	67	;volatile
  8477  026F                     l4133:	
  8478                           
  8479                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  8480  026F  3007               	movlw	7
  8481  0270  00E4               	movwf	100	;volatile
  8482  0271                     l4135:	
  8483                           
  8484                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  8485  0271  30FF               	movlw	255
  8486  0272  00B8               	movwf	56	;volatile
  8487                           
  8488                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  8489  0273  01DA               	clrf	90	;volatile
  8490                           
  8491                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  8492  0274  01E5               	clrf	101	;volatile
  8493                           
  8494                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  8495  0275  01C4               	clrf	68	;volatile
  8496                           
  8497                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  8498  0276  01B9               	clrf	57	;volatile
  8499                           
  8500                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  8501  0277  01CF               	clrf	79	;volatile
  8502                           
  8503                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  8504  0278  01E6               	clrf	102	;volatile
  8505                           
  8506                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  8507  0279  01BA               	clrf	58	;volatile
  8508                           
  8509                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  8510  027A  01C5               	clrf	69	;volatile
  8511                           
  8512                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  8513  027B  01D0               	clrf	80	;volatile
  8514                           
  8515                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  8516  027C  01DB               	clrf	91	;volatile
  8517  027D                     l4137:	
  8518                           
  8519                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  8520  027D  30FF               	movlw	255
  8521  027E  00BB               	movwf	59	;volatile
  8522  027F                     l4139:	
  8523                           
  8524                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  8525  027F  30FF               	movlw	255
  8526  0280  00C6               	movwf	70	;volatile
  8527  0281                     l4141:	
  8528                           
  8529                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  8530  0281  30FF               	movlw	255
  8531  0282  00D1               	movwf	81	;volatile
  8532  0283                     l4143:	
  8533                           
  8534                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  8535  0283  30FF               	movlw	255
  8536  0284  00DC               	movwf	92	;volatile
  8537  0285                     l4145:	
  8538                           
  8539                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  8540  0285  3007               	movlw	7
  8541  0286  00E7               	movwf	103	;volatile
  8542  0287                     l4147:	
  8543                           
  8544                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  8545  0287  30FF               	movlw	255
  8546  0288  00BC               	movwf	60	;volatile
  8547  0289                     l4149:	
  8548                           
  8549                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  8550  0289  30FF               	movlw	255
  8551  028A  00C7               	movwf	71	;volatile
  8552  028B                     l4151:	
  8553                           
  8554                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  8555  028B  30FF               	movlw	255
  8556  028C  00D2               	movwf	82	;volatile
  8557  028D                     l4153:	
  8558                           
  8559                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  8560  028D  30FF               	movlw	255
  8561  028E  00DD               	movwf	93	;volatile
  8562  028F                     l4155:	
  8563                           
  8564                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
  8565  028F  3007               	movlw	7
  8566  0290  00E8               	movwf	104	;volatile
  8567  0291                     l4157:	
  8568                           
  8569                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
  8570  0291  3013               	movlw	19
  8571  0292  003D               	movlb	29	; select bank29
  8572  0293  00C5               	movwf	69	;volatile
  8573  0294                     l4159:	
  8574                           
  8575                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x14;
  8576  0294  3014               	movlw	20
  8577  0295  003E               	movlb	30	; select bank30
  8578  0296  00A3               	movwf	35	;volatile
  8579  0297                     l4161:	
  8580                           
  8581                           ;mcc_generated_files/pin_manager.c: 129:     RC4PPS = 0x15;
  8582  0297  3015               	movlw	21
  8583  0298  00A4               	movwf	36	;volatile
  8584  0299                     l4163:	
  8585                           
  8586                           ;mcc_generated_files/pin_manager.c: 130:     SSP1DATPPS = 0x14;
  8587  0299  3014               	movlw	20
  8588  029A  003D               	movlb	29	; select bank29
  8589  029B  00C6               	movwf	70	;volatile
  8590  029C                     l587:	
  8591  029C  0008               	return
  8592  029D                     __end_of_PIN_MANAGER_Initialize:	
  8593                           
  8594                           	psect	text17
  8595  0594                     __ptext17:	
  8596 ;; *************** function _OSCILLATOR_Initialize *****************
  8597 ;; Defined at:
  8598 ;;		line 58 in file "mcc_generated_files/mcc.c"
  8599 ;; Parameters:    Size  Location     Type
  8600 ;;		None
  8601 ;; Auto vars:     Size  Location     Type
  8602 ;;		None
  8603 ;; Return value:  Size  Location     Type
  8604 ;;                  1    wreg      void 
  8605 ;; Registers used:
  8606 ;;		wreg, status,2
  8607 ;; Tracked objects:
  8608 ;;		On entry : 0/0
  8609 ;;		On exit  : 0/0
  8610 ;;		Unchanged: 0/0
  8611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8616 ;;Total ram usage:        0 bytes
  8617 ;; Hardware stack levels used:    1
  8618 ;; Hardware stack levels required when called:    6
  8619 ;; This function calls:
  8620 ;;		Nothing
  8621 ;; This function is called by:
  8622 ;;		_SYSTEM_Initialize
  8623 ;; This function uses a non-reentrant model
  8624 ;;
  8625                           
  8626                           
  8627                           ;psect for function _OSCILLATOR_Initialize
  8628  0594                     _OSCILLATOR_Initialize:	
  8629  0594                     l4165:	
  8630                           ;incstack = 0
  8631                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8632                           
  8633                           
  8634                           ;mcc_generated_files/mcc.c: 61:     OSCCON1 = 0x60;
  8635  0594  3060               	movlw	96
  8636  0595  0031               	movlb	17	; select bank17
  8637  0596  008D               	movwf	13	;volatile
  8638  0597                     l4167:	
  8639                           
  8640                           ;mcc_generated_files/mcc.c: 63:     OSCCON3 = 0x00;
  8641  0597  018F               	clrf	15	;volatile
  8642  0598                     l4169:	
  8643                           
  8644                           ;mcc_generated_files/mcc.c: 65:     OSCEN = 0x00;
  8645  0598  0191               	clrf	17	;volatile
  8646  0599                     l4171:	
  8647                           
  8648                           ;mcc_generated_files/mcc.c: 67:     OSCFRQ = 0x00;
  8649  0599  0193               	clrf	19	;volatile
  8650  059A                     l4173:	
  8651                           
  8652                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
  8653  059A  0192               	clrf	18	;volatile
  8654  059B                     l503:	
  8655  059B  0008               	return
  8656  059C                     __end_of_OSCILLATOR_Initialize:	
  8657                           
  8658                           	psect	intentry
  8659  0004                     __pintentry:	
  8660 ;; *************** function _INTERRUPT_InterruptManager *****************
  8661 ;; Defined at:
  8662 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8663 ;; Parameters:    Size  Location     Type
  8664 ;;		None
  8665 ;; Auto vars:     Size  Location     Type
  8666 ;;		None
  8667 ;; Return value:  Size  Location     Type
  8668 ;;                  1    wreg      void 
  8669 ;; Registers used:
  8670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8671 ;; Tracked objects:
  8672 ;;		On entry : 0/0
  8673 ;;		On exit  : 0/0
  8674 ;;		Unchanged: 0/0
  8675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8680 ;;Total ram usage:        0 bytes
  8681 ;; Hardware stack levels used:    1
  8682 ;; Hardware stack levels required when called:    5
  8683 ;; This function calls:
  8684 ;;		Absolute function
  8685 ;;		_TMR1_ISR
  8686 ;;		_i2c_ISR
  8687 ;;		_i2c_busCollisionISR
  8688 ;; This function is called by:
  8689 ;;		Interrupt level 1
  8690 ;; This function uses a non-reentrant model
  8691 ;;
  8692                           
  8693  0004                     _INTERRUPT_InterruptManager:	
  8694                           
  8695                           ;incstack = 0
  8696  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8697                           
  8698                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8699  0005  3180               	pagesel	$
  8700  0006                     i1l4401:	
  8701                           
  8702                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  8703  0006  1F0B               	btfss	11,6	;volatile
  8704  0007  2809               	goto	u214_21
  8705  0008  280A               	goto	u214_20
  8706  0009                     u214_21:	
  8707  0009  2835               	goto	i1l463
  8708  000A                     u214_20:	
  8709  000A                     i1l4403:	
  8710                           
  8711                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
  8712  000A  002E               	movlb	14	; select bank14
  8713  000B  1C99               	btfss	25,1	;volatile
  8714  000C  280E               	goto	u215_21
  8715  000D  280F               	goto	u215_20
  8716  000E                     u215_21:	
  8717  000E  281A               	goto	i1l456
  8718  000F                     u215_20:	
  8719  000F                     i1l4405:	
  8720  000F  1C8F               	btfss	15,1	;volatile
  8721  0010  2812               	goto	u216_21
  8722  0011  2813               	goto	u216_20
  8723  0012                     u216_21:	
  8724  0012  281A               	goto	i1l456
  8725  0013                     u216_20:	
  8726  0013                     i1l4407:	
  8727                           
  8728                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             i2c1_driver_busCollisionISR();
  8729  0013  0020               	movlb	0	; select bank0
  8730  0014  084B               	movf	_i2c1_driver_busCollisionISR+1,w
  8731  0015  008A               	movwf	10
  8732  0016  084A               	movf	_i2c1_driver_busCollisionISR,w
  8733  0017  000A               	callw
  8734  0018  3180               	pagesel	$
  8735                           
  8736                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  8737  0019  2835               	goto	i1l463
  8738  001A                     i1l456:	
  8739                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
  8740                           
  8741  001A  1C19               	btfss	25,0	;volatile
  8742  001B  281D               	goto	u217_21
  8743  001C  281E               	goto	u217_20
  8744  001D                     u217_21:	
  8745  001D  2829               	goto	i1l458
  8746  001E                     u217_20:	
  8747  001E                     i1l4409:	
  8748  001E  1C0F               	btfss	15,0	;volatile
  8749  001F  2821               	goto	u218_21
  8750  0020  2822               	goto	u218_20
  8751  0021                     u218_21:	
  8752  0021  2829               	goto	i1l458
  8753  0022                     u218_20:	
  8754  0022                     i1l4411:	
  8755                           
  8756                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             i2c1_driver_i2cISR();
  8757  0022  0020               	movlb	0	; select bank0
  8758  0023  0849               	movf	_i2c1_driver_i2cISR+1,w
  8759  0024  008A               	movwf	10
  8760  0025  0848               	movf	_i2c1_driver_i2cISR,w
  8761  0026  000A               	callw
  8762  0027  3180               	pagesel	$
  8763                           
  8764                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  8765  0028  2835               	goto	i1l463
  8766  0029                     i1l458:	
  8767                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE4bits.TMR1IE == 1 && PI
      +                          R4bits.TMR1IF == 1)
  8768                           
  8769  0029  1C1A               	btfss	26,0	;volatile
  8770  002A  282C               	goto	u219_21
  8771  002B  282D               	goto	u219_20
  8772  002C                     u219_21:	
  8773  002C  2835               	goto	i1l457
  8774  002D                     u219_20:	
  8775  002D                     i1l4413:	
  8776  002D  1C10               	btfss	16,0	;volatile
  8777  002E  2830               	goto	u220_21
  8778  002F  2831               	goto	u220_20
  8779  0030                     u220_21:	
  8780  0030  2835               	goto	i1l457
  8781  0031                     u220_20:	
  8782  0031                     i1l4415:	
  8783                           
  8784                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR1_ISR();
  8785  0031  3184  24B5  3180   	fcall	_TMR1_ISR
  8786                           
  8787                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  8788  0034  2835               	goto	i1l463
  8789  0035                     i1l457:	
  8790  0035                     i1l463:	
  8791                           ;mcc_generated_files/interrupt_manager.c: 73:     }
  8792                           
  8793  0035  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8794  0036  0009               	retfie
  8795  0037                     __end_of_INTERRUPT_InterruptManager:	
  8796                           
  8797                           	psect	text19
  8798  05F4                     __ptext19:	
  8799 ;; *************** function _i2c_busCollisionISR *****************
  8800 ;; Defined at:
  8801 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;		None
  8804 ;; Auto vars:     Size  Location     Type
  8805 ;;		None
  8806 ;; Return value:  Size  Location     Type
  8807 ;;                  1    wreg      void 
  8808 ;; Registers used:
  8809 ;;		status,2, status,0, pclath, cstack
  8810 ;; Tracked objects:
  8811 ;;		On entry : 0/0
  8812 ;;		On exit  : 0/0
  8813 ;;		Unchanged: 0/0
  8814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8819 ;;Total ram usage:        0 bytes
  8820 ;; Hardware stack levels used:    1
  8821 ;; Hardware stack levels required when called:    1
  8822 ;; This function calls:
  8823 ;;		_i2c1_driver_clearBusCollision
  8824 ;; This function is called by:
  8825 ;;		_i2c_open
  8826 ;;		_INTERRUPT_InterruptManager
  8827 ;; This function uses a non-reentrant model
  8828 ;;
  8829                           
  8830                           
  8831                           ;psect for function _i2c_busCollisionISR
  8832  05F4                     _i2c_busCollisionISR:	
  8833  05F4                     i1l3529:	
  8834                           ;incstack = 0
  8835                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
  8836                           
  8837                           
  8838                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
  8839  05F4  3186  2600  3185   	fcall	_i2c1_driver_clearBusCollision
  8840  05F7                     i1l250:	
  8841  05F7  0008               	return
  8842  05F8                     __end_of_i2c_busCollisionISR:	
  8843                           
  8844                           	psect	text20
  8845  0600                     __ptext20:	
  8846 ;; *************** function _i2c1_driver_clearBusCollision *****************
  8847 ;; Defined at:
  8848 ;;		line 254 in file "mcc_generated_files/i2c1_driver.c"
  8849 ;; Parameters:    Size  Location     Type
  8850 ;;		None
  8851 ;; Auto vars:     Size  Location     Type
  8852 ;;		None
  8853 ;; Return value:  Size  Location     Type
  8854 ;;                  1    wreg      void 
  8855 ;; Registers used:
  8856 ;;		None
  8857 ;; Tracked objects:
  8858 ;;		On entry : 0/0
  8859 ;;		On exit  : 0/0
  8860 ;;		Unchanged: 0/0
  8861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8866 ;;Total ram usage:        0 bytes
  8867 ;; Hardware stack levels used:    1
  8868 ;; This function calls:
  8869 ;;		Nothing
  8870 ;; This function is called by:
  8871 ;;		_i2c_busCollisionISR
  8872 ;; This function uses a non-reentrant model
  8873 ;;
  8874                           
  8875                           
  8876                           ;psect for function _i2c1_driver_clearBusCollision
  8877  0600                     _i2c1_driver_clearBusCollision:	
  8878  0600                     i1l3291:	
  8879                           ;incstack = 0
  8880                           ; Regs used in _i2c1_driver_clearBusCollision: []
  8881                           
  8882                           
  8883                           ;mcc_generated_files/i2c1_driver.c: 256:     PIR3bits.BCL1IF = 0;
  8884  0600  002E               	movlb	14	; select bank14
  8885  0601  108F               	bcf	15,1	;volatile
  8886  0602                     i1l729:	
  8887  0602  0008               	return
  8888  0603                     __end_of_i2c1_driver_clearBusCollision:	
  8889                           
  8890                           	psect	text21
  8891  035F                     __ptext21:	
  8892 ;; *************** function _i2c_ISR *****************
  8893 ;; Defined at:
  8894 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
  8895 ;; Parameters:    Size  Location     Type
  8896 ;;		None
  8897 ;; Auto vars:     Size  Location     Type
  8898 ;;		None
  8899 ;; Return value:  Size  Location     Type
  8900 ;;                  1    wreg      void 
  8901 ;; Registers used:
  8902 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8903 ;; Tracked objects:
  8904 ;;		On entry : 0/0
  8905 ;;		On exit  : 0/0
  8906 ;;		Unchanged: 0/0
  8907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8910 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8911 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8912 ;;Total ram usage:        3 bytes
  8913 ;; Hardware stack levels used:    1
  8914 ;; Hardware stack levels required when called:    4
  8915 ;; This function calls:
  8916 ;;		_do_I2C_DO_ACK
  8917 ;;		_do_I2C_DO_ADDRESS_NACK
  8918 ;;		_do_I2C_DO_NACK_RESTART
  8919 ;;		_do_I2C_DO_NACK_STOP
  8920 ;;		_do_I2C_IDLE
  8921 ;;		_do_I2C_RCEN
  8922 ;;		_do_I2C_RESET
  8923 ;;		_do_I2C_RX
  8924 ;;		_do_I2C_SEND_ADR_READ
  8925 ;;		_do_I2C_SEND_ADR_WRITE
  8926 ;;		_do_I2C_SEND_RESTART
  8927 ;;		_do_I2C_SEND_RESTART_READ
  8928 ;;		_do_I2C_SEND_RESTART_WRITE
  8929 ;;		_do_I2C_SEND_STOP
  8930 ;;		_do_I2C_TX
  8931 ;;		_do_I2C_TX_EMPTY
  8932 ;;		_i2c1_driver_isNACK
  8933 ;;		_mssp1_clearIRQ
  8934 ;; This function is called by:
  8935 ;;		_i2c_open
  8936 ;;		_i2c_poller
  8937 ;;		_INTERRUPT_InterruptManager
  8938 ;; This function uses a non-reentrant model
  8939 ;;
  8940                           
  8941                           
  8942                           ;psect for function _i2c_ISR
  8943  035F                     _i2c_ISR:	
  8944  035F                     i1l4253:	
  8945                           ;incstack = 0
  8946                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8947                           
  8948                           
  8949                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
  8950  035F  3186  2603  3183   	fcall	_mssp1_clearIRQ
  8951  0362                     i1l4255:	
  8952                           
  8953                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
  8954  0362  0020               	movlb	0	; select bank0
  8955  0363  1DA0               	btfss	_i2c_status,3
  8956  0364  2B66               	goto	u194_21
  8957  0365  2B67               	goto	u194_20
  8958  0366                     u194_21:	
  8959  0366  2B73               	goto	i1l4261
  8960  0367                     u194_20:	
  8961  0367                     i1l4257:	
  8962  0367  3185  25AC  3183   	fcall	_i2c1_driver_isNACK
  8963  036A  1C03               	btfss	3,0
  8964  036B  2B6D               	goto	u195_21
  8965  036C  2B6E               	goto	u195_20
  8966  036D                     u195_21:	
  8967  036D  2B73               	goto	i1l4261
  8968  036E                     u195_20:	
  8969  036E                     i1l4259:	
  8970                           
  8971                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
  8972  036E  300F               	movlw	15
  8973  036F  00F4               	movwf	??_i2c_ISR
  8974  0370  0874               	movf	??_i2c_ISR,w
  8975  0371  0020               	movlb	0	; select bank0
  8976  0372  00A9               	movwf	_i2c_status+9
  8977  0373                     i1l4261:	
  8978                           
  8979                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
  8980  0373  0020               	movlb	0	; select bank0
  8981  0374  0829               	movf	_i2c_status+9,w
  8982  0375  00F4               	movwf	??_i2c_ISR
  8983  0376  01F5               	clrf	??_i2c_ISR+1
  8984  0377  35F4               	lslf	??_i2c_ISR,f
  8985  0378  0DF5               	rlf	??_i2c_ISR+1,f
  8986  0379  301B               	movlw	low (_fsmStateTable| (0+32768))
  8987  037A  0774               	addwf	??_i2c_ISR,w
  8988  037B  0084               	movwf	4
  8989  037C  3084               	movlw	high (_fsmStateTable| (0+32768))
  8990  037D  3D75               	addwfc	??_i2c_ISR+1,w
  8991  037E  0085               	movwf	5
  8992  037F  3F01               	moviw [1]fsr0
  8993  0380  008A               	movwf	10
  8994  0381  3F00               	moviw [0]fsr0
  8995  0382  000A               	callw
  8996  0383  3183               	pagesel	$
  8997  0384  00F6               	movwf	??_i2c_ISR+2
  8998  0385  0876               	movf	??_i2c_ISR+2,w
  8999  0386  0020               	movlb	0	; select bank0
  9000  0387  00A9               	movwf	_i2c_status+9
  9001  0388                     i1l247:	
  9002  0388  0008               	return
  9003  0389                     __end_of_i2c_ISR:	
  9004                           
  9005                           	psect	text22
  9006  0603                     __ptext22:	
  9007 ;; *************** function _mssp1_clearIRQ *****************
  9008 ;; Defined at:
  9009 ;;		line 54 in file "mcc_generated_files/i2c1_driver.c"
  9010 ;; Parameters:    Size  Location     Type
  9011 ;;		None
  9012 ;; Auto vars:     Size  Location     Type
  9013 ;;		None
  9014 ;; Return value:  Size  Location     Type
  9015 ;;                  1    wreg      void 
  9016 ;; Registers used:
  9017 ;;		None
  9018 ;; Tracked objects:
  9019 ;;		On entry : 0/0
  9020 ;;		On exit  : 0/0
  9021 ;;		Unchanged: 0/0
  9022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9027 ;;Total ram usage:        0 bytes
  9028 ;; Hardware stack levels used:    1
  9029 ;; This function calls:
  9030 ;;		Nothing
  9031 ;; This function is called by:
  9032 ;;		_i2c_ISR
  9033 ;;		_i2c_open
  9034 ;;		_i2c_close
  9035 ;; This function uses a non-reentrant model
  9036 ;;
  9037                           
  9038                           
  9039                           ;psect for function _mssp1_clearIRQ
  9040  0603                     _mssp1_clearIRQ:	
  9041  0603                     i1l3113:	
  9042                           ;incstack = 0
  9043                           ; Regs used in _mssp1_clearIRQ: []
  9044                           
  9045                           
  9046                           ;mcc_generated_files/i2c1_driver.c: 56:         SSP1CON1 = 0x28;
  9047  0603  002E               	movlb	14	; select bank14
  9048  0604  100F               	bcf	15,0	;volatile
  9049  0605                     i1l633:	
  9050  0605  0008               	return
  9051  0606                     __end_of_mssp1_clearIRQ:	
  9052                           
  9053                           	psect	text23
  9054  020E                     __ptext23:	
  9055 ;; *************** function _do_I2C_RX *****************
  9056 ;; Defined at:
  9057 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
  9058 ;; Parameters:    Size  Location     Type
  9059 ;;		None
  9060 ;; Auto vars:     Size  Location     Type
  9061 ;;		None
  9062 ;; Return value:  Size  Location     Type
  9063 ;;                  1    wreg      enum E12722
  9064 ;; Registers used:
  9065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9066 ;; Tracked objects:
  9067 ;;		On entry : 0/0
  9068 ;;		On exit  : 0/0
  9069 ;;		Unchanged: 0/0
  9070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9073 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9074 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9075 ;;Total ram usage:        3 bytes
  9076 ;; Hardware stack levels used:    1
  9077 ;; Hardware stack levels required when called:    3
  9078 ;; This function calls:
  9079 ;;		Absolute function
  9080 ;;		_do_I2C_DO_NACK_RESTART
  9081 ;;		_do_I2C_DO_NACK_STOP
  9082 ;;		_i2c1_driver_getRXData
  9083 ;;		_i2c1_driver_sendACK
  9084 ;;		_i2c_restartWrite
  9085 ;;		_rd1RegCompleteHandler
  9086 ;;		_rd2RegCompleteHandler
  9087 ;;		_rdBlkRegCompleteHandler
  9088 ;;		_returnReset
  9089 ;;		_returnStop
  9090 ;;		_wr1RegCompleteHandler
  9091 ;;		_wr2RegCompleteHandler
  9092 ;; This function is called by:
  9093 ;;		_i2c_ISR
  9094 ;; This function uses a non-reentrant model
  9095 ;;
  9096                           
  9097                           
  9098                           ;psect for function _do_I2C_RX
  9099  020E                     _do_I2C_RX:	
  9100  020E                     i1l4041:	
  9101                           ;incstack = 0
  9102                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9103                           
  9104                           
  9105                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
  9106  020E  3186  2609  3182   	fcall	_i2c1_driver_getRXData
  9107  0211  00F0               	movwf	??_do_I2C_RX
  9108  0212  0020               	movlb	0	; select bank0
  9109  0213  0822               	movf	low ((_i2c_status| 0+2)),w
  9110  0214  0086               	movwf	6
  9111  0215  0187               	clrf	7
  9112  0216  0870               	movf	??_do_I2C_RX,w
  9113  0217  0081               	movwf	1
  9114  0218                     i1l4043:	
  9115  0218  3001               	movlw	1
  9116  0219  00F0               	movwf	??_do_I2C_RX
  9117  021A  0870               	movf	??_do_I2C_RX,w
  9118  021B  07A2               	addwf	low ((_i2c_status| 0+2)),f
  9119  021C                     i1l4045:	
  9120                           
  9121                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
  9122  021C  3001               	movlw	1
  9123  021D  02A3               	subwf	_i2c_status+3,f
  9124  021E  3000               	movlw	0
  9125  021F  3BA4               	subwfb	_i2c_status+4,f
  9126  0220  0823               	movf	_i2c_status+3,w
  9127  0221  0424               	iorwf	_i2c_status+4,w
  9128  0222  1903               	btfsc	3,2
  9129  0223  2A25               	goto	u190_21
  9130  0224  2A26               	goto	u190_20
  9131  0225                     u190_21:	
  9132  0225  2A2B               	goto	i1l222
  9133  0226                     u190_20:	
  9134  0226                     i1l4047:	
  9135                           
  9136                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
  9137  0226  3185  25FC  3182   	fcall	_i2c1_driver_sendACK
  9138  0229                     i1l4049:	
  9139                           
  9140                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
  9141  0229  3005               	movlw	5
  9142  022A  2A57               	goto	i1l223
  9143  022B                     i1l222:	
  9144                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
  9145                           
  9146                           
  9147                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
  9148  022B  1520               	bsf	_i2c_status,2
  9149                           
  9150                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
  9151  022C  2A35               	goto	i1l4065
  9152  022D                     i1l4055:	
  9153                           
  9154                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
  9155  022D  3185  25C7  3182   	fcall	_do_I2C_DO_NACK_RESTART
  9156  0230  2A57               	goto	i1l223
  9157  0231                     i1l4059:	
  9158                           
  9159                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
  9160  0231  3185  25CC  3182   	fcall	_do_I2C_DO_NACK_STOP
  9161  0234  2A57               	goto	i1l223
  9162  0235                     i1l4065:	
  9163  0235  0837               	movf	low ((_i2c_status| 0+23)),w
  9164  0236  00F0               	movwf	??_do_I2C_RX
  9165  0237  0870               	movf	??_do_I2C_RX,w
  9166  0238  00DA               	movwf	rdBlkRegCompleteHandler@p
  9167  0239  300B               	movlw	11
  9168  023A  3E20               	addlw	(low (_i2c_status| 0))& (0+255)
  9169  023B  0086               	movwf	6
  9170  023C  0187               	clrf	7
  9171  023D  3F41               	moviw [1]fsr1
  9172  023E  008A               	movwf	10
  9173  023F  3F40               	moviw [0]fsr1
  9174  0240  000A               	callw
  9175  0241  3182               	pagesel	$
  9176  0242  00F1               	movwf	??_do_I2C_RX+1
  9177  0243  01F2               	clrf	??_do_I2C_RX+2
  9178                           
  9179                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9180                           ; Switch size 1, requested type "simple"
  9181                           ; Number of cases is 1, Range of values is 0 to 0
  9182                           ; switch strategies available:
  9183                           ; Name         Instructions Cycles
  9184                           ; simple_byte            4     3 (average)
  9185                           ; direct_byte            8     6 (fixed)
  9186                           ; jumptable            260     6 (fixed)
  9187                           ;	Chosen strategy is simple_byte
  9188  0244  0872               	movf	??_do_I2C_RX+2,w
  9189  0245  3A00               	xorlw	0	; case 0
  9190  0246  1903               	skipnz
  9191  0247  2A49               	goto	i1l4593
  9192  0248  2A31               	goto	i1l4059
  9193  0249                     i1l4593:	
  9194                           
  9195                           ; Switch size 1, requested type "simple"
  9196                           ; Number of cases is 4, Range of values is 1 to 4
  9197                           ; switch strategies available:
  9198                           ; Name         Instructions Cycles
  9199                           ; simple_byte           13     7 (average)
  9200                           ; direct_byte           17     9 (fixed)
  9201                           ; jumptable            263     9 (fixed)
  9202                           ;	Chosen strategy is simple_byte
  9203  0249  0871               	movf	??_do_I2C_RX+1,w
  9204  024A  3A01               	xorlw	1	; case 1
  9205  024B  1903               	skipnz
  9206  024C  2A31               	goto	i1l4059
  9207  024D  3A03               	xorlw	3	; case 2
  9208  024E  1903               	skipnz
  9209  024F  2A2D               	goto	i1l4055
  9210  0250  3A01               	xorlw	1	; case 3
  9211  0251  1903               	skipnz
  9212  0252  2A2D               	goto	i1l4055
  9213  0253  3A07               	xorlw	7	; case 4
  9214  0254  1903               	skipnz
  9215  0255  2A31               	goto	i1l4059
  9216  0256  2A31               	goto	i1l4059
  9217  0257                     i1l223:	
  9218  0257  0008               	return
  9219  0258                     __end_of_do_I2C_RX:	
  9220                           
  9221                           	psect	text24
  9222  016D                     __ptext24:	
  9223 ;; *************** function _do_I2C_TX *****************
  9224 ;; Defined at:
  9225 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
  9226 ;; Parameters:    Size  Location     Type
  9227 ;;		None
  9228 ;; Auto vars:     Size  Location     Type
  9229 ;;		None
  9230 ;; Return value:  Size  Location     Type
  9231 ;;                  1    wreg      enum E12722
  9232 ;; Registers used:
  9233 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9234 ;; Tracked objects:
  9235 ;;		On entry : 0/0
  9236 ;;		On exit  : 0/0
  9237 ;;		Unchanged: 0/0
  9238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9241 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9242 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9243 ;;Total ram usage:        3 bytes
  9244 ;; Hardware stack levels used:    1
  9245 ;; Hardware stack levels required when called:    3
  9246 ;; This function calls:
  9247 ;;		Absolute function
  9248 ;;		_do_I2C_SEND_RESTART_READ
  9249 ;;		_do_I2C_SEND_RESTART_WRITE
  9250 ;;		_do_I2C_SEND_STOP
  9251 ;;		_i2c1_driver_TXData
  9252 ;;		_i2c1_driver_isNACK
  9253 ;;		_i2c_restartWrite
  9254 ;;		_rd1RegCompleteHandler
  9255 ;;		_rd2RegCompleteHandler
  9256 ;;		_rdBlkRegCompleteHandler
  9257 ;;		_returnReset
  9258 ;;		_returnStop
  9259 ;;		_wr1RegCompleteHandler
  9260 ;;		_wr2RegCompleteHandler
  9261 ;; This function is called by:
  9262 ;;		_i2c_ISR
  9263 ;; This function uses a non-reentrant model
  9264 ;;
  9265                           
  9266                           
  9267                           ;psect for function _do_I2C_TX
  9268  016D                     _do_I2C_TX:	
  9269  016D                     i1l4007:	
  9270                           ;incstack = 0
  9271                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9272                           
  9273                           
  9274                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
  9275  016D  3185  25AC  3181   	fcall	_i2c1_driver_isNACK
  9276  0170  1C03               	btfss	3,0
  9277  0171  2973               	goto	u188_21
  9278  0172  2974               	goto	u188_20
  9279  0173                     u188_21:	
  9280  0173  29A4               	goto	i1l206
  9281  0174                     u188_20:	
  9282  0174  2981               	goto	i1l4025
  9283  0175                     i1l4011:	
  9284                           
  9285                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
  9286  0175  3185  25E5  3181   	fcall	_do_I2C_SEND_RESTART_READ
  9287  0178  29C0               	goto	i1l209
  9288  0179                     i1l4015:	
  9289                           
  9290                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
  9291  0179  3185  25E0  3181   	fcall	_do_I2C_SEND_RESTART_WRITE
  9292  017C  29C0               	goto	i1l209
  9293  017D                     i1l4019:	
  9294                           
  9295                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
  9296  017D  3185  25D6  3181   	fcall	_do_I2C_SEND_STOP
  9297  0180  29C0               	goto	i1l209
  9298  0181                     i1l4025:	
  9299  0181  0020               	movlb	0	; select bank0
  9300  0182  083A               	movf	low ((_i2c_status| 0+26)),w
  9301  0183  00F1               	movwf	??_do_I2C_TX
  9302  0184  0871               	movf	??_do_I2C_TX,w
  9303  0185  00DA               	movwf	rdBlkRegCompleteHandler@p
  9304  0186  3011               	movlw	17
  9305  0187  3E20               	addlw	(low (_i2c_status| 0))& (0+255)
  9306  0188  0086               	movwf	6
  9307  0189  0187               	clrf	7
  9308  018A  3F41               	moviw [1]fsr1
  9309  018B  008A               	movwf	10
  9310  018C  3F40               	moviw [0]fsr1
  9311  018D  000A               	callw
  9312  018E  3181               	pagesel	$
  9313  018F  00F2               	movwf	??_do_I2C_TX+1
  9314  0190  01F3               	clrf	??_do_I2C_TX+2
  9315                           
  9316                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9317                           ; Switch size 1, requested type "simple"
  9318                           ; Number of cases is 1, Range of values is 0 to 0
  9319                           ; switch strategies available:
  9320                           ; Name         Instructions Cycles
  9321                           ; simple_byte            4     3 (average)
  9322                           ; direct_byte            8     6 (fixed)
  9323                           ; jumptable            260     6 (fixed)
  9324                           ;	Chosen strategy is simple_byte
  9325  0191  0873               	movf	??_do_I2C_TX+2,w
  9326  0192  3A00               	xorlw	0	; case 0
  9327  0193  1903               	skipnz
  9328  0194  2996               	goto	i1l4595
  9329  0195  297D               	goto	i1l4019
  9330  0196                     i1l4595:	
  9331                           
  9332                           ; Switch size 1, requested type "simple"
  9333                           ; Number of cases is 4, Range of values is 1 to 4
  9334                           ; switch strategies available:
  9335                           ; Name         Instructions Cycles
  9336                           ; simple_byte           13     7 (average)
  9337                           ; direct_byte           17     9 (fixed)
  9338                           ; jumptable            263     9 (fixed)
  9339                           ;	Chosen strategy is simple_byte
  9340  0196  0872               	movf	??_do_I2C_TX+1,w
  9341  0197  3A01               	xorlw	1	; case 1
  9342  0198  1903               	skipnz
  9343  0199  297D               	goto	i1l4019
  9344  019A  3A03               	xorlw	3	; case 2
  9345  019B  1903               	skipnz
  9346  019C  2975               	goto	i1l4011
  9347  019D  3A01               	xorlw	1	; case 3
  9348  019E  1903               	skipnz
  9349  019F  2979               	goto	i1l4015
  9350  01A0  3A07               	xorlw	7	; case 4
  9351  01A1  1903               	skipnz
  9352  01A2  297D               	goto	i1l4019
  9353  01A3  297D               	goto	i1l4019
  9354  01A4                     i1l206:	
  9355                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
  9356                           
  9357                           
  9358                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
  9359  01A4  0020               	movlb	0	; select bank0
  9360  01A5  11A0               	bcf	_i2c_status,3
  9361  01A6                     i1l4027:	
  9362                           
  9363                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
  9364  01A6  3002               	movlw	2
  9365  01A7  3E20               	addlw	(low (_i2c_status| 0))& (0+255)
  9366  01A8  0086               	movwf	6
  9367  01A9  0187               	clrf	7
  9368  01AA  3F40               	moviw [0]fsr1
  9369  01AB  0084               	movwf	4
  9370  01AC  0185               	clrf	5
  9371  01AD  0A81               	incf	1,f
  9372  01AE  0800               	movf	0,w
  9373  01AF  3185  25EF  3181   	fcall	_i2c1_driver_TXData
  9374  01B2                     i1l4029:	
  9375                           
  9376                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
  9377  01B2  3001               	movlw	1
  9378  01B3  0020               	movlb	0	; select bank0
  9379  01B4  02A3               	subwf	_i2c_status+3,f
  9380  01B5  3000               	movlw	0
  9381  01B6  3BA4               	subwfb	_i2c_status+4,f
  9382  01B7  0823               	movf	_i2c_status+3,w
  9383  01B8  0424               	iorwf	_i2c_status+4,w
  9384  01B9  1D03               	btfss	3,2
  9385  01BA  29BC               	goto	u189_21
  9386  01BB  29BD               	goto	u189_20
  9387  01BC                     u189_21:	
  9388  01BC  29BF               	goto	i1l4033
  9389  01BD                     u189_20:	
  9390  01BD                     i1l4031:	
  9391  01BD  3006               	movlw	6
  9392  01BE  29C0               	goto	i1l209
  9393  01BF                     i1l4033:	
  9394  01BF  3003               	movlw	3
  9395  01C0                     i1l209:	
  9396  01C0  0008               	return
  9397  01C1                     __end_of_do_I2C_TX:	
  9398                           
  9399                           	psect	text25
  9400  0333                     __ptext25:	
  9401 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
  9402 ;; Defined at:
  9403 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
  9404 ;; Parameters:    Size  Location     Type
  9405 ;;		None
  9406 ;; Auto vars:     Size  Location     Type
  9407 ;;		None
  9408 ;; Return value:  Size  Location     Type
  9409 ;;                  1    wreg      enum E12722
  9410 ;; Registers used:
  9411 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9412 ;; Tracked objects:
  9413 ;;		On entry : 0/0
  9414 ;;		On exit  : 0/0
  9415 ;;		Unchanged: 0/0
  9416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9419 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9420 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9421 ;;Total ram usage:        3 bytes
  9422 ;; Hardware stack levels used:    1
  9423 ;; Hardware stack levels required when called:    3
  9424 ;; This function calls:
  9425 ;;		Absolute function
  9426 ;;		_do_I2C_SEND_RESTART
  9427 ;;		_do_I2C_SEND_STOP
  9428 ;;		_i2c_restartWrite
  9429 ;;		_rd1RegCompleteHandler
  9430 ;;		_rd2RegCompleteHandler
  9431 ;;		_rdBlkRegCompleteHandler
  9432 ;;		_returnReset
  9433 ;;		_returnStop
  9434 ;;		_wr1RegCompleteHandler
  9435 ;;		_wr2RegCompleteHandler
  9436 ;; This function is called by:
  9437 ;;		_i2c_ISR
  9438 ;; This function uses a non-reentrant model
  9439 ;;
  9440                           
  9441                           
  9442                           ;psect for function _do_I2C_DO_ADDRESS_NACK
  9443  0333                     _do_I2C_DO_ADDRESS_NACK:	
  9444  0333                     i1l3987:	
  9445                           ;incstack = 0
  9446                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9447                           
  9448                           
  9449                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
  9450  0333  0020               	movlb	0	; select bank0
  9451  0334  11A0               	bcf	_i2c_status,3
  9452  0335                     i1l3989:	
  9453                           
  9454                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
  9455  0335  3002               	movlw	2
  9456  0336  00F0               	movwf	??_do_I2C_DO_ADDRESS_NACK
  9457  0337  0870               	movf	??_do_I2C_DO_ADDRESS_NACK,w
  9458  0338  00AA               	movwf	_i2c_status+10
  9459                           
  9460                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
  9461  0339  2B42               	goto	i1l4001
  9462  033A                     i1l3991:	
  9463                           
  9464                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
  9465  033A  3185  25DB  3183   	fcall	_do_I2C_SEND_RESTART
  9466  033D  2B5E               	goto	i1l201
  9467  033E                     i1l3995:	
  9468                           
  9469                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
  9470  033E  3185  25D6  3183   	fcall	_do_I2C_SEND_STOP
  9471  0341  2B5E               	goto	i1l201
  9472  0342                     i1l4001:	
  9473  0342  0839               	movf	low ((_i2c_status| 0+25)),w
  9474  0343  00F0               	movwf	??_do_I2C_DO_ADDRESS_NACK
  9475  0344  0870               	movf	??_do_I2C_DO_ADDRESS_NACK,w
  9476  0345  00DA               	movwf	rdBlkRegCompleteHandler@p
  9477  0346  300F               	movlw	15
  9478  0347  3E20               	addlw	(low (_i2c_status| 0))& (0+255)
  9479  0348  0086               	movwf	6
  9480  0349  0187               	clrf	7
  9481  034A  3F41               	moviw [1]fsr1
  9482  034B  008A               	movwf	10
  9483  034C  3F40               	moviw [0]fsr1
  9484  034D  000A               	callw
  9485  034E  3183               	pagesel	$
  9486  034F  00F1               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
  9487  0350  01F2               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
  9488                           
  9489                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9490                           ; Switch size 1, requested type "simple"
  9491                           ; Number of cases is 1, Range of values is 0 to 0
  9492                           ; switch strategies available:
  9493                           ; Name         Instructions Cycles
  9494                           ; simple_byte            4     3 (average)
  9495                           ; direct_byte            8     6 (fixed)
  9496                           ; jumptable            260     6 (fixed)
  9497                           ;	Chosen strategy is simple_byte
  9498  0351  0872               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
  9499  0352  3A00               	xorlw	0	; case 0
  9500  0353  1903               	skipnz
  9501  0354  2B56               	goto	i1l4597
  9502  0355  2B3E               	goto	i1l3995
  9503  0356                     i1l4597:	
  9504                           
  9505                           ; Switch size 1, requested type "simple"
  9506                           ; Number of cases is 2, Range of values is 2 to 3
  9507                           ; switch strategies available:
  9508                           ; Name         Instructions Cycles
  9509                           ; simple_byte            7     4 (average)
  9510                           ; direct_byte           13     9 (fixed)
  9511                           ; jumptable            263     9 (fixed)
  9512                           ;	Chosen strategy is simple_byte
  9513  0356  0871               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
  9514  0357  3A02               	xorlw	2	; case 2
  9515  0358  1903               	skipnz
  9516  0359  2B3A               	goto	i1l3991
  9517  035A  3A01               	xorlw	1	; case 3
  9518  035B  1903               	skipnz
  9519  035C  2B3A               	goto	i1l3991
  9520  035D  2B3E               	goto	i1l3995
  9521  035E                     i1l201:	
  9522  035E  0008               	return
  9523  035F                     __end_of_do_I2C_DO_ADDRESS_NACK:	
  9524                           
  9525                           	psect	text26
  9526  05C7                     __ptext26:	
  9527 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
  9528 ;; Defined at:
  9529 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
  9530 ;; Parameters:    Size  Location     Type
  9531 ;;		None
  9532 ;; Auto vars:     Size  Location     Type
  9533 ;;		None
  9534 ;; Return value:  Size  Location     Type
  9535 ;;                  1    wreg      enum E12722
  9536 ;; Registers used:
  9537 ;;		wreg, status,2, status,0, pclath, cstack
  9538 ;; Tracked objects:
  9539 ;;		On entry : 0/0
  9540 ;;		On exit  : 0/0
  9541 ;;		Unchanged: 0/0
  9542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9547 ;;Total ram usage:        0 bytes
  9548 ;; Hardware stack levels used:    1
  9549 ;; Hardware stack levels required when called:    1
  9550 ;; This function calls:
  9551 ;;		_i2c1_driver_sendNACK
  9552 ;; This function is called by:
  9553 ;;		_do_I2C_RX
  9554 ;;		_i2c_ISR
  9555 ;; This function uses a non-reentrant model
  9556 ;;
  9557                           
  9558                           
  9559                           ;psect for function _do_I2C_DO_NACK_RESTART
  9560  05C7                     _do_I2C_DO_NACK_RESTART:	
  9561  05C7                     i1l2997:	
  9562                           ;incstack = 0
  9563                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  9564                           
  9565                           
  9566                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
  9567  05C7  3185  25F8  3185   	fcall	_i2c1_driver_sendNACK
  9568  05CA                     i1l2999:	
  9569                           
  9570                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
  9571  05CA  3009               	movlw	9
  9572  05CB                     i1l195:	
  9573  05CB  0008               	return
  9574  05CC                     __end_of_do_I2C_DO_NACK_RESTART:	
  9575                           
  9576                           	psect	text27
  9577  05CC                     __ptext27:	
  9578 ;; *************** function _do_I2C_DO_NACK_STOP *****************
  9579 ;; Defined at:
  9580 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
  9581 ;; Parameters:    Size  Location     Type
  9582 ;;		None
  9583 ;; Auto vars:     Size  Location     Type
  9584 ;;		None
  9585 ;; Return value:  Size  Location     Type
  9586 ;;                  1    wreg      enum E12722
  9587 ;; Registers used:
  9588 ;;		wreg, status,2, status,0, pclath, cstack
  9589 ;; Tracked objects:
  9590 ;;		On entry : 0/0
  9591 ;;		On exit  : 0/0
  9592 ;;		Unchanged: 0/0
  9593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9598 ;;Total ram usage:        0 bytes
  9599 ;; Hardware stack levels used:    1
  9600 ;; Hardware stack levels required when called:    1
  9601 ;; This function calls:
  9602 ;;		_i2c1_driver_sendNACK
  9603 ;; This function is called by:
  9604 ;;		_do_I2C_RX
  9605 ;;		_i2c_ISR
  9606 ;; This function uses a non-reentrant model
  9607 ;;
  9608                           
  9609                           
  9610                           ;psect for function _do_I2C_DO_NACK_STOP
  9611  05CC                     _do_I2C_DO_NACK_STOP:	
  9612  05CC                     i1l2991:	
  9613                           ;incstack = 0
  9614                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  9615                           
  9616                           
  9617                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
  9618  05CC  3185  25F8  3185   	fcall	_i2c1_driver_sendNACK
  9619  05CF                     i1l2993:	
  9620                           
  9621                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
  9622  05CF  300A               	movlw	10
  9623  05D0                     i1l192:	
  9624  05D0  0008               	return
  9625  05D1                     __end_of_do_I2C_DO_NACK_STOP:	
  9626                           
  9627                           	psect	text28
  9628  05D1                     __ptext28:	
  9629 ;; *************** function _do_I2C_DO_ACK *****************
  9630 ;; Defined at:
  9631 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
  9632 ;; Parameters:    Size  Location     Type
  9633 ;;		None
  9634 ;; Auto vars:     Size  Location     Type
  9635 ;;		None
  9636 ;; Return value:  Size  Location     Type
  9637 ;;                  1    wreg      enum E12722
  9638 ;; Registers used:
  9639 ;;		wreg, status,2, status,0, pclath, cstack
  9640 ;; Tracked objects:
  9641 ;;		On entry : 0/0
  9642 ;;		On exit  : 0/0
  9643 ;;		Unchanged: 0/0
  9644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9649 ;;Total ram usage:        0 bytes
  9650 ;; Hardware stack levels used:    1
  9651 ;; Hardware stack levels required when called:    1
  9652 ;; This function calls:
  9653 ;;		_i2c1_driver_sendACK
  9654 ;; This function is called by:
  9655 ;;		_i2c_ISR
  9656 ;; This function uses a non-reentrant model
  9657 ;;
  9658                           
  9659                           
  9660                           ;psect for function _do_I2C_DO_ACK
  9661  05D1                     _do_I2C_DO_ACK:	
  9662  05D1                     i1l3177:	
  9663                           ;incstack = 0
  9664                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
  9665                           
  9666                           
  9667                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
  9668  05D1  3185  25FC  3185   	fcall	_i2c1_driver_sendACK
  9669  05D4                     i1l3179:	
  9670                           
  9671                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
  9672  05D4  3005               	movlw	5
  9673  05D5                     i1l189:	
  9674  05D5  0008               	return
  9675  05D6                     __end_of_do_I2C_DO_ACK:	
  9676                           
  9677                           	psect	text29
  9678  05B4                     __ptext29:	
  9679 ;; *************** function _do_I2C_RCEN *****************
  9680 ;; Defined at:
  9681 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
  9682 ;; Parameters:    Size  Location     Type
  9683 ;;		None
  9684 ;; Auto vars:     Size  Location     Type
  9685 ;;		None
  9686 ;; Return value:  Size  Location     Type
  9687 ;;                  1    wreg      enum E12722
  9688 ;; Registers used:
  9689 ;;		wreg, status,2, status,0, pclath, cstack
  9690 ;; Tracked objects:
  9691 ;;		On entry : 0/0
  9692 ;;		On exit  : 0/0
  9693 ;;		Unchanged: 0/0
  9694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9699 ;;Total ram usage:        0 bytes
  9700 ;; Hardware stack levels used:    1
  9701 ;; Hardware stack levels required when called:    1
  9702 ;; This function calls:
  9703 ;;		_i2c1_driver_startRX
  9704 ;; This function is called by:
  9705 ;;		_i2c_ISR
  9706 ;; This function uses a non-reentrant model
  9707 ;;
  9708                           
  9709                           
  9710                           ;psect for function _do_I2C_RCEN
  9711  05B4                     _do_I2C_RCEN:	
  9712  05B4                     i1l3169:	
  9713                           ;incstack = 0
  9714                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
  9715                           
  9716                           
  9717                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
  9718  05B4  0020               	movlb	0	; select bank0
  9719  05B5  11A0               	bcf	_i2c_status,3
  9720  05B6                     i1l3171:	
  9721                           
  9722                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
  9723  05B6  3186  260C  3185   	fcall	_i2c1_driver_startRX
  9724  05B9                     i1l3173:	
  9725                           
  9726                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
  9727  05B9  3004               	movlw	4
  9728  05BA                     i1l186:	
  9729  05BA  0008               	return
  9730  05BB                     __end_of_do_I2C_RCEN:	
  9731                           
  9732                           	psect	text30
  9733  059C                     __ptext30:	
  9734 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
  9735 ;; Defined at:
  9736 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
  9737 ;; Parameters:    Size  Location     Type
  9738 ;;		None
  9739 ;; Auto vars:     Size  Location     Type
  9740 ;;		None
  9741 ;; Return value:  Size  Location     Type
  9742 ;;                  1    wreg      enum E12722
  9743 ;; Registers used:
  9744 ;;		wreg, status,2, status,0, pclath, cstack
  9745 ;; Tracked objects:
  9746 ;;		On entry : 0/0
  9747 ;;		On exit  : 0/0
  9748 ;;		Unchanged: 0/0
  9749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9754 ;;Total ram usage:        0 bytes
  9755 ;; Hardware stack levels used:    1
  9756 ;; Hardware stack levels required when called:    1
  9757 ;; This function calls:
  9758 ;;		_i2c1_driver_TXData
  9759 ;; This function is called by:
  9760 ;;		_i2c_ISR
  9761 ;; This function uses a non-reentrant model
  9762 ;;
  9763                           
  9764                           
  9765                           ;psect for function _do_I2C_SEND_ADR_WRITE
  9766  059C                     _do_I2C_SEND_ADR_WRITE:	
  9767  059C                     i1l3161:	
  9768                           ;incstack = 0
  9769                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  9770                           
  9771                           
  9772                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
  9773  059C  0020               	movlb	0	; select bank0
  9774  059D  15A0               	bsf	_i2c_status,3
  9775  059E                     i1l3163:	
  9776                           
  9777                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
  9778  059E  3521               	lslf	_i2c_status+1,w
  9779  059F  3185  25EF  3185   	fcall	_i2c1_driver_TXData
  9780  05A2                     i1l3165:	
  9781                           
  9782                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
  9783  05A2  3003               	movlw	3
  9784  05A3                     i1l183:	
  9785  05A3  0008               	return
  9786  05A4                     __end_of_do_I2C_SEND_ADR_WRITE:	
  9787                           
  9788                           	psect	text31
  9789  0583                     __ptext31:	
  9790 ;; *************** function _do_I2C_SEND_ADR_READ *****************
  9791 ;; Defined at:
  9792 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
  9793 ;; Parameters:    Size  Location     Type
  9794 ;;		None
  9795 ;; Auto vars:     Size  Location     Type
  9796 ;;		None
  9797 ;; Return value:  Size  Location     Type
  9798 ;;                  1    wreg      enum E12722
  9799 ;; Registers used:
  9800 ;;		wreg, status,2, status,0, pclath, cstack
  9801 ;; Tracked objects:
  9802 ;;		On entry : 0/0
  9803 ;;		On exit  : 0/0
  9804 ;;		Unchanged: 0/0
  9805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9810 ;;Total ram usage:        0 bytes
  9811 ;; Hardware stack levels used:    1
  9812 ;; Hardware stack levels required when called:    1
  9813 ;; This function calls:
  9814 ;;		_i2c1_driver_TXData
  9815 ;; This function is called by:
  9816 ;;		_i2c_ISR
  9817 ;; This function uses a non-reentrant model
  9818 ;;
  9819                           
  9820                           
  9821                           ;psect for function _do_I2C_SEND_ADR_READ
  9822  0583                     _do_I2C_SEND_ADR_READ:	
  9823  0583                     i1l3153:	
  9824                           ;incstack = 0
  9825                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  9826                           
  9827                           
  9828                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
  9829  0583  0020               	movlb	0	; select bank0
  9830  0584  15A0               	bsf	_i2c_status,3
  9831  0585                     i1l3155:	
  9832                           
  9833                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
  9834  0585  1403               	setc
  9835  0586  0D21               	rlf	_i2c_status+1,w
  9836  0587  3185  25EF  3185   	fcall	_i2c1_driver_TXData
  9837  058A                     i1l3157:	
  9838                           
  9839                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
  9840  058A  3005               	movlw	5
  9841  058B                     i1l180:	
  9842  058B  0008               	return
  9843  058C                     __end_of_do_I2C_SEND_ADR_READ:	
  9844                           
  9845                           	psect	text32
  9846  05D6                     __ptext32:	
  9847 ;; *************** function _do_I2C_SEND_STOP *****************
  9848 ;; Defined at:
  9849 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
  9850 ;; Parameters:    Size  Location     Type
  9851 ;;		None
  9852 ;; Auto vars:     Size  Location     Type
  9853 ;;		None
  9854 ;; Return value:  Size  Location     Type
  9855 ;;                  1    wreg      enum E12722
  9856 ;; Registers used:
  9857 ;;		wreg, status,2, status,0, pclath, cstack
  9858 ;; Tracked objects:
  9859 ;;		On entry : 0/0
  9860 ;;		On exit  : 0/0
  9861 ;;		Unchanged: 0/0
  9862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9867 ;;Total ram usage:        0 bytes
  9868 ;; Hardware stack levels used:    1
  9869 ;; Hardware stack levels required when called:    1
  9870 ;; This function calls:
  9871 ;;		_i2c1_driver_stop
  9872 ;; This function is called by:
  9873 ;;		_do_I2C_DO_ADDRESS_NACK
  9874 ;;		_do_I2C_TX
  9875 ;;		_do_I2C_TX_EMPTY
  9876 ;;		_i2c_ISR
  9877 ;; This function uses a non-reentrant model
  9878 ;;
  9879                           
  9880                           
  9881                           ;psect for function _do_I2C_SEND_STOP
  9882  05D6                     _do_I2C_SEND_STOP:	
  9883  05D6                     i1l2979:	
  9884                           ;incstack = 0
  9885                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  9886                           
  9887                           
  9888                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
  9889  05D6  3186  260F  3185   	fcall	_i2c1_driver_stop
  9890  05D9                     i1l2981:	
  9891                           
  9892                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
  9893  05D9  3000               	movlw	0
  9894  05DA                     i1l177:	
  9895  05DA  0008               	return
  9896  05DB                     __end_of_do_I2C_SEND_STOP:	
  9897                           
  9898                           	psect	text33
  9899  05DB                     __ptext33:	
  9900 ;; *************** function _do_I2C_SEND_RESTART *****************
  9901 ;; Defined at:
  9902 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
  9903 ;; Parameters:    Size  Location     Type
  9904 ;;		None
  9905 ;; Auto vars:     Size  Location     Type
  9906 ;;		None
  9907 ;; Return value:  Size  Location     Type
  9908 ;;                  1    wreg      enum E12722
  9909 ;; Registers used:
  9910 ;;		wreg, status,2, status,0, pclath, cstack
  9911 ;; Tracked objects:
  9912 ;;		On entry : 0/0
  9913 ;;		On exit  : 0/0
  9914 ;;		Unchanged: 0/0
  9915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9920 ;;Total ram usage:        0 bytes
  9921 ;; Hardware stack levels used:    1
  9922 ;; Hardware stack levels required when called:    1
  9923 ;; This function calls:
  9924 ;;		_i2c1_driver_restart
  9925 ;; This function is called by:
  9926 ;;		_do_I2C_DO_ADDRESS_NACK
  9927 ;;		_do_I2C_TX_EMPTY
  9928 ;;		_i2c_ISR
  9929 ;; This function uses a non-reentrant model
  9930 ;;
  9931                           
  9932                           
  9933                           ;psect for function _do_I2C_SEND_RESTART
  9934  05DB                     _do_I2C_SEND_RESTART:	
  9935  05DB                     i1l2973:	
  9936                           ;incstack = 0
  9937                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  9938                           
  9939                           
  9940                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
  9941  05DB  3186  2612  3185   	fcall	_i2c1_driver_restart
  9942  05DE                     i1l2975:	
  9943                           
  9944                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
  9945  05DE  3001               	movlw	1
  9946  05DF                     i1l174:	
  9947  05DF  0008               	return
  9948  05E0                     __end_of_do_I2C_SEND_RESTART:	
  9949                           
  9950                           	psect	text34
  9951  05E0                     __ptext34:	
  9952 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
  9953 ;; Defined at:
  9954 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
  9955 ;; Parameters:    Size  Location     Type
  9956 ;;		None
  9957 ;; Auto vars:     Size  Location     Type
  9958 ;;		None
  9959 ;; Return value:  Size  Location     Type
  9960 ;;                  1    wreg      enum E12722
  9961 ;; Registers used:
  9962 ;;		wreg, status,2, status,0, pclath, cstack
  9963 ;; Tracked objects:
  9964 ;;		On entry : 0/0
  9965 ;;		On exit  : 0/0
  9966 ;;		Unchanged: 0/0
  9967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9972 ;;Total ram usage:        0 bytes
  9973 ;; Hardware stack levels used:    1
  9974 ;; Hardware stack levels required when called:    1
  9975 ;; This function calls:
  9976 ;;		_i2c1_driver_restart
  9977 ;; This function is called by:
  9978 ;;		_do_I2C_TX
  9979 ;;		_i2c_ISR
  9980 ;; This function uses a non-reentrant model
  9981 ;;
  9982                           
  9983                           
  9984                           ;psect for function _do_I2C_SEND_RESTART_WRITE
  9985  05E0                     _do_I2C_SEND_RESTART_WRITE:	
  9986  05E0                     i1l2967:	
  9987                           ;incstack = 0
  9988                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  9989                           
  9990                           
  9991                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
  9992  05E0  3186  2612  3185   	fcall	_i2c1_driver_restart
  9993  05E3                     i1l2969:	
  9994                           
  9995                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
  9996  05E3  3002               	movlw	2
  9997  05E4                     i1l171:	
  9998  05E4  0008               	return
  9999  05E5                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 10000                           
 10001                           	psect	text35
 10002  05E5                     __ptext35:	
 10003 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 10004 ;; Defined at:
 10005 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 10006 ;; Parameters:    Size  Location     Type
 10007 ;;		None
 10008 ;; Auto vars:     Size  Location     Type
 10009 ;;		None
 10010 ;; Return value:  Size  Location     Type
 10011 ;;                  1    wreg      enum E12722
 10012 ;; Registers used:
 10013 ;;		wreg, status,2, status,0, pclath, cstack
 10014 ;; Tracked objects:
 10015 ;;		On entry : 0/0
 10016 ;;		On exit  : 0/0
 10017 ;;		Unchanged: 0/0
 10018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10023 ;;Total ram usage:        0 bytes
 10024 ;; Hardware stack levels used:    1
 10025 ;; Hardware stack levels required when called:    1
 10026 ;; This function calls:
 10027 ;;		_i2c1_driver_restart
 10028 ;; This function is called by:
 10029 ;;		_do_I2C_TX
 10030 ;;		_i2c_ISR
 10031 ;; This function uses a non-reentrant model
 10032 ;;
 10033                           
 10034                           
 10035                           ;psect for function _do_I2C_SEND_RESTART_READ
 10036  05E5                     _do_I2C_SEND_RESTART_READ:	
 10037  05E5                     i1l2961:	
 10038                           ;incstack = 0
 10039                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 10040                           
 10041                           
 10042                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
 10043  05E5  3186  2612  3185   	fcall	_i2c1_driver_restart
 10044  05E8                     i1l2963:	
 10045                           
 10046                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
 10047  05E8  3001               	movlw	1
 10048  05E9                     i1l168:	
 10049  05E9  0008               	return
 10050  05EA                     __end_of_do_I2C_SEND_RESTART_READ:	
 10051                           
 10052                           	psect	text36
 10053  05EA                     __ptext36:	
 10054 ;; *************** function _do_I2C_IDLE *****************
 10055 ;; Defined at:
 10056 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 10057 ;; Parameters:    Size  Location     Type
 10058 ;;		None
 10059 ;; Auto vars:     Size  Location     Type
 10060 ;;		None
 10061 ;; Return value:  Size  Location     Type
 10062 ;;                  1    wreg      enum E12722
 10063 ;; Registers used:
 10064 ;;		wreg, status,2
 10065 ;; Tracked objects:
 10066 ;;		On entry : 0/0
 10067 ;;		On exit  : 0/0
 10068 ;;		Unchanged: 0/0
 10069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10074 ;;Total ram usage:        0 bytes
 10075 ;; Hardware stack levels used:    1
 10076 ;; This function calls:
 10077 ;;		Nothing
 10078 ;; This function is called by:
 10079 ;;		_i2c_ISR
 10080 ;; This function uses a non-reentrant model
 10081 ;;
 10082                           
 10083                           
 10084                           ;psect for function _do_I2C_IDLE
 10085  05EA                     _do_I2C_IDLE:	
 10086  05EA                     i1l3145:	
 10087                           ;incstack = 0
 10088                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 10089                           
 10090                           
 10091                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
 10092  05EA  0020               	movlb	0	; select bank0
 10093  05EB  1020               	bcf	_i2c_status,0
 10094  05EC                     i1l3147:	
 10095                           
 10096                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
 10097  05EC  01AA               	clrf	_i2c_status+10
 10098  05ED                     i1l3149:	
 10099                           
 10100                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
 10101  05ED  300E               	movlw	14
 10102  05EE                     i1l165:	
 10103  05EE  0008               	return
 10104  05EF                     __end_of_do_I2C_IDLE:	
 10105                           
 10106                           	psect	text37
 10107  05A4                     __ptext37:	
 10108 ;; *************** function _do_I2C_RESET *****************
 10109 ;; Defined at:
 10110 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 10111 ;; Parameters:    Size  Location     Type
 10112 ;;		None
 10113 ;; Auto vars:     Size  Location     Type
 10114 ;;		None
 10115 ;; Return value:  Size  Location     Type
 10116 ;;                  1    wreg      enum E12722
 10117 ;; Registers used:
 10118 ;;		wreg, status,2, status,0, pclath, cstack
 10119 ;; Tracked objects:
 10120 ;;		On entry : 0/0
 10121 ;;		On exit  : 0/0
 10122 ;;		Unchanged: 0/0
 10123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10128 ;;Total ram usage:        0 bytes
 10129 ;; Hardware stack levels used:    1
 10130 ;; Hardware stack levels required when called:    1
 10131 ;; This function calls:
 10132 ;;		_i2c1_driver_resetBus
 10133 ;; This function is called by:
 10134 ;;		_i2c_ISR
 10135 ;; This function uses a non-reentrant model
 10136 ;;
 10137                           
 10138                           
 10139                           ;psect for function _do_I2C_RESET
 10140  05A4                     _do_I2C_RESET:	
 10141  05A4                     i1l3135:	
 10142                           ;incstack = 0
 10143                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 10144                           
 10145                           
 10146                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
 10147  05A4  3186  261B  3185   	fcall	_i2c1_driver_resetBus
 10148  05A7                     i1l3137:	
 10149                           
 10150                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
 10151  05A7  0020               	movlb	0	; select bank0
 10152  05A8  1020               	bcf	_i2c_status,0
 10153  05A9                     i1l3139:	
 10154                           
 10155                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
 10156  05A9  01AA               	clrf	_i2c_status+10
 10157  05AA                     i1l3141:	
 10158                           
 10159                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
 10160  05AA  300E               	movlw	14
 10161  05AB                     i1l162:	
 10162  05AB  0008               	return
 10163  05AC                     __end_of_do_I2C_RESET:	
 10164                           
 10165                           	psect	text38
 10166  02D1                     __ptext38:	
 10167 ;; *************** function _do_I2C_TX_EMPTY *****************
 10168 ;; Defined at:
 10169 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 10170 ;; Parameters:    Size  Location     Type
 10171 ;;		None
 10172 ;; Auto vars:     Size  Location     Type
 10173 ;;		None
 10174 ;; Return value:  Size  Location     Type
 10175 ;;                  1    wreg      enum E12722
 10176 ;; Registers used:
 10177 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10178 ;; Tracked objects:
 10179 ;;		On entry : 0/0
 10180 ;;		On exit  : 0/0
 10181 ;;		Unchanged: 0/0
 10182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10185 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10186 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10187 ;;Total ram usage:        3 bytes
 10188 ;; Hardware stack levels used:    1
 10189 ;; Hardware stack levels required when called:    3
 10190 ;; This function calls:
 10191 ;;		Absolute function
 10192 ;;		_do_I2C_SEND_RESTART
 10193 ;;		_do_I2C_SEND_STOP
 10194 ;;		_i2c_restartWrite
 10195 ;;		_mssp1_setIRQ
 10196 ;;		_rd1RegCompleteHandler
 10197 ;;		_rd2RegCompleteHandler
 10198 ;;		_rdBlkRegCompleteHandler
 10199 ;;		_returnReset
 10200 ;;		_returnStop
 10201 ;;		_wr1RegCompleteHandler
 10202 ;;		_wr2RegCompleteHandler
 10203 ;; This function is called by:
 10204 ;;		_i2c_ISR
 10205 ;; This function uses a non-reentrant model
 10206 ;;
 10207                           
 10208                           
 10209                           ;psect for function _do_I2C_TX_EMPTY
 10210  02D1                     _do_I2C_TX_EMPTY:	
 10211  02D1                     i1l4071:	
 10212                           ;incstack = 0
 10213                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10214                           
 10215                           
 10216                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
 10217  02D1  0020               	movlb	0	; select bank0
 10218  02D2  1520               	bsf	_i2c_status,2
 10219                           
 10220                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 10221  02D3  2AE1               	goto	i1l4089
 10222  02D4                     i1l4073:	
 10223                           
 10224                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
 10225  02D4  3185  25DB  3182   	fcall	_do_I2C_SEND_RESTART
 10226  02D7  2B03               	goto	i1l237
 10227  02D8                     i1l4077:	
 10228                           
 10229                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
 10230  02D8  3186  2606  3182   	fcall	_mssp1_setIRQ
 10231  02DB                     i1l4079:	
 10232                           
 10233                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
 10234  02DB  3003               	movlw	3
 10235  02DC  2B03               	goto	i1l237
 10236  02DD                     i1l4083:	
 10237                           
 10238                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
 10239  02DD  3185  25D6  3182   	fcall	_do_I2C_SEND_STOP
 10240  02E0  2B03               	goto	i1l237
 10241  02E1                     i1l4089:	
 10242  02E1  0837               	movf	low ((_i2c_status| 0+23)),w
 10243  02E2  00F0               	movwf	??_do_I2C_TX_EMPTY
 10244  02E3  0870               	movf	??_do_I2C_TX_EMPTY,w
 10245  02E4  00DA               	movwf	rdBlkRegCompleteHandler@p
 10246  02E5  300B               	movlw	11
 10247  02E6  3E20               	addlw	(low (_i2c_status| 0))& (0+255)
 10248  02E7  0086               	movwf	6
 10249  02E8  0187               	clrf	7
 10250  02E9  3F41               	moviw [1]fsr1
 10251  02EA  008A               	movwf	10
 10252  02EB  3F40               	moviw [0]fsr1
 10253  02EC  000A               	callw
 10254  02ED  3182               	pagesel	$
 10255  02EE  00F1               	movwf	??_do_I2C_TX_EMPTY+1
 10256  02EF  01F2               	clrf	??_do_I2C_TX_EMPTY+2
 10257                           
 10258                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10259                           ; Switch size 1, requested type "simple"
 10260                           ; Number of cases is 1, Range of values is 0 to 0
 10261                           ; switch strategies available:
 10262                           ; Name         Instructions Cycles
 10263                           ; simple_byte            4     3 (average)
 10264                           ; direct_byte            8     6 (fixed)
 10265                           ; jumptable            260     6 (fixed)
 10266                           ;	Chosen strategy is simple_byte
 10267  02F0  0872               	movf	??_do_I2C_TX_EMPTY+2,w
 10268  02F1  3A00               	xorlw	0	; case 0
 10269  02F2  1903               	skipnz
 10270  02F3  2AF5               	goto	i1l4599
 10271  02F4  2ADD               	goto	i1l4083
 10272  02F5                     i1l4599:	
 10273                           
 10274                           ; Switch size 1, requested type "simple"
 10275                           ; Number of cases is 4, Range of values is 1 to 4
 10276                           ; switch strategies available:
 10277                           ; Name         Instructions Cycles
 10278                           ; simple_byte           13     7 (average)
 10279                           ; direct_byte           17     9 (fixed)
 10280                           ; jumptable            263     9 (fixed)
 10281                           ;	Chosen strategy is simple_byte
 10282  02F5  0871               	movf	??_do_I2C_TX_EMPTY+1,w
 10283  02F6  3A01               	xorlw	1	; case 1
 10284  02F7  1903               	skipnz
 10285  02F8  2ADD               	goto	i1l4083
 10286  02F9  3A03               	xorlw	3	; case 2
 10287  02FA  1903               	skipnz
 10288  02FB  2AD4               	goto	i1l4073
 10289  02FC  3A01               	xorlw	1	; case 3
 10290  02FD  1903               	skipnz
 10291  02FE  2AD4               	goto	i1l4073
 10292  02FF  3A07               	xorlw	7	; case 4
 10293  0300  1903               	skipnz
 10294  0301  2AD8               	goto	i1l4077
 10295  0302  2ADD               	goto	i1l4083
 10296  0303                     i1l237:	
 10297  0303  0008               	return
 10298  0304                     __end_of_do_I2C_TX_EMPTY:	
 10299                           
 10300                           	psect	text39
 10301  0606                     __ptext39:	
 10302 ;; *************** function _mssp1_setIRQ *****************
 10303 ;; Defined at:
 10304 ;;		line 59 in file "mcc_generated_files/i2c1_driver.c"
 10305 ;; Parameters:    Size  Location     Type
 10306 ;;		None
 10307 ;; Auto vars:     Size  Location     Type
 10308 ;;		None
 10309 ;; Return value:  Size  Location     Type
 10310 ;;                  1    wreg      void 
 10311 ;; Registers used:
 10312 ;;		None
 10313 ;; Tracked objects:
 10314 ;;		On entry : 0/0
 10315 ;;		On exit  : 0/0
 10316 ;;		Unchanged: 0/0
 10317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10322 ;;Total ram usage:        0 bytes
 10323 ;; Hardware stack levels used:    1
 10324 ;; This function calls:
 10325 ;;		Nothing
 10326 ;; This function is called by:
 10327 ;;		_do_I2C_TX_EMPTY
 10328 ;; This function uses a non-reentrant model
 10329 ;;
 10330                           
 10331                           
 10332                           ;psect for function _mssp1_setIRQ
 10333  0606                     _mssp1_setIRQ:	
 10334  0606                     i1l3011:	
 10335                           ;incstack = 0
 10336                           ; Regs used in _mssp1_setIRQ: []
 10337                           
 10338                           
 10339                           ;mcc_generated_files/i2c1_driver.c: 61:     else
 10340  0606  002E               	movlb	14	; select bank14
 10341  0607  140F               	bsf	15,0	;volatile
 10342  0608                     i1l636:	
 10343  0608  0008               	return
 10344  0609                     __end_of_mssp1_setIRQ:	
 10345                           
 10346                           	psect	text40
 10347  05AC                     __ptext40:	
 10348 ;; *************** function _i2c1_driver_isNACK *****************
 10349 ;; Defined at:
 10350 ;;		line 162 in file "mcc_generated_files/i2c1_driver.c"
 10351 ;; Parameters:    Size  Location     Type
 10352 ;;		None
 10353 ;; Auto vars:     Size  Location     Type
 10354 ;;		None
 10355 ;; Return value:  Size  Location     Type
 10356 ;;		None               void
 10357 ;; Registers used:
 10358 ;;		wreg, status,2, status,0
 10359 ;; Tracked objects:
 10360 ;;		On entry : 0/0
 10361 ;;		On exit  : 0/0
 10362 ;;		Unchanged: 0/0
 10363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10366 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10367 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10368 ;;Total ram usage:        1 bytes
 10369 ;; Hardware stack levels used:    1
 10370 ;; This function calls:
 10371 ;;		Nothing
 10372 ;; This function is called by:
 10373 ;;		_do_I2C_TX
 10374 ;;		_i2c_ISR
 10375 ;; This function uses a non-reentrant model
 10376 ;;
 10377                           
 10378                           
 10379                           ;psect for function _i2c1_driver_isNACK
 10380  05AC                     _i2c1_driver_isNACK:	
 10381  05AC                     i1l3003:	
 10382                           ;incstack = 0
 10383                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 10384                           
 10385                           
 10386                           ;mcc_generated_files/i2c1_driver.c: 164:     return SSP1CON2bits.ACKSTAT;
 10387  05AC  0023               	movlb	3	; select bank3
 10388  05AD  0E11               	swapf	17,w	;volatile
 10389  05AE  0C89               	rrf	9,f
 10390  05AF  0C89               	rrf	9,f
 10391  05B0  3901               	andlw	1
 10392  05B1  00F0               	movwf	??_i2c1_driver_isNACK
 10393  05B2  0C70               	rrf	??_i2c1_driver_isNACK,w
 10394  05B3                     i1l671:	
 10395  05B3  0008               	return
 10396  05B4                     __end_of_i2c1_driver_isNACK:	
 10397                           
 10398                           	psect	text41
 10399  05EF                     __ptext41:	
 10400 ;; *************** function _i2c1_driver_TXData *****************
 10401 ;; Defined at:
 10402 ;;		line 187 in file "mcc_generated_files/i2c1_driver.c"
 10403 ;; Parameters:    Size  Location     Type
 10404 ;;  d               1    wreg     unsigned char 
 10405 ;; Auto vars:     Size  Location     Type
 10406 ;;  d               1    0[COMMON] unsigned char 
 10407 ;; Return value:  Size  Location     Type
 10408 ;;                  1    wreg      void 
 10409 ;; Registers used:
 10410 ;;		wreg
 10411 ;; Tracked objects:
 10412 ;;		On entry : 0/0
 10413 ;;		On exit  : 0/0
 10414 ;;		Unchanged: 0/0
 10415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10417 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10419 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10420 ;;Total ram usage:        1 bytes
 10421 ;; Hardware stack levels used:    1
 10422 ;; This function calls:
 10423 ;;		Nothing
 10424 ;; This function is called by:
 10425 ;;		_do_I2C_SEND_ADR_READ
 10426 ;;		_do_I2C_SEND_ADR_WRITE
 10427 ;;		_do_I2C_TX
 10428 ;; This function uses a non-reentrant model
 10429 ;;
 10430                           
 10431                           
 10432                           ;psect for function _i2c1_driver_TXData
 10433  05EF                     _i2c1_driver_TXData:	
 10434                           
 10435                           ;incstack = 0
 10436                           ; Regs used in _i2c1_driver_TXData: [wreg]
 10437                           ;i2c1_driver_TXData@d stored from wreg
 10438  05EF  00F0               	movwf	i2c1_driver_TXData@d
 10439  05F0                     i1l2985:	
 10440                           
 10441                           ;mcc_generated_files/i2c1_driver.c: 187: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 188: {;mcc_generated_files/i2c1_driver.c: 18
      +                          9:     SSP1BUF = d;
 10442  05F0  0870               	movf	i2c1_driver_TXData@d,w
 10443  05F1  0023               	movlb	3	; select bank3
 10444  05F2  008C               	movwf	12	;volatile
 10445  05F3                     i1l686:	
 10446  05F3  0008               	return
 10447  05F4                     __end_of_i2c1_driver_TXData:	
 10448                           
 10449                           	psect	text42
 10450  0609                     __ptext42:	
 10451 ;; *************** function _i2c1_driver_getRXData *****************
 10452 ;; Defined at:
 10453 ;;		line 172 in file "mcc_generated_files/i2c1_driver.c"
 10454 ;; Parameters:    Size  Location     Type
 10455 ;;		None
 10456 ;; Auto vars:     Size  Location     Type
 10457 ;;		None
 10458 ;; Return value:  Size  Location     Type
 10459 ;;                  1    wreg      unsigned char 
 10460 ;; Registers used:
 10461 ;;		wreg
 10462 ;; Tracked objects:
 10463 ;;		On entry : 0/0
 10464 ;;		On exit  : 0/0
 10465 ;;		Unchanged: 0/0
 10466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10471 ;;Total ram usage:        0 bytes
 10472 ;; Hardware stack levels used:    1
 10473 ;; This function calls:
 10474 ;;		Nothing
 10475 ;; This function is called by:
 10476 ;;		_do_I2C_RX
 10477 ;; This function uses a non-reentrant model
 10478 ;;
 10479                           
 10480                           
 10481                           ;psect for function _i2c1_driver_getRXData
 10482  0609                     _i2c1_driver_getRXData:	
 10483  0609                     i1l3007:	
 10484                           ;incstack = 0
 10485                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 10486                           
 10487                           
 10488                           ;mcc_generated_files/i2c1_driver.c: 174:     return SSP1BUF;
 10489  0609  0023               	movlb	3	; select bank3
 10490  060A  080C               	movf	12,w	;volatile
 10491  060B                     i1l677:	
 10492  060B  0008               	return
 10493  060C                     __end_of_i2c1_driver_getRXData:	
 10494                           
 10495                           	psect	text43
 10496  05F8                     __ptext43:	
 10497 ;; *************** function _i2c1_driver_sendNACK *****************
 10498 ;; Defined at:
 10499 ;;		line 203 in file "mcc_generated_files/i2c1_driver.c"
 10500 ;; Parameters:    Size  Location     Type
 10501 ;;		None
 10502 ;; Auto vars:     Size  Location     Type
 10503 ;;		None
 10504 ;; Return value:  Size  Location     Type
 10505 ;;                  1    wreg      void 
 10506 ;; Registers used:
 10507 ;;		None
 10508 ;; Tracked objects:
 10509 ;;		On entry : 0/0
 10510 ;;		On exit  : 0/0
 10511 ;;		Unchanged: 0/0
 10512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10517 ;;Total ram usage:        0 bytes
 10518 ;; Hardware stack levels used:    1
 10519 ;; This function calls:
 10520 ;;		Nothing
 10521 ;; This function is called by:
 10522 ;;		_do_I2C_DO_NACK_STOP
 10523 ;;		_do_I2C_DO_NACK_RESTART
 10524 ;; This function uses a non-reentrant model
 10525 ;;
 10526                           
 10527                           
 10528                           ;psect for function _i2c1_driver_sendNACK
 10529  05F8                     _i2c1_driver_sendNACK:	
 10530  05F8                     i1l2939:	
 10531                           ;incstack = 0
 10532                           ; Regs used in _i2c1_driver_sendNACK: []
 10533                           
 10534                           
 10535                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKDT = 1;
 10536  05F8  0023               	movlb	3	; select bank3
 10537  05F9  1691               	bsf	17,5	;volatile
 10538                           
 10539                           ;mcc_generated_files/i2c1_driver.c: 206:     SSP1CON2bits.ACKEN = 1;
 10540  05FA  1611               	bsf	17,4	;volatile
 10541  05FB                     i1l695:	
 10542  05FB  0008               	return
 10543  05FC                     __end_of_i2c1_driver_sendNACK:	
 10544                           
 10545                           	psect	text44
 10546  061B                     __ptext44:	
 10547 ;; *************** function _i2c1_driver_resetBus *****************
 10548 ;; Defined at:
 10549 ;;		line 142 in file "mcc_generated_files/i2c1_driver.c"
 10550 ;; Parameters:    Size  Location     Type
 10551 ;;		None
 10552 ;; Auto vars:     Size  Location     Type
 10553 ;;		None
 10554 ;; Return value:  Size  Location     Type
 10555 ;;                  1    wreg      void 
 10556 ;; Registers used:
 10557 ;;		None
 10558 ;; Tracked objects:
 10559 ;;		On entry : 0/0
 10560 ;;		On exit  : 0/0
 10561 ;;		Unchanged: 0/0
 10562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10567 ;;Total ram usage:        0 bytes
 10568 ;; Hardware stack levels used:    1
 10569 ;; This function calls:
 10570 ;;		Nothing
 10571 ;; This function is called by:
 10572 ;;		_do_I2C_RESET
 10573 ;; This function uses a non-reentrant model
 10574 ;;
 10575                           
 10576                           
 10577                           ;psect for function _i2c1_driver_resetBus
 10578  061B                     _i2c1_driver_resetBus:	
 10579  061B                     i1l659:	
 10580                           ;incstack = 0
 10581                           ; Regs used in _i2c1_driver_resetBus: []
 10582                           
 10583  061B  0008               	return
 10584  061C                     __end_of_i2c1_driver_resetBus:	
 10585                           
 10586                           	psect	text45
 10587  060C                     __ptext45:	
 10588 ;; *************** function _i2c1_driver_startRX *****************
 10589 ;; Defined at:
 10590 ;;		line 167 in file "mcc_generated_files/i2c1_driver.c"
 10591 ;; Parameters:    Size  Location     Type
 10592 ;;		None
 10593 ;; Auto vars:     Size  Location     Type
 10594 ;;		None
 10595 ;; Return value:  Size  Location     Type
 10596 ;;                  1    wreg      void 
 10597 ;; Registers used:
 10598 ;;		None
 10599 ;; Tracked objects:
 10600 ;;		On entry : 0/0
 10601 ;;		On exit  : 0/0
 10602 ;;		Unchanged: 0/0
 10603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10608 ;;Total ram usage:        0 bytes
 10609 ;; Hardware stack levels used:    1
 10610 ;; This function calls:
 10611 ;;		Nothing
 10612 ;; This function is called by:
 10613 ;;		_do_I2C_RCEN
 10614 ;; This function uses a non-reentrant model
 10615 ;;
 10616                           
 10617                           
 10618                           ;psect for function _i2c1_driver_startRX
 10619  060C                     _i2c1_driver_startRX:	
 10620  060C                     i1l2987:	
 10621                           ;incstack = 0
 10622                           ; Regs used in _i2c1_driver_startRX: []
 10623                           
 10624                           
 10625                           ;mcc_generated_files/i2c1_driver.c: 169:     SSP1CON2bits.RCEN = 1;
 10626  060C  0023               	movlb	3	; select bank3
 10627  060D  1591               	bsf	17,3	;volatile
 10628  060E                     i1l674:	
 10629  060E  0008               	return
 10630  060F                     __end_of_i2c1_driver_startRX:	
 10631                           
 10632                           	psect	text46
 10633  0457                     __ptext46:	
 10634 ;; *************** function _rdBlkRegCompleteHandler *****************
 10635 ;; Defined at:
 10636 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10637 ;; Parameters:    Size  Location     Type
 10638 ;;  p               1    1[BANK0 ] PTR void 
 10639 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10640 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10641 ;; Auto vars:     Size  Location     Type
 10642 ;;		None
 10643 ;; Return value:  Size  Location     Type
 10644 ;;                  1    wreg      enum E358
 10645 ;; Registers used:
 10646 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10647 ;; Tracked objects:
 10648 ;;		On entry : 0/0
 10649 ;;		On exit  : 0/0
 10650 ;;		Unchanged: 0/0
 10651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10652 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10655 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10656 ;;Total ram usage:        1 bytes
 10657 ;; Hardware stack levels used:    1
 10658 ;; Hardware stack levels required when called:    2
 10659 ;; This function calls:
 10660 ;;		_i2c_setBuffer
 10661 ;;		_i2c_setDataCompleteCallback
 10662 ;; This function is called by:
 10663 ;;		_i2c_readDataBlock
 10664 ;;		_do_I2C_DO_ADDRESS_NACK
 10665 ;;		_do_I2C_TX
 10666 ;;		_do_I2C_RX
 10667 ;;		_do_I2C_TX_EMPTY
 10668 ;; This function uses a non-reentrant model
 10669 ;;
 10670                           
 10671                           
 10672                           ;psect for function _rdBlkRegCompleteHandler
 10673  0457                     _rdBlkRegCompleteHandler:	
 10674  0457                     i1l3955:	
 10675                           ;incstack = 0
 10676                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 10677                           
 10678                           
 10679                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
 10680  0457  0020               	movlb	0	; select bank0
 10681  0458  085A               	movf	rdBlkRegCompleteHandler@p,w
 10682  0459  0086               	movwf	6
 10683  045A  0187               	clrf	7
 10684  045B  3F40               	moviw [0]fsr1
 10685  045C  00F0               	movwf	i2c_setBuffer@bufferSize
 10686  045D  3F41               	moviw [1]fsr1
 10687  045E  00F1               	movwf	i2c_setBuffer@bufferSize+1
 10688  045F  085A               	movf	rdBlkRegCompleteHandler@p,w
 10689  0460  3E02               	addlw	2
 10690  0461  0086               	movwf	6
 10691  0462  0187               	clrf	7
 10692  0463  0801               	movf	1,w
 10693  0464  3185  2524  3184   	fcall	_i2c_setBuffer
 10694                           
 10695                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 10696  0467  3000               	movlw	0
 10697  0468  00F5               	movwf	i2c_setDataCompleteCallback@cb
 10698  0469  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 10699  046A  01F7               	clrf	i2c_setDataCompleteCallback@p
 10700  046B  3185  2543  3184   	fcall	_i2c_setDataCompleteCallback
 10701  046E                     i1l3957:	
 10702                           
 10703                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
 10704  046E  3002               	movlw	2
 10705  046F                     i1l340:	
 10706  046F  0008               	return
 10707  0470                     __end_of_rdBlkRegCompleteHandler:	
 10708                           
 10709                           	psect	text47
 10710  04CB                     __ptext47:	
 10711 ;; *************** function _rd2RegCompleteHandler *****************
 10712 ;; Defined at:
 10713 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10714 ;; Parameters:    Size  Location     Type
 10715 ;;  p               1    1[BANK0 ] PTR void 
 10716 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10717 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10718 ;; Auto vars:     Size  Location     Type
 10719 ;;		None
 10720 ;; Return value:  Size  Location     Type
 10721 ;;                  1    wreg      enum E358
 10722 ;; Registers used:
 10723 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10724 ;; Tracked objects:
 10725 ;;		On entry : 0/0
 10726 ;;		On exit  : 0/0
 10727 ;;		Unchanged: 0/0
 10728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10729 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10732 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10733 ;;Total ram usage:        1 bytes
 10734 ;; Hardware stack levels used:    1
 10735 ;; Hardware stack levels required when called:    2
 10736 ;; This function calls:
 10737 ;;		_i2c_setBuffer
 10738 ;;		_i2c_setDataCompleteCallback
 10739 ;; This function is called by:
 10740 ;;		_i2c_read2ByteRegister
 10741 ;;		_do_I2C_DO_ADDRESS_NACK
 10742 ;;		_do_I2C_TX
 10743 ;;		_do_I2C_RX
 10744 ;;		_do_I2C_TX_EMPTY
 10745 ;; This function uses a non-reentrant model
 10746 ;;
 10747                           
 10748                           
 10749                           ;psect for function _rd2RegCompleteHandler
 10750  04CB                     _rd2RegCompleteHandler:	
 10751  04CB                     i1l3939:	
 10752                           ;incstack = 0
 10753                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10754                           
 10755                           
 10756                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
 10757  04CB  3002               	movlw	2
 10758  04CC  00F0               	movwf	i2c_setBuffer@bufferSize
 10759  04CD  3000               	movlw	0
 10760  04CE  00F1               	movwf	i2c_setBuffer@bufferSize+1
 10761  04CF  0020               	movlb	0	; select bank0
 10762  04D0  085A               	movf	rd2RegCompleteHandler@p,w
 10763  04D1  3185  2524  3184   	fcall	_i2c_setBuffer
 10764  04D4                     i1l3941:	
 10765                           
 10766                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 10767  04D4  3000               	movlw	0
 10768  04D5  00F5               	movwf	i2c_setDataCompleteCallback@cb
 10769  04D6  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 10770  04D7  01F7               	clrf	i2c_setDataCompleteCallback@p
 10771  04D8  3185  2543  3184   	fcall	_i2c_setDataCompleteCallback
 10772  04DB                     i1l3943:	
 10773                           
 10774                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
 10775  04DB  3002               	movlw	2
 10776  04DC                     i1l316:	
 10777  04DC  0008               	return
 10778  04DD                     __end_of_rd2RegCompleteHandler:	
 10779                           
 10780                           	psect	text48
 10781  04DD                     __ptext48:	
 10782 ;; *************** function _rd1RegCompleteHandler *****************
 10783 ;; Defined at:
 10784 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10785 ;; Parameters:    Size  Location     Type
 10786 ;;  p               1    1[BANK0 ] PTR void 
 10787 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10788 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10789 ;; Auto vars:     Size  Location     Type
 10790 ;;		None
 10791 ;; Return value:  Size  Location     Type
 10792 ;;                  1    wreg      enum E358
 10793 ;; Registers used:
 10794 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10795 ;; Tracked objects:
 10796 ;;		On entry : 0/0
 10797 ;;		On exit  : 0/0
 10798 ;;		Unchanged: 0/0
 10799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10800 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10803 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10804 ;;Total ram usage:        1 bytes
 10805 ;; Hardware stack levels used:    1
 10806 ;; Hardware stack levels required when called:    2
 10807 ;; This function calls:
 10808 ;;		_i2c_setBuffer
 10809 ;;		_i2c_setDataCompleteCallback
 10810 ;; This function is called by:
 10811 ;;		_i2c_read1ByteRegister
 10812 ;;		_do_I2C_DO_ADDRESS_NACK
 10813 ;;		_do_I2C_TX
 10814 ;;		_do_I2C_RX
 10815 ;;		_do_I2C_TX_EMPTY
 10816 ;; This function uses a non-reentrant model
 10817 ;;
 10818                           
 10819                           
 10820                           ;psect for function _rd1RegCompleteHandler
 10821  04DD                     _rd1RegCompleteHandler:	
 10822  04DD                     i1l3931:	
 10823                           ;incstack = 0
 10824                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10825                           
 10826                           
 10827                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
 10828  04DD  3001               	movlw	1
 10829  04DE  00F0               	movwf	i2c_setBuffer@bufferSize
 10830  04DF  3000               	movlw	0
 10831  04E0  00F1               	movwf	i2c_setBuffer@bufferSize+1
 10832  04E1  0020               	movlb	0	; select bank0
 10833  04E2  085A               	movf	rd1RegCompleteHandler@p,w
 10834  04E3  3185  2524  3184   	fcall	_i2c_setBuffer
 10835  04E6                     i1l3933:	
 10836                           
 10837                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 10838  04E6  3000               	movlw	0
 10839  04E7  00F5               	movwf	i2c_setDataCompleteCallback@cb
 10840  04E8  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 10841  04E9  01F7               	clrf	i2c_setDataCompleteCallback@p
 10842  04EA  3185  2543  3184   	fcall	_i2c_setDataCompleteCallback
 10843  04ED                     i1l3935:	
 10844                           
 10845                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
 10846  04ED  3002               	movlw	2
 10847  04EE                     i1l301:	
 10848  04EE  0008               	return
 10849  04EF                     __end_of_rd1RegCompleteHandler:	
 10850                           
 10851                           	psect	text49
 10852  04EF                     __ptext49:	
 10853 ;; *************** function _wr1RegCompleteHandler *****************
 10854 ;; Defined at:
 10855 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10856 ;; Parameters:    Size  Location     Type
 10857 ;;  p               1    1[BANK0 ] PTR void 
 10858 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10859 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10860 ;; Auto vars:     Size  Location     Type
 10861 ;;		None
 10862 ;; Return value:  Size  Location     Type
 10863 ;;                  1    wreg      enum E358
 10864 ;; Registers used:
 10865 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10866 ;; Tracked objects:
 10867 ;;		On entry : 0/0
 10868 ;;		On exit  : 0/0
 10869 ;;		Unchanged: 0/0
 10870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10871 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10874 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10875 ;;Total ram usage:        1 bytes
 10876 ;; Hardware stack levels used:    1
 10877 ;; Hardware stack levels required when called:    2
 10878 ;; This function calls:
 10879 ;;		_i2c_setBuffer
 10880 ;;		_i2c_setDataCompleteCallback
 10881 ;; This function is called by:
 10882 ;;		_i2c_write1ByteRegister
 10883 ;;		_do_I2C_DO_ADDRESS_NACK
 10884 ;;		_do_I2C_TX
 10885 ;;		_do_I2C_RX
 10886 ;;		_do_I2C_TX_EMPTY
 10887 ;; This function uses a non-reentrant model
 10888 ;;
 10889                           
 10890                           
 10891                           ;psect for function _wr1RegCompleteHandler
 10892  04EF                     _wr1RegCompleteHandler:	
 10893  04EF                     i1l3923:	
 10894                           ;incstack = 0
 10895                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10896                           
 10897                           
 10898                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
 10899  04EF  3001               	movlw	1
 10900  04F0  00F0               	movwf	i2c_setBuffer@bufferSize
 10901  04F1  3000               	movlw	0
 10902  04F2  00F1               	movwf	i2c_setBuffer@bufferSize+1
 10903  04F3  0020               	movlb	0	; select bank0
 10904  04F4  085A               	movf	wr1RegCompleteHandler@p,w
 10905  04F5  3185  2524  3184   	fcall	_i2c_setBuffer
 10906  04F8                     i1l3925:	
 10907                           
 10908                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 10909  04F8  3000               	movlw	0
 10910  04F9  00F5               	movwf	i2c_setDataCompleteCallback@cb
 10911  04FA  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 10912  04FB  01F7               	clrf	i2c_setDataCompleteCallback@p
 10913  04FC  3185  2543  3184   	fcall	_i2c_setDataCompleteCallback
 10914  04FF                     i1l3927:	
 10915                           
 10916                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
 10917  04FF  3004               	movlw	4
 10918  0500                     i1l280:	
 10919  0500  0008               	return
 10920  0501                     __end_of_wr1RegCompleteHandler:	
 10921                           
 10922                           	psect	text50
 10923  0615                     __ptext50:	
 10924 ;; *************** function _i2c_restartWrite *****************
 10925 ;; Defined at:
 10926 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 10927 ;; Parameters:    Size  Location     Type
 10928 ;;  p               1    1[BANK0 ] PTR void 
 10929 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10930 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10931 ;; Auto vars:     Size  Location     Type
 10932 ;;		None
 10933 ;; Return value:  Size  Location     Type
 10934 ;;                  1    wreg      enum E358
 10935 ;; Registers used:
 10936 ;;		wreg
 10937 ;; Tracked objects:
 10938 ;;		On entry : 0/0
 10939 ;;		On exit  : 0/0
 10940 ;;		Unchanged: 0/0
 10941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10942 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10945 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10946 ;;Total ram usage:        1 bytes
 10947 ;; Hardware stack levels used:    1
 10948 ;; This function calls:
 10949 ;;		Nothing
 10950 ;; This function is called by:
 10951 ;;		_i2c_write1ByteRegister
 10952 ;;		_i2c_writeNBytes
 10953 ;;		_i2c_read1ByteRegister
 10954 ;;		_i2c_read2ByteRegister
 10955 ;;		_i2c_write2ByteRegister
 10956 ;;		_i2c_readDataBlock
 10957 ;;		_do_I2C_DO_ADDRESS_NACK
 10958 ;;		_do_I2C_TX
 10959 ;;		_do_I2C_RX
 10960 ;;		_do_I2C_TX_EMPTY
 10961 ;; This function uses a non-reentrant model
 10962 ;;
 10963                           
 10964                           
 10965                           ;psect for function _i2c_restartWrite
 10966  0615                     _i2c_restartWrite:	
 10967  0615                     i1l3961:	
 10968                           ;incstack = 0
 10969                           ; Regs used in _i2c_restartWrite: [wreg]
 10970                           
 10971                           
 10972                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
 10973  0615  3003               	movlw	3
 10974  0616                     i1l367:	
 10975  0616  0008               	return
 10976  0617                     __end_of_i2c_restartWrite:	
 10977                           
 10978                           	psect	text51
 10979  0617                     __ptext51:	
 10980 ;; *************** function _returnReset *****************
 10981 ;; Defined at:
 10982 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 10983 ;; Parameters:    Size  Location     Type
 10984 ;;  p               1    1[BANK0 ] PTR void 
 10985 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10986 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10987 ;; Auto vars:     Size  Location     Type
 10988 ;;		None
 10989 ;; Return value:  Size  Location     Type
 10990 ;;                  1    wreg      enum E12568
 10991 ;; Registers used:
 10992 ;;		wreg
 10993 ;; Tracked objects:
 10994 ;;		On entry : 0/0
 10995 ;;		On exit  : 0/0
 10996 ;;		Unchanged: 0/0
 10997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10998 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11001 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11002 ;;Total ram usage:        1 bytes
 11003 ;; Hardware stack levels used:    1
 11004 ;; This function calls:
 11005 ;;		Nothing
 11006 ;; This function is called by:
 11007 ;;		_i2c_open
 11008 ;;		_do_I2C_DO_ADDRESS_NACK
 11009 ;;		_do_I2C_TX
 11010 ;;		_do_I2C_RX
 11011 ;;		_do_I2C_TX_EMPTY
 11012 ;; This function uses a non-reentrant model
 11013 ;;
 11014                           
 11015                           
 11016                           ;psect for function _returnReset
 11017  0617                     _returnReset:	
 11018  0617                     i1l3919:	
 11019                           ;incstack = 0
 11020                           ; Regs used in _returnReset: [wreg]
 11021                           
 11022                           
 11023                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 11024  0617  3005               	movlw	5
 11025  0618                     i1l256:	
 11026  0618  0008               	return
 11027  0619                     __end_of_returnReset:	
 11028                           
 11029                           	psect	text52
 11030  0619                     __ptext52:	
 11031 ;; *************** function _returnStop *****************
 11032 ;; Defined at:
 11033 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 11034 ;; Parameters:    Size  Location     Type
 11035 ;;  p               1    1[BANK0 ] PTR void 
 11036 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 11037 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 11038 ;; Auto vars:     Size  Location     Type
 11039 ;;		None
 11040 ;; Return value:  Size  Location     Type
 11041 ;;                  1    wreg      enum E12568
 11042 ;; Registers used:
 11043 ;;		wreg
 11044 ;; Tracked objects:
 11045 ;;		On entry : 0/0
 11046 ;;		On exit  : 0/0
 11047 ;;		Unchanged: 0/0
 11048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11049 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11052 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11053 ;;Total ram usage:        1 bytes
 11054 ;; Hardware stack levels used:    1
 11055 ;; This function calls:
 11056 ;;		Nothing
 11057 ;; This function is called by:
 11058 ;;		_setCallBack
 11059 ;;		_i2c_open
 11060 ;;		_do_I2C_DO_ADDRESS_NACK
 11061 ;;		_do_I2C_TX
 11062 ;;		_do_I2C_RX
 11063 ;;		_do_I2C_TX_EMPTY
 11064 ;; This function uses a non-reentrant model
 11065 ;;
 11066                           
 11067                           
 11068                           ;psect for function _returnStop
 11069  0619                     _returnStop:	
 11070  0619                     i1l3915:	
 11071                           ;incstack = 0
 11072                           ; Regs used in _returnStop: [wreg]
 11073                           
 11074                           
 11075                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
 11076  0619  3001               	movlw	1
 11077  061A                     i1l253:	
 11078  061A  0008               	return
 11079  061B                     __end_of_returnStop:	
 11080                           
 11081                           	psect	text53
 11082  0501                     __ptext53:	
 11083 ;; *************** function _wr2RegCompleteHandler *****************
 11084 ;; Defined at:
 11085 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 11086 ;; Parameters:    Size  Location     Type
 11087 ;;  p               1    1[BANK0 ] PTR void 
 11088 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 11089 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 11090 ;; Auto vars:     Size  Location     Type
 11091 ;;		None
 11092 ;; Return value:  Size  Location     Type
 11093 ;;                  1    wreg      enum E358
 11094 ;; Registers used:
 11095 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11096 ;; Tracked objects:
 11097 ;;		On entry : 0/0
 11098 ;;		On exit  : 0/0
 11099 ;;		Unchanged: 0/0
 11100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11101 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11104 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11105 ;;Total ram usage:        1 bytes
 11106 ;; Hardware stack levels used:    1
 11107 ;; Hardware stack levels required when called:    2
 11108 ;; This function calls:
 11109 ;;		_i2c_setBuffer
 11110 ;;		_i2c_setDataCompleteCallback
 11111 ;; This function is called by:
 11112 ;;		_i2c_write2ByteRegister
 11113 ;;		_do_I2C_DO_ADDRESS_NACK
 11114 ;;		_do_I2C_TX
 11115 ;;		_do_I2C_RX
 11116 ;;		_do_I2C_TX_EMPTY
 11117 ;; This function uses a non-reentrant model
 11118 ;;
 11119                           
 11120                           
 11121                           ;psect for function _wr2RegCompleteHandler
 11122  0501                     _wr2RegCompleteHandler:	
 11123  0501                     i1l3947:	
 11124                           ;incstack = 0
 11125                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 11126                           
 11127                           
 11128                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
 11129  0501  3002               	movlw	2
 11130  0502  00F0               	movwf	i2c_setBuffer@bufferSize
 11131  0503  3000               	movlw	0
 11132  0504  00F1               	movwf	i2c_setBuffer@bufferSize+1
 11133  0505  0020               	movlb	0	; select bank0
 11134  0506  085A               	movf	wr2RegCompleteHandler@p,w
 11135  0507  3185  2524  3185   	fcall	_i2c_setBuffer
 11136  050A                     i1l3949:	
 11137                           
 11138                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 11139  050A  3000               	movlw	0
 11140  050B  00F5               	movwf	i2c_setDataCompleteCallback@cb
 11141  050C  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 11142  050D  01F7               	clrf	i2c_setDataCompleteCallback@p
 11143  050E  3185  2543  3185   	fcall	_i2c_setDataCompleteCallback
 11144  0511                     i1l3951:	
 11145                           
 11146                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
 11147  0511  3004               	movlw	4
 11148  0512                     i1l328:	
 11149  0512  0008               	return
 11150  0513                     __end_of_wr2RegCompleteHandler:	
 11151                           
 11152                           	psect	text54
 11153  0543                     __ptext54:	
 11154 ;; *************** function _i2c_setDataCompleteCallback *****************
 11155 ;; Defined at:
 11156 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 11157 ;; Parameters:    Size  Location     Type
 11158 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 11159 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 11160 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 11161 ;;  p               1    7[COMMON] PTR void 
 11162 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 11163 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 11164 ;; Auto vars:     Size  Location     Type
 11165 ;;		None
 11166 ;; Return value:  Size  Location     Type
 11167 ;;                  1    wreg      void 
 11168 ;; Registers used:
 11169 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11170 ;; Tracked objects:
 11171 ;;		On entry : 0/0
 11172 ;;		On exit  : 0/0
 11173 ;;		Unchanged: 0/0
 11174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11175 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11177 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11178 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11179 ;;Total ram usage:        4 bytes
 11180 ;; Hardware stack levels used:    1
 11181 ;; Hardware stack levels required when called:    1
 11182 ;; This function calls:
 11183 ;;		_setCallBack
 11184 ;; This function is called by:
 11185 ;;		_wr1RegCompleteHandler
 11186 ;;		_rd1RegCompleteHandler
 11187 ;;		_rd2RegCompleteHandler
 11188 ;;		_wr2RegCompleteHandler
 11189 ;;		_rdBlkRegCompleteHandler
 11190 ;;		_i2c_write1ByteRegister
 11191 ;;		_i2c_read1ByteRegister
 11192 ;;		_i2c_read2ByteRegister
 11193 ;;		_i2c_write2ByteRegister
 11194 ;;		_i2c_readDataBlock
 11195 ;; This function uses a non-reentrant model
 11196 ;;
 11197                           
 11198                           
 11199                           ;psect for function _i2c_setDataCompleteCallback
 11200  0543                     _i2c_setDataCompleteCallback:	
 11201  0543                     i1l3905:	
 11202                           ;incstack = 0
 11203                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 11204                           
 11205                           
 11206                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
 11207  0543  0876               	movf	i2c_setDataCompleteCallback@cb+1,w
 11208  0544  00F1               	movwf	setCallBack@cb+1
 11209  0545  0875               	movf	i2c_setDataCompleteCallback@cb,w
 11210  0546  00F0               	movwf	setCallBack@cb
 11211  0547  0877               	movf	i2c_setDataCompleteCallback@p,w
 11212  0548  0020               	movlb	0	; select bank0
 11213  0549  00D9               	movwf	??_i2c_setDataCompleteCallback
 11214  054A  0859               	movf	??_i2c_setDataCompleteCallback,w
 11215  054B  00F2               	movwf	setCallBack@p
 11216  054C  3000               	movlw	0
 11217  054D  3183  2389  3185   	fcall	_setCallBack
 11218  0550                     i1l110:	
 11219  0550  0008               	return
 11220  0551                     __end_of_i2c_setDataCompleteCallback:	
 11221                           
 11222                           	psect	text55
 11223  0389                     __ptext55:	
 11224 ;; *************** function _setCallBack *****************
 11225 ;; Defined at:
 11226 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 11227 ;; Parameters:    Size  Location     Type
 11228 ;;  idx             1    wreg     enum E12740
 11229 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 11230 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 11231 ;;		 -> i2c_restartWrite(1), wr1RegCompleteHandler(1), Absolute function(1), 
 11232 ;;  p               1    2[COMMON] PTR void 
 11233 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 11234 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 11235 ;; Auto vars:     Size  Location     Type
 11236 ;;  idx             1    4[COMMON] enum E12740
 11237 ;; Return value:  Size  Location     Type
 11238 ;;                  1    wreg      void 
 11239 ;; Registers used:
 11240 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11241 ;; Tracked objects:
 11242 ;;		On entry : 0/0
 11243 ;;		On exit  : 0/0
 11244 ;;		Unchanged: 0/0
 11245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11246 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11247 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11248 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11249 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11250 ;;Total ram usage:        5 bytes
 11251 ;; Hardware stack levels used:    1
 11252 ;; This function calls:
 11253 ;;		Nothing
 11254 ;; This function is called by:
 11255 ;;		_i2c_setDataCompleteCallback
 11256 ;;		_i2c_setWriteCollisionCallback
 11257 ;;		_i2c_setAddressNACKCallback
 11258 ;;		_i2c_setDataNACKCallback
 11259 ;;		_i2c_setTimeOutCallback
 11260 ;; This function uses a non-reentrant model
 11261 ;;
 11262                           
 11263                           
 11264                           ;psect for function _setCallBack
 11265  0389                     _setCallBack:	
 11266                           
 11267                           ;incstack = 0
 11268                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 11269                           ;setCallBack@idx stored from wreg
 11270  0389  00F4               	movwf	setCallBack@idx
 11271  038A                     i1l3899:	
 11272                           
 11273                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
 11274  038A  0870               	movf	setCallBack@cb,w
 11275  038B  0471               	iorwf	setCallBack@cb+1,w
 11276  038C  1903               	btfsc	3,2
 11277  038D  2B8F               	goto	u183_21
 11278  038E  2B90               	goto	u183_20
 11279  038F                     u183_21:	
 11280  038F  2BA1               	goto	i1l3903
 11281  0390                     u183_20:	
 11282  0390                     i1l3901:	
 11283                           
 11284                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
 11285  0390  3574               	lslf	setCallBack@idx,w
 11286  0391  3E2B               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 11287  0392  0086               	movwf	6
 11288  0393  0187               	clrf	7
 11289  0394  0870               	movf	setCallBack@cb,w
 11290  0395  3FC0               	movwi [0]fsr1
 11291  0396  0871               	movf	setCallBack@cb+1,w
 11292  0397  3FC1               	movwi [1]fsr1
 11293                           
 11294                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
 11295  0398  0872               	movf	setCallBack@p,w
 11296  0399  00F3               	movwf	??_setCallBack
 11297  039A  0874               	movf	setCallBack@idx,w
 11298  039B  3E37               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 11299  039C  0086               	movwf	6
 11300  039D  0187               	clrf	7
 11301  039E  0873               	movf	??_setCallBack,w
 11302  039F  0081               	movwf	1
 11303                           
 11304                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
 11305  03A0  2BAE               	goto	i1l261
 11306  03A1                     i1l3903:	
 11307                           
 11308                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
 11309  03A1  3574               	lslf	setCallBack@idx,w
 11310  03A2  3E2B               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 11311  03A3  0086               	movwf	6
 11312  03A4  0187               	clrf	7
 11313  03A5  3019               	movlw	low _returnStop
 11314  03A6  3FC0               	movwi [0]fsr1
 11315  03A7  3006               	movlw	high _returnStop
 11316  03A8  3FC1               	movwi [1]fsr1
 11317                           
 11318                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
 11319  03A9  0874               	movf	setCallBack@idx,w
 11320  03AA  3E37               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 11321  03AB  0086               	movwf	6
 11322  03AC  0187               	clrf	7
 11323  03AD  0181               	clrf	1
 11324  03AE                     i1l261:	
 11325  03AE  0008               	return
 11326  03AF                     __end_of_setCallBack:	
 11327                           
 11328                           	psect	text56
 11329  0524                     __ptext56:	
 11330 ;; *************** function _i2c_setBuffer *****************
 11331 ;; Defined at:
 11332 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 11333 ;; Parameters:    Size  Location     Type
 11334 ;;  buffer          1    wreg     PTR void 
 11335 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 11336 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 11337 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 11338 ;;  bufferSize      2    0[COMMON] unsigned int 
 11339 ;; Auto vars:     Size  Location     Type
 11340 ;;  buffer          1    3[COMMON] PTR void 
 11341 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 11342 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 11343 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 11344 ;; Return value:  Size  Location     Type
 11345 ;;                  1    wreg      void 
 11346 ;; Registers used:
 11347 ;;		wreg
 11348 ;; Tracked objects:
 11349 ;;		On entry : 0/0
 11350 ;;		On exit  : 0/0
 11351 ;;		Unchanged: 0/0
 11352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11353 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11354 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11355 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11356 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11357 ;;Total ram usage:        4 bytes
 11358 ;; Hardware stack levels used:    1
 11359 ;; This function calls:
 11360 ;;		Nothing
 11361 ;; This function is called by:
 11362 ;;		_wr1RegCompleteHandler
 11363 ;;		_rd1RegCompleteHandler
 11364 ;;		_rd2RegCompleteHandler
 11365 ;;		_wr2RegCompleteHandler
 11366 ;;		_rdBlkRegCompleteHandler
 11367 ;;		_i2c_write1ByteRegister
 11368 ;;		_i2c_writeNBytes
 11369 ;;		_i2c_read1ByteRegister
 11370 ;;		_i2c_read2ByteRegister
 11371 ;;		_i2c_write2ByteRegister
 11372 ;;		_i2c_readDataBlock
 11373 ;;		_i2c_readNBytes
 11374 ;; This function uses a non-reentrant model
 11375 ;;
 11376                           
 11377                           
 11378                           ;psect for function _i2c_setBuffer
 11379  0524                     _i2c_setBuffer:	
 11380                           
 11381                           ;incstack = 0
 11382                           ; Regs used in _i2c_setBuffer: [wreg]
 11383                           ;i2c_setBuffer@buffer stored from wreg
 11384  0524  00F3               	movwf	i2c_setBuffer@buffer
 11385  0525                     i1l2929:	
 11386                           
 11387                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
 11388  0525  0020               	movlb	0	; select bank0
 11389  0526  1D20               	btfss	_i2c_status,2
 11390  0527  2D29               	goto	u115_21
 11391  0528  2D2A               	goto	u115_20
 11392  0529                     u115_21:	
 11393  0529  2D33               	goto	i1l140
 11394  052A                     u115_20:	
 11395  052A                     i1l2931:	
 11396                           
 11397                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
 11398  052A  0873               	movf	i2c_setBuffer@buffer,w
 11399  052B  00F2               	movwf	??_i2c_setBuffer
 11400  052C  0872               	movf	??_i2c_setBuffer,w
 11401  052D  00A2               	movwf	low ((_i2c_status| 0+2))
 11402                           
 11403                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
 11404  052E  0871               	movf	i2c_setBuffer@bufferSize+1,w
 11405  052F  00A4               	movwf	_i2c_status+4
 11406  0530  0870               	movf	i2c_setBuffer@bufferSize,w
 11407  0531  00A3               	movwf	_i2c_status+3
 11408  0532                     i1l2933:	
 11409                           
 11410                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
 11411  0532  1120               	bcf	_i2c_status,2
 11412  0533                     i1l140:	
 11413  0533  0008               	return
 11414  0534                     __end_of_i2c_setBuffer:	
 11415                           
 11416                           	psect	text57
 11417  060F                     __ptext57:	
 11418 ;; *************** function _i2c1_driver_stop *****************
 11419 ;; Defined at:
 11420 ;;		line 157 in file "mcc_generated_files/i2c1_driver.c"
 11421 ;; Parameters:    Size  Location     Type
 11422 ;;		None
 11423 ;; Auto vars:     Size  Location     Type
 11424 ;;		None
 11425 ;; Return value:  Size  Location     Type
 11426 ;;                  1    wreg      void 
 11427 ;; Registers used:
 11428 ;;		None
 11429 ;; Tracked objects:
 11430 ;;		On entry : 0/0
 11431 ;;		On exit  : 0/0
 11432 ;;		Unchanged: 0/0
 11433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11438 ;;Total ram usage:        0 bytes
 11439 ;; Hardware stack levels used:    1
 11440 ;; This function calls:
 11441 ;;		Nothing
 11442 ;; This function is called by:
 11443 ;;		_do_I2C_SEND_STOP
 11444 ;; This function uses a non-reentrant model
 11445 ;;
 11446                           
 11447                           
 11448                           ;psect for function _i2c1_driver_stop
 11449  060F                     _i2c1_driver_stop:	
 11450  060F                     i1l2937:	
 11451                           ;incstack = 0
 11452                           ; Regs used in _i2c1_driver_stop: []
 11453                           
 11454                           
 11455                           ;mcc_generated_files/i2c1_driver.c: 159:     SSP1CON2bits.PEN = 1;
 11456  060F  0023               	movlb	3	; select bank3
 11457  0610  1511               	bsf	17,2	;volatile
 11458  0611                     i1l668:	
 11459  0611  0008               	return
 11460  0612                     __end_of_i2c1_driver_stop:	
 11461                           
 11462                           	psect	text58
 11463  0612                     __ptext58:	
 11464 ;; *************** function _i2c1_driver_restart *****************
 11465 ;; Defined at:
 11466 ;;		line 152 in file "mcc_generated_files/i2c1_driver.c"
 11467 ;; Parameters:    Size  Location     Type
 11468 ;;		None
 11469 ;; Auto vars:     Size  Location     Type
 11470 ;;		None
 11471 ;; Return value:  Size  Location     Type
 11472 ;;                  1    wreg      void 
 11473 ;; Registers used:
 11474 ;;		None
 11475 ;; Tracked objects:
 11476 ;;		On entry : 0/0
 11477 ;;		On exit  : 0/0
 11478 ;;		Unchanged: 0/0
 11479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11484 ;;Total ram usage:        0 bytes
 11485 ;; Hardware stack levels used:    1
 11486 ;; This function calls:
 11487 ;;		Nothing
 11488 ;; This function is called by:
 11489 ;;		_do_I2C_SEND_RESTART_READ
 11490 ;;		_do_I2C_SEND_RESTART_WRITE
 11491 ;;		_do_I2C_SEND_RESTART
 11492 ;; This function uses a non-reentrant model
 11493 ;;
 11494                           
 11495                           
 11496                           ;psect for function _i2c1_driver_restart
 11497  0612                     _i2c1_driver_restart:	
 11498  0612                     i1l2935:	
 11499                           ;incstack = 0
 11500                           ; Regs used in _i2c1_driver_restart: []
 11501                           
 11502                           
 11503                           ;mcc_generated_files/i2c1_driver.c: 154:     SSP1CON2bits.RSEN = 1;
 11504  0612  0023               	movlb	3	; select bank3
 11505  0613  1491               	bsf	17,1	;volatile
 11506  0614                     i1l665:	
 11507  0614  0008               	return
 11508  0615                     __end_of_i2c1_driver_restart:	
 11509                           
 11510                           	psect	text59
 11511  05FC                     __ptext59:	
 11512 ;; *************** function _i2c1_driver_sendACK *****************
 11513 ;; Defined at:
 11514 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
 11515 ;; Parameters:    Size  Location     Type
 11516 ;;		None
 11517 ;; Auto vars:     Size  Location     Type
 11518 ;;		None
 11519 ;; Return value:  Size  Location     Type
 11520 ;;                  1    wreg      void 
 11521 ;; Registers used:
 11522 ;;		None
 11523 ;; Tracked objects:
 11524 ;;		On entry : 0/0
 11525 ;;		On exit  : 0/0
 11526 ;;		Unchanged: 0/0
 11527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11532 ;;Total ram usage:        0 bytes
 11533 ;; Hardware stack levels used:    1
 11534 ;; This function calls:
 11535 ;;		Nothing
 11536 ;; This function is called by:
 11537 ;;		_do_I2C_DO_ACK
 11538 ;;		_do_I2C_RX
 11539 ;; This function uses a non-reentrant model
 11540 ;;
 11541                           
 11542                           
 11543                           ;psect for function _i2c1_driver_sendACK
 11544  05FC                     _i2c1_driver_sendACK:	
 11545  05FC                     i1l2989:	
 11546                           ;incstack = 0
 11547                           ; Regs used in _i2c1_driver_sendACK: []
 11548                           
 11549                           
 11550                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKDT = 0;
 11551  05FC  0023               	movlb	3	; select bank3
 11552  05FD  1291               	bcf	17,5	;volatile
 11553                           
 11554                           ;mcc_generated_files/i2c1_driver.c: 200:     SSP1CON2bits.ACKEN = 1;
 11555  05FE  1611               	bsf	17,4	;volatile
 11556  05FF                     i1l692:	
 11557  05FF  0008               	return
 11558  0600                     __end_of_i2c1_driver_sendACK:	
 11559                           
 11560                           	psect	text60
 11561  04B5                     __ptext60:	
 11562 ;; *************** function _TMR1_ISR *****************
 11563 ;; Defined at:
 11564 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 11565 ;; Parameters:    Size  Location     Type
 11566 ;;		None
 11567 ;; Auto vars:     Size  Location     Type
 11568 ;;		None
 11569 ;; Return value:  Size  Location     Type
 11570 ;;                  1    wreg      void 
 11571 ;; Registers used:
 11572 ;;		wreg, status,2, status,0, pclath, cstack
 11573 ;; Tracked objects:
 11574 ;;		On entry : 0/0
 11575 ;;		On exit  : 0/0
 11576 ;;		Unchanged: 0/0
 11577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11582 ;;Total ram usage:        0 bytes
 11583 ;; Hardware stack levels used:    1
 11584 ;; Hardware stack levels required when called:    2
 11585 ;; This function calls:
 11586 ;;		Absolute function
 11587 ;;		_TMR1_DefaultInterruptHandler
 11588 ;;		_TMR1_WriteTimer
 11589 ;;		_h_clock
 11590 ;; This function is called by:
 11591 ;;		_INTERRUPT_InterruptManager
 11592 ;; This function uses a non-reentrant model
 11593 ;;
 11594                           
 11595                           
 11596                           ;psect for function _TMR1_ISR
 11597  04B5                     _TMR1_ISR:	
 11598  04B5                     i1l3531:	
 11599                           ;incstack = 0
 11600                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 11601                           
 11602                           
 11603                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 11604  04B5  002E               	movlb	14	; select bank14
 11605  04B6  1010               	bcf	16,0	;volatile
 11606  04B7                     i1l3533:	
 11607                           
 11608                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 11609  04B7  0879               	movf	_timer1ReloadVal+1,w	;volatile
 11610  04B8  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 11611  04B9  0878               	movf	_timer1ReloadVal,w	;volatile
 11612  04BA  00F0               	movwf	TMR1_WriteTimer@timerVal
 11613  04BB  3185  2513  3184   	fcall	_TMR1_WriteTimer
 11614  04BE                     i1l3535:	
 11615                           
 11616                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 11617  04BE  0020               	movlb	0	; select bank0
 11618  04BF  0846               	movf	_TMR1_InterruptHandler,w
 11619  04C0  0447               	iorwf	_TMR1_InterruptHandler+1,w
 11620  04C1  1903               	btfsc	3,2
 11621  04C2  2CC4               	goto	u146_21
 11622  04C3  2CC5               	goto	u146_20
 11623  04C4                     u146_21:	
 11624  04C4  2CCA               	goto	i1l428
 11625  04C5                     u146_20:	
 11626  04C5                     i1l3537:	
 11627                           
 11628                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 11629  04C5  0847               	movf	_TMR1_InterruptHandler+1,w
 11630  04C6  008A               	movwf	10
 11631  04C7  0846               	movf	_TMR1_InterruptHandler,w
 11632  04C8  000A               	callw
 11633  04C9  3184               	pagesel	$
 11634  04CA                     i1l428:	
 11635  04CA  0008               	return
 11636  04CB                     __end_of_TMR1_ISR:	
 11637                           
 11638                           	psect	text61
 11639  061C                     __ptext61:	
 11640 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 11641 ;; Defined at:
 11642 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 11643 ;; Parameters:    Size  Location     Type
 11644 ;;		None
 11645 ;; Auto vars:     Size  Location     Type
 11646 ;;		None
 11647 ;; Return value:  Size  Location     Type
 11648 ;;                  1    wreg      void 
 11649 ;; Registers used:
 11650 ;;		None
 11651 ;; Tracked objects:
 11652 ;;		On entry : 0/0
 11653 ;;		On exit  : 0/0
 11654 ;;		Unchanged: 0/0
 11655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11660 ;;Total ram usage:        0 bytes
 11661 ;; Hardware stack levels used:    1
 11662 ;; This function calls:
 11663 ;;		Nothing
 11664 ;; This function is called by:
 11665 ;;		_TMR1_Initialize
 11666 ;;		_TMR1_ISR
 11667 ;; This function uses a non-reentrant model
 11668 ;;
 11669                           
 11670                           
 11671                           ;psect for function _TMR1_DefaultInterruptHandler
 11672  061C                     _TMR1_DefaultInterruptHandler:	
 11673  061C                     i1l434:	
 11674                           ;incstack = 0
 11675                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 11676                           
 11677  061C  0008               	return
 11678  061D                     __end_of_TMR1_DefaultInterruptHandler:	
 11679                           
 11680                           	psect	text62
 11681  0488                     __ptext62:	
 11682 ;; *************** function _h_clock *****************
 11683 ;; Defined at:
 11684 ;;		line 25 in file "main.c"
 11685 ;; Parameters:    Size  Location     Type
 11686 ;;		None
 11687 ;; Auto vars:     Size  Location     Type
 11688 ;;		None
 11689 ;; Return value:  Size  Location     Type
 11690 ;;                  1    wreg      void 
 11691 ;; Registers used:
 11692 ;;		wreg, status,2, status,0, pclath, cstack
 11693 ;; Tracked objects:
 11694 ;;		On entry : 0/0
 11695 ;;		On exit  : 0/0
 11696 ;;		Unchanged: 0/0
 11697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11702 ;;Total ram usage:        0 bytes
 11703 ;; Hardware stack levels used:    1
 11704 ;; Hardware stack levels required when called:    1
 11705 ;; This function calls:
 11706 ;;		_update_clock
 11707 ;; This function is called by:
 11708 ;;		_main
 11709 ;;		_TMR1_ISR
 11710 ;; This function uses a non-reentrant model
 11711 ;;
 11712                           
 11713                           
 11714                           ;psect for function _h_clock
 11715  0488                     _h_clock:	
 11716  0488                     i1l831:	
 11717                           ;incstack = 0
 11718                           ; Regs used in _h_clock: [wreg+status,2+status,0+pclath+cstack]
 11719                           ;main.c: 26:     do { LATAbits.LATA7 = ~LATAbits.LATA7; } while(0);
 11720                           
 11721  0488                     i1l3407:	
 11722  0488  1003               	clrc
 11723  0489  0020               	movlb	0	; select bank0
 11724  048A  1F96               	btfss	22,7	;volatile
 11725  048B  1403               	setc
 11726  048C  1803               	btfsc	3,0
 11727  048D  2C8F               	goto	u135_21
 11728  048E  2C92               	goto	u135_20
 11729  048F                     u135_21:	
 11730  048F  0020               	movlb	0	; select bank0
 11731  0490  1796               	bsf	22,7	;volatile
 11732  0491  2C94               	goto	u136_24
 11733  0492                     u135_20:	
 11734  0492  0020               	movlb	0	; select bank0
 11735  0493  1396               	bcf	22,7	;volatile
 11736  0494                     u136_24:	
 11737  0494                     i1l3409:	
 11738                           
 11739                           ;main.c: 27:     if(!half) {
 11740  0494  197C               	btfsc	_half/(0+8),_half& (0+7)	;volatile
 11741  0495  2C97               	goto	u137_21
 11742  0496  2C98               	goto	u137_20
 11743  0497                     u137_21:	
 11744  0497  2C9D               	goto	i1l833
 11745  0498                     u137_20:	
 11746  0498                     i1l3411:	
 11747                           
 11748                           ;main.c: 28:         update_clock();
 11749  0498  3183  23F7  3184   	fcall	_update_clock
 11750  049B                     i1l3413:	
 11751                           
 11752                           ;main.c: 29:         half = 1;
 11753  049B  157C               	bsf	_half/(0+8),_half& (0+7)	;volatile
 11754                           
 11755                           ;main.c: 30:     }
 11756  049C  2C9E               	goto	i1l835
 11757  049D                     i1l833:	
 11758                           ;main.c: 31:     else {
 11759                           
 11760                           
 11761                           ;main.c: 32:         half = 0;
 11762  049D  117C               	bcf	_half/(0+8),_half& (0+7)	;volatile
 11763  049E                     i1l835:	
 11764  049E  0008               	return
 11765  049F                     __end_of_h_clock:	
 11766                           
 11767                           	psect	text63
 11768  03F7                     __ptext63:	
 11769 ;; *************** function _update_clock *****************
 11770 ;; Defined at:
 11771 ;;		line 211 in file "main.c"
 11772 ;; Parameters:    Size  Location     Type
 11773 ;;		None
 11774 ;; Auto vars:     Size  Location     Type
 11775 ;;		None
 11776 ;; Return value:  Size  Location     Type
 11777 ;;                  1    wreg      void 
 11778 ;; Registers used:
 11779 ;;		wreg, status,2, status,0
 11780 ;; Tracked objects:
 11781 ;;		On entry : 0/0
 11782 ;;		On exit  : 0/0
 11783 ;;		Unchanged: 0/0
 11784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11787 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11788 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11789 ;;Total ram usage:        1 bytes
 11790 ;; Hardware stack levels used:    1
 11791 ;; This function calls:
 11792 ;;		Nothing
 11793 ;; This function is called by:
 11794 ;;		_h_clock
 11795 ;; This function uses a non-reentrant model
 11796 ;;
 11797                           
 11798                           
 11799                           ;psect for function _update_clock
 11800  03F7                     _update_clock:	
 11801  03F7                     i1l3065:	
 11802                           ;incstack = 0
 11803                           ; Regs used in _update_clock: [wreg+status,2+status,0]
 11804                           
 11805                           
 11806                           ;main.c: 212:     seg++;
 11807  03F7  3001               	movlw	1
 11808  03F8  00F0               	movwf	??_update_clock
 11809  03F9  0870               	movf	??_update_clock,w
 11810  03FA  0020               	movlb	0	; select bank0
 11811  03FB  07D4               	addwf	_seg,f	;volatile
 11812                           
 11813                           ;main.c: 213:     last5s++;
 11814  03FC  3001               	movlw	1
 11815  03FD  00F0               	movwf	??_update_clock
 11816  03FE  0870               	movf	??_update_clock,w
 11817  03FF  07D2               	addwf	_last5s,f	;volatile
 11818  0400                     i1l3067:	
 11819                           
 11820                           ;main.c: 214:     if(seg >= 60) {
 11821  0400  303C               	movlw	60
 11822  0401  0254               	subwf	_seg,w	;volatile
 11823  0402  1C03               	skipc
 11824  0403  2C05               	goto	u119_21
 11825  0404  2C06               	goto	u119_20
 11826  0405                     u119_21:	
 11827  0405  2C1A               	goto	i1l930
 11828  0406                     u119_20:	
 11829  0406                     i1l3069:	
 11830                           
 11831                           ;main.c: 215:         clkm++;
 11832  0406  3001               	movlw	1
 11833  0407  00F0               	movwf	??_update_clock
 11834  0408  0870               	movf	??_update_clock,w
 11835  0409  07D6               	addwf	_clkm,f	;volatile
 11836                           
 11837                           ;main.c: 216:         last1m++;
 11838  040A  3001               	movlw	1
 11839  040B  00F0               	movwf	??_update_clock
 11840  040C  0870               	movf	??_update_clock,w
 11841  040D  07D1               	addwf	_last1m,f	;volatile
 11842  040E                     i1l3071:	
 11843                           
 11844                           ;main.c: 217:         seg = 0;
 11845  040E  01D4               	clrf	_seg	;volatile
 11846  040F                     i1l3073:	
 11847                           
 11848                           ;main.c: 218:         if(clkm >= 60) {
 11849  040F  303C               	movlw	60
 11850  0410  0256               	subwf	_clkm,w	;volatile
 11851  0411  1C03               	skipc
 11852  0412  2C14               	goto	u120_21
 11853  0413  2C15               	goto	u120_20
 11854  0414                     u120_21:	
 11855  0414  2C1A               	goto	i1l930
 11856  0415                     u120_20:	
 11857  0415                     i1l3075:	
 11858                           
 11859                           ;main.c: 219:             clkh++;
 11860  0415  3001               	movlw	1
 11861  0416  00F0               	movwf	??_update_clock
 11862  0417  0870               	movf	??_update_clock,w
 11863  0418  07D8               	addwf	_clkh,f	;volatile
 11864  0419                     i1l3077:	
 11865                           
 11866                           ;main.c: 220:             clkm = 0;
 11867  0419  01D6               	clrf	_clkm	;volatile
 11868  041A                     i1l930:	
 11869  041A  0008               	return
 11870  041B                     __end_of_update_clock:	
 11871                           
 11872                           	psect	text64
 11873  0513                     __ptext64:	
 11874 ;; *************** function _TMR1_WriteTimer *****************
 11875 ;; Defined at:
 11876 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 11877 ;; Parameters:    Size  Location     Type
 11878 ;;  timerVal        2    0[COMMON] unsigned short 
 11879 ;; Auto vars:     Size  Location     Type
 11880 ;;		None
 11881 ;; Return value:  Size  Location     Type
 11882 ;;                  1    wreg      void 
 11883 ;; Registers used:
 11884 ;;		wreg, status,2
 11885 ;; Tracked objects:
 11886 ;;		On entry : 0/0
 11887 ;;		On exit  : 0/0
 11888 ;;		Unchanged: 0/0
 11889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11893 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11894 ;;Total ram usage:        2 bytes
 11895 ;; Hardware stack levels used:    1
 11896 ;; This function calls:
 11897 ;;		Nothing
 11898 ;; This function is called by:
 11899 ;;		_TMR1_ISR
 11900 ;;		_TMR1_Reload
 11901 ;; This function uses a non-reentrant model
 11902 ;;
 11903                           
 11904                           
 11905                           ;psect for function _TMR1_WriteTimer
 11906  0513                     _TMR1_WriteTimer:	
 11907  0513                     i1l3311:	
 11908                           ;incstack = 0
 11909                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 11910                           
 11911                           
 11912                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 11913  0513  0024               	movlb	4	; select bank4
 11914  0514  1D0E               	btfss	14,2	;volatile
 11915  0515  2D17               	goto	u133_21
 11916  0516  2D18               	goto	u133_20
 11917  0517                     u133_21:	
 11918  0517  2D1F               	goto	i1l3321
 11919  0518                     u133_20:	
 11920  0518                     i1l3313:	
 11921                           
 11922                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 11923  0518  100E               	bcf	14,0	;volatile
 11924  0519                     i1l3315:	
 11925                           
 11926                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 11927  0519  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 11928  051A  008D               	movwf	13	;volatile
 11929  051B                     i1l3317:	
 11930                           
 11931                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 11932  051B  0870               	movf	TMR1_WriteTimer@timerVal,w
 11933  051C  008C               	movwf	12	;volatile
 11934  051D                     i1l3319:	
 11935                           
 11936                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 11937  051D  140E               	bsf	14,0	;volatile
 11938                           
 11939                           ;mcc_generated_files/tmr1.c: 140:     }
 11940  051E  2D23               	goto	i1l415
 11941  051F                     i1l3321:	
 11942                           
 11943                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 11944  051F  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 11945  0520  008D               	movwf	13	;volatile
 11946  0521                     i1l3323:	
 11947                           
 11948                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 11949  0521  0870               	movf	TMR1_WriteTimer@timerVal,w
 11950  0522  008C               	movwf	12	;volatile
 11951  0523                     i1l415:	
 11952  0523  0008               	return
 11953  0524                     __end_of_TMR1_WriteTimer:	
 11954  007E                     btemp	set	126	;btemp
 11955  007E                     int$flags	set	126
 11956  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    32
    Data        0
    BSS         216
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80     16      77
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$2621$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$2627	const PTR FTN()enum E12722 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX$2626	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$2621	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), wr1RegCompleteHandler(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S422$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    __ctoee@addr	PTR eeprom void  size(1) Largest target is 5
		 -> recovery_data(EEDATA[5]), 

    __eetoc@addr	PTR eeprom void  size(1) Largest target is 150
		 -> buffer(EEDATA[150]), recovery_data(EEDATA[5]), 

    __memcpyee@to	PTR eeprom unsigned char  size(1) Largest target is 5
		 -> recovery_data(EEDATA[5]), 

    __memcpyee@from	PTR const unsigned char  size(1) Largest target is 8
		 -> __fltoee@data(COMMON[4]), __fttoee@data(COMMON[4]), __otoee@data(COMMON[8]), __ltoee@data(COMMON[4]), 
		 -> __mtoee@data(COMMON[3]), __itoee@data(COMMON[2]), __ctoee@data(BANK0[1]), 

    __memcpyee@ptr	PTR const unsigned char  size(1) Largest target is 8
		 -> __fltoee@data(COMMON[4]), __fttoee@data(COMMON[4]), __otoee@data(COMMON[8]), __ltoee@data(COMMON[4]), 
		 -> __mtoee@data(COMMON[3]), __itoee@data(COMMON[2]), __ctoee@data(BANK0[1]), 

    __eecpymem@from	PTR eeprom unsigned char  size(1) Largest target is 150
		 -> buffer(EEDATA[150]), recovery_data(EEDATA[5]), 

    __eecpymem@to	PTR volatile unsigned char  size(1) Largest target is 8
		 -> __eetofl@data(COMMON[4]), __eetoft@data(COMMON[4]), __eetoo@data(COMMON[8]), __eetol@data(COMMON[4]), 
		 -> __eetom@data(COMMON[3]), __eetoi@data(COMMON[2]), __eetoc@data(BANK0[1]), 

    __eecpymem@cp	PTR volatile unsigned char  size(1) Largest target is 8
		 -> __eetofl@data(COMMON[4]), __eetoft@data(COMMON[4]), __eetoo@data(COMMON[8]), __eetol@data(COMMON[4]), 
		 -> __eetom@data(COMMON[3]), __eetoi@data(COMMON[2]), __eetoc@data(BANK0[1]), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> h_clock(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> h_clock(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S743$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), wr1RegCompleteHandler(), Absolute function(), 

    fsmStateTable	const PTR FTN()enum E12722[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S422$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S422$callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), wr1RegCompleteHandler(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), wr1RegCompleteHandler(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    S422$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_i2c_ISR
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c1_driver_TXData
    _do_I2C_TX->_i2c1_driver_isNACK
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _TMR1_ISR->_TMR1_WriteTimer
    _h_clock->_update_clock

Critical Paths under _main in BANK0

    _main->_cksum_w
    _read_ring->___eetoc
    _push_ring->_DATAEE_WriteByte
    _cksum_w->___ctoee
    _cksum->___eetoc
    ___eetoc->___eecpymem
    ___ctoee->_cksum
    _TMR1_Initialize->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   11186
                                             15 BANK0      1     1      0
                   _DATAEE_WriteByte
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                            ___ctoee
                            ___eetoc
                              _cksum
                            _cksum_w
                   _i2c1_driver_open
                          _push_ring
                          _read_ring
 ---------------------------------------------------------------------------------
 (1) _read_ring                                            6     5      1    1808
                                              8 BANK0      6     5      1
                             ___bmul
                            ___eetoc
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _push_ring                                            3     3      0     949
                                              4 BANK0      3     3      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3     847
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cksum_w                                              1     1      0    2915
                                             14 BANK0      1     1      0
                            ___ctoee
                              _cksum
 ---------------------------------------------------------------------------------
 (2) _cksum                                                3     3      0    1422
                                              8 BANK0      3     3      0
                            ___eetoc
 ---------------------------------------------------------------------------------
 (2) ___eetoc                                              3     3      0    1330
                                              5 BANK0      3     3      0
                         ___eecpymem
 ---------------------------------------------------------------------------------
 (3) ___eecpymem                                           5     3      2    1229
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) ___ctoee                                              3     2      1    1493
                                             11 BANK0      3     2      1
                         ___memcpyee
                              _cksum (ARG)
 ---------------------------------------------------------------------------------
 (3) ___memcpyee                                           5     3      2    1229
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     211
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0   88710
                   Absolute function *
                           _TMR1_ISR
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (6) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _i2c_ISR                                              3     3      0   88470
                                              4 COMMON     3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (7) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX_EMPTY                                      3     3      0   22101
                                              0 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_TX                                            3     3      0   22123
                                              1 COMMON     3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_TXData                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RX                                            3     3      0   22101
                                              0 COMMON     3     3      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ADDRESS_NACK                               3     3      0   22101
                                              0 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                1     0      1    4362
                                              1 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                1     0      1    4362
                                              1 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _returnStop                                           1     0      1       0
                                              1 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _returnReset                                          1     0      1       0
                                              1 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              1     0      1    4653
                                              1 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                1     0      1    4362
                                              1 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                1     0      1    4362
                                              1 BANK0      1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _i2c_setDataCompleteCallback                          4     1      3    2979
                                              5 COMMON     3     0      3
                                              0 BANK0      1     1      0
                        _setCallBack
 ---------------------------------------------------------------------------------
 (10) _setCallBack                                         5     2      3    1117
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (9) _i2c_setBuffer                                        4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _i2c_restartWrite                                     1     0      1       0
                                              1 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                            _h_clock *
 ---------------------------------------------------------------------------------
 (7) _h_clock                                              0     0      0       0
                       _update_clock
 ---------------------------------------------------------------------------------
 (8) _update_clock                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_WriteByte
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR1_SetInterruptHandler
   ___ctoee
     ___memcpyee
     _cksum (ARG)
       ___eetoc
         ___eecpymem
   ___eetoc
     ___eecpymem
   _cksum
     ___eetoc
       ___eecpymem
   _cksum_w
     ___ctoee
       ___memcpyee
       _cksum (ARG)
         ___eetoc
           ___eecpymem
     _cksum
       ___eetoc
         ___eecpymem
   _i2c1_driver_open
   _push_ring
     _DATAEE_WriteByte
   _read_ring
     ___bmul
     ___eetoc
       ___eecpymem

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _h_clock *
       _update_clock
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c1_driver_sendNACK
       _i2c1_driver_getRXData *
       _i2c1_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c1_driver_restart
     _do_I2C_SEND_STOP *
       _i2c1_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c1_driver_TXData *
       _i2c1_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _mssp1_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0      9B       0       60.5%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      4D       5       96.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      5A      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      5A      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Oct 29 17:55:54 2019

                            _update_clock 03F7                              returnReset@p 005A  
                          ___bmul@product 005B                               __CFG_CP$OFF 0000  
                    __size_of_do_I2C_IDLE 0005                       _do_I2C_SEND_RESTART 05DB  
                    __size_of_do_I2C_RCEN 0007                               __CFG_LVP$ON 0000  
                                     l401 0456                                       l500 056A  
                                     l503 059B                                       l431 05C6  
                                     l506 0593                                       l651 0576  
                                     l910 0487                                       l902 016B  
                                     l905 0582                                       l587 029C  
                                     l923 03D2                                       l917 02D0  
                                     l776 03EB                                       l778 03EF  
                                     l890 0096                                       l779 03F6  
                                     l893 00B9                              __CFG_CPD$OFF 0000  
                            ___ctoee@addr 0066                              ___ctoee@data 0064  
                         _timer1ReloadVal 0078                                       _aux 007A  
                                     _seg 0054                                       _lum 004E  
           i2c_setDataCompleteCallback@cb 0075                   __size_of_PMD_Initialize 0008  
                   __size_of_do_I2C_RESET 0008                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_ZCD$OFF 0000  
                                    l1030 0317                                      l1040 01D6  
                                    l1032 0332                                      l1026 030A  
                                    l1043 01F3                                      l1035 01C7  
                                    l1044 01FA                                      l1028 030F  
                                    l1052 0542                   ??_rd2RegCompleteHandler 0078  
                                    l1037 01CC                                      l1046 01FE  
                                    l1049 020D                                      l1067 055D  
                                    l3101 01F9                                      l3103 0204  
                                    l3105 0205                                      l1185 04B4  
                                    l3107 0536                                      l4101 0442  
                                    l3109 0540                                      l4111 0453  
                                    l4103 0444                                      l4121 0262  
                                    l4113 058C                                      l4105 0448  
                                    l3081 01CD                                      l4131 026D  
                                    l4123 0264                                      l4115 0258  
                                    l4107 044A                                      l3091 01E7  
                                    l3083 01D2                                      l4141 0281  
                                    l4133 026F                                      l4125 0266  
                                    l4117 025E                                      l4109 044B  
                                    l3093 01EC                                      l3085 01D4  
                                    l3421 0473                                      l4151 028B  
                                    l4143 0283                                      l4135 0271  
                                    l4127 0268                                      l4119 0260  
                                    l3095 01EE                                      l3087 01DB  
                                    l3079 01C3                                      l3431 0553  
                                    l3423 047C                                      l3415 0470  
                                    l4161 0297                                      l4153 028D  
                                    l4145 0285                                      l4137 027D  
                                    l4129 026B                                      l3097 01F2  
                                    l3089 01E2                                      l3425 0480  
                                    l4233 056B                                      l3441 04AA  
                                    l4171 0599                                      l4163 0299  
                                    l4155 028F                                      l4147 0287  
                                    l4139 027F                                      l3099 01F5  
                                    l3427 0486                                      l4235 0570  
                                    l3443 04AC                                      l3435 04A1  
                                    l4173 059A                                      l4165 0594  
                                    l4157 0291                                      l4149 0289  
                                    l4237 0571                                      l4181 03E3  
                                    l3445 04B3                                      l3437 04A2  
                                    l4501 014A                                      l4421 0051  
                                    l4167 0597                                      l4159 0294  
                                    l4095 043B                                      l4263 055E  
                                    l4239 0573                                      l4191 03EA  
                                    l4183 03E4                                      l4175 03D3  
                                    l4271 03AF                                      l3439 04A6  
                                    l3551 029F                                      l4503 014F  
                                    l4511 0167                                      l4431 005D  
                                    l4423 0055                                      l4169 0598  
                                    l4097 043E                                      l4265 0561  
                                    l4193 03F0                                      l4185 03E5  
                                    l4177 03DB                                      l4273 03B1  
                                    l3561 02C2                                      l3553 02A5  
                                    l4505 0163                                      l4441 007E  
                                    l4433 005E                                      l4425 0056  
                                    l4417 004A                                      l4099 0440  
                                    l4267 0564                                      l3547 0577  
                                    l4187 03E6                                      l4179 03DF  
                                    l4283 03B7                                      l4275 03B5  
                                    l3555 02A9                                      l3563 02C9  
                                    l4507 0164                                      l4451 00AF  
                                    l4443 00A2                                      l4435 0060  
                                    l4427 005B                                      l4419 0050  
                                    l4269 0567                                      l2941 0306  
                                    l4189 03E8                                      l4285 03C3  
                                    l4277 03B6                                      l3557 02B6  
                                    l3549 029F                                      l4509 0166  
                                    l4461 00BA                                      l4453 00B2  
                                    l4445 00A5                                      l4437 0066  
                                    l4429 005C                                      l2951 032A  
                                    l2943 0310                                      l4287 03C8  
                                    l3567 02CB                                      l3559 02BC  
                                    l4471 00DB                                      l4463 00CF  
                                    l4455 00B4                                      l4447 00A6  
                                    l4439 006F                                      l2945 0319  
                                    l4289 03CC                                      l4481 00FA  
                                    l4473 00DC                                      l4457 00B5  
                                    l4449 00A7                                      l2947 0321  
                                    l4491 013A                                      l4483 0109  
                                    l4475 00E1                                      l4467 00D0  
                                    l4459 00B7                                      l2949 0325  
                                    l4493 0143                                      l4485 0117  
                                    l4477 00E2                                      l4469 00D5  
                                    l4487 012B                                      l4495 0146  
                                    l4479 00EE                                      l4497 0147  
                                    l4489 012E                                      l4499 0149  
                                    l3965 05C1                                      u1210 01CC  
                                    u1211 01CB                                      u1220 01DB  
                                    u1221 01DA                                      u1230 01F2  
                                    u1231 01F1                                      u1240 01FE  
                                    u1160 030F                                      u1400 04B3  
                                    u1241 01FD                                      u1161 030E  
                                    u1401 04B2                                      u1250 0204  
                                    u1170 0332                                      u2210 006F  
                                    u1251 0203                                      u1171 0331  
                                    u2211 006E                                      u1260 020D  
                                    u2220 007E                                      u1261 020C  
                                    u2221 007D                                      _LATA 0016  
                                    u2230 00D5                                      _LATB 0017  
                                    u2231 00D4                                      _LATC 0018  
                                    u2240 00DB                                      _LATD 0019  
                                    u2241 00DA                                      _LATE 001A  
                                    u2250 0109                                      u2251 0108  
                                    u1380 0486                                      u2260 0117  
                                    u1381 0485                                      u2261 0116  
                                    u1390 04A6                                      u1470 02A5  
                                    u2270 014F                                      u1391 04A5  
                                    u1471 02A4                                      u2271 014E  
                                    u1480 02A9                                      u2280 016B  
                                    u1481 02A8                                      u2281 016A  
                                    u1490 02BC                                      u1491 02BB  
                                    u1910 03EF                                      u1911 03EE  
                                    u1930 0570                                      u1931 056F  
                                    u1960 03B5                                      u1961 03B4  
                                    u1970 03D2                                      u1971 03D1  
                                    _PMD0 0796                                      _PMD1 0797  
                                    _PMD2 0798                                      _PMD3 0799  
                                    _PMD4 079A                                      _PMD5 079B  
                    ?_do_I2C_SEND_RESTART 0070                                      _WPUA 0F39  
                                    _WPUB 0F44                                      _WPUC 0F4F  
                                    _WPUD 0F5A                                      _WPUE 0F65  
                 ??_wr2RegCompleteHandler 0078                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000         __size_of_do_I2C_SEND_RESTART_READ 0005  
                                    _half 03E2                                      _clkh 0058  
               ?_do_I2C_SEND_RESTART_READ 0070                                      _clkm 0056  
                                    _main 004A                 __size_of_do_I2C_SEND_STOP 0005  
                  __size_of_do_I2C_DO_ACK 0005                                      _nreg 006C  
                                    _temp 004F                                      _pmon 006B  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
                   ?_do_I2C_SEND_ADR_READ 0070           ??_i2c1_driver_clearBusCollision 0070  
                                    start 0037                             _i2c_setBuffer 0524  
              ??_TMR1_SetInterruptHandler 005B                             __CFG_CSWEN$ON 0000  
                       ___bmul@multiplier 005C                             __CFG_MCLRE$ON 0000  
                         __end_of_i2c_ISR 0389          __size_of_rdBlkRegCompleteHandler 0019  
                ??_do_I2C_DO_NACK_RESTART 0070                 __size_of_DATAEE_WriteByte 0024  
                            _do_I2C_RESET 05A4            __size_of_OSCILLATOR_Initialize 0008  
           __end_of_OSCILLATOR_Initialize 059C                  __end_of_i2c1_driver_open 0577  
                                   ?_main 0070                           __end_of___eetoc 0543  
                __end_of_i2c1_driver_stop 0612                           __end_of___ctoee 055E  
                           __CFG_WDTE$OFF 0000                                     _T1CLK 0211  
                                   _T1CON 020E                __end_of_i2c1_driver_TXData 05F4  
                          __CFG_DEBUG$OFF 0000                                     i1l110 0550  
                                   i1l201 035E                                     i1l140 0533  
                                   i1l301 04EE                                     i1l206 01A4  
                                   i1l222 022B                                     i1l223 0257  
                                   i1l209 01C0                                     i1l162 05AB  
                                   i1l250 05F7                                     i1l171 05E4  
                                   i1l316 04DC                                     i1l340 046F  
                                   i1l180 058B                                     i1l261 03AE  
                                   i1l253 061A                                     i1l237 0303  
                                   i1l165 05EE                                     i1l174 05DF  
                                   i1l415 0523                                     i1l183 05A3  
                                   i1l247 0388                                     i1l328 0512  
                                   i1l256 0618                                     i1l280 0500  
                                   i1l168 05E9                                     i1l192 05D0  
                                   i1l177 05DA                                     i1l434 061C  
                                   i1l186 05BA                                     i1l195 05CB  
                                   i1l428 04CA                                     i1l189 05D5  
                                   i1l367 0616                                     i1l463 0035  
                                   i1l456 001A                                     i1l633 0605  
                                   i1l457 0035                                     i1l458 0029  
                                   i1l636 0608                                     i1l831 0488  
                                   i1l671 05B3                                     i1l833 049D  
                                   i1l665 0614                                     i1l729 0602  
                                   i1l930 041A                                     i1l674 060E  
                                   i1l835 049E                                     i1l659 061B  
                                   i1l692 05FF                                     i1l668 0611  
                                   i1l677 060B                                     i1l686 05F3  
                                   i1l695 05FB                                     _OSCEN 0891  
                                   _TMR1H 020D                                     _TMR1L 020C  
                                   _TRISA 0011                                     _TRISB 0012  
                                   _TRISC 0013                                     _TRISD 0014  
                                   _TRISE 0015                                     _WPUC3 7A7B  
                                   _WPUC4 7A7C                           __end_of_h_clock 049F  
                        __end_of_TMR1_ISR 04CB                           __end_of_cksum_w 0583  
              __end_of_i2c1_driver_isNACK 05B4                                     _cksum 0470  
              ?_do_I2C_SEND_RESTART_WRITE 0070                                     _value 007B  
                   ??_do_I2C_SEND_RESTART 0070                   __end_of_TMR1_Initialize 0457  
                          __pbitbssCOMMON 03E0                                     pclath 000A  
                 __size_of_mssp1_clearIRQ 0003                    ?_do_I2C_SEND_ADR_WRITE 0070  
                           ___memcpyee@to 005D                                     status 0003  
                                   wtemp0 007E                           _TMR1_WriteTimer 0513  
                          ?_i2c_setBuffer 0070                              ?_setCallBack 0070  
                           _fsmStateTable 041B                           __initialization 0039  
                              _i2c_status 0020                              __end_of_main 016D  
             ?_INTERRUPT_InterruptManager 0070                             setCallBack@cb 0070  
                           _do_I2C_DO_ACK 05D1                                    ??_main 0068  
                       ?_i2c_restartWrite 005A             __size_of_i2c1_driver_sendNACK 0004  
                      ??_i2c_restartWrite 0078             __size_of_i2c1_driver_resetBus 0001  
                 ?_do_I2C_DO_ADDRESS_NACK 0070                            _convertedValue 0044  
                                  ?_cksum 0070                                    _ANSELA 0F38  
                                  _ANSELB 0F43                                    _ANSELC 0F4E  
                                  _ANSELD 0F59                                    _ANSELE 0F64  
                      __CFG_RSTOSC$HFINT1 0000                                    _T1GATE 0210  
                                  _T1GCON 020F                                    _RC3PPS 0F23  
                 TMR1_WriteTimer@timerVal 0070                                    _RC4PPS 0F24  
                                  i1l3003 05AC                                    i1l3011 0606  
                                  i1l3007 0609                                    u120_20 0415  
                                  u120_21 0414                                    i1l4001 0342  
                                  i1l3113 0603                                    _ODCONA 0F3A  
                                  _ODCONB 0F45                                    i1l4011 0175  
                                  _ODCONC 0F50                                    _ODCOND 0F5B  
                                  i1l3141 05AA                                    _ODCONE 0F66  
                                  i1l3311 0513                                    i1l3071 040E  
                                  i1l3135 05A4                                    i1l4031 01BD  
                                  i1l4015 0179                                    i1l4007 016D  
                                  i1l3313 0518                                    i1l3321 051F  
                                  i1l3073 040F                                    i1l3065 03F7  
                                  i1l3137 05A7                                    i1l3145 05EA  
                                  i1l3153 0583                                    i1l3161 059C  
                                  i1l4033 01BF                                    i1l4025 0181  
                                  i1l4041 020E                                    i1l3323 0521  
                                  i1l3315 0519                                    i1l3075 0415  
                                  i1l3067 0400                                    i1l3411 0498  
                                  i1l3139 05A9                                    i1l3147 05EC  
                                  i1l3155 0585                                    i1l3163 059E  
                                  i1l3171 05B6                                    i1l4027 01A6  
                                  i1l4019 017D                                    i1l4043 0218  
                                  i1l3317 051B                                    i1l3077 0419  
                                  i1l3069 0406                                    i1l3413 049B  
                                  i1l3149 05ED                                    i1l3157 058A  
                                  i1l3165 05A2                                    i1l3173 05B9  
                                  i1l4029 01B2                                    i1l4045 021C  
                                  i1l3319 051D                                    i1l3407 0488  
                                  i1l4071 02D1                                    i1l4055 022D  
                                  i1l4047 0226                                    i1l3409 0494  
                                  i1l4073 02D4                                    i1l3169 05B4  
                                  i1l3177 05D1                                    i1l4065 0235  
                                  i1l4049 0229                                    i1l4401 0006  
                                  i1l3531 04B5                                    i1l4083 02DD  
                                  i1l3179 05D4                                    i1l4059 0231  
                                  i1l3291 0600                                    i1l4411 0022  
                                  i1l4403 000A                                    i1l3533 04B7  
                                  i1l4077 02D8                                    i1l4261 0373  
                                  i1l4253 035F                                    i1l4413 002D  
                                  i1l4405 000F                                    i1l3535 04BE  
                                  i1l4079 02DB                                    i1l4255 0362  
                                  i1l4415 0031                                    i1l4407 0013  
                                  u115_20 052A                                    i1l3537 04C5  
                                  u115_21 0529                                    i1l4089 02E1  
                                  i1l4257 0367                                    i1l3529 05F4  
                                  i1l4409 001E                                    i1l2931 052A  
                                  i1l4259 036E                                    i1l2933 0532  
                                  i1l3901 0390                                    i1l2935 0612  
                                  i1l3903 03A1                                    u220_20 0031  
                                  i1l2937 060F                                    i1l2929 0525  
                                  i1l3905 0543                                    i1l2961 05E5  
                                  u220_21 0030                                    i1l3915 0619  
                                  i1l3923 04EF                                    i1l3931 04DD  
                                  i1l2939 05F8                                    i1l2963 05E8  
                                  i1l3925 04F8                                    i1l3933 04E6  
                                  i1l3941 04D4                                    i1l2973 05DB  
                                  i1l2981 05D9                                    i1l3951 0511  
                                  i1l3919 0617                                    i1l3927 04FF  
                                  i1l3935 04ED                                    i1l3943 04DB  
                                  i1l2967 05E0                                    i1l2975 05DE  
                                  i1l2991 05CC                                    u133_20 0518  
                                  u133_21 0517                                    i1l3961 0615  
                                  i1l2985 05F0                                    i1l2969 05E3  
                                  i1l2993 05CF                                    i1l4593 0249  
                                  i1l3947 0501                                    i1l3939 04CB  
                                  i1l3955 0457                                    i1l2987 060C  
                                  i1l2979 05D6                                    i1l4595 0196  
                                  i1l2989 05FC                                    i1l3949 050A  
                                  i1l3957 046E                                    i1l2997 05C7  
                                  i1l4597 0356                                    i1l4599 02F5  
                                  i1l2999 05CA                                    i1l3991 033A  
                                  u214_20 000A                                    u214_21 0009  
                                  i1l3899 038A                                    i1l3995 033E  
                                  i1l3987 0333                                    i1l3989 0335  
                                  u119_20 0406                                    u135_20 0492  
                                  u215_20 000F                                    u119_21 0405  
                                  u135_21 048F                                    u215_21 000E  
                                  u216_20 0013                                    u216_21 0012  
                                  _INLVLA 0F3C                                    _INLVLB 0F47  
                                  _INLVLC 0F52                                    u136_24 0494  
                                  _INLVLD 0F5D                                    _INLVLE 0F68  
                                  u137_20 0498                                    u217_20 001E  
                                  u137_21 0497                                    u217_21 001D  
                                  u146_20 04C5                                    u218_20 0022  
                                  u146_21 04C4                                    u218_21 0021  
                                  u219_20 002D                                    u219_21 002C  
                                  u190_20 0226                                    u190_21 0225  
                                  u183_20 0390                                    u183_21 038F  
                                  u194_20 0367                                    u194_21 0366  
                                  u195_20 036E                                    u195_21 036D  
                                  u188_20 0174                                    u188_21 0173  
                                  u189_20 01BD                                    u189_21 01BC  
                                  _OSCFRQ 0893                    ??_do_I2C_SEND_ADR_READ 0070  
                rdBlkRegCompleteHandler@p 005A                                 ??_i2c_ISR 0074  
                          __CFG_PWRTE$OFF 0000                     _i2c1_driver_getRXData 0609  
    __end_of_TMR1_DefaultInterruptHandler 061D     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 061C                                    ___bmul 049F  
             __end_of_do_I2C_DO_NACK_STOP 05D1       __end_of_i2c_setDataCompleteCallback 0551  
             _i2c_setDataCompleteCallback 0543                                 ??___eetoc 005E  
   __end_of_i2c1_driver_clearBusCollision 0603    __size_of_i2c1_driver_clearBusCollision 0003  
           _i2c1_driver_clearBusCollision 0600                            __CFG_STVREN$ON 0000  
                               ??___ctoee 0065           __size_of_do_I2C_DO_NACK_RESTART 0005  
                                  _buffer 0000                                    _last1m 0051  
                                  _last5s 0052                            ?_do_I2C_DO_ACK 0070  
                               ??_h_clock 0071                                    cksum@i 0063  
                               ??_cksum_w 0067               __end_of_i2c1_driver_sendACK 0600  
                          _PMD_Initialize 058C            __end_of_do_I2C_DO_ADDRESS_NACK 035F  
             __end_of_i2c1_driver_restart 0615                              ?_returnReset 005A  
             __end_of_i2c1_driver_startRX 060F                            ___memcpyee@ptr 005C  
TMR1_SetInterruptHandler@InterruptHandler 0059                   __end_of_TMR1_WriteTimer 0524  
                              ___eecpymem 0304                          ?_TMR1_Initialize 0070  
                       _SYSTEM_Initialize 055E                   __end_of__initialization 0046  
                         ??_i2c_setBuffer 0072                          _do_I2C_SEND_STOP 05D6  
                      __size_of_do_I2C_RX 004A                        __size_of_do_I2C_TX 0054  
                      ?_SYSTEM_Initialize 0070                  __size_of_do_I2C_TX_EMPTY 0033  
                     ___bmul@multiplicand 0059                                ___memcpyee 01C1  
                 _rdBlkRegCompleteHandler 0457                            __pcstackCOMMON 0070  
                     ??_SYSTEM_Initialize 005B                                 ?_TMR1_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                             __end_of_cksum 0488  
                        _DATAEE_WriteByte 03D3                    __end_of_PMD_Initialize 0594  
                          setCallBack@idx 0074                                   ??_cksum 0061  
                  _do_I2C_DO_NACK_RESTART 05C7                 __end_of_SYSTEM_Initialize 056B  
                          _mssp1_clearIRQ 0603                                __pbssBANK0 0020  
          __size_of_rd2RegCompleteHandler 0012             __end_of_rd2RegCompleteHandler 04DD  
          __size_of_wr2RegCompleteHandler 0012             __end_of_wr2RegCompleteHandler 0513  
                   _rd1RegCompleteHandler 04DD                    ?_i2c1_driver_getRXData 0070  
                      __size_of_read_ring 0034                     _wr1RegCompleteHandler 04EF  
            __size_of_i2c_busCollisionISR 0004                                __pmaintext 004A  
                           ??_do_I2C_IDLE 0070                      __size_of_setCallBack 0026  
                           ??_do_I2C_RCEN 0070                                   ?___bmul 0059  
                              ??_TMR1_ISR 0072                           __CFG_PPS1WAY$ON 0000  
                         ??_do_I2C_DO_ACK 0070                                __pintentry 0004  
                     i2c_setBuffer@buffer 0073                           ?_PMD_Initialize 0070  
          ?_i2c1_driver_clearBusCollision 0070                         ?_i2c1_driver_open 0070  
                       __end_of_do_I2C_RX 0258                         __end_of_do_I2C_TX 01C1  
                       ?_i2c1_driver_stop 0070                        ??_i2c1_driver_open 0059  
                      ??_i2c1_driver_stop 0070                                   _OSCCON1 088D  
                                 _OSCCON3 088F                             ?_mssp1_setIRQ 0070  
                                 _NVMADRH 081B                                   _NVMADRL 081A  
                                 _NVMDATH 081D                                   _OSCTUNE 0892  
                                 _NVMDATL 081C                                   _NVMCON2 081F  
                                 _SSP1ADD 018D                                   _SLRCONA 0F3B  
                                 _SLRCONB 0F46                                   _SLRCONC 0F51  
                                 _SLRCOND 0F5C                                   _SLRCONE 0F67  
                                 _SSP1BUF 018C                    __end_of_mssp1_clearIRQ 0606  
                                 _SSP1MSK 018E                   ??_do_I2C_SEND_ADR_WRITE 0071  
                      __size_of_push_ring 0024                          ?_TMR1_WriteTimer 0070  
             ??_do_I2C_SEND_RESTART_WRITE 0070                               ?___eecpymem 0059  
                              _last1m_aux 004C                        _i2c1_driver_TXData 05EF  
                    DATAEE_WriteByte@bAdd 0059                                _last5s_aux 004D  
                      _i2c1_driver_i2cISR 0048                                   _i2c_ISR 035F  
               ??_rdBlkRegCompleteHandler 0078                        _i2c1_driver_isNACK 05AC  
                             ?___memcpyee 0059                       ?_i2c1_driver_TXData 0070  
                    __CFG_SCANE$available 0000                           __size_of___bmul 0016  
                                 ___eetoc 0534                                   ___ctoee 0551  
                       ??_do_I2C_TX_EMPTY 0070                       ?_i2c1_driver_isNACK 0070  
                                 _h_clock 0488                                   __ptext1 029D  
                                 __ptext2 049F                                   __ptext3 03AF  
                                 __ptext4 03D3                                   __ptext5 056B  
                                 __ptext6 0577                                   __ptext7 0470  
                                 __ptext8 0534                                   __ptext9 0304  
                     __end_of_do_I2C_IDLE 05EF                       __end_of_do_I2C_RCEN 05BB  
          ??_TMR1_DefaultInterruptHandler 0070                                   _cksum_w 0577  
                               _T1CONbits 020E                     _OSCILLATOR_Initialize 0594  
             __end_of_do_I2C_SEND_RESTART 05E0                            ??_mssp1_setIRQ 0070  
                              _duty_cycle 0069         __size_of_TMR1_SetInterruptHandler 0006  
                                 _seg_aux 0053                      ??_i2c1_driver_TXData 0070  
                       __end_of_read_ring 02D1                  ??_PIN_MANAGER_Initialize 0059  
               ?_TMR1_SetInterruptHandler 0059                                   _nreg_pt 0050  
                         ?_mssp1_clearIRQ 0070                  _do_I2C_SEND_RESTART_READ 05E5  
              __size_of_SYSTEM_Initialize 000D                                   clrloop0 05BC  
                                 _running 03E8                      __size_of_returnReset 0002  
                    end_of_initialization 0046                      ??_i2c1_driver_isNACK 0070  
               __size_of_i2c_restartWrite 0002              __end_of_i2c1_driver_sendNACK 05FC  
                  ?_rd1RegCompleteHandler 005A                    ?_wr1RegCompleteHandler 005A  
            __end_of_i2c1_driver_resetBus 061C                           ___memcpyee@from 0059  
               _do_I2C_SEND_RESTART_WRITE 05E0                           ___memcpyee@size 005A  
                       __end_of_push_ring 03D3                     __CFG_WDTCPS$WDTCPS_14 0000  
                     __size_of___eecpymem 002F                                _returnStop 0619  
         __end_of_rdBlkRegCompleteHandler 0470                  __end_of_do_I2C_SEND_STOP 05DB  
                    __CFG_WDTCCS$HFINTOSC 0000                        _configuration_mode 03E1  
                               _TRISCbits 0013      __size_of_i2c_setDataCompleteCallback 000E  
                     __size_of___memcpyee 004D                               returnStop@p 005A  
                        __CFG_FEXTOSC$OFF 0000                  __end_of_DATAEE_WriteByte 03F7  
            i2c_setDataCompleteCallback@p 0077             __size_of_do_I2C_SEND_ADR_READ 0009  
                           ?_update_clock 0070                               _do_I2C_IDLE 05EA  
                             _do_I2C_RCEN 05B4                            __end_of___bmul 04B5  
                       __size_of_TMR1_ISR 0016                    ?_OSCILLATOR_Initialize 0070  
            __size_of_do_I2C_DO_NACK_STOP 0005                   ?_do_I2C_DO_NACK_RESTART 0070  
                           __pbitnvCOMMON 03E8                       start_initialization 0039  
                     _i2c_busCollisionISR 05F4           __size_of_PIN_MANAGER_Initialize 0045  
                           _recovery_data 0096                              setCallBack@p 0072  
            __size_of_i2c1_driver_sendACK 0004                   i2c_setBuffer@bufferSize 0070  
                 ??_i2c1_driver_getRXData 0070                    rd1RegCompleteHandler@p 005A  
            __size_of_i2c1_driver_restart 0003              __size_of_i2c1_driver_startRX 0003  
                   __end_of_i2c_setBuffer 0534                      ?_i2c_busCollisionISR 0070  
                          ??_update_clock 0070                          __CFG_LPBOREN$OFF 0000  
                    __end_of_mssp1_setIRQ 0609                  __size_of_TMR1_Initialize 001C  
                                ??___bmul 005A                          ??_PMD_Initialize 0059  
                  wr1RegCompleteHandler@p 005A                             ?_do_I2C_RESET 0070  
                             ?_returnStop 005A            __end_of_do_I2C_DO_NACK_RESTART 05CC  
                              read_ring@i 0064                      _i2c1_driver_sendNACK 05F8  
                       read_ring@absindex 0066                               __pbssEEDATA 0000  
                             __pbssCOMMON 0078                                 ___latbits 0002  
                    _i2c1_driver_resetBus 061B                             __pcstackBANK0 0059  
                               _do_I2C_RX 020E                                 _do_I2C_TX 016D  
                            ??___eecpymem 005B            __size_of_do_I2C_SEND_ADR_WRITE 0008  
           __end_of_do_I2C_SEND_ADR_WRITE 05A4                          _i2c_restartWrite 0615  
               __size_of_i2c1_driver_open 000C                 __size_of_i2c1_driver_stop 0003  
                                ?_i2c_ISR 0070                           _do_I2C_TX_EMPTY 02D1  
                           ??_setCallBack 0073                                 __pnvBANK0 0069  
                   _rd2RegCompleteHandler 04CB                     ??_i2c_busCollisionISR 0070  
                   __end_of_fsmStateTable 043B                              ??___memcpyee 005B  
                  _PIN_MANAGER_Initialize 0258                     _wr2RegCompleteHandler 0501  
        __end_of_TMR1_SetInterruptHandler 05C7                         read_ring@subindex 0061  
                          ??_do_I2C_RESET 0070                                  ?___eetoc 0070  
                                ?___ctoee 0064                  ??_do_I2C_DO_ADDRESS_NACK 0070  
             _i2c1_driver_busCollisionISR 004A                     __end_of_do_I2C_DO_ACK 05D6  
                                ?_h_clock 0070              ??_INTERRUPT_InterruptManager 0077  
              ??_do_I2C_SEND_RESTART_READ 0070                     ?_i2c1_driver_sendNACK 0070  
                      __end_of___eecpymem 0333                                  ?_cksum_w 0070  
                        ??_mssp1_clearIRQ 0070                     ?_i2c1_driver_resetBus 0070  
      __size_of_do_I2C_SEND_RESTART_WRITE 0005                                ?_do_I2C_RX 0070  
                              ?_do_I2C_TX 0070                        __end_of___memcpyee 020E  
                          __size_of_cksum 0018                   ??_rd1RegCompleteHandler 0078  
                               _read_ring 029D                   ??_wr1RegCompleteHandler 0078  
                           _task_schedule 0042                                  _LATAbits 0016  
                     __size_of_returnStop 0002                                 clear_ram0 05BB  
                               _nreg_init 03E0                                  _PIE3bits 0719  
                                _PIE4bits 071A                          push_ring@address 005E  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 0033  
                                _PIR3bits 070F                                 _ring_byte 003D  
                                _PIR4bits 0710                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR1_ISR 04B5  
            ?_i2c_setDataCompleteCallback 0075                                  _SSP1STAT 018F  
                     __end_of_setCallBack 03AF                         ??_TMR1_Initialize 005B  
                               _push_ring 03AF                         ?_do_I2C_SEND_STOP 0070  
                           ??_returnReset 0078                        ??_do_I2C_SEND_STOP 0070  
             __size_of_i2c1_driver_TXData 0005                     DATAEE_WriteByte@bData 005B  
                    __end_of_update_clock 041B         __end_of_do_I2C_SEND_RESTART_WRITE 05E5  
                 __end_of_do_I2C_TX_EMPTY 0304                                ?_read_ring 0061  
                ?_rdBlkRegCompleteHandler 005A                         ?_DATAEE_WriteByte 0059  
            __size_of_do_I2C_SEND_RESTART 0005               __size_of_i2c1_driver_isNACK 0008  
                   __size_of_mssp1_setIRQ 0003                    ?_rd2RegCompleteHandler 005A  
                      ??_DATAEE_WriteByte 005C                       _do_I2C_DO_NACK_STOP 05CC  
                        __size_of_i2c_ISR 002A                    ?_wr2RegCompleteHandler 005A  
                            ?_do_I2C_IDLE 0070                              ?_do_I2C_RCEN 0070  
                              push_ring@i 005F                   ??_OSCILLATOR_Initialize 0059  
                     _i2c1_driver_sendACK 05FC                          __size_of___eetoc 000F  
                        __size_of___ctoee 000D           __size_of_do_I2C_DO_ADDRESS_NACK 002C  
                     i2c1_driver_TXData@d 0070                    ??_i2c1_driver_sendNACK 0070  
           ??_i2c_setDataCompleteCallback 0059                       _i2c1_driver_restart 0612  
                _TMR1_SetInterruptHandler 05C1                          __size_of_h_clock 0017  
                    ?_do_I2C_DO_NACK_STOP 0070                       _i2c1_driver_startRX 060C  
            __end_of_do_I2C_SEND_ADR_READ 058C                                ?_push_ring 0070  
                  ??_i2c1_driver_resetBus 0070                     _TMR1_InterruptHandler 0046  
                        __size_of_cksum_w 000C                              _mssp1_setIRQ 0606  
                             ??_do_I2C_RX 0070                               ??_do_I2C_TX 0071  
                                _clkh_aux 0057                                  __ptext10 0551  
                                __ptext11 01C1                                  __ptext20 0600  
                                __ptext12 055E                                  __ptext21 035F  
                                __ptext13 043B                                _T1GCONbits 020F  
                                __ptext30 059C                                  __ptext22 0603  
                                __ptext14 05C1                                  __ptext31 0583  
                                __ptext23 020E                                  __ptext15 058C  
                                __ptext40 05AC                                  __ptext32 05D6  
                                __ptext24 016D                                  __ptext16 0258  
                                __ptext41 05EF                                  __ptext33 05DB  
                                __ptext25 0333                                  __ptext17 0594  
                                __ptext50 0615                                  __ptext42 0609  
                                __ptext34 05E0                                  __ptext26 05C7  
                                __ptext51 0617                                  __ptext43 05F8  
                                __ptext35 05E5                                  __ptext27 05CC  
                                __ptext19 05F4                                  __ptext60 04B5  
                                __ptext52 0619                                  __ptext44 061B  
                                __ptext36 05EA                                  __ptext28 05D1  
                                __ptext61 061C                                  __ptext53 0501  
                                __ptext45 060C                                  __ptext37 05A4  
                                __ptext29 05B4                                  __ptext62 0488  
                                __ptext54 0543                                  __ptext46 0457  
                                __ptext38 02D1                                  __ptext63 03F7  
                                __ptext55 0389                                  __ptext47 04CB  
                                __ptext39 0606                                  __ptext64 0513  
                                __ptext56 0524                                  __ptext48 04DD  
                                __ptext57 060F                                  __ptext49 04EF  
                                __ptext58 0612                                  __ptext59 05FC  
                                _clkm_aux 0055                              _SSP1CON1bits 0190  
                            _SSP1CON2bits 0191                      ?_i2c1_driver_sendACK 0070  
                    __end_of_do_I2C_RESET 05AC               DATAEE_WriteByte@GIEBitValue 005C  
                    ?_i2c1_driver_restart 0070                       __end_of_returnReset 0619  
                        _i2c1_driver_open 056B                          _i2c1_driver_stop 060F  
                           __size_of_main 0123                      ?_i2c1_driver_startRX 0070  
          __size_of_i2c1_driver_getRXData 0003             __end_of_i2c1_driver_getRXData 060C  
                    __CFG_WDTCWS$WDTCWS_7 0000                               _setCallBack 0389  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 0037  
              _INTERRUPT_InterruptManager 0004                              _SSP1STATbits 018F  
                       ??_TMR1_WriteTimer 0072                                  cksum@res 0062  
        __end_of_do_I2C_SEND_RESTART_READ 05EA                              ??_returnStop 0078  
                __end_of_i2c_restartWrite 0617                     ??_do_I2C_DO_NACK_STOP 0070  
                         ___eecpymem@from 0059                           ___eecpymem@size 005A  
                              _INTCONbits 000B                               _NVMCON1bits 081E  
                   ??_i2c1_driver_sendACK 0070                          ?_do_I2C_TX_EMPTY 0070  
                             ??_read_ring 0062                    _do_I2C_DO_ADDRESS_NACK 0333  
                                intlevel1 0000                     ??_i2c1_driver_restart 0070  
                  rd2RegCompleteHandler@p 005A                     ??_i2c1_driver_startRX 0070  
                 ?_PIN_MANAGER_Initialize 0070                         i2c_restartWrite@p 005A  
                       __CFG_CLKOUTEN$OFF 0000                        __end_of_returnStop 061B  
                  wr2RegCompleteHandler@p 005A                             __pstringtext1 041B  
                   __size_of_update_clock 0024                            read_ring@index 0065  
                             ??_push_ring 005D                                _SSP1DATPPS 0EC6  
                              _SSP1CLKPPS 0EC5                    __size_of_i2c_setBuffer 0010  
                             _returnReset 0617                             ___eecpymem@cp 005C  
                           ___eecpymem@to 005D            __end_of_PIN_MANAGER_Initialize 029D  
             __end_of_i2c_busCollisionISR 05F8            __size_of_rd1RegCompleteHandler 0012  
           __end_of_rd1RegCompleteHandler 04EF                                _STATUSbits 0003  
          __size_of_wr1RegCompleteHandler 0012             __end_of_wr1RegCompleteHandler 0501  
                   _do_I2C_SEND_ADR_WRITE 059C                      _do_I2C_SEND_ADR_READ 0583  
                         _TMR1_Initialize 043B                              ___eetoc@addr 005F  
                            ___eetoc@data 0060  
