

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Oct 31 17:10:46 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,inline,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,delta=2
    62                           	psect	text50,local,class=CODE,merge=1,delta=2
    63                           	psect	text51,local,class=CODE,merge=1,delta=2
    64                           	psect	text52,local,class=CODE,merge=1,delta=2
    65                           	psect	text53,local,class=CODE,merge=1,delta=2
    66                           	psect	text54,local,class=CODE,merge=1,delta=2
    67                           	psect	text55,local,class=CODE,merge=1,inline,delta=2
    68                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text58,local,class=CODE,merge=1,delta=2
    71                           	psect	text59,local,class=CODE,merge=1,delta=2
    72                           	psect	text60,local,class=CODE,merge=1,delta=2
    73                           	psect	text61,local,class=CODE,merge=1,delta=2
    74                           	psect	text62,local,class=CODE,merge=1,delta=2
    75                           	dabs	1,0x7E,2
    76  0000                     
    77                           ; Version 2.10
    78                           ; Generated 31/07/2019 GMT
    79                           ; 
    80                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC16F18875 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001C                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  008C                     	;# 
   145  008C                     	;# 
   146  008D                     	;# 
   147  008E                     	;# 
   148  008E                     	;# 
   149  008F                     	;# 
   150  0090                     	;# 
   151  0090                     	;# 
   152  0091                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0095                     	;# 
   156  0096                     	;# 
   157  0097                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009A                     	;# 
   161  009B                     	;# 
   162  009C                     	;# 
   163  009D                     	;# 
   164  009E                     	;# 
   165  010C                     	;# 
   166  010D                     	;# 
   167  010E                     	;# 
   168  010E                     	;# 
   169  010F                     	;# 
   170  0110                     	;# 
   171  0110                     	;# 
   172  0111                     	;# 
   173  0112                     	;# 
   174  0112                     	;# 
   175  0113                     	;# 
   176  0114                     	;# 
   177  0114                     	;# 
   178  0115                     	;# 
   179  0116                     	;# 
   180  0116                     	;# 
   181  0117                     	;# 
   182  0119                     	;# 
   183  0119                     	;# 
   184  0119                     	;# 
   185  011A                     	;# 
   186  011A                     	;# 
   187  011A                     	;# 
   188  011B                     	;# 
   189  011B                     	;# 
   190  011B                     	;# 
   191  011B                     	;# 
   192  011B                     	;# 
   193  011C                     	;# 
   194  011C                     	;# 
   195  011C                     	;# 
   196  011D                     	;# 
   197  011D                     	;# 
   198  011D                     	;# 
   199  011E                     	;# 
   200  011E                     	;# 
   201  011E                     	;# 
   202  011F                     	;# 
   203  011F                     	;# 
   204  011F                     	;# 
   205  011F                     	;# 
   206  011F                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  018E                     	;# 
   210  018F                     	;# 
   211  0190                     	;# 
   212  0191                     	;# 
   213  0192                     	;# 
   214  0196                     	;# 
   215  0197                     	;# 
   216  0198                     	;# 
   217  0199                     	;# 
   218  019A                     	;# 
   219  019B                     	;# 
   220  019C                     	;# 
   221  020C                     	;# 
   222  020C                     	;# 
   223  020D                     	;# 
   224  020E                     	;# 
   225  020F                     	;# 
   226  020F                     	;# 
   227  0210                     	;# 
   228  0210                     	;# 
   229  0211                     	;# 
   230  0211                     	;# 
   231  0212                     	;# 
   232  0212                     	;# 
   233  0213                     	;# 
   234  0214                     	;# 
   235  0215                     	;# 
   236  0215                     	;# 
   237  0216                     	;# 
   238  0216                     	;# 
   239  0217                     	;# 
   240  0217                     	;# 
   241  0218                     	;# 
   242  0218                     	;# 
   243  0219                     	;# 
   244  021A                     	;# 
   245  021B                     	;# 
   246  021B                     	;# 
   247  021C                     	;# 
   248  021C                     	;# 
   249  021D                     	;# 
   250  021D                     	;# 
   251  021E                     	;# 
   252  021F                     	;# 
   253  028C                     	;# 
   254  028C                     	;# 
   255  028D                     	;# 
   256  028D                     	;# 
   257  028E                     	;# 
   258  028F                     	;# 
   259  0290                     	;# 
   260  0290                     	;# 
   261  0291                     	;# 
   262  0292                     	;# 
   263  0292                     	;# 
   264  0293                     	;# 
   265  0293                     	;# 
   266  0294                     	;# 
   267  0295                     	;# 
   268  0296                     	;# 
   269  0296                     	;# 
   270  0297                     	;# 
   271  0298                     	;# 
   272  0298                     	;# 
   273  0299                     	;# 
   274  0299                     	;# 
   275  029A                     	;# 
   276  029B                     	;# 
   277  029C                     	;# 
   278  029C                     	;# 
   279  029D                     	;# 
   280  030C                     	;# 
   281  030C                     	;# 
   282  030D                     	;# 
   283  030E                     	;# 
   284  030F                     	;# 
   285  0310                     	;# 
   286  0310                     	;# 
   287  0311                     	;# 
   288  0312                     	;# 
   289  0313                     	;# 
   290  0314                     	;# 
   291  0314                     	;# 
   292  0315                     	;# 
   293  0316                     	;# 
   294  0317                     	;# 
   295  0318                     	;# 
   296  0318                     	;# 
   297  0319                     	;# 
   298  031A                     	;# 
   299  031B                     	;# 
   300  031C                     	;# 
   301  031C                     	;# 
   302  031D                     	;# 
   303  031E                     	;# 
   304  031F                     	;# 
   305  038C                     	;# 
   306  038C                     	;# 
   307  038D                     	;# 
   308  038E                     	;# 
   309  0390                     	;# 
   310  0390                     	;# 
   311  0391                     	;# 
   312  0392                     	;# 
   313  040C                     	;# 
   314  040D                     	;# 
   315  040E                     	;# 
   316  040F                     	;# 
   317  0410                     	;# 
   318  0411                     	;# 
   319  0416                     	;# 
   320  0416                     	;# 
   321  0417                     	;# 
   322  0418                     	;# 
   323  0418                     	;# 
   324  0419                     	;# 
   325  041A                     	;# 
   326  041A                     	;# 
   327  041B                     	;# 
   328  041C                     	;# 
   329  041C                     	;# 
   330  041D                     	;# 
   331  041E                     	;# 
   332  041F                     	;# 
   333  048C                     	;# 
   334  048C                     	;# 
   335  048D                     	;# 
   336  048E                     	;# 
   337  048F                     	;# 
   338  048F                     	;# 
   339  0490                     	;# 
   340  0491                     	;# 
   341  0492                     	;# 
   342  0492                     	;# 
   343  0493                     	;# 
   344  0494                     	;# 
   345  0495                     	;# 
   346  0495                     	;# 
   347  0496                     	;# 
   348  0497                     	;# 
   349  0498                     	;# 
   350  0499                     	;# 
   351  049A                     	;# 
   352  049B                     	;# 
   353  049C                     	;# 
   354  049D                     	;# 
   355  050C                     	;# 
   356  050C                     	;# 
   357  050D                     	;# 
   358  050E                     	;# 
   359  050F                     	;# 
   360  050F                     	;# 
   361  0510                     	;# 
   362  0511                     	;# 
   363  0512                     	;# 
   364  0512                     	;# 
   365  0513                     	;# 
   366  0514                     	;# 
   367  0515                     	;# 
   368  0515                     	;# 
   369  0516                     	;# 
   370  0517                     	;# 
   371  0518                     	;# 
   372  0519                     	;# 
   373  051A                     	;# 
   374  051B                     	;# 
   375  051C                     	;# 
   376  051D                     	;# 
   377  058C                     	;# 
   378  058C                     	;# 
   379  058D                     	;# 
   380  058E                     	;# 
   381  058F                     	;# 
   382  058F                     	;# 
   383  0590                     	;# 
   384  0591                     	;# 
   385  0592                     	;# 
   386  0593                     	;# 
   387  060C                     	;# 
   388  060D                     	;# 
   389  060E                     	;# 
   390  060F                     	;# 
   391  0610                     	;# 
   392  0611                     	;# 
   393  0612                     	;# 
   394  0613                     	;# 
   395  0614                     	;# 
   396  0616                     	;# 
   397  0617                     	;# 
   398  0618                     	;# 
   399  0619                     	;# 
   400  061A                     	;# 
   401  061B                     	;# 
   402  061C                     	;# 
   403  061D                     	;# 
   404  061E                     	;# 
   405  068C                     	;# 
   406  068D                     	;# 
   407  068E                     	;# 
   408  068F                     	;# 
   409  0690                     	;# 
   410  0691                     	;# 
   411  0692                     	;# 
   412  0693                     	;# 
   413  0694                     	;# 
   414  070C                     	;# 
   415  070D                     	;# 
   416  070E                     	;# 
   417  070F                     	;# 
   418  0710                     	;# 
   419  0711                     	;# 
   420  0712                     	;# 
   421  0713                     	;# 
   422  0714                     	;# 
   423  0716                     	;# 
   424  0717                     	;# 
   425  0718                     	;# 
   426  0719                     	;# 
   427  071A                     	;# 
   428  071B                     	;# 
   429  071C                     	;# 
   430  071D                     	;# 
   431  071E                     	;# 
   432  0796                     	;# 
   433  0797                     	;# 
   434  0798                     	;# 
   435  0799                     	;# 
   436  079A                     	;# 
   437  079B                     	;# 
   438  080C                     	;# 
   439  080D                     	;# 
   440  080E                     	;# 
   441  080F                     	;# 
   442  0810                     	;# 
   443  0811                     	;# 
   444  0812                     	;# 
   445  0813                     	;# 
   446  0814                     	;# 
   447  081A                     	;# 
   448  081B                     	;# 
   449  081C                     	;# 
   450  081D                     	;# 
   451  081E                     	;# 
   452  081F                     	;# 
   453  088C                     	;# 
   454  088D                     	;# 
   455  088E                     	;# 
   456  088F                     	;# 
   457  0890                     	;# 
   458  0891                     	;# 
   459  0892                     	;# 
   460  0893                     	;# 
   461  0895                     	;# 
   462  0896                     	;# 
   463  0897                     	;# 
   464  0898                     	;# 
   465  0899                     	;# 
   466  089A                     	;# 
   467  089B                     	;# 
   468  090C                     	;# 
   469  090E                     	;# 
   470  090F                     	;# 
   471  091F                     	;# 
   472  091F                     	;# 
   473  098F                     	;# 
   474  098F                     	;# 
   475  0990                     	;# 
   476  0991                     	;# 
   477  0992                     	;# 
   478  0993                     	;# 
   479  0994                     	;# 
   480  0995                     	;# 
   481  0996                     	;# 
   482  0997                     	;# 
   483  0E0F                     	;# 
   484  0E10                     	;# 
   485  0E11                     	;# 
   486  0E12                     	;# 
   487  0E13                     	;# 
   488  0E14                     	;# 
   489  0E15                     	;# 
   490  0E16                     	;# 
   491  0E17                     	;# 
   492  0E18                     	;# 
   493  0E19                     	;# 
   494  0E1A                     	;# 
   495  0E1B                     	;# 
   496  0E1C                     	;# 
   497  0E1D                     	;# 
   498  0E1E                     	;# 
   499  0E1F                     	;# 
   500  0E20                     	;# 
   501  0E21                     	;# 
   502  0E22                     	;# 
   503  0E23                     	;# 
   504  0E24                     	;# 
   505  0E25                     	;# 
   506  0E26                     	;# 
   507  0E27                     	;# 
   508  0E28                     	;# 
   509  0E29                     	;# 
   510  0E2A                     	;# 
   511  0E2B                     	;# 
   512  0E2C                     	;# 
   513  0E2D                     	;# 
   514  0E2E                     	;# 
   515  0E2F                     	;# 
   516  0E30                     	;# 
   517  0E31                     	;# 
   518  0E32                     	;# 
   519  0E33                     	;# 
   520  0E34                     	;# 
   521  0E35                     	;# 
   522  0E36                     	;# 
   523  0E37                     	;# 
   524  0E8F                     	;# 
   525  0E90                     	;# 
   526  0E91                     	;# 
   527  0E92                     	;# 
   528  0E93                     	;# 
   529  0E94                     	;# 
   530  0E95                     	;# 
   531  0E96                     	;# 
   532  0E97                     	;# 
   533  0E9C                     	;# 
   534  0E9D                     	;# 
   535  0E9E                     	;# 
   536  0EA1                     	;# 
   537  0EA2                     	;# 
   538  0EA3                     	;# 
   539  0EA4                     	;# 
   540  0EA5                     	;# 
   541  0EA9                     	;# 
   542  0EAA                     	;# 
   543  0EAB                     	;# 
   544  0EAC                     	;# 
   545  0EB1                     	;# 
   546  0EB2                     	;# 
   547  0EB3                     	;# 
   548  0EB8                     	;# 
   549  0EB9                     	;# 
   550  0EBA                     	;# 
   551  0EBB                     	;# 
   552  0EBC                     	;# 
   553  0EBD                     	;# 
   554  0EBE                     	;# 
   555  0EC3                     	;# 
   556  0EC5                     	;# 
   557  0EC6                     	;# 
   558  0EC7                     	;# 
   559  0EC8                     	;# 
   560  0EC9                     	;# 
   561  0ECA                     	;# 
   562  0ECB                     	;# 
   563  0ECC                     	;# 
   564  0F10                     	;# 
   565  0F11                     	;# 
   566  0F12                     	;# 
   567  0F13                     	;# 
   568  0F14                     	;# 
   569  0F15                     	;# 
   570  0F16                     	;# 
   571  0F17                     	;# 
   572  0F18                     	;# 
   573  0F19                     	;# 
   574  0F1A                     	;# 
   575  0F1B                     	;# 
   576  0F1C                     	;# 
   577  0F1D                     	;# 
   578  0F1E                     	;# 
   579  0F1F                     	;# 
   580  0F20                     	;# 
   581  0F21                     	;# 
   582  0F22                     	;# 
   583  0F23                     	;# 
   584  0F24                     	;# 
   585  0F25                     	;# 
   586  0F26                     	;# 
   587  0F27                     	;# 
   588  0F28                     	;# 
   589  0F29                     	;# 
   590  0F2A                     	;# 
   591  0F2B                     	;# 
   592  0F2C                     	;# 
   593  0F2D                     	;# 
   594  0F2E                     	;# 
   595  0F2F                     	;# 
   596  0F30                     	;# 
   597  0F31                     	;# 
   598  0F32                     	;# 
   599  0F38                     	;# 
   600  0F39                     	;# 
   601  0F3A                     	;# 
   602  0F3B                     	;# 
   603  0F3C                     	;# 
   604  0F3D                     	;# 
   605  0F3E                     	;# 
   606  0F3F                     	;# 
   607  0F40                     	;# 
   608  0F41                     	;# 
   609  0F43                     	;# 
   610  0F44                     	;# 
   611  0F45                     	;# 
   612  0F46                     	;# 
   613  0F47                     	;# 
   614  0F48                     	;# 
   615  0F49                     	;# 
   616  0F4A                     	;# 
   617  0F4B                     	;# 
   618  0F4C                     	;# 
   619  0F4E                     	;# 
   620  0F4F                     	;# 
   621  0F50                     	;# 
   622  0F51                     	;# 
   623  0F52                     	;# 
   624  0F53                     	;# 
   625  0F54                     	;# 
   626  0F55                     	;# 
   627  0F56                     	;# 
   628  0F57                     	;# 
   629  0F59                     	;# 
   630  0F5A                     	;# 
   631  0F5B                     	;# 
   632  0F5C                     	;# 
   633  0F5D                     	;# 
   634  0F61                     	;# 
   635  0F62                     	;# 
   636  0F64                     	;# 
   637  0F65                     	;# 
   638  0F66                     	;# 
   639  0F67                     	;# 
   640  0F68                     	;# 
   641  0F69                     	;# 
   642  0F6A                     	;# 
   643  0F6B                     	;# 
   644  0F6C                     	;# 
   645  0F6D                     	;# 
   646  0FE4                     	;# 
   647  0FE5                     	;# 
   648  0FE6                     	;# 
   649  0FE7                     	;# 
   650  0FE8                     	;# 
   651  0FE9                     	;# 
   652  0FEA                     	;# 
   653  0FEB                     	;# 
   654  0FED                     	;# 
   655  0FEE                     	;# 
   656  0FEF                     	;# 
   657  0000                     	;# 
   658  0001                     	;# 
   659  0002                     	;# 
   660  0003                     	;# 
   661  0004                     	;# 
   662  0005                     	;# 
   663  0006                     	;# 
   664  0007                     	;# 
   665  0008                     	;# 
   666  0009                     	;# 
   667  000A                     	;# 
   668  000B                     	;# 
   669  000C                     	;# 
   670  000D                     	;# 
   671  000E                     	;# 
   672  000F                     	;# 
   673  0010                     	;# 
   674  0011                     	;# 
   675  0012                     	;# 
   676  0013                     	;# 
   677  0014                     	;# 
   678  0015                     	;# 
   679  0016                     	;# 
   680  0017                     	;# 
   681  0018                     	;# 
   682  0019                     	;# 
   683  001A                     	;# 
   684  001C                     	;# 
   685  001C                     	;# 
   686  001D                     	;# 
   687  001D                     	;# 
   688  001E                     	;# 
   689  001F                     	;# 
   690  008C                     	;# 
   691  008C                     	;# 
   692  008D                     	;# 
   693  008E                     	;# 
   694  008E                     	;# 
   695  008F                     	;# 
   696  0090                     	;# 
   697  0090                     	;# 
   698  0091                     	;# 
   699  0093                     	;# 
   700  0094                     	;# 
   701  0095                     	;# 
   702  0096                     	;# 
   703  0097                     	;# 
   704  0098                     	;# 
   705  0099                     	;# 
   706  009A                     	;# 
   707  009B                     	;# 
   708  009C                     	;# 
   709  009D                     	;# 
   710  009E                     	;# 
   711  010C                     	;# 
   712  010D                     	;# 
   713  010E                     	;# 
   714  010E                     	;# 
   715  010F                     	;# 
   716  0110                     	;# 
   717  0110                     	;# 
   718  0111                     	;# 
   719  0112                     	;# 
   720  0112                     	;# 
   721  0113                     	;# 
   722  0114                     	;# 
   723  0114                     	;# 
   724  0115                     	;# 
   725  0116                     	;# 
   726  0116                     	;# 
   727  0117                     	;# 
   728  0119                     	;# 
   729  0119                     	;# 
   730  0119                     	;# 
   731  011A                     	;# 
   732  011A                     	;# 
   733  011A                     	;# 
   734  011B                     	;# 
   735  011B                     	;# 
   736  011B                     	;# 
   737  011B                     	;# 
   738  011B                     	;# 
   739  011C                     	;# 
   740  011C                     	;# 
   741  011C                     	;# 
   742  011D                     	;# 
   743  011D                     	;# 
   744  011D                     	;# 
   745  011E                     	;# 
   746  011E                     	;# 
   747  011E                     	;# 
   748  011F                     	;# 
   749  011F                     	;# 
   750  011F                     	;# 
   751  011F                     	;# 
   752  011F                     	;# 
   753  018C                     	;# 
   754  018D                     	;# 
   755  018E                     	;# 
   756  018F                     	;# 
   757  0190                     	;# 
   758  0191                     	;# 
   759  0192                     	;# 
   760  0196                     	;# 
   761  0197                     	;# 
   762  0198                     	;# 
   763  0199                     	;# 
   764  019A                     	;# 
   765  019B                     	;# 
   766  019C                     	;# 
   767  020C                     	;# 
   768  020C                     	;# 
   769  020D                     	;# 
   770  020E                     	;# 
   771  020F                     	;# 
   772  020F                     	;# 
   773  0210                     	;# 
   774  0210                     	;# 
   775  0211                     	;# 
   776  0211                     	;# 
   777  0212                     	;# 
   778  0212                     	;# 
   779  0213                     	;# 
   780  0214                     	;# 
   781  0215                     	;# 
   782  0215                     	;# 
   783  0216                     	;# 
   784  0216                     	;# 
   785  0217                     	;# 
   786  0217                     	;# 
   787  0218                     	;# 
   788  0218                     	;# 
   789  0219                     	;# 
   790  021A                     	;# 
   791  021B                     	;# 
   792  021B                     	;# 
   793  021C                     	;# 
   794  021C                     	;# 
   795  021D                     	;# 
   796  021D                     	;# 
   797  021E                     	;# 
   798  021F                     	;# 
   799  028C                     	;# 
   800  028C                     	;# 
   801  028D                     	;# 
   802  028D                     	;# 
   803  028E                     	;# 
   804  028F                     	;# 
   805  0290                     	;# 
   806  0290                     	;# 
   807  0291                     	;# 
   808  0292                     	;# 
   809  0292                     	;# 
   810  0293                     	;# 
   811  0293                     	;# 
   812  0294                     	;# 
   813  0295                     	;# 
   814  0296                     	;# 
   815  0296                     	;# 
   816  0297                     	;# 
   817  0298                     	;# 
   818  0298                     	;# 
   819  0299                     	;# 
   820  0299                     	;# 
   821  029A                     	;# 
   822  029B                     	;# 
   823  029C                     	;# 
   824  029C                     	;# 
   825  029D                     	;# 
   826  030C                     	;# 
   827  030C                     	;# 
   828  030D                     	;# 
   829  030E                     	;# 
   830  030F                     	;# 
   831  0310                     	;# 
   832  0310                     	;# 
   833  0311                     	;# 
   834  0312                     	;# 
   835  0313                     	;# 
   836  0314                     	;# 
   837  0314                     	;# 
   838  0315                     	;# 
   839  0316                     	;# 
   840  0317                     	;# 
   841  0318                     	;# 
   842  0318                     	;# 
   843  0319                     	;# 
   844  031A                     	;# 
   845  031B                     	;# 
   846  031C                     	;# 
   847  031C                     	;# 
   848  031D                     	;# 
   849  031E                     	;# 
   850  031F                     	;# 
   851  038C                     	;# 
   852  038C                     	;# 
   853  038D                     	;# 
   854  038E                     	;# 
   855  0390                     	;# 
   856  0390                     	;# 
   857  0391                     	;# 
   858  0392                     	;# 
   859  040C                     	;# 
   860  040D                     	;# 
   861  040E                     	;# 
   862  040F                     	;# 
   863  0410                     	;# 
   864  0411                     	;# 
   865  0416                     	;# 
   866  0416                     	;# 
   867  0417                     	;# 
   868  0418                     	;# 
   869  0418                     	;# 
   870  0419                     	;# 
   871  041A                     	;# 
   872  041A                     	;# 
   873  041B                     	;# 
   874  041C                     	;# 
   875  041C                     	;# 
   876  041D                     	;# 
   877  041E                     	;# 
   878  041F                     	;# 
   879  048C                     	;# 
   880  048C                     	;# 
   881  048D                     	;# 
   882  048E                     	;# 
   883  048F                     	;# 
   884  048F                     	;# 
   885  0490                     	;# 
   886  0491                     	;# 
   887  0492                     	;# 
   888  0492                     	;# 
   889  0493                     	;# 
   890  0494                     	;# 
   891  0495                     	;# 
   892  0495                     	;# 
   893  0496                     	;# 
   894  0497                     	;# 
   895  0498                     	;# 
   896  0499                     	;# 
   897  049A                     	;# 
   898  049B                     	;# 
   899  049C                     	;# 
   900  049D                     	;# 
   901  050C                     	;# 
   902  050C                     	;# 
   903  050D                     	;# 
   904  050E                     	;# 
   905  050F                     	;# 
   906  050F                     	;# 
   907  0510                     	;# 
   908  0511                     	;# 
   909  0512                     	;# 
   910  0512                     	;# 
   911  0513                     	;# 
   912  0514                     	;# 
   913  0515                     	;# 
   914  0515                     	;# 
   915  0516                     	;# 
   916  0517                     	;# 
   917  0518                     	;# 
   918  0519                     	;# 
   919  051A                     	;# 
   920  051B                     	;# 
   921  051C                     	;# 
   922  051D                     	;# 
   923  058C                     	;# 
   924  058C                     	;# 
   925  058D                     	;# 
   926  058E                     	;# 
   927  058F                     	;# 
   928  058F                     	;# 
   929  0590                     	;# 
   930  0591                     	;# 
   931  0592                     	;# 
   932  0593                     	;# 
   933  060C                     	;# 
   934  060D                     	;# 
   935  060E                     	;# 
   936  060F                     	;# 
   937  0610                     	;# 
   938  0611                     	;# 
   939  0612                     	;# 
   940  0613                     	;# 
   941  0614                     	;# 
   942  0616                     	;# 
   943  0617                     	;# 
   944  0618                     	;# 
   945  0619                     	;# 
   946  061A                     	;# 
   947  061B                     	;# 
   948  061C                     	;# 
   949  061D                     	;# 
   950  061E                     	;# 
   951  068C                     	;# 
   952  068D                     	;# 
   953  068E                     	;# 
   954  068F                     	;# 
   955  0690                     	;# 
   956  0691                     	;# 
   957  0692                     	;# 
   958  0693                     	;# 
   959  0694                     	;# 
   960  070C                     	;# 
   961  070D                     	;# 
   962  070E                     	;# 
   963  070F                     	;# 
   964  0710                     	;# 
   965  0711                     	;# 
   966  0712                     	;# 
   967  0713                     	;# 
   968  0714                     	;# 
   969  0716                     	;# 
   970  0717                     	;# 
   971  0718                     	;# 
   972  0719                     	;# 
   973  071A                     	;# 
   974  071B                     	;# 
   975  071C                     	;# 
   976  071D                     	;# 
   977  071E                     	;# 
   978  0796                     	;# 
   979  0797                     	;# 
   980  0798                     	;# 
   981  0799                     	;# 
   982  079A                     	;# 
   983  079B                     	;# 
   984  080C                     	;# 
   985  080D                     	;# 
   986  080E                     	;# 
   987  080F                     	;# 
   988  0810                     	;# 
   989  0811                     	;# 
   990  0812                     	;# 
   991  0813                     	;# 
   992  0814                     	;# 
   993  081A                     	;# 
   994  081B                     	;# 
   995  081C                     	;# 
   996  081D                     	;# 
   997  081E                     	;# 
   998  081F                     	;# 
   999  088C                     	;# 
  1000  088D                     	;# 
  1001  088E                     	;# 
  1002  088F                     	;# 
  1003  0890                     	;# 
  1004  0891                     	;# 
  1005  0892                     	;# 
  1006  0893                     	;# 
  1007  0895                     	;# 
  1008  0896                     	;# 
  1009  0897                     	;# 
  1010  0898                     	;# 
  1011  0899                     	;# 
  1012  089A                     	;# 
  1013  089B                     	;# 
  1014  090C                     	;# 
  1015  090E                     	;# 
  1016  090F                     	;# 
  1017  091F                     	;# 
  1018  091F                     	;# 
  1019  098F                     	;# 
  1020  098F                     	;# 
  1021  0990                     	;# 
  1022  0991                     	;# 
  1023  0992                     	;# 
  1024  0993                     	;# 
  1025  0994                     	;# 
  1026  0995                     	;# 
  1027  0996                     	;# 
  1028  0997                     	;# 
  1029  0E0F                     	;# 
  1030  0E10                     	;# 
  1031  0E11                     	;# 
  1032  0E12                     	;# 
  1033  0E13                     	;# 
  1034  0E14                     	;# 
  1035  0E15                     	;# 
  1036  0E16                     	;# 
  1037  0E17                     	;# 
  1038  0E18                     	;# 
  1039  0E19                     	;# 
  1040  0E1A                     	;# 
  1041  0E1B                     	;# 
  1042  0E1C                     	;# 
  1043  0E1D                     	;# 
  1044  0E1E                     	;# 
  1045  0E1F                     	;# 
  1046  0E20                     	;# 
  1047  0E21                     	;# 
  1048  0E22                     	;# 
  1049  0E23                     	;# 
  1050  0E24                     	;# 
  1051  0E25                     	;# 
  1052  0E26                     	;# 
  1053  0E27                     	;# 
  1054  0E28                     	;# 
  1055  0E29                     	;# 
  1056  0E2A                     	;# 
  1057  0E2B                     	;# 
  1058  0E2C                     	;# 
  1059  0E2D                     	;# 
  1060  0E2E                     	;# 
  1061  0E2F                     	;# 
  1062  0E30                     	;# 
  1063  0E31                     	;# 
  1064  0E32                     	;# 
  1065  0E33                     	;# 
  1066  0E34                     	;# 
  1067  0E35                     	;# 
  1068  0E36                     	;# 
  1069  0E37                     	;# 
  1070  0E8F                     	;# 
  1071  0E90                     	;# 
  1072  0E91                     	;# 
  1073  0E92                     	;# 
  1074  0E93                     	;# 
  1075  0E94                     	;# 
  1076  0E95                     	;# 
  1077  0E96                     	;# 
  1078  0E97                     	;# 
  1079  0E9C                     	;# 
  1080  0E9D                     	;# 
  1081  0E9E                     	;# 
  1082  0EA1                     	;# 
  1083  0EA2                     	;# 
  1084  0EA3                     	;# 
  1085  0EA4                     	;# 
  1086  0EA5                     	;# 
  1087  0EA9                     	;# 
  1088  0EAA                     	;# 
  1089  0EAB                     	;# 
  1090  0EAC                     	;# 
  1091  0EB1                     	;# 
  1092  0EB2                     	;# 
  1093  0EB3                     	;# 
  1094  0EB8                     	;# 
  1095  0EB9                     	;# 
  1096  0EBA                     	;# 
  1097  0EBB                     	;# 
  1098  0EBC                     	;# 
  1099  0EBD                     	;# 
  1100  0EBE                     	;# 
  1101  0EC3                     	;# 
  1102  0EC5                     	;# 
  1103  0EC6                     	;# 
  1104  0EC7                     	;# 
  1105  0EC8                     	;# 
  1106  0EC9                     	;# 
  1107  0ECA                     	;# 
  1108  0ECB                     	;# 
  1109  0ECC                     	;# 
  1110  0F10                     	;# 
  1111  0F11                     	;# 
  1112  0F12                     	;# 
  1113  0F13                     	;# 
  1114  0F14                     	;# 
  1115  0F15                     	;# 
  1116  0F16                     	;# 
  1117  0F17                     	;# 
  1118  0F18                     	;# 
  1119  0F19                     	;# 
  1120  0F1A                     	;# 
  1121  0F1B                     	;# 
  1122  0F1C                     	;# 
  1123  0F1D                     	;# 
  1124  0F1E                     	;# 
  1125  0F1F                     	;# 
  1126  0F20                     	;# 
  1127  0F21                     	;# 
  1128  0F22                     	;# 
  1129  0F23                     	;# 
  1130  0F24                     	;# 
  1131  0F25                     	;# 
  1132  0F26                     	;# 
  1133  0F27                     	;# 
  1134  0F28                     	;# 
  1135  0F29                     	;# 
  1136  0F2A                     	;# 
  1137  0F2B                     	;# 
  1138  0F2C                     	;# 
  1139  0F2D                     	;# 
  1140  0F2E                     	;# 
  1141  0F2F                     	;# 
  1142  0F30                     	;# 
  1143  0F31                     	;# 
  1144  0F32                     	;# 
  1145  0F38                     	;# 
  1146  0F39                     	;# 
  1147  0F3A                     	;# 
  1148  0F3B                     	;# 
  1149  0F3C                     	;# 
  1150  0F3D                     	;# 
  1151  0F3E                     	;# 
  1152  0F3F                     	;# 
  1153  0F40                     	;# 
  1154  0F41                     	;# 
  1155  0F43                     	;# 
  1156  0F44                     	;# 
  1157  0F45                     	;# 
  1158  0F46                     	;# 
  1159  0F47                     	;# 
  1160  0F48                     	;# 
  1161  0F49                     	;# 
  1162  0F4A                     	;# 
  1163  0F4B                     	;# 
  1164  0F4C                     	;# 
  1165  0F4E                     	;# 
  1166  0F4F                     	;# 
  1167  0F50                     	;# 
  1168  0F51                     	;# 
  1169  0F52                     	;# 
  1170  0F53                     	;# 
  1171  0F54                     	;# 
  1172  0F55                     	;# 
  1173  0F56                     	;# 
  1174  0F57                     	;# 
  1175  0F59                     	;# 
  1176  0F5A                     	;# 
  1177  0F5B                     	;# 
  1178  0F5C                     	;# 
  1179  0F5D                     	;# 
  1180  0F61                     	;# 
  1181  0F62                     	;# 
  1182  0F64                     	;# 
  1183  0F65                     	;# 
  1184  0F66                     	;# 
  1185  0F67                     	;# 
  1186  0F68                     	;# 
  1187  0F69                     	;# 
  1188  0F6A                     	;# 
  1189  0F6B                     	;# 
  1190  0F6C                     	;# 
  1191  0F6D                     	;# 
  1192  0FE4                     	;# 
  1193  0FE5                     	;# 
  1194  0FE6                     	;# 
  1195  0FE7                     	;# 
  1196  0FE8                     	;# 
  1197  0FE9                     	;# 
  1198  0FEA                     	;# 
  1199  0FEB                     	;# 
  1200  0FED                     	;# 
  1201  0FEE                     	;# 
  1202  0FEF                     	;# 
  1203  0000                     	;# 
  1204  0001                     	;# 
  1205  0002                     	;# 
  1206  0003                     	;# 
  1207  0004                     	;# 
  1208  0005                     	;# 
  1209  0006                     	;# 
  1210  0007                     	;# 
  1211  0008                     	;# 
  1212  0009                     	;# 
  1213  000A                     	;# 
  1214  000B                     	;# 
  1215  000C                     	;# 
  1216  000D                     	;# 
  1217  000E                     	;# 
  1218  000F                     	;# 
  1219  0010                     	;# 
  1220  0011                     	;# 
  1221  0012                     	;# 
  1222  0013                     	;# 
  1223  0014                     	;# 
  1224  0015                     	;# 
  1225  0016                     	;# 
  1226  0017                     	;# 
  1227  0018                     	;# 
  1228  0019                     	;# 
  1229  001A                     	;# 
  1230  001C                     	;# 
  1231  001C                     	;# 
  1232  001D                     	;# 
  1233  001D                     	;# 
  1234  001E                     	;# 
  1235  001F                     	;# 
  1236  008C                     	;# 
  1237  008C                     	;# 
  1238  008D                     	;# 
  1239  008E                     	;# 
  1240  008E                     	;# 
  1241  008F                     	;# 
  1242  0090                     	;# 
  1243  0090                     	;# 
  1244  0091                     	;# 
  1245  0093                     	;# 
  1246  0094                     	;# 
  1247  0095                     	;# 
  1248  0096                     	;# 
  1249  0097                     	;# 
  1250  0098                     	;# 
  1251  0099                     	;# 
  1252  009A                     	;# 
  1253  009B                     	;# 
  1254  009C                     	;# 
  1255  009D                     	;# 
  1256  009E                     	;# 
  1257  010C                     	;# 
  1258  010D                     	;# 
  1259  010E                     	;# 
  1260  010E                     	;# 
  1261  010F                     	;# 
  1262  0110                     	;# 
  1263  0110                     	;# 
  1264  0111                     	;# 
  1265  0112                     	;# 
  1266  0112                     	;# 
  1267  0113                     	;# 
  1268  0114                     	;# 
  1269  0114                     	;# 
  1270  0115                     	;# 
  1271  0116                     	;# 
  1272  0116                     	;# 
  1273  0117                     	;# 
  1274  0119                     	;# 
  1275  0119                     	;# 
  1276  0119                     	;# 
  1277  011A                     	;# 
  1278  011A                     	;# 
  1279  011A                     	;# 
  1280  011B                     	;# 
  1281  011B                     	;# 
  1282  011B                     	;# 
  1283  011B                     	;# 
  1284  011B                     	;# 
  1285  011C                     	;# 
  1286  011C                     	;# 
  1287  011C                     	;# 
  1288  011D                     	;# 
  1289  011D                     	;# 
  1290  011D                     	;# 
  1291  011E                     	;# 
  1292  011E                     	;# 
  1293  011E                     	;# 
  1294  011F                     	;# 
  1295  011F                     	;# 
  1296  011F                     	;# 
  1297  011F                     	;# 
  1298  011F                     	;# 
  1299  018C                     	;# 
  1300  018D                     	;# 
  1301  018E                     	;# 
  1302  018F                     	;# 
  1303  0190                     	;# 
  1304  0191                     	;# 
  1305  0192                     	;# 
  1306  0196                     	;# 
  1307  0197                     	;# 
  1308  0198                     	;# 
  1309  0199                     	;# 
  1310  019A                     	;# 
  1311  019B                     	;# 
  1312  019C                     	;# 
  1313  020C                     	;# 
  1314  020C                     	;# 
  1315  020D                     	;# 
  1316  020E                     	;# 
  1317  020F                     	;# 
  1318  020F                     	;# 
  1319  0210                     	;# 
  1320  0210                     	;# 
  1321  0211                     	;# 
  1322  0211                     	;# 
  1323  0212                     	;# 
  1324  0212                     	;# 
  1325  0213                     	;# 
  1326  0214                     	;# 
  1327  0215                     	;# 
  1328  0215                     	;# 
  1329  0216                     	;# 
  1330  0216                     	;# 
  1331  0217                     	;# 
  1332  0217                     	;# 
  1333  0218                     	;# 
  1334  0218                     	;# 
  1335  0219                     	;# 
  1336  021A                     	;# 
  1337  021B                     	;# 
  1338  021B                     	;# 
  1339  021C                     	;# 
  1340  021C                     	;# 
  1341  021D                     	;# 
  1342  021D                     	;# 
  1343  021E                     	;# 
  1344  021F                     	;# 
  1345  028C                     	;# 
  1346  028C                     	;# 
  1347  028D                     	;# 
  1348  028D                     	;# 
  1349  028E                     	;# 
  1350  028F                     	;# 
  1351  0290                     	;# 
  1352  0290                     	;# 
  1353  0291                     	;# 
  1354  0292                     	;# 
  1355  0292                     	;# 
  1356  0293                     	;# 
  1357  0293                     	;# 
  1358  0294                     	;# 
  1359  0295                     	;# 
  1360  0296                     	;# 
  1361  0296                     	;# 
  1362  0297                     	;# 
  1363  0298                     	;# 
  1364  0298                     	;# 
  1365  0299                     	;# 
  1366  0299                     	;# 
  1367  029A                     	;# 
  1368  029B                     	;# 
  1369  029C                     	;# 
  1370  029C                     	;# 
  1371  029D                     	;# 
  1372  030C                     	;# 
  1373  030C                     	;# 
  1374  030D                     	;# 
  1375  030E                     	;# 
  1376  030F                     	;# 
  1377  0310                     	;# 
  1378  0310                     	;# 
  1379  0311                     	;# 
  1380  0312                     	;# 
  1381  0313                     	;# 
  1382  0314                     	;# 
  1383  0314                     	;# 
  1384  0315                     	;# 
  1385  0316                     	;# 
  1386  0317                     	;# 
  1387  0318                     	;# 
  1388  0318                     	;# 
  1389  0319                     	;# 
  1390  031A                     	;# 
  1391  031B                     	;# 
  1392  031C                     	;# 
  1393  031C                     	;# 
  1394  031D                     	;# 
  1395  031E                     	;# 
  1396  031F                     	;# 
  1397  038C                     	;# 
  1398  038C                     	;# 
  1399  038D                     	;# 
  1400  038E                     	;# 
  1401  0390                     	;# 
  1402  0390                     	;# 
  1403  0391                     	;# 
  1404  0392                     	;# 
  1405  040C                     	;# 
  1406  040D                     	;# 
  1407  040E                     	;# 
  1408  040F                     	;# 
  1409  0410                     	;# 
  1410  0411                     	;# 
  1411  0416                     	;# 
  1412  0416                     	;# 
  1413  0417                     	;# 
  1414  0418                     	;# 
  1415  0418                     	;# 
  1416  0419                     	;# 
  1417  041A                     	;# 
  1418  041A                     	;# 
  1419  041B                     	;# 
  1420  041C                     	;# 
  1421  041C                     	;# 
  1422  041D                     	;# 
  1423  041E                     	;# 
  1424  041F                     	;# 
  1425  048C                     	;# 
  1426  048C                     	;# 
  1427  048D                     	;# 
  1428  048E                     	;# 
  1429  048F                     	;# 
  1430  048F                     	;# 
  1431  0490                     	;# 
  1432  0491                     	;# 
  1433  0492                     	;# 
  1434  0492                     	;# 
  1435  0493                     	;# 
  1436  0494                     	;# 
  1437  0495                     	;# 
  1438  0495                     	;# 
  1439  0496                     	;# 
  1440  0497                     	;# 
  1441  0498                     	;# 
  1442  0499                     	;# 
  1443  049A                     	;# 
  1444  049B                     	;# 
  1445  049C                     	;# 
  1446  049D                     	;# 
  1447  050C                     	;# 
  1448  050C                     	;# 
  1449  050D                     	;# 
  1450  050E                     	;# 
  1451  050F                     	;# 
  1452  050F                     	;# 
  1453  0510                     	;# 
  1454  0511                     	;# 
  1455  0512                     	;# 
  1456  0512                     	;# 
  1457  0513                     	;# 
  1458  0514                     	;# 
  1459  0515                     	;# 
  1460  0515                     	;# 
  1461  0516                     	;# 
  1462  0517                     	;# 
  1463  0518                     	;# 
  1464  0519                     	;# 
  1465  051A                     	;# 
  1466  051B                     	;# 
  1467  051C                     	;# 
  1468  051D                     	;# 
  1469  058C                     	;# 
  1470  058C                     	;# 
  1471  058D                     	;# 
  1472  058E                     	;# 
  1473  058F                     	;# 
  1474  058F                     	;# 
  1475  0590                     	;# 
  1476  0591                     	;# 
  1477  0592                     	;# 
  1478  0593                     	;# 
  1479  060C                     	;# 
  1480  060D                     	;# 
  1481  060E                     	;# 
  1482  060F                     	;# 
  1483  0610                     	;# 
  1484  0611                     	;# 
  1485  0612                     	;# 
  1486  0613                     	;# 
  1487  0614                     	;# 
  1488  0616                     	;# 
  1489  0617                     	;# 
  1490  0618                     	;# 
  1491  0619                     	;# 
  1492  061A                     	;# 
  1493  061B                     	;# 
  1494  061C                     	;# 
  1495  061D                     	;# 
  1496  061E                     	;# 
  1497  068C                     	;# 
  1498  068D                     	;# 
  1499  068E                     	;# 
  1500  068F                     	;# 
  1501  0690                     	;# 
  1502  0691                     	;# 
  1503  0692                     	;# 
  1504  0693                     	;# 
  1505  0694                     	;# 
  1506  070C                     	;# 
  1507  070D                     	;# 
  1508  070E                     	;# 
  1509  070F                     	;# 
  1510  0710                     	;# 
  1511  0711                     	;# 
  1512  0712                     	;# 
  1513  0713                     	;# 
  1514  0714                     	;# 
  1515  0716                     	;# 
  1516  0717                     	;# 
  1517  0718                     	;# 
  1518  0719                     	;# 
  1519  071A                     	;# 
  1520  071B                     	;# 
  1521  071C                     	;# 
  1522  071D                     	;# 
  1523  071E                     	;# 
  1524  0796                     	;# 
  1525  0797                     	;# 
  1526  0798                     	;# 
  1527  0799                     	;# 
  1528  079A                     	;# 
  1529  079B                     	;# 
  1530  080C                     	;# 
  1531  080D                     	;# 
  1532  080E                     	;# 
  1533  080F                     	;# 
  1534  0810                     	;# 
  1535  0811                     	;# 
  1536  0812                     	;# 
  1537  0813                     	;# 
  1538  0814                     	;# 
  1539  081A                     	;# 
  1540  081B                     	;# 
  1541  081C                     	;# 
  1542  081D                     	;# 
  1543  081E                     	;# 
  1544  081F                     	;# 
  1545  088C                     	;# 
  1546  088D                     	;# 
  1547  088E                     	;# 
  1548  088F                     	;# 
  1549  0890                     	;# 
  1550  0891                     	;# 
  1551  0892                     	;# 
  1552  0893                     	;# 
  1553  0895                     	;# 
  1554  0896                     	;# 
  1555  0897                     	;# 
  1556  0898                     	;# 
  1557  0899                     	;# 
  1558  089A                     	;# 
  1559  089B                     	;# 
  1560  090C                     	;# 
  1561  090E                     	;# 
  1562  090F                     	;# 
  1563  091F                     	;# 
  1564  091F                     	;# 
  1565  098F                     	;# 
  1566  098F                     	;# 
  1567  0990                     	;# 
  1568  0991                     	;# 
  1569  0992                     	;# 
  1570  0993                     	;# 
  1571  0994                     	;# 
  1572  0995                     	;# 
  1573  0996                     	;# 
  1574  0997                     	;# 
  1575  0E0F                     	;# 
  1576  0E10                     	;# 
  1577  0E11                     	;# 
  1578  0E12                     	;# 
  1579  0E13                     	;# 
  1580  0E14                     	;# 
  1581  0E15                     	;# 
  1582  0E16                     	;# 
  1583  0E17                     	;# 
  1584  0E18                     	;# 
  1585  0E19                     	;# 
  1586  0E1A                     	;# 
  1587  0E1B                     	;# 
  1588  0E1C                     	;# 
  1589  0E1D                     	;# 
  1590  0E1E                     	;# 
  1591  0E1F                     	;# 
  1592  0E20                     	;# 
  1593  0E21                     	;# 
  1594  0E22                     	;# 
  1595  0E23                     	;# 
  1596  0E24                     	;# 
  1597  0E25                     	;# 
  1598  0E26                     	;# 
  1599  0E27                     	;# 
  1600  0E28                     	;# 
  1601  0E29                     	;# 
  1602  0E2A                     	;# 
  1603  0E2B                     	;# 
  1604  0E2C                     	;# 
  1605  0E2D                     	;# 
  1606  0E2E                     	;# 
  1607  0E2F                     	;# 
  1608  0E30                     	;# 
  1609  0E31                     	;# 
  1610  0E32                     	;# 
  1611  0E33                     	;# 
  1612  0E34                     	;# 
  1613  0E35                     	;# 
  1614  0E36                     	;# 
  1615  0E37                     	;# 
  1616  0E8F                     	;# 
  1617  0E90                     	;# 
  1618  0E91                     	;# 
  1619  0E92                     	;# 
  1620  0E93                     	;# 
  1621  0E94                     	;# 
  1622  0E95                     	;# 
  1623  0E96                     	;# 
  1624  0E97                     	;# 
  1625  0E9C                     	;# 
  1626  0E9D                     	;# 
  1627  0E9E                     	;# 
  1628  0EA1                     	;# 
  1629  0EA2                     	;# 
  1630  0EA3                     	;# 
  1631  0EA4                     	;# 
  1632  0EA5                     	;# 
  1633  0EA9                     	;# 
  1634  0EAA                     	;# 
  1635  0EAB                     	;# 
  1636  0EAC                     	;# 
  1637  0EB1                     	;# 
  1638  0EB2                     	;# 
  1639  0EB3                     	;# 
  1640  0EB8                     	;# 
  1641  0EB9                     	;# 
  1642  0EBA                     	;# 
  1643  0EBB                     	;# 
  1644  0EBC                     	;# 
  1645  0EBD                     	;# 
  1646  0EBE                     	;# 
  1647  0EC3                     	;# 
  1648  0EC5                     	;# 
  1649  0EC6                     	;# 
  1650  0EC7                     	;# 
  1651  0EC8                     	;# 
  1652  0EC9                     	;# 
  1653  0ECA                     	;# 
  1654  0ECB                     	;# 
  1655  0ECC                     	;# 
  1656  0F10                     	;# 
  1657  0F11                     	;# 
  1658  0F12                     	;# 
  1659  0F13                     	;# 
  1660  0F14                     	;# 
  1661  0F15                     	;# 
  1662  0F16                     	;# 
  1663  0F17                     	;# 
  1664  0F18                     	;# 
  1665  0F19                     	;# 
  1666  0F1A                     	;# 
  1667  0F1B                     	;# 
  1668  0F1C                     	;# 
  1669  0F1D                     	;# 
  1670  0F1E                     	;# 
  1671  0F1F                     	;# 
  1672  0F20                     	;# 
  1673  0F21                     	;# 
  1674  0F22                     	;# 
  1675  0F23                     	;# 
  1676  0F24                     	;# 
  1677  0F25                     	;# 
  1678  0F26                     	;# 
  1679  0F27                     	;# 
  1680  0F28                     	;# 
  1681  0F29                     	;# 
  1682  0F2A                     	;# 
  1683  0F2B                     	;# 
  1684  0F2C                     	;# 
  1685  0F2D                     	;# 
  1686  0F2E                     	;# 
  1687  0F2F                     	;# 
  1688  0F30                     	;# 
  1689  0F31                     	;# 
  1690  0F32                     	;# 
  1691  0F38                     	;# 
  1692  0F39                     	;# 
  1693  0F3A                     	;# 
  1694  0F3B                     	;# 
  1695  0F3C                     	;# 
  1696  0F3D                     	;# 
  1697  0F3E                     	;# 
  1698  0F3F                     	;# 
  1699  0F40                     	;# 
  1700  0F41                     	;# 
  1701  0F43                     	;# 
  1702  0F44                     	;# 
  1703  0F45                     	;# 
  1704  0F46                     	;# 
  1705  0F47                     	;# 
  1706  0F48                     	;# 
  1707  0F49                     	;# 
  1708  0F4A                     	;# 
  1709  0F4B                     	;# 
  1710  0F4C                     	;# 
  1711  0F4E                     	;# 
  1712  0F4F                     	;# 
  1713  0F50                     	;# 
  1714  0F51                     	;# 
  1715  0F52                     	;# 
  1716  0F53                     	;# 
  1717  0F54                     	;# 
  1718  0F55                     	;# 
  1719  0F56                     	;# 
  1720  0F57                     	;# 
  1721  0F59                     	;# 
  1722  0F5A                     	;# 
  1723  0F5B                     	;# 
  1724  0F5C                     	;# 
  1725  0F5D                     	;# 
  1726  0F61                     	;# 
  1727  0F62                     	;# 
  1728  0F64                     	;# 
  1729  0F65                     	;# 
  1730  0F66                     	;# 
  1731  0F67                     	;# 
  1732  0F68                     	;# 
  1733  0F69                     	;# 
  1734  0F6A                     	;# 
  1735  0F6B                     	;# 
  1736  0F6C                     	;# 
  1737  0F6D                     	;# 
  1738  0FE4                     	;# 
  1739  0FE5                     	;# 
  1740  0FE6                     	;# 
  1741  0FE7                     	;# 
  1742  0FE8                     	;# 
  1743  0FE9                     	;# 
  1744  0FEA                     	;# 
  1745  0FEB                     	;# 
  1746  0FED                     	;# 
  1747  0FEE                     	;# 
  1748  0FEF                     	;# 
  1749  0000                     	;# 
  1750  0001                     	;# 
  1751  0002                     	;# 
  1752  0003                     	;# 
  1753  0004                     	;# 
  1754  0005                     	;# 
  1755  0006                     	;# 
  1756  0007                     	;# 
  1757  0008                     	;# 
  1758  0009                     	;# 
  1759  000A                     	;# 
  1760  000B                     	;# 
  1761  000C                     	;# 
  1762  000D                     	;# 
  1763  000E                     	;# 
  1764  000F                     	;# 
  1765  0010                     	;# 
  1766  0011                     	;# 
  1767  0012                     	;# 
  1768  0013                     	;# 
  1769  0014                     	;# 
  1770  0015                     	;# 
  1771  0016                     	;# 
  1772  0017                     	;# 
  1773  0018                     	;# 
  1774  0019                     	;# 
  1775  001A                     	;# 
  1776  001C                     	;# 
  1777  001C                     	;# 
  1778  001D                     	;# 
  1779  001D                     	;# 
  1780  001E                     	;# 
  1781  001F                     	;# 
  1782  008C                     	;# 
  1783  008C                     	;# 
  1784  008D                     	;# 
  1785  008E                     	;# 
  1786  008E                     	;# 
  1787  008F                     	;# 
  1788  0090                     	;# 
  1789  0090                     	;# 
  1790  0091                     	;# 
  1791  0093                     	;# 
  1792  0094                     	;# 
  1793  0095                     	;# 
  1794  0096                     	;# 
  1795  0097                     	;# 
  1796  0098                     	;# 
  1797  0099                     	;# 
  1798  009A                     	;# 
  1799  009B                     	;# 
  1800  009C                     	;# 
  1801  009D                     	;# 
  1802  009E                     	;# 
  1803  010C                     	;# 
  1804  010D                     	;# 
  1805  010E                     	;# 
  1806  010E                     	;# 
  1807  010F                     	;# 
  1808  0110                     	;# 
  1809  0110                     	;# 
  1810  0111                     	;# 
  1811  0112                     	;# 
  1812  0112                     	;# 
  1813  0113                     	;# 
  1814  0114                     	;# 
  1815  0114                     	;# 
  1816  0115                     	;# 
  1817  0116                     	;# 
  1818  0116                     	;# 
  1819  0117                     	;# 
  1820  0119                     	;# 
  1821  0119                     	;# 
  1822  0119                     	;# 
  1823  011A                     	;# 
  1824  011A                     	;# 
  1825  011A                     	;# 
  1826  011B                     	;# 
  1827  011B                     	;# 
  1828  011B                     	;# 
  1829  011B                     	;# 
  1830  011B                     	;# 
  1831  011C                     	;# 
  1832  011C                     	;# 
  1833  011C                     	;# 
  1834  011D                     	;# 
  1835  011D                     	;# 
  1836  011D                     	;# 
  1837  011E                     	;# 
  1838  011E                     	;# 
  1839  011E                     	;# 
  1840  011F                     	;# 
  1841  011F                     	;# 
  1842  011F                     	;# 
  1843  011F                     	;# 
  1844  011F                     	;# 
  1845  018C                     	;# 
  1846  018D                     	;# 
  1847  018E                     	;# 
  1848  018F                     	;# 
  1849  0190                     	;# 
  1850  0191                     	;# 
  1851  0192                     	;# 
  1852  0196                     	;# 
  1853  0197                     	;# 
  1854  0198                     	;# 
  1855  0199                     	;# 
  1856  019A                     	;# 
  1857  019B                     	;# 
  1858  019C                     	;# 
  1859  020C                     	;# 
  1860  020C                     	;# 
  1861  020D                     	;# 
  1862  020E                     	;# 
  1863  020F                     	;# 
  1864  020F                     	;# 
  1865  0210                     	;# 
  1866  0210                     	;# 
  1867  0211                     	;# 
  1868  0211                     	;# 
  1869  0212                     	;# 
  1870  0212                     	;# 
  1871  0213                     	;# 
  1872  0214                     	;# 
  1873  0215                     	;# 
  1874  0215                     	;# 
  1875  0216                     	;# 
  1876  0216                     	;# 
  1877  0217                     	;# 
  1878  0217                     	;# 
  1879  0218                     	;# 
  1880  0218                     	;# 
  1881  0219                     	;# 
  1882  021A                     	;# 
  1883  021B                     	;# 
  1884  021B                     	;# 
  1885  021C                     	;# 
  1886  021C                     	;# 
  1887  021D                     	;# 
  1888  021D                     	;# 
  1889  021E                     	;# 
  1890  021F                     	;# 
  1891  028C                     	;# 
  1892  028C                     	;# 
  1893  028D                     	;# 
  1894  028D                     	;# 
  1895  028E                     	;# 
  1896  028F                     	;# 
  1897  0290                     	;# 
  1898  0290                     	;# 
  1899  0291                     	;# 
  1900  0292                     	;# 
  1901  0292                     	;# 
  1902  0293                     	;# 
  1903  0293                     	;# 
  1904  0294                     	;# 
  1905  0295                     	;# 
  1906  0296                     	;# 
  1907  0296                     	;# 
  1908  0297                     	;# 
  1909  0298                     	;# 
  1910  0298                     	;# 
  1911  0299                     	;# 
  1912  0299                     	;# 
  1913  029A                     	;# 
  1914  029B                     	;# 
  1915  029C                     	;# 
  1916  029C                     	;# 
  1917  029D                     	;# 
  1918  030C                     	;# 
  1919  030C                     	;# 
  1920  030D                     	;# 
  1921  030E                     	;# 
  1922  030F                     	;# 
  1923  0310                     	;# 
  1924  0310                     	;# 
  1925  0311                     	;# 
  1926  0312                     	;# 
  1927  0313                     	;# 
  1928  0314                     	;# 
  1929  0314                     	;# 
  1930  0315                     	;# 
  1931  0316                     	;# 
  1932  0317                     	;# 
  1933  0318                     	;# 
  1934  0318                     	;# 
  1935  0319                     	;# 
  1936  031A                     	;# 
  1937  031B                     	;# 
  1938  031C                     	;# 
  1939  031C                     	;# 
  1940  031D                     	;# 
  1941  031E                     	;# 
  1942  031F                     	;# 
  1943  038C                     	;# 
  1944  038C                     	;# 
  1945  038D                     	;# 
  1946  038E                     	;# 
  1947  0390                     	;# 
  1948  0390                     	;# 
  1949  0391                     	;# 
  1950  0392                     	;# 
  1951  040C                     	;# 
  1952  040D                     	;# 
  1953  040E                     	;# 
  1954  040F                     	;# 
  1955  0410                     	;# 
  1956  0411                     	;# 
  1957  0416                     	;# 
  1958  0416                     	;# 
  1959  0417                     	;# 
  1960  0418                     	;# 
  1961  0418                     	;# 
  1962  0419                     	;# 
  1963  041A                     	;# 
  1964  041A                     	;# 
  1965  041B                     	;# 
  1966  041C                     	;# 
  1967  041C                     	;# 
  1968  041D                     	;# 
  1969  041E                     	;# 
  1970  041F                     	;# 
  1971  048C                     	;# 
  1972  048C                     	;# 
  1973  048D                     	;# 
  1974  048E                     	;# 
  1975  048F                     	;# 
  1976  048F                     	;# 
  1977  0490                     	;# 
  1978  0491                     	;# 
  1979  0492                     	;# 
  1980  0492                     	;# 
  1981  0493                     	;# 
  1982  0494                     	;# 
  1983  0495                     	;# 
  1984  0495                     	;# 
  1985  0496                     	;# 
  1986  0497                     	;# 
  1987  0498                     	;# 
  1988  0499                     	;# 
  1989  049A                     	;# 
  1990  049B                     	;# 
  1991  049C                     	;# 
  1992  049D                     	;# 
  1993  050C                     	;# 
  1994  050C                     	;# 
  1995  050D                     	;# 
  1996  050E                     	;# 
  1997  050F                     	;# 
  1998  050F                     	;# 
  1999  0510                     	;# 
  2000  0511                     	;# 
  2001  0512                     	;# 
  2002  0512                     	;# 
  2003  0513                     	;# 
  2004  0514                     	;# 
  2005  0515                     	;# 
  2006  0515                     	;# 
  2007  0516                     	;# 
  2008  0517                     	;# 
  2009  0518                     	;# 
  2010  0519                     	;# 
  2011  051A                     	;# 
  2012  051B                     	;# 
  2013  051C                     	;# 
  2014  051D                     	;# 
  2015  058C                     	;# 
  2016  058C                     	;# 
  2017  058D                     	;# 
  2018  058E                     	;# 
  2019  058F                     	;# 
  2020  058F                     	;# 
  2021  0590                     	;# 
  2022  0591                     	;# 
  2023  0592                     	;# 
  2024  0593                     	;# 
  2025  060C                     	;# 
  2026  060D                     	;# 
  2027  060E                     	;# 
  2028  060F                     	;# 
  2029  0610                     	;# 
  2030  0611                     	;# 
  2031  0612                     	;# 
  2032  0613                     	;# 
  2033  0614                     	;# 
  2034  0616                     	;# 
  2035  0617                     	;# 
  2036  0618                     	;# 
  2037  0619                     	;# 
  2038  061A                     	;# 
  2039  061B                     	;# 
  2040  061C                     	;# 
  2041  061D                     	;# 
  2042  061E                     	;# 
  2043  068C                     	;# 
  2044  068D                     	;# 
  2045  068E                     	;# 
  2046  068F                     	;# 
  2047  0690                     	;# 
  2048  0691                     	;# 
  2049  0692                     	;# 
  2050  0693                     	;# 
  2051  0694                     	;# 
  2052  070C                     	;# 
  2053  070D                     	;# 
  2054  070E                     	;# 
  2055  070F                     	;# 
  2056  0710                     	;# 
  2057  0711                     	;# 
  2058  0712                     	;# 
  2059  0713                     	;# 
  2060  0714                     	;# 
  2061  0716                     	;# 
  2062  0717                     	;# 
  2063  0718                     	;# 
  2064  0719                     	;# 
  2065  071A                     	;# 
  2066  071B                     	;# 
  2067  071C                     	;# 
  2068  071D                     	;# 
  2069  071E                     	;# 
  2070  0796                     	;# 
  2071  0797                     	;# 
  2072  0798                     	;# 
  2073  0799                     	;# 
  2074  079A                     	;# 
  2075  079B                     	;# 
  2076  080C                     	;# 
  2077  080D                     	;# 
  2078  080E                     	;# 
  2079  080F                     	;# 
  2080  0810                     	;# 
  2081  0811                     	;# 
  2082  0812                     	;# 
  2083  0813                     	;# 
  2084  0814                     	;# 
  2085  081A                     	;# 
  2086  081B                     	;# 
  2087  081C                     	;# 
  2088  081D                     	;# 
  2089  081E                     	;# 
  2090  081F                     	;# 
  2091  088C                     	;# 
  2092  088D                     	;# 
  2093  088E                     	;# 
  2094  088F                     	;# 
  2095  0890                     	;# 
  2096  0891                     	;# 
  2097  0892                     	;# 
  2098  0893                     	;# 
  2099  0895                     	;# 
  2100  0896                     	;# 
  2101  0897                     	;# 
  2102  0898                     	;# 
  2103  0899                     	;# 
  2104  089A                     	;# 
  2105  089B                     	;# 
  2106  090C                     	;# 
  2107  090E                     	;# 
  2108  090F                     	;# 
  2109  091F                     	;# 
  2110  091F                     	;# 
  2111  098F                     	;# 
  2112  098F                     	;# 
  2113  0990                     	;# 
  2114  0991                     	;# 
  2115  0992                     	;# 
  2116  0993                     	;# 
  2117  0994                     	;# 
  2118  0995                     	;# 
  2119  0996                     	;# 
  2120  0997                     	;# 
  2121  0E0F                     	;# 
  2122  0E10                     	;# 
  2123  0E11                     	;# 
  2124  0E12                     	;# 
  2125  0E13                     	;# 
  2126  0E14                     	;# 
  2127  0E15                     	;# 
  2128  0E16                     	;# 
  2129  0E17                     	;# 
  2130  0E18                     	;# 
  2131  0E19                     	;# 
  2132  0E1A                     	;# 
  2133  0E1B                     	;# 
  2134  0E1C                     	;# 
  2135  0E1D                     	;# 
  2136  0E1E                     	;# 
  2137  0E1F                     	;# 
  2138  0E20                     	;# 
  2139  0E21                     	;# 
  2140  0E22                     	;# 
  2141  0E23                     	;# 
  2142  0E24                     	;# 
  2143  0E25                     	;# 
  2144  0E26                     	;# 
  2145  0E27                     	;# 
  2146  0E28                     	;# 
  2147  0E29                     	;# 
  2148  0E2A                     	;# 
  2149  0E2B                     	;# 
  2150  0E2C                     	;# 
  2151  0E2D                     	;# 
  2152  0E2E                     	;# 
  2153  0E2F                     	;# 
  2154  0E30                     	;# 
  2155  0E31                     	;# 
  2156  0E32                     	;# 
  2157  0E33                     	;# 
  2158  0E34                     	;# 
  2159  0E35                     	;# 
  2160  0E36                     	;# 
  2161  0E37                     	;# 
  2162  0E8F                     	;# 
  2163  0E90                     	;# 
  2164  0E91                     	;# 
  2165  0E92                     	;# 
  2166  0E93                     	;# 
  2167  0E94                     	;# 
  2168  0E95                     	;# 
  2169  0E96                     	;# 
  2170  0E97                     	;# 
  2171  0E9C                     	;# 
  2172  0E9D                     	;# 
  2173  0E9E                     	;# 
  2174  0EA1                     	;# 
  2175  0EA2                     	;# 
  2176  0EA3                     	;# 
  2177  0EA4                     	;# 
  2178  0EA5                     	;# 
  2179  0EA9                     	;# 
  2180  0EAA                     	;# 
  2181  0EAB                     	;# 
  2182  0EAC                     	;# 
  2183  0EB1                     	;# 
  2184  0EB2                     	;# 
  2185  0EB3                     	;# 
  2186  0EB8                     	;# 
  2187  0EB9                     	;# 
  2188  0EBA                     	;# 
  2189  0EBB                     	;# 
  2190  0EBC                     	;# 
  2191  0EBD                     	;# 
  2192  0EBE                     	;# 
  2193  0EC3                     	;# 
  2194  0EC5                     	;# 
  2195  0EC6                     	;# 
  2196  0EC7                     	;# 
  2197  0EC8                     	;# 
  2198  0EC9                     	;# 
  2199  0ECA                     	;# 
  2200  0ECB                     	;# 
  2201  0ECC                     	;# 
  2202  0F10                     	;# 
  2203  0F11                     	;# 
  2204  0F12                     	;# 
  2205  0F13                     	;# 
  2206  0F14                     	;# 
  2207  0F15                     	;# 
  2208  0F16                     	;# 
  2209  0F17                     	;# 
  2210  0F18                     	;# 
  2211  0F19                     	;# 
  2212  0F1A                     	;# 
  2213  0F1B                     	;# 
  2214  0F1C                     	;# 
  2215  0F1D                     	;# 
  2216  0F1E                     	;# 
  2217  0F1F                     	;# 
  2218  0F20                     	;# 
  2219  0F21                     	;# 
  2220  0F22                     	;# 
  2221  0F23                     	;# 
  2222  0F24                     	;# 
  2223  0F25                     	;# 
  2224  0F26                     	;# 
  2225  0F27                     	;# 
  2226  0F28                     	;# 
  2227  0F29                     	;# 
  2228  0F2A                     	;# 
  2229  0F2B                     	;# 
  2230  0F2C                     	;# 
  2231  0F2D                     	;# 
  2232  0F2E                     	;# 
  2233  0F2F                     	;# 
  2234  0F30                     	;# 
  2235  0F31                     	;# 
  2236  0F32                     	;# 
  2237  0F38                     	;# 
  2238  0F39                     	;# 
  2239  0F3A                     	;# 
  2240  0F3B                     	;# 
  2241  0F3C                     	;# 
  2242  0F3D                     	;# 
  2243  0F3E                     	;# 
  2244  0F3F                     	;# 
  2245  0F40                     	;# 
  2246  0F41                     	;# 
  2247  0F43                     	;# 
  2248  0F44                     	;# 
  2249  0F45                     	;# 
  2250  0F46                     	;# 
  2251  0F47                     	;# 
  2252  0F48                     	;# 
  2253  0F49                     	;# 
  2254  0F4A                     	;# 
  2255  0F4B                     	;# 
  2256  0F4C                     	;# 
  2257  0F4E                     	;# 
  2258  0F4F                     	;# 
  2259  0F50                     	;# 
  2260  0F51                     	;# 
  2261  0F52                     	;# 
  2262  0F53                     	;# 
  2263  0F54                     	;# 
  2264  0F55                     	;# 
  2265  0F56                     	;# 
  2266  0F57                     	;# 
  2267  0F59                     	;# 
  2268  0F5A                     	;# 
  2269  0F5B                     	;# 
  2270  0F5C                     	;# 
  2271  0F5D                     	;# 
  2272  0F61                     	;# 
  2273  0F62                     	;# 
  2274  0F64                     	;# 
  2275  0F65                     	;# 
  2276  0F66                     	;# 
  2277  0F67                     	;# 
  2278  0F68                     	;# 
  2279  0F69                     	;# 
  2280  0F6A                     	;# 
  2281  0F6B                     	;# 
  2282  0F6C                     	;# 
  2283  0F6D                     	;# 
  2284  0FE4                     	;# 
  2285  0FE5                     	;# 
  2286  0FE6                     	;# 
  2287  0FE7                     	;# 
  2288  0FE8                     	;# 
  2289  0FE9                     	;# 
  2290  0FEA                     	;# 
  2291  0FEB                     	;# 
  2292  0FED                     	;# 
  2293  0FEE                     	;# 
  2294  0FEF                     	;# 
  2295  0000                     	;# 
  2296  0001                     	;# 
  2297  0002                     	;# 
  2298  0003                     	;# 
  2299  0004                     	;# 
  2300  0005                     	;# 
  2301  0006                     	;# 
  2302  0007                     	;# 
  2303  0008                     	;# 
  2304  0009                     	;# 
  2305  000A                     	;# 
  2306  000B                     	;# 
  2307  000C                     	;# 
  2308  000D                     	;# 
  2309  000E                     	;# 
  2310  000F                     	;# 
  2311  0010                     	;# 
  2312  0011                     	;# 
  2313  0012                     	;# 
  2314  0013                     	;# 
  2315  0014                     	;# 
  2316  0015                     	;# 
  2317  0016                     	;# 
  2318  0017                     	;# 
  2319  0018                     	;# 
  2320  0019                     	;# 
  2321  001A                     	;# 
  2322  001C                     	;# 
  2323  001C                     	;# 
  2324  001D                     	;# 
  2325  001D                     	;# 
  2326  001E                     	;# 
  2327  001F                     	;# 
  2328  008C                     	;# 
  2329  008C                     	;# 
  2330  008D                     	;# 
  2331  008E                     	;# 
  2332  008E                     	;# 
  2333  008F                     	;# 
  2334  0090                     	;# 
  2335  0090                     	;# 
  2336  0091                     	;# 
  2337  0093                     	;# 
  2338  0094                     	;# 
  2339  0095                     	;# 
  2340  0096                     	;# 
  2341  0097                     	;# 
  2342  0098                     	;# 
  2343  0099                     	;# 
  2344  009A                     	;# 
  2345  009B                     	;# 
  2346  009C                     	;# 
  2347  009D                     	;# 
  2348  009E                     	;# 
  2349  010C                     	;# 
  2350  010D                     	;# 
  2351  010E                     	;# 
  2352  010E                     	;# 
  2353  010F                     	;# 
  2354  0110                     	;# 
  2355  0110                     	;# 
  2356  0111                     	;# 
  2357  0112                     	;# 
  2358  0112                     	;# 
  2359  0113                     	;# 
  2360  0114                     	;# 
  2361  0114                     	;# 
  2362  0115                     	;# 
  2363  0116                     	;# 
  2364  0116                     	;# 
  2365  0117                     	;# 
  2366  0119                     	;# 
  2367  0119                     	;# 
  2368  0119                     	;# 
  2369  011A                     	;# 
  2370  011A                     	;# 
  2371  011A                     	;# 
  2372  011B                     	;# 
  2373  011B                     	;# 
  2374  011B                     	;# 
  2375  011B                     	;# 
  2376  011B                     	;# 
  2377  011C                     	;# 
  2378  011C                     	;# 
  2379  011C                     	;# 
  2380  011D                     	;# 
  2381  011D                     	;# 
  2382  011D                     	;# 
  2383  011E                     	;# 
  2384  011E                     	;# 
  2385  011E                     	;# 
  2386  011F                     	;# 
  2387  011F                     	;# 
  2388  011F                     	;# 
  2389  011F                     	;# 
  2390  011F                     	;# 
  2391  018C                     	;# 
  2392  018D                     	;# 
  2393  018E                     	;# 
  2394  018F                     	;# 
  2395  0190                     	;# 
  2396  0191                     	;# 
  2397  0192                     	;# 
  2398  0196                     	;# 
  2399  0197                     	;# 
  2400  0198                     	;# 
  2401  0199                     	;# 
  2402  019A                     	;# 
  2403  019B                     	;# 
  2404  019C                     	;# 
  2405  020C                     	;# 
  2406  020C                     	;# 
  2407  020D                     	;# 
  2408  020E                     	;# 
  2409  020F                     	;# 
  2410  020F                     	;# 
  2411  0210                     	;# 
  2412  0210                     	;# 
  2413  0211                     	;# 
  2414  0211                     	;# 
  2415  0212                     	;# 
  2416  0212                     	;# 
  2417  0213                     	;# 
  2418  0214                     	;# 
  2419  0215                     	;# 
  2420  0215                     	;# 
  2421  0216                     	;# 
  2422  0216                     	;# 
  2423  0217                     	;# 
  2424  0217                     	;# 
  2425  0218                     	;# 
  2426  0218                     	;# 
  2427  0219                     	;# 
  2428  021A                     	;# 
  2429  021B                     	;# 
  2430  021B                     	;# 
  2431  021C                     	;# 
  2432  021C                     	;# 
  2433  021D                     	;# 
  2434  021D                     	;# 
  2435  021E                     	;# 
  2436  021F                     	;# 
  2437  028C                     	;# 
  2438  028C                     	;# 
  2439  028D                     	;# 
  2440  028D                     	;# 
  2441  028E                     	;# 
  2442  028F                     	;# 
  2443  0290                     	;# 
  2444  0290                     	;# 
  2445  0291                     	;# 
  2446  0292                     	;# 
  2447  0292                     	;# 
  2448  0293                     	;# 
  2449  0293                     	;# 
  2450  0294                     	;# 
  2451  0295                     	;# 
  2452  0296                     	;# 
  2453  0296                     	;# 
  2454  0297                     	;# 
  2455  0298                     	;# 
  2456  0298                     	;# 
  2457  0299                     	;# 
  2458  0299                     	;# 
  2459  029A                     	;# 
  2460  029B                     	;# 
  2461  029C                     	;# 
  2462  029C                     	;# 
  2463  029D                     	;# 
  2464  030C                     	;# 
  2465  030C                     	;# 
  2466  030D                     	;# 
  2467  030E                     	;# 
  2468  030F                     	;# 
  2469  0310                     	;# 
  2470  0310                     	;# 
  2471  0311                     	;# 
  2472  0312                     	;# 
  2473  0313                     	;# 
  2474  0314                     	;# 
  2475  0314                     	;# 
  2476  0315                     	;# 
  2477  0316                     	;# 
  2478  0317                     	;# 
  2479  0318                     	;# 
  2480  0318                     	;# 
  2481  0319                     	;# 
  2482  031A                     	;# 
  2483  031B                     	;# 
  2484  031C                     	;# 
  2485  031C                     	;# 
  2486  031D                     	;# 
  2487  031E                     	;# 
  2488  031F                     	;# 
  2489  038C                     	;# 
  2490  038C                     	;# 
  2491  038D                     	;# 
  2492  038E                     	;# 
  2493  0390                     	;# 
  2494  0390                     	;# 
  2495  0391                     	;# 
  2496  0392                     	;# 
  2497  040C                     	;# 
  2498  040D                     	;# 
  2499  040E                     	;# 
  2500  040F                     	;# 
  2501  0410                     	;# 
  2502  0411                     	;# 
  2503  0416                     	;# 
  2504  0416                     	;# 
  2505  0417                     	;# 
  2506  0418                     	;# 
  2507  0418                     	;# 
  2508  0419                     	;# 
  2509  041A                     	;# 
  2510  041A                     	;# 
  2511  041B                     	;# 
  2512  041C                     	;# 
  2513  041C                     	;# 
  2514  041D                     	;# 
  2515  041E                     	;# 
  2516  041F                     	;# 
  2517  048C                     	;# 
  2518  048C                     	;# 
  2519  048D                     	;# 
  2520  048E                     	;# 
  2521  048F                     	;# 
  2522  048F                     	;# 
  2523  0490                     	;# 
  2524  0491                     	;# 
  2525  0492                     	;# 
  2526  0492                     	;# 
  2527  0493                     	;# 
  2528  0494                     	;# 
  2529  0495                     	;# 
  2530  0495                     	;# 
  2531  0496                     	;# 
  2532  0497                     	;# 
  2533  0498                     	;# 
  2534  0499                     	;# 
  2535  049A                     	;# 
  2536  049B                     	;# 
  2537  049C                     	;# 
  2538  049D                     	;# 
  2539  050C                     	;# 
  2540  050C                     	;# 
  2541  050D                     	;# 
  2542  050E                     	;# 
  2543  050F                     	;# 
  2544  050F                     	;# 
  2545  0510                     	;# 
  2546  0511                     	;# 
  2547  0512                     	;# 
  2548  0512                     	;# 
  2549  0513                     	;# 
  2550  0514                     	;# 
  2551  0515                     	;# 
  2552  0515                     	;# 
  2553  0516                     	;# 
  2554  0517                     	;# 
  2555  0518                     	;# 
  2556  0519                     	;# 
  2557  051A                     	;# 
  2558  051B                     	;# 
  2559  051C                     	;# 
  2560  051D                     	;# 
  2561  058C                     	;# 
  2562  058C                     	;# 
  2563  058D                     	;# 
  2564  058E                     	;# 
  2565  058F                     	;# 
  2566  058F                     	;# 
  2567  0590                     	;# 
  2568  0591                     	;# 
  2569  0592                     	;# 
  2570  0593                     	;# 
  2571  060C                     	;# 
  2572  060D                     	;# 
  2573  060E                     	;# 
  2574  060F                     	;# 
  2575  0610                     	;# 
  2576  0611                     	;# 
  2577  0612                     	;# 
  2578  0613                     	;# 
  2579  0614                     	;# 
  2580  0616                     	;# 
  2581  0617                     	;# 
  2582  0618                     	;# 
  2583  0619                     	;# 
  2584  061A                     	;# 
  2585  061B                     	;# 
  2586  061C                     	;# 
  2587  061D                     	;# 
  2588  061E                     	;# 
  2589  068C                     	;# 
  2590  068D                     	;# 
  2591  068E                     	;# 
  2592  068F                     	;# 
  2593  0690                     	;# 
  2594  0691                     	;# 
  2595  0692                     	;# 
  2596  0693                     	;# 
  2597  0694                     	;# 
  2598  070C                     	;# 
  2599  070D                     	;# 
  2600  070E                     	;# 
  2601  070F                     	;# 
  2602  0710                     	;# 
  2603  0711                     	;# 
  2604  0712                     	;# 
  2605  0713                     	;# 
  2606  0714                     	;# 
  2607  0716                     	;# 
  2608  0717                     	;# 
  2609  0718                     	;# 
  2610  0719                     	;# 
  2611  071A                     	;# 
  2612  071B                     	;# 
  2613  071C                     	;# 
  2614  071D                     	;# 
  2615  071E                     	;# 
  2616  0796                     	;# 
  2617  0797                     	;# 
  2618  0798                     	;# 
  2619  0799                     	;# 
  2620  079A                     	;# 
  2621  079B                     	;# 
  2622  080C                     	;# 
  2623  080D                     	;# 
  2624  080E                     	;# 
  2625  080F                     	;# 
  2626  0810                     	;# 
  2627  0811                     	;# 
  2628  0812                     	;# 
  2629  0813                     	;# 
  2630  0814                     	;# 
  2631  081A                     	;# 
  2632  081B                     	;# 
  2633  081C                     	;# 
  2634  081D                     	;# 
  2635  081E                     	;# 
  2636  081F                     	;# 
  2637  088C                     	;# 
  2638  088D                     	;# 
  2639  088E                     	;# 
  2640  088F                     	;# 
  2641  0890                     	;# 
  2642  0891                     	;# 
  2643  0892                     	;# 
  2644  0893                     	;# 
  2645  0895                     	;# 
  2646  0896                     	;# 
  2647  0897                     	;# 
  2648  0898                     	;# 
  2649  0899                     	;# 
  2650  089A                     	;# 
  2651  089B                     	;# 
  2652  090C                     	;# 
  2653  090E                     	;# 
  2654  090F                     	;# 
  2655  091F                     	;# 
  2656  091F                     	;# 
  2657  098F                     	;# 
  2658  098F                     	;# 
  2659  0990                     	;# 
  2660  0991                     	;# 
  2661  0992                     	;# 
  2662  0993                     	;# 
  2663  0994                     	;# 
  2664  0995                     	;# 
  2665  0996                     	;# 
  2666  0997                     	;# 
  2667  0E0F                     	;# 
  2668  0E10                     	;# 
  2669  0E11                     	;# 
  2670  0E12                     	;# 
  2671  0E13                     	;# 
  2672  0E14                     	;# 
  2673  0E15                     	;# 
  2674  0E16                     	;# 
  2675  0E17                     	;# 
  2676  0E18                     	;# 
  2677  0E19                     	;# 
  2678  0E1A                     	;# 
  2679  0E1B                     	;# 
  2680  0E1C                     	;# 
  2681  0E1D                     	;# 
  2682  0E1E                     	;# 
  2683  0E1F                     	;# 
  2684  0E20                     	;# 
  2685  0E21                     	;# 
  2686  0E22                     	;# 
  2687  0E23                     	;# 
  2688  0E24                     	;# 
  2689  0E25                     	;# 
  2690  0E26                     	;# 
  2691  0E27                     	;# 
  2692  0E28                     	;# 
  2693  0E29                     	;# 
  2694  0E2A                     	;# 
  2695  0E2B                     	;# 
  2696  0E2C                     	;# 
  2697  0E2D                     	;# 
  2698  0E2E                     	;# 
  2699  0E2F                     	;# 
  2700  0E30                     	;# 
  2701  0E31                     	;# 
  2702  0E32                     	;# 
  2703  0E33                     	;# 
  2704  0E34                     	;# 
  2705  0E35                     	;# 
  2706  0E36                     	;# 
  2707  0E37                     	;# 
  2708  0E8F                     	;# 
  2709  0E90                     	;# 
  2710  0E91                     	;# 
  2711  0E92                     	;# 
  2712  0E93                     	;# 
  2713  0E94                     	;# 
  2714  0E95                     	;# 
  2715  0E96                     	;# 
  2716  0E97                     	;# 
  2717  0E9C                     	;# 
  2718  0E9D                     	;# 
  2719  0E9E                     	;# 
  2720  0EA1                     	;# 
  2721  0EA2                     	;# 
  2722  0EA3                     	;# 
  2723  0EA4                     	;# 
  2724  0EA5                     	;# 
  2725  0EA9                     	;# 
  2726  0EAA                     	;# 
  2727  0EAB                     	;# 
  2728  0EAC                     	;# 
  2729  0EB1                     	;# 
  2730  0EB2                     	;# 
  2731  0EB3                     	;# 
  2732  0EB8                     	;# 
  2733  0EB9                     	;# 
  2734  0EBA                     	;# 
  2735  0EBB                     	;# 
  2736  0EBC                     	;# 
  2737  0EBD                     	;# 
  2738  0EBE                     	;# 
  2739  0EC3                     	;# 
  2740  0EC5                     	;# 
  2741  0EC6                     	;# 
  2742  0EC7                     	;# 
  2743  0EC8                     	;# 
  2744  0EC9                     	;# 
  2745  0ECA                     	;# 
  2746  0ECB                     	;# 
  2747  0ECC                     	;# 
  2748  0F10                     	;# 
  2749  0F11                     	;# 
  2750  0F12                     	;# 
  2751  0F13                     	;# 
  2752  0F14                     	;# 
  2753  0F15                     	;# 
  2754  0F16                     	;# 
  2755  0F17                     	;# 
  2756  0F18                     	;# 
  2757  0F19                     	;# 
  2758  0F1A                     	;# 
  2759  0F1B                     	;# 
  2760  0F1C                     	;# 
  2761  0F1D                     	;# 
  2762  0F1E                     	;# 
  2763  0F1F                     	;# 
  2764  0F20                     	;# 
  2765  0F21                     	;# 
  2766  0F22                     	;# 
  2767  0F23                     	;# 
  2768  0F24                     	;# 
  2769  0F25                     	;# 
  2770  0F26                     	;# 
  2771  0F27                     	;# 
  2772  0F28                     	;# 
  2773  0F29                     	;# 
  2774  0F2A                     	;# 
  2775  0F2B                     	;# 
  2776  0F2C                     	;# 
  2777  0F2D                     	;# 
  2778  0F2E                     	;# 
  2779  0F2F                     	;# 
  2780  0F30                     	;# 
  2781  0F31                     	;# 
  2782  0F32                     	;# 
  2783  0F38                     	;# 
  2784  0F39                     	;# 
  2785  0F3A                     	;# 
  2786  0F3B                     	;# 
  2787  0F3C                     	;# 
  2788  0F3D                     	;# 
  2789  0F3E                     	;# 
  2790  0F3F                     	;# 
  2791  0F40                     	;# 
  2792  0F41                     	;# 
  2793  0F43                     	;# 
  2794  0F44                     	;# 
  2795  0F45                     	;# 
  2796  0F46                     	;# 
  2797  0F47                     	;# 
  2798  0F48                     	;# 
  2799  0F49                     	;# 
  2800  0F4A                     	;# 
  2801  0F4B                     	;# 
  2802  0F4C                     	;# 
  2803  0F4E                     	;# 
  2804  0F4F                     	;# 
  2805  0F50                     	;# 
  2806  0F51                     	;# 
  2807  0F52                     	;# 
  2808  0F53                     	;# 
  2809  0F54                     	;# 
  2810  0F55                     	;# 
  2811  0F56                     	;# 
  2812  0F57                     	;# 
  2813  0F59                     	;# 
  2814  0F5A                     	;# 
  2815  0F5B                     	;# 
  2816  0F5C                     	;# 
  2817  0F5D                     	;# 
  2818  0F61                     	;# 
  2819  0F62                     	;# 
  2820  0F64                     	;# 
  2821  0F65                     	;# 
  2822  0F66                     	;# 
  2823  0F67                     	;# 
  2824  0F68                     	;# 
  2825  0F69                     	;# 
  2826  0F6A                     	;# 
  2827  0F6B                     	;# 
  2828  0F6C                     	;# 
  2829  0F6D                     	;# 
  2830  0FE4                     	;# 
  2831  0FE5                     	;# 
  2832  0FE6                     	;# 
  2833  0FE7                     	;# 
  2834  0FE8                     	;# 
  2835  0FE9                     	;# 
  2836  0FEA                     	;# 
  2837  0FEB                     	;# 
  2838  0FED                     	;# 
  2839  0FEE                     	;# 
  2840  0FEF                     	;# 
  2841  0000                     	;# 
  2842  0001                     	;# 
  2843  0002                     	;# 
  2844  0003                     	;# 
  2845  0004                     	;# 
  2846  0005                     	;# 
  2847  0006                     	;# 
  2848  0007                     	;# 
  2849  0008                     	;# 
  2850  0009                     	;# 
  2851  000A                     	;# 
  2852  000B                     	;# 
  2853  000C                     	;# 
  2854  000D                     	;# 
  2855  000E                     	;# 
  2856  000F                     	;# 
  2857  0010                     	;# 
  2858  0011                     	;# 
  2859  0012                     	;# 
  2860  0013                     	;# 
  2861  0014                     	;# 
  2862  0015                     	;# 
  2863  0016                     	;# 
  2864  0017                     	;# 
  2865  0018                     	;# 
  2866  0019                     	;# 
  2867  001A                     	;# 
  2868  001C                     	;# 
  2869  001C                     	;# 
  2870  001D                     	;# 
  2871  001D                     	;# 
  2872  001E                     	;# 
  2873  001F                     	;# 
  2874  008C                     	;# 
  2875  008C                     	;# 
  2876  008D                     	;# 
  2877  008E                     	;# 
  2878  008E                     	;# 
  2879  008F                     	;# 
  2880  0090                     	;# 
  2881  0090                     	;# 
  2882  0091                     	;# 
  2883  0093                     	;# 
  2884  0094                     	;# 
  2885  0095                     	;# 
  2886  0096                     	;# 
  2887  0097                     	;# 
  2888  0098                     	;# 
  2889  0099                     	;# 
  2890  009A                     	;# 
  2891  009B                     	;# 
  2892  009C                     	;# 
  2893  009D                     	;# 
  2894  009E                     	;# 
  2895  010C                     	;# 
  2896  010D                     	;# 
  2897  010E                     	;# 
  2898  010E                     	;# 
  2899  010F                     	;# 
  2900  0110                     	;# 
  2901  0110                     	;# 
  2902  0111                     	;# 
  2903  0112                     	;# 
  2904  0112                     	;# 
  2905  0113                     	;# 
  2906  0114                     	;# 
  2907  0114                     	;# 
  2908  0115                     	;# 
  2909  0116                     	;# 
  2910  0116                     	;# 
  2911  0117                     	;# 
  2912  0119                     	;# 
  2913  0119                     	;# 
  2914  0119                     	;# 
  2915  011A                     	;# 
  2916  011A                     	;# 
  2917  011A                     	;# 
  2918  011B                     	;# 
  2919  011B                     	;# 
  2920  011B                     	;# 
  2921  011B                     	;# 
  2922  011B                     	;# 
  2923  011C                     	;# 
  2924  011C                     	;# 
  2925  011C                     	;# 
  2926  011D                     	;# 
  2927  011D                     	;# 
  2928  011D                     	;# 
  2929  011E                     	;# 
  2930  011E                     	;# 
  2931  011E                     	;# 
  2932  011F                     	;# 
  2933  011F                     	;# 
  2934  011F                     	;# 
  2935  011F                     	;# 
  2936  011F                     	;# 
  2937  018C                     	;# 
  2938  018D                     	;# 
  2939  018E                     	;# 
  2940  018F                     	;# 
  2941  0190                     	;# 
  2942  0191                     	;# 
  2943  0192                     	;# 
  2944  0196                     	;# 
  2945  0197                     	;# 
  2946  0198                     	;# 
  2947  0199                     	;# 
  2948  019A                     	;# 
  2949  019B                     	;# 
  2950  019C                     	;# 
  2951  020C                     	;# 
  2952  020C                     	;# 
  2953  020D                     	;# 
  2954  020E                     	;# 
  2955  020F                     	;# 
  2956  020F                     	;# 
  2957  0210                     	;# 
  2958  0210                     	;# 
  2959  0211                     	;# 
  2960  0211                     	;# 
  2961  0212                     	;# 
  2962  0212                     	;# 
  2963  0213                     	;# 
  2964  0214                     	;# 
  2965  0215                     	;# 
  2966  0215                     	;# 
  2967  0216                     	;# 
  2968  0216                     	;# 
  2969  0217                     	;# 
  2970  0217                     	;# 
  2971  0218                     	;# 
  2972  0218                     	;# 
  2973  0219                     	;# 
  2974  021A                     	;# 
  2975  021B                     	;# 
  2976  021B                     	;# 
  2977  021C                     	;# 
  2978  021C                     	;# 
  2979  021D                     	;# 
  2980  021D                     	;# 
  2981  021E                     	;# 
  2982  021F                     	;# 
  2983  028C                     	;# 
  2984  028C                     	;# 
  2985  028D                     	;# 
  2986  028D                     	;# 
  2987  028E                     	;# 
  2988  028F                     	;# 
  2989  0290                     	;# 
  2990  0290                     	;# 
  2991  0291                     	;# 
  2992  0292                     	;# 
  2993  0292                     	;# 
  2994  0293                     	;# 
  2995  0293                     	;# 
  2996  0294                     	;# 
  2997  0295                     	;# 
  2998  0296                     	;# 
  2999  0296                     	;# 
  3000  0297                     	;# 
  3001  0298                     	;# 
  3002  0298                     	;# 
  3003  0299                     	;# 
  3004  0299                     	;# 
  3005  029A                     	;# 
  3006  029B                     	;# 
  3007  029C                     	;# 
  3008  029C                     	;# 
  3009  029D                     	;# 
  3010  030C                     	;# 
  3011  030C                     	;# 
  3012  030D                     	;# 
  3013  030E                     	;# 
  3014  030F                     	;# 
  3015  0310                     	;# 
  3016  0310                     	;# 
  3017  0311                     	;# 
  3018  0312                     	;# 
  3019  0313                     	;# 
  3020  0314                     	;# 
  3021  0314                     	;# 
  3022  0315                     	;# 
  3023  0316                     	;# 
  3024  0317                     	;# 
  3025  0318                     	;# 
  3026  0318                     	;# 
  3027  0319                     	;# 
  3028  031A                     	;# 
  3029  031B                     	;# 
  3030  031C                     	;# 
  3031  031C                     	;# 
  3032  031D                     	;# 
  3033  031E                     	;# 
  3034  031F                     	;# 
  3035  038C                     	;# 
  3036  038C                     	;# 
  3037  038D                     	;# 
  3038  038E                     	;# 
  3039  0390                     	;# 
  3040  0390                     	;# 
  3041  0391                     	;# 
  3042  0392                     	;# 
  3043  040C                     	;# 
  3044  040D                     	;# 
  3045  040E                     	;# 
  3046  040F                     	;# 
  3047  0410                     	;# 
  3048  0411                     	;# 
  3049  0416                     	;# 
  3050  0416                     	;# 
  3051  0417                     	;# 
  3052  0418                     	;# 
  3053  0418                     	;# 
  3054  0419                     	;# 
  3055  041A                     	;# 
  3056  041A                     	;# 
  3057  041B                     	;# 
  3058  041C                     	;# 
  3059  041C                     	;# 
  3060  041D                     	;# 
  3061  041E                     	;# 
  3062  041F                     	;# 
  3063  048C                     	;# 
  3064  048C                     	;# 
  3065  048D                     	;# 
  3066  048E                     	;# 
  3067  048F                     	;# 
  3068  048F                     	;# 
  3069  0490                     	;# 
  3070  0491                     	;# 
  3071  0492                     	;# 
  3072  0492                     	;# 
  3073  0493                     	;# 
  3074  0494                     	;# 
  3075  0495                     	;# 
  3076  0495                     	;# 
  3077  0496                     	;# 
  3078  0497                     	;# 
  3079  0498                     	;# 
  3080  0499                     	;# 
  3081  049A                     	;# 
  3082  049B                     	;# 
  3083  049C                     	;# 
  3084  049D                     	;# 
  3085  050C                     	;# 
  3086  050C                     	;# 
  3087  050D                     	;# 
  3088  050E                     	;# 
  3089  050F                     	;# 
  3090  050F                     	;# 
  3091  0510                     	;# 
  3092  0511                     	;# 
  3093  0512                     	;# 
  3094  0512                     	;# 
  3095  0513                     	;# 
  3096  0514                     	;# 
  3097  0515                     	;# 
  3098  0515                     	;# 
  3099  0516                     	;# 
  3100  0517                     	;# 
  3101  0518                     	;# 
  3102  0519                     	;# 
  3103  051A                     	;# 
  3104  051B                     	;# 
  3105  051C                     	;# 
  3106  051D                     	;# 
  3107  058C                     	;# 
  3108  058C                     	;# 
  3109  058D                     	;# 
  3110  058E                     	;# 
  3111  058F                     	;# 
  3112  058F                     	;# 
  3113  0590                     	;# 
  3114  0591                     	;# 
  3115  0592                     	;# 
  3116  0593                     	;# 
  3117  060C                     	;# 
  3118  060D                     	;# 
  3119  060E                     	;# 
  3120  060F                     	;# 
  3121  0610                     	;# 
  3122  0611                     	;# 
  3123  0612                     	;# 
  3124  0613                     	;# 
  3125  0614                     	;# 
  3126  0616                     	;# 
  3127  0617                     	;# 
  3128  0618                     	;# 
  3129  0619                     	;# 
  3130  061A                     	;# 
  3131  061B                     	;# 
  3132  061C                     	;# 
  3133  061D                     	;# 
  3134  061E                     	;# 
  3135  068C                     	;# 
  3136  068D                     	;# 
  3137  068E                     	;# 
  3138  068F                     	;# 
  3139  0690                     	;# 
  3140  0691                     	;# 
  3141  0692                     	;# 
  3142  0693                     	;# 
  3143  0694                     	;# 
  3144  070C                     	;# 
  3145  070D                     	;# 
  3146  070E                     	;# 
  3147  070F                     	;# 
  3148  0710                     	;# 
  3149  0711                     	;# 
  3150  0712                     	;# 
  3151  0713                     	;# 
  3152  0714                     	;# 
  3153  0716                     	;# 
  3154  0717                     	;# 
  3155  0718                     	;# 
  3156  0719                     	;# 
  3157  071A                     	;# 
  3158  071B                     	;# 
  3159  071C                     	;# 
  3160  071D                     	;# 
  3161  071E                     	;# 
  3162  0796                     	;# 
  3163  0797                     	;# 
  3164  0798                     	;# 
  3165  0799                     	;# 
  3166  079A                     	;# 
  3167  079B                     	;# 
  3168  080C                     	;# 
  3169  080D                     	;# 
  3170  080E                     	;# 
  3171  080F                     	;# 
  3172  0810                     	;# 
  3173  0811                     	;# 
  3174  0812                     	;# 
  3175  0813                     	;# 
  3176  0814                     	;# 
  3177  081A                     	;# 
  3178  081B                     	;# 
  3179  081C                     	;# 
  3180  081D                     	;# 
  3181  081E                     	;# 
  3182  081F                     	;# 
  3183  088C                     	;# 
  3184  088D                     	;# 
  3185  088E                     	;# 
  3186  088F                     	;# 
  3187  0890                     	;# 
  3188  0891                     	;# 
  3189  0892                     	;# 
  3190  0893                     	;# 
  3191  0895                     	;# 
  3192  0896                     	;# 
  3193  0897                     	;# 
  3194  0898                     	;# 
  3195  0899                     	;# 
  3196  089A                     	;# 
  3197  089B                     	;# 
  3198  090C                     	;# 
  3199  090E                     	;# 
  3200  090F                     	;# 
  3201  091F                     	;# 
  3202  091F                     	;# 
  3203  098F                     	;# 
  3204  098F                     	;# 
  3205  0990                     	;# 
  3206  0991                     	;# 
  3207  0992                     	;# 
  3208  0993                     	;# 
  3209  0994                     	;# 
  3210  0995                     	;# 
  3211  0996                     	;# 
  3212  0997                     	;# 
  3213  0E0F                     	;# 
  3214  0E10                     	;# 
  3215  0E11                     	;# 
  3216  0E12                     	;# 
  3217  0E13                     	;# 
  3218  0E14                     	;# 
  3219  0E15                     	;# 
  3220  0E16                     	;# 
  3221  0E17                     	;# 
  3222  0E18                     	;# 
  3223  0E19                     	;# 
  3224  0E1A                     	;# 
  3225  0E1B                     	;# 
  3226  0E1C                     	;# 
  3227  0E1D                     	;# 
  3228  0E1E                     	;# 
  3229  0E1F                     	;# 
  3230  0E20                     	;# 
  3231  0E21                     	;# 
  3232  0E22                     	;# 
  3233  0E23                     	;# 
  3234  0E24                     	;# 
  3235  0E25                     	;# 
  3236  0E26                     	;# 
  3237  0E27                     	;# 
  3238  0E28                     	;# 
  3239  0E29                     	;# 
  3240  0E2A                     	;# 
  3241  0E2B                     	;# 
  3242  0E2C                     	;# 
  3243  0E2D                     	;# 
  3244  0E2E                     	;# 
  3245  0E2F                     	;# 
  3246  0E30                     	;# 
  3247  0E31                     	;# 
  3248  0E32                     	;# 
  3249  0E33                     	;# 
  3250  0E34                     	;# 
  3251  0E35                     	;# 
  3252  0E36                     	;# 
  3253  0E37                     	;# 
  3254  0E8F                     	;# 
  3255  0E90                     	;# 
  3256  0E91                     	;# 
  3257  0E92                     	;# 
  3258  0E93                     	;# 
  3259  0E94                     	;# 
  3260  0E95                     	;# 
  3261  0E96                     	;# 
  3262  0E97                     	;# 
  3263  0E9C                     	;# 
  3264  0E9D                     	;# 
  3265  0E9E                     	;# 
  3266  0EA1                     	;# 
  3267  0EA2                     	;# 
  3268  0EA3                     	;# 
  3269  0EA4                     	;# 
  3270  0EA5                     	;# 
  3271  0EA9                     	;# 
  3272  0EAA                     	;# 
  3273  0EAB                     	;# 
  3274  0EAC                     	;# 
  3275  0EB1                     	;# 
  3276  0EB2                     	;# 
  3277  0EB3                     	;# 
  3278  0EB8                     	;# 
  3279  0EB9                     	;# 
  3280  0EBA                     	;# 
  3281  0EBB                     	;# 
  3282  0EBC                     	;# 
  3283  0EBD                     	;# 
  3284  0EBE                     	;# 
  3285  0EC3                     	;# 
  3286  0EC5                     	;# 
  3287  0EC6                     	;# 
  3288  0EC7                     	;# 
  3289  0EC8                     	;# 
  3290  0EC9                     	;# 
  3291  0ECA                     	;# 
  3292  0ECB                     	;# 
  3293  0ECC                     	;# 
  3294  0F10                     	;# 
  3295  0F11                     	;# 
  3296  0F12                     	;# 
  3297  0F13                     	;# 
  3298  0F14                     	;# 
  3299  0F15                     	;# 
  3300  0F16                     	;# 
  3301  0F17                     	;# 
  3302  0F18                     	;# 
  3303  0F19                     	;# 
  3304  0F1A                     	;# 
  3305  0F1B                     	;# 
  3306  0F1C                     	;# 
  3307  0F1D                     	;# 
  3308  0F1E                     	;# 
  3309  0F1F                     	;# 
  3310  0F20                     	;# 
  3311  0F21                     	;# 
  3312  0F22                     	;# 
  3313  0F23                     	;# 
  3314  0F24                     	;# 
  3315  0F25                     	;# 
  3316  0F26                     	;# 
  3317  0F27                     	;# 
  3318  0F28                     	;# 
  3319  0F29                     	;# 
  3320  0F2A                     	;# 
  3321  0F2B                     	;# 
  3322  0F2C                     	;# 
  3323  0F2D                     	;# 
  3324  0F2E                     	;# 
  3325  0F2F                     	;# 
  3326  0F30                     	;# 
  3327  0F31                     	;# 
  3328  0F32                     	;# 
  3329  0F38                     	;# 
  3330  0F39                     	;# 
  3331  0F3A                     	;# 
  3332  0F3B                     	;# 
  3333  0F3C                     	;# 
  3334  0F3D                     	;# 
  3335  0F3E                     	;# 
  3336  0F3F                     	;# 
  3337  0F40                     	;# 
  3338  0F41                     	;# 
  3339  0F43                     	;# 
  3340  0F44                     	;# 
  3341  0F45                     	;# 
  3342  0F46                     	;# 
  3343  0F47                     	;# 
  3344  0F48                     	;# 
  3345  0F49                     	;# 
  3346  0F4A                     	;# 
  3347  0F4B                     	;# 
  3348  0F4C                     	;# 
  3349  0F4E                     	;# 
  3350  0F4F                     	;# 
  3351  0F50                     	;# 
  3352  0F51                     	;# 
  3353  0F52                     	;# 
  3354  0F53                     	;# 
  3355  0F54                     	;# 
  3356  0F55                     	;# 
  3357  0F56                     	;# 
  3358  0F57                     	;# 
  3359  0F59                     	;# 
  3360  0F5A                     	;# 
  3361  0F5B                     	;# 
  3362  0F5C                     	;# 
  3363  0F5D                     	;# 
  3364  0F61                     	;# 
  3365  0F62                     	;# 
  3366  0F64                     	;# 
  3367  0F65                     	;# 
  3368  0F66                     	;# 
  3369  0F67                     	;# 
  3370  0F68                     	;# 
  3371  0F69                     	;# 
  3372  0F6A                     	;# 
  3373  0F6B                     	;# 
  3374  0F6C                     	;# 
  3375  0F6D                     	;# 
  3376  0FE4                     	;# 
  3377  0FE5                     	;# 
  3378  0FE6                     	;# 
  3379  0FE7                     	;# 
  3380  0FE8                     	;# 
  3381  0FE9                     	;# 
  3382  0FEA                     	;# 
  3383  0FEB                     	;# 
  3384  0FED                     	;# 
  3385  0FEE                     	;# 
  3386  0FEF                     	;# 
  3387  0000                     	;# 
  3388  0001                     	;# 
  3389  0002                     	;# 
  3390  0003                     	;# 
  3391  0004                     	;# 
  3392  0005                     	;# 
  3393  0006                     	;# 
  3394  0007                     	;# 
  3395  0008                     	;# 
  3396  0009                     	;# 
  3397  000A                     	;# 
  3398  000B                     	;# 
  3399  000C                     	;# 
  3400  000D                     	;# 
  3401  000E                     	;# 
  3402  000F                     	;# 
  3403  0010                     	;# 
  3404  0011                     	;# 
  3405  0012                     	;# 
  3406  0013                     	;# 
  3407  0014                     	;# 
  3408  0015                     	;# 
  3409  0016                     	;# 
  3410  0017                     	;# 
  3411  0018                     	;# 
  3412  0019                     	;# 
  3413  001A                     	;# 
  3414  001C                     	;# 
  3415  001C                     	;# 
  3416  001D                     	;# 
  3417  001D                     	;# 
  3418  001E                     	;# 
  3419  001F                     	;# 
  3420  008C                     	;# 
  3421  008C                     	;# 
  3422  008D                     	;# 
  3423  008E                     	;# 
  3424  008E                     	;# 
  3425  008F                     	;# 
  3426  0090                     	;# 
  3427  0090                     	;# 
  3428  0091                     	;# 
  3429  0093                     	;# 
  3430  0094                     	;# 
  3431  0095                     	;# 
  3432  0096                     	;# 
  3433  0097                     	;# 
  3434  0098                     	;# 
  3435  0099                     	;# 
  3436  009A                     	;# 
  3437  009B                     	;# 
  3438  009C                     	;# 
  3439  009D                     	;# 
  3440  009E                     	;# 
  3441  010C                     	;# 
  3442  010D                     	;# 
  3443  010E                     	;# 
  3444  010E                     	;# 
  3445  010F                     	;# 
  3446  0110                     	;# 
  3447  0110                     	;# 
  3448  0111                     	;# 
  3449  0112                     	;# 
  3450  0112                     	;# 
  3451  0113                     	;# 
  3452  0114                     	;# 
  3453  0114                     	;# 
  3454  0115                     	;# 
  3455  0116                     	;# 
  3456  0116                     	;# 
  3457  0117                     	;# 
  3458  0119                     	;# 
  3459  0119                     	;# 
  3460  0119                     	;# 
  3461  011A                     	;# 
  3462  011A                     	;# 
  3463  011A                     	;# 
  3464  011B                     	;# 
  3465  011B                     	;# 
  3466  011B                     	;# 
  3467  011B                     	;# 
  3468  011B                     	;# 
  3469  011C                     	;# 
  3470  011C                     	;# 
  3471  011C                     	;# 
  3472  011D                     	;# 
  3473  011D                     	;# 
  3474  011D                     	;# 
  3475  011E                     	;# 
  3476  011E                     	;# 
  3477  011E                     	;# 
  3478  011F                     	;# 
  3479  011F                     	;# 
  3480  011F                     	;# 
  3481  011F                     	;# 
  3482  011F                     	;# 
  3483  018C                     	;# 
  3484  018D                     	;# 
  3485  018E                     	;# 
  3486  018F                     	;# 
  3487  0190                     	;# 
  3488  0191                     	;# 
  3489  0192                     	;# 
  3490  0196                     	;# 
  3491  0197                     	;# 
  3492  0198                     	;# 
  3493  0199                     	;# 
  3494  019A                     	;# 
  3495  019B                     	;# 
  3496  019C                     	;# 
  3497  020C                     	;# 
  3498  020C                     	;# 
  3499  020D                     	;# 
  3500  020E                     	;# 
  3501  020F                     	;# 
  3502  020F                     	;# 
  3503  0210                     	;# 
  3504  0210                     	;# 
  3505  0211                     	;# 
  3506  0211                     	;# 
  3507  0212                     	;# 
  3508  0212                     	;# 
  3509  0213                     	;# 
  3510  0214                     	;# 
  3511  0215                     	;# 
  3512  0215                     	;# 
  3513  0216                     	;# 
  3514  0216                     	;# 
  3515  0217                     	;# 
  3516  0217                     	;# 
  3517  0218                     	;# 
  3518  0218                     	;# 
  3519  0219                     	;# 
  3520  021A                     	;# 
  3521  021B                     	;# 
  3522  021B                     	;# 
  3523  021C                     	;# 
  3524  021C                     	;# 
  3525  021D                     	;# 
  3526  021D                     	;# 
  3527  021E                     	;# 
  3528  021F                     	;# 
  3529  028C                     	;# 
  3530  028C                     	;# 
  3531  028D                     	;# 
  3532  028D                     	;# 
  3533  028E                     	;# 
  3534  028F                     	;# 
  3535  0290                     	;# 
  3536  0290                     	;# 
  3537  0291                     	;# 
  3538  0292                     	;# 
  3539  0292                     	;# 
  3540  0293                     	;# 
  3541  0293                     	;# 
  3542  0294                     	;# 
  3543  0295                     	;# 
  3544  0296                     	;# 
  3545  0296                     	;# 
  3546  0297                     	;# 
  3547  0298                     	;# 
  3548  0298                     	;# 
  3549  0299                     	;# 
  3550  0299                     	;# 
  3551  029A                     	;# 
  3552  029B                     	;# 
  3553  029C                     	;# 
  3554  029C                     	;# 
  3555  029D                     	;# 
  3556  030C                     	;# 
  3557  030C                     	;# 
  3558  030D                     	;# 
  3559  030E                     	;# 
  3560  030F                     	;# 
  3561  0310                     	;# 
  3562  0310                     	;# 
  3563  0311                     	;# 
  3564  0312                     	;# 
  3565  0313                     	;# 
  3566  0314                     	;# 
  3567  0314                     	;# 
  3568  0315                     	;# 
  3569  0316                     	;# 
  3570  0317                     	;# 
  3571  0318                     	;# 
  3572  0318                     	;# 
  3573  0319                     	;# 
  3574  031A                     	;# 
  3575  031B                     	;# 
  3576  031C                     	;# 
  3577  031C                     	;# 
  3578  031D                     	;# 
  3579  031E                     	;# 
  3580  031F                     	;# 
  3581  038C                     	;# 
  3582  038C                     	;# 
  3583  038D                     	;# 
  3584  038E                     	;# 
  3585  0390                     	;# 
  3586  0390                     	;# 
  3587  0391                     	;# 
  3588  0392                     	;# 
  3589  040C                     	;# 
  3590  040D                     	;# 
  3591  040E                     	;# 
  3592  040F                     	;# 
  3593  0410                     	;# 
  3594  0411                     	;# 
  3595  0416                     	;# 
  3596  0416                     	;# 
  3597  0417                     	;# 
  3598  0418                     	;# 
  3599  0418                     	;# 
  3600  0419                     	;# 
  3601  041A                     	;# 
  3602  041A                     	;# 
  3603  041B                     	;# 
  3604  041C                     	;# 
  3605  041C                     	;# 
  3606  041D                     	;# 
  3607  041E                     	;# 
  3608  041F                     	;# 
  3609  048C                     	;# 
  3610  048C                     	;# 
  3611  048D                     	;# 
  3612  048E                     	;# 
  3613  048F                     	;# 
  3614  048F                     	;# 
  3615  0490                     	;# 
  3616  0491                     	;# 
  3617  0492                     	;# 
  3618  0492                     	;# 
  3619  0493                     	;# 
  3620  0494                     	;# 
  3621  0495                     	;# 
  3622  0495                     	;# 
  3623  0496                     	;# 
  3624  0497                     	;# 
  3625  0498                     	;# 
  3626  0499                     	;# 
  3627  049A                     	;# 
  3628  049B                     	;# 
  3629  049C                     	;# 
  3630  049D                     	;# 
  3631  050C                     	;# 
  3632  050C                     	;# 
  3633  050D                     	;# 
  3634  050E                     	;# 
  3635  050F                     	;# 
  3636  050F                     	;# 
  3637  0510                     	;# 
  3638  0511                     	;# 
  3639  0512                     	;# 
  3640  0512                     	;# 
  3641  0513                     	;# 
  3642  0514                     	;# 
  3643  0515                     	;# 
  3644  0515                     	;# 
  3645  0516                     	;# 
  3646  0517                     	;# 
  3647  0518                     	;# 
  3648  0519                     	;# 
  3649  051A                     	;# 
  3650  051B                     	;# 
  3651  051C                     	;# 
  3652  051D                     	;# 
  3653  058C                     	;# 
  3654  058C                     	;# 
  3655  058D                     	;# 
  3656  058E                     	;# 
  3657  058F                     	;# 
  3658  058F                     	;# 
  3659  0590                     	;# 
  3660  0591                     	;# 
  3661  0592                     	;# 
  3662  0593                     	;# 
  3663  060C                     	;# 
  3664  060D                     	;# 
  3665  060E                     	;# 
  3666  060F                     	;# 
  3667  0610                     	;# 
  3668  0611                     	;# 
  3669  0612                     	;# 
  3670  0613                     	;# 
  3671  0614                     	;# 
  3672  0616                     	;# 
  3673  0617                     	;# 
  3674  0618                     	;# 
  3675  0619                     	;# 
  3676  061A                     	;# 
  3677  061B                     	;# 
  3678  061C                     	;# 
  3679  061D                     	;# 
  3680  061E                     	;# 
  3681  068C                     	;# 
  3682  068D                     	;# 
  3683  068E                     	;# 
  3684  068F                     	;# 
  3685  0690                     	;# 
  3686  0691                     	;# 
  3687  0692                     	;# 
  3688  0693                     	;# 
  3689  0694                     	;# 
  3690  070C                     	;# 
  3691  070D                     	;# 
  3692  070E                     	;# 
  3693  070F                     	;# 
  3694  0710                     	;# 
  3695  0711                     	;# 
  3696  0712                     	;# 
  3697  0713                     	;# 
  3698  0714                     	;# 
  3699  0716                     	;# 
  3700  0717                     	;# 
  3701  0718                     	;# 
  3702  0719                     	;# 
  3703  071A                     	;# 
  3704  071B                     	;# 
  3705  071C                     	;# 
  3706  071D                     	;# 
  3707  071E                     	;# 
  3708  0796                     	;# 
  3709  0797                     	;# 
  3710  0798                     	;# 
  3711  0799                     	;# 
  3712  079A                     	;# 
  3713  079B                     	;# 
  3714  080C                     	;# 
  3715  080D                     	;# 
  3716  080E                     	;# 
  3717  080F                     	;# 
  3718  0810                     	;# 
  3719  0811                     	;# 
  3720  0812                     	;# 
  3721  0813                     	;# 
  3722  0814                     	;# 
  3723  081A                     	;# 
  3724  081B                     	;# 
  3725  081C                     	;# 
  3726  081D                     	;# 
  3727  081E                     	;# 
  3728  081F                     	;# 
  3729  088C                     	;# 
  3730  088D                     	;# 
  3731  088E                     	;# 
  3732  088F                     	;# 
  3733  0890                     	;# 
  3734  0891                     	;# 
  3735  0892                     	;# 
  3736  0893                     	;# 
  3737  0895                     	;# 
  3738  0896                     	;# 
  3739  0897                     	;# 
  3740  0898                     	;# 
  3741  0899                     	;# 
  3742  089A                     	;# 
  3743  089B                     	;# 
  3744  090C                     	;# 
  3745  090E                     	;# 
  3746  090F                     	;# 
  3747  091F                     	;# 
  3748  091F                     	;# 
  3749  098F                     	;# 
  3750  098F                     	;# 
  3751  0990                     	;# 
  3752  0991                     	;# 
  3753  0992                     	;# 
  3754  0993                     	;# 
  3755  0994                     	;# 
  3756  0995                     	;# 
  3757  0996                     	;# 
  3758  0997                     	;# 
  3759  0E0F                     	;# 
  3760  0E10                     	;# 
  3761  0E11                     	;# 
  3762  0E12                     	;# 
  3763  0E13                     	;# 
  3764  0E14                     	;# 
  3765  0E15                     	;# 
  3766  0E16                     	;# 
  3767  0E17                     	;# 
  3768  0E18                     	;# 
  3769  0E19                     	;# 
  3770  0E1A                     	;# 
  3771  0E1B                     	;# 
  3772  0E1C                     	;# 
  3773  0E1D                     	;# 
  3774  0E1E                     	;# 
  3775  0E1F                     	;# 
  3776  0E20                     	;# 
  3777  0E21                     	;# 
  3778  0E22                     	;# 
  3779  0E23                     	;# 
  3780  0E24                     	;# 
  3781  0E25                     	;# 
  3782  0E26                     	;# 
  3783  0E27                     	;# 
  3784  0E28                     	;# 
  3785  0E29                     	;# 
  3786  0E2A                     	;# 
  3787  0E2B                     	;# 
  3788  0E2C                     	;# 
  3789  0E2D                     	;# 
  3790  0E2E                     	;# 
  3791  0E2F                     	;# 
  3792  0E30                     	;# 
  3793  0E31                     	;# 
  3794  0E32                     	;# 
  3795  0E33                     	;# 
  3796  0E34                     	;# 
  3797  0E35                     	;# 
  3798  0E36                     	;# 
  3799  0E37                     	;# 
  3800  0E8F                     	;# 
  3801  0E90                     	;# 
  3802  0E91                     	;# 
  3803  0E92                     	;# 
  3804  0E93                     	;# 
  3805  0E94                     	;# 
  3806  0E95                     	;# 
  3807  0E96                     	;# 
  3808  0E97                     	;# 
  3809  0E9C                     	;# 
  3810  0E9D                     	;# 
  3811  0E9E                     	;# 
  3812  0EA1                     	;# 
  3813  0EA2                     	;# 
  3814  0EA3                     	;# 
  3815  0EA4                     	;# 
  3816  0EA5                     	;# 
  3817  0EA9                     	;# 
  3818  0EAA                     	;# 
  3819  0EAB                     	;# 
  3820  0EAC                     	;# 
  3821  0EB1                     	;# 
  3822  0EB2                     	;# 
  3823  0EB3                     	;# 
  3824  0EB8                     	;# 
  3825  0EB9                     	;# 
  3826  0EBA                     	;# 
  3827  0EBB                     	;# 
  3828  0EBC                     	;# 
  3829  0EBD                     	;# 
  3830  0EBE                     	;# 
  3831  0EC3                     	;# 
  3832  0EC5                     	;# 
  3833  0EC6                     	;# 
  3834  0EC7                     	;# 
  3835  0EC8                     	;# 
  3836  0EC9                     	;# 
  3837  0ECA                     	;# 
  3838  0ECB                     	;# 
  3839  0ECC                     	;# 
  3840  0F10                     	;# 
  3841  0F11                     	;# 
  3842  0F12                     	;# 
  3843  0F13                     	;# 
  3844  0F14                     	;# 
  3845  0F15                     	;# 
  3846  0F16                     	;# 
  3847  0F17                     	;# 
  3848  0F18                     	;# 
  3849  0F19                     	;# 
  3850  0F1A                     	;# 
  3851  0F1B                     	;# 
  3852  0F1C                     	;# 
  3853  0F1D                     	;# 
  3854  0F1E                     	;# 
  3855  0F1F                     	;# 
  3856  0F20                     	;# 
  3857  0F21                     	;# 
  3858  0F22                     	;# 
  3859  0F23                     	;# 
  3860  0F24                     	;# 
  3861  0F25                     	;# 
  3862  0F26                     	;# 
  3863  0F27                     	;# 
  3864  0F28                     	;# 
  3865  0F29                     	;# 
  3866  0F2A                     	;# 
  3867  0F2B                     	;# 
  3868  0F2C                     	;# 
  3869  0F2D                     	;# 
  3870  0F2E                     	;# 
  3871  0F2F                     	;# 
  3872  0F30                     	;# 
  3873  0F31                     	;# 
  3874  0F32                     	;# 
  3875  0F38                     	;# 
  3876  0F39                     	;# 
  3877  0F3A                     	;# 
  3878  0F3B                     	;# 
  3879  0F3C                     	;# 
  3880  0F3D                     	;# 
  3881  0F3E                     	;# 
  3882  0F3F                     	;# 
  3883  0F40                     	;# 
  3884  0F41                     	;# 
  3885  0F43                     	;# 
  3886  0F44                     	;# 
  3887  0F45                     	;# 
  3888  0F46                     	;# 
  3889  0F47                     	;# 
  3890  0F48                     	;# 
  3891  0F49                     	;# 
  3892  0F4A                     	;# 
  3893  0F4B                     	;# 
  3894  0F4C                     	;# 
  3895  0F4E                     	;# 
  3896  0F4F                     	;# 
  3897  0F50                     	;# 
  3898  0F51                     	;# 
  3899  0F52                     	;# 
  3900  0F53                     	;# 
  3901  0F54                     	;# 
  3902  0F55                     	;# 
  3903  0F56                     	;# 
  3904  0F57                     	;# 
  3905  0F59                     	;# 
  3906  0F5A                     	;# 
  3907  0F5B                     	;# 
  3908  0F5C                     	;# 
  3909  0F5D                     	;# 
  3910  0F61                     	;# 
  3911  0F62                     	;# 
  3912  0F64                     	;# 
  3913  0F65                     	;# 
  3914  0F66                     	;# 
  3915  0F67                     	;# 
  3916  0F68                     	;# 
  3917  0F69                     	;# 
  3918  0F6A                     	;# 
  3919  0F6B                     	;# 
  3920  0F6C                     	;# 
  3921  0F6D                     	;# 
  3922  0FE4                     	;# 
  3923  0FE5                     	;# 
  3924  0FE6                     	;# 
  3925  0FE7                     	;# 
  3926  0FE8                     	;# 
  3927  0FE9                     	;# 
  3928  0FEA                     	;# 
  3929  0FEB                     	;# 
  3930  0FED                     	;# 
  3931  0FEE                     	;# 
  3932  0FEF                     	;# 
  3933  0000                     	;# 
  3934  0001                     	;# 
  3935  0002                     	;# 
  3936  0003                     	;# 
  3937  0004                     	;# 
  3938  0005                     	;# 
  3939  0006                     	;# 
  3940  0007                     	;# 
  3941  0008                     	;# 
  3942  0009                     	;# 
  3943  000A                     	;# 
  3944  000B                     	;# 
  3945  000C                     	;# 
  3946  000D                     	;# 
  3947  000E                     	;# 
  3948  000F                     	;# 
  3949  0010                     	;# 
  3950  0011                     	;# 
  3951  0012                     	;# 
  3952  0013                     	;# 
  3953  0014                     	;# 
  3954  0015                     	;# 
  3955  0016                     	;# 
  3956  0017                     	;# 
  3957  0018                     	;# 
  3958  0019                     	;# 
  3959  001A                     	;# 
  3960  001C                     	;# 
  3961  001C                     	;# 
  3962  001D                     	;# 
  3963  001D                     	;# 
  3964  001E                     	;# 
  3965  001F                     	;# 
  3966  008C                     	;# 
  3967  008C                     	;# 
  3968  008D                     	;# 
  3969  008E                     	;# 
  3970  008E                     	;# 
  3971  008F                     	;# 
  3972  0090                     	;# 
  3973  0090                     	;# 
  3974  0091                     	;# 
  3975  0093                     	;# 
  3976  0094                     	;# 
  3977  0095                     	;# 
  3978  0096                     	;# 
  3979  0097                     	;# 
  3980  0098                     	;# 
  3981  0099                     	;# 
  3982  009A                     	;# 
  3983  009B                     	;# 
  3984  009C                     	;# 
  3985  009D                     	;# 
  3986  009E                     	;# 
  3987  010C                     	;# 
  3988  010D                     	;# 
  3989  010E                     	;# 
  3990  010E                     	;# 
  3991  010F                     	;# 
  3992  0110                     	;# 
  3993  0110                     	;# 
  3994  0111                     	;# 
  3995  0112                     	;# 
  3996  0112                     	;# 
  3997  0113                     	;# 
  3998  0114                     	;# 
  3999  0114                     	;# 
  4000  0115                     	;# 
  4001  0116                     	;# 
  4002  0116                     	;# 
  4003  0117                     	;# 
  4004  0119                     	;# 
  4005  0119                     	;# 
  4006  0119                     	;# 
  4007  011A                     	;# 
  4008  011A                     	;# 
  4009  011A                     	;# 
  4010  011B                     	;# 
  4011  011B                     	;# 
  4012  011B                     	;# 
  4013  011B                     	;# 
  4014  011B                     	;# 
  4015  011C                     	;# 
  4016  011C                     	;# 
  4017  011C                     	;# 
  4018  011D                     	;# 
  4019  011D                     	;# 
  4020  011D                     	;# 
  4021  011E                     	;# 
  4022  011E                     	;# 
  4023  011E                     	;# 
  4024  011F                     	;# 
  4025  011F                     	;# 
  4026  011F                     	;# 
  4027  011F                     	;# 
  4028  011F                     	;# 
  4029  018C                     	;# 
  4030  018D                     	;# 
  4031  018E                     	;# 
  4032  018F                     	;# 
  4033  0190                     	;# 
  4034  0191                     	;# 
  4035  0192                     	;# 
  4036  0196                     	;# 
  4037  0197                     	;# 
  4038  0198                     	;# 
  4039  0199                     	;# 
  4040  019A                     	;# 
  4041  019B                     	;# 
  4042  019C                     	;# 
  4043  020C                     	;# 
  4044  020C                     	;# 
  4045  020D                     	;# 
  4046  020E                     	;# 
  4047  020F                     	;# 
  4048  020F                     	;# 
  4049  0210                     	;# 
  4050  0210                     	;# 
  4051  0211                     	;# 
  4052  0211                     	;# 
  4053  0212                     	;# 
  4054  0212                     	;# 
  4055  0213                     	;# 
  4056  0214                     	;# 
  4057  0215                     	;# 
  4058  0215                     	;# 
  4059  0216                     	;# 
  4060  0216                     	;# 
  4061  0217                     	;# 
  4062  0217                     	;# 
  4063  0218                     	;# 
  4064  0218                     	;# 
  4065  0219                     	;# 
  4066  021A                     	;# 
  4067  021B                     	;# 
  4068  021B                     	;# 
  4069  021C                     	;# 
  4070  021C                     	;# 
  4071  021D                     	;# 
  4072  021D                     	;# 
  4073  021E                     	;# 
  4074  021F                     	;# 
  4075  028C                     	;# 
  4076  028C                     	;# 
  4077  028D                     	;# 
  4078  028D                     	;# 
  4079  028E                     	;# 
  4080  028F                     	;# 
  4081  0290                     	;# 
  4082  0290                     	;# 
  4083  0291                     	;# 
  4084  0292                     	;# 
  4085  0292                     	;# 
  4086  0293                     	;# 
  4087  0293                     	;# 
  4088  0294                     	;# 
  4089  0295                     	;# 
  4090  0296                     	;# 
  4091  0296                     	;# 
  4092  0297                     	;# 
  4093  0298                     	;# 
  4094  0298                     	;# 
  4095  0299                     	;# 
  4096  0299                     	;# 
  4097  029A                     	;# 
  4098  029B                     	;# 
  4099  029C                     	;# 
  4100  029C                     	;# 
  4101  029D                     	;# 
  4102  030C                     	;# 
  4103  030C                     	;# 
  4104  030D                     	;# 
  4105  030E                     	;# 
  4106  030F                     	;# 
  4107  0310                     	;# 
  4108  0310                     	;# 
  4109  0311                     	;# 
  4110  0312                     	;# 
  4111  0313                     	;# 
  4112  0314                     	;# 
  4113  0314                     	;# 
  4114  0315                     	;# 
  4115  0316                     	;# 
  4116  0317                     	;# 
  4117  0318                     	;# 
  4118  0318                     	;# 
  4119  0319                     	;# 
  4120  031A                     	;# 
  4121  031B                     	;# 
  4122  031C                     	;# 
  4123  031C                     	;# 
  4124  031D                     	;# 
  4125  031E                     	;# 
  4126  031F                     	;# 
  4127  038C                     	;# 
  4128  038C                     	;# 
  4129  038D                     	;# 
  4130  038E                     	;# 
  4131  0390                     	;# 
  4132  0390                     	;# 
  4133  0391                     	;# 
  4134  0392                     	;# 
  4135  040C                     	;# 
  4136  040D                     	;# 
  4137  040E                     	;# 
  4138  040F                     	;# 
  4139  0410                     	;# 
  4140  0411                     	;# 
  4141  0416                     	;# 
  4142  0416                     	;# 
  4143  0417                     	;# 
  4144  0418                     	;# 
  4145  0418                     	;# 
  4146  0419                     	;# 
  4147  041A                     	;# 
  4148  041A                     	;# 
  4149  041B                     	;# 
  4150  041C                     	;# 
  4151  041C                     	;# 
  4152  041D                     	;# 
  4153  041E                     	;# 
  4154  041F                     	;# 
  4155  048C                     	;# 
  4156  048C                     	;# 
  4157  048D                     	;# 
  4158  048E                     	;# 
  4159  048F                     	;# 
  4160  048F                     	;# 
  4161  0490                     	;# 
  4162  0491                     	;# 
  4163  0492                     	;# 
  4164  0492                     	;# 
  4165  0493                     	;# 
  4166  0494                     	;# 
  4167  0495                     	;# 
  4168  0495                     	;# 
  4169  0496                     	;# 
  4170  0497                     	;# 
  4171  0498                     	;# 
  4172  0499                     	;# 
  4173  049A                     	;# 
  4174  049B                     	;# 
  4175  049C                     	;# 
  4176  049D                     	;# 
  4177  050C                     	;# 
  4178  050C                     	;# 
  4179  050D                     	;# 
  4180  050E                     	;# 
  4181  050F                     	;# 
  4182  050F                     	;# 
  4183  0510                     	;# 
  4184  0511                     	;# 
  4185  0512                     	;# 
  4186  0512                     	;# 
  4187  0513                     	;# 
  4188  0514                     	;# 
  4189  0515                     	;# 
  4190  0515                     	;# 
  4191  0516                     	;# 
  4192  0517                     	;# 
  4193  0518                     	;# 
  4194  0519                     	;# 
  4195  051A                     	;# 
  4196  051B                     	;# 
  4197  051C                     	;# 
  4198  051D                     	;# 
  4199  058C                     	;# 
  4200  058C                     	;# 
  4201  058D                     	;# 
  4202  058E                     	;# 
  4203  058F                     	;# 
  4204  058F                     	;# 
  4205  0590                     	;# 
  4206  0591                     	;# 
  4207  0592                     	;# 
  4208  0593                     	;# 
  4209  060C                     	;# 
  4210  060D                     	;# 
  4211  060E                     	;# 
  4212  060F                     	;# 
  4213  0610                     	;# 
  4214  0611                     	;# 
  4215  0612                     	;# 
  4216  0613                     	;# 
  4217  0614                     	;# 
  4218  0616                     	;# 
  4219  0617                     	;# 
  4220  0618                     	;# 
  4221  0619                     	;# 
  4222  061A                     	;# 
  4223  061B                     	;# 
  4224  061C                     	;# 
  4225  061D                     	;# 
  4226  061E                     	;# 
  4227  068C                     	;# 
  4228  068D                     	;# 
  4229  068E                     	;# 
  4230  068F                     	;# 
  4231  0690                     	;# 
  4232  0691                     	;# 
  4233  0692                     	;# 
  4234  0693                     	;# 
  4235  0694                     	;# 
  4236  070C                     	;# 
  4237  070D                     	;# 
  4238  070E                     	;# 
  4239  070F                     	;# 
  4240  0710                     	;# 
  4241  0711                     	;# 
  4242  0712                     	;# 
  4243  0713                     	;# 
  4244  0714                     	;# 
  4245  0716                     	;# 
  4246  0717                     	;# 
  4247  0718                     	;# 
  4248  0719                     	;# 
  4249  071A                     	;# 
  4250  071B                     	;# 
  4251  071C                     	;# 
  4252  071D                     	;# 
  4253  071E                     	;# 
  4254  0796                     	;# 
  4255  0797                     	;# 
  4256  0798                     	;# 
  4257  0799                     	;# 
  4258  079A                     	;# 
  4259  079B                     	;# 
  4260  080C                     	;# 
  4261  080D                     	;# 
  4262  080E                     	;# 
  4263  080F                     	;# 
  4264  0810                     	;# 
  4265  0811                     	;# 
  4266  0812                     	;# 
  4267  0813                     	;# 
  4268  0814                     	;# 
  4269  081A                     	;# 
  4270  081B                     	;# 
  4271  081C                     	;# 
  4272  081D                     	;# 
  4273  081E                     	;# 
  4274  081F                     	;# 
  4275  088C                     	;# 
  4276  088D                     	;# 
  4277  088E                     	;# 
  4278  088F                     	;# 
  4279  0890                     	;# 
  4280  0891                     	;# 
  4281  0892                     	;# 
  4282  0893                     	;# 
  4283  0895                     	;# 
  4284  0896                     	;# 
  4285  0897                     	;# 
  4286  0898                     	;# 
  4287  0899                     	;# 
  4288  089A                     	;# 
  4289  089B                     	;# 
  4290  090C                     	;# 
  4291  090E                     	;# 
  4292  090F                     	;# 
  4293  091F                     	;# 
  4294  091F                     	;# 
  4295  098F                     	;# 
  4296  098F                     	;# 
  4297  0990                     	;# 
  4298  0991                     	;# 
  4299  0992                     	;# 
  4300  0993                     	;# 
  4301  0994                     	;# 
  4302  0995                     	;# 
  4303  0996                     	;# 
  4304  0997                     	;# 
  4305  0E0F                     	;# 
  4306  0E10                     	;# 
  4307  0E11                     	;# 
  4308  0E12                     	;# 
  4309  0E13                     	;# 
  4310  0E14                     	;# 
  4311  0E15                     	;# 
  4312  0E16                     	;# 
  4313  0E17                     	;# 
  4314  0E18                     	;# 
  4315  0E19                     	;# 
  4316  0E1A                     	;# 
  4317  0E1B                     	;# 
  4318  0E1C                     	;# 
  4319  0E1D                     	;# 
  4320  0E1E                     	;# 
  4321  0E1F                     	;# 
  4322  0E20                     	;# 
  4323  0E21                     	;# 
  4324  0E22                     	;# 
  4325  0E23                     	;# 
  4326  0E24                     	;# 
  4327  0E25                     	;# 
  4328  0E26                     	;# 
  4329  0E27                     	;# 
  4330  0E28                     	;# 
  4331  0E29                     	;# 
  4332  0E2A                     	;# 
  4333  0E2B                     	;# 
  4334  0E2C                     	;# 
  4335  0E2D                     	;# 
  4336  0E2E                     	;# 
  4337  0E2F                     	;# 
  4338  0E30                     	;# 
  4339  0E31                     	;# 
  4340  0E32                     	;# 
  4341  0E33                     	;# 
  4342  0E34                     	;# 
  4343  0E35                     	;# 
  4344  0E36                     	;# 
  4345  0E37                     	;# 
  4346  0E8F                     	;# 
  4347  0E90                     	;# 
  4348  0E91                     	;# 
  4349  0E92                     	;# 
  4350  0E93                     	;# 
  4351  0E94                     	;# 
  4352  0E95                     	;# 
  4353  0E96                     	;# 
  4354  0E97                     	;# 
  4355  0E9C                     	;# 
  4356  0E9D                     	;# 
  4357  0E9E                     	;# 
  4358  0EA1                     	;# 
  4359  0EA2                     	;# 
  4360  0EA3                     	;# 
  4361  0EA4                     	;# 
  4362  0EA5                     	;# 
  4363  0EA9                     	;# 
  4364  0EAA                     	;# 
  4365  0EAB                     	;# 
  4366  0EAC                     	;# 
  4367  0EB1                     	;# 
  4368  0EB2                     	;# 
  4369  0EB3                     	;# 
  4370  0EB8                     	;# 
  4371  0EB9                     	;# 
  4372  0EBA                     	;# 
  4373  0EBB                     	;# 
  4374  0EBC                     	;# 
  4375  0EBD                     	;# 
  4376  0EBE                     	;# 
  4377  0EC3                     	;# 
  4378  0EC5                     	;# 
  4379  0EC6                     	;# 
  4380  0EC7                     	;# 
  4381  0EC8                     	;# 
  4382  0EC9                     	;# 
  4383  0ECA                     	;# 
  4384  0ECB                     	;# 
  4385  0ECC                     	;# 
  4386  0F10                     	;# 
  4387  0F11                     	;# 
  4388  0F12                     	;# 
  4389  0F13                     	;# 
  4390  0F14                     	;# 
  4391  0F15                     	;# 
  4392  0F16                     	;# 
  4393  0F17                     	;# 
  4394  0F18                     	;# 
  4395  0F19                     	;# 
  4396  0F1A                     	;# 
  4397  0F1B                     	;# 
  4398  0F1C                     	;# 
  4399  0F1D                     	;# 
  4400  0F1E                     	;# 
  4401  0F1F                     	;# 
  4402  0F20                     	;# 
  4403  0F21                     	;# 
  4404  0F22                     	;# 
  4405  0F23                     	;# 
  4406  0F24                     	;# 
  4407  0F25                     	;# 
  4408  0F26                     	;# 
  4409  0F27                     	;# 
  4410  0F28                     	;# 
  4411  0F29                     	;# 
  4412  0F2A                     	;# 
  4413  0F2B                     	;# 
  4414  0F2C                     	;# 
  4415  0F2D                     	;# 
  4416  0F2E                     	;# 
  4417  0F2F                     	;# 
  4418  0F30                     	;# 
  4419  0F31                     	;# 
  4420  0F32                     	;# 
  4421  0F38                     	;# 
  4422  0F39                     	;# 
  4423  0F3A                     	;# 
  4424  0F3B                     	;# 
  4425  0F3C                     	;# 
  4426  0F3D                     	;# 
  4427  0F3E                     	;# 
  4428  0F3F                     	;# 
  4429  0F40                     	;# 
  4430  0F41                     	;# 
  4431  0F43                     	;# 
  4432  0F44                     	;# 
  4433  0F45                     	;# 
  4434  0F46                     	;# 
  4435  0F47                     	;# 
  4436  0F48                     	;# 
  4437  0F49                     	;# 
  4438  0F4A                     	;# 
  4439  0F4B                     	;# 
  4440  0F4C                     	;# 
  4441  0F4E                     	;# 
  4442  0F4F                     	;# 
  4443  0F50                     	;# 
  4444  0F51                     	;# 
  4445  0F52                     	;# 
  4446  0F53                     	;# 
  4447  0F54                     	;# 
  4448  0F55                     	;# 
  4449  0F56                     	;# 
  4450  0F57                     	;# 
  4451  0F59                     	;# 
  4452  0F5A                     	;# 
  4453  0F5B                     	;# 
  4454  0F5C                     	;# 
  4455  0F5D                     	;# 
  4456  0F61                     	;# 
  4457  0F62                     	;# 
  4458  0F64                     	;# 
  4459  0F65                     	;# 
  4460  0F66                     	;# 
  4461  0F67                     	;# 
  4462  0F68                     	;# 
  4463  0F69                     	;# 
  4464  0F6A                     	;# 
  4465  0F6B                     	;# 
  4466  0F6C                     	;# 
  4467  0F6D                     	;# 
  4468  0FE4                     	;# 
  4469  0FE5                     	;# 
  4470  0FE6                     	;# 
  4471  0FE7                     	;# 
  4472  0FE8                     	;# 
  4473  0FE9                     	;# 
  4474  0FEA                     	;# 
  4475  0FEB                     	;# 
  4476  0FED                     	;# 
  4477  0FEE                     	;# 
  4478  0FEF                     	;# 
  4479  0000                     	;# 
  4480  0001                     	;# 
  4481  0002                     	;# 
  4482  0003                     	;# 
  4483  0004                     	;# 
  4484  0005                     	;# 
  4485  0006                     	;# 
  4486  0007                     	;# 
  4487  0008                     	;# 
  4488  0009                     	;# 
  4489  000A                     	;# 
  4490  000B                     	;# 
  4491  000C                     	;# 
  4492  000D                     	;# 
  4493  000E                     	;# 
  4494  000F                     	;# 
  4495  0010                     	;# 
  4496  0011                     	;# 
  4497  0012                     	;# 
  4498  0013                     	;# 
  4499  0014                     	;# 
  4500  0015                     	;# 
  4501  0016                     	;# 
  4502  0017                     	;# 
  4503  0018                     	;# 
  4504  0019                     	;# 
  4505  001A                     	;# 
  4506  001C                     	;# 
  4507  001C                     	;# 
  4508  001D                     	;# 
  4509  001D                     	;# 
  4510  001E                     	;# 
  4511  001F                     	;# 
  4512  008C                     	;# 
  4513  008C                     	;# 
  4514  008D                     	;# 
  4515  008E                     	;# 
  4516  008E                     	;# 
  4517  008F                     	;# 
  4518  0090                     	;# 
  4519  0090                     	;# 
  4520  0091                     	;# 
  4521  0093                     	;# 
  4522  0094                     	;# 
  4523  0095                     	;# 
  4524  0096                     	;# 
  4525  0097                     	;# 
  4526  0098                     	;# 
  4527  0099                     	;# 
  4528  009A                     	;# 
  4529  009B                     	;# 
  4530  009C                     	;# 
  4531  009D                     	;# 
  4532  009E                     	;# 
  4533  010C                     	;# 
  4534  010D                     	;# 
  4535  010E                     	;# 
  4536  010E                     	;# 
  4537  010F                     	;# 
  4538  0110                     	;# 
  4539  0110                     	;# 
  4540  0111                     	;# 
  4541  0112                     	;# 
  4542  0112                     	;# 
  4543  0113                     	;# 
  4544  0114                     	;# 
  4545  0114                     	;# 
  4546  0115                     	;# 
  4547  0116                     	;# 
  4548  0116                     	;# 
  4549  0117                     	;# 
  4550  0119                     	;# 
  4551  0119                     	;# 
  4552  0119                     	;# 
  4553  011A                     	;# 
  4554  011A                     	;# 
  4555  011A                     	;# 
  4556  011B                     	;# 
  4557  011B                     	;# 
  4558  011B                     	;# 
  4559  011B                     	;# 
  4560  011B                     	;# 
  4561  011C                     	;# 
  4562  011C                     	;# 
  4563  011C                     	;# 
  4564  011D                     	;# 
  4565  011D                     	;# 
  4566  011D                     	;# 
  4567  011E                     	;# 
  4568  011E                     	;# 
  4569  011E                     	;# 
  4570  011F                     	;# 
  4571  011F                     	;# 
  4572  011F                     	;# 
  4573  011F                     	;# 
  4574  011F                     	;# 
  4575  018C                     	;# 
  4576  018D                     	;# 
  4577  018E                     	;# 
  4578  018F                     	;# 
  4579  0190                     	;# 
  4580  0191                     	;# 
  4581  0192                     	;# 
  4582  0196                     	;# 
  4583  0197                     	;# 
  4584  0198                     	;# 
  4585  0199                     	;# 
  4586  019A                     	;# 
  4587  019B                     	;# 
  4588  019C                     	;# 
  4589  020C                     	;# 
  4590  020C                     	;# 
  4591  020D                     	;# 
  4592  020E                     	;# 
  4593  020F                     	;# 
  4594  020F                     	;# 
  4595  0210                     	;# 
  4596  0210                     	;# 
  4597  0211                     	;# 
  4598  0211                     	;# 
  4599  0212                     	;# 
  4600  0212                     	;# 
  4601  0213                     	;# 
  4602  0214                     	;# 
  4603  0215                     	;# 
  4604  0215                     	;# 
  4605  0216                     	;# 
  4606  0216                     	;# 
  4607  0217                     	;# 
  4608  0217                     	;# 
  4609  0218                     	;# 
  4610  0218                     	;# 
  4611  0219                     	;# 
  4612  021A                     	;# 
  4613  021B                     	;# 
  4614  021B                     	;# 
  4615  021C                     	;# 
  4616  021C                     	;# 
  4617  021D                     	;# 
  4618  021D                     	;# 
  4619  021E                     	;# 
  4620  021F                     	;# 
  4621  028C                     	;# 
  4622  028C                     	;# 
  4623  028D                     	;# 
  4624  028D                     	;# 
  4625  028E                     	;# 
  4626  028F                     	;# 
  4627  0290                     	;# 
  4628  0290                     	;# 
  4629  0291                     	;# 
  4630  0292                     	;# 
  4631  0292                     	;# 
  4632  0293                     	;# 
  4633  0293                     	;# 
  4634  0294                     	;# 
  4635  0295                     	;# 
  4636  0296                     	;# 
  4637  0296                     	;# 
  4638  0297                     	;# 
  4639  0298                     	;# 
  4640  0298                     	;# 
  4641  0299                     	;# 
  4642  0299                     	;# 
  4643  029A                     	;# 
  4644  029B                     	;# 
  4645  029C                     	;# 
  4646  029C                     	;# 
  4647  029D                     	;# 
  4648  030C                     	;# 
  4649  030C                     	;# 
  4650  030D                     	;# 
  4651  030E                     	;# 
  4652  030F                     	;# 
  4653  0310                     	;# 
  4654  0310                     	;# 
  4655  0311                     	;# 
  4656  0312                     	;# 
  4657  0313                     	;# 
  4658  0314                     	;# 
  4659  0314                     	;# 
  4660  0315                     	;# 
  4661  0316                     	;# 
  4662  0317                     	;# 
  4663  0318                     	;# 
  4664  0318                     	;# 
  4665  0319                     	;# 
  4666  031A                     	;# 
  4667  031B                     	;# 
  4668  031C                     	;# 
  4669  031C                     	;# 
  4670  031D                     	;# 
  4671  031E                     	;# 
  4672  031F                     	;# 
  4673  038C                     	;# 
  4674  038C                     	;# 
  4675  038D                     	;# 
  4676  038E                     	;# 
  4677  0390                     	;# 
  4678  0390                     	;# 
  4679  0391                     	;# 
  4680  0392                     	;# 
  4681  040C                     	;# 
  4682  040D                     	;# 
  4683  040E                     	;# 
  4684  040F                     	;# 
  4685  0410                     	;# 
  4686  0411                     	;# 
  4687  0416                     	;# 
  4688  0416                     	;# 
  4689  0417                     	;# 
  4690  0418                     	;# 
  4691  0418                     	;# 
  4692  0419                     	;# 
  4693  041A                     	;# 
  4694  041A                     	;# 
  4695  041B                     	;# 
  4696  041C                     	;# 
  4697  041C                     	;# 
  4698  041D                     	;# 
  4699  041E                     	;# 
  4700  041F                     	;# 
  4701  048C                     	;# 
  4702  048C                     	;# 
  4703  048D                     	;# 
  4704  048E                     	;# 
  4705  048F                     	;# 
  4706  048F                     	;# 
  4707  0490                     	;# 
  4708  0491                     	;# 
  4709  0492                     	;# 
  4710  0492                     	;# 
  4711  0493                     	;# 
  4712  0494                     	;# 
  4713  0495                     	;# 
  4714  0495                     	;# 
  4715  0496                     	;# 
  4716  0497                     	;# 
  4717  0498                     	;# 
  4718  0499                     	;# 
  4719  049A                     	;# 
  4720  049B                     	;# 
  4721  049C                     	;# 
  4722  049D                     	;# 
  4723  050C                     	;# 
  4724  050C                     	;# 
  4725  050D                     	;# 
  4726  050E                     	;# 
  4727  050F                     	;# 
  4728  050F                     	;# 
  4729  0510                     	;# 
  4730  0511                     	;# 
  4731  0512                     	;# 
  4732  0512                     	;# 
  4733  0513                     	;# 
  4734  0514                     	;# 
  4735  0515                     	;# 
  4736  0515                     	;# 
  4737  0516                     	;# 
  4738  0517                     	;# 
  4739  0518                     	;# 
  4740  0519                     	;# 
  4741  051A                     	;# 
  4742  051B                     	;# 
  4743  051C                     	;# 
  4744  051D                     	;# 
  4745  058C                     	;# 
  4746  058C                     	;# 
  4747  058D                     	;# 
  4748  058E                     	;# 
  4749  058F                     	;# 
  4750  058F                     	;# 
  4751  0590                     	;# 
  4752  0591                     	;# 
  4753  0592                     	;# 
  4754  0593                     	;# 
  4755  060C                     	;# 
  4756  060D                     	;# 
  4757  060E                     	;# 
  4758  060F                     	;# 
  4759  0610                     	;# 
  4760  0611                     	;# 
  4761  0612                     	;# 
  4762  0613                     	;# 
  4763  0614                     	;# 
  4764  0616                     	;# 
  4765  0617                     	;# 
  4766  0618                     	;# 
  4767  0619                     	;# 
  4768  061A                     	;# 
  4769  061B                     	;# 
  4770  061C                     	;# 
  4771  061D                     	;# 
  4772  061E                     	;# 
  4773  068C                     	;# 
  4774  068D                     	;# 
  4775  068E                     	;# 
  4776  068F                     	;# 
  4777  0690                     	;# 
  4778  0691                     	;# 
  4779  0692                     	;# 
  4780  0693                     	;# 
  4781  0694                     	;# 
  4782  070C                     	;# 
  4783  070D                     	;# 
  4784  070E                     	;# 
  4785  070F                     	;# 
  4786  0710                     	;# 
  4787  0711                     	;# 
  4788  0712                     	;# 
  4789  0713                     	;# 
  4790  0714                     	;# 
  4791  0716                     	;# 
  4792  0717                     	;# 
  4793  0718                     	;# 
  4794  0719                     	;# 
  4795  071A                     	;# 
  4796  071B                     	;# 
  4797  071C                     	;# 
  4798  071D                     	;# 
  4799  071E                     	;# 
  4800  0796                     	;# 
  4801  0797                     	;# 
  4802  0798                     	;# 
  4803  0799                     	;# 
  4804  079A                     	;# 
  4805  079B                     	;# 
  4806  080C                     	;# 
  4807  080D                     	;# 
  4808  080E                     	;# 
  4809  080F                     	;# 
  4810  0810                     	;# 
  4811  0811                     	;# 
  4812  0812                     	;# 
  4813  0813                     	;# 
  4814  0814                     	;# 
  4815  081A                     	;# 
  4816  081B                     	;# 
  4817  081C                     	;# 
  4818  081D                     	;# 
  4819  081E                     	;# 
  4820  081F                     	;# 
  4821  088C                     	;# 
  4822  088D                     	;# 
  4823  088E                     	;# 
  4824  088F                     	;# 
  4825  0890                     	;# 
  4826  0891                     	;# 
  4827  0892                     	;# 
  4828  0893                     	;# 
  4829  0895                     	;# 
  4830  0896                     	;# 
  4831  0897                     	;# 
  4832  0898                     	;# 
  4833  0899                     	;# 
  4834  089A                     	;# 
  4835  089B                     	;# 
  4836  090C                     	;# 
  4837  090E                     	;# 
  4838  090F                     	;# 
  4839  091F                     	;# 
  4840  091F                     	;# 
  4841  098F                     	;# 
  4842  098F                     	;# 
  4843  0990                     	;# 
  4844  0991                     	;# 
  4845  0992                     	;# 
  4846  0993                     	;# 
  4847  0994                     	;# 
  4848  0995                     	;# 
  4849  0996                     	;# 
  4850  0997                     	;# 
  4851  0E0F                     	;# 
  4852  0E10                     	;# 
  4853  0E11                     	;# 
  4854  0E12                     	;# 
  4855  0E13                     	;# 
  4856  0E14                     	;# 
  4857  0E15                     	;# 
  4858  0E16                     	;# 
  4859  0E17                     	;# 
  4860  0E18                     	;# 
  4861  0E19                     	;# 
  4862  0E1A                     	;# 
  4863  0E1B                     	;# 
  4864  0E1C                     	;# 
  4865  0E1D                     	;# 
  4866  0E1E                     	;# 
  4867  0E1F                     	;# 
  4868  0E20                     	;# 
  4869  0E21                     	;# 
  4870  0E22                     	;# 
  4871  0E23                     	;# 
  4872  0E24                     	;# 
  4873  0E25                     	;# 
  4874  0E26                     	;# 
  4875  0E27                     	;# 
  4876  0E28                     	;# 
  4877  0E29                     	;# 
  4878  0E2A                     	;# 
  4879  0E2B                     	;# 
  4880  0E2C                     	;# 
  4881  0E2D                     	;# 
  4882  0E2E                     	;# 
  4883  0E2F                     	;# 
  4884  0E30                     	;# 
  4885  0E31                     	;# 
  4886  0E32                     	;# 
  4887  0E33                     	;# 
  4888  0E34                     	;# 
  4889  0E35                     	;# 
  4890  0E36                     	;# 
  4891  0E37                     	;# 
  4892  0E8F                     	;# 
  4893  0E90                     	;# 
  4894  0E91                     	;# 
  4895  0E92                     	;# 
  4896  0E93                     	;# 
  4897  0E94                     	;# 
  4898  0E95                     	;# 
  4899  0E96                     	;# 
  4900  0E97                     	;# 
  4901  0E9C                     	;# 
  4902  0E9D                     	;# 
  4903  0E9E                     	;# 
  4904  0EA1                     	;# 
  4905  0EA2                     	;# 
  4906  0EA3                     	;# 
  4907  0EA4                     	;# 
  4908  0EA5                     	;# 
  4909  0EA9                     	;# 
  4910  0EAA                     	;# 
  4911  0EAB                     	;# 
  4912  0EAC                     	;# 
  4913  0EB1                     	;# 
  4914  0EB2                     	;# 
  4915  0EB3                     	;# 
  4916  0EB8                     	;# 
  4917  0EB9                     	;# 
  4918  0EBA                     	;# 
  4919  0EBB                     	;# 
  4920  0EBC                     	;# 
  4921  0EBD                     	;# 
  4922  0EBE                     	;# 
  4923  0EC3                     	;# 
  4924  0EC5                     	;# 
  4925  0EC6                     	;# 
  4926  0EC7                     	;# 
  4927  0EC8                     	;# 
  4928  0EC9                     	;# 
  4929  0ECA                     	;# 
  4930  0ECB                     	;# 
  4931  0ECC                     	;# 
  4932  0F10                     	;# 
  4933  0F11                     	;# 
  4934  0F12                     	;# 
  4935  0F13                     	;# 
  4936  0F14                     	;# 
  4937  0F15                     	;# 
  4938  0F16                     	;# 
  4939  0F17                     	;# 
  4940  0F18                     	;# 
  4941  0F19                     	;# 
  4942  0F1A                     	;# 
  4943  0F1B                     	;# 
  4944  0F1C                     	;# 
  4945  0F1D                     	;# 
  4946  0F1E                     	;# 
  4947  0F1F                     	;# 
  4948  0F20                     	;# 
  4949  0F21                     	;# 
  4950  0F22                     	;# 
  4951  0F23                     	;# 
  4952  0F24                     	;# 
  4953  0F25                     	;# 
  4954  0F26                     	;# 
  4955  0F27                     	;# 
  4956  0F28                     	;# 
  4957  0F29                     	;# 
  4958  0F2A                     	;# 
  4959  0F2B                     	;# 
  4960  0F2C                     	;# 
  4961  0F2D                     	;# 
  4962  0F2E                     	;# 
  4963  0F2F                     	;# 
  4964  0F30                     	;# 
  4965  0F31                     	;# 
  4966  0F32                     	;# 
  4967  0F38                     	;# 
  4968  0F39                     	;# 
  4969  0F3A                     	;# 
  4970  0F3B                     	;# 
  4971  0F3C                     	;# 
  4972  0F3D                     	;# 
  4973  0F3E                     	;# 
  4974  0F3F                     	;# 
  4975  0F40                     	;# 
  4976  0F41                     	;# 
  4977  0F43                     	;# 
  4978  0F44                     	;# 
  4979  0F45                     	;# 
  4980  0F46                     	;# 
  4981  0F47                     	;# 
  4982  0F48                     	;# 
  4983  0F49                     	;# 
  4984  0F4A                     	;# 
  4985  0F4B                     	;# 
  4986  0F4C                     	;# 
  4987  0F4E                     	;# 
  4988  0F4F                     	;# 
  4989  0F50                     	;# 
  4990  0F51                     	;# 
  4991  0F52                     	;# 
  4992  0F53                     	;# 
  4993  0F54                     	;# 
  4994  0F55                     	;# 
  4995  0F56                     	;# 
  4996  0F57                     	;# 
  4997  0F59                     	;# 
  4998  0F5A                     	;# 
  4999  0F5B                     	;# 
  5000  0F5C                     	;# 
  5001  0F5D                     	;# 
  5002  0F61                     	;# 
  5003  0F62                     	;# 
  5004  0F64                     	;# 
  5005  0F65                     	;# 
  5006  0F66                     	;# 
  5007  0F67                     	;# 
  5008  0F68                     	;# 
  5009  0F69                     	;# 
  5010  0F6A                     	;# 
  5011  0F6B                     	;# 
  5012  0F6C                     	;# 
  5013  0F6D                     	;# 
  5014  0FE4                     	;# 
  5015  0FE5                     	;# 
  5016  0FE6                     	;# 
  5017  0FE7                     	;# 
  5018  0FE8                     	;# 
  5019  0FE9                     	;# 
  5020  0FEA                     	;# 
  5021  0FEB                     	;# 
  5022  0FED                     	;# 
  5023  0FEE                     	;# 
  5024  0FEF                     	;# 
  5025  0000                     	;# 
  5026  0001                     	;# 
  5027  0002                     	;# 
  5028  0003                     	;# 
  5029  0004                     	;# 
  5030  0005                     	;# 
  5031  0006                     	;# 
  5032  0007                     	;# 
  5033  0008                     	;# 
  5034  0009                     	;# 
  5035  000A                     	;# 
  5036  000B                     	;# 
  5037  000C                     	;# 
  5038  000D                     	;# 
  5039  000E                     	;# 
  5040  000F                     	;# 
  5041  0010                     	;# 
  5042  0011                     	;# 
  5043  0012                     	;# 
  5044  0013                     	;# 
  5045  0014                     	;# 
  5046  0015                     	;# 
  5047  0016                     	;# 
  5048  0017                     	;# 
  5049  0018                     	;# 
  5050  0019                     	;# 
  5051  001A                     	;# 
  5052  001C                     	;# 
  5053  001C                     	;# 
  5054  001D                     	;# 
  5055  001D                     	;# 
  5056  001E                     	;# 
  5057  001F                     	;# 
  5058  008C                     	;# 
  5059  008C                     	;# 
  5060  008D                     	;# 
  5061  008E                     	;# 
  5062  008E                     	;# 
  5063  008F                     	;# 
  5064  0090                     	;# 
  5065  0090                     	;# 
  5066  0091                     	;# 
  5067  0093                     	;# 
  5068  0094                     	;# 
  5069  0095                     	;# 
  5070  0096                     	;# 
  5071  0097                     	;# 
  5072  0098                     	;# 
  5073  0099                     	;# 
  5074  009A                     	;# 
  5075  009B                     	;# 
  5076  009C                     	;# 
  5077  009D                     	;# 
  5078  009E                     	;# 
  5079  010C                     	;# 
  5080  010D                     	;# 
  5081  010E                     	;# 
  5082  010E                     	;# 
  5083  010F                     	;# 
  5084  0110                     	;# 
  5085  0110                     	;# 
  5086  0111                     	;# 
  5087  0112                     	;# 
  5088  0112                     	;# 
  5089  0113                     	;# 
  5090  0114                     	;# 
  5091  0114                     	;# 
  5092  0115                     	;# 
  5093  0116                     	;# 
  5094  0116                     	;# 
  5095  0117                     	;# 
  5096  0119                     	;# 
  5097  0119                     	;# 
  5098  0119                     	;# 
  5099  011A                     	;# 
  5100  011A                     	;# 
  5101  011A                     	;# 
  5102  011B                     	;# 
  5103  011B                     	;# 
  5104  011B                     	;# 
  5105  011B                     	;# 
  5106  011B                     	;# 
  5107  011C                     	;# 
  5108  011C                     	;# 
  5109  011C                     	;# 
  5110  011D                     	;# 
  5111  011D                     	;# 
  5112  011D                     	;# 
  5113  011E                     	;# 
  5114  011E                     	;# 
  5115  011E                     	;# 
  5116  011F                     	;# 
  5117  011F                     	;# 
  5118  011F                     	;# 
  5119  011F                     	;# 
  5120  011F                     	;# 
  5121  018C                     	;# 
  5122  018D                     	;# 
  5123  018E                     	;# 
  5124  018F                     	;# 
  5125  0190                     	;# 
  5126  0191                     	;# 
  5127  0192                     	;# 
  5128  0196                     	;# 
  5129  0197                     	;# 
  5130  0198                     	;# 
  5131  0199                     	;# 
  5132  019A                     	;# 
  5133  019B                     	;# 
  5134  019C                     	;# 
  5135  020C                     	;# 
  5136  020C                     	;# 
  5137  020D                     	;# 
  5138  020E                     	;# 
  5139  020F                     	;# 
  5140  020F                     	;# 
  5141  0210                     	;# 
  5142  0210                     	;# 
  5143  0211                     	;# 
  5144  0211                     	;# 
  5145  0212                     	;# 
  5146  0212                     	;# 
  5147  0213                     	;# 
  5148  0214                     	;# 
  5149  0215                     	;# 
  5150  0215                     	;# 
  5151  0216                     	;# 
  5152  0216                     	;# 
  5153  0217                     	;# 
  5154  0217                     	;# 
  5155  0218                     	;# 
  5156  0218                     	;# 
  5157  0219                     	;# 
  5158  021A                     	;# 
  5159  021B                     	;# 
  5160  021B                     	;# 
  5161  021C                     	;# 
  5162  021C                     	;# 
  5163  021D                     	;# 
  5164  021D                     	;# 
  5165  021E                     	;# 
  5166  021F                     	;# 
  5167  028C                     	;# 
  5168  028C                     	;# 
  5169  028D                     	;# 
  5170  028D                     	;# 
  5171  028E                     	;# 
  5172  028F                     	;# 
  5173  0290                     	;# 
  5174  0290                     	;# 
  5175  0291                     	;# 
  5176  0292                     	;# 
  5177  0292                     	;# 
  5178  0293                     	;# 
  5179  0293                     	;# 
  5180  0294                     	;# 
  5181  0295                     	;# 
  5182  0296                     	;# 
  5183  0296                     	;# 
  5184  0297                     	;# 
  5185  0298                     	;# 
  5186  0298                     	;# 
  5187  0299                     	;# 
  5188  0299                     	;# 
  5189  029A                     	;# 
  5190  029B                     	;# 
  5191  029C                     	;# 
  5192  029C                     	;# 
  5193  029D                     	;# 
  5194  030C                     	;# 
  5195  030C                     	;# 
  5196  030D                     	;# 
  5197  030E                     	;# 
  5198  030F                     	;# 
  5199  0310                     	;# 
  5200  0310                     	;# 
  5201  0311                     	;# 
  5202  0312                     	;# 
  5203  0313                     	;# 
  5204  0314                     	;# 
  5205  0314                     	;# 
  5206  0315                     	;# 
  5207  0316                     	;# 
  5208  0317                     	;# 
  5209  0318                     	;# 
  5210  0318                     	;# 
  5211  0319                     	;# 
  5212  031A                     	;# 
  5213  031B                     	;# 
  5214  031C                     	;# 
  5215  031C                     	;# 
  5216  031D                     	;# 
  5217  031E                     	;# 
  5218  031F                     	;# 
  5219  038C                     	;# 
  5220  038C                     	;# 
  5221  038D                     	;# 
  5222  038E                     	;# 
  5223  0390                     	;# 
  5224  0390                     	;# 
  5225  0391                     	;# 
  5226  0392                     	;# 
  5227  040C                     	;# 
  5228  040D                     	;# 
  5229  040E                     	;# 
  5230  040F                     	;# 
  5231  0410                     	;# 
  5232  0411                     	;# 
  5233  0416                     	;# 
  5234  0416                     	;# 
  5235  0417                     	;# 
  5236  0418                     	;# 
  5237  0418                     	;# 
  5238  0419                     	;# 
  5239  041A                     	;# 
  5240  041A                     	;# 
  5241  041B                     	;# 
  5242  041C                     	;# 
  5243  041C                     	;# 
  5244  041D                     	;# 
  5245  041E                     	;# 
  5246  041F                     	;# 
  5247  048C                     	;# 
  5248  048C                     	;# 
  5249  048D                     	;# 
  5250  048E                     	;# 
  5251  048F                     	;# 
  5252  048F                     	;# 
  5253  0490                     	;# 
  5254  0491                     	;# 
  5255  0492                     	;# 
  5256  0492                     	;# 
  5257  0493                     	;# 
  5258  0494                     	;# 
  5259  0495                     	;# 
  5260  0495                     	;# 
  5261  0496                     	;# 
  5262  0497                     	;# 
  5263  0498                     	;# 
  5264  0499                     	;# 
  5265  049A                     	;# 
  5266  049B                     	;# 
  5267  049C                     	;# 
  5268  049D                     	;# 
  5269  050C                     	;# 
  5270  050C                     	;# 
  5271  050D                     	;# 
  5272  050E                     	;# 
  5273  050F                     	;# 
  5274  050F                     	;# 
  5275  0510                     	;# 
  5276  0511                     	;# 
  5277  0512                     	;# 
  5278  0512                     	;# 
  5279  0513                     	;# 
  5280  0514                     	;# 
  5281  0515                     	;# 
  5282  0515                     	;# 
  5283  0516                     	;# 
  5284  0517                     	;# 
  5285  0518                     	;# 
  5286  0519                     	;# 
  5287  051A                     	;# 
  5288  051B                     	;# 
  5289  051C                     	;# 
  5290  051D                     	;# 
  5291  058C                     	;# 
  5292  058C                     	;# 
  5293  058D                     	;# 
  5294  058E                     	;# 
  5295  058F                     	;# 
  5296  058F                     	;# 
  5297  0590                     	;# 
  5298  0591                     	;# 
  5299  0592                     	;# 
  5300  0593                     	;# 
  5301  060C                     	;# 
  5302  060D                     	;# 
  5303  060E                     	;# 
  5304  060F                     	;# 
  5305  0610                     	;# 
  5306  0611                     	;# 
  5307  0612                     	;# 
  5308  0613                     	;# 
  5309  0614                     	;# 
  5310  0616                     	;# 
  5311  0617                     	;# 
  5312  0618                     	;# 
  5313  0619                     	;# 
  5314  061A                     	;# 
  5315  061B                     	;# 
  5316  061C                     	;# 
  5317  061D                     	;# 
  5318  061E                     	;# 
  5319  068C                     	;# 
  5320  068D                     	;# 
  5321  068E                     	;# 
  5322  068F                     	;# 
  5323  0690                     	;# 
  5324  0691                     	;# 
  5325  0692                     	;# 
  5326  0693                     	;# 
  5327  0694                     	;# 
  5328  070C                     	;# 
  5329  070D                     	;# 
  5330  070E                     	;# 
  5331  070F                     	;# 
  5332  0710                     	;# 
  5333  0711                     	;# 
  5334  0712                     	;# 
  5335  0713                     	;# 
  5336  0714                     	;# 
  5337  0716                     	;# 
  5338  0717                     	;# 
  5339  0718                     	;# 
  5340  0719                     	;# 
  5341  071A                     	;# 
  5342  071B                     	;# 
  5343  071C                     	;# 
  5344  071D                     	;# 
  5345  071E                     	;# 
  5346  0796                     	;# 
  5347  0797                     	;# 
  5348  0798                     	;# 
  5349  0799                     	;# 
  5350  079A                     	;# 
  5351  079B                     	;# 
  5352  080C                     	;# 
  5353  080D                     	;# 
  5354  080E                     	;# 
  5355  080F                     	;# 
  5356  0810                     	;# 
  5357  0811                     	;# 
  5358  0812                     	;# 
  5359  0813                     	;# 
  5360  0814                     	;# 
  5361  081A                     	;# 
  5362  081B                     	;# 
  5363  081C                     	;# 
  5364  081D                     	;# 
  5365  081E                     	;# 
  5366  081F                     	;# 
  5367  088C                     	;# 
  5368  088D                     	;# 
  5369  088E                     	;# 
  5370  088F                     	;# 
  5371  0890                     	;# 
  5372  0891                     	;# 
  5373  0892                     	;# 
  5374  0893                     	;# 
  5375  0895                     	;# 
  5376  0896                     	;# 
  5377  0897                     	;# 
  5378  0898                     	;# 
  5379  0899                     	;# 
  5380  089A                     	;# 
  5381  089B                     	;# 
  5382  090C                     	;# 
  5383  090E                     	;# 
  5384  090F                     	;# 
  5385  091F                     	;# 
  5386  091F                     	;# 
  5387  098F                     	;# 
  5388  098F                     	;# 
  5389  0990                     	;# 
  5390  0991                     	;# 
  5391  0992                     	;# 
  5392  0993                     	;# 
  5393  0994                     	;# 
  5394  0995                     	;# 
  5395  0996                     	;# 
  5396  0997                     	;# 
  5397  0E0F                     	;# 
  5398  0E10                     	;# 
  5399  0E11                     	;# 
  5400  0E12                     	;# 
  5401  0E13                     	;# 
  5402  0E14                     	;# 
  5403  0E15                     	;# 
  5404  0E16                     	;# 
  5405  0E17                     	;# 
  5406  0E18                     	;# 
  5407  0E19                     	;# 
  5408  0E1A                     	;# 
  5409  0E1B                     	;# 
  5410  0E1C                     	;# 
  5411  0E1D                     	;# 
  5412  0E1E                     	;# 
  5413  0E1F                     	;# 
  5414  0E20                     	;# 
  5415  0E21                     	;# 
  5416  0E22                     	;# 
  5417  0E23                     	;# 
  5418  0E24                     	;# 
  5419  0E25                     	;# 
  5420  0E26                     	;# 
  5421  0E27                     	;# 
  5422  0E28                     	;# 
  5423  0E29                     	;# 
  5424  0E2A                     	;# 
  5425  0E2B                     	;# 
  5426  0E2C                     	;# 
  5427  0E2D                     	;# 
  5428  0E2E                     	;# 
  5429  0E2F                     	;# 
  5430  0E30                     	;# 
  5431  0E31                     	;# 
  5432  0E32                     	;# 
  5433  0E33                     	;# 
  5434  0E34                     	;# 
  5435  0E35                     	;# 
  5436  0E36                     	;# 
  5437  0E37                     	;# 
  5438  0E8F                     	;# 
  5439  0E90                     	;# 
  5440  0E91                     	;# 
  5441  0E92                     	;# 
  5442  0E93                     	;# 
  5443  0E94                     	;# 
  5444  0E95                     	;# 
  5445  0E96                     	;# 
  5446  0E97                     	;# 
  5447  0E9C                     	;# 
  5448  0E9D                     	;# 
  5449  0E9E                     	;# 
  5450  0EA1                     	;# 
  5451  0EA2                     	;# 
  5452  0EA3                     	;# 
  5453  0EA4                     	;# 
  5454  0EA5                     	;# 
  5455  0EA9                     	;# 
  5456  0EAA                     	;# 
  5457  0EAB                     	;# 
  5458  0EAC                     	;# 
  5459  0EB1                     	;# 
  5460  0EB2                     	;# 
  5461  0EB3                     	;# 
  5462  0EB8                     	;# 
  5463  0EB9                     	;# 
  5464  0EBA                     	;# 
  5465  0EBB                     	;# 
  5466  0EBC                     	;# 
  5467  0EBD                     	;# 
  5468  0EBE                     	;# 
  5469  0EC3                     	;# 
  5470  0EC5                     	;# 
  5471  0EC6                     	;# 
  5472  0EC7                     	;# 
  5473  0EC8                     	;# 
  5474  0EC9                     	;# 
  5475  0ECA                     	;# 
  5476  0ECB                     	;# 
  5477  0ECC                     	;# 
  5478  0F10                     	;# 
  5479  0F11                     	;# 
  5480  0F12                     	;# 
  5481  0F13                     	;# 
  5482  0F14                     	;# 
  5483  0F15                     	;# 
  5484  0F16                     	;# 
  5485  0F17                     	;# 
  5486  0F18                     	;# 
  5487  0F19                     	;# 
  5488  0F1A                     	;# 
  5489  0F1B                     	;# 
  5490  0F1C                     	;# 
  5491  0F1D                     	;# 
  5492  0F1E                     	;# 
  5493  0F1F                     	;# 
  5494  0F20                     	;# 
  5495  0F21                     	;# 
  5496  0F22                     	;# 
  5497  0F23                     	;# 
  5498  0F24                     	;# 
  5499  0F25                     	;# 
  5500  0F26                     	;# 
  5501  0F27                     	;# 
  5502  0F28                     	;# 
  5503  0F29                     	;# 
  5504  0F2A                     	;# 
  5505  0F2B                     	;# 
  5506  0F2C                     	;# 
  5507  0F2D                     	;# 
  5508  0F2E                     	;# 
  5509  0F2F                     	;# 
  5510  0F30                     	;# 
  5511  0F31                     	;# 
  5512  0F32                     	;# 
  5513  0F38                     	;# 
  5514  0F39                     	;# 
  5515  0F3A                     	;# 
  5516  0F3B                     	;# 
  5517  0F3C                     	;# 
  5518  0F3D                     	;# 
  5519  0F3E                     	;# 
  5520  0F3F                     	;# 
  5521  0F40                     	;# 
  5522  0F41                     	;# 
  5523  0F43                     	;# 
  5524  0F44                     	;# 
  5525  0F45                     	;# 
  5526  0F46                     	;# 
  5527  0F47                     	;# 
  5528  0F48                     	;# 
  5529  0F49                     	;# 
  5530  0F4A                     	;# 
  5531  0F4B                     	;# 
  5532  0F4C                     	;# 
  5533  0F4E                     	;# 
  5534  0F4F                     	;# 
  5535  0F50                     	;# 
  5536  0F51                     	;# 
  5537  0F52                     	;# 
  5538  0F53                     	;# 
  5539  0F54                     	;# 
  5540  0F55                     	;# 
  5541  0F56                     	;# 
  5542  0F57                     	;# 
  5543  0F59                     	;# 
  5544  0F5A                     	;# 
  5545  0F5B                     	;# 
  5546  0F5C                     	;# 
  5547  0F5D                     	;# 
  5548  0F61                     	;# 
  5549  0F62                     	;# 
  5550  0F64                     	;# 
  5551  0F65                     	;# 
  5552  0F66                     	;# 
  5553  0F67                     	;# 
  5554  0F68                     	;# 
  5555  0F69                     	;# 
  5556  0F6A                     	;# 
  5557  0F6B                     	;# 
  5558  0F6C                     	;# 
  5559  0F6D                     	;# 
  5560  0FE4                     	;# 
  5561  0FE5                     	;# 
  5562  0FE6                     	;# 
  5563  0FE7                     	;# 
  5564  0FE8                     	;# 
  5565  0FE9                     	;# 
  5566  0FEA                     	;# 
  5567  0FEB                     	;# 
  5568  0FED                     	;# 
  5569  0FEE                     	;# 
  5570  0FEF                     	;# 
  5571                           
  5572                           	psect	stringtext1
  5573  03A9                     __pstringtext1:	
  5574  03A9                     _fsmStateTable:	
  5575  03A9  3493               	retlw	low _do_I2C_IDLE
  5576  03AA  3405               	retlw	high _do_I2C_IDLE
  5577  03AB  3434               	retlw	low _do_I2C_SEND_ADR_READ
  5578  03AC  3405               	retlw	high _do_I2C_SEND_ADR_READ
  5579  03AD  3445               	retlw	low _do_I2C_SEND_ADR_WRITE
  5580  03AE  3405               	retlw	high _do_I2C_SEND_ADR_WRITE
  5581  03AF  3461               	retlw	low _do_I2C_TX
  5582  03B0  3401               	retlw	high _do_I2C_TX
  5583  03B1  34B5               	retlw	low _do_I2C_RX
  5584  03B2  3401               	retlw	high _do_I2C_RX
  5585  03B3  345D               	retlw	low _do_I2C_RCEN
  5586  03B4  3405               	retlw	high _do_I2C_RCEN
  5587  03B5  3482               	retlw	low _do_I2C_TX_EMPTY
  5588  03B6  3402               	retlw	high _do_I2C_TX_EMPTY
  5589  03B7  348E               	retlw	low _do_I2C_SEND_RESTART_READ
  5590  03B8  3405               	retlw	high _do_I2C_SEND_RESTART_READ
  5591  03B9  3489               	retlw	low _do_I2C_SEND_RESTART_WRITE
  5592  03BA  3405               	retlw	high _do_I2C_SEND_RESTART_WRITE
  5593  03BB  3484               	retlw	low _do_I2C_SEND_RESTART
  5594  03BC  3405               	retlw	high _do_I2C_SEND_RESTART
  5595  03BD  347F               	retlw	low _do_I2C_SEND_STOP
  5596  03BE  3405               	retlw	high _do_I2C_SEND_STOP
  5597  03BF  347A               	retlw	low _do_I2C_DO_ACK
  5598  03C0  3405               	retlw	high _do_I2C_DO_ACK
  5599  03C1  3475               	retlw	low _do_I2C_DO_NACK_STOP
  5600  03C2  3405               	retlw	high _do_I2C_DO_NACK_STOP
  5601  03C3  3470               	retlw	low _do_I2C_DO_NACK_RESTART
  5602  03C4  3405               	retlw	high _do_I2C_DO_NACK_RESTART
  5603  03C5  344D               	retlw	low _do_I2C_RESET
  5604  03C6  3405               	retlw	high _do_I2C_RESET
  5605  03C7  34E5               	retlw	low _do_I2C_DO_ADDRESS_NACK
  5606  03C8  3402               	retlw	high _do_I2C_DO_ADDRESS_NACK
  5607  03C9                     __end_of_fsmStateTable:	
  5608  0013                     _TRISCbits	set	19
  5609  0016                     _LATAbits	set	22
  5610  0014                     _TRISD	set	20
  5611  0013                     _TRISC	set	19
  5612  0012                     _TRISB	set	18
  5613  0011                     _TRISA	set	17
  5614  0015                     _TRISE	set	21
  5615  0018                     _LATC	set	24
  5616  0017                     _LATB	set	23
  5617  0016                     _LATA	set	22
  5618  0019                     _LATD	set	25
  5619  001A                     _LATE	set	26
  5620  000B                     _INTCONbits	set	11
  5621  018E                     _SSP1MSK	set	398
  5622  018D                     _SSP1ADD	set	397
  5623  018F                     _SSP1STAT	set	399
  5624  0191                     _SSP1CON2	set	401
  5625  0190                     _SSP1CON1bits	set	400
  5626  018C                     _SSP1BUF	set	396
  5627  018F                     _SSP1STATbits	set	399
  5628  0191                     _SSP1CON2bits	set	401
  5629  0190                     _SSP1CON1	set	400
  5630  020F                     _T1GCONbits	set	527
  5631  020E                     _T1CONbits	set	526
  5632  020E                     _T1CON	set	526
  5633  020C                     _TMR1L	set	524
  5634  020D                     _TMR1H	set	525
  5635  0211                     _T1CLK	set	529
  5636  0210                     _T1GATE	set	528
  5637  020F                     _T1GCON	set	527
  5638  0719                     _PIE3bits	set	1817
  5639  071A                     _PIE4bits	set	1818
  5640  0710                     _PIR4bits	set	1808
  5641  070F                     _PIR3bits	set	1807
  5642  079B                     _PMD5	set	1947
  5643  079A                     _PMD4	set	1946
  5644  0799                     _PMD3	set	1945
  5645  0798                     _PMD2	set	1944
  5646  0797                     _PMD1	set	1943
  5647  0796                     _PMD0	set	1942
  5648  081F                     _NVMCON2	set	2079
  5649  081C                     _NVMDATL	set	2076
  5650  081D                     _NVMDATH	set	2077
  5651  081E                     _NVMCON1bits	set	2078
  5652  081B                     _NVMADRH	set	2075
  5653  081A                     _NVMADRL	set	2074
  5654  0892                     _OSCTUNE	set	2194
  5655  0893                     _OSCFRQ	set	2195
  5656  0891                     _OSCEN	set	2193
  5657  088F                     _OSCCON3	set	2191
  5658  088D                     _OSCCON1	set	2189
  5659  0EC6                     _SSP1DATPPS	set	3782
  5660  0EC5                     _SSP1CLKPPS	set	3781
  5661  0F24                     _RC4PPS	set	3876
  5662  0F23                     _RC3PPS	set	3875
  5663  0F68                     _INLVLE	set	3944
  5664  0F5D                     _INLVLD	set	3933
  5665  0F52                     _INLVLC	set	3922
  5666  0F47                     _INLVLB	set	3911
  5667  0F3C                     _INLVLA	set	3900
  5668  0F67                     _SLRCONE	set	3943
  5669  0F5C                     _SLRCOND	set	3932
  5670  0F51                     _SLRCONC	set	3921
  5671  0F46                     _SLRCONB	set	3910
  5672  0F3B                     _SLRCONA	set	3899
  5673  0F5B                     _ODCOND	set	3931
  5674  0F50                     _ODCONC	set	3920
  5675  0F45                     _ODCONB	set	3909
  5676  0F3A                     _ODCONA	set	3898
  5677  0F66                     _ODCONE	set	3942
  5678  0F4F                     _WPUC	set	3919
  5679  0F39                     _WPUA	set	3897
  5680  0F44                     _WPUB	set	3908
  5681  0F65                     _WPUE	set	3941
  5682  0F5A                     _WPUD	set	3930
  5683  0F38                     _ANSELA	set	3896
  5684  0F64                     _ANSELE	set	3940
  5685  0F43                     _ANSELB	set	3907
  5686  0F4E                     _ANSELC	set	3918
  5687  0F59                     _ANSELD	set	3929
  5688  7A7C                     _WPUC4	set	31356
  5689  7A7B                     _WPUC3	set	31355
  5690                           
  5691                           ; #config settings
  5692  0000                     
  5693                           	psect	cinit
  5694  0038                     start_initialization:	
  5695  0038                     __initialization:	
  5696                           
  5697                           ; Clear objects allocated to BITCOMMON
  5698  0038  01FD               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  5699                           
  5700                           ; Clear objects allocated to COMMON
  5701  0039  01F7               	clrf	__pbssCOMMON& (0+127)
  5702  003A  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  5703  003B  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  5704  003C  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
  5705  003D  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
  5706  003E  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
  5707                           
  5708                           ; Clear objects allocated to BANK0
  5709  003F  3020               	movlw	low __pbssBANK0
  5710  0040  0084               	movwf	4
  5711  0041  3000               	movlw	high __pbssBANK0
  5712  0042  0085               	movwf	5
  5713  0043  3030               	movlw	48
  5714  0044  3185  2564  3180   	fcall	clear_ram0
  5715  0047                     end_of_initialization:	
  5716                           ;End of C runtime variable initialization code
  5717                           
  5718  0047                     __end_of__initialization:	
  5719  0047  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5720  0048  0020               	movlb	0
  5721  0049  3180  284B         	ljmp	_main	;jump to C main() function
  5722                           
  5723                           	psect	bitbssCOMMON
  5724  03E8                     __pbitbssCOMMON:	
  5725  03E8                     _running:	
  5726  03E8                     	ds	1
  5727  03E9                     _nreg_init:	
  5728  03E9                     	ds	1
  5729  03EA                     _configuration_mode:	
  5730  03EA                     	ds	1
  5731  03EB                     _half:	
  5732  03EB                     	ds	1
  5733                           
  5734                           	psect	bssCOMMON
  5735  0077                     __pbssCOMMON:	
  5736  0077                     _TMR1_InterruptHandler:	
  5737  0077                     	ds	2
  5738  0079                     _timer1ReloadVal:	
  5739  0079                     	ds	2
  5740  007B                     _i2c1_driver_busCollisionISR:	
  5741  007B                     	ds	2
  5742                           
  5743                           	psect	bssBANK0
  5744  0020                     __pbssBANK0:	
  5745  0020                     _i2c_status:	
  5746  0020                     	ds	29
  5747  003D                     _ring_byte:	
  5748  003D                     	ds	5
  5749  0042                     _i2c1_driver_i2cISR:	
  5750  0042                     	ds	2
  5751  0044                     _aux1:	
  5752  0044                     	ds	1
  5753  0045                     _aux:	
  5754  0045                     	ds	1
  5755  0046                     _lum:	
  5756  0046                     	ds	1
  5757  0047                     _temp:	
  5758  0047                     	ds	1
  5759  0048                     _pmon:	
  5760  0048                     	ds	1
  5761  0049                     _nreg_pt:	
  5762  0049                     	ds	1
  5763  004A                     _nreg:	
  5764  004A                     	ds	1
  5765  004B                     _last1m:	
  5766  004B                     	ds	1
  5767  004C                     _last5s:	
  5768  004C                     	ds	1
  5769  004D                     _seg:	
  5770  004D                     	ds	1
  5771  004E                     _clkm:	
  5772  004E                     	ds	1
  5773  004F                     _clkh:	
  5774  004F                     	ds	1
  5775                           
  5776                           	psect	clrtext
  5777  0564                     clear_ram0:	
  5778                           ;	Called with FSR0 containing the base address, and
  5779                           ;	WREG with the size to clear
  5780                           
  5781  0564  0064               	clrwdt	;clear the watchdog before getting into this loop
  5782  0565                     clrloop0:	
  5783  0565  0180               	clrf	0	;clear RAM location pointed to by FSR
  5784  0566  3101               	addfsr 0,1
  5785  0567  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5786  0568  2D65               	goto	clrloop0	;have we reached the end yet?
  5787  0569  3400               	retlw	0	;all done for this memory range, return
  5788                           
  5789                           	psect	cstackCOMMON
  5790  0070                     __pcstackCOMMON:	
  5791  0070                     ?_i2c1_driver_open:	
  5792  0070                     ?_i2c1_driver_isNACK:	
  5793                           ; 1 bit 
  5794                           
  5795  0070                     ?_setCallBack:	
  5796                           ; 1 bit 
  5797                           
  5798  0070                     ?_mssp1_clearIRQ:	
  5799                           ; 1 bytes @ 0x0
  5800                           
  5801  0070                     ??_mssp1_clearIRQ:	
  5802                           ; 1 bytes @ 0x0
  5803                           
  5804  0070                     ?_i2c_busCollisionISR:	
  5805                           ; 1 bytes @ 0x0
  5806                           
  5807  0070                     ??_i2c_busCollisionISR:	
  5808                           ; 1 bytes @ 0x0
  5809                           
  5810  0070                     ?_i2c_ISR:	
  5811                           ; 1 bytes @ 0x0
  5812                           
  5813  0070                     ?_i2c1_driver_resetBus:	
  5814                           ; 1 bytes @ 0x0
  5815                           
  5816  0070                     ??_i2c1_driver_resetBus:	
  5817                           ; 1 bytes @ 0x0
  5818                           
  5819  0070                     ?_i2c1_driver_restart:	
  5820                           ; 1 bytes @ 0x0
  5821                           
  5822  0070                     ??_i2c1_driver_restart:	
  5823                           ; 1 bytes @ 0x0
  5824                           
  5825  0070                     ?_i2c1_driver_stop:	
  5826                           ; 1 bytes @ 0x0
  5827                           
  5828  0070                     ??_i2c1_driver_stop:	
  5829                           ; 1 bytes @ 0x0
  5830                           
  5831  0070                     ?_i2c1_driver_TXData:	
  5832                           ; 1 bytes @ 0x0
  5833                           
  5834  0070                     ??_i2c1_driver_TXData:	
  5835                           ; 1 bytes @ 0x0
  5836                           
  5837  0070                     ?_i2c1_driver_startRX:	
  5838                           ; 1 bytes @ 0x0
  5839                           
  5840  0070                     ??_i2c1_driver_startRX:	
  5841                           ; 1 bytes @ 0x0
  5842                           
  5843  0070                     ?_i2c1_driver_sendACK:	
  5844                           ; 1 bytes @ 0x0
  5845                           
  5846  0070                     ??_i2c1_driver_sendACK:	
  5847                           ; 1 bytes @ 0x0
  5848                           
  5849  0070                     ?_i2c1_driver_sendNACK:	
  5850                           ; 1 bytes @ 0x0
  5851                           
  5852  0070                     ??_i2c1_driver_sendNACK:	
  5853                           ; 1 bytes @ 0x0
  5854                           
  5855  0070                     ??_i2c1_driver_isNACK:	
  5856                           ; 1 bytes @ 0x0
  5857                           
  5858  0070                     ?_i2c1_driver_getRXData:	
  5859                           ; 1 bytes @ 0x0
  5860                           
  5861  0070                     ??_i2c1_driver_getRXData:	
  5862                           ; 1 bytes @ 0x0
  5863                           
  5864  0070                     ?_mssp1_setIRQ:	
  5865                           ; 1 bytes @ 0x0
  5866                           
  5867  0070                     ??_mssp1_setIRQ:	
  5868                           ; 1 bytes @ 0x0
  5869                           
  5870  0070                     ?_i2c1_driver_clearBusCollision:	
  5871                           ; 1 bytes @ 0x0
  5872                           
  5873  0070                     ??_i2c1_driver_clearBusCollision:	
  5874                           ; 1 bytes @ 0x0
  5875                           
  5876  0070                     ?_TMR1_DefaultInterruptHandler:	
  5877                           ; 1 bytes @ 0x0
  5878                           
  5879  0070                     ??_TMR1_DefaultInterruptHandler:	
  5880                           ; 1 bytes @ 0x0
  5881                           
  5882  0070                     ?_PMD_Initialize:	
  5883                           ; 1 bytes @ 0x0
  5884                           
  5885  0070                     ?_PIN_MANAGER_Initialize:	
  5886                           ; 1 bytes @ 0x0
  5887                           
  5888  0070                     ?_OSCILLATOR_Initialize:	
  5889                           ; 1 bytes @ 0x0
  5890                           
  5891  0070                     ?_update_clock:	
  5892                           ; 1 bytes @ 0x0
  5893                           
  5894  0070                     ??_update_clock:	
  5895                           ; 1 bytes @ 0x0
  5896                           
  5897  0070                     ?_cksum:	
  5898                           ; 1 bytes @ 0x0
  5899                           
  5900  0070                     ?_reset_recv:	
  5901                           ; 1 bytes @ 0x0
  5902                           
  5903  0070                     ?_push_ring:	
  5904                           ; 1 bytes @ 0x0
  5905                           
  5906  0070                     ?_cksum_w:	
  5907                           ; 1 bytes @ 0x0
  5908                           
  5909  0070                     ?_i2c_setBuffer:	
  5910                           ; 1 bytes @ 0x0
  5911                           
  5912  0070                     ?_do_I2C_RESET:	
  5913                           ; 1 bytes @ 0x0
  5914                           
  5915  0070                     ??_do_I2C_RESET:	
  5916                           ; 1 bytes @ 0x0
  5917                           
  5918  0070                     ?_do_I2C_IDLE:	
  5919                           ; 1 bytes @ 0x0
  5920                           
  5921  0070                     ??_do_I2C_IDLE:	
  5922                           ; 1 bytes @ 0x0
  5923                           
  5924  0070                     ?_do_I2C_SEND_RESTART_READ:	
  5925                           ; 1 bytes @ 0x0
  5926                           
  5927  0070                     ??_do_I2C_SEND_RESTART_READ:	
  5928                           ; 1 bytes @ 0x0
  5929                           
  5930  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  5931                           ; 1 bytes @ 0x0
  5932                           
  5933  0070                     ??_do_I2C_SEND_RESTART_WRITE:	
  5934                           ; 1 bytes @ 0x0
  5935                           
  5936  0070                     ?_do_I2C_SEND_RESTART:	
  5937                           ; 1 bytes @ 0x0
  5938                           
  5939  0070                     ??_do_I2C_SEND_RESTART:	
  5940                           ; 1 bytes @ 0x0
  5941                           
  5942  0070                     ?_do_I2C_SEND_STOP:	
  5943                           ; 1 bytes @ 0x0
  5944                           
  5945  0070                     ??_do_I2C_SEND_STOP:	
  5946                           ; 1 bytes @ 0x0
  5947                           
  5948  0070                     ?_do_I2C_SEND_ADR_READ:	
  5949                           ; 1 bytes @ 0x0
  5950                           
  5951  0070                     ??_do_I2C_SEND_ADR_READ:	
  5952                           ; 1 bytes @ 0x0
  5953                           
  5954  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  5955                           ; 1 bytes @ 0x0
  5956                           
  5957  0070                     ?_do_I2C_RCEN:	
  5958                           ; 1 bytes @ 0x0
  5959                           
  5960  0070                     ??_do_I2C_RCEN:	
  5961                           ; 1 bytes @ 0x0
  5962                           
  5963  0070                     ?_do_I2C_DO_ACK:	
  5964                           ; 1 bytes @ 0x0
  5965                           
  5966  0070                     ??_do_I2C_DO_ACK:	
  5967                           ; 1 bytes @ 0x0
  5968                           
  5969  0070                     ?_do_I2C_DO_NACK_STOP:	
  5970                           ; 1 bytes @ 0x0
  5971                           
  5972  0070                     ??_do_I2C_DO_NACK_STOP:	
  5973                           ; 1 bytes @ 0x0
  5974                           
  5975  0070                     ?_do_I2C_DO_NACK_RESTART:	
  5976                           ; 1 bytes @ 0x0
  5977                           
  5978  0070                     ??_do_I2C_DO_NACK_RESTART:	
  5979                           ; 1 bytes @ 0x0
  5980                           
  5981  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  5982                           ; 1 bytes @ 0x0
  5983                           
  5984  0070                     ??_do_I2C_DO_ADDRESS_NACK:	
  5985                           ; 1 bytes @ 0x0
  5986                           
  5987  0070                     ?_do_I2C_TX:	
  5988                           ; 1 bytes @ 0x0
  5989                           
  5990  0070                     ?_do_I2C_RX:	
  5991                           ; 1 bytes @ 0x0
  5992                           
  5993  0070                     ??_do_I2C_RX:	
  5994                           ; 1 bytes @ 0x0
  5995                           
  5996  0070                     ?_do_I2C_TX_EMPTY:	
  5997                           ; 1 bytes @ 0x0
  5998                           
  5999  0070                     ??_do_I2C_TX_EMPTY:	
  6000                           ; 1 bytes @ 0x0
  6001                           
  6002  0070                     ?_TMR1_Initialize:	
  6003                           ; 1 bytes @ 0x0
  6004                           
  6005  0070                     ?_TMR1_WriteTimer:	
  6006                           ; 1 bytes @ 0x0
  6007                           
  6008  0070                     ?_TMR1_ISR:	
  6009                           ; 1 bytes @ 0x0
  6010                           
  6011  0070                     ?_INTERRUPT_InterruptManager:	
  6012                           ; 1 bytes @ 0x0
  6013                           
  6014  0070                     ?_SYSTEM_Initialize:	
  6015                           ; 1 bytes @ 0x0
  6016                           
  6017  0070                     ?_h_clock:	
  6018                           ; 1 bytes @ 0x0
  6019                           
  6020  0070                     ?_main:	
  6021                           ; 1 bytes @ 0x0
  6022                           
  6023  0070                     i2c1_driver_TXData@d:	
  6024                           ; 1 bytes @ 0x0
  6025                           
  6026  0070                     i2c_setBuffer@bufferSize:	
  6027                           ; 1 bytes @ 0x0
  6028                           
  6029  0070                     setCallBack@cb:	
  6030                           ; 2 bytes @ 0x0
  6031                           
  6032  0070                     TMR1_WriteTimer@timerVal:	
  6033                           ; 2 bytes @ 0x0
  6034                           
  6035                           
  6036                           ; 2 bytes @ 0x0
  6037  0070                     	ds	1
  6038  0071                     ??_do_I2C_SEND_ADR_WRITE:	
  6039  0071                     ??_do_I2C_TX:	
  6040                           ; 1 bytes @ 0x1
  6041                           
  6042  0071                     ??_h_clock:	
  6043                           ; 1 bytes @ 0x1
  6044                           
  6045                           
  6046                           ; 1 bytes @ 0x1
  6047  0071                     	ds	1
  6048  0072                     ??_i2c_setBuffer:	
  6049  0072                     ??_TMR1_WriteTimer:	
  6050                           ; 1 bytes @ 0x2
  6051                           
  6052  0072                     ??_TMR1_ISR:	
  6053                           ; 1 bytes @ 0x2
  6054                           
  6055  0072                     setCallBack@p:	
  6056                           ; 1 bytes @ 0x2
  6057                           
  6058                           
  6059                           ; 1 bytes @ 0x2
  6060  0072                     	ds	1
  6061  0073                     ??_setCallBack:	
  6062  0073                     i2c_setBuffer@buffer:	
  6063                           ; 1 bytes @ 0x3
  6064                           
  6065                           
  6066                           ; 1 bytes @ 0x3
  6067  0073                     	ds	1
  6068  0074                     ??_i2c_ISR:	
  6069  0074                     setCallBack@idx:	
  6070                           ; 1 bytes @ 0x4
  6071                           
  6072                           
  6073                           ; 1 bytes @ 0x4
  6074  0074                     	ds	1
  6075  0075                     ??_i2c_setDataCompleteCallback:	
  6076                           
  6077                           ; 1 bytes @ 0x5
  6078  0075                     	ds	1
  6079  0076                     ?_returnStop:	
  6080  0076                     ?_returnReset:	
  6081                           ; 1 bytes @ 0x6
  6082                           
  6083  0076                     ?_i2c_restartWrite:	
  6084                           ; 1 bytes @ 0x6
  6085                           
  6086  0076                     ?_wr1RegCompleteHandler:	
  6087                           ; 1 bytes @ 0x6
  6088                           
  6089  0076                     ?_rd1RegCompleteHandler:	
  6090                           ; 1 bytes @ 0x6
  6091                           
  6092  0076                     ?_rd2RegCompleteHandler:	
  6093                           ; 1 bytes @ 0x6
  6094                           
  6095  0076                     ?_wr2RegCompleteHandler:	
  6096                           ; 1 bytes @ 0x6
  6097                           
  6098  0076                     ?_rdBlkRegCompleteHandler:	
  6099                           ; 1 bytes @ 0x6
  6100                           
  6101  0076                     returnStop@p:	
  6102                           ; 1 bytes @ 0x6
  6103                           
  6104  0076                     returnReset@p:	
  6105                           ; 1 bytes @ 0x6
  6106                           
  6107  0076                     wr1RegCompleteHandler@p:	
  6108                           ; 1 bytes @ 0x6
  6109                           
  6110  0076                     rd1RegCompleteHandler@p:	
  6111                           ; 1 bytes @ 0x6
  6112                           
  6113  0076                     rd2RegCompleteHandler@p:	
  6114                           ; 1 bytes @ 0x6
  6115                           
  6116  0076                     wr2RegCompleteHandler@p:	
  6117                           ; 1 bytes @ 0x6
  6118                           
  6119  0076                     rdBlkRegCompleteHandler@p:	
  6120                           ; 1 bytes @ 0x6
  6121                           
  6122  0076                     i2c_restartWrite@p:	
  6123                           ; 1 bytes @ 0x6
  6124                           
  6125                           
  6126                           ; 1 bytes @ 0x6
  6127  0076                     	ds	1
  6128  0077                     ??_returnStop:	
  6129  0077                     ??_returnReset:	
  6130                           ; 1 bytes @ 0x7
  6131                           
  6132  0077                     ??_i2c_restartWrite:	
  6133                           ; 1 bytes @ 0x7
  6134                           
  6135  0077                     ??_wr1RegCompleteHandler:	
  6136                           ; 1 bytes @ 0x7
  6137                           
  6138  0077                     ??_rd1RegCompleteHandler:	
  6139                           ; 1 bytes @ 0x7
  6140                           
  6141  0077                     ??_rd2RegCompleteHandler:	
  6142                           ; 1 bytes @ 0x7
  6143                           
  6144  0077                     ??_wr2RegCompleteHandler:	
  6145                           ; 1 bytes @ 0x7
  6146                           
  6147  0077                     ??_rdBlkRegCompleteHandler:	
  6148                           ; 1 bytes @ 0x7
  6149                           
  6150  0077                     ??_INTERRUPT_InterruptManager:	
  6151                           ; 1 bytes @ 0x7
  6152                           
  6153                           
  6154                           	psect	cstackBANK0
  6155  0050                     __pcstackBANK0:	
  6156                           ; 1 bytes @ 0x7
  6157                           
  6158  0050                     ??_i2c1_driver_open:	
  6159  0050                     ?_TMR1_SetInterruptHandler:	
  6160                           ; 1 bytes @ 0x0
  6161                           
  6162  0050                     ??_PMD_Initialize:	
  6163                           ; 1 bytes @ 0x0
  6164                           
  6165  0050                     ??_PIN_MANAGER_Initialize:	
  6166                           ; 1 bytes @ 0x0
  6167                           
  6168  0050                     ??_OSCILLATOR_Initialize:	
  6169                           ; 1 bytes @ 0x0
  6170                           
  6171  0050                     ?_i2c_setDataCompleteCallback:	
  6172                           ; 1 bytes @ 0x0
  6173                           
  6174  0050                     ?_DATAEE_ReadByte:	
  6175                           ; 1 bytes @ 0x0
  6176                           
  6177  0050                     ?___bmul:	
  6178                           ; 1 bytes @ 0x0
  6179                           
  6180  0050                     ___bmul@multiplicand:	
  6181                           ; 1 bytes @ 0x0
  6182                           
  6183  0050                     i2c_setDataCompleteCallback@cb:	
  6184                           ; 1 bytes @ 0x0
  6185                           
  6186  0050                     TMR1_SetInterruptHandler@InterruptHandler:	
  6187                           ; 2 bytes @ 0x0
  6188                           
  6189  0050                     DATAEE_ReadByte@bAdd:	
  6190                           ; 2 bytes @ 0x0
  6191                           
  6192                           
  6193                           ; 2 bytes @ 0x0
  6194  0050                     	ds	1
  6195  0051                     ??___bmul:	
  6196                           
  6197                           ; 1 bytes @ 0x1
  6198  0051                     	ds	1
  6199  0052                     ??_TMR1_SetInterruptHandler:	
  6200  0052                     ??_cksum:	
  6201                           ; 1 bytes @ 0x2
  6202                           
  6203  0052                     ??_TMR1_Initialize:	
  6204                           ; 1 bytes @ 0x2
  6205                           
  6206  0052                     ??_SYSTEM_Initialize:	
  6207                           ; 1 bytes @ 0x2
  6208                           
  6209  0052                     ??_DATAEE_ReadByte:	
  6210                           ; 1 bytes @ 0x2
  6211                           
  6212  0052                     i2c_setDataCompleteCallback@p:	
  6213                           ; 1 bytes @ 0x2
  6214                           
  6215  0052                     ___bmul@product:	
  6216                           ; 1 bytes @ 0x2
  6217                           
  6218                           
  6219                           ; 1 bytes @ 0x2
  6220  0052                     	ds	1
  6221  0053                     cksum@res:	
  6222  0053                     ___bmul@multiplier:	
  6223                           ; 1 bytes @ 0x3
  6224                           
  6225                           
  6226                           ; 1 bytes @ 0x3
  6227  0053                     	ds	1
  6228  0054                     ?_read_ring:	
  6229  0054                     read_ring@subindex:	
  6230                           ; 1 bytes @ 0x4
  6231                           
  6232  0054                     cksum@i:	
  6233                           ; 1 bytes @ 0x4
  6234                           
  6235                           
  6236                           ; 2 bytes @ 0x4
  6237  0054                     	ds	1
  6238  0055                     ??_read_ring:	
  6239                           
  6240                           ; 1 bytes @ 0x5
  6241  0055                     	ds	1
  6242  0056                     ?_DATAEE_WriteByte:	
  6243  0056                     DATAEE_WriteByte@bAdd:	
  6244                           ; 1 bytes @ 0x6
  6245                           
  6246                           
  6247                           ; 2 bytes @ 0x6
  6248  0056                     	ds	1
  6249  0057                     read_ring@i:	
  6250                           
  6251                           ; 1 bytes @ 0x7
  6252  0057                     	ds	1
  6253  0058                     DATAEE_WriteByte@bData:	
  6254  0058                     read_ring@index:	
  6255                           ; 1 bytes @ 0x8
  6256                           
  6257                           
  6258                           ; 1 bytes @ 0x8
  6259  0058                     	ds	1
  6260  0059                     ??_DATAEE_WriteByte:	
  6261  0059                     DATAEE_WriteByte@GIEBitValue:	
  6262                           ; 1 bytes @ 0x9
  6263                           
  6264  0059                     read_ring@absindex:	
  6265                           ; 1 bytes @ 0x9
  6266                           
  6267                           
  6268                           ; 1 bytes @ 0x9
  6269  0059                     	ds	1
  6270  005A                     ??_reset_recv:	
  6271  005A                     ??_push_ring:	
  6272                           ; 1 bytes @ 0xA
  6273                           
  6274  005A                     ??_cksum_w:	
  6275                           ; 1 bytes @ 0xA
  6276                           
  6277  005A                     reset_recv@i:	
  6278                           ; 1 bytes @ 0xA
  6279                           
  6280                           
  6281                           ; 2 bytes @ 0xA
  6282  005A                     	ds	1
  6283  005B                     push_ring@i:	
  6284                           
  6285                           ; 1 bytes @ 0xB
  6286  005B                     	ds	1
  6287  005C                     ??_main:	
  6288                           
  6289                           ; 1 bytes @ 0xC
  6290  005C                     	ds	2
  6291                           
  6292                           	psect	maintext
  6293  004B                     __pmaintext:	
  6294 ;;
  6295 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  6296 ;;
  6297 ;; *************** function _main *****************
  6298 ;; Defined at:
  6299 ;;		line 63 in file "main.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;		None
  6302 ;; Auto vars:     Size  Location     Type
  6303 ;;		None
  6304 ;; Return value:  Size  Location     Type
  6305 ;;                  1    wreg      void 
  6306 ;; Registers used:
  6307 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6308 ;; Tracked objects:
  6309 ;;		On entry : B1F/0
  6310 ;;		On exit  : 0/0
  6311 ;;		Unchanged: 0/0
  6312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6314 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6315 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6316 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6317 ;;Total ram usage:        4 bytes
  6318 ;; Hardware stack levels required when called:    9
  6319 ;; This function calls:
  6320 ;;		_DATAEE_ReadByte
  6321 ;;		_DATAEE_WriteByte
  6322 ;;		_SYSTEM_Initialize
  6323 ;;		_TMR1_SetInterruptHandler
  6324 ;;		_cksum
  6325 ;;		_cksum_w
  6326 ;;		_i2c1_driver_open
  6327 ;;		_push_ring
  6328 ;;		_read_ring
  6329 ;;		_reset_recv
  6330 ;; This function is called by:
  6331 ;;		Startup code after reset
  6332 ;; This function uses a non-reentrant model
  6333 ;;
  6334                           
  6335                           
  6336                           ;psect for function _main
  6337  004B                     _main:	
  6338  004B                     l4387:	
  6339                           ;incstack = 0
  6340                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6341                           
  6342                           
  6343                           ;main.c: 65:     clkh = 0; clkm = 0; seg = 0;
  6344  004B  0020               	movlb	0	; select bank0
  6345  004C  01CF               	clrf	_clkh	;volatile
  6346  004D  01CE               	clrf	_clkm	;volatile
  6347  004E  01CD               	clrf	_seg	;volatile
  6348                           
  6349                           ;main.c: 66:     last5s = 0; last1m = 0;
  6350  004F  01CC               	clrf	_last5s	;volatile
  6351  0050  01CB               	clrf	_last1m	;volatile
  6352  0051                     l4389:	
  6353                           
  6354                           ;main.c: 70:     nreg = 0xF000 + 5 * 30 >= 0xF0FF - 10 ? 256 : 5 * 30;
  6355  0051  117D               	bcf	_configuration_mode/(0+8),_configuration_mode& (0+7)
  6356  0052                     l4391:	
  6357  0052                     l881:	
  6358  0052  3096               	movlw	150
  6359  0053  00DC               	movwf	??_main
  6360  0054  085C               	movf	??_main,w
  6361  0055  00CA               	movwf	_nreg
  6362  0056                     l4395:	
  6363                           
  6364                           ;main.c: 71:     nreg_pt = 0;
  6365  0056  01C9               	clrf	_nreg_pt
  6366  0057                     l4397:	
  6367                           
  6368                           ;main.c: 72:     nreg_init = 0;
  6369  0057  10FD               	bcf	_nreg_init/(0+8),_nreg_init& (0+7)
  6370  0058                     l4399:	
  6371                           
  6372                           ;main.c: 74:     pmon = 5;
  6373  0058  3005               	movlw	5
  6374  0059  00DC               	movwf	??_main
  6375  005A  085C               	movf	??_main,w
  6376  005B  00C8               	movwf	_pmon
  6377  005C                     l4401:	
  6378                           
  6379                           ;main.c: 75:     running = 1;
  6380  005C  147D               	bsf	_running/(0+8),_running& (0+7)
  6381                           
  6382                           ;main.c: 76:     temp = 0;
  6383  005D  01C7               	clrf	_temp
  6384                           
  6385                           ;main.c: 77:     lum = 0;
  6386  005E  01C6               	clrf	_lum
  6387  005F                     l4403:	
  6388                           
  6389                           ;main.c: 80:     if(DATAEE_ReadByte(0xF0FF - 10) == 0xAB) {
  6390  005F  30F5               	movlw	245
  6391  0060  00D0               	movwf	DATAEE_ReadByte@bAdd
  6392  0061  30F0               	movlw	240
  6393  0062  00D1               	movwf	DATAEE_ReadByte@bAdd+1
  6394  0063  3184  24F5  3180   	fcall	_DATAEE_ReadByte
  6395  0066  3AAB               	xorlw	171
  6396  0067  1D03               	skipz
  6397  0068  286A               	goto	u2141
  6398  0069  286B               	goto	u2140
  6399  006A                     u2141:	
  6400  006A  289E               	goto	l4409
  6401  006B                     u2140:	
  6402  006B                     l4405:	
  6403                           
  6404                           ;main.c: 81:         if(DATAEE_ReadByte(0xF0FF) == cksum()) {
  6405  006B  3183  23C9  3180   	fcall	_cksum
  6406  006E  0020               	movlb	0	; select bank0
  6407  006F  00DC               	movwf	??_main
  6408  0070  30FF               	movlw	255
  6409  0071  00D0               	movwf	DATAEE_ReadByte@bAdd
  6410  0072  30F0               	movlw	240
  6411  0073  00D1               	movwf	DATAEE_ReadByte@bAdd+1
  6412  0074  3184  24F5  3180   	fcall	_DATAEE_ReadByte
  6413  0077  0020               	movlb	0	; select bank0
  6414  0078  065C               	xorwf	??_main,w
  6415  0079  1D03               	skipz
  6416  007A  287C               	goto	u2151
  6417  007B  287D               	goto	u2150
  6418  007C                     u2151:	
  6419  007C  289E               	goto	l4409
  6420  007D                     u2150:	
  6421  007D                     l4407:	
  6422                           
  6423                           ;main.c: 82:             clkh = DATAEE_ReadByte(0xF0FF - 10 + 1);
  6424  007D  30F6               	movlw	246
  6425  007E  00D0               	movwf	DATAEE_ReadByte@bAdd
  6426  007F  30F0               	movlw	240
  6427  0080  00D1               	movwf	DATAEE_ReadByte@bAdd+1
  6428  0081  3184  24F5  3180   	fcall	_DATAEE_ReadByte
  6429  0084  0020               	movlb	0	; select bank0
  6430  0085  00DC               	movwf	??_main
  6431  0086  085C               	movf	??_main,w
  6432  0087  00CF               	movwf	_clkh	;volatile
  6433                           
  6434                           ;main.c: 83:             clkm = DATAEE_ReadByte(0xF0FF - 10 + 2);;
  6435  0088  30F7               	movlw	247
  6436  0089  00D0               	movwf	DATAEE_ReadByte@bAdd
  6437  008A  30F0               	movlw	240
  6438  008B  00D1               	movwf	DATAEE_ReadByte@bAdd+1
  6439  008C  3184  24F5  3180   	fcall	_DATAEE_ReadByte
  6440  008F  0020               	movlb	0	; select bank0
  6441  0090  00DC               	movwf	??_main
  6442  0091  085C               	movf	??_main,w
  6443  0092  00CE               	movwf	_clkm	;volatile
  6444                           
  6445                           ;main.c: 84:             nreg_pt = DATAEE_ReadByte(0xF0FF - 10 + 3);;
  6446  0093  30F8               	movlw	248
  6447  0094  00D0               	movwf	DATAEE_ReadByte@bAdd
  6448  0095  30F0               	movlw	240
  6449  0096  00D1               	movwf	DATAEE_ReadByte@bAdd+1
  6450  0097  3184  24F5  3180   	fcall	_DATAEE_ReadByte
  6451  009A  0020               	movlb	0	; select bank0
  6452  009B  00DC               	movwf	??_main
  6453  009C  085C               	movf	??_main,w
  6454  009D  00C9               	movwf	_nreg_pt
  6455  009E                     l4409:	
  6456                           
  6457                           ;main.c: 88:     reset_recv();
  6458  009E  3183  23E9  3180   	fcall	_reset_recv
  6459  00A1                     l4411:	
  6460                           
  6461                           ;main.c: 91:     DATAEE_WriteByte(0xF0FF - 10, 0xAB);
  6462  00A1  30F5               	movlw	245
  6463  00A2  0020               	movlb	0	; select bank0
  6464  00A3  00D6               	movwf	DATAEE_WriteByte@bAdd
  6465  00A4  30F0               	movlw	240
  6466  00A5  00D7               	movwf	DATAEE_WriteByte@bAdd+1
  6467  00A6  30AB               	movlw	171
  6468  00A7  00DC               	movwf	??_main
  6469  00A8  085C               	movf	??_main,w
  6470  00A9  00D8               	movwf	DATAEE_WriteByte@bData
  6471  00AA  3183  2361  3180   	fcall	_DATAEE_WriteByte
  6472  00AD                     l4413:	
  6473                           
  6474                           ;main.c: 94:     _delay((unsigned long)((16000)*(4000000/4000.0)));
  6475  00AD  3052               	movlw	82
  6476  00AE  0020               	movlb	0	; select bank0
  6477  00AF  00DD               	movwf	??_main+1
  6478  00B0  302B               	movlw	43
  6479  00B1  00DC               	movwf	??_main
  6480  00B2  3000               	movlw	0
  6481  00B3                     u2227:	
  6482  00B3  0B89               	decfsz	9,f
  6483  00B4  28B3               	goto	u2227
  6484  00B5  0BDC               	decfsz	??_main,f
  6485  00B6  28B3               	goto	u2227
  6486  00B7  0BDD               	decfsz	??_main+1,f
  6487  00B8  28B3               	goto	u2227
  6488  00B9  0000               	nop
  6489  00BA                     l4415:	
  6490                           
  6491                           ;main.c: 96:     SYSTEM_Initialize();
  6492  00BA  3185  2512  3180   	fcall	_SYSTEM_Initialize
  6493  00BD                     l4417:	
  6494                           
  6495                           ;main.c: 97:     (INTCONbits.GIE = 1);
  6496  00BD  178B               	bsf	11,7	;volatile
  6497  00BE                     l4419:	
  6498                           
  6499                           ;main.c: 98:     (INTCONbits.PEIE = 1);
  6500  00BE  170B               	bsf	11,6	;volatile
  6501  00BF                     l4421:	
  6502                           
  6503                           ;main.c: 100:     TMR1_SetInterruptHandler(h_clock);
  6504  00BF  303A               	movlw	low _h_clock
  6505  00C0  0020               	movlb	0	; select bank0
  6506  00C1  00D0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  6507  00C2  3004               	movlw	high _h_clock
  6508  00C3  00D1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  6509  00C4  3185  256A  3180   	fcall	_TMR1_SetInterruptHandler
  6510  00C7                     l4423:	
  6511                           
  6512                           ;main.c: 103:     i2c1_driver_open();
  6513  00C7  3185  251F  3180   	fcall	_i2c1_driver_open
  6514  00CA                     l4425:	
  6515                           
  6516                           ;main.c: 104:     TRISCbits.TRISC3 = 1;
  6517  00CA  0020               	movlb	0	; select bank0
  6518  00CB  1593               	bsf	19,3	;volatile
  6519  00CC                     l4427:	
  6520                           
  6521                           ;main.c: 105:     TRISCbits.TRISC4 = 1;
  6522  00CC  1613               	bsf	19,4	;volatile
  6523  00CD                     l4429:	
  6524                           
  6525                           ;main.c: 106:     WPUC3 = 1;
  6526  00CD  003E               	movlb	30	; select bank30
  6527  00CE  15CF               	bsf	79,3	;volatile
  6528  00CF                     l4431:	
  6529                           
  6530                           ;main.c: 107:     WPUC4 = 1;
  6531  00CF  164F               	bsf	79,4	;volatile
  6532                           
  6533                           ;main.c: 109:     while (running)
  6534  00D0  295B               	goto	l884
  6535  00D1                     l4433:	
  6536                           
  6537                           ;main.c: 115:         if(pmon) {
  6538  00D1  0020               	movlb	0	; select bank0
  6539  00D2  0848               	movf	_pmon,w
  6540  00D3  1903               	btfsc	3,2
  6541  00D4  28D6               	goto	u2161
  6542  00D5  28D7               	goto	u2160
  6543  00D6                     u2161:	
  6544  00D6  292E               	goto	l887
  6545  00D7                     u2160:	
  6546  00D7                     l4435:	
  6547                           
  6548                           ;main.c: 116:             (INTCONbits.GIE = 0);
  6549  00D7  138B               	bcf	11,7	;volatile
  6550  00D8                     l4437:	
  6551                           
  6552                           ;main.c: 117:             if(last5s >= pmon) {
  6553  00D8  0848               	movf	_pmon,w
  6554  00D9  024C               	subwf	_last5s,w	;volatile
  6555  00DA  1C03               	skipc
  6556  00DB  28DD               	goto	u2171
  6557  00DC  28DE               	goto	u2170
  6558  00DD                     u2171:	
  6559  00DD  292D               	goto	l888
  6560  00DE                     u2170:	
  6561  00DE                     l4439:	
  6562                           
  6563                           ;main.c: 118:                 last5s = 0;
  6564  00DE  01CC               	clrf	_last5s	;volatile
  6565  00DF                     l4441:	
  6566                           
  6567                           ;main.c: 119:                (INTCONbits.GIE = 1);
  6568  00DF  178B               	bsf	11,7	;volatile
  6569  00E0                     l4443:	
  6570                           
  6571                           ;main.c: 122:                 __nop();
  6572  00E0  0000               	nop
  6573  00E1                     l4445:	
  6574                           
  6575                           ;main.c: 123:                 temp++;
  6576  00E1  3001               	movlw	1
  6577  00E2  0020               	movlb	0	; select bank0
  6578  00E3  00DC               	movwf	??_main
  6579  00E4  085C               	movf	??_main,w
  6580  00E5  07C7               	addwf	_temp,f
  6581  00E6                     l4447:	
  6582                           
  6583                           ;main.c: 124:                 __nop();
  6584  00E6  0000               	nop
  6585  00E7                     l4449:	
  6586                           
  6587                           ;main.c: 129:                 if (temp != read_ring(0, 3) || lum != read_ring(0, 4)) {
  6588  00E7  3003               	movlw	3
  6589  00E8  0020               	movlb	0	; select bank0
  6590  00E9  00DC               	movwf	??_main
  6591  00EA  085C               	movf	??_main,w
  6592  00EB  00D4               	movwf	read_ring@subindex
  6593  00EC  3000               	movlw	0
  6594  00ED  3182  2244  3180   	fcall	_read_ring
  6595  00F0  0020               	movlb	0	; select bank0
  6596  00F1  0647               	xorwf	_temp,w
  6597  00F2  1D03               	skipz
  6598  00F3  28F5               	goto	u2181
  6599  00F4  28F6               	goto	u2180
  6600  00F5                     u2181:	
  6601  00F5  2904               	goto	l891
  6602  00F6                     u2180:	
  6603  00F6                     l4451:	
  6604  00F6  3004               	movlw	4
  6605  00F7  00DC               	movwf	??_main
  6606  00F8  085C               	movf	??_main,w
  6607  00F9  00D4               	movwf	read_ring@subindex
  6608  00FA  3000               	movlw	0
  6609  00FB  3182  2244  3180   	fcall	_read_ring
  6610  00FE  0020               	movlb	0	; select bank0
  6611  00FF  0646               	xorwf	_lum,w
  6612  0100  1903               	skipnz
  6613  0101  2903               	goto	u2191
  6614  0102  2904               	goto	u2190
  6615  0103                     u2191:	
  6616  0103  292E               	goto	l887
  6617  0104                     u2190:	
  6618  0104                     l891:	
  6619                           
  6620                           ;main.c: 130:                     (INTCONbits.GIE = 0);
  6621  0104  138B               	bcf	11,7	;volatile
  6622  0105                     l4453:	
  6623                           
  6624                           ;main.c: 131:                     ring_byte[0] = clkh;
  6625  0105  084F               	movf	_clkh,w	;volatile
  6626  0106  00DC               	movwf	??_main
  6627  0107  085C               	movf	??_main,w
  6628  0108  00BD               	movwf	_ring_byte
  6629                           
  6630                           ;main.c: 132:                     ring_byte[1] = clkm;
  6631  0109  084E               	movf	_clkm,w	;volatile
  6632  010A  00DC               	movwf	??_main
  6633  010B  085C               	movf	??_main,w
  6634  010C  00BE               	movwf	_ring_byte+1
  6635                           
  6636                           ;main.c: 133:                     ring_byte[2] = seg;
  6637  010D  084D               	movf	_seg,w	;volatile
  6638  010E  00DC               	movwf	??_main
  6639  010F  085C               	movf	??_main,w
  6640  0110  00BF               	movwf	_ring_byte+2
  6641  0111                     l4455:	
  6642                           
  6643                           ;main.c: 134:                     (INTCONbits.GIE = 1);
  6644  0111  178B               	bsf	11,7	;volatile
  6645                           
  6646                           ;main.c: 135:                     ring_byte[3] = temp;
  6647  0112  0847               	movf	_temp,w
  6648  0113  00DC               	movwf	??_main
  6649  0114  085C               	movf	??_main,w
  6650  0115  00C0               	movwf	_ring_byte+3
  6651                           
  6652                           ;main.c: 136:                     ring_byte[4] = lum;
  6653  0116  0846               	movf	_lum,w
  6654  0117  00DC               	movwf	??_main
  6655  0118  085C               	movf	??_main,w
  6656  0119  00C1               	movwf	_ring_byte+4
  6657  011A                     l4457:	
  6658                           
  6659                           ;main.c: 137:                     push_ring();
  6660  011A  3182  22B5  3180   	fcall	_push_ring
  6661  011D                     l4459:	
  6662                           
  6663                           ;main.c: 140:                     DATAEE_WriteByte(0xF0FF - 10 + 3, nreg_pt);
  6664  011D  30F8               	movlw	248
  6665  011E  0020               	movlb	0	; select bank0
  6666  011F  00D6               	movwf	DATAEE_WriteByte@bAdd
  6667  0120  30F0               	movlw	240
  6668  0121  00D7               	movwf	DATAEE_WriteByte@bAdd+1
  6669  0122  0849               	movf	_nreg_pt,w
  6670  0123  00DC               	movwf	??_main
  6671  0124  085C               	movf	??_main,w
  6672  0125  00D8               	movwf	DATAEE_WriteByte@bData
  6673  0126  3183  2361  3180   	fcall	_DATAEE_WriteByte
  6674  0129                     l4461:	
  6675                           
  6676                           ;main.c: 141:                     cksum_w();
  6677  0129  3184  24D5  3180   	fcall	_cksum_w
  6678  012C  292E               	goto	l887
  6679  012D                     l888:	
  6680                           ;main.c: 144:             else
  6681                           
  6682                           
  6683                           ;main.c: 145:                 (INTCONbits.GIE = 1);
  6684  012D  178B               	bsf	11,7	;volatile
  6685  012E                     l887:	
  6686                           ;main.c: 146:         }
  6687                           
  6688                           
  6689                           ;main.c: 149:         (INTCONbits.GIE = 0);
  6690  012E  138B               	bcf	11,7	;volatile
  6691  012F                     l4463:	
  6692                           
  6693                           ;main.c: 150:         if (last1m >= 1) {
  6694  012F  0020               	movlb	0	; select bank0
  6695  0130  084B               	movf	_last1m,w	;volatile
  6696  0131  1903               	btfsc	3,2
  6697  0132  2934               	goto	u2201
  6698  0133  2935               	goto	u2200
  6699  0134                     u2201:	
  6700  0134  295A               	goto	l893
  6701  0135                     u2200:	
  6702  0135                     l4465:	
  6703                           
  6704                           ;main.c: 152:             last1m = 0;
  6705  0135  01CB               	clrf	_last1m	;volatile
  6706  0136                     l4467:	
  6707                           
  6708                           ;main.c: 153:             aux = clkh;
  6709  0136  084F               	movf	_clkh,w	;volatile
  6710  0137  00DC               	movwf	??_main
  6711  0138  085C               	movf	??_main,w
  6712  0139  00C5               	movwf	_aux
  6713  013A                     l4469:	
  6714                           
  6715                           ;main.c: 154:             aux1 = clkm;
  6716  013A  084E               	movf	_clkm,w	;volatile
  6717  013B  00DC               	movwf	??_main
  6718  013C  085C               	movf	??_main,w
  6719  013D  00C4               	movwf	_aux1
  6720  013E                     l4471:	
  6721                           
  6722                           ;main.c: 155:             (INTCONbits.GIE = 1);
  6723  013E  178B               	bsf	11,7	;volatile
  6724  013F                     l4473:	
  6725                           
  6726                           ;main.c: 156:             DATAEE_WriteByte(0xF0FF - 10 + 1, aux);
  6727  013F  30F6               	movlw	246
  6728  0140  00D6               	movwf	DATAEE_WriteByte@bAdd
  6729  0141  30F0               	movlw	240
  6730  0142  00D7               	movwf	DATAEE_WriteByte@bAdd+1
  6731  0143  0845               	movf	_aux,w
  6732  0144  00DC               	movwf	??_main
  6733  0145  085C               	movf	??_main,w
  6734  0146  00D8               	movwf	DATAEE_WriteByte@bData
  6735  0147  3183  2361  3180   	fcall	_DATAEE_WriteByte
  6736  014A                     l4475:	
  6737                           
  6738                           ;main.c: 157:             DATAEE_WriteByte(0xF0FF - 10 + 2, aux1);
  6739  014A  30F7               	movlw	247
  6740  014B  0020               	movlb	0	; select bank0
  6741  014C  00D6               	movwf	DATAEE_WriteByte@bAdd
  6742  014D  30F0               	movlw	240
  6743  014E  00D7               	movwf	DATAEE_WriteByte@bAdd+1
  6744  014F  0844               	movf	_aux1,w
  6745  0150  00DC               	movwf	??_main
  6746  0151  085C               	movf	??_main,w
  6747  0152  00D8               	movwf	DATAEE_WriteByte@bData
  6748  0153  3183  2361  3180   	fcall	_DATAEE_WriteByte
  6749  0156                     l4477:	
  6750                           
  6751                           ;main.c: 158:             cksum_w();
  6752  0156  3184  24D5  3180   	fcall	_cksum_w
  6753                           
  6754                           ;main.c: 159:         }
  6755  0159  295B               	goto	l884
  6756  015A                     l893:	
  6757                           ;main.c: 160:         else
  6758                           
  6759                           
  6760                           ;main.c: 161:             (INTCONbits.GIE = 1);
  6761  015A  178B               	bsf	11,7	;volatile
  6762  015B                     l884:	
  6763                           ;main.c: 162:     }
  6764                           
  6765                           
  6766                           ;main.c: 109:     while (running)
  6767  015B  187D               	btfsc	_running/(0+8),_running& (0+7)
  6768  015C  295E               	goto	u2211
  6769  015D  295F               	goto	u2210
  6770  015E                     u2211:	
  6771  015E  28D1               	goto	l4433
  6772  015F                     u2210:	
  6773  015F                     l896:	
  6774  015F  3180  2836         	ljmp	start
  6775  0161                     __end_of_main:	
  6776                           
  6777                           	psect	text1
  6778  03E9                     __ptext1:	
  6779 ;; *************** function _reset_recv *****************
  6780 ;; Defined at:
  6781 ;;		line 165 in file "main.c"
  6782 ;; Parameters:    Size  Location     Type
  6783 ;;		None
  6784 ;; Auto vars:     Size  Location     Type
  6785 ;;  i               2   10[BANK0 ] unsigned int 
  6786 ;; Return value:  Size  Location     Type
  6787 ;;                  1    wreg      void 
  6788 ;; Registers used:
  6789 ;;		wreg, status,2, status,0, pclath, cstack
  6790 ;; Tracked objects:
  6791 ;;		On entry : 0/0
  6792 ;;		On exit  : 0/0
  6793 ;;		Unchanged: 0/0
  6794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6796 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6798 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6799 ;;Total ram usage:        2 bytes
  6800 ;; Hardware stack levels used:    1
  6801 ;; Hardware stack levels required when called:    7
  6802 ;; This function calls:
  6803 ;;		_DATAEE_WriteByte
  6804 ;; This function is called by:
  6805 ;;		_main
  6806 ;; This function uses a non-reentrant model
  6807 ;;
  6808                           
  6809                           
  6810                           ;psect for function _reset_recv
  6811  03E9                     _reset_recv:	
  6812  03E9                     l4211:	
  6813                           ;incstack = 0
  6814                           ; Regs used in _reset_recv: [wreg+status,2+status,0+pclath+cstack]
  6815                           
  6816                           
  6817                           ;main.c: 166:     for(unsigned int i = 0xF0FF - 10; i <= 0xF0FF; i ++)
  6818  03E9  30F5               	movlw	245
  6819  03EA  0020               	movlb	0	; select bank0
  6820  03EB  00DA               	movwf	reset_recv@i
  6821  03EC  30F0               	movlw	240
  6822  03ED  00DB               	movwf	reset_recv@i+1
  6823  03EE                     l4215:	
  6824                           
  6825                           ;main.c: 167:         DATAEE_WriteByte(i, 0);
  6826  03EE  085B               	movf	reset_recv@i+1,w
  6827  03EF  00D7               	movwf	DATAEE_WriteByte@bAdd+1
  6828  03F0  085A               	movf	reset_recv@i,w
  6829  03F1  00D6               	movwf	DATAEE_WriteByte@bAdd
  6830  03F2  01D8               	clrf	DATAEE_WriteByte@bData
  6831  03F3  3183  2361  3183   	fcall	_DATAEE_WriteByte
  6832  03F6                     l4217:	
  6833  03F6  3001               	movlw	1
  6834  03F7  0020               	movlb	0	; select bank0
  6835  03F8  07DA               	addwf	reset_recv@i,f
  6836  03F9  3000               	movlw	0
  6837  03FA  3DDB               	addwfc	reset_recv@i+1,f
  6838  03FB                     l4219:	
  6839  03FB  30F1               	movlw	241
  6840  03FC  025B               	subwf	reset_recv@i+1,w
  6841  03FD  3000               	movlw	0
  6842  03FE  1903               	skipnz
  6843  03FF  025A               	subwf	reset_recv@i,w
  6844  0400  1C03               	skipc
  6845  0401  2C03               	goto	u1841
  6846  0402  2C04               	goto	u1840
  6847  0403                     u1841:	
  6848  0403  2BEE               	goto	l4215
  6849  0404                     u1840:	
  6850  0404                     l901:	
  6851  0404  0008               	return
  6852  0405                     __end_of_reset_recv:	
  6853                           
  6854                           	psect	text2
  6855  0244                     __ptext2:	
  6856 ;; *************** function _read_ring *****************
  6857 ;; Defined at:
  6858 ;;		line 184 in file "main.c"
  6859 ;; Parameters:    Size  Location     Type
  6860 ;;  index           1    wreg     unsigned char 
  6861 ;;  subindex        1    4[BANK0 ] unsigned char 
  6862 ;; Auto vars:     Size  Location     Type
  6863 ;;  index           1    8[BANK0 ] unsigned char 
  6864 ;;  absindex        1    9[BANK0 ] unsigned char 
  6865 ;;  i               1    7[BANK0 ] unsigned char 
  6866 ;; Return value:  Size  Location     Type
  6867 ;;                  1    wreg      unsigned char 
  6868 ;; Registers used:
  6869 ;;		wreg, status,2, status,0, pclath, cstack
  6870 ;; Tracked objects:
  6871 ;;		On entry : 0/0
  6872 ;;		On exit  : 0/0
  6873 ;;		Unchanged: 0/0
  6874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6875 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6876 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6877 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6878 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6879 ;;Total ram usage:        6 bytes
  6880 ;; Hardware stack levels used:    1
  6881 ;; Hardware stack levels required when called:    7
  6882 ;; This function calls:
  6883 ;;		_DATAEE_ReadByte
  6884 ;;		___bmul
  6885 ;; This function is called by:
  6886 ;;		_main
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           
  6890                           
  6891                           ;psect for function _read_ring
  6892  0244                     _read_ring:	
  6893                           
  6894                           ;incstack = 0
  6895                           ; Regs used in _read_ring: [wreg+status,2+status,0+pclath+cstack]
  6896                           ;read_ring@index stored from wreg
  6897  0244  0020               	movlb	0	; select bank0
  6898  0245  00D8               	movwf	read_ring@index
  6899  0246                     l4221:	
  6900  0246                     l4223:	
  6901                           
  6902                           ;main.c: 189:     if(index <= nreg && nreg_init) {
  6903  0246  0858               	movf	read_ring@index,w
  6904  0247  024A               	subwf	_nreg,w
  6905  0248  1C03               	skipc
  6906  0249  2A4B               	goto	u1851
  6907  024A  2A4C               	goto	u1850
  6908  024B                     u1851:	
  6909  024B  2A75               	goto	l4235
  6910  024C                     u1850:	
  6911  024C                     l4225:	
  6912  024C  1CFD               	btfss	_nreg_init/(0+8),_nreg_init& (0+7)
  6913  024D  2A4F               	goto	u1861
  6914  024E  2A50               	goto	u1860
  6915  024F                     u1861:	
  6916  024F  2A75               	goto	l4235
  6917  0250                     u1860:	
  6918  0250                     l4227:	
  6919                           
  6920                           ;main.c: 190:         absindex = 5 * index + subindex;
  6921  0250  3005               	movlw	5
  6922  0251  00D5               	movwf	??_read_ring
  6923  0252  0855               	movf	??_read_ring,w
  6924  0253  00D0               	movwf	___bmul@multiplicand
  6925  0254  0858               	movf	read_ring@index,w
  6926  0255  3184  2451  3182   	fcall	___bmul
  6927  0258  0020               	movlb	0	; select bank0
  6928  0259  0754               	addwf	read_ring@subindex,w
  6929  025A  00D6               	movwf	??_read_ring+1
  6930  025B  0856               	movf	??_read_ring+1,w
  6931  025C  00D9               	movwf	read_ring@absindex
  6932  025D                     l4229:	
  6933                           
  6934                           ;main.c: 191:         if(absindex <= nreg_pt)
  6935  025D  0859               	movf	read_ring@absindex,w
  6936  025E  0249               	subwf	_nreg_pt,w
  6937  025F  1C03               	skipc
  6938  0260  2A62               	goto	u1871
  6939  0261  2A63               	goto	u1870
  6940  0262                     u1871:	
  6941  0262  2A6A               	goto	l4233
  6942  0263                     u1870:	
  6943  0263                     l4231:	
  6944                           
  6945                           ;main.c: 192:             i = nreg_pt - 5 + absindex;
  6946  0263  0849               	movf	_nreg_pt,w
  6947  0264  0759               	addwf	read_ring@absindex,w
  6948  0265  3EFB               	addlw	251
  6949  0266  00D5               	movwf	??_read_ring
  6950  0267  0855               	movf	??_read_ring,w
  6951  0268  00D7               	movwf	read_ring@i
  6952  0269  2A77               	goto	l4239
  6953  026A                     l4233:	
  6954                           
  6955                           ;main.c: 194:             i = nreg - (nreg_pt - 5 + absindex);
  6956  026A  0349               	decf	_nreg_pt,w
  6957  026B  3AFF               	xorlw	255
  6958  026C  00D5               	movwf	??_read_ring
  6959  026D  0859               	movf	read_ring@absindex,w
  6960  026E  0255               	subwf	??_read_ring,w
  6961  026F  074A               	addwf	_nreg,w
  6962  0270  3E05               	addlw	5
  6963  0271  00D6               	movwf	??_read_ring+1
  6964  0272  0856               	movf	??_read_ring+1,w
  6965  0273  00D7               	movwf	read_ring@i
  6966  0274  2A77               	goto	l4239
  6967  0275                     l4235:	
  6968                           
  6969                           ;main.c: 197:         return 0;
  6970  0275  3000               	movlw	0
  6971  0276  2A81               	goto	l916
  6972  0277                     l4239:	
  6973                           
  6974                           ;main.c: 199:     return DATAEE_ReadByte(0xF000 + i);
  6975  0277  0857               	movf	read_ring@i,w
  6976  0278  3E00               	addlw	0
  6977  0279  00D0               	movwf	DATAEE_ReadByte@bAdd
  6978  027A  30F0               	movlw	240
  6979  027B  1803               	skipnc
  6980  027C  30F1               	movlw	241
  6981  027D  00D1               	movwf	DATAEE_ReadByte@bAdd+1
  6982  027E  3184  24F5  3182   	fcall	_DATAEE_ReadByte
  6983  0281                     l916:	
  6984  0281  0008               	return
  6985  0282                     __end_of_read_ring:	
  6986                           
  6987                           	psect	text3
  6988  0451                     __ptext3:	
  6989 ;; *************** function ___bmul *****************
  6990 ;; Defined at:
  6991 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul8.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;  multiplier      1    wreg     unsigned char 
  6994 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  6995 ;; Auto vars:     Size  Location     Type
  6996 ;;  multiplier      1    3[BANK0 ] unsigned char 
  6997 ;;  product         1    2[BANK0 ] unsigned char 
  6998 ;; Return value:  Size  Location     Type
  6999 ;;                  1    wreg      unsigned char 
  7000 ;; Registers used:
  7001 ;;		wreg, status,2, status,0
  7002 ;; Tracked objects:
  7003 ;;		On entry : 0/0
  7004 ;;		On exit  : 0/0
  7005 ;;		Unchanged: 0/0
  7006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7007 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7008 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7009 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7010 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7011 ;;Total ram usage:        4 bytes
  7012 ;; Hardware stack levels used:    1
  7013 ;; Hardware stack levels required when called:    6
  7014 ;; This function calls:
  7015 ;;		Nothing
  7016 ;; This function is called by:
  7017 ;;		_read_ring
  7018 ;; This function uses a non-reentrant model
  7019 ;;
  7020                           
  7021                           
  7022                           ;psect for function ___bmul
  7023  0451                     ___bmul:	
  7024                           
  7025                           ;incstack = 0
  7026                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7027                           ;___bmul@multiplier stored from wreg
  7028  0451  0020               	movlb	0	; select bank0
  7029  0452  00D3               	movwf	___bmul@multiplier
  7030  0453                     l3357:	
  7031  0453  01D2               	clrf	___bmul@product
  7032  0454                     l3359:	
  7033  0454  1C53               	btfss	___bmul@multiplier,0
  7034  0455  2C57               	goto	u1251
  7035  0456  2C58               	goto	u1250
  7036  0457                     u1251:	
  7037  0457  2C5C               	goto	l3363
  7038  0458                     u1250:	
  7039  0458                     l3361:	
  7040  0458  0850               	movf	___bmul@multiplicand,w
  7041  0459  00D1               	movwf	??___bmul
  7042  045A  0851               	movf	??___bmul,w
  7043  045B  07D2               	addwf	___bmul@product,f
  7044  045C                     l3363:	
  7045  045C  1003               	clrc
  7046  045D  0DD0               	rlf	___bmul@multiplicand,f
  7047  045E                     l3365:	
  7048  045E  1003               	clrc
  7049  045F  0CD3               	rrf	___bmul@multiplier,f
  7050  0460  0853               	movf	___bmul@multiplier,w
  7051  0461  1D03               	btfss	3,2
  7052  0462  2C64               	goto	u1261
  7053  0463  2C65               	goto	u1260
  7054  0464                     u1261:	
  7055  0464  2C54               	goto	l3359
  7056  0465                     u1260:	
  7057  0465                     l3367:	
  7058  0465  0852               	movf	___bmul@product,w
  7059  0466                     l1183:	
  7060  0466  0008               	return
  7061  0467                     __end_of___bmul:	
  7062                           
  7063                           	psect	text4
  7064  02B5                     __ptext4:	
  7065 ;; *************** function _push_ring *****************
  7066 ;; Defined at:
  7067 ;;		line 202 in file "main.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;		None
  7070 ;; Auto vars:     Size  Location     Type
  7071 ;;  i               1   11[BANK0 ] unsigned char 
  7072 ;; Return value:  Size  Location     Type
  7073 ;;                  1    wreg      void 
  7074 ;; Registers used:
  7075 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7076 ;; Tracked objects:
  7077 ;;		On entry : 0/0
  7078 ;;		On exit  : 0/0
  7079 ;;		Unchanged: 0/0
  7080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7082 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7083 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7084 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7085 ;;Total ram usage:        2 bytes
  7086 ;; Hardware stack levels used:    1
  7087 ;; Hardware stack levels required when called:    7
  7088 ;; This function calls:
  7089 ;;		_DATAEE_WriteByte
  7090 ;; This function is called by:
  7091 ;;		_main
  7092 ;; This function uses a non-reentrant model
  7093 ;;
  7094                           
  7095                           
  7096                           ;psect for function _push_ring
  7097  02B5                     _push_ring:	
  7098  02B5                     l4243:	
  7099                           ;incstack = 0
  7100                           ; Regs used in _push_ring: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7101                           
  7102  02B5  18FD               	btfsc	_nreg_init/(0+8),_nreg_init& (0+7)
  7103  02B6  2AB8               	goto	u1881
  7104  02B7  2AB9               	goto	u1880
  7105  02B8                     u1881:	
  7106  02B8  2ABA               	goto	l4247
  7107  02B9                     u1880:	
  7108  02B9                     l4245:	
  7109  02B9  14FD               	bsf	_nreg_init/(0+8),_nreg_init& (0+7)
  7110  02BA                     l4247:	
  7111                           
  7112                           ;main.c: 204:     for(unsigned char i = 0; i < 5; i++) {
  7113  02BA  0020               	movlb	0	; select bank0
  7114  02BB  01DB               	clrf	push_ring@i
  7115  02BC                     l4253:	
  7116                           
  7117                           ;main.c: 205:         if(nreg_pt >= nreg) nreg_pt = 0;
  7118  02BC  084A               	movf	_nreg,w
  7119  02BD  0249               	subwf	_nreg_pt,w
  7120  02BE  1C03               	skipc
  7121  02BF  2AC1               	goto	u1891
  7122  02C0  2AC2               	goto	u1890
  7123  02C1                     u1891:	
  7124  02C1  2AC3               	goto	l4257
  7125  02C2                     u1890:	
  7126  02C2                     l4255:	
  7127  02C2  01C9               	clrf	_nreg_pt
  7128  02C3                     l4257:	
  7129                           
  7130                           ;main.c: 206:         DATAEE_WriteByte(0xF000 + nreg_pt, ring_byte[i]);
  7131  02C3  0849               	movf	_nreg_pt,w
  7132  02C4  3E00               	addlw	0
  7133  02C5  00D6               	movwf	DATAEE_WriteByte@bAdd
  7134  02C6  30F0               	movlw	240
  7135  02C7  1803               	skipnc
  7136  02C8  30F1               	movlw	241
  7137  02C9  00D7               	movwf	DATAEE_WriteByte@bAdd+1
  7138  02CA  085B               	movf	push_ring@i,w
  7139  02CB  3E3D               	addlw	(low (_ring_byte| 0))& (0+255)
  7140  02CC  0086               	movwf	6
  7141  02CD  0187               	clrf	7
  7142  02CE  0801               	movf	1,w
  7143  02CF  00DA               	movwf	??_push_ring
  7144  02D0  085A               	movf	??_push_ring,w
  7145  02D1  00D8               	movwf	DATAEE_WriteByte@bData
  7146  02D2  3183  2361  3182   	fcall	_DATAEE_WriteByte
  7147  02D5                     l4259:	
  7148                           
  7149                           ;main.c: 207:         nreg_pt ++;
  7150  02D5  3001               	movlw	1
  7151  02D6  0020               	movlb	0	; select bank0
  7152  02D7  00DA               	movwf	??_push_ring
  7153  02D8  085A               	movf	??_push_ring,w
  7154  02D9  07C9               	addwf	_nreg_pt,f
  7155  02DA                     l4261:	
  7156                           
  7157                           ;main.c: 208:     }
  7158  02DA  3001               	movlw	1
  7159  02DB  00DA               	movwf	??_push_ring
  7160  02DC  085A               	movf	??_push_ring,w
  7161  02DD  07DB               	addwf	push_ring@i,f
  7162  02DE                     l4263:	
  7163  02DE  3005               	movlw	5
  7164  02DF  025B               	subwf	push_ring@i,w
  7165  02E0  1C03               	skipc
  7166  02E1  2AE3               	goto	u1901
  7167  02E2  2AE4               	goto	u1900
  7168  02E3                     u1901:	
  7169  02E3  2ABC               	goto	l4253
  7170  02E4                     u1900:	
  7171  02E4                     l923:	
  7172  02E4  0008               	return
  7173  02E5                     __end_of_push_ring:	
  7174                           
  7175                           	psect	text5
  7176  051F                     __ptext5:	
  7177 ;; *************** function _i2c1_driver_open *****************
  7178 ;; Defined at:
  7179 ;;		line 84 in file "mcc_generated_files/i2c1_driver.c"
  7180 ;; Parameters:    Size  Location     Type
  7181 ;;		None
  7182 ;; Auto vars:     Size  Location     Type
  7183 ;;		None
  7184 ;; Return value:  Size  Location     Type
  7185 ;;		None               void
  7186 ;; Registers used:
  7187 ;;		wreg, status,2
  7188 ;; Tracked objects:
  7189 ;;		On entry : 0/0
  7190 ;;		On exit  : 0/0
  7191 ;;		Unchanged: 0/0
  7192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7197 ;;Total ram usage:        0 bytes
  7198 ;; Hardware stack levels used:    1
  7199 ;; Hardware stack levels required when called:    6
  7200 ;; This function calls:
  7201 ;;		Nothing
  7202 ;; This function is called by:
  7203 ;;		_main
  7204 ;;		_i2c_open
  7205 ;; This function uses a non-reentrant model
  7206 ;;
  7207                           
  7208                           
  7209                           ;psect for function _i2c1_driver_open
  7210  051F                     _i2c1_driver_open:	
  7211  051F                     l4173:	
  7212                           ;incstack = 0
  7213                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
  7214                           
  7215  051F  0023               	movlb	3	; select bank3
  7216  0520  1A90               	btfsc	16,5	;volatile
  7217  0521  2D23               	goto	u1811
  7218  0522  2D24               	goto	u1810
  7219  0523                     u1811:	
  7220  0523  2D2A               	goto	l651
  7221  0524                     u1810:	
  7222  0524                     l4175:	
  7223  0524  018F               	clrf	15	;volatile
  7224  0525                     l4177:	
  7225  0525  3028               	movlw	40
  7226  0526  0090               	movwf	16	;volatile
  7227  0527                     l4179:	
  7228  0527  0191               	clrf	17	;volatile
  7229  0528  3009               	movlw	9
  7230  0529  008D               	movwf	13	;volatile
  7231  052A                     l651:	
  7232  052A  0008               	return
  7233  052B                     __end_of_i2c1_driver_open:	
  7234                           
  7235                           	psect	text6
  7236  04D5                     __ptext6:	
  7237 ;; *************** function _cksum_w *****************
  7238 ;; Defined at:
  7239 ;;		line 170 in file "main.c"
  7240 ;; Parameters:    Size  Location     Type
  7241 ;;		None
  7242 ;; Auto vars:     Size  Location     Type
  7243 ;;		None
  7244 ;; Return value:  Size  Location     Type
  7245 ;;                  1    wreg      void 
  7246 ;; Registers used:
  7247 ;;		wreg, status,2, status,0, pclath, cstack
  7248 ;; Tracked objects:
  7249 ;;		On entry : 0/0
  7250 ;;		On exit  : 0/0
  7251 ;;		Unchanged: 0/0
  7252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7255 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7256 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7257 ;;Total ram usage:        1 bytes
  7258 ;; Hardware stack levels used:    1
  7259 ;; Hardware stack levels required when called:    8
  7260 ;; This function calls:
  7261 ;;		_DATAEE_WriteByte
  7262 ;;		_cksum
  7263 ;; This function is called by:
  7264 ;;		_main
  7265 ;; This function uses a non-reentrant model
  7266 ;;
  7267                           
  7268                           
  7269                           ;psect for function _cksum_w
  7270  04D5                     _cksum_w:	
  7271  04D5                     l4265:	
  7272                           ;incstack = 0
  7273                           ; Regs used in _cksum_w: [wreg+status,2+status,0+pclath+cstack]
  7274                           
  7275                           
  7276                           ;main.c: 172:     DATAEE_WriteByte(0xF0FF, cksum());
  7277  04D5  30FF               	movlw	255
  7278  04D6  0020               	movlb	0	; select bank0
  7279  04D7  00D6               	movwf	DATAEE_WriteByte@bAdd
  7280  04D8  30F0               	movlw	240
  7281  04D9  00D7               	movwf	DATAEE_WriteByte@bAdd+1
  7282  04DA  3183  23C9  3184   	fcall	_cksum
  7283  04DD  0020               	movlb	0	; select bank0
  7284  04DE  00DA               	movwf	??_cksum_w
  7285  04DF  085A               	movf	??_cksum_w,w
  7286  04E0  00D8               	movwf	DATAEE_WriteByte@bData
  7287  04E1  3183  2361  3184   	fcall	_DATAEE_WriteByte
  7288  04E4                     l904:	
  7289  04E4  0008               	return
  7290  04E5                     __end_of_cksum_w:	
  7291                           
  7292                           	psect	text7
  7293  03C9                     __ptext7:	
  7294 ;; *************** function _cksum *****************
  7295 ;; Defined at:
  7296 ;;		line 175 in file "main.c"
  7297 ;; Parameters:    Size  Location     Type
  7298 ;;		None
  7299 ;; Auto vars:     Size  Location     Type
  7300 ;;  i               2    4[BANK0 ] unsigned int 
  7301 ;;  res             1    3[BANK0 ] unsigned char 
  7302 ;; Return value:  Size  Location     Type
  7303 ;;                  1    wreg      unsigned char 
  7304 ;; Registers used:
  7305 ;;		wreg, status,2, status,0, pclath, cstack
  7306 ;; Tracked objects:
  7307 ;;		On entry : 0/0
  7308 ;;		On exit  : 0/0
  7309 ;;		Unchanged: 0/0
  7310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7312 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7313 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7314 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7315 ;;Total ram usage:        4 bytes
  7316 ;; Hardware stack levels used:    1
  7317 ;; Hardware stack levels required when called:    7
  7318 ;; This function calls:
  7319 ;;		_DATAEE_ReadByte
  7320 ;; This function is called by:
  7321 ;;		_main
  7322 ;;		_cksum_w
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326                           
  7327                           ;psect for function _cksum
  7328  03C9                     _cksum:	
  7329  03C9                     l4119:	
  7330                           ;incstack = 0
  7331                           ; Regs used in _cksum: [wreg+status,2+status,0+pclath+cstack]
  7332                           
  7333                           
  7334                           ;main.c: 177:     unsigned char res = 0;
  7335  03C9  0020               	movlb	0	; select bank0
  7336  03CA  01D3               	clrf	cksum@res
  7337  03CB                     l4121:	
  7338                           
  7339                           ;main.c: 178:     for(unsigned int i = 0xF0FF - 10; i < 0xF0FF; i ++) {
  7340  03CB  30F5               	movlw	245
  7341  03CC  00D4               	movwf	cksum@i
  7342  03CD  30F0               	movlw	240
  7343  03CE  00D5               	movwf	cksum@i+1
  7344  03CF                     l4127:	
  7345                           
  7346                           ;main.c: 179:         res += DATAEE_ReadByte(i);
  7347  03CF  0855               	movf	cksum@i+1,w
  7348  03D0  00D1               	movwf	DATAEE_ReadByte@bAdd+1
  7349  03D1  0854               	movf	cksum@i,w
  7350  03D2  00D0               	movwf	DATAEE_ReadByte@bAdd
  7351  03D3  3184  24F5  3183   	fcall	_DATAEE_ReadByte
  7352  03D6  0020               	movlb	0	; select bank0
  7353  03D7  00D2               	movwf	??_cksum
  7354  03D8  0852               	movf	??_cksum,w
  7355  03D9  07D3               	addwf	cksum@res,f
  7356  03DA                     l4129:	
  7357                           
  7358                           ;main.c: 180:     }
  7359  03DA  3001               	movlw	1
  7360  03DB  07D4               	addwf	cksum@i,f
  7361  03DC  3000               	movlw	0
  7362  03DD  3DD5               	addwfc	cksum@i+1,f
  7363  03DE                     l4131:	
  7364  03DE  30F0               	movlw	240
  7365  03DF  0255               	subwf	cksum@i+1,w
  7366  03E0  30FF               	movlw	255
  7367  03E1  1903               	skipnz
  7368  03E2  0254               	subwf	cksum@i,w
  7369  03E3  1C03               	skipc
  7370  03E4  2BE6               	goto	u1791
  7371  03E5  2BE7               	goto	u1790
  7372  03E6                     u1791:	
  7373  03E6  2BCF               	goto	l4127
  7374  03E7                     u1790:	
  7375  03E7                     l4133:	
  7376                           
  7377                           ;main.c: 181:     return res;
  7378  03E7  0853               	movf	cksum@res,w
  7379  03E8                     l909:	
  7380  03E8  0008               	return
  7381  03E9                     __end_of_cksum:	
  7382                           
  7383                           	psect	text8
  7384  04F5                     __ptext8:	
  7385 ;; *************** function _DATAEE_ReadByte *****************
  7386 ;; Defined at:
  7387 ;;		line 202 in file "mcc_generated_files/memory.c"
  7388 ;; Parameters:    Size  Location     Type
  7389 ;;  bAdd            2    0[BANK0 ] unsigned short 
  7390 ;; Auto vars:     Size  Location     Type
  7391 ;;		None
  7392 ;; Return value:  Size  Location     Type
  7393 ;;                  1    wreg      unsigned char 
  7394 ;; Registers used:
  7395 ;;		wreg, status,2
  7396 ;; Tracked objects:
  7397 ;;		On entry : 0/0
  7398 ;;		On exit  : 0/0
  7399 ;;		Unchanged: 0/0
  7400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7401 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7404 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7405 ;;Total ram usage:        2 bytes
  7406 ;; Hardware stack levels used:    1
  7407 ;; Hardware stack levels required when called:    6
  7408 ;; This function calls:
  7409 ;;		Nothing
  7410 ;; This function is called by:
  7411 ;;		_main
  7412 ;;		_cksum
  7413 ;;		_read_ring
  7414 ;; This function uses a non-reentrant model
  7415 ;;
  7416                           
  7417                           
  7418                           ;psect for function _DATAEE_ReadByte
  7419  04F5                     _DATAEE_ReadByte:	
  7420  04F5                     l3877:	
  7421                           ;incstack = 0
  7422                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
  7423                           
  7424                           
  7425                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
  7426  04F5  0020               	movlb	0	; select bank0
  7427  04F6  0851               	movf	DATAEE_ReadByte@bAdd+1,w
  7428  04F7  0030               	movlb	16	; select bank16
  7429  04F8  009B               	movwf	27	;volatile
  7430  04F9                     l3879:	
  7431                           
  7432                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
  7433  04F9  0020               	movlb	0	; select bank0
  7434  04FA  0850               	movf	DATAEE_ReadByte@bAdd,w
  7435  04FB  0030               	movlb	16	; select bank16
  7436  04FC  009A               	movwf	26	;volatile
  7437  04FD                     l3881:	
  7438                           
  7439                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
  7440  04FD  171E               	bsf	30,6	;volsfr
  7441  04FE                     l3883:	
  7442                           
  7443                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
  7444  04FE  141E               	bsf	30,0	;volsfr
  7445  04FF                     l3885:	
  7446                           
  7447                           ;mcc_generated_files/memory.c: 208:     __nop();
  7448  04FF  0000               	nop
  7449  0500                     l3887:	
  7450                           
  7451                           ;mcc_generated_files/memory.c: 209:     __nop();
  7452  0500  0000               	nop
  7453  0501                     l3889:	
  7454                           
  7455                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
  7456  0501  0030               	movlb	16	; select bank16
  7457  0502  081C               	movf	28,w	;volatile
  7458  0503                     l782:	
  7459  0503  0008               	return
  7460  0504                     __end_of_DATAEE_ReadByte:	
  7461                           
  7462                           	psect	text9
  7463  0361                     __ptext9:	
  7464 ;; *************** function _DATAEE_WriteByte *****************
  7465 ;; Defined at:
  7466 ;;		line 180 in file "mcc_generated_files/memory.c"
  7467 ;; Parameters:    Size  Location     Type
  7468 ;;  bAdd            2    6[BANK0 ] unsigned short 
  7469 ;;  bData           1    8[BANK0 ] unsigned char 
  7470 ;; Auto vars:     Size  Location     Type
  7471 ;;  GIEBitValue     1    9[BANK0 ] unsigned char 
  7472 ;; Return value:  Size  Location     Type
  7473 ;;                  1    wreg      void 
  7474 ;; Registers used:
  7475 ;;		wreg, status,2, status,0
  7476 ;; Tracked objects:
  7477 ;;		On entry : 0/0
  7478 ;;		On exit  : 0/0
  7479 ;;		Unchanged: 0/0
  7480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7481 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7482 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7484 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7485 ;;Total ram usage:        4 bytes
  7486 ;; Hardware stack levels used:    1
  7487 ;; Hardware stack levels required when called:    6
  7488 ;; This function calls:
  7489 ;;		Nothing
  7490 ;; This function is called by:
  7491 ;;		_main
  7492 ;;		_reset_recv
  7493 ;;		_cksum_w
  7494 ;;		_push_ring
  7495 ;; This function uses a non-reentrant model
  7496 ;;
  7497                           
  7498                           
  7499                           ;psect for function _DATAEE_WriteByte
  7500  0361                     _DATAEE_WriteByte:	
  7501  0361                     l4099:	
  7502                           ;incstack = 0
  7503                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
  7504                           
  7505                           
  7506                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
  7507  0361  3000               	movlw	0
  7508  0362  1B8B               	btfsc	11,7	;volatile
  7509  0363  3001               	movlw	1
  7510  0364  0020               	movlb	0	; select bank0
  7511  0365  00D9               	movwf	DATAEE_WriteByte@GIEBitValue
  7512                           
  7513                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
  7514  0366  0857               	movf	DATAEE_WriteByte@bAdd+1,w
  7515  0367  0030               	movlb	16	; select bank16
  7516  0368  009B               	movwf	27	;volatile
  7517  0369                     l4101:	
  7518                           
  7519                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
  7520  0369  0020               	movlb	0	; select bank0
  7521  036A  0856               	movf	DATAEE_WriteByte@bAdd,w
  7522  036B  0030               	movlb	16	; select bank16
  7523  036C  009A               	movwf	26	;volatile
  7524  036D                     l4103:	
  7525                           
  7526                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
  7527  036D  0020               	movlb	0	; select bank0
  7528  036E  0858               	movf	DATAEE_WriteByte@bData,w
  7529  036F  0030               	movlb	16	; select bank16
  7530  0370  009C               	movwf	28	;volatile
  7531  0371                     l4105:	
  7532                           
  7533                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
  7534  0371  171E               	bsf	30,6	;volsfr
  7535  0372                     l4107:	
  7536                           
  7537                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
  7538  0372  151E               	bsf	30,2	;volsfr
  7539  0373                     l4109:	
  7540                           
  7541                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
  7542  0373  138B               	bcf	11,7	;volatile
  7543  0374                     l4111:	
  7544                           
  7545                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
  7546  0374  3055               	movlw	85
  7547  0375  009F               	movwf	31	;volsfr
  7548  0376                     l4113:	
  7549                           
  7550                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
  7551  0376  30AA               	movlw	170
  7552  0377  009F               	movwf	31	;volsfr
  7553  0378                     l4115:	
  7554                           
  7555                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
  7556  0378  149E               	bsf	30,1	;volsfr
  7557  0379                     l776:	
  7558                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
  7559                           
  7560                           
  7561                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
  7562  0379  189E               	btfsc	30,1	;volsfr
  7563  037A  2B7C               	goto	u1781
  7564  037B  2B7D               	goto	u1780
  7565  037C                     u1781:	
  7566  037C  2B79               	goto	l776
  7567  037D                     u1780:	
  7568  037D                     l778:	
  7569                           
  7570                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
  7571  037D  111E               	bcf	30,2	;volsfr
  7572  037E                     l4117:	
  7573                           
  7574                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
  7575  037E  0020               	movlb	0	; select bank0
  7576  037F  0C59               	rrf	DATAEE_WriteByte@GIEBitValue,w
  7577  0380  1C03               	skipc
  7578  0381  138B               	bcf	11,7	;volatile
  7579  0382  1803               	skipnc
  7580  0383  178B               	bsf	11,7	;volatile
  7581  0384                     l779:	
  7582  0384  0008               	return
  7583  0385                     __end_of_DATAEE_WriteByte:	
  7584                           
  7585                           	psect	text10
  7586  0512                     __ptext10:	
  7587 ;; *************** function _SYSTEM_Initialize *****************
  7588 ;; Defined at:
  7589 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7590 ;; Parameters:    Size  Location     Type
  7591 ;;		None
  7592 ;; Auto vars:     Size  Location     Type
  7593 ;;		None
  7594 ;; Return value:  Size  Location     Type
  7595 ;;                  1    wreg      void 
  7596 ;; Registers used:
  7597 ;;		wreg, status,2, status,0, pclath, cstack
  7598 ;; Tracked objects:
  7599 ;;		On entry : 0/0
  7600 ;;		On exit  : 0/0
  7601 ;;		Unchanged: 0/0
  7602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7607 ;;Total ram usage:        0 bytes
  7608 ;; Hardware stack levels used:    1
  7609 ;; Hardware stack levels required when called:    8
  7610 ;; This function calls:
  7611 ;;		_OSCILLATOR_Initialize
  7612 ;;		_PIN_MANAGER_Initialize
  7613 ;;		_PMD_Initialize
  7614 ;;		_TMR1_Initialize
  7615 ;; This function is called by:
  7616 ;;		_main
  7617 ;; This function uses a non-reentrant model
  7618 ;;
  7619                           
  7620                           
  7621                           ;psect for function _SYSTEM_Initialize
  7622  0512                     _SYSTEM_Initialize:	
  7623  0512                     l4203:	
  7624                           ;incstack = 0
  7625                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7626                           
  7627                           
  7628                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  7629  0512  3185  253D  3185   	fcall	_PMD_Initialize
  7630  0515                     l4205:	
  7631                           
  7632                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  7633  0515  3181  21FF  3185   	fcall	_PIN_MANAGER_Initialize
  7634  0518                     l4207:	
  7635                           
  7636                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  7637  0518  3185  252B  3185   	fcall	_OSCILLATOR_Initialize
  7638  051B                     l4209:	
  7639                           
  7640                           ;mcc_generated_files/mcc.c: 55:     TMR1_Initialize();
  7641  051B  3184  2405  3185   	fcall	_TMR1_Initialize
  7642  051E                     l500:	
  7643  051E  0008               	return
  7644  051F                     __end_of_SYSTEM_Initialize:	
  7645                           
  7646                           	psect	text11
  7647  0405                     __ptext11:	
  7648 ;; *************** function _TMR1_Initialize *****************
  7649 ;; Defined at:
  7650 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  7651 ;; Parameters:    Size  Location     Type
  7652 ;;		None
  7653 ;; Auto vars:     Size  Location     Type
  7654 ;;		None
  7655 ;; Return value:  Size  Location     Type
  7656 ;;                  1    wreg      void 
  7657 ;; Registers used:
  7658 ;;		wreg, status,2, status,0, pclath, cstack
  7659 ;; Tracked objects:
  7660 ;;		On entry : 0/0
  7661 ;;		On exit  : 0/0
  7662 ;;		Unchanged: 0/0
  7663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7668 ;;Total ram usage:        0 bytes
  7669 ;; Hardware stack levels used:    1
  7670 ;; Hardware stack levels required when called:    7
  7671 ;; This function calls:
  7672 ;;		_TMR1_SetInterruptHandler
  7673 ;; This function is called by:
  7674 ;;		_SYSTEM_Initialize
  7675 ;; This function uses a non-reentrant model
  7676 ;;
  7677                           
  7678                           
  7679                           ;psect for function _TMR1_Initialize
  7680  0405                     _TMR1_Initialize:	
  7681  0405                     l4021:	
  7682                           ;incstack = 0
  7683                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7684                           
  7685                           
  7686                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  7687  0405  0024               	movlb	4	; select bank4
  7688  0406  018F               	clrf	15	;volatile
  7689                           
  7690                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
  7691  0407  0190               	clrf	16	;volatile
  7692  0408                     l4023:	
  7693                           
  7694                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
  7695  0408  3004               	movlw	4
  7696  0409  0091               	movwf	17	;volatile
  7697  040A                     l4025:	
  7698                           
  7699                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xC3;
  7700  040A  30C3               	movlw	195
  7701  040B  008D               	movwf	13	;volatile
  7702  040C                     l4027:	
  7703                           
  7704                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0x74;
  7705  040C  3074               	movlw	116
  7706  040D  008C               	movwf	12	;volatile
  7707  040E                     l4029:	
  7708                           
  7709                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  7710  040E  080D               	movf	13,w	;volatile
  7711  040F  00FA               	movwf	_timer1ReloadVal+1	;volatile
  7712  0410  080C               	movf	12,w	;volatile
  7713  0411  00F9               	movwf	_timer1ReloadVal	;volatile
  7714  0412                     l4031:	
  7715                           
  7716                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
  7717  0412  002E               	movlb	14	; select bank14
  7718  0413  1010               	bcf	16,0	;volatile
  7719  0414                     l4033:	
  7720                           
  7721                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
  7722  0414  141A               	bsf	26,0	;volatile
  7723  0415                     l4035:	
  7724                           
  7725                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  7726  0415  30C5               	movlw	low _TMR1_DefaultInterruptHandler
  7727  0416  0020               	movlb	0	; select bank0
  7728  0417  00D0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  7729  0418  3005               	movlw	high _TMR1_DefaultInterruptHandler
  7730  0419  00D1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  7731  041A  3185  256A  3184   	fcall	_TMR1_SetInterruptHandler
  7732  041D                     l4037:	
  7733                           
  7734                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x05;
  7735  041D  3005               	movlw	5
  7736  041E  0024               	movlb	4	; select bank4
  7737  041F  008E               	movwf	14	;volatile
  7738  0420                     l401:	
  7739  0420  0008               	return
  7740  0421                     __end_of_TMR1_Initialize:	
  7741                           
  7742                           	psect	text12
  7743  056A                     __ptext12:	
  7744 ;; *************** function _TMR1_SetInterruptHandler *****************
  7745 ;; Defined at:
  7746 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  7747 ;; Parameters:    Size  Location     Type
  7748 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  7749 ;;		 -> h_clock(1), TMR1_DefaultInterruptHandler(1), 
  7750 ;; Auto vars:     Size  Location     Type
  7751 ;;		None
  7752 ;; Return value:  Size  Location     Type
  7753 ;;                  1    wreg      void 
  7754 ;; Registers used:
  7755 ;;		wreg
  7756 ;; Tracked objects:
  7757 ;;		On entry : 0/0
  7758 ;;		On exit  : 0/0
  7759 ;;		Unchanged: 0/0
  7760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7761 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7764 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7765 ;;Total ram usage:        2 bytes
  7766 ;; Hardware stack levels used:    1
  7767 ;; Hardware stack levels required when called:    6
  7768 ;; This function calls:
  7769 ;;		Nothing
  7770 ;; This function is called by:
  7771 ;;		_TMR1_Initialize
  7772 ;;		_main
  7773 ;; This function uses a non-reentrant model
  7774 ;;
  7775                           
  7776                           
  7777                           ;psect for function _TMR1_SetInterruptHandler
  7778  056A                     _TMR1_SetInterruptHandler:	
  7779  056A                     l3875:	
  7780                           ;incstack = 0
  7781                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  7782                           
  7783                           
  7784                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  7785  056A  0020               	movlb	0	; select bank0
  7786  056B  0851               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  7787  056C  00F8               	movwf	_TMR1_InterruptHandler+1
  7788  056D  0850               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  7789  056E  00F7               	movwf	_TMR1_InterruptHandler
  7790  056F                     l431:	
  7791  056F  0008               	return
  7792  0570                     __end_of_TMR1_SetInterruptHandler:	
  7793                           
  7794                           	psect	text13
  7795  053D                     __ptext13:	
  7796 ;; *************** function _PMD_Initialize *****************
  7797 ;; Defined at:
  7798 ;;		line 72 in file "mcc_generated_files/mcc.c"
  7799 ;; Parameters:    Size  Location     Type
  7800 ;;		None
  7801 ;; Auto vars:     Size  Location     Type
  7802 ;;		None
  7803 ;; Return value:  Size  Location     Type
  7804 ;;                  1    wreg      void 
  7805 ;; Registers used:
  7806 ;;		status,2
  7807 ;; Tracked objects:
  7808 ;;		On entry : 0/0
  7809 ;;		On exit  : 0/0
  7810 ;;		Unchanged: 0/0
  7811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7816 ;;Total ram usage:        0 bytes
  7817 ;; Hardware stack levels used:    1
  7818 ;; Hardware stack levels required when called:    6
  7819 ;; This function calls:
  7820 ;;		Nothing
  7821 ;; This function is called by:
  7822 ;;		_SYSTEM_Initialize
  7823 ;; This function uses a non-reentrant model
  7824 ;;
  7825                           
  7826                           
  7827                           ;psect for function _PMD_Initialize
  7828  053D                     _PMD_Initialize:	
  7829  053D                     l4039:	
  7830                           ;incstack = 0
  7831                           ; Regs used in _PMD_Initialize: [status,2]
  7832                           
  7833                           
  7834                           ;mcc_generated_files/mcc.c: 75:     PMD0 = 0x00;
  7835  053D  002F               	movlb	15	; select bank15
  7836  053E  0196               	clrf	22	;volatile
  7837                           
  7838                           ;mcc_generated_files/mcc.c: 77:     PMD1 = 0x00;
  7839  053F  0197               	clrf	23	;volatile
  7840                           
  7841                           ;mcc_generated_files/mcc.c: 79:     PMD2 = 0x00;
  7842  0540  0198               	clrf	24	;volatile
  7843                           
  7844                           ;mcc_generated_files/mcc.c: 81:     PMD3 = 0x00;
  7845  0541  0199               	clrf	25	;volatile
  7846                           
  7847                           ;mcc_generated_files/mcc.c: 83:     PMD4 = 0x00;
  7848  0542  019A               	clrf	26	;volatile
  7849                           
  7850                           ;mcc_generated_files/mcc.c: 85:     PMD5 = 0x00;
  7851  0543  019B               	clrf	27	;volatile
  7852  0544                     l506:	
  7853  0544  0008               	return
  7854  0545                     __end_of_PMD_Initialize:	
  7855                           
  7856                           	psect	text14
  7857  01FF                     __ptext14:	
  7858 ;; *************** function _PIN_MANAGER_Initialize *****************
  7859 ;; Defined at:
  7860 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7861 ;; Parameters:    Size  Location     Type
  7862 ;;		None
  7863 ;; Auto vars:     Size  Location     Type
  7864 ;;		None
  7865 ;; Return value:  Size  Location     Type
  7866 ;;                  1    wreg      void 
  7867 ;; Registers used:
  7868 ;;		wreg, status,2
  7869 ;; Tracked objects:
  7870 ;;		On entry : 0/0
  7871 ;;		On exit  : 0/0
  7872 ;;		Unchanged: 0/0
  7873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7878 ;;Total ram usage:        0 bytes
  7879 ;; Hardware stack levels used:    1
  7880 ;; Hardware stack levels required when called:    6
  7881 ;; This function calls:
  7882 ;;		Nothing
  7883 ;; This function is called by:
  7884 ;;		_SYSTEM_Initialize
  7885 ;; This function uses a non-reentrant model
  7886 ;;
  7887                           
  7888                           
  7889                           ;psect for function _PIN_MANAGER_Initialize
  7890  01FF                     _PIN_MANAGER_Initialize:	
  7891  01FF                     l4041:	
  7892                           ;incstack = 0
  7893                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7894                           
  7895                           
  7896                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  7897  01FF  0020               	movlb	0	; select bank0
  7898  0200  019A               	clrf	26	;volatile
  7899                           
  7900                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  7901  0201  0199               	clrf	25	;volatile
  7902                           
  7903                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  7904  0202  0196               	clrf	22	;volatile
  7905                           
  7906                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  7907  0203  0197               	clrf	23	;volatile
  7908                           
  7909                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  7910  0204  0198               	clrf	24	;volatile
  7911  0205                     l4043:	
  7912                           
  7913                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  7914  0205  3007               	movlw	7
  7915  0206  0095               	movwf	21	;volatile
  7916  0207                     l4045:	
  7917                           
  7918                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x6F;
  7919  0207  306F               	movlw	111
  7920  0208  0091               	movwf	17	;volatile
  7921  0209                     l4047:	
  7922                           
  7923                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  7924  0209  30FF               	movlw	255
  7925  020A  0092               	movwf	18	;volatile
  7926  020B                     l4049:	
  7927                           
  7928                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  7929  020B  30FF               	movlw	255
  7930  020C  0093               	movwf	19	;volatile
  7931  020D                     l4051:	
  7932                           
  7933                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  7934  020D  30FF               	movlw	255
  7935  020E  0094               	movwf	20	;volatile
  7936  020F                     l4053:	
  7937                           
  7938                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  7939  020F  30FF               	movlw	255
  7940  0210  003E               	movlb	30	; select bank30
  7941  0211  00D9               	movwf	89	;volatile
  7942  0212                     l4055:	
  7943                           
  7944                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xE7;
  7945  0212  30E7               	movlw	231
  7946  0213  00CE               	movwf	78	;volatile
  7947  0214                     l4057:	
  7948                           
  7949                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xFF;
  7950  0214  30FF               	movlw	255
  7951  0215  00C3               	movwf	67	;volatile
  7952  0216                     l4059:	
  7953                           
  7954                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  7955  0216  3007               	movlw	7
  7956  0217  00E4               	movwf	100	;volatile
  7957  0218                     l4061:	
  7958                           
  7959                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  7960  0218  30FF               	movlw	255
  7961  0219  00B8               	movwf	56	;volatile
  7962                           
  7963                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  7964  021A  01DA               	clrf	90	;volatile
  7965                           
  7966                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  7967  021B  01E5               	clrf	101	;volatile
  7968                           
  7969                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  7970  021C  01C4               	clrf	68	;volatile
  7971                           
  7972                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  7973  021D  01B9               	clrf	57	;volatile
  7974                           
  7975                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  7976  021E  01CF               	clrf	79	;volatile
  7977                           
  7978                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  7979  021F  01E6               	clrf	102	;volatile
  7980                           
  7981                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  7982  0220  01BA               	clrf	58	;volatile
  7983                           
  7984                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  7985  0221  01C5               	clrf	69	;volatile
  7986                           
  7987                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  7988  0222  01D0               	clrf	80	;volatile
  7989                           
  7990                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  7991  0223  01DB               	clrf	91	;volatile
  7992  0224                     l4063:	
  7993                           
  7994                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  7995  0224  30FF               	movlw	255
  7996  0225  00BB               	movwf	59	;volatile
  7997  0226                     l4065:	
  7998                           
  7999                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  8000  0226  30FF               	movlw	255
  8001  0227  00C6               	movwf	70	;volatile
  8002  0228                     l4067:	
  8003                           
  8004                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  8005  0228  30FF               	movlw	255
  8006  0229  00D1               	movwf	81	;volatile
  8007  022A                     l4069:	
  8008                           
  8009                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  8010  022A  30FF               	movlw	255
  8011  022B  00DC               	movwf	92	;volatile
  8012  022C                     l4071:	
  8013                           
  8014                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  8015  022C  3007               	movlw	7
  8016  022D  00E7               	movwf	103	;volatile
  8017  022E                     l4073:	
  8018                           
  8019                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  8020  022E  30FF               	movlw	255
  8021  022F  00BC               	movwf	60	;volatile
  8022  0230                     l4075:	
  8023                           
  8024                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  8025  0230  30FF               	movlw	255
  8026  0231  00C7               	movwf	71	;volatile
  8027  0232                     l4077:	
  8028                           
  8029                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  8030  0232  30FF               	movlw	255
  8031  0233  00D2               	movwf	82	;volatile
  8032  0234                     l4079:	
  8033                           
  8034                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  8035  0234  30FF               	movlw	255
  8036  0235  00DD               	movwf	93	;volatile
  8037  0236                     l4081:	
  8038                           
  8039                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
  8040  0236  3007               	movlw	7
  8041  0237  00E8               	movwf	104	;volatile
  8042  0238                     l4083:	
  8043                           
  8044                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
  8045  0238  3013               	movlw	19
  8046  0239  003D               	movlb	29	; select bank29
  8047  023A  00C5               	movwf	69	;volatile
  8048  023B                     l4085:	
  8049                           
  8050                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x14;
  8051  023B  3014               	movlw	20
  8052  023C  003E               	movlb	30	; select bank30
  8053  023D  00A3               	movwf	35	;volatile
  8054  023E                     l4087:	
  8055                           
  8056                           ;mcc_generated_files/pin_manager.c: 129:     RC4PPS = 0x15;
  8057  023E  3015               	movlw	21
  8058  023F  00A4               	movwf	36	;volatile
  8059  0240                     l4089:	
  8060                           
  8061                           ;mcc_generated_files/pin_manager.c: 130:     SSP1DATPPS = 0x14;
  8062  0240  3014               	movlw	20
  8063  0241  003D               	movlb	29	; select bank29
  8064  0242  00C6               	movwf	70	;volatile
  8065  0243                     l587:	
  8066  0243  0008               	return
  8067  0244                     __end_of_PIN_MANAGER_Initialize:	
  8068                           
  8069                           	psect	text15
  8070  052B                     __ptext15:	
  8071 ;; *************** function _OSCILLATOR_Initialize *****************
  8072 ;; Defined at:
  8073 ;;		line 58 in file "mcc_generated_files/mcc.c"
  8074 ;; Parameters:    Size  Location     Type
  8075 ;;		None
  8076 ;; Auto vars:     Size  Location     Type
  8077 ;;		None
  8078 ;; Return value:  Size  Location     Type
  8079 ;;                  1    wreg      void 
  8080 ;; Registers used:
  8081 ;;		wreg, status,2
  8082 ;; Tracked objects:
  8083 ;;		On entry : 0/0
  8084 ;;		On exit  : 0/0
  8085 ;;		Unchanged: 0/0
  8086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8091 ;;Total ram usage:        0 bytes
  8092 ;; Hardware stack levels used:    1
  8093 ;; Hardware stack levels required when called:    6
  8094 ;; This function calls:
  8095 ;;		Nothing
  8096 ;; This function is called by:
  8097 ;;		_SYSTEM_Initialize
  8098 ;; This function uses a non-reentrant model
  8099 ;;
  8100                           
  8101                           
  8102                           ;psect for function _OSCILLATOR_Initialize
  8103  052B                     _OSCILLATOR_Initialize:	
  8104  052B                     l4091:	
  8105                           ;incstack = 0
  8106                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8107                           
  8108                           
  8109                           ;mcc_generated_files/mcc.c: 61:     OSCCON1 = 0x60;
  8110  052B  3060               	movlw	96
  8111  052C  0031               	movlb	17	; select bank17
  8112  052D  008D               	movwf	13	;volatile
  8113  052E                     l4093:	
  8114                           
  8115                           ;mcc_generated_files/mcc.c: 63:     OSCCON3 = 0x00;
  8116  052E  018F               	clrf	15	;volatile
  8117  052F                     l4095:	
  8118                           
  8119                           ;mcc_generated_files/mcc.c: 65:     OSCEN = 0x00;
  8120  052F  0191               	clrf	17	;volatile
  8121                           
  8122                           ;mcc_generated_files/mcc.c: 67:     OSCFRQ = 0x02;
  8123  0530  3002               	movlw	2
  8124  0531  0093               	movwf	19	;volatile
  8125  0532                     l4097:	
  8126                           
  8127                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
  8128  0532  0192               	clrf	18	;volatile
  8129  0533                     l503:	
  8130  0533  0008               	return
  8131  0534                     __end_of_OSCILLATOR_Initialize:	
  8132                           
  8133                           	psect	intentry
  8134  0004                     __pintentry:	
  8135 ;; *************** function _INTERRUPT_InterruptManager *****************
  8136 ;; Defined at:
  8137 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8138 ;; Parameters:    Size  Location     Type
  8139 ;;		None
  8140 ;; Auto vars:     Size  Location     Type
  8141 ;;		None
  8142 ;; Return value:  Size  Location     Type
  8143 ;;                  1    wreg      void 
  8144 ;; Registers used:
  8145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8146 ;; Tracked objects:
  8147 ;;		On entry : 0/0
  8148 ;;		On exit  : 0/0
  8149 ;;		Unchanged: 0/0
  8150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8155 ;;Total ram usage:        0 bytes
  8156 ;; Hardware stack levels used:    1
  8157 ;; Hardware stack levels required when called:    5
  8158 ;; This function calls:
  8159 ;;		Absolute function
  8160 ;;		_TMR1_ISR
  8161 ;;		_i2c_ISR
  8162 ;;		_i2c_busCollisionISR
  8163 ;; This function is called by:
  8164 ;;		Interrupt level 1
  8165 ;; This function uses a non-reentrant model
  8166 ;;
  8167                           
  8168  0004                     _INTERRUPT_InterruptManager:	
  8169                           
  8170                           ;incstack = 0
  8171  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8172                           
  8173                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8174  0005  3180               	pagesel	$
  8175  0006                     i1l4371:	
  8176                           
  8177                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  8178  0006  1F0B               	btfss	11,6	;volatile
  8179  0007  2809               	goto	u207_21
  8180  0008  280A               	goto	u207_20
  8181  0009                     u207_21:	
  8182  0009  2834               	goto	i1l463
  8183  000A                     u207_20:	
  8184  000A                     i1l4373:	
  8185                           
  8186                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
  8187  000A  002E               	movlb	14	; select bank14
  8188  000B  1C99               	btfss	25,1	;volatile
  8189  000C  280E               	goto	u208_21
  8190  000D  280F               	goto	u208_20
  8191  000E                     u208_21:	
  8192  000E  2819               	goto	i1l456
  8193  000F                     u208_20:	
  8194  000F                     i1l4375:	
  8195  000F  1C8F               	btfss	15,1	;volatile
  8196  0010  2812               	goto	u209_21
  8197  0011  2813               	goto	u209_20
  8198  0012                     u209_21:	
  8199  0012  2819               	goto	i1l456
  8200  0013                     u209_20:	
  8201  0013                     i1l4377:	
  8202                           
  8203                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             i2c1_driver_busCollisionISR();
  8204  0013  087C               	movf	_i2c1_driver_busCollisionISR+1,w
  8205  0014  008A               	movwf	10
  8206  0015  087B               	movf	_i2c1_driver_busCollisionISR,w
  8207  0016  000A               	callw
  8208  0017  3180               	pagesel	$
  8209                           
  8210                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  8211  0018  2834               	goto	i1l463
  8212  0019                     i1l456:	
  8213                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
  8214                           
  8215  0019  1C19               	btfss	25,0	;volatile
  8216  001A  281C               	goto	u210_21
  8217  001B  281D               	goto	u210_20
  8218  001C                     u210_21:	
  8219  001C  2828               	goto	i1l458
  8220  001D                     u210_20:	
  8221  001D                     i1l4379:	
  8222  001D  1C0F               	btfss	15,0	;volatile
  8223  001E  2820               	goto	u211_21
  8224  001F  2821               	goto	u211_20
  8225  0020                     u211_21:	
  8226  0020  2828               	goto	i1l458
  8227  0021                     u211_20:	
  8228  0021                     i1l4381:	
  8229                           
  8230                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             i2c1_driver_i2cISR();
  8231  0021  0020               	movlb	0	; select bank0
  8232  0022  0843               	movf	_i2c1_driver_i2cISR+1,w
  8233  0023  008A               	movwf	10
  8234  0024  0842               	movf	_i2c1_driver_i2cISR,w
  8235  0025  000A               	callw
  8236  0026  3180               	pagesel	$
  8237                           
  8238                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  8239  0027  2834               	goto	i1l463
  8240  0028                     i1l458:	
  8241                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE4bits.TMR1IE == 1 && PI
      +                          R4bits.TMR1IF == 1)
  8242                           
  8243  0028  1C1A               	btfss	26,0	;volatile
  8244  0029  282B               	goto	u212_21
  8245  002A  282C               	goto	u212_20
  8246  002B                     u212_21:	
  8247  002B  2834               	goto	i1l457
  8248  002C                     u212_20:	
  8249  002C                     i1l4383:	
  8250  002C  1C10               	btfss	16,0	;volatile
  8251  002D  282F               	goto	u213_21
  8252  002E  2830               	goto	u213_20
  8253  002F                     u213_21:	
  8254  002F  2834               	goto	i1l457
  8255  0030                     u213_20:	
  8256  0030                     i1l4385:	
  8257                           
  8258                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR1_ISR();
  8259  0030  3184  2467  3180   	fcall	_TMR1_ISR
  8260                           
  8261                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  8262  0033  2834               	goto	i1l463
  8263  0034                     i1l457:	
  8264  0034                     i1l463:	
  8265                           ;mcc_generated_files/interrupt_manager.c: 73:     }
  8266                           
  8267  0034  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8268  0035  0009               	retfie
  8269  0036                     __end_of_INTERRUPT_InterruptManager:	
  8270                           
  8271                           	psect	text17
  8272  059D                     __ptext17:	
  8273 ;; *************** function _i2c_busCollisionISR *****************
  8274 ;; Defined at:
  8275 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
  8276 ;; Parameters:    Size  Location     Type
  8277 ;;		None
  8278 ;; Auto vars:     Size  Location     Type
  8279 ;;		None
  8280 ;; Return value:  Size  Location     Type
  8281 ;;                  1    wreg      void 
  8282 ;; Registers used:
  8283 ;;		status,2, status,0, pclath, cstack
  8284 ;; Tracked objects:
  8285 ;;		On entry : 0/0
  8286 ;;		On exit  : 0/0
  8287 ;;		Unchanged: 0/0
  8288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8293 ;;Total ram usage:        0 bytes
  8294 ;; Hardware stack levels used:    1
  8295 ;; Hardware stack levels required when called:    1
  8296 ;; This function calls:
  8297 ;;		_i2c1_driver_clearBusCollision
  8298 ;; This function is called by:
  8299 ;;		_i2c_open
  8300 ;;		_INTERRUPT_InterruptManager
  8301 ;; This function uses a non-reentrant model
  8302 ;;
  8303                           
  8304                           
  8305                           ;psect for function _i2c_busCollisionISR
  8306  059D                     _i2c_busCollisionISR:	
  8307  059D                     i1l3451:	
  8308                           ;incstack = 0
  8309                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
  8310                           
  8311                           
  8312                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
  8313  059D  3185  25A9  3185   	fcall	_i2c1_driver_clearBusCollision
  8314  05A0                     i1l250:	
  8315  05A0  0008               	return
  8316  05A1                     __end_of_i2c_busCollisionISR:	
  8317                           
  8318                           	psect	text18
  8319  05A9                     __ptext18:	
  8320 ;; *************** function _i2c1_driver_clearBusCollision *****************
  8321 ;; Defined at:
  8322 ;;		line 254 in file "mcc_generated_files/i2c1_driver.c"
  8323 ;; Parameters:    Size  Location     Type
  8324 ;;		None
  8325 ;; Auto vars:     Size  Location     Type
  8326 ;;		None
  8327 ;; Return value:  Size  Location     Type
  8328 ;;                  1    wreg      void 
  8329 ;; Registers used:
  8330 ;;		None
  8331 ;; Tracked objects:
  8332 ;;		On entry : 0/0
  8333 ;;		On exit  : 0/0
  8334 ;;		Unchanged: 0/0
  8335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8340 ;;Total ram usage:        0 bytes
  8341 ;; Hardware stack levels used:    1
  8342 ;; This function calls:
  8343 ;;		Nothing
  8344 ;; This function is called by:
  8345 ;;		_i2c_busCollisionISR
  8346 ;; This function uses a non-reentrant model
  8347 ;;
  8348                           
  8349                           
  8350                           ;psect for function _i2c1_driver_clearBusCollision
  8351  05A9                     _i2c1_driver_clearBusCollision:	
  8352  05A9                     i1l3217:	
  8353                           ;incstack = 0
  8354                           ; Regs used in _i2c1_driver_clearBusCollision: []
  8355                           
  8356                           
  8357                           ;mcc_generated_files/i2c1_driver.c: 256:     PIR3bits.BCL1IF = 0;
  8358  05A9  002E               	movlb	14	; select bank14
  8359  05AA  108F               	bcf	15,1	;volatile
  8360  05AB                     i1l729:	
  8361  05AB  0008               	return
  8362  05AC                     __end_of_i2c1_driver_clearBusCollision:	
  8363                           
  8364                           	psect	text19
  8365  0311                     __ptext19:	
  8366 ;; *************** function _i2c_ISR *****************
  8367 ;; Defined at:
  8368 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
  8369 ;; Parameters:    Size  Location     Type
  8370 ;;		None
  8371 ;; Auto vars:     Size  Location     Type
  8372 ;;		None
  8373 ;; Return value:  Size  Location     Type
  8374 ;;                  1    wreg      void 
  8375 ;; Registers used:
  8376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8377 ;; Tracked objects:
  8378 ;;		On entry : 0/0
  8379 ;;		On exit  : 0/0
  8380 ;;		Unchanged: 0/0
  8381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8384 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8385 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8386 ;;Total ram usage:        3 bytes
  8387 ;; Hardware stack levels used:    1
  8388 ;; Hardware stack levels required when called:    4
  8389 ;; This function calls:
  8390 ;;		_do_I2C_DO_ACK
  8391 ;;		_do_I2C_DO_ADDRESS_NACK
  8392 ;;		_do_I2C_DO_NACK_RESTART
  8393 ;;		_do_I2C_DO_NACK_STOP
  8394 ;;		_do_I2C_IDLE
  8395 ;;		_do_I2C_RCEN
  8396 ;;		_do_I2C_RESET
  8397 ;;		_do_I2C_RX
  8398 ;;		_do_I2C_SEND_ADR_READ
  8399 ;;		_do_I2C_SEND_ADR_WRITE
  8400 ;;		_do_I2C_SEND_RESTART
  8401 ;;		_do_I2C_SEND_RESTART_READ
  8402 ;;		_do_I2C_SEND_RESTART_WRITE
  8403 ;;		_do_I2C_SEND_STOP
  8404 ;;		_do_I2C_TX
  8405 ;;		_do_I2C_TX_EMPTY
  8406 ;;		_i2c1_driver_isNACK
  8407 ;;		_mssp1_clearIRQ
  8408 ;; This function is called by:
  8409 ;;		_i2c_open
  8410 ;;		_i2c_poller
  8411 ;;		_INTERRUPT_InterruptManager
  8412 ;; This function uses a non-reentrant model
  8413 ;;
  8414                           
  8415                           
  8416                           ;psect for function _i2c_ISR
  8417  0311                     _i2c_ISR:	
  8418  0311                     i1l4193:	
  8419                           ;incstack = 0
  8420                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8421                           
  8422                           
  8423                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
  8424  0311  3185  25AC  3183   	fcall	_mssp1_clearIRQ
  8425  0314                     i1l4195:	
  8426                           
  8427                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
  8428  0314  0020               	movlb	0	; select bank0
  8429  0315  1DA0               	btfss	_i2c_status,3
  8430  0316  2B18               	goto	u182_21
  8431  0317  2B19               	goto	u182_20
  8432  0318                     u182_21:	
  8433  0318  2B25               	goto	i1l4201
  8434  0319                     u182_20:	
  8435  0319                     i1l4197:	
  8436  0319  3185  2555  3183   	fcall	_i2c1_driver_isNACK
  8437  031C  1C03               	btfss	3,0
  8438  031D  2B1F               	goto	u183_21
  8439  031E  2B20               	goto	u183_20
  8440  031F                     u183_21:	
  8441  031F  2B25               	goto	i1l4201
  8442  0320                     u183_20:	
  8443  0320                     i1l4199:	
  8444                           
  8445                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
  8446  0320  300F               	movlw	15
  8447  0321  00F4               	movwf	??_i2c_ISR
  8448  0322  0874               	movf	??_i2c_ISR,w
  8449  0323  0020               	movlb	0	; select bank0
  8450  0324  00A9               	movwf	_i2c_status+9
  8451  0325                     i1l4201:	
  8452                           
  8453                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
  8454  0325  0020               	movlb	0	; select bank0
  8455  0326  0829               	movf	_i2c_status+9,w
  8456  0327  00F4               	movwf	??_i2c_ISR
  8457  0328  01F5               	clrf	??_i2c_ISR+1
  8458  0329  35F4               	lslf	??_i2c_ISR,f
  8459  032A  0DF5               	rlf	??_i2c_ISR+1,f
  8460  032B  30A9               	movlw	low (_fsmStateTable| (0+32768))
  8461  032C  0774               	addwf	??_i2c_ISR,w
  8462  032D  0084               	movwf	4
  8463  032E  3083               	movlw	high (_fsmStateTable| (0+32768))
  8464  032F  3D75               	addwfc	??_i2c_ISR+1,w
  8465  0330  0085               	movwf	5
  8466  0331  3F01               	moviw [1]fsr0
  8467  0332  008A               	movwf	10
  8468  0333  3F00               	moviw [0]fsr0
  8469  0334  000A               	callw
  8470  0335  3183               	pagesel	$
  8471  0336  00F6               	movwf	??_i2c_ISR+2
  8472  0337  0876               	movf	??_i2c_ISR+2,w
  8473  0338  0020               	movlb	0	; select bank0
  8474  0339  00A9               	movwf	_i2c_status+9
  8475  033A                     i1l247:	
  8476  033A  0008               	return
  8477  033B                     __end_of_i2c_ISR:	
  8478                           
  8479                           	psect	text20
  8480  05AC                     __ptext20:	
  8481 ;; *************** function _mssp1_clearIRQ *****************
  8482 ;; Defined at:
  8483 ;;		line 54 in file "mcc_generated_files/i2c1_driver.c"
  8484 ;; Parameters:    Size  Location     Type
  8485 ;;		None
  8486 ;; Auto vars:     Size  Location     Type
  8487 ;;		None
  8488 ;; Return value:  Size  Location     Type
  8489 ;;                  1    wreg      void 
  8490 ;; Registers used:
  8491 ;;		None
  8492 ;; Tracked objects:
  8493 ;;		On entry : 0/0
  8494 ;;		On exit  : 0/0
  8495 ;;		Unchanged: 0/0
  8496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8501 ;;Total ram usage:        0 bytes
  8502 ;; Hardware stack levels used:    1
  8503 ;; This function calls:
  8504 ;;		Nothing
  8505 ;; This function is called by:
  8506 ;;		_i2c_ISR
  8507 ;;		_i2c_open
  8508 ;;		_i2c_close
  8509 ;; This function uses a non-reentrant model
  8510 ;;
  8511                           
  8512                           
  8513                           ;psect for function _mssp1_clearIRQ
  8514  05AC                     _mssp1_clearIRQ:	
  8515  05AC                     i1l3039:	
  8516                           ;incstack = 0
  8517                           ; Regs used in _mssp1_clearIRQ: []
  8518                           
  8519                           
  8520                           ;mcc_generated_files/i2c1_driver.c: 56:         SSP1CON1 = 0x28;
  8521  05AC  002E               	movlb	14	; select bank14
  8522  05AD  100F               	bcf	15,0	;volatile
  8523  05AE                     i1l633:	
  8524  05AE  0008               	return
  8525  05AF                     __end_of_mssp1_clearIRQ:	
  8526                           
  8527                           	psect	text21
  8528  01B5                     __ptext21:	
  8529 ;; *************** function _do_I2C_RX *****************
  8530 ;; Defined at:
  8531 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;		None
  8534 ;; Auto vars:     Size  Location     Type
  8535 ;;		None
  8536 ;; Return value:  Size  Location     Type
  8537 ;;                  1    wreg      enum E12722
  8538 ;; Registers used:
  8539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8540 ;; Tracked objects:
  8541 ;;		On entry : 0/0
  8542 ;;		On exit  : 0/0
  8543 ;;		Unchanged: 0/0
  8544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8547 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8548 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8549 ;;Total ram usage:        3 bytes
  8550 ;; Hardware stack levels used:    1
  8551 ;; Hardware stack levels required when called:    3
  8552 ;; This function calls:
  8553 ;;		Absolute function
  8554 ;;		_do_I2C_DO_NACK_RESTART
  8555 ;;		_do_I2C_DO_NACK_STOP
  8556 ;;		_i2c1_driver_getRXData
  8557 ;;		_i2c1_driver_sendACK
  8558 ;;		_i2c_restartWrite
  8559 ;;		_rd1RegCompleteHandler
  8560 ;;		_rd2RegCompleteHandler
  8561 ;;		_rdBlkRegCompleteHandler
  8562 ;;		_returnReset
  8563 ;;		_returnStop
  8564 ;;		_wr1RegCompleteHandler
  8565 ;;		_wr2RegCompleteHandler
  8566 ;; This function is called by:
  8567 ;;		_i2c_ISR
  8568 ;; This function uses a non-reentrant model
  8569 ;;
  8570                           
  8571                           
  8572                           ;psect for function _do_I2C_RX
  8573  01B5                     _do_I2C_RX:	
  8574  01B5                     i1l3967:	
  8575                           ;incstack = 0
  8576                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8577                           
  8578                           
  8579                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
  8580  01B5  3185  25B2  3181   	fcall	_i2c1_driver_getRXData
  8581  01B8  00F0               	movwf	??_do_I2C_RX
  8582  01B9  0020               	movlb	0	; select bank0
  8583  01BA  0822               	movf	low ((_i2c_status| 0+2)),w
  8584  01BB  0086               	movwf	6
  8585  01BC  0187               	clrf	7
  8586  01BD  0870               	movf	??_do_I2C_RX,w
  8587  01BE  0081               	movwf	1
  8588  01BF                     i1l3969:	
  8589  01BF  3001               	movlw	1
  8590  01C0  00F0               	movwf	??_do_I2C_RX
  8591  01C1  0870               	movf	??_do_I2C_RX,w
  8592  01C2  07A2               	addwf	low ((_i2c_status| 0+2)),f
  8593  01C3                     i1l3971:	
  8594                           
  8595                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
  8596  01C3  3001               	movlw	1
  8597  01C4  02A3               	subwf	_i2c_status+3,f
  8598  01C5  3000               	movlw	0
  8599  01C6  3BA4               	subwfb	_i2c_status+4,f
  8600  01C7  0823               	movf	_i2c_status+3,w
  8601  01C8  0424               	iorwf	_i2c_status+4,w
  8602  01C9  1903               	btfsc	3,2
  8603  01CA  29CC               	goto	u177_21
  8604  01CB  29CD               	goto	u177_20
  8605  01CC                     u177_21:	
  8606  01CC  29D2               	goto	i1l222
  8607  01CD                     u177_20:	
  8608  01CD                     i1l3973:	
  8609                           
  8610                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
  8611  01CD  3185  25A5  3181   	fcall	_i2c1_driver_sendACK
  8612  01D0                     i1l3975:	
  8613                           
  8614                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
  8615  01D0  3005               	movlw	5
  8616  01D1  29FE               	goto	i1l223
  8617  01D2                     i1l222:	
  8618                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
  8619                           
  8620                           
  8621                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
  8622  01D2  1520               	bsf	_i2c_status,2
  8623                           
  8624                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
  8625  01D3  29DC               	goto	i1l3991
  8626  01D4                     i1l3981:	
  8627                           
  8628                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
  8629  01D4  3185  2570  3181   	fcall	_do_I2C_DO_NACK_RESTART
  8630  01D7  29FE               	goto	i1l223
  8631  01D8                     i1l3985:	
  8632                           
  8633                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
  8634  01D8  3185  2575  3181   	fcall	_do_I2C_DO_NACK_STOP
  8635  01DB  29FE               	goto	i1l223
  8636  01DC                     i1l3991:	
  8637  01DC  0837               	movf	low ((_i2c_status| 0+23)),w
  8638  01DD  00F0               	movwf	??_do_I2C_RX
  8639  01DE  0870               	movf	??_do_I2C_RX,w
  8640  01DF  00F6               	movwf	rdBlkRegCompleteHandler@p
  8641  01E0  300B               	movlw	11
  8642  01E1  3E20               	addlw	(low (_i2c_status| 0))& (0+255)
  8643  01E2  0086               	movwf	6
  8644  01E3  0187               	clrf	7
  8645  01E4  3F41               	moviw [1]fsr1
  8646  01E5  008A               	movwf	10
  8647  01E6  3F40               	moviw [0]fsr1
  8648  01E7  000A               	callw
  8649  01E8  3181               	pagesel	$
  8650  01E9  00F1               	movwf	??_do_I2C_RX+1
  8651  01EA  01F2               	clrf	??_do_I2C_RX+2
  8652                           
  8653                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8654                           ; Switch size 1, requested type "simple"
  8655                           ; Number of cases is 1, Range of values is 0 to 0
  8656                           ; switch strategies available:
  8657                           ; Name         Instructions Cycles
  8658                           ; simple_byte            4     3 (average)
  8659                           ; direct_byte            8     6 (fixed)
  8660                           ; jumptable            260     6 (fixed)
  8661                           ;	Chosen strategy is simple_byte
  8662  01EB  0872               	movf	??_do_I2C_RX+2,w
  8663  01EC  3A00               	xorlw	0	; case 0
  8664  01ED  1903               	skipnz
  8665  01EE  29F0               	goto	i1l4559
  8666  01EF  29D8               	goto	i1l3985
  8667  01F0                     i1l4559:	
  8668                           
  8669                           ; Switch size 1, requested type "simple"
  8670                           ; Number of cases is 4, Range of values is 1 to 4
  8671                           ; switch strategies available:
  8672                           ; Name         Instructions Cycles
  8673                           ; simple_byte           13     7 (average)
  8674                           ; direct_byte           17     9 (fixed)
  8675                           ; jumptable            263     9 (fixed)
  8676                           ;	Chosen strategy is simple_byte
  8677  01F0  0871               	movf	??_do_I2C_RX+1,w
  8678  01F1  3A01               	xorlw	1	; case 1
  8679  01F2  1903               	skipnz
  8680  01F3  29D8               	goto	i1l3985
  8681  01F4  3A03               	xorlw	3	; case 2
  8682  01F5  1903               	skipnz
  8683  01F6  29D4               	goto	i1l3981
  8684  01F7  3A01               	xorlw	1	; case 3
  8685  01F8  1903               	skipnz
  8686  01F9  29D4               	goto	i1l3981
  8687  01FA  3A07               	xorlw	7	; case 4
  8688  01FB  1903               	skipnz
  8689  01FC  29D8               	goto	i1l3985
  8690  01FD  29D8               	goto	i1l3985
  8691  01FE                     i1l223:	
  8692  01FE  0008               	return
  8693  01FF                     __end_of_do_I2C_RX:	
  8694                           
  8695                           	psect	text22
  8696  0161                     __ptext22:	
  8697 ;; *************** function _do_I2C_TX *****************
  8698 ;; Defined at:
  8699 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
  8700 ;; Parameters:    Size  Location     Type
  8701 ;;		None
  8702 ;; Auto vars:     Size  Location     Type
  8703 ;;		None
  8704 ;; Return value:  Size  Location     Type
  8705 ;;                  1    wreg      enum E12722
  8706 ;; Registers used:
  8707 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8708 ;; Tracked objects:
  8709 ;;		On entry : 0/0
  8710 ;;		On exit  : 0/0
  8711 ;;		Unchanged: 0/0
  8712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8715 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8716 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8717 ;;Total ram usage:        3 bytes
  8718 ;; Hardware stack levels used:    1
  8719 ;; Hardware stack levels required when called:    3
  8720 ;; This function calls:
  8721 ;;		Absolute function
  8722 ;;		_do_I2C_SEND_RESTART_READ
  8723 ;;		_do_I2C_SEND_RESTART_WRITE
  8724 ;;		_do_I2C_SEND_STOP
  8725 ;;		_i2c1_driver_TXData
  8726 ;;		_i2c1_driver_isNACK
  8727 ;;		_i2c_restartWrite
  8728 ;;		_rd1RegCompleteHandler
  8729 ;;		_rd2RegCompleteHandler
  8730 ;;		_rdBlkRegCompleteHandler
  8731 ;;		_returnReset
  8732 ;;		_returnStop
  8733 ;;		_wr1RegCompleteHandler
  8734 ;;		_wr2RegCompleteHandler
  8735 ;; This function is called by:
  8736 ;;		_i2c_ISR
  8737 ;; This function uses a non-reentrant model
  8738 ;;
  8739                           
  8740                           
  8741                           ;psect for function _do_I2C_TX
  8742  0161                     _do_I2C_TX:	
  8743  0161                     i1l3933:	
  8744                           ;incstack = 0
  8745                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8746                           
  8747                           
  8748                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
  8749  0161  3185  2555  3181   	fcall	_i2c1_driver_isNACK
  8750  0164  1C03               	btfss	3,0
  8751  0165  2967               	goto	u175_21
  8752  0166  2968               	goto	u175_20
  8753  0167                     u175_21:	
  8754  0167  2998               	goto	i1l206
  8755  0168                     u175_20:	
  8756  0168  2975               	goto	i1l3951
  8757  0169                     i1l3937:	
  8758                           
  8759                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
  8760  0169  3185  258E  3181   	fcall	_do_I2C_SEND_RESTART_READ
  8761  016C  29B4               	goto	i1l209
  8762  016D                     i1l3941:	
  8763                           
  8764                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
  8765  016D  3185  2589  3181   	fcall	_do_I2C_SEND_RESTART_WRITE
  8766  0170  29B4               	goto	i1l209
  8767  0171                     i1l3945:	
  8768                           
  8769                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
  8770  0171  3185  257F  3181   	fcall	_do_I2C_SEND_STOP
  8771  0174  29B4               	goto	i1l209
  8772  0175                     i1l3951:	
  8773  0175  0020               	movlb	0	; select bank0
  8774  0176  083A               	movf	low ((_i2c_status| 0+26)),w
  8775  0177  00F1               	movwf	??_do_I2C_TX
  8776  0178  0871               	movf	??_do_I2C_TX,w
  8777  0179  00F6               	movwf	rdBlkRegCompleteHandler@p
  8778  017A  3011               	movlw	17
  8779  017B  3E20               	addlw	(low (_i2c_status| 0))& (0+255)
  8780  017C  0086               	movwf	6
  8781  017D  0187               	clrf	7
  8782  017E  3F41               	moviw [1]fsr1
  8783  017F  008A               	movwf	10
  8784  0180  3F40               	moviw [0]fsr1
  8785  0181  000A               	callw
  8786  0182  3181               	pagesel	$
  8787  0183  00F2               	movwf	??_do_I2C_TX+1
  8788  0184  01F3               	clrf	??_do_I2C_TX+2
  8789                           
  8790                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8791                           ; Switch size 1, requested type "simple"
  8792                           ; Number of cases is 1, Range of values is 0 to 0
  8793                           ; switch strategies available:
  8794                           ; Name         Instructions Cycles
  8795                           ; simple_byte            4     3 (average)
  8796                           ; direct_byte            8     6 (fixed)
  8797                           ; jumptable            260     6 (fixed)
  8798                           ;	Chosen strategy is simple_byte
  8799  0185  0873               	movf	??_do_I2C_TX+2,w
  8800  0186  3A00               	xorlw	0	; case 0
  8801  0187  1903               	skipnz
  8802  0188  298A               	goto	i1l4561
  8803  0189  2971               	goto	i1l3945
  8804  018A                     i1l4561:	
  8805                           
  8806                           ; Switch size 1, requested type "simple"
  8807                           ; Number of cases is 4, Range of values is 1 to 4
  8808                           ; switch strategies available:
  8809                           ; Name         Instructions Cycles
  8810                           ; simple_byte           13     7 (average)
  8811                           ; direct_byte           17     9 (fixed)
  8812                           ; jumptable            263     9 (fixed)
  8813                           ;	Chosen strategy is simple_byte
  8814  018A  0872               	movf	??_do_I2C_TX+1,w
  8815  018B  3A01               	xorlw	1	; case 1
  8816  018C  1903               	skipnz
  8817  018D  2971               	goto	i1l3945
  8818  018E  3A03               	xorlw	3	; case 2
  8819  018F  1903               	skipnz
  8820  0190  2969               	goto	i1l3937
  8821  0191  3A01               	xorlw	1	; case 3
  8822  0192  1903               	skipnz
  8823  0193  296D               	goto	i1l3941
  8824  0194  3A07               	xorlw	7	; case 4
  8825  0195  1903               	skipnz
  8826  0196  2971               	goto	i1l3945
  8827  0197  2971               	goto	i1l3945
  8828  0198                     i1l206:	
  8829                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
  8830                           
  8831                           
  8832                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
  8833  0198  0020               	movlb	0	; select bank0
  8834  0199  11A0               	bcf	_i2c_status,3
  8835  019A                     i1l3953:	
  8836                           
  8837                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
  8838  019A  3002               	movlw	2
  8839  019B  3E20               	addlw	(low (_i2c_status| 0))& (0+255)
  8840  019C  0086               	movwf	6
  8841  019D  0187               	clrf	7
  8842  019E  3F40               	moviw [0]fsr1
  8843  019F  0084               	movwf	4
  8844  01A0  0185               	clrf	5
  8845  01A1  0A81               	incf	1,f
  8846  01A2  0800               	movf	0,w
  8847  01A3  3185  2598  3181   	fcall	_i2c1_driver_TXData
  8848  01A6                     i1l3955:	
  8849                           
  8850                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
  8851  01A6  3001               	movlw	1
  8852  01A7  0020               	movlb	0	; select bank0
  8853  01A8  02A3               	subwf	_i2c_status+3,f
  8854  01A9  3000               	movlw	0
  8855  01AA  3BA4               	subwfb	_i2c_status+4,f
  8856  01AB  0823               	movf	_i2c_status+3,w
  8857  01AC  0424               	iorwf	_i2c_status+4,w
  8858  01AD  1D03               	btfss	3,2
  8859  01AE  29B0               	goto	u176_21
  8860  01AF  29B1               	goto	u176_20
  8861  01B0                     u176_21:	
  8862  01B0  29B3               	goto	i1l3959
  8863  01B1                     u176_20:	
  8864  01B1                     i1l3957:	
  8865  01B1  3006               	movlw	6
  8866  01B2  29B4               	goto	i1l209
  8867  01B3                     i1l3959:	
  8868  01B3  3003               	movlw	3
  8869  01B4                     i1l209:	
  8870  01B4  0008               	return
  8871  01B5                     __end_of_do_I2C_TX:	
  8872                           
  8873                           	psect	text23
  8874  02E5                     __ptext23:	
  8875 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
  8876 ;; Defined at:
  8877 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
  8878 ;; Parameters:    Size  Location     Type
  8879 ;;		None
  8880 ;; Auto vars:     Size  Location     Type
  8881 ;;		None
  8882 ;; Return value:  Size  Location     Type
  8883 ;;                  1    wreg      enum E12722
  8884 ;; Registers used:
  8885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8886 ;; Tracked objects:
  8887 ;;		On entry : 0/0
  8888 ;;		On exit  : 0/0
  8889 ;;		Unchanged: 0/0
  8890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8893 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8894 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8895 ;;Total ram usage:        3 bytes
  8896 ;; Hardware stack levels used:    1
  8897 ;; Hardware stack levels required when called:    3
  8898 ;; This function calls:
  8899 ;;		Absolute function
  8900 ;;		_do_I2C_SEND_RESTART
  8901 ;;		_do_I2C_SEND_STOP
  8902 ;;		_i2c_restartWrite
  8903 ;;		_rd1RegCompleteHandler
  8904 ;;		_rd2RegCompleteHandler
  8905 ;;		_rdBlkRegCompleteHandler
  8906 ;;		_returnReset
  8907 ;;		_returnStop
  8908 ;;		_wr1RegCompleteHandler
  8909 ;;		_wr2RegCompleteHandler
  8910 ;; This function is called by:
  8911 ;;		_i2c_ISR
  8912 ;; This function uses a non-reentrant model
  8913 ;;
  8914                           
  8915                           
  8916                           ;psect for function _do_I2C_DO_ADDRESS_NACK
  8917  02E5                     _do_I2C_DO_ADDRESS_NACK:	
  8918  02E5                     i1l3913:	
  8919                           ;incstack = 0
  8920                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8921                           
  8922                           
  8923                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
  8924  02E5  0020               	movlb	0	; select bank0
  8925  02E6  11A0               	bcf	_i2c_status,3
  8926  02E7                     i1l3915:	
  8927                           
  8928                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
  8929  02E7  3002               	movlw	2
  8930  02E8  00F0               	movwf	??_do_I2C_DO_ADDRESS_NACK
  8931  02E9  0870               	movf	??_do_I2C_DO_ADDRESS_NACK,w
  8932  02EA  00AA               	movwf	_i2c_status+10
  8933                           
  8934                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
  8935  02EB  2AF4               	goto	i1l3927
  8936  02EC                     i1l3917:	
  8937                           
  8938                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
  8939  02EC  3185  2584  3182   	fcall	_do_I2C_SEND_RESTART
  8940  02EF  2B10               	goto	i1l201
  8941  02F0                     i1l3921:	
  8942                           
  8943                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
  8944  02F0  3185  257F  3182   	fcall	_do_I2C_SEND_STOP
  8945  02F3  2B10               	goto	i1l201
  8946  02F4                     i1l3927:	
  8947  02F4  0839               	movf	low ((_i2c_status| 0+25)),w
  8948  02F5  00F0               	movwf	??_do_I2C_DO_ADDRESS_NACK
  8949  02F6  0870               	movf	??_do_I2C_DO_ADDRESS_NACK,w
  8950  02F7  00F6               	movwf	rdBlkRegCompleteHandler@p
  8951  02F8  300F               	movlw	15
  8952  02F9  3E20               	addlw	(low (_i2c_status| 0))& (0+255)
  8953  02FA  0086               	movwf	6
  8954  02FB  0187               	clrf	7
  8955  02FC  3F41               	moviw [1]fsr1
  8956  02FD  008A               	movwf	10
  8957  02FE  3F40               	moviw [0]fsr1
  8958  02FF  000A               	callw
  8959  0300  3182               	pagesel	$
  8960  0301  00F1               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
  8961  0302  01F2               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
  8962                           
  8963                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8964                           ; Switch size 1, requested type "simple"
  8965                           ; Number of cases is 1, Range of values is 0 to 0
  8966                           ; switch strategies available:
  8967                           ; Name         Instructions Cycles
  8968                           ; simple_byte            4     3 (average)
  8969                           ; direct_byte            8     6 (fixed)
  8970                           ; jumptable            260     6 (fixed)
  8971                           ;	Chosen strategy is simple_byte
  8972  0303  0872               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
  8973  0304  3A00               	xorlw	0	; case 0
  8974  0305  1903               	skipnz
  8975  0306  2B08               	goto	i1l4563
  8976  0307  2AF0               	goto	i1l3921
  8977  0308                     i1l4563:	
  8978                           
  8979                           ; Switch size 1, requested type "simple"
  8980                           ; Number of cases is 2, Range of values is 2 to 3
  8981                           ; switch strategies available:
  8982                           ; Name         Instructions Cycles
  8983                           ; simple_byte            7     4 (average)
  8984                           ; direct_byte           13     9 (fixed)
  8985                           ; jumptable            263     9 (fixed)
  8986                           ;	Chosen strategy is simple_byte
  8987  0308  0871               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
  8988  0309  3A02               	xorlw	2	; case 2
  8989  030A  1903               	skipnz
  8990  030B  2AEC               	goto	i1l3917
  8991  030C  3A01               	xorlw	1	; case 3
  8992  030D  1903               	skipnz
  8993  030E  2AEC               	goto	i1l3917
  8994  030F  2AF0               	goto	i1l3921
  8995  0310                     i1l201:	
  8996  0310  0008               	return
  8997  0311                     __end_of_do_I2C_DO_ADDRESS_NACK:	
  8998                           
  8999                           	psect	text24
  9000  0570                     __ptext24:	
  9001 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
  9002 ;; Defined at:
  9003 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
  9004 ;; Parameters:    Size  Location     Type
  9005 ;;		None
  9006 ;; Auto vars:     Size  Location     Type
  9007 ;;		None
  9008 ;; Return value:  Size  Location     Type
  9009 ;;                  1    wreg      enum E12722
  9010 ;; Registers used:
  9011 ;;		wreg, status,2, status,0, pclath, cstack
  9012 ;; Tracked objects:
  9013 ;;		On entry : 0/0
  9014 ;;		On exit  : 0/0
  9015 ;;		Unchanged: 0/0
  9016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9021 ;;Total ram usage:        0 bytes
  9022 ;; Hardware stack levels used:    1
  9023 ;; Hardware stack levels required when called:    1
  9024 ;; This function calls:
  9025 ;;		_i2c1_driver_sendNACK
  9026 ;; This function is called by:
  9027 ;;		_do_I2C_RX
  9028 ;;		_i2c_ISR
  9029 ;; This function uses a non-reentrant model
  9030 ;;
  9031                           
  9032                           
  9033                           ;psect for function _do_I2C_DO_NACK_RESTART
  9034  0570                     _do_I2C_DO_NACK_RESTART:	
  9035  0570                     i1l2941:	
  9036                           ;incstack = 0
  9037                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  9038                           
  9039                           
  9040                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
  9041  0570  3185  25A1  3185   	fcall	_i2c1_driver_sendNACK
  9042  0573                     i1l2943:	
  9043                           
  9044                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
  9045  0573  3009               	movlw	9
  9046  0574                     i1l195:	
  9047  0574  0008               	return
  9048  0575                     __end_of_do_I2C_DO_NACK_RESTART:	
  9049                           
  9050                           	psect	text25
  9051  0575                     __ptext25:	
  9052 ;; *************** function _do_I2C_DO_NACK_STOP *****************
  9053 ;; Defined at:
  9054 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
  9055 ;; Parameters:    Size  Location     Type
  9056 ;;		None
  9057 ;; Auto vars:     Size  Location     Type
  9058 ;;		None
  9059 ;; Return value:  Size  Location     Type
  9060 ;;                  1    wreg      enum E12722
  9061 ;; Registers used:
  9062 ;;		wreg, status,2, status,0, pclath, cstack
  9063 ;; Tracked objects:
  9064 ;;		On entry : 0/0
  9065 ;;		On exit  : 0/0
  9066 ;;		Unchanged: 0/0
  9067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9072 ;;Total ram usage:        0 bytes
  9073 ;; Hardware stack levels used:    1
  9074 ;; Hardware stack levels required when called:    1
  9075 ;; This function calls:
  9076 ;;		_i2c1_driver_sendNACK
  9077 ;; This function is called by:
  9078 ;;		_do_I2C_RX
  9079 ;;		_i2c_ISR
  9080 ;; This function uses a non-reentrant model
  9081 ;;
  9082                           
  9083                           
  9084                           ;psect for function _do_I2C_DO_NACK_STOP
  9085  0575                     _do_I2C_DO_NACK_STOP:	
  9086  0575                     i1l2935:	
  9087                           ;incstack = 0
  9088                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  9089                           
  9090                           
  9091                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
  9092  0575  3185  25A1  3185   	fcall	_i2c1_driver_sendNACK
  9093  0578                     i1l2937:	
  9094                           
  9095                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
  9096  0578  300A               	movlw	10
  9097  0579                     i1l192:	
  9098  0579  0008               	return
  9099  057A                     __end_of_do_I2C_DO_NACK_STOP:	
  9100                           
  9101                           	psect	text26
  9102  057A                     __ptext26:	
  9103 ;; *************** function _do_I2C_DO_ACK *****************
  9104 ;; Defined at:
  9105 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
  9106 ;; Parameters:    Size  Location     Type
  9107 ;;		None
  9108 ;; Auto vars:     Size  Location     Type
  9109 ;;		None
  9110 ;; Return value:  Size  Location     Type
  9111 ;;                  1    wreg      enum E12722
  9112 ;; Registers used:
  9113 ;;		wreg, status,2, status,0, pclath, cstack
  9114 ;; Tracked objects:
  9115 ;;		On entry : 0/0
  9116 ;;		On exit  : 0/0
  9117 ;;		Unchanged: 0/0
  9118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9123 ;;Total ram usage:        0 bytes
  9124 ;; Hardware stack levels used:    1
  9125 ;; Hardware stack levels required when called:    1
  9126 ;; This function calls:
  9127 ;;		_i2c1_driver_sendACK
  9128 ;; This function is called by:
  9129 ;;		_i2c_ISR
  9130 ;; This function uses a non-reentrant model
  9131 ;;
  9132                           
  9133                           
  9134                           ;psect for function _do_I2C_DO_ACK
  9135  057A                     _do_I2C_DO_ACK:	
  9136  057A                     i1l3103:	
  9137                           ;incstack = 0
  9138                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
  9139                           
  9140                           
  9141                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
  9142  057A  3185  25A5  3185   	fcall	_i2c1_driver_sendACK
  9143  057D                     i1l3105:	
  9144                           
  9145                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
  9146  057D  3005               	movlw	5
  9147  057E                     i1l189:	
  9148  057E  0008               	return
  9149  057F                     __end_of_do_I2C_DO_ACK:	
  9150                           
  9151                           	psect	text27
  9152  055D                     __ptext27:	
  9153 ;; *************** function _do_I2C_RCEN *****************
  9154 ;; Defined at:
  9155 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
  9156 ;; Parameters:    Size  Location     Type
  9157 ;;		None
  9158 ;; Auto vars:     Size  Location     Type
  9159 ;;		None
  9160 ;; Return value:  Size  Location     Type
  9161 ;;                  1    wreg      enum E12722
  9162 ;; Registers used:
  9163 ;;		wreg, status,2, status,0, pclath, cstack
  9164 ;; Tracked objects:
  9165 ;;		On entry : 0/0
  9166 ;;		On exit  : 0/0
  9167 ;;		Unchanged: 0/0
  9168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9173 ;;Total ram usage:        0 bytes
  9174 ;; Hardware stack levels used:    1
  9175 ;; Hardware stack levels required when called:    1
  9176 ;; This function calls:
  9177 ;;		_i2c1_driver_startRX
  9178 ;; This function is called by:
  9179 ;;		_i2c_ISR
  9180 ;; This function uses a non-reentrant model
  9181 ;;
  9182                           
  9183                           
  9184                           ;psect for function _do_I2C_RCEN
  9185  055D                     _do_I2C_RCEN:	
  9186  055D                     i1l3095:	
  9187                           ;incstack = 0
  9188                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
  9189                           
  9190                           
  9191                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
  9192  055D  0020               	movlb	0	; select bank0
  9193  055E  11A0               	bcf	_i2c_status,3
  9194  055F                     i1l3097:	
  9195                           
  9196                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
  9197  055F  3185  25B5  3185   	fcall	_i2c1_driver_startRX
  9198  0562                     i1l3099:	
  9199                           
  9200                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
  9201  0562  3004               	movlw	4
  9202  0563                     i1l186:	
  9203  0563  0008               	return
  9204  0564                     __end_of_do_I2C_RCEN:	
  9205                           
  9206                           	psect	text28
  9207  0545                     __ptext28:	
  9208 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
  9209 ;; Defined at:
  9210 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
  9211 ;; Parameters:    Size  Location     Type
  9212 ;;		None
  9213 ;; Auto vars:     Size  Location     Type
  9214 ;;		None
  9215 ;; Return value:  Size  Location     Type
  9216 ;;                  1    wreg      enum E12722
  9217 ;; Registers used:
  9218 ;;		wreg, status,2, status,0, pclath, cstack
  9219 ;; Tracked objects:
  9220 ;;		On entry : 0/0
  9221 ;;		On exit  : 0/0
  9222 ;;		Unchanged: 0/0
  9223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9228 ;;Total ram usage:        0 bytes
  9229 ;; Hardware stack levels used:    1
  9230 ;; Hardware stack levels required when called:    1
  9231 ;; This function calls:
  9232 ;;		_i2c1_driver_TXData
  9233 ;; This function is called by:
  9234 ;;		_i2c_ISR
  9235 ;; This function uses a non-reentrant model
  9236 ;;
  9237                           
  9238                           
  9239                           ;psect for function _do_I2C_SEND_ADR_WRITE
  9240  0545                     _do_I2C_SEND_ADR_WRITE:	
  9241  0545                     i1l3087:	
  9242                           ;incstack = 0
  9243                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  9244                           
  9245                           
  9246                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
  9247  0545  0020               	movlb	0	; select bank0
  9248  0546  15A0               	bsf	_i2c_status,3
  9249  0547                     i1l3089:	
  9250                           
  9251                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
  9252  0547  3521               	lslf	_i2c_status+1,w
  9253  0548  3185  2598  3185   	fcall	_i2c1_driver_TXData
  9254  054B                     i1l3091:	
  9255                           
  9256                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
  9257  054B  3003               	movlw	3
  9258  054C                     i1l183:	
  9259  054C  0008               	return
  9260  054D                     __end_of_do_I2C_SEND_ADR_WRITE:	
  9261                           
  9262                           	psect	text29
  9263  0534                     __ptext29:	
  9264 ;; *************** function _do_I2C_SEND_ADR_READ *****************
  9265 ;; Defined at:
  9266 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
  9267 ;; Parameters:    Size  Location     Type
  9268 ;;		None
  9269 ;; Auto vars:     Size  Location     Type
  9270 ;;		None
  9271 ;; Return value:  Size  Location     Type
  9272 ;;                  1    wreg      enum E12722
  9273 ;; Registers used:
  9274 ;;		wreg, status,2, status,0, pclath, cstack
  9275 ;; Tracked objects:
  9276 ;;		On entry : 0/0
  9277 ;;		On exit  : 0/0
  9278 ;;		Unchanged: 0/0
  9279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9284 ;;Total ram usage:        0 bytes
  9285 ;; Hardware stack levels used:    1
  9286 ;; Hardware stack levels required when called:    1
  9287 ;; This function calls:
  9288 ;;		_i2c1_driver_TXData
  9289 ;; This function is called by:
  9290 ;;		_i2c_ISR
  9291 ;; This function uses a non-reentrant model
  9292 ;;
  9293                           
  9294                           
  9295                           ;psect for function _do_I2C_SEND_ADR_READ
  9296  0534                     _do_I2C_SEND_ADR_READ:	
  9297  0534                     i1l3079:	
  9298                           ;incstack = 0
  9299                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  9300                           
  9301                           
  9302                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
  9303  0534  0020               	movlb	0	; select bank0
  9304  0535  15A0               	bsf	_i2c_status,3
  9305  0536                     i1l3081:	
  9306                           
  9307                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
  9308  0536  1403               	setc
  9309  0537  0D21               	rlf	_i2c_status+1,w
  9310  0538  3185  2598  3185   	fcall	_i2c1_driver_TXData
  9311  053B                     i1l3083:	
  9312                           
  9313                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
  9314  053B  3005               	movlw	5
  9315  053C                     i1l180:	
  9316  053C  0008               	return
  9317  053D                     __end_of_do_I2C_SEND_ADR_READ:	
  9318                           
  9319                           	psect	text30
  9320  057F                     __ptext30:	
  9321 ;; *************** function _do_I2C_SEND_STOP *****************
  9322 ;; Defined at:
  9323 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
  9324 ;; Parameters:    Size  Location     Type
  9325 ;;		None
  9326 ;; Auto vars:     Size  Location     Type
  9327 ;;		None
  9328 ;; Return value:  Size  Location     Type
  9329 ;;                  1    wreg      enum E12722
  9330 ;; Registers used:
  9331 ;;		wreg, status,2, status,0, pclath, cstack
  9332 ;; Tracked objects:
  9333 ;;		On entry : 0/0
  9334 ;;		On exit  : 0/0
  9335 ;;		Unchanged: 0/0
  9336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9341 ;;Total ram usage:        0 bytes
  9342 ;; Hardware stack levels used:    1
  9343 ;; Hardware stack levels required when called:    1
  9344 ;; This function calls:
  9345 ;;		_i2c1_driver_stop
  9346 ;; This function is called by:
  9347 ;;		_do_I2C_DO_ADDRESS_NACK
  9348 ;;		_do_I2C_TX
  9349 ;;		_do_I2C_TX_EMPTY
  9350 ;;		_i2c_ISR
  9351 ;; This function uses a non-reentrant model
  9352 ;;
  9353                           
  9354                           
  9355                           ;psect for function _do_I2C_SEND_STOP
  9356  057F                     _do_I2C_SEND_STOP:	
  9357  057F                     i1l2923:	
  9358                           ;incstack = 0
  9359                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  9360                           
  9361                           
  9362                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
  9363  057F  3185  25B8  3185   	fcall	_i2c1_driver_stop
  9364  0582                     i1l2925:	
  9365                           
  9366                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
  9367  0582  3000               	movlw	0
  9368  0583                     i1l177:	
  9369  0583  0008               	return
  9370  0584                     __end_of_do_I2C_SEND_STOP:	
  9371                           
  9372                           	psect	text31
  9373  0584                     __ptext31:	
  9374 ;; *************** function _do_I2C_SEND_RESTART *****************
  9375 ;; Defined at:
  9376 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
  9377 ;; Parameters:    Size  Location     Type
  9378 ;;		None
  9379 ;; Auto vars:     Size  Location     Type
  9380 ;;		None
  9381 ;; Return value:  Size  Location     Type
  9382 ;;                  1    wreg      enum E12722
  9383 ;; Registers used:
  9384 ;;		wreg, status,2, status,0, pclath, cstack
  9385 ;; Tracked objects:
  9386 ;;		On entry : 0/0
  9387 ;;		On exit  : 0/0
  9388 ;;		Unchanged: 0/0
  9389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9394 ;;Total ram usage:        0 bytes
  9395 ;; Hardware stack levels used:    1
  9396 ;; Hardware stack levels required when called:    1
  9397 ;; This function calls:
  9398 ;;		_i2c1_driver_restart
  9399 ;; This function is called by:
  9400 ;;		_do_I2C_DO_ADDRESS_NACK
  9401 ;;		_do_I2C_TX_EMPTY
  9402 ;;		_i2c_ISR
  9403 ;; This function uses a non-reentrant model
  9404 ;;
  9405                           
  9406                           
  9407                           ;psect for function _do_I2C_SEND_RESTART
  9408  0584                     _do_I2C_SEND_RESTART:	
  9409  0584                     i1l2917:	
  9410                           ;incstack = 0
  9411                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  9412                           
  9413                           
  9414                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
  9415  0584  3185  25BB  3185   	fcall	_i2c1_driver_restart
  9416  0587                     i1l2919:	
  9417                           
  9418                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
  9419  0587  3001               	movlw	1
  9420  0588                     i1l174:	
  9421  0588  0008               	return
  9422  0589                     __end_of_do_I2C_SEND_RESTART:	
  9423                           
  9424                           	psect	text32
  9425  0589                     __ptext32:	
  9426 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
  9427 ;; Defined at:
  9428 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
  9429 ;; Parameters:    Size  Location     Type
  9430 ;;		None
  9431 ;; Auto vars:     Size  Location     Type
  9432 ;;		None
  9433 ;; Return value:  Size  Location     Type
  9434 ;;                  1    wreg      enum E12722
  9435 ;; Registers used:
  9436 ;;		wreg, status,2, status,0, pclath, cstack
  9437 ;; Tracked objects:
  9438 ;;		On entry : 0/0
  9439 ;;		On exit  : 0/0
  9440 ;;		Unchanged: 0/0
  9441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9446 ;;Total ram usage:        0 bytes
  9447 ;; Hardware stack levels used:    1
  9448 ;; Hardware stack levels required when called:    1
  9449 ;; This function calls:
  9450 ;;		_i2c1_driver_restart
  9451 ;; This function is called by:
  9452 ;;		_do_I2C_TX
  9453 ;;		_i2c_ISR
  9454 ;; This function uses a non-reentrant model
  9455 ;;
  9456                           
  9457                           
  9458                           ;psect for function _do_I2C_SEND_RESTART_WRITE
  9459  0589                     _do_I2C_SEND_RESTART_WRITE:	
  9460  0589                     i1l2911:	
  9461                           ;incstack = 0
  9462                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  9463                           
  9464                           
  9465                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
  9466  0589  3185  25BB  3185   	fcall	_i2c1_driver_restart
  9467  058C                     i1l2913:	
  9468                           
  9469                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
  9470  058C  3002               	movlw	2
  9471  058D                     i1l171:	
  9472  058D  0008               	return
  9473  058E                     __end_of_do_I2C_SEND_RESTART_WRITE:	
  9474                           
  9475                           	psect	text33
  9476  058E                     __ptext33:	
  9477 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
  9478 ;; Defined at:
  9479 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
  9480 ;; Parameters:    Size  Location     Type
  9481 ;;		None
  9482 ;; Auto vars:     Size  Location     Type
  9483 ;;		None
  9484 ;; Return value:  Size  Location     Type
  9485 ;;                  1    wreg      enum E12722
  9486 ;; Registers used:
  9487 ;;		wreg, status,2, status,0, pclath, cstack
  9488 ;; Tracked objects:
  9489 ;;		On entry : 0/0
  9490 ;;		On exit  : 0/0
  9491 ;;		Unchanged: 0/0
  9492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9497 ;;Total ram usage:        0 bytes
  9498 ;; Hardware stack levels used:    1
  9499 ;; Hardware stack levels required when called:    1
  9500 ;; This function calls:
  9501 ;;		_i2c1_driver_restart
  9502 ;; This function is called by:
  9503 ;;		_do_I2C_TX
  9504 ;;		_i2c_ISR
  9505 ;; This function uses a non-reentrant model
  9506 ;;
  9507                           
  9508                           
  9509                           ;psect for function _do_I2C_SEND_RESTART_READ
  9510  058E                     _do_I2C_SEND_RESTART_READ:	
  9511  058E                     i1l2905:	
  9512                           ;incstack = 0
  9513                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  9514                           
  9515                           
  9516                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
  9517  058E  3185  25BB  3185   	fcall	_i2c1_driver_restart
  9518  0591                     i1l2907:	
  9519                           
  9520                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
  9521  0591  3001               	movlw	1
  9522  0592                     i1l168:	
  9523  0592  0008               	return
  9524  0593                     __end_of_do_I2C_SEND_RESTART_READ:	
  9525                           
  9526                           	psect	text34
  9527  0593                     __ptext34:	
  9528 ;; *************** function _do_I2C_IDLE *****************
  9529 ;; Defined at:
  9530 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
  9531 ;; Parameters:    Size  Location     Type
  9532 ;;		None
  9533 ;; Auto vars:     Size  Location     Type
  9534 ;;		None
  9535 ;; Return value:  Size  Location     Type
  9536 ;;                  1    wreg      enum E12722
  9537 ;; Registers used:
  9538 ;;		wreg, status,2
  9539 ;; Tracked objects:
  9540 ;;		On entry : 0/0
  9541 ;;		On exit  : 0/0
  9542 ;;		Unchanged: 0/0
  9543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9548 ;;Total ram usage:        0 bytes
  9549 ;; Hardware stack levels used:    1
  9550 ;; This function calls:
  9551 ;;		Nothing
  9552 ;; This function is called by:
  9553 ;;		_i2c_ISR
  9554 ;; This function uses a non-reentrant model
  9555 ;;
  9556                           
  9557                           
  9558                           ;psect for function _do_I2C_IDLE
  9559  0593                     _do_I2C_IDLE:	
  9560  0593                     i1l3071:	
  9561                           ;incstack = 0
  9562                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
  9563                           
  9564                           
  9565                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
  9566  0593  0020               	movlb	0	; select bank0
  9567  0594  1020               	bcf	_i2c_status,0
  9568  0595                     i1l3073:	
  9569                           
  9570                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
  9571  0595  01AA               	clrf	_i2c_status+10
  9572  0596                     i1l3075:	
  9573                           
  9574                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
  9575  0596  300E               	movlw	14
  9576  0597                     i1l165:	
  9577  0597  0008               	return
  9578  0598                     __end_of_do_I2C_IDLE:	
  9579                           
  9580                           	psect	text35
  9581  054D                     __ptext35:	
  9582 ;; *************** function _do_I2C_RESET *****************
  9583 ;; Defined at:
  9584 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
  9585 ;; Parameters:    Size  Location     Type
  9586 ;;		None
  9587 ;; Auto vars:     Size  Location     Type
  9588 ;;		None
  9589 ;; Return value:  Size  Location     Type
  9590 ;;                  1    wreg      enum E12722
  9591 ;; Registers used:
  9592 ;;		wreg, status,2, status,0, pclath, cstack
  9593 ;; Tracked objects:
  9594 ;;		On entry : 0/0
  9595 ;;		On exit  : 0/0
  9596 ;;		Unchanged: 0/0
  9597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9602 ;;Total ram usage:        0 bytes
  9603 ;; Hardware stack levels used:    1
  9604 ;; Hardware stack levels required when called:    1
  9605 ;; This function calls:
  9606 ;;		_i2c1_driver_resetBus
  9607 ;; This function is called by:
  9608 ;;		_i2c_ISR
  9609 ;; This function uses a non-reentrant model
  9610 ;;
  9611                           
  9612                           
  9613                           ;psect for function _do_I2C_RESET
  9614  054D                     _do_I2C_RESET:	
  9615  054D                     i1l3061:	
  9616                           ;incstack = 0
  9617                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
  9618                           
  9619                           
  9620                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
  9621  054D  3185  25C4  3185   	fcall	_i2c1_driver_resetBus
  9622  0550                     i1l3063:	
  9623                           
  9624                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
  9625  0550  0020               	movlb	0	; select bank0
  9626  0551  1020               	bcf	_i2c_status,0
  9627  0552                     i1l3065:	
  9628                           
  9629                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
  9630  0552  01AA               	clrf	_i2c_status+10
  9631  0553                     i1l3067:	
  9632                           
  9633                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
  9634  0553  300E               	movlw	14
  9635  0554                     i1l162:	
  9636  0554  0008               	return
  9637  0555                     __end_of_do_I2C_RESET:	
  9638                           
  9639                           	psect	text36
  9640  0282                     __ptext36:	
  9641 ;; *************** function _do_I2C_TX_EMPTY *****************
  9642 ;; Defined at:
  9643 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
  9644 ;; Parameters:    Size  Location     Type
  9645 ;;		None
  9646 ;; Auto vars:     Size  Location     Type
  9647 ;;		None
  9648 ;; Return value:  Size  Location     Type
  9649 ;;                  1    wreg      enum E12722
  9650 ;; Registers used:
  9651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9652 ;; Tracked objects:
  9653 ;;		On entry : 0/0
  9654 ;;		On exit  : 0/0
  9655 ;;		Unchanged: 0/0
  9656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9659 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9660 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9661 ;;Total ram usage:        3 bytes
  9662 ;; Hardware stack levels used:    1
  9663 ;; Hardware stack levels required when called:    3
  9664 ;; This function calls:
  9665 ;;		Absolute function
  9666 ;;		_do_I2C_SEND_RESTART
  9667 ;;		_do_I2C_SEND_STOP
  9668 ;;		_i2c_restartWrite
  9669 ;;		_mssp1_setIRQ
  9670 ;;		_rd1RegCompleteHandler
  9671 ;;		_rd2RegCompleteHandler
  9672 ;;		_rdBlkRegCompleteHandler
  9673 ;;		_returnReset
  9674 ;;		_returnStop
  9675 ;;		_wr1RegCompleteHandler
  9676 ;;		_wr2RegCompleteHandler
  9677 ;; This function is called by:
  9678 ;;		_i2c_ISR
  9679 ;; This function uses a non-reentrant model
  9680 ;;
  9681                           
  9682                           
  9683                           ;psect for function _do_I2C_TX_EMPTY
  9684  0282                     _do_I2C_TX_EMPTY:	
  9685  0282                     i1l3997:	
  9686                           ;incstack = 0
  9687                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9688                           
  9689                           
  9690                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
  9691  0282  0020               	movlb	0	; select bank0
  9692  0283  1520               	bsf	_i2c_status,2
  9693                           
  9694                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
  9695  0284  2A92               	goto	i1l4015
  9696  0285                     i1l3999:	
  9697                           
  9698                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
  9699  0285  3185  2584  3182   	fcall	_do_I2C_SEND_RESTART
  9700  0288  2AB4               	goto	i1l237
  9701  0289                     i1l4003:	
  9702                           
  9703                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
  9704  0289  3185  25AF  3182   	fcall	_mssp1_setIRQ
  9705  028C                     i1l4005:	
  9706                           
  9707                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
  9708  028C  3003               	movlw	3
  9709  028D  2AB4               	goto	i1l237
  9710  028E                     i1l4009:	
  9711                           
  9712                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
  9713  028E  3185  257F  3182   	fcall	_do_I2C_SEND_STOP
  9714  0291  2AB4               	goto	i1l237
  9715  0292                     i1l4015:	
  9716  0292  0837               	movf	low ((_i2c_status| 0+23)),w
  9717  0293  00F0               	movwf	??_do_I2C_TX_EMPTY
  9718  0294  0870               	movf	??_do_I2C_TX_EMPTY,w
  9719  0295  00F6               	movwf	rdBlkRegCompleteHandler@p
  9720  0296  300B               	movlw	11
  9721  0297  3E20               	addlw	(low (_i2c_status| 0))& (0+255)
  9722  0298  0086               	movwf	6
  9723  0299  0187               	clrf	7
  9724  029A  3F41               	moviw [1]fsr1
  9725  029B  008A               	movwf	10
  9726  029C  3F40               	moviw [0]fsr1
  9727  029D  000A               	callw
  9728  029E  3182               	pagesel	$
  9729  029F  00F1               	movwf	??_do_I2C_TX_EMPTY+1
  9730  02A0  01F2               	clrf	??_do_I2C_TX_EMPTY+2
  9731                           
  9732                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9733                           ; Switch size 1, requested type "simple"
  9734                           ; Number of cases is 1, Range of values is 0 to 0
  9735                           ; switch strategies available:
  9736                           ; Name         Instructions Cycles
  9737                           ; simple_byte            4     3 (average)
  9738                           ; direct_byte            8     6 (fixed)
  9739                           ; jumptable            260     6 (fixed)
  9740                           ;	Chosen strategy is simple_byte
  9741  02A1  0872               	movf	??_do_I2C_TX_EMPTY+2,w
  9742  02A2  3A00               	xorlw	0	; case 0
  9743  02A3  1903               	skipnz
  9744  02A4  2AA6               	goto	i1l4565
  9745  02A5  2A8E               	goto	i1l4009
  9746  02A6                     i1l4565:	
  9747                           
  9748                           ; Switch size 1, requested type "simple"
  9749                           ; Number of cases is 4, Range of values is 1 to 4
  9750                           ; switch strategies available:
  9751                           ; Name         Instructions Cycles
  9752                           ; simple_byte           13     7 (average)
  9753                           ; direct_byte           17     9 (fixed)
  9754                           ; jumptable            263     9 (fixed)
  9755                           ;	Chosen strategy is simple_byte
  9756  02A6  0871               	movf	??_do_I2C_TX_EMPTY+1,w
  9757  02A7  3A01               	xorlw	1	; case 1
  9758  02A8  1903               	skipnz
  9759  02A9  2A8E               	goto	i1l4009
  9760  02AA  3A03               	xorlw	3	; case 2
  9761  02AB  1903               	skipnz
  9762  02AC  2A85               	goto	i1l3999
  9763  02AD  3A01               	xorlw	1	; case 3
  9764  02AE  1903               	skipnz
  9765  02AF  2A85               	goto	i1l3999
  9766  02B0  3A07               	xorlw	7	; case 4
  9767  02B1  1903               	skipnz
  9768  02B2  2A89               	goto	i1l4003
  9769  02B3  2A8E               	goto	i1l4009
  9770  02B4                     i1l237:	
  9771  02B4  0008               	return
  9772  02B5                     __end_of_do_I2C_TX_EMPTY:	
  9773                           
  9774                           	psect	text37
  9775  05AF                     __ptext37:	
  9776 ;; *************** function _mssp1_setIRQ *****************
  9777 ;; Defined at:
  9778 ;;		line 59 in file "mcc_generated_files/i2c1_driver.c"
  9779 ;; Parameters:    Size  Location     Type
  9780 ;;		None
  9781 ;; Auto vars:     Size  Location     Type
  9782 ;;		None
  9783 ;; Return value:  Size  Location     Type
  9784 ;;                  1    wreg      void 
  9785 ;; Registers used:
  9786 ;;		None
  9787 ;; Tracked objects:
  9788 ;;		On entry : 0/0
  9789 ;;		On exit  : 0/0
  9790 ;;		Unchanged: 0/0
  9791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9796 ;;Total ram usage:        0 bytes
  9797 ;; Hardware stack levels used:    1
  9798 ;; This function calls:
  9799 ;;		Nothing
  9800 ;; This function is called by:
  9801 ;;		_do_I2C_TX_EMPTY
  9802 ;; This function uses a non-reentrant model
  9803 ;;
  9804                           
  9805                           
  9806                           ;psect for function _mssp1_setIRQ
  9807  05AF                     _mssp1_setIRQ:	
  9808  05AF                     i1l2955:	
  9809                           ;incstack = 0
  9810                           ; Regs used in _mssp1_setIRQ: []
  9811                           
  9812                           
  9813                           ;mcc_generated_files/i2c1_driver.c: 61:     else
  9814  05AF  002E               	movlb	14	; select bank14
  9815  05B0  140F               	bsf	15,0	;volatile
  9816  05B1                     i1l636:	
  9817  05B1  0008               	return
  9818  05B2                     __end_of_mssp1_setIRQ:	
  9819                           
  9820                           	psect	text38
  9821  0555                     __ptext38:	
  9822 ;; *************** function _i2c1_driver_isNACK *****************
  9823 ;; Defined at:
  9824 ;;		line 162 in file "mcc_generated_files/i2c1_driver.c"
  9825 ;; Parameters:    Size  Location     Type
  9826 ;;		None
  9827 ;; Auto vars:     Size  Location     Type
  9828 ;;		None
  9829 ;; Return value:  Size  Location     Type
  9830 ;;		None               void
  9831 ;; Registers used:
  9832 ;;		wreg, status,2, status,0
  9833 ;; Tracked objects:
  9834 ;;		On entry : 0/0
  9835 ;;		On exit  : 0/0
  9836 ;;		Unchanged: 0/0
  9837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9840 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9841 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9842 ;;Total ram usage:        1 bytes
  9843 ;; Hardware stack levels used:    1
  9844 ;; This function calls:
  9845 ;;		Nothing
  9846 ;; This function is called by:
  9847 ;;		_do_I2C_TX
  9848 ;;		_i2c_ISR
  9849 ;; This function uses a non-reentrant model
  9850 ;;
  9851                           
  9852                           
  9853                           ;psect for function _i2c1_driver_isNACK
  9854  0555                     _i2c1_driver_isNACK:	
  9855  0555                     i1l2947:	
  9856                           ;incstack = 0
  9857                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
  9858                           
  9859                           
  9860                           ;mcc_generated_files/i2c1_driver.c: 164:     return SSP1CON2bits.ACKSTAT;
  9861  0555  0023               	movlb	3	; select bank3
  9862  0556  0E11               	swapf	17,w	;volatile
  9863  0557  0C89               	rrf	9,f
  9864  0558  0C89               	rrf	9,f
  9865  0559  3901               	andlw	1
  9866  055A  00F0               	movwf	??_i2c1_driver_isNACK
  9867  055B  0C70               	rrf	??_i2c1_driver_isNACK,w
  9868  055C                     i1l671:	
  9869  055C  0008               	return
  9870  055D                     __end_of_i2c1_driver_isNACK:	
  9871                           
  9872                           	psect	text39
  9873  0598                     __ptext39:	
  9874 ;; *************** function _i2c1_driver_TXData *****************
  9875 ;; Defined at:
  9876 ;;		line 187 in file "mcc_generated_files/i2c1_driver.c"
  9877 ;; Parameters:    Size  Location     Type
  9878 ;;  d               1    wreg     unsigned char 
  9879 ;; Auto vars:     Size  Location     Type
  9880 ;;  d               1    0[COMMON] unsigned char 
  9881 ;; Return value:  Size  Location     Type
  9882 ;;                  1    wreg      void 
  9883 ;; Registers used:
  9884 ;;		wreg
  9885 ;; Tracked objects:
  9886 ;;		On entry : 0/0
  9887 ;;		On exit  : 0/0
  9888 ;;		Unchanged: 0/0
  9889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9891 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9893 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9894 ;;Total ram usage:        1 bytes
  9895 ;; Hardware stack levels used:    1
  9896 ;; This function calls:
  9897 ;;		Nothing
  9898 ;; This function is called by:
  9899 ;;		_do_I2C_SEND_ADR_READ
  9900 ;;		_do_I2C_SEND_ADR_WRITE
  9901 ;;		_do_I2C_TX
  9902 ;; This function uses a non-reentrant model
  9903 ;;
  9904                           
  9905                           
  9906                           ;psect for function _i2c1_driver_TXData
  9907  0598                     _i2c1_driver_TXData:	
  9908                           
  9909                           ;incstack = 0
  9910                           ; Regs used in _i2c1_driver_TXData: [wreg]
  9911                           ;i2c1_driver_TXData@d stored from wreg
  9912  0598  00F0               	movwf	i2c1_driver_TXData@d
  9913  0599                     i1l2929:	
  9914                           
  9915                           ;mcc_generated_files/i2c1_driver.c: 187: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 188: {;mcc_generated_files/i2c1_driver.c: 18
      +                          9:     SSP1BUF = d;
  9916  0599  0870               	movf	i2c1_driver_TXData@d,w
  9917  059A  0023               	movlb	3	; select bank3
  9918  059B  008C               	movwf	12	;volatile
  9919  059C                     i1l686:	
  9920  059C  0008               	return
  9921  059D                     __end_of_i2c1_driver_TXData:	
  9922                           
  9923                           	psect	text40
  9924  05B2                     __ptext40:	
  9925 ;; *************** function _i2c1_driver_getRXData *****************
  9926 ;; Defined at:
  9927 ;;		line 172 in file "mcc_generated_files/i2c1_driver.c"
  9928 ;; Parameters:    Size  Location     Type
  9929 ;;		None
  9930 ;; Auto vars:     Size  Location     Type
  9931 ;;		None
  9932 ;; Return value:  Size  Location     Type
  9933 ;;                  1    wreg      unsigned char 
  9934 ;; Registers used:
  9935 ;;		wreg
  9936 ;; Tracked objects:
  9937 ;;		On entry : 0/0
  9938 ;;		On exit  : 0/0
  9939 ;;		Unchanged: 0/0
  9940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9945 ;;Total ram usage:        0 bytes
  9946 ;; Hardware stack levels used:    1
  9947 ;; This function calls:
  9948 ;;		Nothing
  9949 ;; This function is called by:
  9950 ;;		_do_I2C_RX
  9951 ;; This function uses a non-reentrant model
  9952 ;;
  9953                           
  9954                           
  9955                           ;psect for function _i2c1_driver_getRXData
  9956  05B2                     _i2c1_driver_getRXData:	
  9957  05B2                     i1l2951:	
  9958                           ;incstack = 0
  9959                           ; Regs used in _i2c1_driver_getRXData: [wreg]
  9960                           
  9961                           
  9962                           ;mcc_generated_files/i2c1_driver.c: 174:     return SSP1BUF;
  9963  05B2  0023               	movlb	3	; select bank3
  9964  05B3  080C               	movf	12,w	;volatile
  9965  05B4                     i1l677:	
  9966  05B4  0008               	return
  9967  05B5                     __end_of_i2c1_driver_getRXData:	
  9968                           
  9969                           	psect	text41
  9970  05A1                     __ptext41:	
  9971 ;; *************** function _i2c1_driver_sendNACK *****************
  9972 ;; Defined at:
  9973 ;;		line 203 in file "mcc_generated_files/i2c1_driver.c"
  9974 ;; Parameters:    Size  Location     Type
  9975 ;;		None
  9976 ;; Auto vars:     Size  Location     Type
  9977 ;;		None
  9978 ;; Return value:  Size  Location     Type
  9979 ;;                  1    wreg      void 
  9980 ;; Registers used:
  9981 ;;		None
  9982 ;; Tracked objects:
  9983 ;;		On entry : 0/0
  9984 ;;		On exit  : 0/0
  9985 ;;		Unchanged: 0/0
  9986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9991 ;;Total ram usage:        0 bytes
  9992 ;; Hardware stack levels used:    1
  9993 ;; This function calls:
  9994 ;;		Nothing
  9995 ;; This function is called by:
  9996 ;;		_do_I2C_DO_NACK_STOP
  9997 ;;		_do_I2C_DO_NACK_RESTART
  9998 ;; This function uses a non-reentrant model
  9999 ;;
 10000                           
 10001                           
 10002                           ;psect for function _i2c1_driver_sendNACK
 10003  05A1                     _i2c1_driver_sendNACK:	
 10004  05A1                     i1l2895:	
 10005                           ;incstack = 0
 10006                           ; Regs used in _i2c1_driver_sendNACK: []
 10007                           
 10008                           
 10009                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKDT = 1;
 10010  05A1  0023               	movlb	3	; select bank3
 10011  05A2  1691               	bsf	17,5	;volatile
 10012                           
 10013                           ;mcc_generated_files/i2c1_driver.c: 206:     SSP1CON2bits.ACKEN = 1;
 10014  05A3  1611               	bsf	17,4	;volatile
 10015  05A4                     i1l695:	
 10016  05A4  0008               	return
 10017  05A5                     __end_of_i2c1_driver_sendNACK:	
 10018                           
 10019                           	psect	text42
 10020  05C4                     __ptext42:	
 10021 ;; *************** function _i2c1_driver_resetBus *****************
 10022 ;; Defined at:
 10023 ;;		line 142 in file "mcc_generated_files/i2c1_driver.c"
 10024 ;; Parameters:    Size  Location     Type
 10025 ;;		None
 10026 ;; Auto vars:     Size  Location     Type
 10027 ;;		None
 10028 ;; Return value:  Size  Location     Type
 10029 ;;                  1    wreg      void 
 10030 ;; Registers used:
 10031 ;;		None
 10032 ;; Tracked objects:
 10033 ;;		On entry : 0/0
 10034 ;;		On exit  : 0/0
 10035 ;;		Unchanged: 0/0
 10036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10041 ;;Total ram usage:        0 bytes
 10042 ;; Hardware stack levels used:    1
 10043 ;; This function calls:
 10044 ;;		Nothing
 10045 ;; This function is called by:
 10046 ;;		_do_I2C_RESET
 10047 ;; This function uses a non-reentrant model
 10048 ;;
 10049                           
 10050                           
 10051                           ;psect for function _i2c1_driver_resetBus
 10052  05C4                     _i2c1_driver_resetBus:	
 10053  05C4                     i1l659:	
 10054                           ;incstack = 0
 10055                           ; Regs used in _i2c1_driver_resetBus: []
 10056                           
 10057  05C4  0008               	return
 10058  05C5                     __end_of_i2c1_driver_resetBus:	
 10059                           
 10060                           	psect	text43
 10061  05B5                     __ptext43:	
 10062 ;; *************** function _i2c1_driver_startRX *****************
 10063 ;; Defined at:
 10064 ;;		line 167 in file "mcc_generated_files/i2c1_driver.c"
 10065 ;; Parameters:    Size  Location     Type
 10066 ;;		None
 10067 ;; Auto vars:     Size  Location     Type
 10068 ;;		None
 10069 ;; Return value:  Size  Location     Type
 10070 ;;                  1    wreg      void 
 10071 ;; Registers used:
 10072 ;;		None
 10073 ;; Tracked objects:
 10074 ;;		On entry : 0/0
 10075 ;;		On exit  : 0/0
 10076 ;;		Unchanged: 0/0
 10077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10082 ;;Total ram usage:        0 bytes
 10083 ;; Hardware stack levels used:    1
 10084 ;; This function calls:
 10085 ;;		Nothing
 10086 ;; This function is called by:
 10087 ;;		_do_I2C_RCEN
 10088 ;; This function uses a non-reentrant model
 10089 ;;
 10090                           
 10091                           
 10092                           ;psect for function _i2c1_driver_startRX
 10093  05B5                     _i2c1_driver_startRX:	
 10094  05B5                     i1l2931:	
 10095                           ;incstack = 0
 10096                           ; Regs used in _i2c1_driver_startRX: []
 10097                           
 10098                           
 10099                           ;mcc_generated_files/i2c1_driver.c: 169:     SSP1CON2bits.RCEN = 1;
 10100  05B5  0023               	movlb	3	; select bank3
 10101  05B6  1591               	bsf	17,3	;volatile
 10102  05B7                     i1l674:	
 10103  05B7  0008               	return
 10104  05B8                     __end_of_i2c1_driver_startRX:	
 10105                           
 10106                           	psect	text44
 10107  0421                     __ptext44:	
 10108 ;; *************** function _rdBlkRegCompleteHandler *****************
 10109 ;; Defined at:
 10110 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10111 ;; Parameters:    Size  Location     Type
 10112 ;;  p               1    6[COMMON] PTR void 
 10113 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10114 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10115 ;; Auto vars:     Size  Location     Type
 10116 ;;		None
 10117 ;; Return value:  Size  Location     Type
 10118 ;;                  1    wreg      enum E358
 10119 ;; Registers used:
 10120 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10121 ;; Tracked objects:
 10122 ;;		On entry : 0/0
 10123 ;;		On exit  : 0/0
 10124 ;;		Unchanged: 0/0
 10125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10126 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10129 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10130 ;;Total ram usage:        1 bytes
 10131 ;; Hardware stack levels used:    1
 10132 ;; Hardware stack levels required when called:    2
 10133 ;; This function calls:
 10134 ;;		_i2c_setBuffer
 10135 ;;		_i2c_setDataCompleteCallback
 10136 ;; This function is called by:
 10137 ;;		_i2c_readDataBlock
 10138 ;;		_do_I2C_DO_ADDRESS_NACK
 10139 ;;		_do_I2C_TX
 10140 ;;		_do_I2C_RX
 10141 ;;		_do_I2C_TX_EMPTY
 10142 ;; This function uses a non-reentrant model
 10143 ;;
 10144                           
 10145                           
 10146                           ;psect for function _rdBlkRegCompleteHandler
 10147  0421                     _rdBlkRegCompleteHandler:	
 10148  0421                     i1l3869:	
 10149                           ;incstack = 0
 10150                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 10151                           
 10152                           
 10153                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
 10154  0421  0876               	movf	rdBlkRegCompleteHandler@p,w
 10155  0422  0086               	movwf	6
 10156  0423  0187               	clrf	7
 10157  0424  3F40               	moviw [0]fsr1
 10158  0425  00F0               	movwf	i2c_setBuffer@bufferSize
 10159  0426  3F41               	moviw [1]fsr1
 10160  0427  00F1               	movwf	i2c_setBuffer@bufferSize+1
 10161  0428  0876               	movf	rdBlkRegCompleteHandler@p,w
 10162  0429  3E02               	addlw	2
 10163  042A  0086               	movwf	6
 10164  042B  0187               	clrf	7
 10165  042C  0801               	movf	1,w
 10166  042D  3184  24E5  3184   	fcall	_i2c_setBuffer
 10167                           
 10168                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 10169  0430  3000               	movlw	0
 10170  0431  0020               	movlb	0	; select bank0
 10171  0432  00D0               	movwf	i2c_setDataCompleteCallback@cb
 10172  0433  00D1               	movwf	i2c_setDataCompleteCallback@cb+1
 10173  0434  01D2               	clrf	i2c_setDataCompleteCallback@p
 10174  0435  3185  2504  3184   	fcall	_i2c_setDataCompleteCallback
 10175  0438                     i1l3871:	
 10176                           
 10177                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
 10178  0438  3002               	movlw	2
 10179  0439                     i1l340:	
 10180  0439  0008               	return
 10181  043A                     __end_of_rdBlkRegCompleteHandler:	
 10182                           
 10183                           	psect	text45
 10184  047C                     __ptext45:	
 10185 ;; *************** function _rd2RegCompleteHandler *****************
 10186 ;; Defined at:
 10187 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10188 ;; Parameters:    Size  Location     Type
 10189 ;;  p               1    6[COMMON] PTR void 
 10190 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10191 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10192 ;; Auto vars:     Size  Location     Type
 10193 ;;		None
 10194 ;; Return value:  Size  Location     Type
 10195 ;;                  1    wreg      enum E358
 10196 ;; Registers used:
 10197 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10198 ;; Tracked objects:
 10199 ;;		On entry : 0/0
 10200 ;;		On exit  : 0/0
 10201 ;;		Unchanged: 0/0
 10202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10203 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10206 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10207 ;;Total ram usage:        1 bytes
 10208 ;; Hardware stack levels used:    1
 10209 ;; Hardware stack levels required when called:    2
 10210 ;; This function calls:
 10211 ;;		_i2c_setBuffer
 10212 ;;		_i2c_setDataCompleteCallback
 10213 ;; This function is called by:
 10214 ;;		_i2c_read2ByteRegister
 10215 ;;		_do_I2C_DO_ADDRESS_NACK
 10216 ;;		_do_I2C_TX
 10217 ;;		_do_I2C_RX
 10218 ;;		_do_I2C_TX_EMPTY
 10219 ;; This function uses a non-reentrant model
 10220 ;;
 10221                           
 10222                           
 10223                           ;psect for function _rd2RegCompleteHandler
 10224  047C                     _rd2RegCompleteHandler:	
 10225  047C                     i1l3853:	
 10226                           ;incstack = 0
 10227                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10228                           
 10229                           
 10230                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
 10231  047C  3002               	movlw	2
 10232  047D  00F0               	movwf	i2c_setBuffer@bufferSize
 10233  047E  3000               	movlw	0
 10234  047F  00F1               	movwf	i2c_setBuffer@bufferSize+1
 10235  0480  0876               	movf	rd2RegCompleteHandler@p,w
 10236  0481  3184  24E5  3184   	fcall	_i2c_setBuffer
 10237  0484                     i1l3855:	
 10238                           
 10239                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 10240  0484  3000               	movlw	0
 10241  0485  0020               	movlb	0	; select bank0
 10242  0486  00D0               	movwf	i2c_setDataCompleteCallback@cb
 10243  0487  00D1               	movwf	i2c_setDataCompleteCallback@cb+1
 10244  0488  01D2               	clrf	i2c_setDataCompleteCallback@p
 10245  0489  3185  2504  3184   	fcall	_i2c_setDataCompleteCallback
 10246  048C                     i1l3857:	
 10247                           
 10248                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
 10249  048C  3002               	movlw	2
 10250  048D                     i1l316:	
 10251  048D  0008               	return
 10252  048E                     __end_of_rd2RegCompleteHandler:	
 10253                           
 10254                           	psect	text46
 10255  048E                     __ptext46:	
 10256 ;; *************** function _rd1RegCompleteHandler *****************
 10257 ;; Defined at:
 10258 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10259 ;; Parameters:    Size  Location     Type
 10260 ;;  p               1    6[COMMON] PTR void 
 10261 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10262 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10263 ;; Auto vars:     Size  Location     Type
 10264 ;;		None
 10265 ;; Return value:  Size  Location     Type
 10266 ;;                  1    wreg      enum E358
 10267 ;; Registers used:
 10268 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10269 ;; Tracked objects:
 10270 ;;		On entry : 0/0
 10271 ;;		On exit  : 0/0
 10272 ;;		Unchanged: 0/0
 10273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10274 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10277 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10278 ;;Total ram usage:        1 bytes
 10279 ;; Hardware stack levels used:    1
 10280 ;; Hardware stack levels required when called:    2
 10281 ;; This function calls:
 10282 ;;		_i2c_setBuffer
 10283 ;;		_i2c_setDataCompleteCallback
 10284 ;; This function is called by:
 10285 ;;		_i2c_read1ByteRegister
 10286 ;;		_do_I2C_DO_ADDRESS_NACK
 10287 ;;		_do_I2C_TX
 10288 ;;		_do_I2C_RX
 10289 ;;		_do_I2C_TX_EMPTY
 10290 ;; This function uses a non-reentrant model
 10291 ;;
 10292                           
 10293                           
 10294                           ;psect for function _rd1RegCompleteHandler
 10295  048E                     _rd1RegCompleteHandler:	
 10296  048E                     i1l3845:	
 10297                           ;incstack = 0
 10298                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10299                           
 10300                           
 10301                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
 10302  048E  3001               	movlw	1
 10303  048F  00F0               	movwf	i2c_setBuffer@bufferSize
 10304  0490  3000               	movlw	0
 10305  0491  00F1               	movwf	i2c_setBuffer@bufferSize+1
 10306  0492  0876               	movf	rd1RegCompleteHandler@p,w
 10307  0493  3184  24E5  3184   	fcall	_i2c_setBuffer
 10308  0496                     i1l3847:	
 10309                           
 10310                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 10311  0496  3000               	movlw	0
 10312  0497  0020               	movlb	0	; select bank0
 10313  0498  00D0               	movwf	i2c_setDataCompleteCallback@cb
 10314  0499  00D1               	movwf	i2c_setDataCompleteCallback@cb+1
 10315  049A  01D2               	clrf	i2c_setDataCompleteCallback@p
 10316  049B  3185  2504  3184   	fcall	_i2c_setDataCompleteCallback
 10317  049E                     i1l3849:	
 10318                           
 10319                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
 10320  049E  3002               	movlw	2
 10321  049F                     i1l301:	
 10322  049F  0008               	return
 10323  04A0                     __end_of_rd1RegCompleteHandler:	
 10324                           
 10325                           	psect	text47
 10326  04A0                     __ptext47:	
 10327 ;; *************** function _wr1RegCompleteHandler *****************
 10328 ;; Defined at:
 10329 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10330 ;; Parameters:    Size  Location     Type
 10331 ;;  p               1    6[COMMON] PTR void 
 10332 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10333 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10334 ;; Auto vars:     Size  Location     Type
 10335 ;;		None
 10336 ;; Return value:  Size  Location     Type
 10337 ;;                  1    wreg      enum E358
 10338 ;; Registers used:
 10339 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10340 ;; Tracked objects:
 10341 ;;		On entry : 0/0
 10342 ;;		On exit  : 0/0
 10343 ;;		Unchanged: 0/0
 10344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10345 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10348 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10349 ;;Total ram usage:        1 bytes
 10350 ;; Hardware stack levels used:    1
 10351 ;; Hardware stack levels required when called:    2
 10352 ;; This function calls:
 10353 ;;		_i2c_setBuffer
 10354 ;;		_i2c_setDataCompleteCallback
 10355 ;; This function is called by:
 10356 ;;		_i2c_write1ByteRegister
 10357 ;;		_do_I2C_DO_ADDRESS_NACK
 10358 ;;		_do_I2C_TX
 10359 ;;		_do_I2C_RX
 10360 ;;		_do_I2C_TX_EMPTY
 10361 ;; This function uses a non-reentrant model
 10362 ;;
 10363                           
 10364                           
 10365                           ;psect for function _wr1RegCompleteHandler
 10366  04A0                     _wr1RegCompleteHandler:	
 10367  04A0                     i1l3837:	
 10368                           ;incstack = 0
 10369                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10370                           
 10371                           
 10372                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
 10373  04A0  3001               	movlw	1
 10374  04A1  00F0               	movwf	i2c_setBuffer@bufferSize
 10375  04A2  3000               	movlw	0
 10376  04A3  00F1               	movwf	i2c_setBuffer@bufferSize+1
 10377  04A4  0876               	movf	wr1RegCompleteHandler@p,w
 10378  04A5  3184  24E5  3184   	fcall	_i2c_setBuffer
 10379  04A8                     i1l3839:	
 10380                           
 10381                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 10382  04A8  3000               	movlw	0
 10383  04A9  0020               	movlb	0	; select bank0
 10384  04AA  00D0               	movwf	i2c_setDataCompleteCallback@cb
 10385  04AB  00D1               	movwf	i2c_setDataCompleteCallback@cb+1
 10386  04AC  01D2               	clrf	i2c_setDataCompleteCallback@p
 10387  04AD  3185  2504  3184   	fcall	_i2c_setDataCompleteCallback
 10388  04B0                     i1l3841:	
 10389                           
 10390                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
 10391  04B0  3004               	movlw	4
 10392  04B1                     i1l280:	
 10393  04B1  0008               	return
 10394  04B2                     __end_of_wr1RegCompleteHandler:	
 10395                           
 10396                           	psect	text48
 10397  05BE                     __ptext48:	
 10398 ;; *************** function _i2c_restartWrite *****************
 10399 ;; Defined at:
 10400 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 10401 ;; Parameters:    Size  Location     Type
 10402 ;;  p               1    6[COMMON] PTR void 
 10403 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10404 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10405 ;; Auto vars:     Size  Location     Type
 10406 ;;		None
 10407 ;; Return value:  Size  Location     Type
 10408 ;;                  1    wreg      enum E358
 10409 ;; Registers used:
 10410 ;;		wreg
 10411 ;; Tracked objects:
 10412 ;;		On entry : 0/0
 10413 ;;		On exit  : 0/0
 10414 ;;		Unchanged: 0/0
 10415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10416 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10419 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10420 ;;Total ram usage:        1 bytes
 10421 ;; Hardware stack levels used:    1
 10422 ;; This function calls:
 10423 ;;		Nothing
 10424 ;; This function is called by:
 10425 ;;		_i2c_write1ByteRegister
 10426 ;;		_i2c_writeNBytes
 10427 ;;		_i2c_read1ByteRegister
 10428 ;;		_i2c_read2ByteRegister
 10429 ;;		_i2c_write2ByteRegister
 10430 ;;		_i2c_readDataBlock
 10431 ;;		_do_I2C_DO_ADDRESS_NACK
 10432 ;;		_do_I2C_TX
 10433 ;;		_do_I2C_RX
 10434 ;;		_do_I2C_TX_EMPTY
 10435 ;; This function uses a non-reentrant model
 10436 ;;
 10437                           
 10438                           
 10439                           ;psect for function _i2c_restartWrite
 10440  05BE                     _i2c_restartWrite:	
 10441  05BE                     i1l3003:	
 10442                           ;incstack = 0
 10443                           ; Regs used in _i2c_restartWrite: [wreg]
 10444                           
 10445                           
 10446                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
 10447  05BE  3003               	movlw	3
 10448  05BF                     i1l367:	
 10449  05BF  0008               	return
 10450  05C0                     __end_of_i2c_restartWrite:	
 10451                           
 10452                           	psect	text49
 10453  05C0                     __ptext49:	
 10454 ;; *************** function _returnReset *****************
 10455 ;; Defined at:
 10456 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 10457 ;; Parameters:    Size  Location     Type
 10458 ;;  p               1    6[COMMON] PTR void 
 10459 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10460 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10461 ;; Auto vars:     Size  Location     Type
 10462 ;;		None
 10463 ;; Return value:  Size  Location     Type
 10464 ;;                  1    wreg      enum E12568
 10465 ;; Registers used:
 10466 ;;		wreg
 10467 ;; Tracked objects:
 10468 ;;		On entry : 0/0
 10469 ;;		On exit  : 0/0
 10470 ;;		Unchanged: 0/0
 10471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10472 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10475 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10476 ;;Total ram usage:        1 bytes
 10477 ;; Hardware stack levels used:    1
 10478 ;; This function calls:
 10479 ;;		Nothing
 10480 ;; This function is called by:
 10481 ;;		_i2c_open
 10482 ;;		_do_I2C_DO_ADDRESS_NACK
 10483 ;;		_do_I2C_TX
 10484 ;;		_do_I2C_RX
 10485 ;;		_do_I2C_TX_EMPTY
 10486 ;; This function uses a non-reentrant model
 10487 ;;
 10488                           
 10489                           
 10490                           ;psect for function _returnReset
 10491  05C0                     _returnReset:	
 10492  05C0                     i1l2961:	
 10493                           ;incstack = 0
 10494                           ; Regs used in _returnReset: [wreg]
 10495                           
 10496                           
 10497                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 10498  05C0  3005               	movlw	5
 10499  05C1                     i1l256:	
 10500  05C1  0008               	return
 10501  05C2                     __end_of_returnReset:	
 10502                           
 10503                           	psect	text50
 10504  05C2                     __ptext50:	
 10505 ;; *************** function _returnStop *****************
 10506 ;; Defined at:
 10507 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 10508 ;; Parameters:    Size  Location     Type
 10509 ;;  p               1    6[COMMON] PTR void 
 10510 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10511 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10512 ;; Auto vars:     Size  Location     Type
 10513 ;;		None
 10514 ;; Return value:  Size  Location     Type
 10515 ;;                  1    wreg      enum E12568
 10516 ;; Registers used:
 10517 ;;		wreg
 10518 ;; Tracked objects:
 10519 ;;		On entry : 0/0
 10520 ;;		On exit  : 0/0
 10521 ;;		Unchanged: 0/0
 10522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10523 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10526 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10527 ;;Total ram usage:        1 bytes
 10528 ;; Hardware stack levels used:    1
 10529 ;; This function calls:
 10530 ;;		Nothing
 10531 ;; This function is called by:
 10532 ;;		_setCallBack
 10533 ;;		_i2c_open
 10534 ;;		_do_I2C_DO_ADDRESS_NACK
 10535 ;;		_do_I2C_TX
 10536 ;;		_do_I2C_RX
 10537 ;;		_do_I2C_TX_EMPTY
 10538 ;; This function uses a non-reentrant model
 10539 ;;
 10540                           
 10541                           
 10542                           ;psect for function _returnStop
 10543  05C2                     _returnStop:	
 10544  05C2                     i1l2957:	
 10545                           ;incstack = 0
 10546                           ; Regs used in _returnStop: [wreg]
 10547                           
 10548                           
 10549                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
 10550  05C2  3001               	movlw	1
 10551  05C3                     i1l253:	
 10552  05C3  0008               	return
 10553  05C4                     __end_of_returnStop:	
 10554                           
 10555                           	psect	text51
 10556  04B2                     __ptext51:	
 10557 ;; *************** function _wr2RegCompleteHandler *****************
 10558 ;; Defined at:
 10559 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10560 ;; Parameters:    Size  Location     Type
 10561 ;;  p               1    6[COMMON] PTR void 
 10562 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10563 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10564 ;; Auto vars:     Size  Location     Type
 10565 ;;		None
 10566 ;; Return value:  Size  Location     Type
 10567 ;;                  1    wreg      enum E358
 10568 ;; Registers used:
 10569 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10570 ;; Tracked objects:
 10571 ;;		On entry : 0/0
 10572 ;;		On exit  : 0/0
 10573 ;;		Unchanged: 0/0
 10574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10575 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10578 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10579 ;;Total ram usage:        1 bytes
 10580 ;; Hardware stack levels used:    1
 10581 ;; Hardware stack levels required when called:    2
 10582 ;; This function calls:
 10583 ;;		_i2c_setBuffer
 10584 ;;		_i2c_setDataCompleteCallback
 10585 ;; This function is called by:
 10586 ;;		_i2c_write2ByteRegister
 10587 ;;		_do_I2C_DO_ADDRESS_NACK
 10588 ;;		_do_I2C_TX
 10589 ;;		_do_I2C_RX
 10590 ;;		_do_I2C_TX_EMPTY
 10591 ;; This function uses a non-reentrant model
 10592 ;;
 10593                           
 10594                           
 10595                           ;psect for function _wr2RegCompleteHandler
 10596  04B2                     _wr2RegCompleteHandler:	
 10597  04B2                     i1l3861:	
 10598                           ;incstack = 0
 10599                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10600                           
 10601                           
 10602                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
 10603  04B2  3002               	movlw	2
 10604  04B3  00F0               	movwf	i2c_setBuffer@bufferSize
 10605  04B4  3000               	movlw	0
 10606  04B5  00F1               	movwf	i2c_setBuffer@bufferSize+1
 10607  04B6  0876               	movf	wr2RegCompleteHandler@p,w
 10608  04B7  3184  24E5  3184   	fcall	_i2c_setBuffer
 10609  04BA                     i1l3863:	
 10610                           
 10611                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 10612  04BA  3000               	movlw	0
 10613  04BB  0020               	movlb	0	; select bank0
 10614  04BC  00D0               	movwf	i2c_setDataCompleteCallback@cb
 10615  04BD  00D1               	movwf	i2c_setDataCompleteCallback@cb+1
 10616  04BE  01D2               	clrf	i2c_setDataCompleteCallback@p
 10617  04BF  3185  2504  3184   	fcall	_i2c_setDataCompleteCallback
 10618  04C2                     i1l3865:	
 10619                           
 10620                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
 10621  04C2  3004               	movlw	4
 10622  04C3                     i1l328:	
 10623  04C3  0008               	return
 10624  04C4                     __end_of_wr2RegCompleteHandler:	
 10625                           
 10626                           	psect	text52
 10627  0504                     __ptext52:	
 10628 ;; *************** function _i2c_setDataCompleteCallback *****************
 10629 ;; Defined at:
 10630 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 10631 ;; Parameters:    Size  Location     Type
 10632 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
 10633 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 10634 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 10635 ;;  p               1    2[BANK0 ] PTR void 
 10636 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10637 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10638 ;; Auto vars:     Size  Location     Type
 10639 ;;		None
 10640 ;; Return value:  Size  Location     Type
 10641 ;;                  1    wreg      void 
 10642 ;; Registers used:
 10643 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10644 ;; Tracked objects:
 10645 ;;		On entry : 0/0
 10646 ;;		On exit  : 0/0
 10647 ;;		Unchanged: 0/0
 10648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10649 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10651 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10652 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10653 ;;Total ram usage:        4 bytes
 10654 ;; Hardware stack levels used:    1
 10655 ;; Hardware stack levels required when called:    1
 10656 ;; This function calls:
 10657 ;;		_setCallBack
 10658 ;; This function is called by:
 10659 ;;		_wr1RegCompleteHandler
 10660 ;;		_rd1RegCompleteHandler
 10661 ;;		_rd2RegCompleteHandler
 10662 ;;		_wr2RegCompleteHandler
 10663 ;;		_rdBlkRegCompleteHandler
 10664 ;;		_i2c_write1ByteRegister
 10665 ;;		_i2c_read1ByteRegister
 10666 ;;		_i2c_read2ByteRegister
 10667 ;;		_i2c_write2ByteRegister
 10668 ;;		_i2c_readDataBlock
 10669 ;; This function uses a non-reentrant model
 10670 ;;
 10671                           
 10672                           
 10673                           ;psect for function _i2c_setDataCompleteCallback
 10674  0504                     _i2c_setDataCompleteCallback:	
 10675  0504                     i1l3827:	
 10676                           ;incstack = 0
 10677                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 10678                           
 10679                           
 10680                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
 10681  0504  0020               	movlb	0	; select bank0
 10682  0505  0851               	movf	i2c_setDataCompleteCallback@cb+1,w
 10683  0506  00F1               	movwf	setCallBack@cb+1
 10684  0507  0850               	movf	i2c_setDataCompleteCallback@cb,w
 10685  0508  00F0               	movwf	setCallBack@cb
 10686  0509  0852               	movf	i2c_setDataCompleteCallback@p,w
 10687  050A  00F5               	movwf	??_i2c_setDataCompleteCallback
 10688  050B  0875               	movf	??_i2c_setDataCompleteCallback,w
 10689  050C  00F2               	movwf	setCallBack@p
 10690  050D  3000               	movlw	0
 10691  050E  3183  233B  3185   	fcall	_setCallBack
 10692  0511                     i1l110:	
 10693  0511  0008               	return
 10694  0512                     __end_of_i2c_setDataCompleteCallback:	
 10695                           
 10696                           	psect	text53
 10697  033B                     __ptext53:	
 10698 ;; *************** function _setCallBack *****************
 10699 ;; Defined at:
 10700 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 10701 ;; Parameters:    Size  Location     Type
 10702 ;;  idx             1    wreg     enum E12740
 10703 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 10704 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 10705 ;;		 -> i2c_restartWrite(1), wr1RegCompleteHandler(1), Absolute function(1), 
 10706 ;;  p               1    2[COMMON] PTR void 
 10707 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10708 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10709 ;; Auto vars:     Size  Location     Type
 10710 ;;  idx             1    4[COMMON] enum E12740
 10711 ;; Return value:  Size  Location     Type
 10712 ;;                  1    wreg      void 
 10713 ;; Registers used:
 10714 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10715 ;; Tracked objects:
 10716 ;;		On entry : 0/0
 10717 ;;		On exit  : 0/0
 10718 ;;		Unchanged: 0/0
 10719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10720 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10721 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10722 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10723 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10724 ;;Total ram usage:        5 bytes
 10725 ;; Hardware stack levels used:    1
 10726 ;; This function calls:
 10727 ;;		Nothing
 10728 ;; This function is called by:
 10729 ;;		_i2c_setDataCompleteCallback
 10730 ;;		_i2c_setWriteCollisionCallback
 10731 ;;		_i2c_setAddressNACKCallback
 10732 ;;		_i2c_setDataNACKCallback
 10733 ;;		_i2c_setTimeOutCallback
 10734 ;; This function uses a non-reentrant model
 10735 ;;
 10736                           
 10737                           
 10738                           ;psect for function _setCallBack
 10739  033B                     _setCallBack:	
 10740                           
 10741                           ;incstack = 0
 10742                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 10743                           ;setCallBack@idx stored from wreg
 10744  033B  00F4               	movwf	setCallBack@idx
 10745  033C                     i1l2877:	
 10746                           
 10747                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
 10748  033C  0870               	movf	setCallBack@cb,w
 10749  033D  0471               	iorwf	setCallBack@cb+1,w
 10750  033E  1903               	btfsc	3,2
 10751  033F  2B41               	goto	u108_21
 10752  0340  2B42               	goto	u108_20
 10753  0341                     u108_21:	
 10754  0341  2B53               	goto	i1l2881
 10755  0342                     u108_20:	
 10756  0342                     i1l2879:	
 10757                           
 10758                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
 10759  0342  3574               	lslf	setCallBack@idx,w
 10760  0343  3E2B               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 10761  0344  0086               	movwf	6
 10762  0345  0187               	clrf	7
 10763  0346  0870               	movf	setCallBack@cb,w
 10764  0347  3FC0               	movwi [0]fsr1
 10765  0348  0871               	movf	setCallBack@cb+1,w
 10766  0349  3FC1               	movwi [1]fsr1
 10767                           
 10768                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
 10769  034A  0872               	movf	setCallBack@p,w
 10770  034B  00F3               	movwf	??_setCallBack
 10771  034C  0874               	movf	setCallBack@idx,w
 10772  034D  3E37               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 10773  034E  0086               	movwf	6
 10774  034F  0187               	clrf	7
 10775  0350  0873               	movf	??_setCallBack,w
 10776  0351  0081               	movwf	1
 10777                           
 10778                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
 10779  0352  2B60               	goto	i1l261
 10780  0353                     i1l2881:	
 10781                           
 10782                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
 10783  0353  3574               	lslf	setCallBack@idx,w
 10784  0354  3E2B               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 10785  0355  0086               	movwf	6
 10786  0356  0187               	clrf	7
 10787  0357  30C2               	movlw	low _returnStop
 10788  0358  3FC0               	movwi [0]fsr1
 10789  0359  3005               	movlw	high _returnStop
 10790  035A  3FC1               	movwi [1]fsr1
 10791                           
 10792                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
 10793  035B  0874               	movf	setCallBack@idx,w
 10794  035C  3E37               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 10795  035D  0086               	movwf	6
 10796  035E  0187               	clrf	7
 10797  035F  0181               	clrf	1
 10798  0360                     i1l261:	
 10799  0360  0008               	return
 10800  0361                     __end_of_setCallBack:	
 10801                           
 10802                           	psect	text54
 10803  04E5                     __ptext54:	
 10804 ;; *************** function _i2c_setBuffer *****************
 10805 ;; Defined at:
 10806 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 10807 ;; Parameters:    Size  Location     Type
 10808 ;;  buffer          1    wreg     PTR void 
 10809 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 10810 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 10811 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 10812 ;;  bufferSize      2    0[COMMON] unsigned int 
 10813 ;; Auto vars:     Size  Location     Type
 10814 ;;  buffer          1    3[COMMON] PTR void 
 10815 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 10816 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 10817 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 10818 ;; Return value:  Size  Location     Type
 10819 ;;                  1    wreg      void 
 10820 ;; Registers used:
 10821 ;;		wreg
 10822 ;; Tracked objects:
 10823 ;;		On entry : 0/0
 10824 ;;		On exit  : 0/0
 10825 ;;		Unchanged: 0/0
 10826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10827 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10828 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10829 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10830 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10831 ;;Total ram usage:        4 bytes
 10832 ;; Hardware stack levels used:    1
 10833 ;; This function calls:
 10834 ;;		Nothing
 10835 ;; This function is called by:
 10836 ;;		_wr1RegCompleteHandler
 10837 ;;		_rd1RegCompleteHandler
 10838 ;;		_rd2RegCompleteHandler
 10839 ;;		_wr2RegCompleteHandler
 10840 ;;		_rdBlkRegCompleteHandler
 10841 ;;		_i2c_write1ByteRegister
 10842 ;;		_i2c_writeNBytes
 10843 ;;		_i2c_read1ByteRegister
 10844 ;;		_i2c_read2ByteRegister
 10845 ;;		_i2c_write2ByteRegister
 10846 ;;		_i2c_readDataBlock
 10847 ;;		_i2c_readNBytes
 10848 ;; This function uses a non-reentrant model
 10849 ;;
 10850                           
 10851                           
 10852                           ;psect for function _i2c_setBuffer
 10853  04E5                     _i2c_setBuffer:	
 10854                           
 10855                           ;incstack = 0
 10856                           ; Regs used in _i2c_setBuffer: [wreg]
 10857                           ;i2c_setBuffer@buffer stored from wreg
 10858  04E5  00F3               	movwf	i2c_setBuffer@buffer
 10859  04E6                     i1l2885:	
 10860                           
 10861                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
 10862  04E6  0020               	movlb	0	; select bank0
 10863  04E7  1D20               	btfss	_i2c_status,2
 10864  04E8  2CEA               	goto	u109_21
 10865  04E9  2CEB               	goto	u109_20
 10866  04EA                     u109_21:	
 10867  04EA  2CF4               	goto	i1l140
 10868  04EB                     u109_20:	
 10869  04EB                     i1l2887:	
 10870                           
 10871                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
 10872  04EB  0873               	movf	i2c_setBuffer@buffer,w
 10873  04EC  00F2               	movwf	??_i2c_setBuffer
 10874  04ED  0872               	movf	??_i2c_setBuffer,w
 10875  04EE  00A2               	movwf	low ((_i2c_status| 0+2))
 10876                           
 10877                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
 10878  04EF  0871               	movf	i2c_setBuffer@bufferSize+1,w
 10879  04F0  00A4               	movwf	_i2c_status+4
 10880  04F1  0870               	movf	i2c_setBuffer@bufferSize,w
 10881  04F2  00A3               	movwf	_i2c_status+3
 10882  04F3                     i1l2889:	
 10883                           
 10884                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
 10885  04F3  1120               	bcf	_i2c_status,2
 10886  04F4                     i1l140:	
 10887  04F4  0008               	return
 10888  04F5                     __end_of_i2c_setBuffer:	
 10889                           
 10890                           	psect	text55
 10891  05B8                     __ptext55:	
 10892 ;; *************** function _i2c1_driver_stop *****************
 10893 ;; Defined at:
 10894 ;;		line 157 in file "mcc_generated_files/i2c1_driver.c"
 10895 ;; Parameters:    Size  Location     Type
 10896 ;;		None
 10897 ;; Auto vars:     Size  Location     Type
 10898 ;;		None
 10899 ;; Return value:  Size  Location     Type
 10900 ;;                  1    wreg      void 
 10901 ;; Registers used:
 10902 ;;		None
 10903 ;; Tracked objects:
 10904 ;;		On entry : 0/0
 10905 ;;		On exit  : 0/0
 10906 ;;		Unchanged: 0/0
 10907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10912 ;;Total ram usage:        0 bytes
 10913 ;; Hardware stack levels used:    1
 10914 ;; This function calls:
 10915 ;;		Nothing
 10916 ;; This function is called by:
 10917 ;;		_do_I2C_SEND_STOP
 10918 ;; This function uses a non-reentrant model
 10919 ;;
 10920                           
 10921                           
 10922                           ;psect for function _i2c1_driver_stop
 10923  05B8                     _i2c1_driver_stop:	
 10924  05B8                     i1l2893:	
 10925                           ;incstack = 0
 10926                           ; Regs used in _i2c1_driver_stop: []
 10927                           
 10928                           
 10929                           ;mcc_generated_files/i2c1_driver.c: 159:     SSP1CON2bits.PEN = 1;
 10930  05B8  0023               	movlb	3	; select bank3
 10931  05B9  1511               	bsf	17,2	;volatile
 10932  05BA                     i1l668:	
 10933  05BA  0008               	return
 10934  05BB                     __end_of_i2c1_driver_stop:	
 10935                           
 10936                           	psect	text56
 10937  05BB                     __ptext56:	
 10938 ;; *************** function _i2c1_driver_restart *****************
 10939 ;; Defined at:
 10940 ;;		line 152 in file "mcc_generated_files/i2c1_driver.c"
 10941 ;; Parameters:    Size  Location     Type
 10942 ;;		None
 10943 ;; Auto vars:     Size  Location     Type
 10944 ;;		None
 10945 ;; Return value:  Size  Location     Type
 10946 ;;                  1    wreg      void 
 10947 ;; Registers used:
 10948 ;;		None
 10949 ;; Tracked objects:
 10950 ;;		On entry : 0/0
 10951 ;;		On exit  : 0/0
 10952 ;;		Unchanged: 0/0
 10953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10958 ;;Total ram usage:        0 bytes
 10959 ;; Hardware stack levels used:    1
 10960 ;; This function calls:
 10961 ;;		Nothing
 10962 ;; This function is called by:
 10963 ;;		_do_I2C_SEND_RESTART_READ
 10964 ;;		_do_I2C_SEND_RESTART_WRITE
 10965 ;;		_do_I2C_SEND_RESTART
 10966 ;; This function uses a non-reentrant model
 10967 ;;
 10968                           
 10969                           
 10970                           ;psect for function _i2c1_driver_restart
 10971  05BB                     _i2c1_driver_restart:	
 10972  05BB                     i1l2891:	
 10973                           ;incstack = 0
 10974                           ; Regs used in _i2c1_driver_restart: []
 10975                           
 10976                           
 10977                           ;mcc_generated_files/i2c1_driver.c: 154:     SSP1CON2bits.RSEN = 1;
 10978  05BB  0023               	movlb	3	; select bank3
 10979  05BC  1491               	bsf	17,1	;volatile
 10980  05BD                     i1l665:	
 10981  05BD  0008               	return
 10982  05BE                     __end_of_i2c1_driver_restart:	
 10983                           
 10984                           	psect	text57
 10985  05A5                     __ptext57:	
 10986 ;; *************** function _i2c1_driver_sendACK *****************
 10987 ;; Defined at:
 10988 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
 10989 ;; Parameters:    Size  Location     Type
 10990 ;;		None
 10991 ;; Auto vars:     Size  Location     Type
 10992 ;;		None
 10993 ;; Return value:  Size  Location     Type
 10994 ;;                  1    wreg      void 
 10995 ;; Registers used:
 10996 ;;		None
 10997 ;; Tracked objects:
 10998 ;;		On entry : 0/0
 10999 ;;		On exit  : 0/0
 11000 ;;		Unchanged: 0/0
 11001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11006 ;;Total ram usage:        0 bytes
 11007 ;; Hardware stack levels used:    1
 11008 ;; This function calls:
 11009 ;;		Nothing
 11010 ;; This function is called by:
 11011 ;;		_do_I2C_DO_ACK
 11012 ;;		_do_I2C_RX
 11013 ;; This function uses a non-reentrant model
 11014 ;;
 11015                           
 11016                           
 11017                           ;psect for function _i2c1_driver_sendACK
 11018  05A5                     _i2c1_driver_sendACK:	
 11019  05A5                     i1l2933:	
 11020                           ;incstack = 0
 11021                           ; Regs used in _i2c1_driver_sendACK: []
 11022                           
 11023                           
 11024                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKDT = 0;
 11025  05A5  0023               	movlb	3	; select bank3
 11026  05A6  1291               	bcf	17,5	;volatile
 11027                           
 11028                           ;mcc_generated_files/i2c1_driver.c: 200:     SSP1CON2bits.ACKEN = 1;
 11029  05A7  1611               	bsf	17,4	;volatile
 11030  05A8                     i1l692:	
 11031  05A8  0008               	return
 11032  05A9                     __end_of_i2c1_driver_sendACK:	
 11033                           
 11034                           	psect	text58
 11035  0467                     __ptext58:	
 11036 ;; *************** function _TMR1_ISR *****************
 11037 ;; Defined at:
 11038 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 11039 ;; Parameters:    Size  Location     Type
 11040 ;;		None
 11041 ;; Auto vars:     Size  Location     Type
 11042 ;;		None
 11043 ;; Return value:  Size  Location     Type
 11044 ;;                  1    wreg      void 
 11045 ;; Registers used:
 11046 ;;		wreg, status,2, status,0, pclath, cstack
 11047 ;; Tracked objects:
 11048 ;;		On entry : 0/0
 11049 ;;		On exit  : 0/0
 11050 ;;		Unchanged: 0/0
 11051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11056 ;;Total ram usage:        0 bytes
 11057 ;; Hardware stack levels used:    1
 11058 ;; Hardware stack levels required when called:    2
 11059 ;; This function calls:
 11060 ;;		Absolute function
 11061 ;;		_TMR1_DefaultInterruptHandler
 11062 ;;		_TMR1_WriteTimer
 11063 ;;		_h_clock
 11064 ;; This function is called by:
 11065 ;;		_INTERRUPT_InterruptManager
 11066 ;; This function uses a non-reentrant model
 11067 ;;
 11068                           
 11069                           
 11070                           ;psect for function _TMR1_ISR
 11071  0467                     _TMR1_ISR:	
 11072  0467                     i1l3453:	
 11073                           ;incstack = 0
 11074                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 11075                           
 11076                           
 11077                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 11078  0467  002E               	movlb	14	; select bank14
 11079  0468  1010               	bcf	16,0	;volatile
 11080  0469                     i1l3455:	
 11081                           
 11082                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 11083  0469  087A               	movf	_timer1ReloadVal+1,w	;volatile
 11084  046A  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 11085  046B  0879               	movf	_timer1ReloadVal,w	;volatile
 11086  046C  00F0               	movwf	TMR1_WriteTimer@timerVal
 11087  046D  3184  24C4  3184   	fcall	_TMR1_WriteTimer
 11088  0470                     i1l3457:	
 11089                           
 11090                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 11091  0470  0877               	movf	_TMR1_InterruptHandler,w
 11092  0471  0478               	iorwf	_TMR1_InterruptHandler+1,w
 11093  0472  1903               	btfsc	3,2
 11094  0473  2C75               	goto	u132_21
 11095  0474  2C76               	goto	u132_20
 11096  0475                     u132_21:	
 11097  0475  2C7B               	goto	i1l428
 11098  0476                     u132_20:	
 11099  0476                     i1l3459:	
 11100                           
 11101                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 11102  0476  0878               	movf	_TMR1_InterruptHandler+1,w
 11103  0477  008A               	movwf	10
 11104  0478  0877               	movf	_TMR1_InterruptHandler,w
 11105  0479  000A               	callw
 11106  047A  3184               	pagesel	$
 11107  047B                     i1l428:	
 11108  047B  0008               	return
 11109  047C                     __end_of_TMR1_ISR:	
 11110                           
 11111                           	psect	text59
 11112  05C5                     __ptext59:	
 11113 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 11114 ;; Defined at:
 11115 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 11116 ;; Parameters:    Size  Location     Type
 11117 ;;		None
 11118 ;; Auto vars:     Size  Location     Type
 11119 ;;		None
 11120 ;; Return value:  Size  Location     Type
 11121 ;;                  1    wreg      void 
 11122 ;; Registers used:
 11123 ;;		None
 11124 ;; Tracked objects:
 11125 ;;		On entry : 0/0
 11126 ;;		On exit  : 0/0
 11127 ;;		Unchanged: 0/0
 11128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11133 ;;Total ram usage:        0 bytes
 11134 ;; Hardware stack levels used:    1
 11135 ;; This function calls:
 11136 ;;		Nothing
 11137 ;; This function is called by:
 11138 ;;		_TMR1_Initialize
 11139 ;;		_TMR1_ISR
 11140 ;; This function uses a non-reentrant model
 11141 ;;
 11142                           
 11143                           
 11144                           ;psect for function _TMR1_DefaultInterruptHandler
 11145  05C5                     _TMR1_DefaultInterruptHandler:	
 11146  05C5                     i1l434:	
 11147                           ;incstack = 0
 11148                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 11149                           
 11150  05C5  0008               	return
 11151  05C6                     __end_of_TMR1_DefaultInterruptHandler:	
 11152                           
 11153                           	psect	text60
 11154  043A                     __ptext60:	
 11155 ;; *************** function _h_clock *****************
 11156 ;; Defined at:
 11157 ;;		line 36 in file "main.c"
 11158 ;; Parameters:    Size  Location     Type
 11159 ;;		None
 11160 ;; Auto vars:     Size  Location     Type
 11161 ;;		None
 11162 ;; Return value:  Size  Location     Type
 11163 ;;                  1    wreg      void 
 11164 ;; Registers used:
 11165 ;;		wreg, status,2, status,0, pclath, cstack
 11166 ;; Tracked objects:
 11167 ;;		On entry : 0/0
 11168 ;;		On exit  : 0/0
 11169 ;;		Unchanged: 0/0
 11170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11175 ;;Total ram usage:        0 bytes
 11176 ;; Hardware stack levels used:    1
 11177 ;; Hardware stack levels required when called:    1
 11178 ;; This function calls:
 11179 ;;		_update_clock
 11180 ;; This function is called by:
 11181 ;;		_main
 11182 ;;		_TMR1_ISR
 11183 ;; This function uses a non-reentrant model
 11184 ;;
 11185                           
 11186                           
 11187                           ;psect for function _h_clock
 11188  043A                     _h_clock:	
 11189  043A                     i1l837:	
 11190                           ;incstack = 0
 11191                           ; Regs used in _h_clock: [wreg+status,2+status,0+pclath+cstack]
 11192                           ;main.c: 37:     do { LATAbits.LATA7 = ~LATAbits.LATA7; } while(0);
 11193                           
 11194  043A                     i1l3331:	
 11195  043A  1003               	clrc
 11196  043B  0020               	movlb	0	; select bank0
 11197  043C  1F96               	btfss	22,7	;volatile
 11198  043D  1403               	setc
 11199  043E  1803               	btfsc	3,0
 11200  043F  2C41               	goto	u121_21
 11201  0440  2C44               	goto	u121_20
 11202  0441                     u121_21:	
 11203  0441  0020               	movlb	0	; select bank0
 11204  0442  1796               	bsf	22,7	;volatile
 11205  0443  2C46               	goto	u122_24
 11206  0444                     u121_20:	
 11207  0444  0020               	movlb	0	; select bank0
 11208  0445  1396               	bcf	22,7	;volatile
 11209  0446                     u122_24:	
 11210  0446                     i1l3333:	
 11211                           
 11212                           ;main.c: 38:     if(!half) {
 11213  0446  19FD               	btfsc	_half/(0+8),_half& (0+7)	;volatile
 11214  0447  2C49               	goto	u123_21
 11215  0448  2C4A               	goto	u123_20
 11216  0449                     u123_21:	
 11217  0449  2C4F               	goto	i1l839
 11218  044A                     u123_20:	
 11219  044A                     i1l3335:	
 11220                           
 11221                           ;main.c: 39:         update_clock();
 11222  044A  3183  2385  3184   	fcall	_update_clock
 11223  044D                     i1l3337:	
 11224                           
 11225                           ;main.c: 40:         half = 1;
 11226  044D  15FD               	bsf	_half/(0+8),_half& (0+7)	;volatile
 11227                           
 11228                           ;main.c: 41:     }
 11229  044E  2C50               	goto	i1l841
 11230  044F                     i1l839:	
 11231                           ;main.c: 42:     else {
 11232                           
 11233                           
 11234                           ;main.c: 43:         half = 0;
 11235  044F  11FD               	bcf	_half/(0+8),_half& (0+7)	;volatile
 11236  0450                     i1l841:	
 11237  0450  0008               	return
 11238  0451                     __end_of_h_clock:	
 11239                           
 11240                           	psect	text61
 11241  0385                     __ptext61:	
 11242 ;; *************** function _update_clock *****************
 11243 ;; Defined at:
 11244 ;;		line 211 in file "main.c"
 11245 ;; Parameters:    Size  Location     Type
 11246 ;;		None
 11247 ;; Auto vars:     Size  Location     Type
 11248 ;;		None
 11249 ;; Return value:  Size  Location     Type
 11250 ;;                  1    wreg      void 
 11251 ;; Registers used:
 11252 ;;		wreg, status,2, status,0
 11253 ;; Tracked objects:
 11254 ;;		On entry : 0/0
 11255 ;;		On exit  : 0/0
 11256 ;;		Unchanged: 0/0
 11257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11260 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11261 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11262 ;;Total ram usage:        1 bytes
 11263 ;; Hardware stack levels used:    1
 11264 ;; This function calls:
 11265 ;;		Nothing
 11266 ;; This function is called by:
 11267 ;;		_h_clock
 11268 ;; This function uses a non-reentrant model
 11269 ;;
 11270                           
 11271                           
 11272                           ;psect for function _update_clock
 11273  0385                     _update_clock:	
 11274  0385                     i1l3025:	
 11275                           ;incstack = 0
 11276                           ; Regs used in _update_clock: [wreg+status,2+status,0]
 11277                           
 11278                           
 11279                           ;main.c: 212:     seg++;
 11280  0385  3001               	movlw	1
 11281  0386  00F0               	movwf	??_update_clock
 11282  0387  0870               	movf	??_update_clock,w
 11283  0388  0020               	movlb	0	; select bank0
 11284  0389  07CD               	addwf	_seg,f	;volatile
 11285                           
 11286                           ;main.c: 213:     last5s++;
 11287  038A  3001               	movlw	1
 11288  038B  00F0               	movwf	??_update_clock
 11289  038C  0870               	movf	??_update_clock,w
 11290  038D  07CC               	addwf	_last5s,f	;volatile
 11291  038E                     i1l3027:	
 11292                           
 11293                           ;main.c: 214:     if(seg >= 60) {
 11294  038E  303C               	movlw	60
 11295  038F  024D               	subwf	_seg,w	;volatile
 11296  0390  1C03               	skipc
 11297  0391  2B93               	goto	u111_21
 11298  0392  2B94               	goto	u111_20
 11299  0393                     u111_21:	
 11300  0393  2BA8               	goto	i1l928
 11301  0394                     u111_20:	
 11302  0394                     i1l3029:	
 11303                           
 11304                           ;main.c: 215:         clkm++;
 11305  0394  3001               	movlw	1
 11306  0395  00F0               	movwf	??_update_clock
 11307  0396  0870               	movf	??_update_clock,w
 11308  0397  07CE               	addwf	_clkm,f	;volatile
 11309                           
 11310                           ;main.c: 216:         last1m++;
 11311  0398  3001               	movlw	1
 11312  0399  00F0               	movwf	??_update_clock
 11313  039A  0870               	movf	??_update_clock,w
 11314  039B  07CB               	addwf	_last1m,f	;volatile
 11315  039C                     i1l3031:	
 11316                           
 11317                           ;main.c: 217:         seg = 0;
 11318  039C  01CD               	clrf	_seg	;volatile
 11319  039D                     i1l3033:	
 11320                           
 11321                           ;main.c: 218:         if(clkm >= 60) {
 11322  039D  303C               	movlw	60
 11323  039E  024E               	subwf	_clkm,w	;volatile
 11324  039F  1C03               	skipc
 11325  03A0  2BA2               	goto	u112_21
 11326  03A1  2BA3               	goto	u112_20
 11327  03A2                     u112_21:	
 11328  03A2  2BA8               	goto	i1l928
 11329  03A3                     u112_20:	
 11330  03A3                     i1l3035:	
 11331                           
 11332                           ;main.c: 219:             clkh++;
 11333  03A3  3001               	movlw	1
 11334  03A4  00F0               	movwf	??_update_clock
 11335  03A5  0870               	movf	??_update_clock,w
 11336  03A6  07CF               	addwf	_clkh,f	;volatile
 11337  03A7                     i1l3037:	
 11338                           
 11339                           ;main.c: 220:             clkm = 0;
 11340  03A7  01CE               	clrf	_clkm	;volatile
 11341  03A8                     i1l928:	
 11342  03A8  0008               	return
 11343  03A9                     __end_of_update_clock:	
 11344                           
 11345                           	psect	text62
 11346  04C4                     __ptext62:	
 11347 ;; *************** function _TMR1_WriteTimer *****************
 11348 ;; Defined at:
 11349 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 11350 ;; Parameters:    Size  Location     Type
 11351 ;;  timerVal        2    0[COMMON] unsigned short 
 11352 ;; Auto vars:     Size  Location     Type
 11353 ;;		None
 11354 ;; Return value:  Size  Location     Type
 11355 ;;                  1    wreg      void 
 11356 ;; Registers used:
 11357 ;;		wreg, status,2
 11358 ;; Tracked objects:
 11359 ;;		On entry : 0/0
 11360 ;;		On exit  : 0/0
 11361 ;;		Unchanged: 0/0
 11362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11363 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11366 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11367 ;;Total ram usage:        2 bytes
 11368 ;; Hardware stack levels used:    1
 11369 ;; This function calls:
 11370 ;;		Nothing
 11371 ;; This function is called by:
 11372 ;;		_TMR1_ISR
 11373 ;;		_TMR1_Reload
 11374 ;; This function uses a non-reentrant model
 11375 ;;
 11376                           
 11377                           
 11378                           ;psect for function _TMR1_WriteTimer
 11379  04C4                     _TMR1_WriteTimer:	
 11380  04C4                     i1l3237:	
 11381                           ;incstack = 0
 11382                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 11383                           
 11384                           
 11385                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 11386  04C4  0024               	movlb	4	; select bank4
 11387  04C5  1D0E               	btfss	14,2	;volatile
 11388  04C6  2CC8               	goto	u119_21
 11389  04C7  2CC9               	goto	u119_20
 11390  04C8                     u119_21:	
 11391  04C8  2CD0               	goto	i1l3247
 11392  04C9                     u119_20:	
 11393  04C9                     i1l3239:	
 11394                           
 11395                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 11396  04C9  100E               	bcf	14,0	;volatile
 11397  04CA                     i1l3241:	
 11398                           
 11399                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 11400  04CA  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 11401  04CB  008D               	movwf	13	;volatile
 11402  04CC                     i1l3243:	
 11403                           
 11404                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 11405  04CC  0870               	movf	TMR1_WriteTimer@timerVal,w
 11406  04CD  008C               	movwf	12	;volatile
 11407  04CE                     i1l3245:	
 11408                           
 11409                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 11410  04CE  140E               	bsf	14,0	;volatile
 11411                           
 11412                           ;mcc_generated_files/tmr1.c: 140:     }
 11413  04CF  2CD4               	goto	i1l415
 11414  04D0                     i1l3247:	
 11415                           
 11416                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 11417  04D0  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 11418  04D1  008D               	movwf	13	;volatile
 11419  04D2                     i1l3249:	
 11420                           
 11421                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 11422  04D2  0870               	movf	TMR1_WriteTimer@timerVal,w
 11423  04D3  008C               	movwf	12	;volatile
 11424  04D4                     i1l415:	
 11425  04D4  0008               	return
 11426  04D5                     __end_of_TMR1_WriteTimer:	
 11427  007E                     btemp	set	126	;btemp
 11428  007E                     int$flags	set	126
 11429  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    32
    Data        0
    BSS         54
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     16      64
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$2620$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$2626	const PTR FTN()enum E12722 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX$2625	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$2620	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), wr1RegCompleteHandler(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S422$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> h_clock(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> h_clock(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S743$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), wr1RegCompleteHandler(), Absolute function(), 

    fsmStateTable	const PTR FTN()enum E12722[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S422$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S422$callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), wr1RegCompleteHandler(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), wr1RegCompleteHandler(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    S422$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_i2c_ISR
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c1_driver_TXData
    _do_I2C_TX->_i2c1_driver_isNACK
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _TMR1_ISR->_TMR1_WriteTimer
    _h_clock->_update_clock

Critical Paths under _main in BANK0

    _main->_push_ring
    _main->_reset_recv
    _reset_recv->_DATAEE_WriteByte
    _read_ring->___bmul
    _push_ring->_DATAEE_WriteByte
    _cksum_w->_DATAEE_WriteByte
    _cksum->_DATAEE_ReadByte
    _DATAEE_WriteByte->_cksum
    _TMR1_Initialize->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    9822
                                             12 BANK0      4     4      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                              _cksum
                            _cksum_w
                   _i2c1_driver_open
                          _push_ring
                          _read_ring
                         _reset_recv
 ---------------------------------------------------------------------------------
 (1) _reset_recv                                           2     2      0    1486
                                             10 BANK0      2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (1) _read_ring                                            6     5      1    1269
                                              4 BANK0      6     5      1
                    _DATAEE_ReadByte
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _push_ring                                            2     2      0    1486
                                             10 BANK0      2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cksum_w                                              1     1      0    2215
                                             10 BANK0      1     1      0
                   _DATAEE_WriteByte
                              _cksum
 ---------------------------------------------------------------------------------
 (2) _cksum                                                4     4      0     828
                                              2 BANK0      4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2     692
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3    1387
                                              6 BANK0      4     1      3
                              _cksum (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     211
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0   84650
                   Absolute function *
                           _TMR1_ISR
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (5) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_ISR                                              3     3      0   84410
                                              4 COMMON     3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (6) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_TX_EMPTY                                      3     3      0   21086
                                              0 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_TX                                            3     3      0   21108
                                              1 COMMON     3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_TXData                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_RX                                            3     3      0   21086
                                              0 COMMON     3     3      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_DO_ADDRESS_NACK                               3     3      0   21086
                                              0 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _wr2RegCompleteHandler                                1     0      1    4159
                                              6 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _wr1RegCompleteHandler                                1     0      1    4159
                                              6 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _returnStop                                           1     0      1       0
                                              6 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (7) _returnReset                                          1     0      1       0
                                              6 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (7) _rdBlkRegCompleteHandler                              1     0      1    4450
                                              6 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rd2RegCompleteHandler                                1     0      1    4159
                                              6 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rd1RegCompleteHandler                                1     0      1    4159
                                              6 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _i2c_setDataCompleteCallback                          4     1      3    2776
                                              5 COMMON     1     1      0
                                              0 BANK0      3     0      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (9) _setCallBack                                          5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (8) _i2c_setBuffer                                        4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _i2c_restartWrite                                     1     0      1       0
                                              6 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                            _h_clock *
 ---------------------------------------------------------------------------------
 (6) _h_clock                                              0     0      0       0
                       _update_clock
 ---------------------------------------------------------------------------------
 (7) _update_clock                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
     _cksum (ARG)
       _DATAEE_ReadByte
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _cksum
     _DATAEE_ReadByte
   _cksum_w
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
   _i2c1_driver_open
   _push_ring
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
   _read_ring
     _DATAEE_ReadByte
     ___bmul
   _reset_recv
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _h_clock *
       _update_clock
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c1_driver_sendNACK
       _i2c1_driver_getRXData *
       _i2c1_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c1_driver_restart
     _do_I2C_SEND_STOP *
       _i2c1_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c1_driver_TXData *
       _i2c1_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _mssp1_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      4E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      4E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Oct 31 17:10:46 2019

                            _update_clock 0385                              returnReset@p 0076  
                          ___bmul@product 0052                               __CFG_CP$OFF 0000  
                    __size_of_do_I2C_IDLE 0005                       _do_I2C_SEND_RESTART 0584  
                    __size_of_do_I2C_RCEN 0007                               __CFG_LVP$ON 0000  
                                     l401 0420                                       l500 051E  
                                     l503 0533                                       l431 056F  
                                     l506 0544                                       l651 052A  
                                     l901 0404                                       l904 04E4  
                                     l587 0243                                       l923 02E4  
                                     l916 0281                                       l909 03E8  
                                     l782 0503                                       l776 0379  
                                     l881 0052                                       l778 037D  
                                     l779 0384                                       l891 0104  
                                     l884 015B                                       l893 015A  
                                     l887 012E                                       l896 015F  
                                     l888 012D                              __CFG_CPD$OFF 0000  
                         _timer1ReloadVal 0079                                       _aux 0045  
                                     _seg 004D                                       _lum 0046  
           i2c_setDataCompleteCallback@cb 0050                   __size_of_PMD_Initialize 0008  
                   __size_of_do_I2C_RESET 0008                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_ZCD$OFF 0000  
                 ??_rd2RegCompleteHandler 0077                                      l1183 0466  
                                    l4021 0405                                      l4101 0369  
                                    l4031 0412                                      l4023 0408  
                                    l4111 0374                                      l4103 036D  
                                    l4041 01FF                                      l4033 0414  
                                    l4025 040A                                      l4113 0376  
                                    l4105 0371                                      l4121 03CB  
                                    l4051 020D                                      l4043 0205  
                                    l4035 0415                                      l4027 040C  
                                    l4203 0512                                      l4115 0378  
                                    l4107 0372                                      l4131 03DE  
                                    l4211 03E9                                      l4061 0218  
                                    l4053 020F                                      l4045 0207  
                                    l4037 041D                                      l4029 040E  
                                    l4205 0515                                      l4117 037E  
                                    l4109 0373                                      l4133 03E7  
                                    l4221 0246                                      l4071 022C  
                                    l4063 0224                                      l4055 0212  
                                    l4047 0209                                      l4039 053D  
                                    l4207 0518                                      l4127 03CF  
                                    l4119 03C9                                      l4231 0263  
                                    l4223 0246                                      l4215 03EE  
                                    l4081 0236                                      l4073 022E  
                                    l4065 0226                                      l4057 0214  
                                    l4049 020B                                      l4209 051B  
                                    l4129 03DA                                      l3361 0458  
                                    l4233 026A                                      l4225 024C  
                                    l4217 03F6                                      l4401 005C  
                                    l4091 052B                                      l4083 0238  
                                    l4075 0230                                      l4067 0228  
                                    l4059 0216                                      l4243 02B5  
                                    l3363 045C                                      l4227 0250  
                                    l4235 0275                                      l4219 03FB  
                                    l4411 00A1                                      l4403 005F  
                                    l4093 052E                                      l4085 023B  
                                    l4077 0232                                      l4069 022A  
                                    l4173 051F                                      l4261 02DA  
                                    l4253 02BC                                      l4245 02B9  
                                    l3365 045E                                      l3357 0453  
                                    l4229 025D                                      l4421 00BF  
                                    l4413 00AD                                      l4405 006B  
                                    l4095 052F                                      l4087 023E  
                                    l4079 0234                                      l4175 0524  
                                    l4263 02DE                                      l4255 02C2  
                                    l4247 02BA                                      l3367 0465  
                                    l3359 0454                                      l4239 0277  
                                    l4431 00CF                                      l4423 00C7  
                                    l4415 00BA                                      l4407 007D  
                                    l4097 0532                                      l4089 0240  
                                    l4265 04D5                                      l4177 0525  
                                    l4257 02C3                                      l4441 00DF  
                                    l4433 00D1                                      l4425 00CA  
                                    l4417 00BD                                      l4409 009E  
                                    l4099 0361                                      l4179 0527  
                                    l4259 02D5                                      l4451 00F6  
                                    l4443 00E0                                      l4435 00D7  
                                    l4427 00CC                                      l4419 00BE  
                                    l4461 0129                                      l4453 0105  
                                    l4445 00E1                                      l4437 00D8  
                                    l4429 00CD                                      l4471 013E  
                                    l4463 012F                                      l4455 0111  
                                    l4447 00E6                                      l4439 00DE  
                                    l4391 0052                                      l4473 013F  
                                    l4465 0135                                      l4457 011A  
                                    l4449 00E7                                      l4475 014A  
                                    l4467 0136                                      l4459 011D  
                                    l4395 0056                                      l4387 004B  
                                    l4477 0156                                      l4469 013A  
                                    l4397 0057                                      l4389 0051  
                                    l4399 0058                                      l3881 04FD  
                                    l3875 056A                                      l3883 04FE  
                                    l3885 04FF                                      l3877 04F5  
                                    l3887 0500                                      l3879 04F9  
                                    l3889 0501                                      u2200 0135  
                                    u2201 0134                                      u1250 0458  
                                    u2210 015F                                      u1251 0457  
                                    u2211 015E                                      u1260 0465  
                                    u2140 006B                                      u1261 0464  
                                    u2141 006A                                      _LATA 0016  
                                    u2150 007D                                      _LATB 0017  
                                    u2151 007C                                      _LATC 0018  
                                    u2160 00D7                                      _LATD 0019  
                                    u2161 00D6                                      _LATE 001A  
                                    u2170 00DE                                      u2171 00DD  
                                    u2227 00B3                                      u2180 00F6  
                                    u2181 00F5                                      u2190 0104  
                                    u2191 0103                                      u1810 0524  
                                    u1811 0523                                      u1900 02E4  
                                    u1901 02E3                                      u1840 0404  
                                    u1841 0403                                      u1850 024C  
                                    u1851 024B                                      u1780 037D  
                                    u1860 0250                                      u1781 037C  
                                    u1861 024F                                      u1790 03E7  
                                    u1870 0263                                      u1791 03E6  
                                    u1871 0262                                      u1880 02B9  
                                    u1881 02B8                                      u1890 02C2  
                                    u1891 02C1                                      _PMD0 0796  
                                    _PMD1 0797                                      _PMD2 0798  
                                    _PMD3 0799                                      _PMD4 079A  
                                    _PMD5 079B                      ?_do_I2C_SEND_RESTART 0070  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                                      _WPUD 0F5A  
                                    _WPUE 0F65                   ??_wr2RegCompleteHandler 0077  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
       __size_of_do_I2C_SEND_RESTART_READ 0005                                      _aux1 0044  
                                    _half 03EB                                      _clkh 004F  
               ?_do_I2C_SEND_RESTART_READ 0070                                      _clkm 004E  
                                    _main 004B                 __size_of_do_I2C_SEND_STOP 0005  
                  __size_of_do_I2C_DO_ACK 0005                                      _nreg 004A  
                                    _temp 0047                                      _pmon 0048  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
                   ?_do_I2C_SEND_ADR_READ 0070           ??_i2c1_driver_clearBusCollision 0070  
                                    start 0036                             _i2c_setBuffer 04E5  
              ??_TMR1_SetInterruptHandler 0052                             __CFG_CSWEN$ON 0000  
                       ___bmul@multiplier 0053                             __CFG_MCLRE$ON 0000  
                         __end_of_i2c_ISR 033B          __size_of_rdBlkRegCompleteHandler 0019  
                ??_do_I2C_DO_NACK_RESTART 0070                 __size_of_DATAEE_WriteByte 0024  
                            _do_I2C_RESET 054D            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 0534                  __end_of_i2c1_driver_open 052B  
                                   ?_main 0070                  __end_of_i2c1_driver_stop 05BB  
                           __CFG_WDTE$OFF 0000                                     _T1CLK 0211  
                                   _T1CON 020E                __end_of_i2c1_driver_TXData 059D  
                          __CFG_DEBUG$OFF 0000                                     i1l110 0511  
                                   i1l201 0310                                     i1l140 04F4  
                                   i1l301 049F                                     i1l206 0198  
                                   i1l222 01D2                                     i1l223 01FE  
                                   i1l209 01B4                                     i1l162 0554  
                                   i1l250 05A0                                     i1l171 058D  
                                   i1l316 048D                                     i1l340 0439  
                                   i1l180 053C                                     i1l261 0360  
                                   i1l253 05C3                                     i1l237 02B4  
                                   i1l165 0597                                     i1l174 0588  
                                   i1l415 04D4                                     i1l183 054C  
                                   i1l247 033A                                     i1l328 04C3  
                                   i1l256 05C1                                     i1l280 04B1  
                                   i1l168 0592                                     i1l192 0579  
                                   i1l177 0583                                     i1l434 05C5  
                                   i1l186 0563                                     i1l195 0574  
                                   i1l428 047B                                     i1l189 057E  
                                   i1l367 05BF                                     i1l463 0034  
                                   i1l456 0019                                     i1l633 05AE  
                                   i1l457 0034                                     i1l458 0028  
                                   i1l636 05B1                                     i1l671 055C  
                                   i1l841 0450                                     i1l665 05BD  
                                   i1l729 05AB                                     i1l674 05B7  
                                   i1l659 05C4                                     i1l692 05A8  
                                   i1l668 05BA                                     i1l837 043A  
                                   i1l677 05B4                                     i1l686 059C  
                                   i1l839 044F                                     i1l695 05A4  
                                   i1l928 03A8                                     _OSCEN 0891  
                                   _TMR1H 020D                                     _TMR1L 020C  
                                   _TRISA 0011                                     _TRISB 0012  
                                   _TRISC 0013                                     _TRISD 0014  
                                   _TRISE 0015                                     _WPUC3 7A7B  
                                   _WPUC4 7A7C                           __end_of_h_clock 0451  
                        __end_of_TMR1_ISR 047C                           __end_of_cksum_w 04E5  
                         _DATAEE_ReadByte 04F5                __end_of_i2c1_driver_isNACK 055D  
                                   _cksum 03C9                ?_do_I2C_SEND_RESTART_WRITE 0070  
                   ??_do_I2C_SEND_RESTART 0070                   __end_of_TMR1_Initialize 0421  
                          __pbitbssCOMMON 03E8                                     pclath 000A  
                 __size_of_mssp1_clearIRQ 0003                    ?_do_I2C_SEND_ADR_WRITE 0070  
                                   status 0003                                     wtemp0 007E  
                         _TMR1_WriteTimer 04C4                            ?_i2c_setBuffer 0070  
                            ?_setCallBack 0070                             _fsmStateTable 03A9  
                         __initialization 0038                                _i2c_status 0020  
                            __end_of_main 0161               ?_INTERRUPT_InterruptManager 0070  
                           setCallBack@cb 0070                             _do_I2C_DO_ACK 057A  
                                  ??_main 005C                         ?_i2c_restartWrite 0076  
           __size_of_i2c1_driver_sendNACK 0004                        ??_i2c_restartWrite 0077  
           __size_of_i2c1_driver_resetBus 0001                   ?_do_I2C_DO_ADDRESS_NACK 0070  
                                  ?_cksum 0070                                    _ANSELA 0F38  
                                  _ANSELB 0F43                                    _ANSELC 0F4E  
                                  _ANSELD 0F59                                    _ANSELE 0F64  
                      __CFG_RSTOSC$HFINT1 0000                                    _T1GATE 0210  
                                  _T1GCON 020F                                    _RC3PPS 0F23  
                 TMR1_WriteTimer@timerVal 0070                                    _RC4PPS 0F24  
                                  u111_20 0394                                    u111_21 0393  
                                  i1l3003 05BE                                    i1l3031 039C  
                                  i1l3103 057A                                    u112_20 03A3  
                                  u112_21 03A2                                    i1l3033 039D  
                                  i1l3025 0385                                    i1l3105 057D  
                                  _ODCONA 0F3A                                    _ODCONB 0F45  
                                  i1l3035 03A3                                    i1l3027 038E  
                                  i1l4003 0289                                    _ODCONC 0F50  
                                  _ODCOND 0F5B                                    i1l3037 03A7  
                                  i1l3029 0394                                    i1l4005 028C  
                                  i1l3061 054D                                    _ODCONE 0F66  
                                  i1l4015 0292                                    i1l3063 0550  
                                  i1l3071 0593                                    i1l3039 05AC  
                                  u121_20 0444                                    i1l3241 04CA  
                                  u121_21 0441                                    i1l4009 028E  
                                  i1l3065 0552                                    i1l3073 0595  
                                  i1l3081 0536                                    i1l4201 0325  
                                  i1l3217 05A9                                    i1l3243 04CC  
                                  i1l3331 043A                                    i1l3067 0553  
                                  i1l3075 0596                                    i1l3083 053B  
                                  i1l3091 054B                                    i1l3245 04CE  
                                  i1l3237 04C4                                    i1l3333 0446  
                                  i1l3239 04C9                                    i1l3247 04D0  
                                  i1l3335 044A                                    i1l3079 0534  
                                  i1l3087 0545                                    i1l3095 055D  
                                  u210_20 001D                                    i1l3249 04D2  
                                  i1l3337 044D                                    i1l3089 0547  
                                  i1l3097 055F                                    u210_21 001C  
                                  i1l3099 0562                                    i1l3451 059D  
                                  u122_24 0446                                    i1l3453 0467  
                                  i1l3455 0469                                    i1l2911 0589  
                                  u123_20 044A                                    u211_20 0021  
                                  u123_21 0449                                    i1l3457 0470  
                                  i1l2905 058E                                    i1l2913 058C  
                                  i1l4193 0311                                    u211_21 0020  
                                  i1l3459 0476                                    i1l2931 05B5  
                                  i1l2907 0591                                    i1l2923 057F  
                                  i1l4195 0314                                    i1l4371 0006  
                                  i1l2933 05A5                                    i1l2917 0584  
                                  i1l2925 0582                                    i1l2941 0570  
                                  i1l4197 0319                                    i1l4381 0021  
                                  i1l4373 000A                                    i1l2951 05B2  
                                  i1l2919 0587                                    i1l2935 0575  
                                  i1l2943 0573                                    i1l4199 0320  
                                  i1l4383 002C                                    i1l4375 000F  
                                  u132_20 0476                                    u108_20 0342  
                                  u212_20 002C                                    u132_21 0475  
                                  i1l2881 0353                                    u108_21 0341  
                                  i1l2961 05C0                                    i1l3841 04B0  
                                  i1l2929 0599                                    i1l2937 0578  
                                  i1l3921 02F0                                    i1l3913 02E5  
                                  i1l4561 018A                                    i1l4385 0030  
                                  u212_21 002B                                    i1l4377 0013  
                                  i1l2891 05BB                                    i1l3827 0504  
                                  i1l2947 0555                                    i1l2955 05AF  
                                  i1l4563 0308                                    i1l3915 02E7  
                                  i1l4379 001D                                    i1l2893 05B8  
                                  i1l2885 04E6                                    i1l2877 033C  
                                  i1l3861 04B2                                    i1l2957 05C2  
                                  i1l3837 04A0                                    i1l3845 048E  
                                  i1l3853 047C                                    i1l4565 02A6  
                                  i1l3917 02EC                                    i1l3941 016D  
                                  i1l3933 0161                                    i1l2887 04EB  
                                  i1l2879 0342                                    i1l3863 04BA  
                                  i1l3839 04A8                                    i1l3847 0496  
                                  i1l3855 0484                                    i1l3871 0438  
                                  i1l2895 05A1                                    i1l3927 02F4  
                                  i1l3951 0175                                    i1l4559 01F0  
                                  u109_20 04EB                                    u213_20 0030  
                                  i1l2889 04F3                                    u109_21 04EA  
                                  i1l3865 04C2                                    i1l3849 049E  
                                  i1l3857 048C                                    i1l3953 019A  
                                  i1l3945 0171                                    i1l3937 0169  
                                  u213_21 002F                                    i1l3955 01A6  
                                  i1l3971 01C3                                    i1l3869 0421  
                                  i1l3957 01B1                                    i1l3981 01D4  
                                  i1l3973 01CD                                    i1l3959 01B3  
                                  i1l3991 01DC                                    i1l3975 01D0  
                                  i1l3967 01B5                                    i1l3985 01D8  
                                  i1l3969 01BF                                    i1l3997 0282  
                                  i1l3999 0285                                    u119_20 04C9  
                                  u207_20 000A                                    u119_21 04C8  
                                  u207_21 0009                                    u208_20 000F  
                                  u208_21 000E                                    _INLVLA 0F3C  
                                  _INLVLB 0F47                                    _INLVLC 0F52  
                                  _INLVLD 0F5D                                    _INLVLE 0F68  
                                  u209_20 0013                                    u209_21 0012  
                                  u182_20 0319                                    u182_21 0318  
                                  u175_20 0168                                    u183_20 0320  
                                  u175_21 0167                                    u183_21 031F  
                                  u176_20 01B1                                    u176_21 01B0  
                                  u177_20 01CD                                    u177_21 01CC  
                                  _OSCFRQ 0893                    ??_do_I2C_SEND_ADR_READ 0070  
                rdBlkRegCompleteHandler@p 0076                                 ??_i2c_ISR 0074  
                          __CFG_PWRTE$OFF 0000                     _i2c1_driver_getRXData 05B2  
    __end_of_TMR1_DefaultInterruptHandler 05C6     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 05C5                                    ___bmul 0451  
             __end_of_do_I2C_DO_NACK_STOP 057A       __end_of_i2c_setDataCompleteCallback 0512  
             _i2c_setDataCompleteCallback 0504     __end_of_i2c1_driver_clearBusCollision 05AC  
  __size_of_i2c1_driver_clearBusCollision 0003             _i2c1_driver_clearBusCollision 05A9  
                          __CFG_STVREN$ON 0000           __size_of_do_I2C_DO_NACK_RESTART 0005  
                                  _last1m 004B                                    _last5s 004C  
                          ?_do_I2C_DO_ACK 0070                                 ??_h_clock 0071  
                                  cksum@i 0054                   __end_of_DATAEE_ReadByte 0504  
                               ??_cksum_w 005A               __end_of_i2c1_driver_sendACK 05A9  
                          _PMD_Initialize 053D            __end_of_do_I2C_DO_ADDRESS_NACK 0311  
             __end_of_i2c1_driver_restart 05BE                              ?_returnReset 0076  
             __end_of_i2c1_driver_startRX 05B8  TMR1_SetInterruptHandler@InterruptHandler 0050  
                 __end_of_TMR1_WriteTimer 04D5                          ?_TMR1_Initialize 0070  
                       _SYSTEM_Initialize 0512                   __end_of__initialization 0047  
                         ??_i2c_setBuffer 0072                          _do_I2C_SEND_STOP 057F  
                      __size_of_do_I2C_RX 004A                        __size_of_do_I2C_TX 0054  
                      ?_SYSTEM_Initialize 0070                  __size_of_do_I2C_TX_EMPTY 0033  
                     ___bmul@multiplicand 0050                   _rdBlkRegCompleteHandler 0421  
                          __pcstackCOMMON 0070                       ??_SYSTEM_Initialize 0052  
                               ?_TMR1_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                           __end_of_cksum 03E9                          _DATAEE_WriteByte 0361  
                  __end_of_PMD_Initialize 0545                            setCallBack@idx 0074  
                                 ??_cksum 0052                    _do_I2C_DO_NACK_RESTART 0570  
               __end_of_SYSTEM_Initialize 051F                            _mssp1_clearIRQ 05AC  
                              __pbssBANK0 0020            __size_of_rd2RegCompleteHandler 0012  
           __end_of_rd2RegCompleteHandler 048E            __size_of_wr2RegCompleteHandler 0012  
           __end_of_wr2RegCompleteHandler 04C4                     _rd1RegCompleteHandler 048E  
                  ?_i2c1_driver_getRXData 0070                        __size_of_read_ring 003E  
                   _wr1RegCompleteHandler 04A0              __size_of_i2c_busCollisionISR 0004  
                              __pmaintext 004B                             ??_do_I2C_IDLE 0070  
                    __size_of_setCallBack 0026                             ??_do_I2C_RCEN 0070  
                                 ?___bmul 0050                                ??_TMR1_ISR 0072  
                         __CFG_PPS1WAY$ON 0000                           ??_do_I2C_DO_ACK 0070  
                              __pintentry 0004                       i2c_setBuffer@buffer 0073  
                         ?_PMD_Initialize 0070            ?_i2c1_driver_clearBusCollision 0070  
                        ?_DATAEE_ReadByte 0050                         ?_i2c1_driver_open 0070  
                       __end_of_do_I2C_RX 01FF                         __end_of_do_I2C_TX 01B5  
                       ?_i2c1_driver_stop 0070                        ??_i2c1_driver_open 0050  
                      ??_i2c1_driver_stop 0070                                   _OSCCON1 088D  
                                 _OSCCON3 088F                             ?_mssp1_setIRQ 0070  
                                 _NVMADRH 081B                                   _NVMADRL 081A  
                                 _NVMDATH 081D                                   _OSCTUNE 0892  
                                 _NVMDATL 081C                                   _NVMCON2 081F  
                                 _SSP1ADD 018D                                   _SLRCONA 0F3B  
                                 _SLRCONB 0F46                                   _SLRCONC 0F51  
                                 _SLRCOND 0F5C                                   _SLRCONE 0F67  
                                 _SSP1BUF 018C                    __end_of_mssp1_clearIRQ 05AF  
                                 _SSP1MSK 018E                   ??_do_I2C_SEND_ADR_WRITE 0071  
                      __size_of_push_ring 0030                          ?_TMR1_WriteTimer 0070  
             ??_do_I2C_SEND_RESTART_WRITE 0070                        _i2c1_driver_TXData 0598  
                    DATAEE_WriteByte@bAdd 0056                        _i2c1_driver_i2cISR 0042  
                                 _i2c_ISR 0311                 ??_rdBlkRegCompleteHandler 0077  
                      _i2c1_driver_isNACK 0555                       ?_i2c1_driver_TXData 0070  
                    __CFG_SCANE$available 0000                           __size_of___bmul 0016  
                       ??_do_I2C_TX_EMPTY 0070                       ?_i2c1_driver_isNACK 0070  
                                 _h_clock 043A                                   __ptext1 03E9  
                                 __ptext2 0244                                   __ptext3 0451  
                                 __ptext4 02B5                                   __ptext5 051F  
                                 __ptext6 04D5                                   __ptext7 03C9  
                                 __ptext8 04F5                                   __ptext9 0361  
                     __end_of_do_I2C_IDLE 0598                       __end_of_do_I2C_RCEN 0564  
          ??_TMR1_DefaultInterruptHandler 0070                                   _cksum_w 04D5  
                               _T1CONbits 020E                     _OSCILLATOR_Initialize 052B  
             __end_of_do_I2C_SEND_RESTART 0589                            ??_mssp1_setIRQ 0070  
                             reset_recv@i 005A         __size_of_TMR1_SetInterruptHandler 0006  
                    ??_i2c1_driver_TXData 0070                         __end_of_read_ring 0282  
                ??_PIN_MANAGER_Initialize 0050                 ?_TMR1_SetInterruptHandler 0050  
                                 _nreg_pt 0049                           ?_mssp1_clearIRQ 0070  
                _do_I2C_SEND_RESTART_READ 058E                __size_of_SYSTEM_Initialize 000D  
                                 clrloop0 0565                                   _running 03E8  
                    __size_of_returnReset 0002                      end_of_initialization 0047  
                    ??_i2c1_driver_isNACK 0070                 __size_of_i2c_restartWrite 0002  
            __end_of_i2c1_driver_sendNACK 05A5                    ?_rd1RegCompleteHandler 0076  
                  ?_wr1RegCompleteHandler 0076              __end_of_i2c1_driver_resetBus 05C5  
                              _reset_recv 03E9                 _do_I2C_SEND_RESTART_WRITE 0589  
                       __end_of_push_ring 02E5                     __CFG_WDTCPS$WDTCPS_14 0000  
                              _returnStop 05C2           __end_of_rdBlkRegCompleteHandler 043A  
                __end_of_do_I2C_SEND_STOP 0584                      __CFG_WDTCCS$HFINTOSC 0000  
                      _configuration_mode 03EA                                 _TRISCbits 0013  
    __size_of_i2c_setDataCompleteCallback 000E                               returnStop@p 0076  
                        __CFG_FEXTOSC$OFF 0000                  __end_of_DATAEE_WriteByte 0385  
            i2c_setDataCompleteCallback@p 0052             __size_of_do_I2C_SEND_ADR_READ 0009  
                           ?_update_clock 0070                               _do_I2C_IDLE 0593  
                             _do_I2C_RCEN 055D                            __end_of___bmul 0467  
                       __size_of_TMR1_ISR 0015                    ?_OSCILLATOR_Initialize 0070  
            __size_of_do_I2C_DO_NACK_STOP 0005                   ?_do_I2C_DO_NACK_RESTART 0070  
                     start_initialization 0038                       _i2c_busCollisionISR 059D  
         __size_of_PIN_MANAGER_Initialize 0045                              setCallBack@p 0072  
            __size_of_i2c1_driver_sendACK 0004                   i2c_setBuffer@bufferSize 0070  
                 ??_i2c1_driver_getRXData 0070                    rd1RegCompleteHandler@p 0076  
            __size_of_i2c1_driver_restart 0003              __size_of_i2c1_driver_startRX 0003  
                     DATAEE_ReadByte@bAdd 0050                     __end_of_i2c_setBuffer 04F5  
                    ?_i2c_busCollisionISR 0070                            ??_update_clock 0070  
                        __CFG_LPBOREN$OFF 0000                               ?_reset_recv 0070  
                    __end_of_mssp1_setIRQ 05B2                  __size_of_TMR1_Initialize 001C  
                                ??___bmul 0051                          ??_PMD_Initialize 0050  
                  wr1RegCompleteHandler@p 0076                             ?_do_I2C_RESET 0070  
                             ?_returnStop 0076            __end_of_do_I2C_DO_NACK_RESTART 0575  
                              read_ring@i 0057                      _i2c1_driver_sendNACK 05A1  
                       read_ring@absindex 0059                               __pbssCOMMON 0077  
                               ___latbits 0002                      _i2c1_driver_resetBus 05C4  
                           __pcstackBANK0 0050                                 _do_I2C_RX 01B5  
                               _do_I2C_TX 0161            __size_of_do_I2C_SEND_ADR_WRITE 0008  
           __end_of_do_I2C_SEND_ADR_WRITE 054D                          _i2c_restartWrite 05BE  
               __size_of_i2c1_driver_open 000C                 __size_of_i2c1_driver_stop 0003  
                                ?_i2c_ISR 0070                           _do_I2C_TX_EMPTY 0282  
                           ??_setCallBack 0073                     _rd2RegCompleteHandler 047C  
                   ??_i2c_busCollisionISR 0070                     __end_of_fsmStateTable 03C9  
                  _PIN_MANAGER_Initialize 01FF                     _wr2RegCompleteHandler 04B2  
        __end_of_TMR1_SetInterruptHandler 0570                         read_ring@subindex 0054  
                          ??_do_I2C_RESET 0070                  ??_do_I2C_DO_ADDRESS_NACK 0070  
             _i2c1_driver_busCollisionISR 007B                     __end_of_do_I2C_DO_ACK 057F  
                                ?_h_clock 0070              ??_INTERRUPT_InterruptManager 0077  
              ??_do_I2C_SEND_RESTART_READ 0070                     ?_i2c1_driver_sendNACK 0070  
                                ?_cksum_w 0070                          ??_mssp1_clearIRQ 0070  
                   ?_i2c1_driver_resetBus 0070        __size_of_do_I2C_SEND_RESTART_WRITE 0005  
                              ?_do_I2C_RX 0070                                ?_do_I2C_TX 0070  
                     __size_of_reset_recv 001C                            __size_of_cksum 0020  
                __size_of_DATAEE_ReadByte 000F                   ??_rd1RegCompleteHandler 0077  
                               _read_ring 0244                   ??_wr1RegCompleteHandler 0077  
                                _LATAbits 0016                       __size_of_returnStop 0002  
                               clear_ram0 0564                                 _nreg_init 03E9  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 0032  
                                _PIR3bits 070F                                 _ring_byte 003D  
                                _PIR4bits 0710                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR1_ISR 0467  
            ?_i2c_setDataCompleteCallback 0050                                  _SSP1STAT 018F  
                     __end_of_setCallBack 0361                         ??_TMR1_Initialize 0052  
                               _push_ring 02B5                         ?_do_I2C_SEND_STOP 0070  
                           ??_returnReset 0077                        ??_do_I2C_SEND_STOP 0070  
             __size_of_i2c1_driver_TXData 0005                     DATAEE_WriteByte@bData 0058  
                    __end_of_update_clock 03A9         __end_of_do_I2C_SEND_RESTART_WRITE 058E  
                 __end_of_do_I2C_TX_EMPTY 02B5                                ?_read_ring 0054  
                ?_rdBlkRegCompleteHandler 0076                         ?_DATAEE_WriteByte 0056  
            __size_of_do_I2C_SEND_RESTART 0005               __size_of_i2c1_driver_isNACK 0008  
                   __size_of_mssp1_setIRQ 0003                    ?_rd2RegCompleteHandler 0076  
                      ??_DATAEE_WriteByte 0059                       _do_I2C_DO_NACK_STOP 0575  
                        __size_of_i2c_ISR 002A                    ?_wr2RegCompleteHandler 0076  
                            ?_do_I2C_IDLE 0070                              ?_do_I2C_RCEN 0070  
                              push_ring@i 005B                   ??_OSCILLATOR_Initialize 0050  
                     _i2c1_driver_sendACK 05A5           __size_of_do_I2C_DO_ADDRESS_NACK 002C  
                     i2c1_driver_TXData@d 0070                    ??_i2c1_driver_sendNACK 0070  
           ??_i2c_setDataCompleteCallback 0075                       _i2c1_driver_restart 05BB  
                _TMR1_SetInterruptHandler 056A                          __size_of_h_clock 0017  
                    ?_do_I2C_DO_NACK_STOP 0070                       _i2c1_driver_startRX 05B5  
            __end_of_do_I2C_SEND_ADR_READ 053D                                ?_push_ring 0070  
                  ??_i2c1_driver_resetBus 0070                     _TMR1_InterruptHandler 0077  
                        __size_of_cksum_w 0010                              _mssp1_setIRQ 05AF  
                             ??_do_I2C_RX 0070                               ??_do_I2C_TX 0071  
                                __ptext10 0512                                  __ptext11 0405  
                                __ptext20 05AC                                  __ptext12 056A  
                                __ptext21 01B5                                  __ptext13 053D  
                              _T1GCONbits 020F                                  __ptext30 057F  
                                __ptext22 0161                                  __ptext14 01FF  
                                __ptext31 0584                                  __ptext23 02E5  
                                __ptext15 052B                                  __ptext40 05B2  
                                __ptext32 0589                                  __ptext24 0570  
                                __ptext41 05A1                                  __ptext33 058E  
                                __ptext25 0575                                  __ptext17 059D  
                                __ptext50 05C2                                  __ptext42 05C4  
                                __ptext34 0593                                  __ptext26 057A  
                                __ptext18 05A9                                  __ptext51 04B2  
                                __ptext43 05B5                                  __ptext35 054D  
                                __ptext27 055D                                  __ptext19 0311  
                                __ptext60 043A                                  __ptext52 0504  
                                __ptext44 0421                                  __ptext36 0282  
                                __ptext28 0545                                  __ptext61 0385  
                                __ptext53 033B                                  __ptext45 047C  
                                __ptext37 05AF                                  __ptext29 0534  
                                __ptext62 04C4                                  __ptext54 04E5  
                                __ptext46 048E                                  __ptext38 0555  
                                __ptext55 05B8                                  __ptext47 04A0  
                                __ptext39 0598                                  __ptext56 05BB  
                                __ptext48 05BE                                  __ptext57 05A5  
                                __ptext49 05C0                                  __ptext58 0467  
                                __ptext59 05C5                              _SSP1CON1bits 0190  
                            _SSP1CON2bits 0191                      ?_i2c1_driver_sendACK 0070  
                    __end_of_do_I2C_RESET 0555               DATAEE_WriteByte@GIEBitValue 0059  
                    ?_i2c1_driver_restart 0070                       __end_of_returnReset 05C2  
                        _i2c1_driver_open 051F                          _i2c1_driver_stop 05B8  
                           __size_of_main 0116                      ?_i2c1_driver_startRX 0070  
          __size_of_i2c1_driver_getRXData 0003             __end_of_i2c1_driver_getRXData 05B5  
                       ??_DATAEE_ReadByte 0052                      __CFG_WDTCWS$WDTCWS_7 0000  
                             _setCallBack 033B                              ??_reset_recv 005A  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 0036  
              _INTERRUPT_InterruptManager 0004                              _SSP1STATbits 018F  
                       ??_TMR1_WriteTimer 0072                                  cksum@res 0053  
        __end_of_do_I2C_SEND_RESTART_READ 0593                              ??_returnStop 0077  
                __end_of_i2c_restartWrite 05C0                     ??_do_I2C_DO_NACK_STOP 0070  
                              _INTCONbits 000B                               _NVMCON1bits 081E  
                      __end_of_reset_recv 0405                     ??_i2c1_driver_sendACK 0070  
                        ?_do_I2C_TX_EMPTY 0070                               ??_read_ring 0055  
                  _do_I2C_DO_ADDRESS_NACK 02E5                                  intlevel1 0000  
                   ??_i2c1_driver_restart 0070                    rd2RegCompleteHandler@p 0076  
                   ??_i2c1_driver_startRX 0070                   ?_PIN_MANAGER_Initialize 0070  
                       i2c_restartWrite@p 0076                         __CFG_CLKOUTEN$OFF 0000  
                      __end_of_returnStop 05C4                    wr2RegCompleteHandler@p 0076  
                           __pstringtext1 03A9                     __size_of_update_clock 0024  
                          read_ring@index 0058                               ??_push_ring 005A  
                              _SSP1DATPPS 0EC6                                _SSP1CLKPPS 0EC5  
                  __size_of_i2c_setBuffer 0010                               _returnReset 05C0  
          __end_of_PIN_MANAGER_Initialize 0244               __end_of_i2c_busCollisionISR 05A1  
          __size_of_rd1RegCompleteHandler 0012             __end_of_rd1RegCompleteHandler 04A0  
          __size_of_wr1RegCompleteHandler 0012             __end_of_wr1RegCompleteHandler 04B2  
                   _do_I2C_SEND_ADR_WRITE 0545                      _do_I2C_SEND_ADR_READ 0534  
                         _TMR1_Initialize 0405  
