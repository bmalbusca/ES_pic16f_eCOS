

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Oct 31 17:23:21 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,inline,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,delta=2
    62                           	psect	text50,local,class=CODE,merge=1,delta=2
    63                           	psect	text51,local,class=CODE,merge=1,delta=2
    64                           	psect	text52,local,class=CODE,merge=1,delta=2
    65                           	psect	text53,local,class=CODE,merge=1,delta=2
    66                           	psect	text54,local,class=CODE,merge=1,delta=2
    67                           	psect	text55,local,class=CODE,merge=1,inline,delta=2
    68                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text58,local,class=CODE,merge=1,delta=2
    71                           	psect	text59,local,class=CODE,merge=1,delta=2
    72                           	psect	text60,local,class=CODE,merge=1,delta=2
    73                           	psect	text61,local,class=CODE,merge=1,delta=2
    74                           	psect	text62,local,class=CODE,merge=1,delta=2
    75                           	dabs	1,0x7E,2
    76  0000                     
    77                           ; Version 2.10
    78                           ; Generated 31/07/2019 GMT
    79                           ; 
    80                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC16F18875 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001C                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  008C                     	;# 
   145  008C                     	;# 
   146  008D                     	;# 
   147  008E                     	;# 
   148  008E                     	;# 
   149  008F                     	;# 
   150  0090                     	;# 
   151  0090                     	;# 
   152  0091                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0095                     	;# 
   156  0096                     	;# 
   157  0097                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009A                     	;# 
   161  009B                     	;# 
   162  009C                     	;# 
   163  009D                     	;# 
   164  009E                     	;# 
   165  010C                     	;# 
   166  010D                     	;# 
   167  010E                     	;# 
   168  010E                     	;# 
   169  010F                     	;# 
   170  0110                     	;# 
   171  0110                     	;# 
   172  0111                     	;# 
   173  0112                     	;# 
   174  0112                     	;# 
   175  0113                     	;# 
   176  0114                     	;# 
   177  0114                     	;# 
   178  0115                     	;# 
   179  0116                     	;# 
   180  0116                     	;# 
   181  0117                     	;# 
   182  0119                     	;# 
   183  0119                     	;# 
   184  0119                     	;# 
   185  011A                     	;# 
   186  011A                     	;# 
   187  011A                     	;# 
   188  011B                     	;# 
   189  011B                     	;# 
   190  011B                     	;# 
   191  011B                     	;# 
   192  011B                     	;# 
   193  011C                     	;# 
   194  011C                     	;# 
   195  011C                     	;# 
   196  011D                     	;# 
   197  011D                     	;# 
   198  011D                     	;# 
   199  011E                     	;# 
   200  011E                     	;# 
   201  011E                     	;# 
   202  011F                     	;# 
   203  011F                     	;# 
   204  011F                     	;# 
   205  011F                     	;# 
   206  011F                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  018E                     	;# 
   210  018F                     	;# 
   211  0190                     	;# 
   212  0191                     	;# 
   213  0192                     	;# 
   214  0196                     	;# 
   215  0197                     	;# 
   216  0198                     	;# 
   217  0199                     	;# 
   218  019A                     	;# 
   219  019B                     	;# 
   220  019C                     	;# 
   221  020C                     	;# 
   222  020C                     	;# 
   223  020D                     	;# 
   224  020E                     	;# 
   225  020F                     	;# 
   226  020F                     	;# 
   227  0210                     	;# 
   228  0210                     	;# 
   229  0211                     	;# 
   230  0211                     	;# 
   231  0212                     	;# 
   232  0212                     	;# 
   233  0213                     	;# 
   234  0214                     	;# 
   235  0215                     	;# 
   236  0215                     	;# 
   237  0216                     	;# 
   238  0216                     	;# 
   239  0217                     	;# 
   240  0217                     	;# 
   241  0218                     	;# 
   242  0218                     	;# 
   243  0219                     	;# 
   244  021A                     	;# 
   245  021B                     	;# 
   246  021B                     	;# 
   247  021C                     	;# 
   248  021C                     	;# 
   249  021D                     	;# 
   250  021D                     	;# 
   251  021E                     	;# 
   252  021F                     	;# 
   253  028C                     	;# 
   254  028C                     	;# 
   255  028D                     	;# 
   256  028D                     	;# 
   257  028E                     	;# 
   258  028F                     	;# 
   259  0290                     	;# 
   260  0290                     	;# 
   261  0291                     	;# 
   262  0292                     	;# 
   263  0292                     	;# 
   264  0293                     	;# 
   265  0293                     	;# 
   266  0294                     	;# 
   267  0295                     	;# 
   268  0296                     	;# 
   269  0296                     	;# 
   270  0297                     	;# 
   271  0298                     	;# 
   272  0298                     	;# 
   273  0299                     	;# 
   274  0299                     	;# 
   275  029A                     	;# 
   276  029B                     	;# 
   277  029C                     	;# 
   278  029C                     	;# 
   279  029D                     	;# 
   280  030C                     	;# 
   281  030C                     	;# 
   282  030D                     	;# 
   283  030E                     	;# 
   284  030F                     	;# 
   285  0310                     	;# 
   286  0310                     	;# 
   287  0311                     	;# 
   288  0312                     	;# 
   289  0313                     	;# 
   290  0314                     	;# 
   291  0314                     	;# 
   292  0315                     	;# 
   293  0316                     	;# 
   294  0317                     	;# 
   295  0318                     	;# 
   296  0318                     	;# 
   297  0319                     	;# 
   298  031A                     	;# 
   299  031B                     	;# 
   300  031C                     	;# 
   301  031C                     	;# 
   302  031D                     	;# 
   303  031E                     	;# 
   304  031F                     	;# 
   305  038C                     	;# 
   306  038C                     	;# 
   307  038D                     	;# 
   308  038E                     	;# 
   309  0390                     	;# 
   310  0390                     	;# 
   311  0391                     	;# 
   312  0392                     	;# 
   313  040C                     	;# 
   314  040D                     	;# 
   315  040E                     	;# 
   316  040F                     	;# 
   317  0410                     	;# 
   318  0411                     	;# 
   319  0416                     	;# 
   320  0416                     	;# 
   321  0417                     	;# 
   322  0418                     	;# 
   323  0418                     	;# 
   324  0419                     	;# 
   325  041A                     	;# 
   326  041A                     	;# 
   327  041B                     	;# 
   328  041C                     	;# 
   329  041C                     	;# 
   330  041D                     	;# 
   331  041E                     	;# 
   332  041F                     	;# 
   333  048C                     	;# 
   334  048C                     	;# 
   335  048D                     	;# 
   336  048E                     	;# 
   337  048F                     	;# 
   338  048F                     	;# 
   339  0490                     	;# 
   340  0491                     	;# 
   341  0492                     	;# 
   342  0492                     	;# 
   343  0493                     	;# 
   344  0494                     	;# 
   345  0495                     	;# 
   346  0495                     	;# 
   347  0496                     	;# 
   348  0497                     	;# 
   349  0498                     	;# 
   350  0499                     	;# 
   351  049A                     	;# 
   352  049B                     	;# 
   353  049C                     	;# 
   354  049D                     	;# 
   355  050C                     	;# 
   356  050C                     	;# 
   357  050D                     	;# 
   358  050E                     	;# 
   359  050F                     	;# 
   360  050F                     	;# 
   361  0510                     	;# 
   362  0511                     	;# 
   363  0512                     	;# 
   364  0512                     	;# 
   365  0513                     	;# 
   366  0514                     	;# 
   367  0515                     	;# 
   368  0515                     	;# 
   369  0516                     	;# 
   370  0517                     	;# 
   371  0518                     	;# 
   372  0519                     	;# 
   373  051A                     	;# 
   374  051B                     	;# 
   375  051C                     	;# 
   376  051D                     	;# 
   377  058C                     	;# 
   378  058C                     	;# 
   379  058D                     	;# 
   380  058E                     	;# 
   381  058F                     	;# 
   382  058F                     	;# 
   383  0590                     	;# 
   384  0591                     	;# 
   385  0592                     	;# 
   386  0593                     	;# 
   387  060C                     	;# 
   388  060D                     	;# 
   389  060E                     	;# 
   390  060F                     	;# 
   391  0610                     	;# 
   392  0611                     	;# 
   393  0612                     	;# 
   394  0613                     	;# 
   395  0614                     	;# 
   396  0616                     	;# 
   397  0617                     	;# 
   398  0618                     	;# 
   399  0619                     	;# 
   400  061A                     	;# 
   401  061B                     	;# 
   402  061C                     	;# 
   403  061D                     	;# 
   404  061E                     	;# 
   405  068C                     	;# 
   406  068D                     	;# 
   407  068E                     	;# 
   408  068F                     	;# 
   409  0690                     	;# 
   410  0691                     	;# 
   411  0692                     	;# 
   412  0693                     	;# 
   413  0694                     	;# 
   414  070C                     	;# 
   415  070D                     	;# 
   416  070E                     	;# 
   417  070F                     	;# 
   418  0710                     	;# 
   419  0711                     	;# 
   420  0712                     	;# 
   421  0713                     	;# 
   422  0714                     	;# 
   423  0716                     	;# 
   424  0717                     	;# 
   425  0718                     	;# 
   426  0719                     	;# 
   427  071A                     	;# 
   428  071B                     	;# 
   429  071C                     	;# 
   430  071D                     	;# 
   431  071E                     	;# 
   432  0796                     	;# 
   433  0797                     	;# 
   434  0798                     	;# 
   435  0799                     	;# 
   436  079A                     	;# 
   437  079B                     	;# 
   438  080C                     	;# 
   439  080D                     	;# 
   440  080E                     	;# 
   441  080F                     	;# 
   442  0810                     	;# 
   443  0811                     	;# 
   444  0812                     	;# 
   445  0813                     	;# 
   446  0814                     	;# 
   447  081A                     	;# 
   448  081B                     	;# 
   449  081C                     	;# 
   450  081D                     	;# 
   451  081E                     	;# 
   452  081F                     	;# 
   453  088C                     	;# 
   454  088D                     	;# 
   455  088E                     	;# 
   456  088F                     	;# 
   457  0890                     	;# 
   458  0891                     	;# 
   459  0892                     	;# 
   460  0893                     	;# 
   461  0895                     	;# 
   462  0896                     	;# 
   463  0897                     	;# 
   464  0898                     	;# 
   465  0899                     	;# 
   466  089A                     	;# 
   467  089B                     	;# 
   468  090C                     	;# 
   469  090E                     	;# 
   470  090F                     	;# 
   471  091F                     	;# 
   472  091F                     	;# 
   473  098F                     	;# 
   474  098F                     	;# 
   475  0990                     	;# 
   476  0991                     	;# 
   477  0992                     	;# 
   478  0993                     	;# 
   479  0994                     	;# 
   480  0995                     	;# 
   481  0996                     	;# 
   482  0997                     	;# 
   483  0E0F                     	;# 
   484  0E10                     	;# 
   485  0E11                     	;# 
   486  0E12                     	;# 
   487  0E13                     	;# 
   488  0E14                     	;# 
   489  0E15                     	;# 
   490  0E16                     	;# 
   491  0E17                     	;# 
   492  0E18                     	;# 
   493  0E19                     	;# 
   494  0E1A                     	;# 
   495  0E1B                     	;# 
   496  0E1C                     	;# 
   497  0E1D                     	;# 
   498  0E1E                     	;# 
   499  0E1F                     	;# 
   500  0E20                     	;# 
   501  0E21                     	;# 
   502  0E22                     	;# 
   503  0E23                     	;# 
   504  0E24                     	;# 
   505  0E25                     	;# 
   506  0E26                     	;# 
   507  0E27                     	;# 
   508  0E28                     	;# 
   509  0E29                     	;# 
   510  0E2A                     	;# 
   511  0E2B                     	;# 
   512  0E2C                     	;# 
   513  0E2D                     	;# 
   514  0E2E                     	;# 
   515  0E2F                     	;# 
   516  0E30                     	;# 
   517  0E31                     	;# 
   518  0E32                     	;# 
   519  0E33                     	;# 
   520  0E34                     	;# 
   521  0E35                     	;# 
   522  0E36                     	;# 
   523  0E37                     	;# 
   524  0E8F                     	;# 
   525  0E90                     	;# 
   526  0E91                     	;# 
   527  0E92                     	;# 
   528  0E93                     	;# 
   529  0E94                     	;# 
   530  0E95                     	;# 
   531  0E96                     	;# 
   532  0E97                     	;# 
   533  0E9C                     	;# 
   534  0E9D                     	;# 
   535  0E9E                     	;# 
   536  0EA1                     	;# 
   537  0EA2                     	;# 
   538  0EA3                     	;# 
   539  0EA4                     	;# 
   540  0EA5                     	;# 
   541  0EA9                     	;# 
   542  0EAA                     	;# 
   543  0EAB                     	;# 
   544  0EAC                     	;# 
   545  0EB1                     	;# 
   546  0EB2                     	;# 
   547  0EB3                     	;# 
   548  0EB8                     	;# 
   549  0EB9                     	;# 
   550  0EBA                     	;# 
   551  0EBB                     	;# 
   552  0EBC                     	;# 
   553  0EBD                     	;# 
   554  0EBE                     	;# 
   555  0EC3                     	;# 
   556  0EC5                     	;# 
   557  0EC6                     	;# 
   558  0EC7                     	;# 
   559  0EC8                     	;# 
   560  0EC9                     	;# 
   561  0ECA                     	;# 
   562  0ECB                     	;# 
   563  0ECC                     	;# 
   564  0F10                     	;# 
   565  0F11                     	;# 
   566  0F12                     	;# 
   567  0F13                     	;# 
   568  0F14                     	;# 
   569  0F15                     	;# 
   570  0F16                     	;# 
   571  0F17                     	;# 
   572  0F18                     	;# 
   573  0F19                     	;# 
   574  0F1A                     	;# 
   575  0F1B                     	;# 
   576  0F1C                     	;# 
   577  0F1D                     	;# 
   578  0F1E                     	;# 
   579  0F1F                     	;# 
   580  0F20                     	;# 
   581  0F21                     	;# 
   582  0F22                     	;# 
   583  0F23                     	;# 
   584  0F24                     	;# 
   585  0F25                     	;# 
   586  0F26                     	;# 
   587  0F27                     	;# 
   588  0F28                     	;# 
   589  0F29                     	;# 
   590  0F2A                     	;# 
   591  0F2B                     	;# 
   592  0F2C                     	;# 
   593  0F2D                     	;# 
   594  0F2E                     	;# 
   595  0F2F                     	;# 
   596  0F30                     	;# 
   597  0F31                     	;# 
   598  0F32                     	;# 
   599  0F38                     	;# 
   600  0F39                     	;# 
   601  0F3A                     	;# 
   602  0F3B                     	;# 
   603  0F3C                     	;# 
   604  0F3D                     	;# 
   605  0F3E                     	;# 
   606  0F3F                     	;# 
   607  0F40                     	;# 
   608  0F41                     	;# 
   609  0F43                     	;# 
   610  0F44                     	;# 
   611  0F45                     	;# 
   612  0F46                     	;# 
   613  0F47                     	;# 
   614  0F48                     	;# 
   615  0F49                     	;# 
   616  0F4A                     	;# 
   617  0F4B                     	;# 
   618  0F4C                     	;# 
   619  0F4E                     	;# 
   620  0F4F                     	;# 
   621  0F50                     	;# 
   622  0F51                     	;# 
   623  0F52                     	;# 
   624  0F53                     	;# 
   625  0F54                     	;# 
   626  0F55                     	;# 
   627  0F56                     	;# 
   628  0F57                     	;# 
   629  0F59                     	;# 
   630  0F5A                     	;# 
   631  0F5B                     	;# 
   632  0F5C                     	;# 
   633  0F5D                     	;# 
   634  0F61                     	;# 
   635  0F62                     	;# 
   636  0F64                     	;# 
   637  0F65                     	;# 
   638  0F66                     	;# 
   639  0F67                     	;# 
   640  0F68                     	;# 
   641  0F69                     	;# 
   642  0F6A                     	;# 
   643  0F6B                     	;# 
   644  0F6C                     	;# 
   645  0F6D                     	;# 
   646  0FE4                     	;# 
   647  0FE5                     	;# 
   648  0FE6                     	;# 
   649  0FE7                     	;# 
   650  0FE8                     	;# 
   651  0FE9                     	;# 
   652  0FEA                     	;# 
   653  0FEB                     	;# 
   654  0FED                     	;# 
   655  0FEE                     	;# 
   656  0FEF                     	;# 
   657  0000                     	;# 
   658  0001                     	;# 
   659  0002                     	;# 
   660  0003                     	;# 
   661  0004                     	;# 
   662  0005                     	;# 
   663  0006                     	;# 
   664  0007                     	;# 
   665  0008                     	;# 
   666  0009                     	;# 
   667  000A                     	;# 
   668  000B                     	;# 
   669  000C                     	;# 
   670  000D                     	;# 
   671  000E                     	;# 
   672  000F                     	;# 
   673  0010                     	;# 
   674  0011                     	;# 
   675  0012                     	;# 
   676  0013                     	;# 
   677  0014                     	;# 
   678  0015                     	;# 
   679  0016                     	;# 
   680  0017                     	;# 
   681  0018                     	;# 
   682  0019                     	;# 
   683  001A                     	;# 
   684  001C                     	;# 
   685  001C                     	;# 
   686  001D                     	;# 
   687  001D                     	;# 
   688  001E                     	;# 
   689  001F                     	;# 
   690  008C                     	;# 
   691  008C                     	;# 
   692  008D                     	;# 
   693  008E                     	;# 
   694  008E                     	;# 
   695  008F                     	;# 
   696  0090                     	;# 
   697  0090                     	;# 
   698  0091                     	;# 
   699  0093                     	;# 
   700  0094                     	;# 
   701  0095                     	;# 
   702  0096                     	;# 
   703  0097                     	;# 
   704  0098                     	;# 
   705  0099                     	;# 
   706  009A                     	;# 
   707  009B                     	;# 
   708  009C                     	;# 
   709  009D                     	;# 
   710  009E                     	;# 
   711  010C                     	;# 
   712  010D                     	;# 
   713  010E                     	;# 
   714  010E                     	;# 
   715  010F                     	;# 
   716  0110                     	;# 
   717  0110                     	;# 
   718  0111                     	;# 
   719  0112                     	;# 
   720  0112                     	;# 
   721  0113                     	;# 
   722  0114                     	;# 
   723  0114                     	;# 
   724  0115                     	;# 
   725  0116                     	;# 
   726  0116                     	;# 
   727  0117                     	;# 
   728  0119                     	;# 
   729  0119                     	;# 
   730  0119                     	;# 
   731  011A                     	;# 
   732  011A                     	;# 
   733  011A                     	;# 
   734  011B                     	;# 
   735  011B                     	;# 
   736  011B                     	;# 
   737  011B                     	;# 
   738  011B                     	;# 
   739  011C                     	;# 
   740  011C                     	;# 
   741  011C                     	;# 
   742  011D                     	;# 
   743  011D                     	;# 
   744  011D                     	;# 
   745  011E                     	;# 
   746  011E                     	;# 
   747  011E                     	;# 
   748  011F                     	;# 
   749  011F                     	;# 
   750  011F                     	;# 
   751  011F                     	;# 
   752  011F                     	;# 
   753  018C                     	;# 
   754  018D                     	;# 
   755  018E                     	;# 
   756  018F                     	;# 
   757  0190                     	;# 
   758  0191                     	;# 
   759  0192                     	;# 
   760  0196                     	;# 
   761  0197                     	;# 
   762  0198                     	;# 
   763  0199                     	;# 
   764  019A                     	;# 
   765  019B                     	;# 
   766  019C                     	;# 
   767  020C                     	;# 
   768  020C                     	;# 
   769  020D                     	;# 
   770  020E                     	;# 
   771  020F                     	;# 
   772  020F                     	;# 
   773  0210                     	;# 
   774  0210                     	;# 
   775  0211                     	;# 
   776  0211                     	;# 
   777  0212                     	;# 
   778  0212                     	;# 
   779  0213                     	;# 
   780  0214                     	;# 
   781  0215                     	;# 
   782  0215                     	;# 
   783  0216                     	;# 
   784  0216                     	;# 
   785  0217                     	;# 
   786  0217                     	;# 
   787  0218                     	;# 
   788  0218                     	;# 
   789  0219                     	;# 
   790  021A                     	;# 
   791  021B                     	;# 
   792  021B                     	;# 
   793  021C                     	;# 
   794  021C                     	;# 
   795  021D                     	;# 
   796  021D                     	;# 
   797  021E                     	;# 
   798  021F                     	;# 
   799  028C                     	;# 
   800  028C                     	;# 
   801  028D                     	;# 
   802  028D                     	;# 
   803  028E                     	;# 
   804  028F                     	;# 
   805  0290                     	;# 
   806  0290                     	;# 
   807  0291                     	;# 
   808  0292                     	;# 
   809  0292                     	;# 
   810  0293                     	;# 
   811  0293                     	;# 
   812  0294                     	;# 
   813  0295                     	;# 
   814  0296                     	;# 
   815  0296                     	;# 
   816  0297                     	;# 
   817  0298                     	;# 
   818  0298                     	;# 
   819  0299                     	;# 
   820  0299                     	;# 
   821  029A                     	;# 
   822  029B                     	;# 
   823  029C                     	;# 
   824  029C                     	;# 
   825  029D                     	;# 
   826  030C                     	;# 
   827  030C                     	;# 
   828  030D                     	;# 
   829  030E                     	;# 
   830  030F                     	;# 
   831  0310                     	;# 
   832  0310                     	;# 
   833  0311                     	;# 
   834  0312                     	;# 
   835  0313                     	;# 
   836  0314                     	;# 
   837  0314                     	;# 
   838  0315                     	;# 
   839  0316                     	;# 
   840  0317                     	;# 
   841  0318                     	;# 
   842  0318                     	;# 
   843  0319                     	;# 
   844  031A                     	;# 
   845  031B                     	;# 
   846  031C                     	;# 
   847  031C                     	;# 
   848  031D                     	;# 
   849  031E                     	;# 
   850  031F                     	;# 
   851  038C                     	;# 
   852  038C                     	;# 
   853  038D                     	;# 
   854  038E                     	;# 
   855  0390                     	;# 
   856  0390                     	;# 
   857  0391                     	;# 
   858  0392                     	;# 
   859  040C                     	;# 
   860  040D                     	;# 
   861  040E                     	;# 
   862  040F                     	;# 
   863  0410                     	;# 
   864  0411                     	;# 
   865  0416                     	;# 
   866  0416                     	;# 
   867  0417                     	;# 
   868  0418                     	;# 
   869  0418                     	;# 
   870  0419                     	;# 
   871  041A                     	;# 
   872  041A                     	;# 
   873  041B                     	;# 
   874  041C                     	;# 
   875  041C                     	;# 
   876  041D                     	;# 
   877  041E                     	;# 
   878  041F                     	;# 
   879  048C                     	;# 
   880  048C                     	;# 
   881  048D                     	;# 
   882  048E                     	;# 
   883  048F                     	;# 
   884  048F                     	;# 
   885  0490                     	;# 
   886  0491                     	;# 
   887  0492                     	;# 
   888  0492                     	;# 
   889  0493                     	;# 
   890  0494                     	;# 
   891  0495                     	;# 
   892  0495                     	;# 
   893  0496                     	;# 
   894  0497                     	;# 
   895  0498                     	;# 
   896  0499                     	;# 
   897  049A                     	;# 
   898  049B                     	;# 
   899  049C                     	;# 
   900  049D                     	;# 
   901  050C                     	;# 
   902  050C                     	;# 
   903  050D                     	;# 
   904  050E                     	;# 
   905  050F                     	;# 
   906  050F                     	;# 
   907  0510                     	;# 
   908  0511                     	;# 
   909  0512                     	;# 
   910  0512                     	;# 
   911  0513                     	;# 
   912  0514                     	;# 
   913  0515                     	;# 
   914  0515                     	;# 
   915  0516                     	;# 
   916  0517                     	;# 
   917  0518                     	;# 
   918  0519                     	;# 
   919  051A                     	;# 
   920  051B                     	;# 
   921  051C                     	;# 
   922  051D                     	;# 
   923  058C                     	;# 
   924  058C                     	;# 
   925  058D                     	;# 
   926  058E                     	;# 
   927  058F                     	;# 
   928  058F                     	;# 
   929  0590                     	;# 
   930  0591                     	;# 
   931  0592                     	;# 
   932  0593                     	;# 
   933  060C                     	;# 
   934  060D                     	;# 
   935  060E                     	;# 
   936  060F                     	;# 
   937  0610                     	;# 
   938  0611                     	;# 
   939  0612                     	;# 
   940  0613                     	;# 
   941  0614                     	;# 
   942  0616                     	;# 
   943  0617                     	;# 
   944  0618                     	;# 
   945  0619                     	;# 
   946  061A                     	;# 
   947  061B                     	;# 
   948  061C                     	;# 
   949  061D                     	;# 
   950  061E                     	;# 
   951  068C                     	;# 
   952  068D                     	;# 
   953  068E                     	;# 
   954  068F                     	;# 
   955  0690                     	;# 
   956  0691                     	;# 
   957  0692                     	;# 
   958  0693                     	;# 
   959  0694                     	;# 
   960  070C                     	;# 
   961  070D                     	;# 
   962  070E                     	;# 
   963  070F                     	;# 
   964  0710                     	;# 
   965  0711                     	;# 
   966  0712                     	;# 
   967  0713                     	;# 
   968  0714                     	;# 
   969  0716                     	;# 
   970  0717                     	;# 
   971  0718                     	;# 
   972  0719                     	;# 
   973  071A                     	;# 
   974  071B                     	;# 
   975  071C                     	;# 
   976  071D                     	;# 
   977  071E                     	;# 
   978  0796                     	;# 
   979  0797                     	;# 
   980  0798                     	;# 
   981  0799                     	;# 
   982  079A                     	;# 
   983  079B                     	;# 
   984  080C                     	;# 
   985  080D                     	;# 
   986  080E                     	;# 
   987  080F                     	;# 
   988  0810                     	;# 
   989  0811                     	;# 
   990  0812                     	;# 
   991  0813                     	;# 
   992  0814                     	;# 
   993  081A                     	;# 
   994  081B                     	;# 
   995  081C                     	;# 
   996  081D                     	;# 
   997  081E                     	;# 
   998  081F                     	;# 
   999  088C                     	;# 
  1000  088D                     	;# 
  1001  088E                     	;# 
  1002  088F                     	;# 
  1003  0890                     	;# 
  1004  0891                     	;# 
  1005  0892                     	;# 
  1006  0893                     	;# 
  1007  0895                     	;# 
  1008  0896                     	;# 
  1009  0897                     	;# 
  1010  0898                     	;# 
  1011  0899                     	;# 
  1012  089A                     	;# 
  1013  089B                     	;# 
  1014  090C                     	;# 
  1015  090E                     	;# 
  1016  090F                     	;# 
  1017  091F                     	;# 
  1018  091F                     	;# 
  1019  098F                     	;# 
  1020  098F                     	;# 
  1021  0990                     	;# 
  1022  0991                     	;# 
  1023  0992                     	;# 
  1024  0993                     	;# 
  1025  0994                     	;# 
  1026  0995                     	;# 
  1027  0996                     	;# 
  1028  0997                     	;# 
  1029  0E0F                     	;# 
  1030  0E10                     	;# 
  1031  0E11                     	;# 
  1032  0E12                     	;# 
  1033  0E13                     	;# 
  1034  0E14                     	;# 
  1035  0E15                     	;# 
  1036  0E16                     	;# 
  1037  0E17                     	;# 
  1038  0E18                     	;# 
  1039  0E19                     	;# 
  1040  0E1A                     	;# 
  1041  0E1B                     	;# 
  1042  0E1C                     	;# 
  1043  0E1D                     	;# 
  1044  0E1E                     	;# 
  1045  0E1F                     	;# 
  1046  0E20                     	;# 
  1047  0E21                     	;# 
  1048  0E22                     	;# 
  1049  0E23                     	;# 
  1050  0E24                     	;# 
  1051  0E25                     	;# 
  1052  0E26                     	;# 
  1053  0E27                     	;# 
  1054  0E28                     	;# 
  1055  0E29                     	;# 
  1056  0E2A                     	;# 
  1057  0E2B                     	;# 
  1058  0E2C                     	;# 
  1059  0E2D                     	;# 
  1060  0E2E                     	;# 
  1061  0E2F                     	;# 
  1062  0E30                     	;# 
  1063  0E31                     	;# 
  1064  0E32                     	;# 
  1065  0E33                     	;# 
  1066  0E34                     	;# 
  1067  0E35                     	;# 
  1068  0E36                     	;# 
  1069  0E37                     	;# 
  1070  0E8F                     	;# 
  1071  0E90                     	;# 
  1072  0E91                     	;# 
  1073  0E92                     	;# 
  1074  0E93                     	;# 
  1075  0E94                     	;# 
  1076  0E95                     	;# 
  1077  0E96                     	;# 
  1078  0E97                     	;# 
  1079  0E9C                     	;# 
  1080  0E9D                     	;# 
  1081  0E9E                     	;# 
  1082  0EA1                     	;# 
  1083  0EA2                     	;# 
  1084  0EA3                     	;# 
  1085  0EA4                     	;# 
  1086  0EA5                     	;# 
  1087  0EA9                     	;# 
  1088  0EAA                     	;# 
  1089  0EAB                     	;# 
  1090  0EAC                     	;# 
  1091  0EB1                     	;# 
  1092  0EB2                     	;# 
  1093  0EB3                     	;# 
  1094  0EB8                     	;# 
  1095  0EB9                     	;# 
  1096  0EBA                     	;# 
  1097  0EBB                     	;# 
  1098  0EBC                     	;# 
  1099  0EBD                     	;# 
  1100  0EBE                     	;# 
  1101  0EC3                     	;# 
  1102  0EC5                     	;# 
  1103  0EC6                     	;# 
  1104  0EC7                     	;# 
  1105  0EC8                     	;# 
  1106  0EC9                     	;# 
  1107  0ECA                     	;# 
  1108  0ECB                     	;# 
  1109  0ECC                     	;# 
  1110  0F10                     	;# 
  1111  0F11                     	;# 
  1112  0F12                     	;# 
  1113  0F13                     	;# 
  1114  0F14                     	;# 
  1115  0F15                     	;# 
  1116  0F16                     	;# 
  1117  0F17                     	;# 
  1118  0F18                     	;# 
  1119  0F19                     	;# 
  1120  0F1A                     	;# 
  1121  0F1B                     	;# 
  1122  0F1C                     	;# 
  1123  0F1D                     	;# 
  1124  0F1E                     	;# 
  1125  0F1F                     	;# 
  1126  0F20                     	;# 
  1127  0F21                     	;# 
  1128  0F22                     	;# 
  1129  0F23                     	;# 
  1130  0F24                     	;# 
  1131  0F25                     	;# 
  1132  0F26                     	;# 
  1133  0F27                     	;# 
  1134  0F28                     	;# 
  1135  0F29                     	;# 
  1136  0F2A                     	;# 
  1137  0F2B                     	;# 
  1138  0F2C                     	;# 
  1139  0F2D                     	;# 
  1140  0F2E                     	;# 
  1141  0F2F                     	;# 
  1142  0F30                     	;# 
  1143  0F31                     	;# 
  1144  0F32                     	;# 
  1145  0F38                     	;# 
  1146  0F39                     	;# 
  1147  0F3A                     	;# 
  1148  0F3B                     	;# 
  1149  0F3C                     	;# 
  1150  0F3D                     	;# 
  1151  0F3E                     	;# 
  1152  0F3F                     	;# 
  1153  0F40                     	;# 
  1154  0F41                     	;# 
  1155  0F43                     	;# 
  1156  0F44                     	;# 
  1157  0F45                     	;# 
  1158  0F46                     	;# 
  1159  0F47                     	;# 
  1160  0F48                     	;# 
  1161  0F49                     	;# 
  1162  0F4A                     	;# 
  1163  0F4B                     	;# 
  1164  0F4C                     	;# 
  1165  0F4E                     	;# 
  1166  0F4F                     	;# 
  1167  0F50                     	;# 
  1168  0F51                     	;# 
  1169  0F52                     	;# 
  1170  0F53                     	;# 
  1171  0F54                     	;# 
  1172  0F55                     	;# 
  1173  0F56                     	;# 
  1174  0F57                     	;# 
  1175  0F59                     	;# 
  1176  0F5A                     	;# 
  1177  0F5B                     	;# 
  1178  0F5C                     	;# 
  1179  0F5D                     	;# 
  1180  0F61                     	;# 
  1181  0F62                     	;# 
  1182  0F64                     	;# 
  1183  0F65                     	;# 
  1184  0F66                     	;# 
  1185  0F67                     	;# 
  1186  0F68                     	;# 
  1187  0F69                     	;# 
  1188  0F6A                     	;# 
  1189  0F6B                     	;# 
  1190  0F6C                     	;# 
  1191  0F6D                     	;# 
  1192  0FE4                     	;# 
  1193  0FE5                     	;# 
  1194  0FE6                     	;# 
  1195  0FE7                     	;# 
  1196  0FE8                     	;# 
  1197  0FE9                     	;# 
  1198  0FEA                     	;# 
  1199  0FEB                     	;# 
  1200  0FED                     	;# 
  1201  0FEE                     	;# 
  1202  0FEF                     	;# 
  1203  0000                     	;# 
  1204  0001                     	;# 
  1205  0002                     	;# 
  1206  0003                     	;# 
  1207  0004                     	;# 
  1208  0005                     	;# 
  1209  0006                     	;# 
  1210  0007                     	;# 
  1211  0008                     	;# 
  1212  0009                     	;# 
  1213  000A                     	;# 
  1214  000B                     	;# 
  1215  000C                     	;# 
  1216  000D                     	;# 
  1217  000E                     	;# 
  1218  000F                     	;# 
  1219  0010                     	;# 
  1220  0011                     	;# 
  1221  0012                     	;# 
  1222  0013                     	;# 
  1223  0014                     	;# 
  1224  0015                     	;# 
  1225  0016                     	;# 
  1226  0017                     	;# 
  1227  0018                     	;# 
  1228  0019                     	;# 
  1229  001A                     	;# 
  1230  001C                     	;# 
  1231  001C                     	;# 
  1232  001D                     	;# 
  1233  001D                     	;# 
  1234  001E                     	;# 
  1235  001F                     	;# 
  1236  008C                     	;# 
  1237  008C                     	;# 
  1238  008D                     	;# 
  1239  008E                     	;# 
  1240  008E                     	;# 
  1241  008F                     	;# 
  1242  0090                     	;# 
  1243  0090                     	;# 
  1244  0091                     	;# 
  1245  0093                     	;# 
  1246  0094                     	;# 
  1247  0095                     	;# 
  1248  0096                     	;# 
  1249  0097                     	;# 
  1250  0098                     	;# 
  1251  0099                     	;# 
  1252  009A                     	;# 
  1253  009B                     	;# 
  1254  009C                     	;# 
  1255  009D                     	;# 
  1256  009E                     	;# 
  1257  010C                     	;# 
  1258  010D                     	;# 
  1259  010E                     	;# 
  1260  010E                     	;# 
  1261  010F                     	;# 
  1262  0110                     	;# 
  1263  0110                     	;# 
  1264  0111                     	;# 
  1265  0112                     	;# 
  1266  0112                     	;# 
  1267  0113                     	;# 
  1268  0114                     	;# 
  1269  0114                     	;# 
  1270  0115                     	;# 
  1271  0116                     	;# 
  1272  0116                     	;# 
  1273  0117                     	;# 
  1274  0119                     	;# 
  1275  0119                     	;# 
  1276  0119                     	;# 
  1277  011A                     	;# 
  1278  011A                     	;# 
  1279  011A                     	;# 
  1280  011B                     	;# 
  1281  011B                     	;# 
  1282  011B                     	;# 
  1283  011B                     	;# 
  1284  011B                     	;# 
  1285  011C                     	;# 
  1286  011C                     	;# 
  1287  011C                     	;# 
  1288  011D                     	;# 
  1289  011D                     	;# 
  1290  011D                     	;# 
  1291  011E                     	;# 
  1292  011E                     	;# 
  1293  011E                     	;# 
  1294  011F                     	;# 
  1295  011F                     	;# 
  1296  011F                     	;# 
  1297  011F                     	;# 
  1298  011F                     	;# 
  1299  018C                     	;# 
  1300  018D                     	;# 
  1301  018E                     	;# 
  1302  018F                     	;# 
  1303  0190                     	;# 
  1304  0191                     	;# 
  1305  0192                     	;# 
  1306  0196                     	;# 
  1307  0197                     	;# 
  1308  0198                     	;# 
  1309  0199                     	;# 
  1310  019A                     	;# 
  1311  019B                     	;# 
  1312  019C                     	;# 
  1313  020C                     	;# 
  1314  020C                     	;# 
  1315  020D                     	;# 
  1316  020E                     	;# 
  1317  020F                     	;# 
  1318  020F                     	;# 
  1319  0210                     	;# 
  1320  0210                     	;# 
  1321  0211                     	;# 
  1322  0211                     	;# 
  1323  0212                     	;# 
  1324  0212                     	;# 
  1325  0213                     	;# 
  1326  0214                     	;# 
  1327  0215                     	;# 
  1328  0215                     	;# 
  1329  0216                     	;# 
  1330  0216                     	;# 
  1331  0217                     	;# 
  1332  0217                     	;# 
  1333  0218                     	;# 
  1334  0218                     	;# 
  1335  0219                     	;# 
  1336  021A                     	;# 
  1337  021B                     	;# 
  1338  021B                     	;# 
  1339  021C                     	;# 
  1340  021C                     	;# 
  1341  021D                     	;# 
  1342  021D                     	;# 
  1343  021E                     	;# 
  1344  021F                     	;# 
  1345  028C                     	;# 
  1346  028C                     	;# 
  1347  028D                     	;# 
  1348  028D                     	;# 
  1349  028E                     	;# 
  1350  028F                     	;# 
  1351  0290                     	;# 
  1352  0290                     	;# 
  1353  0291                     	;# 
  1354  0292                     	;# 
  1355  0292                     	;# 
  1356  0293                     	;# 
  1357  0293                     	;# 
  1358  0294                     	;# 
  1359  0295                     	;# 
  1360  0296                     	;# 
  1361  0296                     	;# 
  1362  0297                     	;# 
  1363  0298                     	;# 
  1364  0298                     	;# 
  1365  0299                     	;# 
  1366  0299                     	;# 
  1367  029A                     	;# 
  1368  029B                     	;# 
  1369  029C                     	;# 
  1370  029C                     	;# 
  1371  029D                     	;# 
  1372  030C                     	;# 
  1373  030C                     	;# 
  1374  030D                     	;# 
  1375  030E                     	;# 
  1376  030F                     	;# 
  1377  0310                     	;# 
  1378  0310                     	;# 
  1379  0311                     	;# 
  1380  0312                     	;# 
  1381  0313                     	;# 
  1382  0314                     	;# 
  1383  0314                     	;# 
  1384  0315                     	;# 
  1385  0316                     	;# 
  1386  0317                     	;# 
  1387  0318                     	;# 
  1388  0318                     	;# 
  1389  0319                     	;# 
  1390  031A                     	;# 
  1391  031B                     	;# 
  1392  031C                     	;# 
  1393  031C                     	;# 
  1394  031D                     	;# 
  1395  031E                     	;# 
  1396  031F                     	;# 
  1397  038C                     	;# 
  1398  038C                     	;# 
  1399  038D                     	;# 
  1400  038E                     	;# 
  1401  0390                     	;# 
  1402  0390                     	;# 
  1403  0391                     	;# 
  1404  0392                     	;# 
  1405  040C                     	;# 
  1406  040D                     	;# 
  1407  040E                     	;# 
  1408  040F                     	;# 
  1409  0410                     	;# 
  1410  0411                     	;# 
  1411  0416                     	;# 
  1412  0416                     	;# 
  1413  0417                     	;# 
  1414  0418                     	;# 
  1415  0418                     	;# 
  1416  0419                     	;# 
  1417  041A                     	;# 
  1418  041A                     	;# 
  1419  041B                     	;# 
  1420  041C                     	;# 
  1421  041C                     	;# 
  1422  041D                     	;# 
  1423  041E                     	;# 
  1424  041F                     	;# 
  1425  048C                     	;# 
  1426  048C                     	;# 
  1427  048D                     	;# 
  1428  048E                     	;# 
  1429  048F                     	;# 
  1430  048F                     	;# 
  1431  0490                     	;# 
  1432  0491                     	;# 
  1433  0492                     	;# 
  1434  0492                     	;# 
  1435  0493                     	;# 
  1436  0494                     	;# 
  1437  0495                     	;# 
  1438  0495                     	;# 
  1439  0496                     	;# 
  1440  0497                     	;# 
  1441  0498                     	;# 
  1442  0499                     	;# 
  1443  049A                     	;# 
  1444  049B                     	;# 
  1445  049C                     	;# 
  1446  049D                     	;# 
  1447  050C                     	;# 
  1448  050C                     	;# 
  1449  050D                     	;# 
  1450  050E                     	;# 
  1451  050F                     	;# 
  1452  050F                     	;# 
  1453  0510                     	;# 
  1454  0511                     	;# 
  1455  0512                     	;# 
  1456  0512                     	;# 
  1457  0513                     	;# 
  1458  0514                     	;# 
  1459  0515                     	;# 
  1460  0515                     	;# 
  1461  0516                     	;# 
  1462  0517                     	;# 
  1463  0518                     	;# 
  1464  0519                     	;# 
  1465  051A                     	;# 
  1466  051B                     	;# 
  1467  051C                     	;# 
  1468  051D                     	;# 
  1469  058C                     	;# 
  1470  058C                     	;# 
  1471  058D                     	;# 
  1472  058E                     	;# 
  1473  058F                     	;# 
  1474  058F                     	;# 
  1475  0590                     	;# 
  1476  0591                     	;# 
  1477  0592                     	;# 
  1478  0593                     	;# 
  1479  060C                     	;# 
  1480  060D                     	;# 
  1481  060E                     	;# 
  1482  060F                     	;# 
  1483  0610                     	;# 
  1484  0611                     	;# 
  1485  0612                     	;# 
  1486  0613                     	;# 
  1487  0614                     	;# 
  1488  0616                     	;# 
  1489  0617                     	;# 
  1490  0618                     	;# 
  1491  0619                     	;# 
  1492  061A                     	;# 
  1493  061B                     	;# 
  1494  061C                     	;# 
  1495  061D                     	;# 
  1496  061E                     	;# 
  1497  068C                     	;# 
  1498  068D                     	;# 
  1499  068E                     	;# 
  1500  068F                     	;# 
  1501  0690                     	;# 
  1502  0691                     	;# 
  1503  0692                     	;# 
  1504  0693                     	;# 
  1505  0694                     	;# 
  1506  070C                     	;# 
  1507  070D                     	;# 
  1508  070E                     	;# 
  1509  070F                     	;# 
  1510  0710                     	;# 
  1511  0711                     	;# 
  1512  0712                     	;# 
  1513  0713                     	;# 
  1514  0714                     	;# 
  1515  0716                     	;# 
  1516  0717                     	;# 
  1517  0718                     	;# 
  1518  0719                     	;# 
  1519  071A                     	;# 
  1520  071B                     	;# 
  1521  071C                     	;# 
  1522  071D                     	;# 
  1523  071E                     	;# 
  1524  0796                     	;# 
  1525  0797                     	;# 
  1526  0798                     	;# 
  1527  0799                     	;# 
  1528  079A                     	;# 
  1529  079B                     	;# 
  1530  080C                     	;# 
  1531  080D                     	;# 
  1532  080E                     	;# 
  1533  080F                     	;# 
  1534  0810                     	;# 
  1535  0811                     	;# 
  1536  0812                     	;# 
  1537  0813                     	;# 
  1538  0814                     	;# 
  1539  081A                     	;# 
  1540  081B                     	;# 
  1541  081C                     	;# 
  1542  081D                     	;# 
  1543  081E                     	;# 
  1544  081F                     	;# 
  1545  088C                     	;# 
  1546  088D                     	;# 
  1547  088E                     	;# 
  1548  088F                     	;# 
  1549  0890                     	;# 
  1550  0891                     	;# 
  1551  0892                     	;# 
  1552  0893                     	;# 
  1553  0895                     	;# 
  1554  0896                     	;# 
  1555  0897                     	;# 
  1556  0898                     	;# 
  1557  0899                     	;# 
  1558  089A                     	;# 
  1559  089B                     	;# 
  1560  090C                     	;# 
  1561  090E                     	;# 
  1562  090F                     	;# 
  1563  091F                     	;# 
  1564  091F                     	;# 
  1565  098F                     	;# 
  1566  098F                     	;# 
  1567  0990                     	;# 
  1568  0991                     	;# 
  1569  0992                     	;# 
  1570  0993                     	;# 
  1571  0994                     	;# 
  1572  0995                     	;# 
  1573  0996                     	;# 
  1574  0997                     	;# 
  1575  0E0F                     	;# 
  1576  0E10                     	;# 
  1577  0E11                     	;# 
  1578  0E12                     	;# 
  1579  0E13                     	;# 
  1580  0E14                     	;# 
  1581  0E15                     	;# 
  1582  0E16                     	;# 
  1583  0E17                     	;# 
  1584  0E18                     	;# 
  1585  0E19                     	;# 
  1586  0E1A                     	;# 
  1587  0E1B                     	;# 
  1588  0E1C                     	;# 
  1589  0E1D                     	;# 
  1590  0E1E                     	;# 
  1591  0E1F                     	;# 
  1592  0E20                     	;# 
  1593  0E21                     	;# 
  1594  0E22                     	;# 
  1595  0E23                     	;# 
  1596  0E24                     	;# 
  1597  0E25                     	;# 
  1598  0E26                     	;# 
  1599  0E27                     	;# 
  1600  0E28                     	;# 
  1601  0E29                     	;# 
  1602  0E2A                     	;# 
  1603  0E2B                     	;# 
  1604  0E2C                     	;# 
  1605  0E2D                     	;# 
  1606  0E2E                     	;# 
  1607  0E2F                     	;# 
  1608  0E30                     	;# 
  1609  0E31                     	;# 
  1610  0E32                     	;# 
  1611  0E33                     	;# 
  1612  0E34                     	;# 
  1613  0E35                     	;# 
  1614  0E36                     	;# 
  1615  0E37                     	;# 
  1616  0E8F                     	;# 
  1617  0E90                     	;# 
  1618  0E91                     	;# 
  1619  0E92                     	;# 
  1620  0E93                     	;# 
  1621  0E94                     	;# 
  1622  0E95                     	;# 
  1623  0E96                     	;# 
  1624  0E97                     	;# 
  1625  0E9C                     	;# 
  1626  0E9D                     	;# 
  1627  0E9E                     	;# 
  1628  0EA1                     	;# 
  1629  0EA2                     	;# 
  1630  0EA3                     	;# 
  1631  0EA4                     	;# 
  1632  0EA5                     	;# 
  1633  0EA9                     	;# 
  1634  0EAA                     	;# 
  1635  0EAB                     	;# 
  1636  0EAC                     	;# 
  1637  0EB1                     	;# 
  1638  0EB2                     	;# 
  1639  0EB3                     	;# 
  1640  0EB8                     	;# 
  1641  0EB9                     	;# 
  1642  0EBA                     	;# 
  1643  0EBB                     	;# 
  1644  0EBC                     	;# 
  1645  0EBD                     	;# 
  1646  0EBE                     	;# 
  1647  0EC3                     	;# 
  1648  0EC5                     	;# 
  1649  0EC6                     	;# 
  1650  0EC7                     	;# 
  1651  0EC8                     	;# 
  1652  0EC9                     	;# 
  1653  0ECA                     	;# 
  1654  0ECB                     	;# 
  1655  0ECC                     	;# 
  1656  0F10                     	;# 
  1657  0F11                     	;# 
  1658  0F12                     	;# 
  1659  0F13                     	;# 
  1660  0F14                     	;# 
  1661  0F15                     	;# 
  1662  0F16                     	;# 
  1663  0F17                     	;# 
  1664  0F18                     	;# 
  1665  0F19                     	;# 
  1666  0F1A                     	;# 
  1667  0F1B                     	;# 
  1668  0F1C                     	;# 
  1669  0F1D                     	;# 
  1670  0F1E                     	;# 
  1671  0F1F                     	;# 
  1672  0F20                     	;# 
  1673  0F21                     	;# 
  1674  0F22                     	;# 
  1675  0F23                     	;# 
  1676  0F24                     	;# 
  1677  0F25                     	;# 
  1678  0F26                     	;# 
  1679  0F27                     	;# 
  1680  0F28                     	;# 
  1681  0F29                     	;# 
  1682  0F2A                     	;# 
  1683  0F2B                     	;# 
  1684  0F2C                     	;# 
  1685  0F2D                     	;# 
  1686  0F2E                     	;# 
  1687  0F2F                     	;# 
  1688  0F30                     	;# 
  1689  0F31                     	;# 
  1690  0F32                     	;# 
  1691  0F38                     	;# 
  1692  0F39                     	;# 
  1693  0F3A                     	;# 
  1694  0F3B                     	;# 
  1695  0F3C                     	;# 
  1696  0F3D                     	;# 
  1697  0F3E                     	;# 
  1698  0F3F                     	;# 
  1699  0F40                     	;# 
  1700  0F41                     	;# 
  1701  0F43                     	;# 
  1702  0F44                     	;# 
  1703  0F45                     	;# 
  1704  0F46                     	;# 
  1705  0F47                     	;# 
  1706  0F48                     	;# 
  1707  0F49                     	;# 
  1708  0F4A                     	;# 
  1709  0F4B                     	;# 
  1710  0F4C                     	;# 
  1711  0F4E                     	;# 
  1712  0F4F                     	;# 
  1713  0F50                     	;# 
  1714  0F51                     	;# 
  1715  0F52                     	;# 
  1716  0F53                     	;# 
  1717  0F54                     	;# 
  1718  0F55                     	;# 
  1719  0F56                     	;# 
  1720  0F57                     	;# 
  1721  0F59                     	;# 
  1722  0F5A                     	;# 
  1723  0F5B                     	;# 
  1724  0F5C                     	;# 
  1725  0F5D                     	;# 
  1726  0F61                     	;# 
  1727  0F62                     	;# 
  1728  0F64                     	;# 
  1729  0F65                     	;# 
  1730  0F66                     	;# 
  1731  0F67                     	;# 
  1732  0F68                     	;# 
  1733  0F69                     	;# 
  1734  0F6A                     	;# 
  1735  0F6B                     	;# 
  1736  0F6C                     	;# 
  1737  0F6D                     	;# 
  1738  0FE4                     	;# 
  1739  0FE5                     	;# 
  1740  0FE6                     	;# 
  1741  0FE7                     	;# 
  1742  0FE8                     	;# 
  1743  0FE9                     	;# 
  1744  0FEA                     	;# 
  1745  0FEB                     	;# 
  1746  0FED                     	;# 
  1747  0FEE                     	;# 
  1748  0FEF                     	;# 
  1749  0000                     	;# 
  1750  0001                     	;# 
  1751  0002                     	;# 
  1752  0003                     	;# 
  1753  0004                     	;# 
  1754  0005                     	;# 
  1755  0006                     	;# 
  1756  0007                     	;# 
  1757  0008                     	;# 
  1758  0009                     	;# 
  1759  000A                     	;# 
  1760  000B                     	;# 
  1761  000C                     	;# 
  1762  000D                     	;# 
  1763  000E                     	;# 
  1764  000F                     	;# 
  1765  0010                     	;# 
  1766  0011                     	;# 
  1767  0012                     	;# 
  1768  0013                     	;# 
  1769  0014                     	;# 
  1770  0015                     	;# 
  1771  0016                     	;# 
  1772  0017                     	;# 
  1773  0018                     	;# 
  1774  0019                     	;# 
  1775  001A                     	;# 
  1776  001C                     	;# 
  1777  001C                     	;# 
  1778  001D                     	;# 
  1779  001D                     	;# 
  1780  001E                     	;# 
  1781  001F                     	;# 
  1782  008C                     	;# 
  1783  008C                     	;# 
  1784  008D                     	;# 
  1785  008E                     	;# 
  1786  008E                     	;# 
  1787  008F                     	;# 
  1788  0090                     	;# 
  1789  0090                     	;# 
  1790  0091                     	;# 
  1791  0093                     	;# 
  1792  0094                     	;# 
  1793  0095                     	;# 
  1794  0096                     	;# 
  1795  0097                     	;# 
  1796  0098                     	;# 
  1797  0099                     	;# 
  1798  009A                     	;# 
  1799  009B                     	;# 
  1800  009C                     	;# 
  1801  009D                     	;# 
  1802  009E                     	;# 
  1803  010C                     	;# 
  1804  010D                     	;# 
  1805  010E                     	;# 
  1806  010E                     	;# 
  1807  010F                     	;# 
  1808  0110                     	;# 
  1809  0110                     	;# 
  1810  0111                     	;# 
  1811  0112                     	;# 
  1812  0112                     	;# 
  1813  0113                     	;# 
  1814  0114                     	;# 
  1815  0114                     	;# 
  1816  0115                     	;# 
  1817  0116                     	;# 
  1818  0116                     	;# 
  1819  0117                     	;# 
  1820  0119                     	;# 
  1821  0119                     	;# 
  1822  0119                     	;# 
  1823  011A                     	;# 
  1824  011A                     	;# 
  1825  011A                     	;# 
  1826  011B                     	;# 
  1827  011B                     	;# 
  1828  011B                     	;# 
  1829  011B                     	;# 
  1830  011B                     	;# 
  1831  011C                     	;# 
  1832  011C                     	;# 
  1833  011C                     	;# 
  1834  011D                     	;# 
  1835  011D                     	;# 
  1836  011D                     	;# 
  1837  011E                     	;# 
  1838  011E                     	;# 
  1839  011E                     	;# 
  1840  011F                     	;# 
  1841  011F                     	;# 
  1842  011F                     	;# 
  1843  011F                     	;# 
  1844  011F                     	;# 
  1845  018C                     	;# 
  1846  018D                     	;# 
  1847  018E                     	;# 
  1848  018F                     	;# 
  1849  0190                     	;# 
  1850  0191                     	;# 
  1851  0192                     	;# 
  1852  0196                     	;# 
  1853  0197                     	;# 
  1854  0198                     	;# 
  1855  0199                     	;# 
  1856  019A                     	;# 
  1857  019B                     	;# 
  1858  019C                     	;# 
  1859  020C                     	;# 
  1860  020C                     	;# 
  1861  020D                     	;# 
  1862  020E                     	;# 
  1863  020F                     	;# 
  1864  020F                     	;# 
  1865  0210                     	;# 
  1866  0210                     	;# 
  1867  0211                     	;# 
  1868  0211                     	;# 
  1869  0212                     	;# 
  1870  0212                     	;# 
  1871  0213                     	;# 
  1872  0214                     	;# 
  1873  0215                     	;# 
  1874  0215                     	;# 
  1875  0216                     	;# 
  1876  0216                     	;# 
  1877  0217                     	;# 
  1878  0217                     	;# 
  1879  0218                     	;# 
  1880  0218                     	;# 
  1881  0219                     	;# 
  1882  021A                     	;# 
  1883  021B                     	;# 
  1884  021B                     	;# 
  1885  021C                     	;# 
  1886  021C                     	;# 
  1887  021D                     	;# 
  1888  021D                     	;# 
  1889  021E                     	;# 
  1890  021F                     	;# 
  1891  028C                     	;# 
  1892  028C                     	;# 
  1893  028D                     	;# 
  1894  028D                     	;# 
  1895  028E                     	;# 
  1896  028F                     	;# 
  1897  0290                     	;# 
  1898  0290                     	;# 
  1899  0291                     	;# 
  1900  0292                     	;# 
  1901  0292                     	;# 
  1902  0293                     	;# 
  1903  0293                     	;# 
  1904  0294                     	;# 
  1905  0295                     	;# 
  1906  0296                     	;# 
  1907  0296                     	;# 
  1908  0297                     	;# 
  1909  0298                     	;# 
  1910  0298                     	;# 
  1911  0299                     	;# 
  1912  0299                     	;# 
  1913  029A                     	;# 
  1914  029B                     	;# 
  1915  029C                     	;# 
  1916  029C                     	;# 
  1917  029D                     	;# 
  1918  030C                     	;# 
  1919  030C                     	;# 
  1920  030D                     	;# 
  1921  030E                     	;# 
  1922  030F                     	;# 
  1923  0310                     	;# 
  1924  0310                     	;# 
  1925  0311                     	;# 
  1926  0312                     	;# 
  1927  0313                     	;# 
  1928  0314                     	;# 
  1929  0314                     	;# 
  1930  0315                     	;# 
  1931  0316                     	;# 
  1932  0317                     	;# 
  1933  0318                     	;# 
  1934  0318                     	;# 
  1935  0319                     	;# 
  1936  031A                     	;# 
  1937  031B                     	;# 
  1938  031C                     	;# 
  1939  031C                     	;# 
  1940  031D                     	;# 
  1941  031E                     	;# 
  1942  031F                     	;# 
  1943  038C                     	;# 
  1944  038C                     	;# 
  1945  038D                     	;# 
  1946  038E                     	;# 
  1947  0390                     	;# 
  1948  0390                     	;# 
  1949  0391                     	;# 
  1950  0392                     	;# 
  1951  040C                     	;# 
  1952  040D                     	;# 
  1953  040E                     	;# 
  1954  040F                     	;# 
  1955  0410                     	;# 
  1956  0411                     	;# 
  1957  0416                     	;# 
  1958  0416                     	;# 
  1959  0417                     	;# 
  1960  0418                     	;# 
  1961  0418                     	;# 
  1962  0419                     	;# 
  1963  041A                     	;# 
  1964  041A                     	;# 
  1965  041B                     	;# 
  1966  041C                     	;# 
  1967  041C                     	;# 
  1968  041D                     	;# 
  1969  041E                     	;# 
  1970  041F                     	;# 
  1971  048C                     	;# 
  1972  048C                     	;# 
  1973  048D                     	;# 
  1974  048E                     	;# 
  1975  048F                     	;# 
  1976  048F                     	;# 
  1977  0490                     	;# 
  1978  0491                     	;# 
  1979  0492                     	;# 
  1980  0492                     	;# 
  1981  0493                     	;# 
  1982  0494                     	;# 
  1983  0495                     	;# 
  1984  0495                     	;# 
  1985  0496                     	;# 
  1986  0497                     	;# 
  1987  0498                     	;# 
  1988  0499                     	;# 
  1989  049A                     	;# 
  1990  049B                     	;# 
  1991  049C                     	;# 
  1992  049D                     	;# 
  1993  050C                     	;# 
  1994  050C                     	;# 
  1995  050D                     	;# 
  1996  050E                     	;# 
  1997  050F                     	;# 
  1998  050F                     	;# 
  1999  0510                     	;# 
  2000  0511                     	;# 
  2001  0512                     	;# 
  2002  0512                     	;# 
  2003  0513                     	;# 
  2004  0514                     	;# 
  2005  0515                     	;# 
  2006  0515                     	;# 
  2007  0516                     	;# 
  2008  0517                     	;# 
  2009  0518                     	;# 
  2010  0519                     	;# 
  2011  051A                     	;# 
  2012  051B                     	;# 
  2013  051C                     	;# 
  2014  051D                     	;# 
  2015  058C                     	;# 
  2016  058C                     	;# 
  2017  058D                     	;# 
  2018  058E                     	;# 
  2019  058F                     	;# 
  2020  058F                     	;# 
  2021  0590                     	;# 
  2022  0591                     	;# 
  2023  0592                     	;# 
  2024  0593                     	;# 
  2025  060C                     	;# 
  2026  060D                     	;# 
  2027  060E                     	;# 
  2028  060F                     	;# 
  2029  0610                     	;# 
  2030  0611                     	;# 
  2031  0612                     	;# 
  2032  0613                     	;# 
  2033  0614                     	;# 
  2034  0616                     	;# 
  2035  0617                     	;# 
  2036  0618                     	;# 
  2037  0619                     	;# 
  2038  061A                     	;# 
  2039  061B                     	;# 
  2040  061C                     	;# 
  2041  061D                     	;# 
  2042  061E                     	;# 
  2043  068C                     	;# 
  2044  068D                     	;# 
  2045  068E                     	;# 
  2046  068F                     	;# 
  2047  0690                     	;# 
  2048  0691                     	;# 
  2049  0692                     	;# 
  2050  0693                     	;# 
  2051  0694                     	;# 
  2052  070C                     	;# 
  2053  070D                     	;# 
  2054  070E                     	;# 
  2055  070F                     	;# 
  2056  0710                     	;# 
  2057  0711                     	;# 
  2058  0712                     	;# 
  2059  0713                     	;# 
  2060  0714                     	;# 
  2061  0716                     	;# 
  2062  0717                     	;# 
  2063  0718                     	;# 
  2064  0719                     	;# 
  2065  071A                     	;# 
  2066  071B                     	;# 
  2067  071C                     	;# 
  2068  071D                     	;# 
  2069  071E                     	;# 
  2070  0796                     	;# 
  2071  0797                     	;# 
  2072  0798                     	;# 
  2073  0799                     	;# 
  2074  079A                     	;# 
  2075  079B                     	;# 
  2076  080C                     	;# 
  2077  080D                     	;# 
  2078  080E                     	;# 
  2079  080F                     	;# 
  2080  0810                     	;# 
  2081  0811                     	;# 
  2082  0812                     	;# 
  2083  0813                     	;# 
  2084  0814                     	;# 
  2085  081A                     	;# 
  2086  081B                     	;# 
  2087  081C                     	;# 
  2088  081D                     	;# 
  2089  081E                     	;# 
  2090  081F                     	;# 
  2091  088C                     	;# 
  2092  088D                     	;# 
  2093  088E                     	;# 
  2094  088F                     	;# 
  2095  0890                     	;# 
  2096  0891                     	;# 
  2097  0892                     	;# 
  2098  0893                     	;# 
  2099  0895                     	;# 
  2100  0896                     	;# 
  2101  0897                     	;# 
  2102  0898                     	;# 
  2103  0899                     	;# 
  2104  089A                     	;# 
  2105  089B                     	;# 
  2106  090C                     	;# 
  2107  090E                     	;# 
  2108  090F                     	;# 
  2109  091F                     	;# 
  2110  091F                     	;# 
  2111  098F                     	;# 
  2112  098F                     	;# 
  2113  0990                     	;# 
  2114  0991                     	;# 
  2115  0992                     	;# 
  2116  0993                     	;# 
  2117  0994                     	;# 
  2118  0995                     	;# 
  2119  0996                     	;# 
  2120  0997                     	;# 
  2121  0E0F                     	;# 
  2122  0E10                     	;# 
  2123  0E11                     	;# 
  2124  0E12                     	;# 
  2125  0E13                     	;# 
  2126  0E14                     	;# 
  2127  0E15                     	;# 
  2128  0E16                     	;# 
  2129  0E17                     	;# 
  2130  0E18                     	;# 
  2131  0E19                     	;# 
  2132  0E1A                     	;# 
  2133  0E1B                     	;# 
  2134  0E1C                     	;# 
  2135  0E1D                     	;# 
  2136  0E1E                     	;# 
  2137  0E1F                     	;# 
  2138  0E20                     	;# 
  2139  0E21                     	;# 
  2140  0E22                     	;# 
  2141  0E23                     	;# 
  2142  0E24                     	;# 
  2143  0E25                     	;# 
  2144  0E26                     	;# 
  2145  0E27                     	;# 
  2146  0E28                     	;# 
  2147  0E29                     	;# 
  2148  0E2A                     	;# 
  2149  0E2B                     	;# 
  2150  0E2C                     	;# 
  2151  0E2D                     	;# 
  2152  0E2E                     	;# 
  2153  0E2F                     	;# 
  2154  0E30                     	;# 
  2155  0E31                     	;# 
  2156  0E32                     	;# 
  2157  0E33                     	;# 
  2158  0E34                     	;# 
  2159  0E35                     	;# 
  2160  0E36                     	;# 
  2161  0E37                     	;# 
  2162  0E8F                     	;# 
  2163  0E90                     	;# 
  2164  0E91                     	;# 
  2165  0E92                     	;# 
  2166  0E93                     	;# 
  2167  0E94                     	;# 
  2168  0E95                     	;# 
  2169  0E96                     	;# 
  2170  0E97                     	;# 
  2171  0E9C                     	;# 
  2172  0E9D                     	;# 
  2173  0E9E                     	;# 
  2174  0EA1                     	;# 
  2175  0EA2                     	;# 
  2176  0EA3                     	;# 
  2177  0EA4                     	;# 
  2178  0EA5                     	;# 
  2179  0EA9                     	;# 
  2180  0EAA                     	;# 
  2181  0EAB                     	;# 
  2182  0EAC                     	;# 
  2183  0EB1                     	;# 
  2184  0EB2                     	;# 
  2185  0EB3                     	;# 
  2186  0EB8                     	;# 
  2187  0EB9                     	;# 
  2188  0EBA                     	;# 
  2189  0EBB                     	;# 
  2190  0EBC                     	;# 
  2191  0EBD                     	;# 
  2192  0EBE                     	;# 
  2193  0EC3                     	;# 
  2194  0EC5                     	;# 
  2195  0EC6                     	;# 
  2196  0EC7                     	;# 
  2197  0EC8                     	;# 
  2198  0EC9                     	;# 
  2199  0ECA                     	;# 
  2200  0ECB                     	;# 
  2201  0ECC                     	;# 
  2202  0F10                     	;# 
  2203  0F11                     	;# 
  2204  0F12                     	;# 
  2205  0F13                     	;# 
  2206  0F14                     	;# 
  2207  0F15                     	;# 
  2208  0F16                     	;# 
  2209  0F17                     	;# 
  2210  0F18                     	;# 
  2211  0F19                     	;# 
  2212  0F1A                     	;# 
  2213  0F1B                     	;# 
  2214  0F1C                     	;# 
  2215  0F1D                     	;# 
  2216  0F1E                     	;# 
  2217  0F1F                     	;# 
  2218  0F20                     	;# 
  2219  0F21                     	;# 
  2220  0F22                     	;# 
  2221  0F23                     	;# 
  2222  0F24                     	;# 
  2223  0F25                     	;# 
  2224  0F26                     	;# 
  2225  0F27                     	;# 
  2226  0F28                     	;# 
  2227  0F29                     	;# 
  2228  0F2A                     	;# 
  2229  0F2B                     	;# 
  2230  0F2C                     	;# 
  2231  0F2D                     	;# 
  2232  0F2E                     	;# 
  2233  0F2F                     	;# 
  2234  0F30                     	;# 
  2235  0F31                     	;# 
  2236  0F32                     	;# 
  2237  0F38                     	;# 
  2238  0F39                     	;# 
  2239  0F3A                     	;# 
  2240  0F3B                     	;# 
  2241  0F3C                     	;# 
  2242  0F3D                     	;# 
  2243  0F3E                     	;# 
  2244  0F3F                     	;# 
  2245  0F40                     	;# 
  2246  0F41                     	;# 
  2247  0F43                     	;# 
  2248  0F44                     	;# 
  2249  0F45                     	;# 
  2250  0F46                     	;# 
  2251  0F47                     	;# 
  2252  0F48                     	;# 
  2253  0F49                     	;# 
  2254  0F4A                     	;# 
  2255  0F4B                     	;# 
  2256  0F4C                     	;# 
  2257  0F4E                     	;# 
  2258  0F4F                     	;# 
  2259  0F50                     	;# 
  2260  0F51                     	;# 
  2261  0F52                     	;# 
  2262  0F53                     	;# 
  2263  0F54                     	;# 
  2264  0F55                     	;# 
  2265  0F56                     	;# 
  2266  0F57                     	;# 
  2267  0F59                     	;# 
  2268  0F5A                     	;# 
  2269  0F5B                     	;# 
  2270  0F5C                     	;# 
  2271  0F5D                     	;# 
  2272  0F61                     	;# 
  2273  0F62                     	;# 
  2274  0F64                     	;# 
  2275  0F65                     	;# 
  2276  0F66                     	;# 
  2277  0F67                     	;# 
  2278  0F68                     	;# 
  2279  0F69                     	;# 
  2280  0F6A                     	;# 
  2281  0F6B                     	;# 
  2282  0F6C                     	;# 
  2283  0F6D                     	;# 
  2284  0FE4                     	;# 
  2285  0FE5                     	;# 
  2286  0FE6                     	;# 
  2287  0FE7                     	;# 
  2288  0FE8                     	;# 
  2289  0FE9                     	;# 
  2290  0FEA                     	;# 
  2291  0FEB                     	;# 
  2292  0FED                     	;# 
  2293  0FEE                     	;# 
  2294  0FEF                     	;# 
  2295  0000                     	;# 
  2296  0001                     	;# 
  2297  0002                     	;# 
  2298  0003                     	;# 
  2299  0004                     	;# 
  2300  0005                     	;# 
  2301  0006                     	;# 
  2302  0007                     	;# 
  2303  0008                     	;# 
  2304  0009                     	;# 
  2305  000A                     	;# 
  2306  000B                     	;# 
  2307  000C                     	;# 
  2308  000D                     	;# 
  2309  000E                     	;# 
  2310  000F                     	;# 
  2311  0010                     	;# 
  2312  0011                     	;# 
  2313  0012                     	;# 
  2314  0013                     	;# 
  2315  0014                     	;# 
  2316  0015                     	;# 
  2317  0016                     	;# 
  2318  0017                     	;# 
  2319  0018                     	;# 
  2320  0019                     	;# 
  2321  001A                     	;# 
  2322  001C                     	;# 
  2323  001C                     	;# 
  2324  001D                     	;# 
  2325  001D                     	;# 
  2326  001E                     	;# 
  2327  001F                     	;# 
  2328  008C                     	;# 
  2329  008C                     	;# 
  2330  008D                     	;# 
  2331  008E                     	;# 
  2332  008E                     	;# 
  2333  008F                     	;# 
  2334  0090                     	;# 
  2335  0090                     	;# 
  2336  0091                     	;# 
  2337  0093                     	;# 
  2338  0094                     	;# 
  2339  0095                     	;# 
  2340  0096                     	;# 
  2341  0097                     	;# 
  2342  0098                     	;# 
  2343  0099                     	;# 
  2344  009A                     	;# 
  2345  009B                     	;# 
  2346  009C                     	;# 
  2347  009D                     	;# 
  2348  009E                     	;# 
  2349  010C                     	;# 
  2350  010D                     	;# 
  2351  010E                     	;# 
  2352  010E                     	;# 
  2353  010F                     	;# 
  2354  0110                     	;# 
  2355  0110                     	;# 
  2356  0111                     	;# 
  2357  0112                     	;# 
  2358  0112                     	;# 
  2359  0113                     	;# 
  2360  0114                     	;# 
  2361  0114                     	;# 
  2362  0115                     	;# 
  2363  0116                     	;# 
  2364  0116                     	;# 
  2365  0117                     	;# 
  2366  0119                     	;# 
  2367  0119                     	;# 
  2368  0119                     	;# 
  2369  011A                     	;# 
  2370  011A                     	;# 
  2371  011A                     	;# 
  2372  011B                     	;# 
  2373  011B                     	;# 
  2374  011B                     	;# 
  2375  011B                     	;# 
  2376  011B                     	;# 
  2377  011C                     	;# 
  2378  011C                     	;# 
  2379  011C                     	;# 
  2380  011D                     	;# 
  2381  011D                     	;# 
  2382  011D                     	;# 
  2383  011E                     	;# 
  2384  011E                     	;# 
  2385  011E                     	;# 
  2386  011F                     	;# 
  2387  011F                     	;# 
  2388  011F                     	;# 
  2389  011F                     	;# 
  2390  011F                     	;# 
  2391  018C                     	;# 
  2392  018D                     	;# 
  2393  018E                     	;# 
  2394  018F                     	;# 
  2395  0190                     	;# 
  2396  0191                     	;# 
  2397  0192                     	;# 
  2398  0196                     	;# 
  2399  0197                     	;# 
  2400  0198                     	;# 
  2401  0199                     	;# 
  2402  019A                     	;# 
  2403  019B                     	;# 
  2404  019C                     	;# 
  2405  020C                     	;# 
  2406  020C                     	;# 
  2407  020D                     	;# 
  2408  020E                     	;# 
  2409  020F                     	;# 
  2410  020F                     	;# 
  2411  0210                     	;# 
  2412  0210                     	;# 
  2413  0211                     	;# 
  2414  0211                     	;# 
  2415  0212                     	;# 
  2416  0212                     	;# 
  2417  0213                     	;# 
  2418  0214                     	;# 
  2419  0215                     	;# 
  2420  0215                     	;# 
  2421  0216                     	;# 
  2422  0216                     	;# 
  2423  0217                     	;# 
  2424  0217                     	;# 
  2425  0218                     	;# 
  2426  0218                     	;# 
  2427  0219                     	;# 
  2428  021A                     	;# 
  2429  021B                     	;# 
  2430  021B                     	;# 
  2431  021C                     	;# 
  2432  021C                     	;# 
  2433  021D                     	;# 
  2434  021D                     	;# 
  2435  021E                     	;# 
  2436  021F                     	;# 
  2437  028C                     	;# 
  2438  028C                     	;# 
  2439  028D                     	;# 
  2440  028D                     	;# 
  2441  028E                     	;# 
  2442  028F                     	;# 
  2443  0290                     	;# 
  2444  0290                     	;# 
  2445  0291                     	;# 
  2446  0292                     	;# 
  2447  0292                     	;# 
  2448  0293                     	;# 
  2449  0293                     	;# 
  2450  0294                     	;# 
  2451  0295                     	;# 
  2452  0296                     	;# 
  2453  0296                     	;# 
  2454  0297                     	;# 
  2455  0298                     	;# 
  2456  0298                     	;# 
  2457  0299                     	;# 
  2458  0299                     	;# 
  2459  029A                     	;# 
  2460  029B                     	;# 
  2461  029C                     	;# 
  2462  029C                     	;# 
  2463  029D                     	;# 
  2464  030C                     	;# 
  2465  030C                     	;# 
  2466  030D                     	;# 
  2467  030E                     	;# 
  2468  030F                     	;# 
  2469  0310                     	;# 
  2470  0310                     	;# 
  2471  0311                     	;# 
  2472  0312                     	;# 
  2473  0313                     	;# 
  2474  0314                     	;# 
  2475  0314                     	;# 
  2476  0315                     	;# 
  2477  0316                     	;# 
  2478  0317                     	;# 
  2479  0318                     	;# 
  2480  0318                     	;# 
  2481  0319                     	;# 
  2482  031A                     	;# 
  2483  031B                     	;# 
  2484  031C                     	;# 
  2485  031C                     	;# 
  2486  031D                     	;# 
  2487  031E                     	;# 
  2488  031F                     	;# 
  2489  038C                     	;# 
  2490  038C                     	;# 
  2491  038D                     	;# 
  2492  038E                     	;# 
  2493  0390                     	;# 
  2494  0390                     	;# 
  2495  0391                     	;# 
  2496  0392                     	;# 
  2497  040C                     	;# 
  2498  040D                     	;# 
  2499  040E                     	;# 
  2500  040F                     	;# 
  2501  0410                     	;# 
  2502  0411                     	;# 
  2503  0416                     	;# 
  2504  0416                     	;# 
  2505  0417                     	;# 
  2506  0418                     	;# 
  2507  0418                     	;# 
  2508  0419                     	;# 
  2509  041A                     	;# 
  2510  041A                     	;# 
  2511  041B                     	;# 
  2512  041C                     	;# 
  2513  041C                     	;# 
  2514  041D                     	;# 
  2515  041E                     	;# 
  2516  041F                     	;# 
  2517  048C                     	;# 
  2518  048C                     	;# 
  2519  048D                     	;# 
  2520  048E                     	;# 
  2521  048F                     	;# 
  2522  048F                     	;# 
  2523  0490                     	;# 
  2524  0491                     	;# 
  2525  0492                     	;# 
  2526  0492                     	;# 
  2527  0493                     	;# 
  2528  0494                     	;# 
  2529  0495                     	;# 
  2530  0495                     	;# 
  2531  0496                     	;# 
  2532  0497                     	;# 
  2533  0498                     	;# 
  2534  0499                     	;# 
  2535  049A                     	;# 
  2536  049B                     	;# 
  2537  049C                     	;# 
  2538  049D                     	;# 
  2539  050C                     	;# 
  2540  050C                     	;# 
  2541  050D                     	;# 
  2542  050E                     	;# 
  2543  050F                     	;# 
  2544  050F                     	;# 
  2545  0510                     	;# 
  2546  0511                     	;# 
  2547  0512                     	;# 
  2548  0512                     	;# 
  2549  0513                     	;# 
  2550  0514                     	;# 
  2551  0515                     	;# 
  2552  0515                     	;# 
  2553  0516                     	;# 
  2554  0517                     	;# 
  2555  0518                     	;# 
  2556  0519                     	;# 
  2557  051A                     	;# 
  2558  051B                     	;# 
  2559  051C                     	;# 
  2560  051D                     	;# 
  2561  058C                     	;# 
  2562  058C                     	;# 
  2563  058D                     	;# 
  2564  058E                     	;# 
  2565  058F                     	;# 
  2566  058F                     	;# 
  2567  0590                     	;# 
  2568  0591                     	;# 
  2569  0592                     	;# 
  2570  0593                     	;# 
  2571  060C                     	;# 
  2572  060D                     	;# 
  2573  060E                     	;# 
  2574  060F                     	;# 
  2575  0610                     	;# 
  2576  0611                     	;# 
  2577  0612                     	;# 
  2578  0613                     	;# 
  2579  0614                     	;# 
  2580  0616                     	;# 
  2581  0617                     	;# 
  2582  0618                     	;# 
  2583  0619                     	;# 
  2584  061A                     	;# 
  2585  061B                     	;# 
  2586  061C                     	;# 
  2587  061D                     	;# 
  2588  061E                     	;# 
  2589  068C                     	;# 
  2590  068D                     	;# 
  2591  068E                     	;# 
  2592  068F                     	;# 
  2593  0690                     	;# 
  2594  0691                     	;# 
  2595  0692                     	;# 
  2596  0693                     	;# 
  2597  0694                     	;# 
  2598  070C                     	;# 
  2599  070D                     	;# 
  2600  070E                     	;# 
  2601  070F                     	;# 
  2602  0710                     	;# 
  2603  0711                     	;# 
  2604  0712                     	;# 
  2605  0713                     	;# 
  2606  0714                     	;# 
  2607  0716                     	;# 
  2608  0717                     	;# 
  2609  0718                     	;# 
  2610  0719                     	;# 
  2611  071A                     	;# 
  2612  071B                     	;# 
  2613  071C                     	;# 
  2614  071D                     	;# 
  2615  071E                     	;# 
  2616  0796                     	;# 
  2617  0797                     	;# 
  2618  0798                     	;# 
  2619  0799                     	;# 
  2620  079A                     	;# 
  2621  079B                     	;# 
  2622  080C                     	;# 
  2623  080D                     	;# 
  2624  080E                     	;# 
  2625  080F                     	;# 
  2626  0810                     	;# 
  2627  0811                     	;# 
  2628  0812                     	;# 
  2629  0813                     	;# 
  2630  0814                     	;# 
  2631  081A                     	;# 
  2632  081B                     	;# 
  2633  081C                     	;# 
  2634  081D                     	;# 
  2635  081E                     	;# 
  2636  081F                     	;# 
  2637  088C                     	;# 
  2638  088D                     	;# 
  2639  088E                     	;# 
  2640  088F                     	;# 
  2641  0890                     	;# 
  2642  0891                     	;# 
  2643  0892                     	;# 
  2644  0893                     	;# 
  2645  0895                     	;# 
  2646  0896                     	;# 
  2647  0897                     	;# 
  2648  0898                     	;# 
  2649  0899                     	;# 
  2650  089A                     	;# 
  2651  089B                     	;# 
  2652  090C                     	;# 
  2653  090E                     	;# 
  2654  090F                     	;# 
  2655  091F                     	;# 
  2656  091F                     	;# 
  2657  098F                     	;# 
  2658  098F                     	;# 
  2659  0990                     	;# 
  2660  0991                     	;# 
  2661  0992                     	;# 
  2662  0993                     	;# 
  2663  0994                     	;# 
  2664  0995                     	;# 
  2665  0996                     	;# 
  2666  0997                     	;# 
  2667  0E0F                     	;# 
  2668  0E10                     	;# 
  2669  0E11                     	;# 
  2670  0E12                     	;# 
  2671  0E13                     	;# 
  2672  0E14                     	;# 
  2673  0E15                     	;# 
  2674  0E16                     	;# 
  2675  0E17                     	;# 
  2676  0E18                     	;# 
  2677  0E19                     	;# 
  2678  0E1A                     	;# 
  2679  0E1B                     	;# 
  2680  0E1C                     	;# 
  2681  0E1D                     	;# 
  2682  0E1E                     	;# 
  2683  0E1F                     	;# 
  2684  0E20                     	;# 
  2685  0E21                     	;# 
  2686  0E22                     	;# 
  2687  0E23                     	;# 
  2688  0E24                     	;# 
  2689  0E25                     	;# 
  2690  0E26                     	;# 
  2691  0E27                     	;# 
  2692  0E28                     	;# 
  2693  0E29                     	;# 
  2694  0E2A                     	;# 
  2695  0E2B                     	;# 
  2696  0E2C                     	;# 
  2697  0E2D                     	;# 
  2698  0E2E                     	;# 
  2699  0E2F                     	;# 
  2700  0E30                     	;# 
  2701  0E31                     	;# 
  2702  0E32                     	;# 
  2703  0E33                     	;# 
  2704  0E34                     	;# 
  2705  0E35                     	;# 
  2706  0E36                     	;# 
  2707  0E37                     	;# 
  2708  0E8F                     	;# 
  2709  0E90                     	;# 
  2710  0E91                     	;# 
  2711  0E92                     	;# 
  2712  0E93                     	;# 
  2713  0E94                     	;# 
  2714  0E95                     	;# 
  2715  0E96                     	;# 
  2716  0E97                     	;# 
  2717  0E9C                     	;# 
  2718  0E9D                     	;# 
  2719  0E9E                     	;# 
  2720  0EA1                     	;# 
  2721  0EA2                     	;# 
  2722  0EA3                     	;# 
  2723  0EA4                     	;# 
  2724  0EA5                     	;# 
  2725  0EA9                     	;# 
  2726  0EAA                     	;# 
  2727  0EAB                     	;# 
  2728  0EAC                     	;# 
  2729  0EB1                     	;# 
  2730  0EB2                     	;# 
  2731  0EB3                     	;# 
  2732  0EB8                     	;# 
  2733  0EB9                     	;# 
  2734  0EBA                     	;# 
  2735  0EBB                     	;# 
  2736  0EBC                     	;# 
  2737  0EBD                     	;# 
  2738  0EBE                     	;# 
  2739  0EC3                     	;# 
  2740  0EC5                     	;# 
  2741  0EC6                     	;# 
  2742  0EC7                     	;# 
  2743  0EC8                     	;# 
  2744  0EC9                     	;# 
  2745  0ECA                     	;# 
  2746  0ECB                     	;# 
  2747  0ECC                     	;# 
  2748  0F10                     	;# 
  2749  0F11                     	;# 
  2750  0F12                     	;# 
  2751  0F13                     	;# 
  2752  0F14                     	;# 
  2753  0F15                     	;# 
  2754  0F16                     	;# 
  2755  0F17                     	;# 
  2756  0F18                     	;# 
  2757  0F19                     	;# 
  2758  0F1A                     	;# 
  2759  0F1B                     	;# 
  2760  0F1C                     	;# 
  2761  0F1D                     	;# 
  2762  0F1E                     	;# 
  2763  0F1F                     	;# 
  2764  0F20                     	;# 
  2765  0F21                     	;# 
  2766  0F22                     	;# 
  2767  0F23                     	;# 
  2768  0F24                     	;# 
  2769  0F25                     	;# 
  2770  0F26                     	;# 
  2771  0F27                     	;# 
  2772  0F28                     	;# 
  2773  0F29                     	;# 
  2774  0F2A                     	;# 
  2775  0F2B                     	;# 
  2776  0F2C                     	;# 
  2777  0F2D                     	;# 
  2778  0F2E                     	;# 
  2779  0F2F                     	;# 
  2780  0F30                     	;# 
  2781  0F31                     	;# 
  2782  0F32                     	;# 
  2783  0F38                     	;# 
  2784  0F39                     	;# 
  2785  0F3A                     	;# 
  2786  0F3B                     	;# 
  2787  0F3C                     	;# 
  2788  0F3D                     	;# 
  2789  0F3E                     	;# 
  2790  0F3F                     	;# 
  2791  0F40                     	;# 
  2792  0F41                     	;# 
  2793  0F43                     	;# 
  2794  0F44                     	;# 
  2795  0F45                     	;# 
  2796  0F46                     	;# 
  2797  0F47                     	;# 
  2798  0F48                     	;# 
  2799  0F49                     	;# 
  2800  0F4A                     	;# 
  2801  0F4B                     	;# 
  2802  0F4C                     	;# 
  2803  0F4E                     	;# 
  2804  0F4F                     	;# 
  2805  0F50                     	;# 
  2806  0F51                     	;# 
  2807  0F52                     	;# 
  2808  0F53                     	;# 
  2809  0F54                     	;# 
  2810  0F55                     	;# 
  2811  0F56                     	;# 
  2812  0F57                     	;# 
  2813  0F59                     	;# 
  2814  0F5A                     	;# 
  2815  0F5B                     	;# 
  2816  0F5C                     	;# 
  2817  0F5D                     	;# 
  2818  0F61                     	;# 
  2819  0F62                     	;# 
  2820  0F64                     	;# 
  2821  0F65                     	;# 
  2822  0F66                     	;# 
  2823  0F67                     	;# 
  2824  0F68                     	;# 
  2825  0F69                     	;# 
  2826  0F6A                     	;# 
  2827  0F6B                     	;# 
  2828  0F6C                     	;# 
  2829  0F6D                     	;# 
  2830  0FE4                     	;# 
  2831  0FE5                     	;# 
  2832  0FE6                     	;# 
  2833  0FE7                     	;# 
  2834  0FE8                     	;# 
  2835  0FE9                     	;# 
  2836  0FEA                     	;# 
  2837  0FEB                     	;# 
  2838  0FED                     	;# 
  2839  0FEE                     	;# 
  2840  0FEF                     	;# 
  2841  0000                     	;# 
  2842  0001                     	;# 
  2843  0002                     	;# 
  2844  0003                     	;# 
  2845  0004                     	;# 
  2846  0005                     	;# 
  2847  0006                     	;# 
  2848  0007                     	;# 
  2849  0008                     	;# 
  2850  0009                     	;# 
  2851  000A                     	;# 
  2852  000B                     	;# 
  2853  000C                     	;# 
  2854  000D                     	;# 
  2855  000E                     	;# 
  2856  000F                     	;# 
  2857  0010                     	;# 
  2858  0011                     	;# 
  2859  0012                     	;# 
  2860  0013                     	;# 
  2861  0014                     	;# 
  2862  0015                     	;# 
  2863  0016                     	;# 
  2864  0017                     	;# 
  2865  0018                     	;# 
  2866  0019                     	;# 
  2867  001A                     	;# 
  2868  001C                     	;# 
  2869  001C                     	;# 
  2870  001D                     	;# 
  2871  001D                     	;# 
  2872  001E                     	;# 
  2873  001F                     	;# 
  2874  008C                     	;# 
  2875  008C                     	;# 
  2876  008D                     	;# 
  2877  008E                     	;# 
  2878  008E                     	;# 
  2879  008F                     	;# 
  2880  0090                     	;# 
  2881  0090                     	;# 
  2882  0091                     	;# 
  2883  0093                     	;# 
  2884  0094                     	;# 
  2885  0095                     	;# 
  2886  0096                     	;# 
  2887  0097                     	;# 
  2888  0098                     	;# 
  2889  0099                     	;# 
  2890  009A                     	;# 
  2891  009B                     	;# 
  2892  009C                     	;# 
  2893  009D                     	;# 
  2894  009E                     	;# 
  2895  010C                     	;# 
  2896  010D                     	;# 
  2897  010E                     	;# 
  2898  010E                     	;# 
  2899  010F                     	;# 
  2900  0110                     	;# 
  2901  0110                     	;# 
  2902  0111                     	;# 
  2903  0112                     	;# 
  2904  0112                     	;# 
  2905  0113                     	;# 
  2906  0114                     	;# 
  2907  0114                     	;# 
  2908  0115                     	;# 
  2909  0116                     	;# 
  2910  0116                     	;# 
  2911  0117                     	;# 
  2912  0119                     	;# 
  2913  0119                     	;# 
  2914  0119                     	;# 
  2915  011A                     	;# 
  2916  011A                     	;# 
  2917  011A                     	;# 
  2918  011B                     	;# 
  2919  011B                     	;# 
  2920  011B                     	;# 
  2921  011B                     	;# 
  2922  011B                     	;# 
  2923  011C                     	;# 
  2924  011C                     	;# 
  2925  011C                     	;# 
  2926  011D                     	;# 
  2927  011D                     	;# 
  2928  011D                     	;# 
  2929  011E                     	;# 
  2930  011E                     	;# 
  2931  011E                     	;# 
  2932  011F                     	;# 
  2933  011F                     	;# 
  2934  011F                     	;# 
  2935  011F                     	;# 
  2936  011F                     	;# 
  2937  018C                     	;# 
  2938  018D                     	;# 
  2939  018E                     	;# 
  2940  018F                     	;# 
  2941  0190                     	;# 
  2942  0191                     	;# 
  2943  0192                     	;# 
  2944  0196                     	;# 
  2945  0197                     	;# 
  2946  0198                     	;# 
  2947  0199                     	;# 
  2948  019A                     	;# 
  2949  019B                     	;# 
  2950  019C                     	;# 
  2951  020C                     	;# 
  2952  020C                     	;# 
  2953  020D                     	;# 
  2954  020E                     	;# 
  2955  020F                     	;# 
  2956  020F                     	;# 
  2957  0210                     	;# 
  2958  0210                     	;# 
  2959  0211                     	;# 
  2960  0211                     	;# 
  2961  0212                     	;# 
  2962  0212                     	;# 
  2963  0213                     	;# 
  2964  0214                     	;# 
  2965  0215                     	;# 
  2966  0215                     	;# 
  2967  0216                     	;# 
  2968  0216                     	;# 
  2969  0217                     	;# 
  2970  0217                     	;# 
  2971  0218                     	;# 
  2972  0218                     	;# 
  2973  0219                     	;# 
  2974  021A                     	;# 
  2975  021B                     	;# 
  2976  021B                     	;# 
  2977  021C                     	;# 
  2978  021C                     	;# 
  2979  021D                     	;# 
  2980  021D                     	;# 
  2981  021E                     	;# 
  2982  021F                     	;# 
  2983  028C                     	;# 
  2984  028C                     	;# 
  2985  028D                     	;# 
  2986  028D                     	;# 
  2987  028E                     	;# 
  2988  028F                     	;# 
  2989  0290                     	;# 
  2990  0290                     	;# 
  2991  0291                     	;# 
  2992  0292                     	;# 
  2993  0292                     	;# 
  2994  0293                     	;# 
  2995  0293                     	;# 
  2996  0294                     	;# 
  2997  0295                     	;# 
  2998  0296                     	;# 
  2999  0296                     	;# 
  3000  0297                     	;# 
  3001  0298                     	;# 
  3002  0298                     	;# 
  3003  0299                     	;# 
  3004  0299                     	;# 
  3005  029A                     	;# 
  3006  029B                     	;# 
  3007  029C                     	;# 
  3008  029C                     	;# 
  3009  029D                     	;# 
  3010  030C                     	;# 
  3011  030C                     	;# 
  3012  030D                     	;# 
  3013  030E                     	;# 
  3014  030F                     	;# 
  3015  0310                     	;# 
  3016  0310                     	;# 
  3017  0311                     	;# 
  3018  0312                     	;# 
  3019  0313                     	;# 
  3020  0314                     	;# 
  3021  0314                     	;# 
  3022  0315                     	;# 
  3023  0316                     	;# 
  3024  0317                     	;# 
  3025  0318                     	;# 
  3026  0318                     	;# 
  3027  0319                     	;# 
  3028  031A                     	;# 
  3029  031B                     	;# 
  3030  031C                     	;# 
  3031  031C                     	;# 
  3032  031D                     	;# 
  3033  031E                     	;# 
  3034  031F                     	;# 
  3035  038C                     	;# 
  3036  038C                     	;# 
  3037  038D                     	;# 
  3038  038E                     	;# 
  3039  0390                     	;# 
  3040  0390                     	;# 
  3041  0391                     	;# 
  3042  0392                     	;# 
  3043  040C                     	;# 
  3044  040D                     	;# 
  3045  040E                     	;# 
  3046  040F                     	;# 
  3047  0410                     	;# 
  3048  0411                     	;# 
  3049  0416                     	;# 
  3050  0416                     	;# 
  3051  0417                     	;# 
  3052  0418                     	;# 
  3053  0418                     	;# 
  3054  0419                     	;# 
  3055  041A                     	;# 
  3056  041A                     	;# 
  3057  041B                     	;# 
  3058  041C                     	;# 
  3059  041C                     	;# 
  3060  041D                     	;# 
  3061  041E                     	;# 
  3062  041F                     	;# 
  3063  048C                     	;# 
  3064  048C                     	;# 
  3065  048D                     	;# 
  3066  048E                     	;# 
  3067  048F                     	;# 
  3068  048F                     	;# 
  3069  0490                     	;# 
  3070  0491                     	;# 
  3071  0492                     	;# 
  3072  0492                     	;# 
  3073  0493                     	;# 
  3074  0494                     	;# 
  3075  0495                     	;# 
  3076  0495                     	;# 
  3077  0496                     	;# 
  3078  0497                     	;# 
  3079  0498                     	;# 
  3080  0499                     	;# 
  3081  049A                     	;# 
  3082  049B                     	;# 
  3083  049C                     	;# 
  3084  049D                     	;# 
  3085  050C                     	;# 
  3086  050C                     	;# 
  3087  050D                     	;# 
  3088  050E                     	;# 
  3089  050F                     	;# 
  3090  050F                     	;# 
  3091  0510                     	;# 
  3092  0511                     	;# 
  3093  0512                     	;# 
  3094  0512                     	;# 
  3095  0513                     	;# 
  3096  0514                     	;# 
  3097  0515                     	;# 
  3098  0515                     	;# 
  3099  0516                     	;# 
  3100  0517                     	;# 
  3101  0518                     	;# 
  3102  0519                     	;# 
  3103  051A                     	;# 
  3104  051B                     	;# 
  3105  051C                     	;# 
  3106  051D                     	;# 
  3107  058C                     	;# 
  3108  058C                     	;# 
  3109  058D                     	;# 
  3110  058E                     	;# 
  3111  058F                     	;# 
  3112  058F                     	;# 
  3113  0590                     	;# 
  3114  0591                     	;# 
  3115  0592                     	;# 
  3116  0593                     	;# 
  3117  060C                     	;# 
  3118  060D                     	;# 
  3119  060E                     	;# 
  3120  060F                     	;# 
  3121  0610                     	;# 
  3122  0611                     	;# 
  3123  0612                     	;# 
  3124  0613                     	;# 
  3125  0614                     	;# 
  3126  0616                     	;# 
  3127  0617                     	;# 
  3128  0618                     	;# 
  3129  0619                     	;# 
  3130  061A                     	;# 
  3131  061B                     	;# 
  3132  061C                     	;# 
  3133  061D                     	;# 
  3134  061E                     	;# 
  3135  068C                     	;# 
  3136  068D                     	;# 
  3137  068E                     	;# 
  3138  068F                     	;# 
  3139  0690                     	;# 
  3140  0691                     	;# 
  3141  0692                     	;# 
  3142  0693                     	;# 
  3143  0694                     	;# 
  3144  070C                     	;# 
  3145  070D                     	;# 
  3146  070E                     	;# 
  3147  070F                     	;# 
  3148  0710                     	;# 
  3149  0711                     	;# 
  3150  0712                     	;# 
  3151  0713                     	;# 
  3152  0714                     	;# 
  3153  0716                     	;# 
  3154  0717                     	;# 
  3155  0718                     	;# 
  3156  0719                     	;# 
  3157  071A                     	;# 
  3158  071B                     	;# 
  3159  071C                     	;# 
  3160  071D                     	;# 
  3161  071E                     	;# 
  3162  0796                     	;# 
  3163  0797                     	;# 
  3164  0798                     	;# 
  3165  0799                     	;# 
  3166  079A                     	;# 
  3167  079B                     	;# 
  3168  080C                     	;# 
  3169  080D                     	;# 
  3170  080E                     	;# 
  3171  080F                     	;# 
  3172  0810                     	;# 
  3173  0811                     	;# 
  3174  0812                     	;# 
  3175  0813                     	;# 
  3176  0814                     	;# 
  3177  081A                     	;# 
  3178  081B                     	;# 
  3179  081C                     	;# 
  3180  081D                     	;# 
  3181  081E                     	;# 
  3182  081F                     	;# 
  3183  088C                     	;# 
  3184  088D                     	;# 
  3185  088E                     	;# 
  3186  088F                     	;# 
  3187  0890                     	;# 
  3188  0891                     	;# 
  3189  0892                     	;# 
  3190  0893                     	;# 
  3191  0895                     	;# 
  3192  0896                     	;# 
  3193  0897                     	;# 
  3194  0898                     	;# 
  3195  0899                     	;# 
  3196  089A                     	;# 
  3197  089B                     	;# 
  3198  090C                     	;# 
  3199  090E                     	;# 
  3200  090F                     	;# 
  3201  091F                     	;# 
  3202  091F                     	;# 
  3203  098F                     	;# 
  3204  098F                     	;# 
  3205  0990                     	;# 
  3206  0991                     	;# 
  3207  0992                     	;# 
  3208  0993                     	;# 
  3209  0994                     	;# 
  3210  0995                     	;# 
  3211  0996                     	;# 
  3212  0997                     	;# 
  3213  0E0F                     	;# 
  3214  0E10                     	;# 
  3215  0E11                     	;# 
  3216  0E12                     	;# 
  3217  0E13                     	;# 
  3218  0E14                     	;# 
  3219  0E15                     	;# 
  3220  0E16                     	;# 
  3221  0E17                     	;# 
  3222  0E18                     	;# 
  3223  0E19                     	;# 
  3224  0E1A                     	;# 
  3225  0E1B                     	;# 
  3226  0E1C                     	;# 
  3227  0E1D                     	;# 
  3228  0E1E                     	;# 
  3229  0E1F                     	;# 
  3230  0E20                     	;# 
  3231  0E21                     	;# 
  3232  0E22                     	;# 
  3233  0E23                     	;# 
  3234  0E24                     	;# 
  3235  0E25                     	;# 
  3236  0E26                     	;# 
  3237  0E27                     	;# 
  3238  0E28                     	;# 
  3239  0E29                     	;# 
  3240  0E2A                     	;# 
  3241  0E2B                     	;# 
  3242  0E2C                     	;# 
  3243  0E2D                     	;# 
  3244  0E2E                     	;# 
  3245  0E2F                     	;# 
  3246  0E30                     	;# 
  3247  0E31                     	;# 
  3248  0E32                     	;# 
  3249  0E33                     	;# 
  3250  0E34                     	;# 
  3251  0E35                     	;# 
  3252  0E36                     	;# 
  3253  0E37                     	;# 
  3254  0E8F                     	;# 
  3255  0E90                     	;# 
  3256  0E91                     	;# 
  3257  0E92                     	;# 
  3258  0E93                     	;# 
  3259  0E94                     	;# 
  3260  0E95                     	;# 
  3261  0E96                     	;# 
  3262  0E97                     	;# 
  3263  0E9C                     	;# 
  3264  0E9D                     	;# 
  3265  0E9E                     	;# 
  3266  0EA1                     	;# 
  3267  0EA2                     	;# 
  3268  0EA3                     	;# 
  3269  0EA4                     	;# 
  3270  0EA5                     	;# 
  3271  0EA9                     	;# 
  3272  0EAA                     	;# 
  3273  0EAB                     	;# 
  3274  0EAC                     	;# 
  3275  0EB1                     	;# 
  3276  0EB2                     	;# 
  3277  0EB3                     	;# 
  3278  0EB8                     	;# 
  3279  0EB9                     	;# 
  3280  0EBA                     	;# 
  3281  0EBB                     	;# 
  3282  0EBC                     	;# 
  3283  0EBD                     	;# 
  3284  0EBE                     	;# 
  3285  0EC3                     	;# 
  3286  0EC5                     	;# 
  3287  0EC6                     	;# 
  3288  0EC7                     	;# 
  3289  0EC8                     	;# 
  3290  0EC9                     	;# 
  3291  0ECA                     	;# 
  3292  0ECB                     	;# 
  3293  0ECC                     	;# 
  3294  0F10                     	;# 
  3295  0F11                     	;# 
  3296  0F12                     	;# 
  3297  0F13                     	;# 
  3298  0F14                     	;# 
  3299  0F15                     	;# 
  3300  0F16                     	;# 
  3301  0F17                     	;# 
  3302  0F18                     	;# 
  3303  0F19                     	;# 
  3304  0F1A                     	;# 
  3305  0F1B                     	;# 
  3306  0F1C                     	;# 
  3307  0F1D                     	;# 
  3308  0F1E                     	;# 
  3309  0F1F                     	;# 
  3310  0F20                     	;# 
  3311  0F21                     	;# 
  3312  0F22                     	;# 
  3313  0F23                     	;# 
  3314  0F24                     	;# 
  3315  0F25                     	;# 
  3316  0F26                     	;# 
  3317  0F27                     	;# 
  3318  0F28                     	;# 
  3319  0F29                     	;# 
  3320  0F2A                     	;# 
  3321  0F2B                     	;# 
  3322  0F2C                     	;# 
  3323  0F2D                     	;# 
  3324  0F2E                     	;# 
  3325  0F2F                     	;# 
  3326  0F30                     	;# 
  3327  0F31                     	;# 
  3328  0F32                     	;# 
  3329  0F38                     	;# 
  3330  0F39                     	;# 
  3331  0F3A                     	;# 
  3332  0F3B                     	;# 
  3333  0F3C                     	;# 
  3334  0F3D                     	;# 
  3335  0F3E                     	;# 
  3336  0F3F                     	;# 
  3337  0F40                     	;# 
  3338  0F41                     	;# 
  3339  0F43                     	;# 
  3340  0F44                     	;# 
  3341  0F45                     	;# 
  3342  0F46                     	;# 
  3343  0F47                     	;# 
  3344  0F48                     	;# 
  3345  0F49                     	;# 
  3346  0F4A                     	;# 
  3347  0F4B                     	;# 
  3348  0F4C                     	;# 
  3349  0F4E                     	;# 
  3350  0F4F                     	;# 
  3351  0F50                     	;# 
  3352  0F51                     	;# 
  3353  0F52                     	;# 
  3354  0F53                     	;# 
  3355  0F54                     	;# 
  3356  0F55                     	;# 
  3357  0F56                     	;# 
  3358  0F57                     	;# 
  3359  0F59                     	;# 
  3360  0F5A                     	;# 
  3361  0F5B                     	;# 
  3362  0F5C                     	;# 
  3363  0F5D                     	;# 
  3364  0F61                     	;# 
  3365  0F62                     	;# 
  3366  0F64                     	;# 
  3367  0F65                     	;# 
  3368  0F66                     	;# 
  3369  0F67                     	;# 
  3370  0F68                     	;# 
  3371  0F69                     	;# 
  3372  0F6A                     	;# 
  3373  0F6B                     	;# 
  3374  0F6C                     	;# 
  3375  0F6D                     	;# 
  3376  0FE4                     	;# 
  3377  0FE5                     	;# 
  3378  0FE6                     	;# 
  3379  0FE7                     	;# 
  3380  0FE8                     	;# 
  3381  0FE9                     	;# 
  3382  0FEA                     	;# 
  3383  0FEB                     	;# 
  3384  0FED                     	;# 
  3385  0FEE                     	;# 
  3386  0FEF                     	;# 
  3387  0000                     	;# 
  3388  0001                     	;# 
  3389  0002                     	;# 
  3390  0003                     	;# 
  3391  0004                     	;# 
  3392  0005                     	;# 
  3393  0006                     	;# 
  3394  0007                     	;# 
  3395  0008                     	;# 
  3396  0009                     	;# 
  3397  000A                     	;# 
  3398  000B                     	;# 
  3399  000C                     	;# 
  3400  000D                     	;# 
  3401  000E                     	;# 
  3402  000F                     	;# 
  3403  0010                     	;# 
  3404  0011                     	;# 
  3405  0012                     	;# 
  3406  0013                     	;# 
  3407  0014                     	;# 
  3408  0015                     	;# 
  3409  0016                     	;# 
  3410  0017                     	;# 
  3411  0018                     	;# 
  3412  0019                     	;# 
  3413  001A                     	;# 
  3414  001C                     	;# 
  3415  001C                     	;# 
  3416  001D                     	;# 
  3417  001D                     	;# 
  3418  001E                     	;# 
  3419  001F                     	;# 
  3420  008C                     	;# 
  3421  008C                     	;# 
  3422  008D                     	;# 
  3423  008E                     	;# 
  3424  008E                     	;# 
  3425  008F                     	;# 
  3426  0090                     	;# 
  3427  0090                     	;# 
  3428  0091                     	;# 
  3429  0093                     	;# 
  3430  0094                     	;# 
  3431  0095                     	;# 
  3432  0096                     	;# 
  3433  0097                     	;# 
  3434  0098                     	;# 
  3435  0099                     	;# 
  3436  009A                     	;# 
  3437  009B                     	;# 
  3438  009C                     	;# 
  3439  009D                     	;# 
  3440  009E                     	;# 
  3441  010C                     	;# 
  3442  010D                     	;# 
  3443  010E                     	;# 
  3444  010E                     	;# 
  3445  010F                     	;# 
  3446  0110                     	;# 
  3447  0110                     	;# 
  3448  0111                     	;# 
  3449  0112                     	;# 
  3450  0112                     	;# 
  3451  0113                     	;# 
  3452  0114                     	;# 
  3453  0114                     	;# 
  3454  0115                     	;# 
  3455  0116                     	;# 
  3456  0116                     	;# 
  3457  0117                     	;# 
  3458  0119                     	;# 
  3459  0119                     	;# 
  3460  0119                     	;# 
  3461  011A                     	;# 
  3462  011A                     	;# 
  3463  011A                     	;# 
  3464  011B                     	;# 
  3465  011B                     	;# 
  3466  011B                     	;# 
  3467  011B                     	;# 
  3468  011B                     	;# 
  3469  011C                     	;# 
  3470  011C                     	;# 
  3471  011C                     	;# 
  3472  011D                     	;# 
  3473  011D                     	;# 
  3474  011D                     	;# 
  3475  011E                     	;# 
  3476  011E                     	;# 
  3477  011E                     	;# 
  3478  011F                     	;# 
  3479  011F                     	;# 
  3480  011F                     	;# 
  3481  011F                     	;# 
  3482  011F                     	;# 
  3483  018C                     	;# 
  3484  018D                     	;# 
  3485  018E                     	;# 
  3486  018F                     	;# 
  3487  0190                     	;# 
  3488  0191                     	;# 
  3489  0192                     	;# 
  3490  0196                     	;# 
  3491  0197                     	;# 
  3492  0198                     	;# 
  3493  0199                     	;# 
  3494  019A                     	;# 
  3495  019B                     	;# 
  3496  019C                     	;# 
  3497  020C                     	;# 
  3498  020C                     	;# 
  3499  020D                     	;# 
  3500  020E                     	;# 
  3501  020F                     	;# 
  3502  020F                     	;# 
  3503  0210                     	;# 
  3504  0210                     	;# 
  3505  0211                     	;# 
  3506  0211                     	;# 
  3507  0212                     	;# 
  3508  0212                     	;# 
  3509  0213                     	;# 
  3510  0214                     	;# 
  3511  0215                     	;# 
  3512  0215                     	;# 
  3513  0216                     	;# 
  3514  0216                     	;# 
  3515  0217                     	;# 
  3516  0217                     	;# 
  3517  0218                     	;# 
  3518  0218                     	;# 
  3519  0219                     	;# 
  3520  021A                     	;# 
  3521  021B                     	;# 
  3522  021B                     	;# 
  3523  021C                     	;# 
  3524  021C                     	;# 
  3525  021D                     	;# 
  3526  021D                     	;# 
  3527  021E                     	;# 
  3528  021F                     	;# 
  3529  028C                     	;# 
  3530  028C                     	;# 
  3531  028D                     	;# 
  3532  028D                     	;# 
  3533  028E                     	;# 
  3534  028F                     	;# 
  3535  0290                     	;# 
  3536  0290                     	;# 
  3537  0291                     	;# 
  3538  0292                     	;# 
  3539  0292                     	;# 
  3540  0293                     	;# 
  3541  0293                     	;# 
  3542  0294                     	;# 
  3543  0295                     	;# 
  3544  0296                     	;# 
  3545  0296                     	;# 
  3546  0297                     	;# 
  3547  0298                     	;# 
  3548  0298                     	;# 
  3549  0299                     	;# 
  3550  0299                     	;# 
  3551  029A                     	;# 
  3552  029B                     	;# 
  3553  029C                     	;# 
  3554  029C                     	;# 
  3555  029D                     	;# 
  3556  030C                     	;# 
  3557  030C                     	;# 
  3558  030D                     	;# 
  3559  030E                     	;# 
  3560  030F                     	;# 
  3561  0310                     	;# 
  3562  0310                     	;# 
  3563  0311                     	;# 
  3564  0312                     	;# 
  3565  0313                     	;# 
  3566  0314                     	;# 
  3567  0314                     	;# 
  3568  0315                     	;# 
  3569  0316                     	;# 
  3570  0317                     	;# 
  3571  0318                     	;# 
  3572  0318                     	;# 
  3573  0319                     	;# 
  3574  031A                     	;# 
  3575  031B                     	;# 
  3576  031C                     	;# 
  3577  031C                     	;# 
  3578  031D                     	;# 
  3579  031E                     	;# 
  3580  031F                     	;# 
  3581  038C                     	;# 
  3582  038C                     	;# 
  3583  038D                     	;# 
  3584  038E                     	;# 
  3585  0390                     	;# 
  3586  0390                     	;# 
  3587  0391                     	;# 
  3588  0392                     	;# 
  3589  040C                     	;# 
  3590  040D                     	;# 
  3591  040E                     	;# 
  3592  040F                     	;# 
  3593  0410                     	;# 
  3594  0411                     	;# 
  3595  0416                     	;# 
  3596  0416                     	;# 
  3597  0417                     	;# 
  3598  0418                     	;# 
  3599  0418                     	;# 
  3600  0419                     	;# 
  3601  041A                     	;# 
  3602  041A                     	;# 
  3603  041B                     	;# 
  3604  041C                     	;# 
  3605  041C                     	;# 
  3606  041D                     	;# 
  3607  041E                     	;# 
  3608  041F                     	;# 
  3609  048C                     	;# 
  3610  048C                     	;# 
  3611  048D                     	;# 
  3612  048E                     	;# 
  3613  048F                     	;# 
  3614  048F                     	;# 
  3615  0490                     	;# 
  3616  0491                     	;# 
  3617  0492                     	;# 
  3618  0492                     	;# 
  3619  0493                     	;# 
  3620  0494                     	;# 
  3621  0495                     	;# 
  3622  0495                     	;# 
  3623  0496                     	;# 
  3624  0497                     	;# 
  3625  0498                     	;# 
  3626  0499                     	;# 
  3627  049A                     	;# 
  3628  049B                     	;# 
  3629  049C                     	;# 
  3630  049D                     	;# 
  3631  050C                     	;# 
  3632  050C                     	;# 
  3633  050D                     	;# 
  3634  050E                     	;# 
  3635  050F                     	;# 
  3636  050F                     	;# 
  3637  0510                     	;# 
  3638  0511                     	;# 
  3639  0512                     	;# 
  3640  0512                     	;# 
  3641  0513                     	;# 
  3642  0514                     	;# 
  3643  0515                     	;# 
  3644  0515                     	;# 
  3645  0516                     	;# 
  3646  0517                     	;# 
  3647  0518                     	;# 
  3648  0519                     	;# 
  3649  051A                     	;# 
  3650  051B                     	;# 
  3651  051C                     	;# 
  3652  051D                     	;# 
  3653  058C                     	;# 
  3654  058C                     	;# 
  3655  058D                     	;# 
  3656  058E                     	;# 
  3657  058F                     	;# 
  3658  058F                     	;# 
  3659  0590                     	;# 
  3660  0591                     	;# 
  3661  0592                     	;# 
  3662  0593                     	;# 
  3663  060C                     	;# 
  3664  060D                     	;# 
  3665  060E                     	;# 
  3666  060F                     	;# 
  3667  0610                     	;# 
  3668  0611                     	;# 
  3669  0612                     	;# 
  3670  0613                     	;# 
  3671  0614                     	;# 
  3672  0616                     	;# 
  3673  0617                     	;# 
  3674  0618                     	;# 
  3675  0619                     	;# 
  3676  061A                     	;# 
  3677  061B                     	;# 
  3678  061C                     	;# 
  3679  061D                     	;# 
  3680  061E                     	;# 
  3681  068C                     	;# 
  3682  068D                     	;# 
  3683  068E                     	;# 
  3684  068F                     	;# 
  3685  0690                     	;# 
  3686  0691                     	;# 
  3687  0692                     	;# 
  3688  0693                     	;# 
  3689  0694                     	;# 
  3690  070C                     	;# 
  3691  070D                     	;# 
  3692  070E                     	;# 
  3693  070F                     	;# 
  3694  0710                     	;# 
  3695  0711                     	;# 
  3696  0712                     	;# 
  3697  0713                     	;# 
  3698  0714                     	;# 
  3699  0716                     	;# 
  3700  0717                     	;# 
  3701  0718                     	;# 
  3702  0719                     	;# 
  3703  071A                     	;# 
  3704  071B                     	;# 
  3705  071C                     	;# 
  3706  071D                     	;# 
  3707  071E                     	;# 
  3708  0796                     	;# 
  3709  0797                     	;# 
  3710  0798                     	;# 
  3711  0799                     	;# 
  3712  079A                     	;# 
  3713  079B                     	;# 
  3714  080C                     	;# 
  3715  080D                     	;# 
  3716  080E                     	;# 
  3717  080F                     	;# 
  3718  0810                     	;# 
  3719  0811                     	;# 
  3720  0812                     	;# 
  3721  0813                     	;# 
  3722  0814                     	;# 
  3723  081A                     	;# 
  3724  081B                     	;# 
  3725  081C                     	;# 
  3726  081D                     	;# 
  3727  081E                     	;# 
  3728  081F                     	;# 
  3729  088C                     	;# 
  3730  088D                     	;# 
  3731  088E                     	;# 
  3732  088F                     	;# 
  3733  0890                     	;# 
  3734  0891                     	;# 
  3735  0892                     	;# 
  3736  0893                     	;# 
  3737  0895                     	;# 
  3738  0896                     	;# 
  3739  0897                     	;# 
  3740  0898                     	;# 
  3741  0899                     	;# 
  3742  089A                     	;# 
  3743  089B                     	;# 
  3744  090C                     	;# 
  3745  090E                     	;# 
  3746  090F                     	;# 
  3747  091F                     	;# 
  3748  091F                     	;# 
  3749  098F                     	;# 
  3750  098F                     	;# 
  3751  0990                     	;# 
  3752  0991                     	;# 
  3753  0992                     	;# 
  3754  0993                     	;# 
  3755  0994                     	;# 
  3756  0995                     	;# 
  3757  0996                     	;# 
  3758  0997                     	;# 
  3759  0E0F                     	;# 
  3760  0E10                     	;# 
  3761  0E11                     	;# 
  3762  0E12                     	;# 
  3763  0E13                     	;# 
  3764  0E14                     	;# 
  3765  0E15                     	;# 
  3766  0E16                     	;# 
  3767  0E17                     	;# 
  3768  0E18                     	;# 
  3769  0E19                     	;# 
  3770  0E1A                     	;# 
  3771  0E1B                     	;# 
  3772  0E1C                     	;# 
  3773  0E1D                     	;# 
  3774  0E1E                     	;# 
  3775  0E1F                     	;# 
  3776  0E20                     	;# 
  3777  0E21                     	;# 
  3778  0E22                     	;# 
  3779  0E23                     	;# 
  3780  0E24                     	;# 
  3781  0E25                     	;# 
  3782  0E26                     	;# 
  3783  0E27                     	;# 
  3784  0E28                     	;# 
  3785  0E29                     	;# 
  3786  0E2A                     	;# 
  3787  0E2B                     	;# 
  3788  0E2C                     	;# 
  3789  0E2D                     	;# 
  3790  0E2E                     	;# 
  3791  0E2F                     	;# 
  3792  0E30                     	;# 
  3793  0E31                     	;# 
  3794  0E32                     	;# 
  3795  0E33                     	;# 
  3796  0E34                     	;# 
  3797  0E35                     	;# 
  3798  0E36                     	;# 
  3799  0E37                     	;# 
  3800  0E8F                     	;# 
  3801  0E90                     	;# 
  3802  0E91                     	;# 
  3803  0E92                     	;# 
  3804  0E93                     	;# 
  3805  0E94                     	;# 
  3806  0E95                     	;# 
  3807  0E96                     	;# 
  3808  0E97                     	;# 
  3809  0E9C                     	;# 
  3810  0E9D                     	;# 
  3811  0E9E                     	;# 
  3812  0EA1                     	;# 
  3813  0EA2                     	;# 
  3814  0EA3                     	;# 
  3815  0EA4                     	;# 
  3816  0EA5                     	;# 
  3817  0EA9                     	;# 
  3818  0EAA                     	;# 
  3819  0EAB                     	;# 
  3820  0EAC                     	;# 
  3821  0EB1                     	;# 
  3822  0EB2                     	;# 
  3823  0EB3                     	;# 
  3824  0EB8                     	;# 
  3825  0EB9                     	;# 
  3826  0EBA                     	;# 
  3827  0EBB                     	;# 
  3828  0EBC                     	;# 
  3829  0EBD                     	;# 
  3830  0EBE                     	;# 
  3831  0EC3                     	;# 
  3832  0EC5                     	;# 
  3833  0EC6                     	;# 
  3834  0EC7                     	;# 
  3835  0EC8                     	;# 
  3836  0EC9                     	;# 
  3837  0ECA                     	;# 
  3838  0ECB                     	;# 
  3839  0ECC                     	;# 
  3840  0F10                     	;# 
  3841  0F11                     	;# 
  3842  0F12                     	;# 
  3843  0F13                     	;# 
  3844  0F14                     	;# 
  3845  0F15                     	;# 
  3846  0F16                     	;# 
  3847  0F17                     	;# 
  3848  0F18                     	;# 
  3849  0F19                     	;# 
  3850  0F1A                     	;# 
  3851  0F1B                     	;# 
  3852  0F1C                     	;# 
  3853  0F1D                     	;# 
  3854  0F1E                     	;# 
  3855  0F1F                     	;# 
  3856  0F20                     	;# 
  3857  0F21                     	;# 
  3858  0F22                     	;# 
  3859  0F23                     	;# 
  3860  0F24                     	;# 
  3861  0F25                     	;# 
  3862  0F26                     	;# 
  3863  0F27                     	;# 
  3864  0F28                     	;# 
  3865  0F29                     	;# 
  3866  0F2A                     	;# 
  3867  0F2B                     	;# 
  3868  0F2C                     	;# 
  3869  0F2D                     	;# 
  3870  0F2E                     	;# 
  3871  0F2F                     	;# 
  3872  0F30                     	;# 
  3873  0F31                     	;# 
  3874  0F32                     	;# 
  3875  0F38                     	;# 
  3876  0F39                     	;# 
  3877  0F3A                     	;# 
  3878  0F3B                     	;# 
  3879  0F3C                     	;# 
  3880  0F3D                     	;# 
  3881  0F3E                     	;# 
  3882  0F3F                     	;# 
  3883  0F40                     	;# 
  3884  0F41                     	;# 
  3885  0F43                     	;# 
  3886  0F44                     	;# 
  3887  0F45                     	;# 
  3888  0F46                     	;# 
  3889  0F47                     	;# 
  3890  0F48                     	;# 
  3891  0F49                     	;# 
  3892  0F4A                     	;# 
  3893  0F4B                     	;# 
  3894  0F4C                     	;# 
  3895  0F4E                     	;# 
  3896  0F4F                     	;# 
  3897  0F50                     	;# 
  3898  0F51                     	;# 
  3899  0F52                     	;# 
  3900  0F53                     	;# 
  3901  0F54                     	;# 
  3902  0F55                     	;# 
  3903  0F56                     	;# 
  3904  0F57                     	;# 
  3905  0F59                     	;# 
  3906  0F5A                     	;# 
  3907  0F5B                     	;# 
  3908  0F5C                     	;# 
  3909  0F5D                     	;# 
  3910  0F61                     	;# 
  3911  0F62                     	;# 
  3912  0F64                     	;# 
  3913  0F65                     	;# 
  3914  0F66                     	;# 
  3915  0F67                     	;# 
  3916  0F68                     	;# 
  3917  0F69                     	;# 
  3918  0F6A                     	;# 
  3919  0F6B                     	;# 
  3920  0F6C                     	;# 
  3921  0F6D                     	;# 
  3922  0FE4                     	;# 
  3923  0FE5                     	;# 
  3924  0FE6                     	;# 
  3925  0FE7                     	;# 
  3926  0FE8                     	;# 
  3927  0FE9                     	;# 
  3928  0FEA                     	;# 
  3929  0FEB                     	;# 
  3930  0FED                     	;# 
  3931  0FEE                     	;# 
  3932  0FEF                     	;# 
  3933  0000                     	;# 
  3934  0001                     	;# 
  3935  0002                     	;# 
  3936  0003                     	;# 
  3937  0004                     	;# 
  3938  0005                     	;# 
  3939  0006                     	;# 
  3940  0007                     	;# 
  3941  0008                     	;# 
  3942  0009                     	;# 
  3943  000A                     	;# 
  3944  000B                     	;# 
  3945  000C                     	;# 
  3946  000D                     	;# 
  3947  000E                     	;# 
  3948  000F                     	;# 
  3949  0010                     	;# 
  3950  0011                     	;# 
  3951  0012                     	;# 
  3952  0013                     	;# 
  3953  0014                     	;# 
  3954  0015                     	;# 
  3955  0016                     	;# 
  3956  0017                     	;# 
  3957  0018                     	;# 
  3958  0019                     	;# 
  3959  001A                     	;# 
  3960  001C                     	;# 
  3961  001C                     	;# 
  3962  001D                     	;# 
  3963  001D                     	;# 
  3964  001E                     	;# 
  3965  001F                     	;# 
  3966  008C                     	;# 
  3967  008C                     	;# 
  3968  008D                     	;# 
  3969  008E                     	;# 
  3970  008E                     	;# 
  3971  008F                     	;# 
  3972  0090                     	;# 
  3973  0090                     	;# 
  3974  0091                     	;# 
  3975  0093                     	;# 
  3976  0094                     	;# 
  3977  0095                     	;# 
  3978  0096                     	;# 
  3979  0097                     	;# 
  3980  0098                     	;# 
  3981  0099                     	;# 
  3982  009A                     	;# 
  3983  009B                     	;# 
  3984  009C                     	;# 
  3985  009D                     	;# 
  3986  009E                     	;# 
  3987  010C                     	;# 
  3988  010D                     	;# 
  3989  010E                     	;# 
  3990  010E                     	;# 
  3991  010F                     	;# 
  3992  0110                     	;# 
  3993  0110                     	;# 
  3994  0111                     	;# 
  3995  0112                     	;# 
  3996  0112                     	;# 
  3997  0113                     	;# 
  3998  0114                     	;# 
  3999  0114                     	;# 
  4000  0115                     	;# 
  4001  0116                     	;# 
  4002  0116                     	;# 
  4003  0117                     	;# 
  4004  0119                     	;# 
  4005  0119                     	;# 
  4006  0119                     	;# 
  4007  011A                     	;# 
  4008  011A                     	;# 
  4009  011A                     	;# 
  4010  011B                     	;# 
  4011  011B                     	;# 
  4012  011B                     	;# 
  4013  011B                     	;# 
  4014  011B                     	;# 
  4015  011C                     	;# 
  4016  011C                     	;# 
  4017  011C                     	;# 
  4018  011D                     	;# 
  4019  011D                     	;# 
  4020  011D                     	;# 
  4021  011E                     	;# 
  4022  011E                     	;# 
  4023  011E                     	;# 
  4024  011F                     	;# 
  4025  011F                     	;# 
  4026  011F                     	;# 
  4027  011F                     	;# 
  4028  011F                     	;# 
  4029  018C                     	;# 
  4030  018D                     	;# 
  4031  018E                     	;# 
  4032  018F                     	;# 
  4033  0190                     	;# 
  4034  0191                     	;# 
  4035  0192                     	;# 
  4036  0196                     	;# 
  4037  0197                     	;# 
  4038  0198                     	;# 
  4039  0199                     	;# 
  4040  019A                     	;# 
  4041  019B                     	;# 
  4042  019C                     	;# 
  4043  020C                     	;# 
  4044  020C                     	;# 
  4045  020D                     	;# 
  4046  020E                     	;# 
  4047  020F                     	;# 
  4048  020F                     	;# 
  4049  0210                     	;# 
  4050  0210                     	;# 
  4051  0211                     	;# 
  4052  0211                     	;# 
  4053  0212                     	;# 
  4054  0212                     	;# 
  4055  0213                     	;# 
  4056  0214                     	;# 
  4057  0215                     	;# 
  4058  0215                     	;# 
  4059  0216                     	;# 
  4060  0216                     	;# 
  4061  0217                     	;# 
  4062  0217                     	;# 
  4063  0218                     	;# 
  4064  0218                     	;# 
  4065  0219                     	;# 
  4066  021A                     	;# 
  4067  021B                     	;# 
  4068  021B                     	;# 
  4069  021C                     	;# 
  4070  021C                     	;# 
  4071  021D                     	;# 
  4072  021D                     	;# 
  4073  021E                     	;# 
  4074  021F                     	;# 
  4075  028C                     	;# 
  4076  028C                     	;# 
  4077  028D                     	;# 
  4078  028D                     	;# 
  4079  028E                     	;# 
  4080  028F                     	;# 
  4081  0290                     	;# 
  4082  0290                     	;# 
  4083  0291                     	;# 
  4084  0292                     	;# 
  4085  0292                     	;# 
  4086  0293                     	;# 
  4087  0293                     	;# 
  4088  0294                     	;# 
  4089  0295                     	;# 
  4090  0296                     	;# 
  4091  0296                     	;# 
  4092  0297                     	;# 
  4093  0298                     	;# 
  4094  0298                     	;# 
  4095  0299                     	;# 
  4096  0299                     	;# 
  4097  029A                     	;# 
  4098  029B                     	;# 
  4099  029C                     	;# 
  4100  029C                     	;# 
  4101  029D                     	;# 
  4102  030C                     	;# 
  4103  030C                     	;# 
  4104  030D                     	;# 
  4105  030E                     	;# 
  4106  030F                     	;# 
  4107  0310                     	;# 
  4108  0310                     	;# 
  4109  0311                     	;# 
  4110  0312                     	;# 
  4111  0313                     	;# 
  4112  0314                     	;# 
  4113  0314                     	;# 
  4114  0315                     	;# 
  4115  0316                     	;# 
  4116  0317                     	;# 
  4117  0318                     	;# 
  4118  0318                     	;# 
  4119  0319                     	;# 
  4120  031A                     	;# 
  4121  031B                     	;# 
  4122  031C                     	;# 
  4123  031C                     	;# 
  4124  031D                     	;# 
  4125  031E                     	;# 
  4126  031F                     	;# 
  4127  038C                     	;# 
  4128  038C                     	;# 
  4129  038D                     	;# 
  4130  038E                     	;# 
  4131  0390                     	;# 
  4132  0390                     	;# 
  4133  0391                     	;# 
  4134  0392                     	;# 
  4135  040C                     	;# 
  4136  040D                     	;# 
  4137  040E                     	;# 
  4138  040F                     	;# 
  4139  0410                     	;# 
  4140  0411                     	;# 
  4141  0416                     	;# 
  4142  0416                     	;# 
  4143  0417                     	;# 
  4144  0418                     	;# 
  4145  0418                     	;# 
  4146  0419                     	;# 
  4147  041A                     	;# 
  4148  041A                     	;# 
  4149  041B                     	;# 
  4150  041C                     	;# 
  4151  041C                     	;# 
  4152  041D                     	;# 
  4153  041E                     	;# 
  4154  041F                     	;# 
  4155  048C                     	;# 
  4156  048C                     	;# 
  4157  048D                     	;# 
  4158  048E                     	;# 
  4159  048F                     	;# 
  4160  048F                     	;# 
  4161  0490                     	;# 
  4162  0491                     	;# 
  4163  0492                     	;# 
  4164  0492                     	;# 
  4165  0493                     	;# 
  4166  0494                     	;# 
  4167  0495                     	;# 
  4168  0495                     	;# 
  4169  0496                     	;# 
  4170  0497                     	;# 
  4171  0498                     	;# 
  4172  0499                     	;# 
  4173  049A                     	;# 
  4174  049B                     	;# 
  4175  049C                     	;# 
  4176  049D                     	;# 
  4177  050C                     	;# 
  4178  050C                     	;# 
  4179  050D                     	;# 
  4180  050E                     	;# 
  4181  050F                     	;# 
  4182  050F                     	;# 
  4183  0510                     	;# 
  4184  0511                     	;# 
  4185  0512                     	;# 
  4186  0512                     	;# 
  4187  0513                     	;# 
  4188  0514                     	;# 
  4189  0515                     	;# 
  4190  0515                     	;# 
  4191  0516                     	;# 
  4192  0517                     	;# 
  4193  0518                     	;# 
  4194  0519                     	;# 
  4195  051A                     	;# 
  4196  051B                     	;# 
  4197  051C                     	;# 
  4198  051D                     	;# 
  4199  058C                     	;# 
  4200  058C                     	;# 
  4201  058D                     	;# 
  4202  058E                     	;# 
  4203  058F                     	;# 
  4204  058F                     	;# 
  4205  0590                     	;# 
  4206  0591                     	;# 
  4207  0592                     	;# 
  4208  0593                     	;# 
  4209  060C                     	;# 
  4210  060D                     	;# 
  4211  060E                     	;# 
  4212  060F                     	;# 
  4213  0610                     	;# 
  4214  0611                     	;# 
  4215  0612                     	;# 
  4216  0613                     	;# 
  4217  0614                     	;# 
  4218  0616                     	;# 
  4219  0617                     	;# 
  4220  0618                     	;# 
  4221  0619                     	;# 
  4222  061A                     	;# 
  4223  061B                     	;# 
  4224  061C                     	;# 
  4225  061D                     	;# 
  4226  061E                     	;# 
  4227  068C                     	;# 
  4228  068D                     	;# 
  4229  068E                     	;# 
  4230  068F                     	;# 
  4231  0690                     	;# 
  4232  0691                     	;# 
  4233  0692                     	;# 
  4234  0693                     	;# 
  4235  0694                     	;# 
  4236  070C                     	;# 
  4237  070D                     	;# 
  4238  070E                     	;# 
  4239  070F                     	;# 
  4240  0710                     	;# 
  4241  0711                     	;# 
  4242  0712                     	;# 
  4243  0713                     	;# 
  4244  0714                     	;# 
  4245  0716                     	;# 
  4246  0717                     	;# 
  4247  0718                     	;# 
  4248  0719                     	;# 
  4249  071A                     	;# 
  4250  071B                     	;# 
  4251  071C                     	;# 
  4252  071D                     	;# 
  4253  071E                     	;# 
  4254  0796                     	;# 
  4255  0797                     	;# 
  4256  0798                     	;# 
  4257  0799                     	;# 
  4258  079A                     	;# 
  4259  079B                     	;# 
  4260  080C                     	;# 
  4261  080D                     	;# 
  4262  080E                     	;# 
  4263  080F                     	;# 
  4264  0810                     	;# 
  4265  0811                     	;# 
  4266  0812                     	;# 
  4267  0813                     	;# 
  4268  0814                     	;# 
  4269  081A                     	;# 
  4270  081B                     	;# 
  4271  081C                     	;# 
  4272  081D                     	;# 
  4273  081E                     	;# 
  4274  081F                     	;# 
  4275  088C                     	;# 
  4276  088D                     	;# 
  4277  088E                     	;# 
  4278  088F                     	;# 
  4279  0890                     	;# 
  4280  0891                     	;# 
  4281  0892                     	;# 
  4282  0893                     	;# 
  4283  0895                     	;# 
  4284  0896                     	;# 
  4285  0897                     	;# 
  4286  0898                     	;# 
  4287  0899                     	;# 
  4288  089A                     	;# 
  4289  089B                     	;# 
  4290  090C                     	;# 
  4291  090E                     	;# 
  4292  090F                     	;# 
  4293  091F                     	;# 
  4294  091F                     	;# 
  4295  098F                     	;# 
  4296  098F                     	;# 
  4297  0990                     	;# 
  4298  0991                     	;# 
  4299  0992                     	;# 
  4300  0993                     	;# 
  4301  0994                     	;# 
  4302  0995                     	;# 
  4303  0996                     	;# 
  4304  0997                     	;# 
  4305  0E0F                     	;# 
  4306  0E10                     	;# 
  4307  0E11                     	;# 
  4308  0E12                     	;# 
  4309  0E13                     	;# 
  4310  0E14                     	;# 
  4311  0E15                     	;# 
  4312  0E16                     	;# 
  4313  0E17                     	;# 
  4314  0E18                     	;# 
  4315  0E19                     	;# 
  4316  0E1A                     	;# 
  4317  0E1B                     	;# 
  4318  0E1C                     	;# 
  4319  0E1D                     	;# 
  4320  0E1E                     	;# 
  4321  0E1F                     	;# 
  4322  0E20                     	;# 
  4323  0E21                     	;# 
  4324  0E22                     	;# 
  4325  0E23                     	;# 
  4326  0E24                     	;# 
  4327  0E25                     	;# 
  4328  0E26                     	;# 
  4329  0E27                     	;# 
  4330  0E28                     	;# 
  4331  0E29                     	;# 
  4332  0E2A                     	;# 
  4333  0E2B                     	;# 
  4334  0E2C                     	;# 
  4335  0E2D                     	;# 
  4336  0E2E                     	;# 
  4337  0E2F                     	;# 
  4338  0E30                     	;# 
  4339  0E31                     	;# 
  4340  0E32                     	;# 
  4341  0E33                     	;# 
  4342  0E34                     	;# 
  4343  0E35                     	;# 
  4344  0E36                     	;# 
  4345  0E37                     	;# 
  4346  0E8F                     	;# 
  4347  0E90                     	;# 
  4348  0E91                     	;# 
  4349  0E92                     	;# 
  4350  0E93                     	;# 
  4351  0E94                     	;# 
  4352  0E95                     	;# 
  4353  0E96                     	;# 
  4354  0E97                     	;# 
  4355  0E9C                     	;# 
  4356  0E9D                     	;# 
  4357  0E9E                     	;# 
  4358  0EA1                     	;# 
  4359  0EA2                     	;# 
  4360  0EA3                     	;# 
  4361  0EA4                     	;# 
  4362  0EA5                     	;# 
  4363  0EA9                     	;# 
  4364  0EAA                     	;# 
  4365  0EAB                     	;# 
  4366  0EAC                     	;# 
  4367  0EB1                     	;# 
  4368  0EB2                     	;# 
  4369  0EB3                     	;# 
  4370  0EB8                     	;# 
  4371  0EB9                     	;# 
  4372  0EBA                     	;# 
  4373  0EBB                     	;# 
  4374  0EBC                     	;# 
  4375  0EBD                     	;# 
  4376  0EBE                     	;# 
  4377  0EC3                     	;# 
  4378  0EC5                     	;# 
  4379  0EC6                     	;# 
  4380  0EC7                     	;# 
  4381  0EC8                     	;# 
  4382  0EC9                     	;# 
  4383  0ECA                     	;# 
  4384  0ECB                     	;# 
  4385  0ECC                     	;# 
  4386  0F10                     	;# 
  4387  0F11                     	;# 
  4388  0F12                     	;# 
  4389  0F13                     	;# 
  4390  0F14                     	;# 
  4391  0F15                     	;# 
  4392  0F16                     	;# 
  4393  0F17                     	;# 
  4394  0F18                     	;# 
  4395  0F19                     	;# 
  4396  0F1A                     	;# 
  4397  0F1B                     	;# 
  4398  0F1C                     	;# 
  4399  0F1D                     	;# 
  4400  0F1E                     	;# 
  4401  0F1F                     	;# 
  4402  0F20                     	;# 
  4403  0F21                     	;# 
  4404  0F22                     	;# 
  4405  0F23                     	;# 
  4406  0F24                     	;# 
  4407  0F25                     	;# 
  4408  0F26                     	;# 
  4409  0F27                     	;# 
  4410  0F28                     	;# 
  4411  0F29                     	;# 
  4412  0F2A                     	;# 
  4413  0F2B                     	;# 
  4414  0F2C                     	;# 
  4415  0F2D                     	;# 
  4416  0F2E                     	;# 
  4417  0F2F                     	;# 
  4418  0F30                     	;# 
  4419  0F31                     	;# 
  4420  0F32                     	;# 
  4421  0F38                     	;# 
  4422  0F39                     	;# 
  4423  0F3A                     	;# 
  4424  0F3B                     	;# 
  4425  0F3C                     	;# 
  4426  0F3D                     	;# 
  4427  0F3E                     	;# 
  4428  0F3F                     	;# 
  4429  0F40                     	;# 
  4430  0F41                     	;# 
  4431  0F43                     	;# 
  4432  0F44                     	;# 
  4433  0F45                     	;# 
  4434  0F46                     	;# 
  4435  0F47                     	;# 
  4436  0F48                     	;# 
  4437  0F49                     	;# 
  4438  0F4A                     	;# 
  4439  0F4B                     	;# 
  4440  0F4C                     	;# 
  4441  0F4E                     	;# 
  4442  0F4F                     	;# 
  4443  0F50                     	;# 
  4444  0F51                     	;# 
  4445  0F52                     	;# 
  4446  0F53                     	;# 
  4447  0F54                     	;# 
  4448  0F55                     	;# 
  4449  0F56                     	;# 
  4450  0F57                     	;# 
  4451  0F59                     	;# 
  4452  0F5A                     	;# 
  4453  0F5B                     	;# 
  4454  0F5C                     	;# 
  4455  0F5D                     	;# 
  4456  0F61                     	;# 
  4457  0F62                     	;# 
  4458  0F64                     	;# 
  4459  0F65                     	;# 
  4460  0F66                     	;# 
  4461  0F67                     	;# 
  4462  0F68                     	;# 
  4463  0F69                     	;# 
  4464  0F6A                     	;# 
  4465  0F6B                     	;# 
  4466  0F6C                     	;# 
  4467  0F6D                     	;# 
  4468  0FE4                     	;# 
  4469  0FE5                     	;# 
  4470  0FE6                     	;# 
  4471  0FE7                     	;# 
  4472  0FE8                     	;# 
  4473  0FE9                     	;# 
  4474  0FEA                     	;# 
  4475  0FEB                     	;# 
  4476  0FED                     	;# 
  4477  0FEE                     	;# 
  4478  0FEF                     	;# 
  4479  0000                     	;# 
  4480  0001                     	;# 
  4481  0002                     	;# 
  4482  0003                     	;# 
  4483  0004                     	;# 
  4484  0005                     	;# 
  4485  0006                     	;# 
  4486  0007                     	;# 
  4487  0008                     	;# 
  4488  0009                     	;# 
  4489  000A                     	;# 
  4490  000B                     	;# 
  4491  000C                     	;# 
  4492  000D                     	;# 
  4493  000E                     	;# 
  4494  000F                     	;# 
  4495  0010                     	;# 
  4496  0011                     	;# 
  4497  0012                     	;# 
  4498  0013                     	;# 
  4499  0014                     	;# 
  4500  0015                     	;# 
  4501  0016                     	;# 
  4502  0017                     	;# 
  4503  0018                     	;# 
  4504  0019                     	;# 
  4505  001A                     	;# 
  4506  001C                     	;# 
  4507  001C                     	;# 
  4508  001D                     	;# 
  4509  001D                     	;# 
  4510  001E                     	;# 
  4511  001F                     	;# 
  4512  008C                     	;# 
  4513  008C                     	;# 
  4514  008D                     	;# 
  4515  008E                     	;# 
  4516  008E                     	;# 
  4517  008F                     	;# 
  4518  0090                     	;# 
  4519  0090                     	;# 
  4520  0091                     	;# 
  4521  0093                     	;# 
  4522  0094                     	;# 
  4523  0095                     	;# 
  4524  0096                     	;# 
  4525  0097                     	;# 
  4526  0098                     	;# 
  4527  0099                     	;# 
  4528  009A                     	;# 
  4529  009B                     	;# 
  4530  009C                     	;# 
  4531  009D                     	;# 
  4532  009E                     	;# 
  4533  010C                     	;# 
  4534  010D                     	;# 
  4535  010E                     	;# 
  4536  010E                     	;# 
  4537  010F                     	;# 
  4538  0110                     	;# 
  4539  0110                     	;# 
  4540  0111                     	;# 
  4541  0112                     	;# 
  4542  0112                     	;# 
  4543  0113                     	;# 
  4544  0114                     	;# 
  4545  0114                     	;# 
  4546  0115                     	;# 
  4547  0116                     	;# 
  4548  0116                     	;# 
  4549  0117                     	;# 
  4550  0119                     	;# 
  4551  0119                     	;# 
  4552  0119                     	;# 
  4553  011A                     	;# 
  4554  011A                     	;# 
  4555  011A                     	;# 
  4556  011B                     	;# 
  4557  011B                     	;# 
  4558  011B                     	;# 
  4559  011B                     	;# 
  4560  011B                     	;# 
  4561  011C                     	;# 
  4562  011C                     	;# 
  4563  011C                     	;# 
  4564  011D                     	;# 
  4565  011D                     	;# 
  4566  011D                     	;# 
  4567  011E                     	;# 
  4568  011E                     	;# 
  4569  011E                     	;# 
  4570  011F                     	;# 
  4571  011F                     	;# 
  4572  011F                     	;# 
  4573  011F                     	;# 
  4574  011F                     	;# 
  4575  018C                     	;# 
  4576  018D                     	;# 
  4577  018E                     	;# 
  4578  018F                     	;# 
  4579  0190                     	;# 
  4580  0191                     	;# 
  4581  0192                     	;# 
  4582  0196                     	;# 
  4583  0197                     	;# 
  4584  0198                     	;# 
  4585  0199                     	;# 
  4586  019A                     	;# 
  4587  019B                     	;# 
  4588  019C                     	;# 
  4589  020C                     	;# 
  4590  020C                     	;# 
  4591  020D                     	;# 
  4592  020E                     	;# 
  4593  020F                     	;# 
  4594  020F                     	;# 
  4595  0210                     	;# 
  4596  0210                     	;# 
  4597  0211                     	;# 
  4598  0211                     	;# 
  4599  0212                     	;# 
  4600  0212                     	;# 
  4601  0213                     	;# 
  4602  0214                     	;# 
  4603  0215                     	;# 
  4604  0215                     	;# 
  4605  0216                     	;# 
  4606  0216                     	;# 
  4607  0217                     	;# 
  4608  0217                     	;# 
  4609  0218                     	;# 
  4610  0218                     	;# 
  4611  0219                     	;# 
  4612  021A                     	;# 
  4613  021B                     	;# 
  4614  021B                     	;# 
  4615  021C                     	;# 
  4616  021C                     	;# 
  4617  021D                     	;# 
  4618  021D                     	;# 
  4619  021E                     	;# 
  4620  021F                     	;# 
  4621  028C                     	;# 
  4622  028C                     	;# 
  4623  028D                     	;# 
  4624  028D                     	;# 
  4625  028E                     	;# 
  4626  028F                     	;# 
  4627  0290                     	;# 
  4628  0290                     	;# 
  4629  0291                     	;# 
  4630  0292                     	;# 
  4631  0292                     	;# 
  4632  0293                     	;# 
  4633  0293                     	;# 
  4634  0294                     	;# 
  4635  0295                     	;# 
  4636  0296                     	;# 
  4637  0296                     	;# 
  4638  0297                     	;# 
  4639  0298                     	;# 
  4640  0298                     	;# 
  4641  0299                     	;# 
  4642  0299                     	;# 
  4643  029A                     	;# 
  4644  029B                     	;# 
  4645  029C                     	;# 
  4646  029C                     	;# 
  4647  029D                     	;# 
  4648  030C                     	;# 
  4649  030C                     	;# 
  4650  030D                     	;# 
  4651  030E                     	;# 
  4652  030F                     	;# 
  4653  0310                     	;# 
  4654  0310                     	;# 
  4655  0311                     	;# 
  4656  0312                     	;# 
  4657  0313                     	;# 
  4658  0314                     	;# 
  4659  0314                     	;# 
  4660  0315                     	;# 
  4661  0316                     	;# 
  4662  0317                     	;# 
  4663  0318                     	;# 
  4664  0318                     	;# 
  4665  0319                     	;# 
  4666  031A                     	;# 
  4667  031B                     	;# 
  4668  031C                     	;# 
  4669  031C                     	;# 
  4670  031D                     	;# 
  4671  031E                     	;# 
  4672  031F                     	;# 
  4673  038C                     	;# 
  4674  038C                     	;# 
  4675  038D                     	;# 
  4676  038E                     	;# 
  4677  0390                     	;# 
  4678  0390                     	;# 
  4679  0391                     	;# 
  4680  0392                     	;# 
  4681  040C                     	;# 
  4682  040D                     	;# 
  4683  040E                     	;# 
  4684  040F                     	;# 
  4685  0410                     	;# 
  4686  0411                     	;# 
  4687  0416                     	;# 
  4688  0416                     	;# 
  4689  0417                     	;# 
  4690  0418                     	;# 
  4691  0418                     	;# 
  4692  0419                     	;# 
  4693  041A                     	;# 
  4694  041A                     	;# 
  4695  041B                     	;# 
  4696  041C                     	;# 
  4697  041C                     	;# 
  4698  041D                     	;# 
  4699  041E                     	;# 
  4700  041F                     	;# 
  4701  048C                     	;# 
  4702  048C                     	;# 
  4703  048D                     	;# 
  4704  048E                     	;# 
  4705  048F                     	;# 
  4706  048F                     	;# 
  4707  0490                     	;# 
  4708  0491                     	;# 
  4709  0492                     	;# 
  4710  0492                     	;# 
  4711  0493                     	;# 
  4712  0494                     	;# 
  4713  0495                     	;# 
  4714  0495                     	;# 
  4715  0496                     	;# 
  4716  0497                     	;# 
  4717  0498                     	;# 
  4718  0499                     	;# 
  4719  049A                     	;# 
  4720  049B                     	;# 
  4721  049C                     	;# 
  4722  049D                     	;# 
  4723  050C                     	;# 
  4724  050C                     	;# 
  4725  050D                     	;# 
  4726  050E                     	;# 
  4727  050F                     	;# 
  4728  050F                     	;# 
  4729  0510                     	;# 
  4730  0511                     	;# 
  4731  0512                     	;# 
  4732  0512                     	;# 
  4733  0513                     	;# 
  4734  0514                     	;# 
  4735  0515                     	;# 
  4736  0515                     	;# 
  4737  0516                     	;# 
  4738  0517                     	;# 
  4739  0518                     	;# 
  4740  0519                     	;# 
  4741  051A                     	;# 
  4742  051B                     	;# 
  4743  051C                     	;# 
  4744  051D                     	;# 
  4745  058C                     	;# 
  4746  058C                     	;# 
  4747  058D                     	;# 
  4748  058E                     	;# 
  4749  058F                     	;# 
  4750  058F                     	;# 
  4751  0590                     	;# 
  4752  0591                     	;# 
  4753  0592                     	;# 
  4754  0593                     	;# 
  4755  060C                     	;# 
  4756  060D                     	;# 
  4757  060E                     	;# 
  4758  060F                     	;# 
  4759  0610                     	;# 
  4760  0611                     	;# 
  4761  0612                     	;# 
  4762  0613                     	;# 
  4763  0614                     	;# 
  4764  0616                     	;# 
  4765  0617                     	;# 
  4766  0618                     	;# 
  4767  0619                     	;# 
  4768  061A                     	;# 
  4769  061B                     	;# 
  4770  061C                     	;# 
  4771  061D                     	;# 
  4772  061E                     	;# 
  4773  068C                     	;# 
  4774  068D                     	;# 
  4775  068E                     	;# 
  4776  068F                     	;# 
  4777  0690                     	;# 
  4778  0691                     	;# 
  4779  0692                     	;# 
  4780  0693                     	;# 
  4781  0694                     	;# 
  4782  070C                     	;# 
  4783  070D                     	;# 
  4784  070E                     	;# 
  4785  070F                     	;# 
  4786  0710                     	;# 
  4787  0711                     	;# 
  4788  0712                     	;# 
  4789  0713                     	;# 
  4790  0714                     	;# 
  4791  0716                     	;# 
  4792  0717                     	;# 
  4793  0718                     	;# 
  4794  0719                     	;# 
  4795  071A                     	;# 
  4796  071B                     	;# 
  4797  071C                     	;# 
  4798  071D                     	;# 
  4799  071E                     	;# 
  4800  0796                     	;# 
  4801  0797                     	;# 
  4802  0798                     	;# 
  4803  0799                     	;# 
  4804  079A                     	;# 
  4805  079B                     	;# 
  4806  080C                     	;# 
  4807  080D                     	;# 
  4808  080E                     	;# 
  4809  080F                     	;# 
  4810  0810                     	;# 
  4811  0811                     	;# 
  4812  0812                     	;# 
  4813  0813                     	;# 
  4814  0814                     	;# 
  4815  081A                     	;# 
  4816  081B                     	;# 
  4817  081C                     	;# 
  4818  081D                     	;# 
  4819  081E                     	;# 
  4820  081F                     	;# 
  4821  088C                     	;# 
  4822  088D                     	;# 
  4823  088E                     	;# 
  4824  088F                     	;# 
  4825  0890                     	;# 
  4826  0891                     	;# 
  4827  0892                     	;# 
  4828  0893                     	;# 
  4829  0895                     	;# 
  4830  0896                     	;# 
  4831  0897                     	;# 
  4832  0898                     	;# 
  4833  0899                     	;# 
  4834  089A                     	;# 
  4835  089B                     	;# 
  4836  090C                     	;# 
  4837  090E                     	;# 
  4838  090F                     	;# 
  4839  091F                     	;# 
  4840  091F                     	;# 
  4841  098F                     	;# 
  4842  098F                     	;# 
  4843  0990                     	;# 
  4844  0991                     	;# 
  4845  0992                     	;# 
  4846  0993                     	;# 
  4847  0994                     	;# 
  4848  0995                     	;# 
  4849  0996                     	;# 
  4850  0997                     	;# 
  4851  0E0F                     	;# 
  4852  0E10                     	;# 
  4853  0E11                     	;# 
  4854  0E12                     	;# 
  4855  0E13                     	;# 
  4856  0E14                     	;# 
  4857  0E15                     	;# 
  4858  0E16                     	;# 
  4859  0E17                     	;# 
  4860  0E18                     	;# 
  4861  0E19                     	;# 
  4862  0E1A                     	;# 
  4863  0E1B                     	;# 
  4864  0E1C                     	;# 
  4865  0E1D                     	;# 
  4866  0E1E                     	;# 
  4867  0E1F                     	;# 
  4868  0E20                     	;# 
  4869  0E21                     	;# 
  4870  0E22                     	;# 
  4871  0E23                     	;# 
  4872  0E24                     	;# 
  4873  0E25                     	;# 
  4874  0E26                     	;# 
  4875  0E27                     	;# 
  4876  0E28                     	;# 
  4877  0E29                     	;# 
  4878  0E2A                     	;# 
  4879  0E2B                     	;# 
  4880  0E2C                     	;# 
  4881  0E2D                     	;# 
  4882  0E2E                     	;# 
  4883  0E2F                     	;# 
  4884  0E30                     	;# 
  4885  0E31                     	;# 
  4886  0E32                     	;# 
  4887  0E33                     	;# 
  4888  0E34                     	;# 
  4889  0E35                     	;# 
  4890  0E36                     	;# 
  4891  0E37                     	;# 
  4892  0E8F                     	;# 
  4893  0E90                     	;# 
  4894  0E91                     	;# 
  4895  0E92                     	;# 
  4896  0E93                     	;# 
  4897  0E94                     	;# 
  4898  0E95                     	;# 
  4899  0E96                     	;# 
  4900  0E97                     	;# 
  4901  0E9C                     	;# 
  4902  0E9D                     	;# 
  4903  0E9E                     	;# 
  4904  0EA1                     	;# 
  4905  0EA2                     	;# 
  4906  0EA3                     	;# 
  4907  0EA4                     	;# 
  4908  0EA5                     	;# 
  4909  0EA9                     	;# 
  4910  0EAA                     	;# 
  4911  0EAB                     	;# 
  4912  0EAC                     	;# 
  4913  0EB1                     	;# 
  4914  0EB2                     	;# 
  4915  0EB3                     	;# 
  4916  0EB8                     	;# 
  4917  0EB9                     	;# 
  4918  0EBA                     	;# 
  4919  0EBB                     	;# 
  4920  0EBC                     	;# 
  4921  0EBD                     	;# 
  4922  0EBE                     	;# 
  4923  0EC3                     	;# 
  4924  0EC5                     	;# 
  4925  0EC6                     	;# 
  4926  0EC7                     	;# 
  4927  0EC8                     	;# 
  4928  0EC9                     	;# 
  4929  0ECA                     	;# 
  4930  0ECB                     	;# 
  4931  0ECC                     	;# 
  4932  0F10                     	;# 
  4933  0F11                     	;# 
  4934  0F12                     	;# 
  4935  0F13                     	;# 
  4936  0F14                     	;# 
  4937  0F15                     	;# 
  4938  0F16                     	;# 
  4939  0F17                     	;# 
  4940  0F18                     	;# 
  4941  0F19                     	;# 
  4942  0F1A                     	;# 
  4943  0F1B                     	;# 
  4944  0F1C                     	;# 
  4945  0F1D                     	;# 
  4946  0F1E                     	;# 
  4947  0F1F                     	;# 
  4948  0F20                     	;# 
  4949  0F21                     	;# 
  4950  0F22                     	;# 
  4951  0F23                     	;# 
  4952  0F24                     	;# 
  4953  0F25                     	;# 
  4954  0F26                     	;# 
  4955  0F27                     	;# 
  4956  0F28                     	;# 
  4957  0F29                     	;# 
  4958  0F2A                     	;# 
  4959  0F2B                     	;# 
  4960  0F2C                     	;# 
  4961  0F2D                     	;# 
  4962  0F2E                     	;# 
  4963  0F2F                     	;# 
  4964  0F30                     	;# 
  4965  0F31                     	;# 
  4966  0F32                     	;# 
  4967  0F38                     	;# 
  4968  0F39                     	;# 
  4969  0F3A                     	;# 
  4970  0F3B                     	;# 
  4971  0F3C                     	;# 
  4972  0F3D                     	;# 
  4973  0F3E                     	;# 
  4974  0F3F                     	;# 
  4975  0F40                     	;# 
  4976  0F41                     	;# 
  4977  0F43                     	;# 
  4978  0F44                     	;# 
  4979  0F45                     	;# 
  4980  0F46                     	;# 
  4981  0F47                     	;# 
  4982  0F48                     	;# 
  4983  0F49                     	;# 
  4984  0F4A                     	;# 
  4985  0F4B                     	;# 
  4986  0F4C                     	;# 
  4987  0F4E                     	;# 
  4988  0F4F                     	;# 
  4989  0F50                     	;# 
  4990  0F51                     	;# 
  4991  0F52                     	;# 
  4992  0F53                     	;# 
  4993  0F54                     	;# 
  4994  0F55                     	;# 
  4995  0F56                     	;# 
  4996  0F57                     	;# 
  4997  0F59                     	;# 
  4998  0F5A                     	;# 
  4999  0F5B                     	;# 
  5000  0F5C                     	;# 
  5001  0F5D                     	;# 
  5002  0F61                     	;# 
  5003  0F62                     	;# 
  5004  0F64                     	;# 
  5005  0F65                     	;# 
  5006  0F66                     	;# 
  5007  0F67                     	;# 
  5008  0F68                     	;# 
  5009  0F69                     	;# 
  5010  0F6A                     	;# 
  5011  0F6B                     	;# 
  5012  0F6C                     	;# 
  5013  0F6D                     	;# 
  5014  0FE4                     	;# 
  5015  0FE5                     	;# 
  5016  0FE6                     	;# 
  5017  0FE7                     	;# 
  5018  0FE8                     	;# 
  5019  0FE9                     	;# 
  5020  0FEA                     	;# 
  5021  0FEB                     	;# 
  5022  0FED                     	;# 
  5023  0FEE                     	;# 
  5024  0FEF                     	;# 
  5025  0000                     	;# 
  5026  0001                     	;# 
  5027  0002                     	;# 
  5028  0003                     	;# 
  5029  0004                     	;# 
  5030  0005                     	;# 
  5031  0006                     	;# 
  5032  0007                     	;# 
  5033  0008                     	;# 
  5034  0009                     	;# 
  5035  000A                     	;# 
  5036  000B                     	;# 
  5037  000C                     	;# 
  5038  000D                     	;# 
  5039  000E                     	;# 
  5040  000F                     	;# 
  5041  0010                     	;# 
  5042  0011                     	;# 
  5043  0012                     	;# 
  5044  0013                     	;# 
  5045  0014                     	;# 
  5046  0015                     	;# 
  5047  0016                     	;# 
  5048  0017                     	;# 
  5049  0018                     	;# 
  5050  0019                     	;# 
  5051  001A                     	;# 
  5052  001C                     	;# 
  5053  001C                     	;# 
  5054  001D                     	;# 
  5055  001D                     	;# 
  5056  001E                     	;# 
  5057  001F                     	;# 
  5058  008C                     	;# 
  5059  008C                     	;# 
  5060  008D                     	;# 
  5061  008E                     	;# 
  5062  008E                     	;# 
  5063  008F                     	;# 
  5064  0090                     	;# 
  5065  0090                     	;# 
  5066  0091                     	;# 
  5067  0093                     	;# 
  5068  0094                     	;# 
  5069  0095                     	;# 
  5070  0096                     	;# 
  5071  0097                     	;# 
  5072  0098                     	;# 
  5073  0099                     	;# 
  5074  009A                     	;# 
  5075  009B                     	;# 
  5076  009C                     	;# 
  5077  009D                     	;# 
  5078  009E                     	;# 
  5079  010C                     	;# 
  5080  010D                     	;# 
  5081  010E                     	;# 
  5082  010E                     	;# 
  5083  010F                     	;# 
  5084  0110                     	;# 
  5085  0110                     	;# 
  5086  0111                     	;# 
  5087  0112                     	;# 
  5088  0112                     	;# 
  5089  0113                     	;# 
  5090  0114                     	;# 
  5091  0114                     	;# 
  5092  0115                     	;# 
  5093  0116                     	;# 
  5094  0116                     	;# 
  5095  0117                     	;# 
  5096  0119                     	;# 
  5097  0119                     	;# 
  5098  0119                     	;# 
  5099  011A                     	;# 
  5100  011A                     	;# 
  5101  011A                     	;# 
  5102  011B                     	;# 
  5103  011B                     	;# 
  5104  011B                     	;# 
  5105  011B                     	;# 
  5106  011B                     	;# 
  5107  011C                     	;# 
  5108  011C                     	;# 
  5109  011C                     	;# 
  5110  011D                     	;# 
  5111  011D                     	;# 
  5112  011D                     	;# 
  5113  011E                     	;# 
  5114  011E                     	;# 
  5115  011E                     	;# 
  5116  011F                     	;# 
  5117  011F                     	;# 
  5118  011F                     	;# 
  5119  011F                     	;# 
  5120  011F                     	;# 
  5121  018C                     	;# 
  5122  018D                     	;# 
  5123  018E                     	;# 
  5124  018F                     	;# 
  5125  0190                     	;# 
  5126  0191                     	;# 
  5127  0192                     	;# 
  5128  0196                     	;# 
  5129  0197                     	;# 
  5130  0198                     	;# 
  5131  0199                     	;# 
  5132  019A                     	;# 
  5133  019B                     	;# 
  5134  019C                     	;# 
  5135  020C                     	;# 
  5136  020C                     	;# 
  5137  020D                     	;# 
  5138  020E                     	;# 
  5139  020F                     	;# 
  5140  020F                     	;# 
  5141  0210                     	;# 
  5142  0210                     	;# 
  5143  0211                     	;# 
  5144  0211                     	;# 
  5145  0212                     	;# 
  5146  0212                     	;# 
  5147  0213                     	;# 
  5148  0214                     	;# 
  5149  0215                     	;# 
  5150  0215                     	;# 
  5151  0216                     	;# 
  5152  0216                     	;# 
  5153  0217                     	;# 
  5154  0217                     	;# 
  5155  0218                     	;# 
  5156  0218                     	;# 
  5157  0219                     	;# 
  5158  021A                     	;# 
  5159  021B                     	;# 
  5160  021B                     	;# 
  5161  021C                     	;# 
  5162  021C                     	;# 
  5163  021D                     	;# 
  5164  021D                     	;# 
  5165  021E                     	;# 
  5166  021F                     	;# 
  5167  028C                     	;# 
  5168  028C                     	;# 
  5169  028D                     	;# 
  5170  028D                     	;# 
  5171  028E                     	;# 
  5172  028F                     	;# 
  5173  0290                     	;# 
  5174  0290                     	;# 
  5175  0291                     	;# 
  5176  0292                     	;# 
  5177  0292                     	;# 
  5178  0293                     	;# 
  5179  0293                     	;# 
  5180  0294                     	;# 
  5181  0295                     	;# 
  5182  0296                     	;# 
  5183  0296                     	;# 
  5184  0297                     	;# 
  5185  0298                     	;# 
  5186  0298                     	;# 
  5187  0299                     	;# 
  5188  0299                     	;# 
  5189  029A                     	;# 
  5190  029B                     	;# 
  5191  029C                     	;# 
  5192  029C                     	;# 
  5193  029D                     	;# 
  5194  030C                     	;# 
  5195  030C                     	;# 
  5196  030D                     	;# 
  5197  030E                     	;# 
  5198  030F                     	;# 
  5199  0310                     	;# 
  5200  0310                     	;# 
  5201  0311                     	;# 
  5202  0312                     	;# 
  5203  0313                     	;# 
  5204  0314                     	;# 
  5205  0314                     	;# 
  5206  0315                     	;# 
  5207  0316                     	;# 
  5208  0317                     	;# 
  5209  0318                     	;# 
  5210  0318                     	;# 
  5211  0319                     	;# 
  5212  031A                     	;# 
  5213  031B                     	;# 
  5214  031C                     	;# 
  5215  031C                     	;# 
  5216  031D                     	;# 
  5217  031E                     	;# 
  5218  031F                     	;# 
  5219  038C                     	;# 
  5220  038C                     	;# 
  5221  038D                     	;# 
  5222  038E                     	;# 
  5223  0390                     	;# 
  5224  0390                     	;# 
  5225  0391                     	;# 
  5226  0392                     	;# 
  5227  040C                     	;# 
  5228  040D                     	;# 
  5229  040E                     	;# 
  5230  040F                     	;# 
  5231  0410                     	;# 
  5232  0411                     	;# 
  5233  0416                     	;# 
  5234  0416                     	;# 
  5235  0417                     	;# 
  5236  0418                     	;# 
  5237  0418                     	;# 
  5238  0419                     	;# 
  5239  041A                     	;# 
  5240  041A                     	;# 
  5241  041B                     	;# 
  5242  041C                     	;# 
  5243  041C                     	;# 
  5244  041D                     	;# 
  5245  041E                     	;# 
  5246  041F                     	;# 
  5247  048C                     	;# 
  5248  048C                     	;# 
  5249  048D                     	;# 
  5250  048E                     	;# 
  5251  048F                     	;# 
  5252  048F                     	;# 
  5253  0490                     	;# 
  5254  0491                     	;# 
  5255  0492                     	;# 
  5256  0492                     	;# 
  5257  0493                     	;# 
  5258  0494                     	;# 
  5259  0495                     	;# 
  5260  0495                     	;# 
  5261  0496                     	;# 
  5262  0497                     	;# 
  5263  0498                     	;# 
  5264  0499                     	;# 
  5265  049A                     	;# 
  5266  049B                     	;# 
  5267  049C                     	;# 
  5268  049D                     	;# 
  5269  050C                     	;# 
  5270  050C                     	;# 
  5271  050D                     	;# 
  5272  050E                     	;# 
  5273  050F                     	;# 
  5274  050F                     	;# 
  5275  0510                     	;# 
  5276  0511                     	;# 
  5277  0512                     	;# 
  5278  0512                     	;# 
  5279  0513                     	;# 
  5280  0514                     	;# 
  5281  0515                     	;# 
  5282  0515                     	;# 
  5283  0516                     	;# 
  5284  0517                     	;# 
  5285  0518                     	;# 
  5286  0519                     	;# 
  5287  051A                     	;# 
  5288  051B                     	;# 
  5289  051C                     	;# 
  5290  051D                     	;# 
  5291  058C                     	;# 
  5292  058C                     	;# 
  5293  058D                     	;# 
  5294  058E                     	;# 
  5295  058F                     	;# 
  5296  058F                     	;# 
  5297  0590                     	;# 
  5298  0591                     	;# 
  5299  0592                     	;# 
  5300  0593                     	;# 
  5301  060C                     	;# 
  5302  060D                     	;# 
  5303  060E                     	;# 
  5304  060F                     	;# 
  5305  0610                     	;# 
  5306  0611                     	;# 
  5307  0612                     	;# 
  5308  0613                     	;# 
  5309  0614                     	;# 
  5310  0616                     	;# 
  5311  0617                     	;# 
  5312  0618                     	;# 
  5313  0619                     	;# 
  5314  061A                     	;# 
  5315  061B                     	;# 
  5316  061C                     	;# 
  5317  061D                     	;# 
  5318  061E                     	;# 
  5319  068C                     	;# 
  5320  068D                     	;# 
  5321  068E                     	;# 
  5322  068F                     	;# 
  5323  0690                     	;# 
  5324  0691                     	;# 
  5325  0692                     	;# 
  5326  0693                     	;# 
  5327  0694                     	;# 
  5328  070C                     	;# 
  5329  070D                     	;# 
  5330  070E                     	;# 
  5331  070F                     	;# 
  5332  0710                     	;# 
  5333  0711                     	;# 
  5334  0712                     	;# 
  5335  0713                     	;# 
  5336  0714                     	;# 
  5337  0716                     	;# 
  5338  0717                     	;# 
  5339  0718                     	;# 
  5340  0719                     	;# 
  5341  071A                     	;# 
  5342  071B                     	;# 
  5343  071C                     	;# 
  5344  071D                     	;# 
  5345  071E                     	;# 
  5346  0796                     	;# 
  5347  0797                     	;# 
  5348  0798                     	;# 
  5349  0799                     	;# 
  5350  079A                     	;# 
  5351  079B                     	;# 
  5352  080C                     	;# 
  5353  080D                     	;# 
  5354  080E                     	;# 
  5355  080F                     	;# 
  5356  0810                     	;# 
  5357  0811                     	;# 
  5358  0812                     	;# 
  5359  0813                     	;# 
  5360  0814                     	;# 
  5361  081A                     	;# 
  5362  081B                     	;# 
  5363  081C                     	;# 
  5364  081D                     	;# 
  5365  081E                     	;# 
  5366  081F                     	;# 
  5367  088C                     	;# 
  5368  088D                     	;# 
  5369  088E                     	;# 
  5370  088F                     	;# 
  5371  0890                     	;# 
  5372  0891                     	;# 
  5373  0892                     	;# 
  5374  0893                     	;# 
  5375  0895                     	;# 
  5376  0896                     	;# 
  5377  0897                     	;# 
  5378  0898                     	;# 
  5379  0899                     	;# 
  5380  089A                     	;# 
  5381  089B                     	;# 
  5382  090C                     	;# 
  5383  090E                     	;# 
  5384  090F                     	;# 
  5385  091F                     	;# 
  5386  091F                     	;# 
  5387  098F                     	;# 
  5388  098F                     	;# 
  5389  0990                     	;# 
  5390  0991                     	;# 
  5391  0992                     	;# 
  5392  0993                     	;# 
  5393  0994                     	;# 
  5394  0995                     	;# 
  5395  0996                     	;# 
  5396  0997                     	;# 
  5397  0E0F                     	;# 
  5398  0E10                     	;# 
  5399  0E11                     	;# 
  5400  0E12                     	;# 
  5401  0E13                     	;# 
  5402  0E14                     	;# 
  5403  0E15                     	;# 
  5404  0E16                     	;# 
  5405  0E17                     	;# 
  5406  0E18                     	;# 
  5407  0E19                     	;# 
  5408  0E1A                     	;# 
  5409  0E1B                     	;# 
  5410  0E1C                     	;# 
  5411  0E1D                     	;# 
  5412  0E1E                     	;# 
  5413  0E1F                     	;# 
  5414  0E20                     	;# 
  5415  0E21                     	;# 
  5416  0E22                     	;# 
  5417  0E23                     	;# 
  5418  0E24                     	;# 
  5419  0E25                     	;# 
  5420  0E26                     	;# 
  5421  0E27                     	;# 
  5422  0E28                     	;# 
  5423  0E29                     	;# 
  5424  0E2A                     	;# 
  5425  0E2B                     	;# 
  5426  0E2C                     	;# 
  5427  0E2D                     	;# 
  5428  0E2E                     	;# 
  5429  0E2F                     	;# 
  5430  0E30                     	;# 
  5431  0E31                     	;# 
  5432  0E32                     	;# 
  5433  0E33                     	;# 
  5434  0E34                     	;# 
  5435  0E35                     	;# 
  5436  0E36                     	;# 
  5437  0E37                     	;# 
  5438  0E8F                     	;# 
  5439  0E90                     	;# 
  5440  0E91                     	;# 
  5441  0E92                     	;# 
  5442  0E93                     	;# 
  5443  0E94                     	;# 
  5444  0E95                     	;# 
  5445  0E96                     	;# 
  5446  0E97                     	;# 
  5447  0E9C                     	;# 
  5448  0E9D                     	;# 
  5449  0E9E                     	;# 
  5450  0EA1                     	;# 
  5451  0EA2                     	;# 
  5452  0EA3                     	;# 
  5453  0EA4                     	;# 
  5454  0EA5                     	;# 
  5455  0EA9                     	;# 
  5456  0EAA                     	;# 
  5457  0EAB                     	;# 
  5458  0EAC                     	;# 
  5459  0EB1                     	;# 
  5460  0EB2                     	;# 
  5461  0EB3                     	;# 
  5462  0EB8                     	;# 
  5463  0EB9                     	;# 
  5464  0EBA                     	;# 
  5465  0EBB                     	;# 
  5466  0EBC                     	;# 
  5467  0EBD                     	;# 
  5468  0EBE                     	;# 
  5469  0EC3                     	;# 
  5470  0EC5                     	;# 
  5471  0EC6                     	;# 
  5472  0EC7                     	;# 
  5473  0EC8                     	;# 
  5474  0EC9                     	;# 
  5475  0ECA                     	;# 
  5476  0ECB                     	;# 
  5477  0ECC                     	;# 
  5478  0F10                     	;# 
  5479  0F11                     	;# 
  5480  0F12                     	;# 
  5481  0F13                     	;# 
  5482  0F14                     	;# 
  5483  0F15                     	;# 
  5484  0F16                     	;# 
  5485  0F17                     	;# 
  5486  0F18                     	;# 
  5487  0F19                     	;# 
  5488  0F1A                     	;# 
  5489  0F1B                     	;# 
  5490  0F1C                     	;# 
  5491  0F1D                     	;# 
  5492  0F1E                     	;# 
  5493  0F1F                     	;# 
  5494  0F20                     	;# 
  5495  0F21                     	;# 
  5496  0F22                     	;# 
  5497  0F23                     	;# 
  5498  0F24                     	;# 
  5499  0F25                     	;# 
  5500  0F26                     	;# 
  5501  0F27                     	;# 
  5502  0F28                     	;# 
  5503  0F29                     	;# 
  5504  0F2A                     	;# 
  5505  0F2B                     	;# 
  5506  0F2C                     	;# 
  5507  0F2D                     	;# 
  5508  0F2E                     	;# 
  5509  0F2F                     	;# 
  5510  0F30                     	;# 
  5511  0F31                     	;# 
  5512  0F32                     	;# 
  5513  0F38                     	;# 
  5514  0F39                     	;# 
  5515  0F3A                     	;# 
  5516  0F3B                     	;# 
  5517  0F3C                     	;# 
  5518  0F3D                     	;# 
  5519  0F3E                     	;# 
  5520  0F3F                     	;# 
  5521  0F40                     	;# 
  5522  0F41                     	;# 
  5523  0F43                     	;# 
  5524  0F44                     	;# 
  5525  0F45                     	;# 
  5526  0F46                     	;# 
  5527  0F47                     	;# 
  5528  0F48                     	;# 
  5529  0F49                     	;# 
  5530  0F4A                     	;# 
  5531  0F4B                     	;# 
  5532  0F4C                     	;# 
  5533  0F4E                     	;# 
  5534  0F4F                     	;# 
  5535  0F50                     	;# 
  5536  0F51                     	;# 
  5537  0F52                     	;# 
  5538  0F53                     	;# 
  5539  0F54                     	;# 
  5540  0F55                     	;# 
  5541  0F56                     	;# 
  5542  0F57                     	;# 
  5543  0F59                     	;# 
  5544  0F5A                     	;# 
  5545  0F5B                     	;# 
  5546  0F5C                     	;# 
  5547  0F5D                     	;# 
  5548  0F61                     	;# 
  5549  0F62                     	;# 
  5550  0F64                     	;# 
  5551  0F65                     	;# 
  5552  0F66                     	;# 
  5553  0F67                     	;# 
  5554  0F68                     	;# 
  5555  0F69                     	;# 
  5556  0F6A                     	;# 
  5557  0F6B                     	;# 
  5558  0F6C                     	;# 
  5559  0F6D                     	;# 
  5560  0FE4                     	;# 
  5561  0FE5                     	;# 
  5562  0FE6                     	;# 
  5563  0FE7                     	;# 
  5564  0FE8                     	;# 
  5565  0FE9                     	;# 
  5566  0FEA                     	;# 
  5567  0FEB                     	;# 
  5568  0FED                     	;# 
  5569  0FEE                     	;# 
  5570  0FEF                     	;# 
  5571                           
  5572                           	psect	stringtext1
  5573  039F                     __pstringtext1:	
  5574  039F                     _fsmStateTable:	
  5575  039F  3489               	retlw	low _do_I2C_IDLE
  5576  03A0  3405               	retlw	high _do_I2C_IDLE
  5577  03A1  342A               	retlw	low _do_I2C_SEND_ADR_READ
  5578  03A2  3405               	retlw	high _do_I2C_SEND_ADR_READ
  5579  03A3  343B               	retlw	low _do_I2C_SEND_ADR_WRITE
  5580  03A4  3405               	retlw	high _do_I2C_SEND_ADR_WRITE
  5581  03A5  3457               	retlw	low _do_I2C_TX
  5582  03A6  3401               	retlw	high _do_I2C_TX
  5583  03A7  34AB               	retlw	low _do_I2C_RX
  5584  03A8  3401               	retlw	high _do_I2C_RX
  5585  03A9  3453               	retlw	low _do_I2C_RCEN
  5586  03AA  3405               	retlw	high _do_I2C_RCEN
  5587  03AB  3478               	retlw	low _do_I2C_TX_EMPTY
  5588  03AC  3402               	retlw	high _do_I2C_TX_EMPTY
  5589  03AD  3484               	retlw	low _do_I2C_SEND_RESTART_READ
  5590  03AE  3405               	retlw	high _do_I2C_SEND_RESTART_READ
  5591  03AF  347F               	retlw	low _do_I2C_SEND_RESTART_WRITE
  5592  03B0  3405               	retlw	high _do_I2C_SEND_RESTART_WRITE
  5593  03B1  347A               	retlw	low _do_I2C_SEND_RESTART
  5594  03B2  3405               	retlw	high _do_I2C_SEND_RESTART
  5595  03B3  3475               	retlw	low _do_I2C_SEND_STOP
  5596  03B4  3405               	retlw	high _do_I2C_SEND_STOP
  5597  03B5  3470               	retlw	low _do_I2C_DO_ACK
  5598  03B6  3405               	retlw	high _do_I2C_DO_ACK
  5599  03B7  346B               	retlw	low _do_I2C_DO_NACK_STOP
  5600  03B8  3405               	retlw	high _do_I2C_DO_NACK_STOP
  5601  03B9  3466               	retlw	low _do_I2C_DO_NACK_RESTART
  5602  03BA  3405               	retlw	high _do_I2C_DO_NACK_RESTART
  5603  03BB  3443               	retlw	low _do_I2C_RESET
  5604  03BC  3405               	retlw	high _do_I2C_RESET
  5605  03BD  34DB               	retlw	low _do_I2C_DO_ADDRESS_NACK
  5606  03BE  3402               	retlw	high _do_I2C_DO_ADDRESS_NACK
  5607  03BF                     __end_of_fsmStateTable:	
  5608  0013                     _TRISCbits	set	19
  5609  0016                     _LATAbits	set	22
  5610  0014                     _TRISD	set	20
  5611  0013                     _TRISC	set	19
  5612  0012                     _TRISB	set	18
  5613  0011                     _TRISA	set	17
  5614  0015                     _TRISE	set	21
  5615  0018                     _LATC	set	24
  5616  0017                     _LATB	set	23
  5617  0016                     _LATA	set	22
  5618  0019                     _LATD	set	25
  5619  001A                     _LATE	set	26
  5620  000B                     _INTCONbits	set	11
  5621  018E                     _SSP1MSK	set	398
  5622  018D                     _SSP1ADD	set	397
  5623  018F                     _SSP1STAT	set	399
  5624  0191                     _SSP1CON2	set	401
  5625  0190                     _SSP1CON1bits	set	400
  5626  018C                     _SSP1BUF	set	396
  5627  018F                     _SSP1STATbits	set	399
  5628  0191                     _SSP1CON2bits	set	401
  5629  0190                     _SSP1CON1	set	400
  5630  020F                     _T1GCONbits	set	527
  5631  020E                     _T1CONbits	set	526
  5632  020E                     _T1CON	set	526
  5633  020C                     _TMR1L	set	524
  5634  020D                     _TMR1H	set	525
  5635  0211                     _T1CLK	set	529
  5636  0210                     _T1GATE	set	528
  5637  020F                     _T1GCON	set	527
  5638  0719                     _PIE3bits	set	1817
  5639  071A                     _PIE4bits	set	1818
  5640  0710                     _PIR4bits	set	1808
  5641  070F                     _PIR3bits	set	1807
  5642  079B                     _PMD5	set	1947
  5643  079A                     _PMD4	set	1946
  5644  0799                     _PMD3	set	1945
  5645  0798                     _PMD2	set	1944
  5646  0797                     _PMD1	set	1943
  5647  0796                     _PMD0	set	1942
  5648  081F                     _NVMCON2	set	2079
  5649  081C                     _NVMDATL	set	2076
  5650  081D                     _NVMDATH	set	2077
  5651  081E                     _NVMCON1bits	set	2078
  5652  081B                     _NVMADRH	set	2075
  5653  081A                     _NVMADRL	set	2074
  5654  0892                     _OSCTUNE	set	2194
  5655  0893                     _OSCFRQ	set	2195
  5656  0891                     _OSCEN	set	2193
  5657  088F                     _OSCCON3	set	2191
  5658  088D                     _OSCCON1	set	2189
  5659  0EC6                     _SSP1DATPPS	set	3782
  5660  0EC5                     _SSP1CLKPPS	set	3781
  5661  0F24                     _RC4PPS	set	3876
  5662  0F23                     _RC3PPS	set	3875
  5663  0F68                     _INLVLE	set	3944
  5664  0F5D                     _INLVLD	set	3933
  5665  0F52                     _INLVLC	set	3922
  5666  0F47                     _INLVLB	set	3911
  5667  0F3C                     _INLVLA	set	3900
  5668  0F67                     _SLRCONE	set	3943
  5669  0F5C                     _SLRCOND	set	3932
  5670  0F51                     _SLRCONC	set	3921
  5671  0F46                     _SLRCONB	set	3910
  5672  0F3B                     _SLRCONA	set	3899
  5673  0F5B                     _ODCOND	set	3931
  5674  0F50                     _ODCONC	set	3920
  5675  0F45                     _ODCONB	set	3909
  5676  0F3A                     _ODCONA	set	3898
  5677  0F66                     _ODCONE	set	3942
  5678  0F4F                     _WPUC	set	3919
  5679  0F39                     _WPUA	set	3897
  5680  0F44                     _WPUB	set	3908
  5681  0F65                     _WPUE	set	3941
  5682  0F5A                     _WPUD	set	3930
  5683  0F38                     _ANSELA	set	3896
  5684  0F64                     _ANSELE	set	3940
  5685  0F43                     _ANSELB	set	3907
  5686  0F4E                     _ANSELC	set	3918
  5687  0F59                     _ANSELD	set	3929
  5688  7A7C                     _WPUC4	set	31356
  5689  7A7B                     _WPUC3	set	31355
  5690                           
  5691                           ; #config settings
  5692  0000                     
  5693                           	psect	cinit
  5694  0038                     start_initialization:	
  5695  0038                     __initialization:	
  5696                           
  5697                           ; Clear objects allocated to BITCOMMON
  5698  0038  01FD               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  5699                           
  5700                           ; Clear objects allocated to COMMON
  5701  0039  01F7               	clrf	__pbssCOMMON& (0+127)
  5702  003A  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  5703  003B  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  5704  003C  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
  5705  003D  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
  5706  003E  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
  5707                           
  5708                           ; Clear objects allocated to BANK0
  5709  003F  3020               	movlw	low __pbssBANK0
  5710  0040  0084               	movwf	4
  5711  0041  3000               	movlw	high __pbssBANK0
  5712  0042  0085               	movwf	5
  5713  0043  3030               	movlw	48
  5714  0044  3185  255A  3180   	fcall	clear_ram0
  5715  0047                     end_of_initialization:	
  5716                           ;End of C runtime variable initialization code
  5717                           
  5718  0047                     __end_of__initialization:	
  5719  0047  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5720  0048  0020               	movlb	0
  5721  0049  3180  284B         	ljmp	_main	;jump to C main() function
  5722                           
  5723                           	psect	bitbssCOMMON
  5724  03E8                     __pbitbssCOMMON:	
  5725  03E8                     _running:	
  5726  03E8                     	ds	1
  5727  03E9                     _nreg_init:	
  5728  03E9                     	ds	1
  5729  03EA                     _configuration_mode:	
  5730  03EA                     	ds	1
  5731  03EB                     _half:	
  5732  03EB                     	ds	1
  5733                           
  5734                           	psect	bssCOMMON
  5735  0077                     __pbssCOMMON:	
  5736  0077                     _TMR1_InterruptHandler:	
  5737  0077                     	ds	2
  5738  0079                     _timer1ReloadVal:	
  5739  0079                     	ds	2
  5740  007B                     _i2c1_driver_busCollisionISR:	
  5741  007B                     	ds	2
  5742                           
  5743                           	psect	bssBANK0
  5744  0020                     __pbssBANK0:	
  5745  0020                     _i2c_status:	
  5746  0020                     	ds	29
  5747  003D                     _ring_byte:	
  5748  003D                     	ds	5
  5749  0042                     _i2c1_driver_i2cISR:	
  5750  0042                     	ds	2
  5751  0044                     _aux1:	
  5752  0044                     	ds	1
  5753  0045                     _aux:	
  5754  0045                     	ds	1
  5755  0046                     _lum:	
  5756  0046                     	ds	1
  5757  0047                     _temp:	
  5758  0047                     	ds	1
  5759  0048                     _pmon:	
  5760  0048                     	ds	1
  5761  0049                     _nreg_pt:	
  5762  0049                     	ds	1
  5763  004A                     _nreg:	
  5764  004A                     	ds	1
  5765  004B                     _last1m:	
  5766  004B                     	ds	1
  5767  004C                     _last5s:	
  5768  004C                     	ds	1
  5769  004D                     _seg:	
  5770  004D                     	ds	1
  5771  004E                     _clkm:	
  5772  004E                     	ds	1
  5773  004F                     _clkh:	
  5774  004F                     	ds	1
  5775                           
  5776                           	psect	clrtext
  5777  055A                     clear_ram0:	
  5778                           ;	Called with FSR0 containing the base address, and
  5779                           ;	WREG with the size to clear
  5780                           
  5781  055A  0064               	clrwdt	;clear the watchdog before getting into this loop
  5782  055B                     clrloop0:	
  5783  055B  0180               	clrf	0	;clear RAM location pointed to by FSR
  5784  055C  3101               	addfsr 0,1
  5785  055D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5786  055E  2D5B               	goto	clrloop0	;have we reached the end yet?
  5787  055F  3400               	retlw	0	;all done for this memory range, return
  5788                           
  5789                           	psect	cstackCOMMON
  5790  0070                     __pcstackCOMMON:	
  5791  0070                     ?_i2c1_driver_open:	
  5792  0070                     ?_i2c1_driver_isNACK:	
  5793                           ; 1 bit 
  5794                           
  5795  0070                     ?_setCallBack:	
  5796                           ; 1 bit 
  5797                           
  5798  0070                     ?_mssp1_clearIRQ:	
  5799                           ; 1 bytes @ 0x0
  5800                           
  5801  0070                     ??_mssp1_clearIRQ:	
  5802                           ; 1 bytes @ 0x0
  5803                           
  5804  0070                     ?_i2c_busCollisionISR:	
  5805                           ; 1 bytes @ 0x0
  5806                           
  5807  0070                     ??_i2c_busCollisionISR:	
  5808                           ; 1 bytes @ 0x0
  5809                           
  5810  0070                     ?_i2c_ISR:	
  5811                           ; 1 bytes @ 0x0
  5812                           
  5813  0070                     ?_i2c1_driver_resetBus:	
  5814                           ; 1 bytes @ 0x0
  5815                           
  5816  0070                     ??_i2c1_driver_resetBus:	
  5817                           ; 1 bytes @ 0x0
  5818                           
  5819  0070                     ?_i2c1_driver_restart:	
  5820                           ; 1 bytes @ 0x0
  5821                           
  5822  0070                     ??_i2c1_driver_restart:	
  5823                           ; 1 bytes @ 0x0
  5824                           
  5825  0070                     ?_i2c1_driver_stop:	
  5826                           ; 1 bytes @ 0x0
  5827                           
  5828  0070                     ??_i2c1_driver_stop:	
  5829                           ; 1 bytes @ 0x0
  5830                           
  5831  0070                     ?_i2c1_driver_TXData:	
  5832                           ; 1 bytes @ 0x0
  5833                           
  5834  0070                     ??_i2c1_driver_TXData:	
  5835                           ; 1 bytes @ 0x0
  5836                           
  5837  0070                     ?_i2c1_driver_startRX:	
  5838                           ; 1 bytes @ 0x0
  5839                           
  5840  0070                     ??_i2c1_driver_startRX:	
  5841                           ; 1 bytes @ 0x0
  5842                           
  5843  0070                     ?_i2c1_driver_sendACK:	
  5844                           ; 1 bytes @ 0x0
  5845                           
  5846  0070                     ??_i2c1_driver_sendACK:	
  5847                           ; 1 bytes @ 0x0
  5848                           
  5849  0070                     ?_i2c1_driver_sendNACK:	
  5850                           ; 1 bytes @ 0x0
  5851                           
  5852  0070                     ??_i2c1_driver_sendNACK:	
  5853                           ; 1 bytes @ 0x0
  5854                           
  5855  0070                     ??_i2c1_driver_isNACK:	
  5856                           ; 1 bytes @ 0x0
  5857                           
  5858  0070                     ?_i2c1_driver_getRXData:	
  5859                           ; 1 bytes @ 0x0
  5860                           
  5861  0070                     ??_i2c1_driver_getRXData:	
  5862                           ; 1 bytes @ 0x0
  5863                           
  5864  0070                     ?_mssp1_setIRQ:	
  5865                           ; 1 bytes @ 0x0
  5866                           
  5867  0070                     ??_mssp1_setIRQ:	
  5868                           ; 1 bytes @ 0x0
  5869                           
  5870  0070                     ?_i2c1_driver_clearBusCollision:	
  5871                           ; 1 bytes @ 0x0
  5872                           
  5873  0070                     ??_i2c1_driver_clearBusCollision:	
  5874                           ; 1 bytes @ 0x0
  5875                           
  5876  0070                     ?_TMR1_DefaultInterruptHandler:	
  5877                           ; 1 bytes @ 0x0
  5878                           
  5879  0070                     ??_TMR1_DefaultInterruptHandler:	
  5880                           ; 1 bytes @ 0x0
  5881                           
  5882  0070                     ?_PMD_Initialize:	
  5883                           ; 1 bytes @ 0x0
  5884                           
  5885  0070                     ?_PIN_MANAGER_Initialize:	
  5886                           ; 1 bytes @ 0x0
  5887                           
  5888  0070                     ?_OSCILLATOR_Initialize:	
  5889                           ; 1 bytes @ 0x0
  5890                           
  5891  0070                     ?_update_clock:	
  5892                           ; 1 bytes @ 0x0
  5893                           
  5894  0070                     ??_update_clock:	
  5895                           ; 1 bytes @ 0x0
  5896                           
  5897  0070                     ?_cksum:	
  5898                           ; 1 bytes @ 0x0
  5899                           
  5900  0070                     ?_reset_recv:	
  5901                           ; 1 bytes @ 0x0
  5902                           
  5903  0070                     ?_cksum_w:	
  5904                           ; 1 bytes @ 0x0
  5905                           
  5906  0070                     ?_push_ring:	
  5907                           ; 1 bytes @ 0x0
  5908                           
  5909  0070                     ?_i2c_setBuffer:	
  5910                           ; 1 bytes @ 0x0
  5911                           
  5912  0070                     ?_do_I2C_RESET:	
  5913                           ; 1 bytes @ 0x0
  5914                           
  5915  0070                     ??_do_I2C_RESET:	
  5916                           ; 1 bytes @ 0x0
  5917                           
  5918  0070                     ?_do_I2C_IDLE:	
  5919                           ; 1 bytes @ 0x0
  5920                           
  5921  0070                     ??_do_I2C_IDLE:	
  5922                           ; 1 bytes @ 0x0
  5923                           
  5924  0070                     ?_do_I2C_SEND_RESTART_READ:	
  5925                           ; 1 bytes @ 0x0
  5926                           
  5927  0070                     ??_do_I2C_SEND_RESTART_READ:	
  5928                           ; 1 bytes @ 0x0
  5929                           
  5930  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  5931                           ; 1 bytes @ 0x0
  5932                           
  5933  0070                     ??_do_I2C_SEND_RESTART_WRITE:	
  5934                           ; 1 bytes @ 0x0
  5935                           
  5936  0070                     ?_do_I2C_SEND_RESTART:	
  5937                           ; 1 bytes @ 0x0
  5938                           
  5939  0070                     ??_do_I2C_SEND_RESTART:	
  5940                           ; 1 bytes @ 0x0
  5941                           
  5942  0070                     ?_do_I2C_SEND_STOP:	
  5943                           ; 1 bytes @ 0x0
  5944                           
  5945  0070                     ??_do_I2C_SEND_STOP:	
  5946                           ; 1 bytes @ 0x0
  5947                           
  5948  0070                     ?_do_I2C_SEND_ADR_READ:	
  5949                           ; 1 bytes @ 0x0
  5950                           
  5951  0070                     ??_do_I2C_SEND_ADR_READ:	
  5952                           ; 1 bytes @ 0x0
  5953                           
  5954  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  5955                           ; 1 bytes @ 0x0
  5956                           
  5957  0070                     ?_do_I2C_RCEN:	
  5958                           ; 1 bytes @ 0x0
  5959                           
  5960  0070                     ??_do_I2C_RCEN:	
  5961                           ; 1 bytes @ 0x0
  5962                           
  5963  0070                     ?_do_I2C_DO_ACK:	
  5964                           ; 1 bytes @ 0x0
  5965                           
  5966  0070                     ??_do_I2C_DO_ACK:	
  5967                           ; 1 bytes @ 0x0
  5968                           
  5969  0070                     ?_do_I2C_DO_NACK_STOP:	
  5970                           ; 1 bytes @ 0x0
  5971                           
  5972  0070                     ??_do_I2C_DO_NACK_STOP:	
  5973                           ; 1 bytes @ 0x0
  5974                           
  5975  0070                     ?_do_I2C_DO_NACK_RESTART:	
  5976                           ; 1 bytes @ 0x0
  5977                           
  5978  0070                     ??_do_I2C_DO_NACK_RESTART:	
  5979                           ; 1 bytes @ 0x0
  5980                           
  5981  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  5982                           ; 1 bytes @ 0x0
  5983                           
  5984  0070                     ??_do_I2C_DO_ADDRESS_NACK:	
  5985                           ; 1 bytes @ 0x0
  5986                           
  5987  0070                     ?_do_I2C_TX:	
  5988                           ; 1 bytes @ 0x0
  5989                           
  5990  0070                     ?_do_I2C_RX:	
  5991                           ; 1 bytes @ 0x0
  5992                           
  5993  0070                     ??_do_I2C_RX:	
  5994                           ; 1 bytes @ 0x0
  5995                           
  5996  0070                     ?_do_I2C_TX_EMPTY:	
  5997                           ; 1 bytes @ 0x0
  5998                           
  5999  0070                     ??_do_I2C_TX_EMPTY:	
  6000                           ; 1 bytes @ 0x0
  6001                           
  6002  0070                     ?_TMR1_Initialize:	
  6003                           ; 1 bytes @ 0x0
  6004                           
  6005  0070                     ?_TMR1_WriteTimer:	
  6006                           ; 1 bytes @ 0x0
  6007                           
  6008  0070                     ?_TMR1_ISR:	
  6009                           ; 1 bytes @ 0x0
  6010                           
  6011  0070                     ?_INTERRUPT_InterruptManager:	
  6012                           ; 1 bytes @ 0x0
  6013                           
  6014  0070                     ?_SYSTEM_Initialize:	
  6015                           ; 1 bytes @ 0x0
  6016                           
  6017  0070                     ?_h_clock:	
  6018                           ; 1 bytes @ 0x0
  6019                           
  6020  0070                     ?_main:	
  6021                           ; 1 bytes @ 0x0
  6022                           
  6023  0070                     i2c1_driver_TXData@d:	
  6024                           ; 1 bytes @ 0x0
  6025                           
  6026  0070                     i2c_setBuffer@bufferSize:	
  6027                           ; 1 bytes @ 0x0
  6028                           
  6029  0070                     setCallBack@cb:	
  6030                           ; 2 bytes @ 0x0
  6031                           
  6032  0070                     TMR1_WriteTimer@timerVal:	
  6033                           ; 2 bytes @ 0x0
  6034                           
  6035                           
  6036                           ; 2 bytes @ 0x0
  6037  0070                     	ds	1
  6038  0071                     ??_do_I2C_SEND_ADR_WRITE:	
  6039  0071                     ??_do_I2C_TX:	
  6040                           ; 1 bytes @ 0x1
  6041                           
  6042  0071                     ??_h_clock:	
  6043                           ; 1 bytes @ 0x1
  6044                           
  6045                           
  6046                           ; 1 bytes @ 0x1
  6047  0071                     	ds	1
  6048  0072                     ??_i2c_setBuffer:	
  6049  0072                     ??_TMR1_WriteTimer:	
  6050                           ; 1 bytes @ 0x2
  6051                           
  6052  0072                     ??_TMR1_ISR:	
  6053                           ; 1 bytes @ 0x2
  6054                           
  6055  0072                     setCallBack@p:	
  6056                           ; 1 bytes @ 0x2
  6057                           
  6058                           
  6059                           ; 1 bytes @ 0x2
  6060  0072                     	ds	1
  6061  0073                     ??_setCallBack:	
  6062  0073                     i2c_setBuffer@buffer:	
  6063                           ; 1 bytes @ 0x3
  6064                           
  6065                           
  6066                           ; 1 bytes @ 0x3
  6067  0073                     	ds	1
  6068  0074                     ??_i2c_ISR:	
  6069  0074                     setCallBack@idx:	
  6070                           ; 1 bytes @ 0x4
  6071                           
  6072                           
  6073                           ; 1 bytes @ 0x4
  6074  0074                     	ds	1
  6075  0075                     ??_i2c_setDataCompleteCallback:	
  6076                           
  6077                           ; 1 bytes @ 0x5
  6078  0075                     	ds	1
  6079  0076                     ?_returnStop:	
  6080  0076                     ?_returnReset:	
  6081                           ; 1 bytes @ 0x6
  6082                           
  6083  0076                     ?_i2c_restartWrite:	
  6084                           ; 1 bytes @ 0x6
  6085                           
  6086  0076                     ?_wr1RegCompleteHandler:	
  6087                           ; 1 bytes @ 0x6
  6088                           
  6089  0076                     ?_rd1RegCompleteHandler:	
  6090                           ; 1 bytes @ 0x6
  6091                           
  6092  0076                     ?_rd2RegCompleteHandler:	
  6093                           ; 1 bytes @ 0x6
  6094                           
  6095  0076                     ?_wr2RegCompleteHandler:	
  6096                           ; 1 bytes @ 0x6
  6097                           
  6098  0076                     ?_rdBlkRegCompleteHandler:	
  6099                           ; 1 bytes @ 0x6
  6100                           
  6101  0076                     returnStop@p:	
  6102                           ; 1 bytes @ 0x6
  6103                           
  6104  0076                     returnReset@p:	
  6105                           ; 1 bytes @ 0x6
  6106                           
  6107  0076                     wr1RegCompleteHandler@p:	
  6108                           ; 1 bytes @ 0x6
  6109                           
  6110  0076                     rd1RegCompleteHandler@p:	
  6111                           ; 1 bytes @ 0x6
  6112                           
  6113  0076                     rd2RegCompleteHandler@p:	
  6114                           ; 1 bytes @ 0x6
  6115                           
  6116  0076                     wr2RegCompleteHandler@p:	
  6117                           ; 1 bytes @ 0x6
  6118                           
  6119  0076                     rdBlkRegCompleteHandler@p:	
  6120                           ; 1 bytes @ 0x6
  6121                           
  6122  0076                     i2c_restartWrite@p:	
  6123                           ; 1 bytes @ 0x6
  6124                           
  6125                           
  6126                           ; 1 bytes @ 0x6
  6127  0076                     	ds	1
  6128  0077                     ??_returnStop:	
  6129  0077                     ??_returnReset:	
  6130                           ; 1 bytes @ 0x7
  6131                           
  6132  0077                     ??_i2c_restartWrite:	
  6133                           ; 1 bytes @ 0x7
  6134                           
  6135  0077                     ??_wr1RegCompleteHandler:	
  6136                           ; 1 bytes @ 0x7
  6137                           
  6138  0077                     ??_rd1RegCompleteHandler:	
  6139                           ; 1 bytes @ 0x7
  6140                           
  6141  0077                     ??_rd2RegCompleteHandler:	
  6142                           ; 1 bytes @ 0x7
  6143                           
  6144  0077                     ??_wr2RegCompleteHandler:	
  6145                           ; 1 bytes @ 0x7
  6146                           
  6147  0077                     ??_rdBlkRegCompleteHandler:	
  6148                           ; 1 bytes @ 0x7
  6149                           
  6150  0077                     ??_INTERRUPT_InterruptManager:	
  6151                           ; 1 bytes @ 0x7
  6152                           
  6153                           
  6154                           	psect	cstackBANK0
  6155  0050                     __pcstackBANK0:	
  6156                           ; 1 bytes @ 0x7
  6157                           
  6158  0050                     ??_i2c1_driver_open:	
  6159  0050                     ?_TMR1_SetInterruptHandler:	
  6160                           ; 1 bytes @ 0x0
  6161                           
  6162  0050                     ??_PMD_Initialize:	
  6163                           ; 1 bytes @ 0x0
  6164                           
  6165  0050                     ??_PIN_MANAGER_Initialize:	
  6166                           ; 1 bytes @ 0x0
  6167                           
  6168  0050                     ??_OSCILLATOR_Initialize:	
  6169                           ; 1 bytes @ 0x0
  6170                           
  6171  0050                     ?_i2c_setDataCompleteCallback:	
  6172                           ; 1 bytes @ 0x0
  6173                           
  6174  0050                     ?_DATAEE_ReadByte:	
  6175                           ; 1 bytes @ 0x0
  6176                           
  6177  0050                     ?___bmul:	
  6178                           ; 1 bytes @ 0x0
  6179                           
  6180  0050                     ___bmul@multiplicand:	
  6181                           ; 1 bytes @ 0x0
  6182                           
  6183  0050                     i2c_setDataCompleteCallback@cb:	
  6184                           ; 1 bytes @ 0x0
  6185                           
  6186  0050                     TMR1_SetInterruptHandler@InterruptHandler:	
  6187                           ; 2 bytes @ 0x0
  6188                           
  6189  0050                     DATAEE_ReadByte@bAdd:	
  6190                           ; 2 bytes @ 0x0
  6191                           
  6192                           
  6193                           ; 2 bytes @ 0x0
  6194  0050                     	ds	1
  6195  0051                     ??___bmul:	
  6196                           
  6197                           ; 1 bytes @ 0x1
  6198  0051                     	ds	1
  6199  0052                     ??_TMR1_SetInterruptHandler:	
  6200  0052                     ??_cksum:	
  6201                           ; 1 bytes @ 0x2
  6202                           
  6203  0052                     ??_TMR1_Initialize:	
  6204                           ; 1 bytes @ 0x2
  6205                           
  6206  0052                     ??_SYSTEM_Initialize:	
  6207                           ; 1 bytes @ 0x2
  6208                           
  6209  0052                     ??_DATAEE_ReadByte:	
  6210                           ; 1 bytes @ 0x2
  6211                           
  6212  0052                     i2c_setDataCompleteCallback@p:	
  6213                           ; 1 bytes @ 0x2
  6214                           
  6215  0052                     ___bmul@product:	
  6216                           ; 1 bytes @ 0x2
  6217                           
  6218                           
  6219                           ; 1 bytes @ 0x2
  6220  0052                     	ds	1
  6221  0053                     cksum@res:	
  6222  0053                     ___bmul@multiplier:	
  6223                           ; 1 bytes @ 0x3
  6224                           
  6225                           
  6226                           ; 1 bytes @ 0x3
  6227  0053                     	ds	1
  6228  0054                     ?_read_ring:	
  6229  0054                     read_ring@subindex:	
  6230                           ; 1 bytes @ 0x4
  6231                           
  6232  0054                     cksum@i:	
  6233                           ; 1 bytes @ 0x4
  6234                           
  6235                           
  6236                           ; 2 bytes @ 0x4
  6237  0054                     	ds	1
  6238  0055                     ??_read_ring:	
  6239                           
  6240                           ; 1 bytes @ 0x5
  6241  0055                     	ds	1
  6242  0056                     ?_DATAEE_WriteByte:	
  6243  0056                     DATAEE_WriteByte@bAdd:	
  6244                           ; 1 bytes @ 0x6
  6245                           
  6246                           
  6247                           ; 2 bytes @ 0x6
  6248  0056                     	ds	1
  6249  0057                     read_ring@i:	
  6250                           
  6251                           ; 1 bytes @ 0x7
  6252  0057                     	ds	1
  6253  0058                     DATAEE_WriteByte@bData:	
  6254  0058                     read_ring@index:	
  6255                           ; 1 bytes @ 0x8
  6256                           
  6257                           
  6258                           ; 1 bytes @ 0x8
  6259  0058                     	ds	1
  6260  0059                     ??_DATAEE_WriteByte:	
  6261  0059                     DATAEE_WriteByte@GIEBitValue:	
  6262                           ; 1 bytes @ 0x9
  6263                           
  6264  0059                     read_ring@absindex:	
  6265                           ; 1 bytes @ 0x9
  6266                           
  6267                           
  6268                           ; 1 bytes @ 0x9
  6269  0059                     	ds	1
  6270  005A                     ??_reset_recv:	
  6271  005A                     ??_cksum_w:	
  6272                           ; 1 bytes @ 0xA
  6273                           
  6274  005A                     ??_push_ring:	
  6275                           ; 1 bytes @ 0xA
  6276                           
  6277  005A                     reset_recv@i:	
  6278                           ; 1 bytes @ 0xA
  6279                           
  6280                           
  6281                           ; 2 bytes @ 0xA
  6282  005A                     	ds	1
  6283  005B                     push_ring@i:	
  6284                           
  6285                           ; 1 bytes @ 0xB
  6286  005B                     	ds	1
  6287  005C                     ??_main:	
  6288                           
  6289                           ; 1 bytes @ 0xC
  6290  005C                     	ds	1
  6291                           
  6292                           	psect	maintext
  6293  004B                     __pmaintext:	
  6294 ;;
  6295 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  6296 ;;
  6297 ;; *************** function _main *****************
  6298 ;; Defined at:
  6299 ;;		line 63 in file "main.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;		None
  6302 ;; Auto vars:     Size  Location     Type
  6303 ;;		None
  6304 ;; Return value:  Size  Location     Type
  6305 ;;                  1    wreg      void 
  6306 ;; Registers used:
  6307 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6308 ;; Tracked objects:
  6309 ;;		On entry : B1F/0
  6310 ;;		On exit  : 0/0
  6311 ;;		Unchanged: 0/0
  6312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6314 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6315 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6316 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6317 ;;Total ram usage:        3 bytes
  6318 ;; Hardware stack levels required when called:    9
  6319 ;; This function calls:
  6320 ;;		_DATAEE_ReadByte
  6321 ;;		_DATAEE_WriteByte
  6322 ;;		_SYSTEM_Initialize
  6323 ;;		_TMR1_SetInterruptHandler
  6324 ;;		_cksum
  6325 ;;		_cksum_w
  6326 ;;		_i2c1_driver_open
  6327 ;;		_push_ring
  6328 ;;		_read_ring
  6329 ;;		_reset_recv
  6330 ;; This function is called by:
  6331 ;;		Startup code after reset
  6332 ;; This function uses a non-reentrant model
  6333 ;;
  6334                           
  6335                           
  6336                           ;psect for function _main
  6337  004B                     _main:	
  6338  004B                     l4385:	
  6339                           ;incstack = 0
  6340                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6341                           
  6342                           
  6343                           ;main.c: 65:     clkh = 0; clkm = 0; seg = 0;
  6344  004B  0020               	movlb	0	; select bank0
  6345  004C  01CF               	clrf	_clkh	;volatile
  6346  004D  01CE               	clrf	_clkm	;volatile
  6347  004E  01CD               	clrf	_seg	;volatile
  6348                           
  6349                           ;main.c: 66:     last5s = 0; last1m = 0;
  6350  004F  01CC               	clrf	_last5s	;volatile
  6351  0050  01CB               	clrf	_last1m	;volatile
  6352  0051                     l4387:	
  6353                           
  6354                           ;main.c: 70:     nreg = 0xF000 + 5 * 30 >= 0xF0FF - 10 ? 256 : 5 * 30;
  6355  0051  117D               	bcf	_configuration_mode/(0+8),_configuration_mode& (0+7)
  6356  0052                     l4389:	
  6357  0052                     l879:	
  6358  0052  3096               	movlw	150
  6359  0053  00DC               	movwf	??_main
  6360  0054  085C               	movf	??_main,w
  6361  0055  00CA               	movwf	_nreg
  6362  0056                     l4393:	
  6363                           
  6364                           ;main.c: 71:     nreg_pt = 0;
  6365  0056  01C9               	clrf	_nreg_pt
  6366  0057                     l4395:	
  6367                           
  6368                           ;main.c: 72:     nreg_init = 0;
  6369  0057  10FD               	bcf	_nreg_init/(0+8),_nreg_init& (0+7)
  6370  0058                     l4397:	
  6371                           
  6372                           ;main.c: 74:     pmon = 5;
  6373  0058  3005               	movlw	5
  6374  0059  00DC               	movwf	??_main
  6375  005A  085C               	movf	??_main,w
  6376  005B  00C8               	movwf	_pmon
  6377  005C                     l4399:	
  6378                           
  6379                           ;main.c: 75:     running = 1;
  6380  005C  147D               	bsf	_running/(0+8),_running& (0+7)
  6381                           
  6382                           ;main.c: 76:     temp = 0;
  6383  005D  01C7               	clrf	_temp
  6384                           
  6385                           ;main.c: 77:     lum = 0;
  6386  005E  01C6               	clrf	_lum
  6387  005F                     l4401:	
  6388                           
  6389                           ;main.c: 80:     if(DATAEE_ReadByte(0xF0FF - 10) == 0xAB) {
  6390  005F  30F5               	movlw	245
  6391  0060  00D0               	movwf	DATAEE_ReadByte@bAdd
  6392  0061  30F0               	movlw	240
  6393  0062  00D1               	movwf	DATAEE_ReadByte@bAdd+1
  6394  0063  3184  24EB  3180   	fcall	_DATAEE_ReadByte
  6395  0066  3AAB               	xorlw	171
  6396  0067  1D03               	skipz
  6397  0068  286A               	goto	u2141
  6398  0069  286B               	goto	u2140
  6399  006A                     u2141:	
  6400  006A  289E               	goto	l4407
  6401  006B                     u2140:	
  6402  006B                     l4403:	
  6403                           
  6404                           ;main.c: 81:         if(DATAEE_ReadByte(0xF0FF) == cksum()) {
  6405  006B  3183  23BF  3180   	fcall	_cksum
  6406  006E  0020               	movlb	0	; select bank0
  6407  006F  00DC               	movwf	??_main
  6408  0070  30FF               	movlw	255
  6409  0071  00D0               	movwf	DATAEE_ReadByte@bAdd
  6410  0072  30F0               	movlw	240
  6411  0073  00D1               	movwf	DATAEE_ReadByte@bAdd+1
  6412  0074  3184  24EB  3180   	fcall	_DATAEE_ReadByte
  6413  0077  0020               	movlb	0	; select bank0
  6414  0078  065C               	xorwf	??_main,w
  6415  0079  1D03               	skipz
  6416  007A  287C               	goto	u2151
  6417  007B  287D               	goto	u2150
  6418  007C                     u2151:	
  6419  007C  289E               	goto	l4407
  6420  007D                     u2150:	
  6421  007D                     l4405:	
  6422                           
  6423                           ;main.c: 82:             clkh = DATAEE_ReadByte(0xF0FF - 10 + 1);
  6424  007D  30F6               	movlw	246
  6425  007E  00D0               	movwf	DATAEE_ReadByte@bAdd
  6426  007F  30F0               	movlw	240
  6427  0080  00D1               	movwf	DATAEE_ReadByte@bAdd+1
  6428  0081  3184  24EB  3180   	fcall	_DATAEE_ReadByte
  6429  0084  0020               	movlb	0	; select bank0
  6430  0085  00DC               	movwf	??_main
  6431  0086  085C               	movf	??_main,w
  6432  0087  00CF               	movwf	_clkh	;volatile
  6433                           
  6434                           ;main.c: 83:             clkm = DATAEE_ReadByte(0xF0FF - 10 + 2);;
  6435  0088  30F7               	movlw	247
  6436  0089  00D0               	movwf	DATAEE_ReadByte@bAdd
  6437  008A  30F0               	movlw	240
  6438  008B  00D1               	movwf	DATAEE_ReadByte@bAdd+1
  6439  008C  3184  24EB  3180   	fcall	_DATAEE_ReadByte
  6440  008F  0020               	movlb	0	; select bank0
  6441  0090  00DC               	movwf	??_main
  6442  0091  085C               	movf	??_main,w
  6443  0092  00CE               	movwf	_clkm	;volatile
  6444                           
  6445                           ;main.c: 84:             nreg_pt = DATAEE_ReadByte(0xF0FF - 10 + 3);;
  6446  0093  30F8               	movlw	248
  6447  0094  00D0               	movwf	DATAEE_ReadByte@bAdd
  6448  0095  30F0               	movlw	240
  6449  0096  00D1               	movwf	DATAEE_ReadByte@bAdd+1
  6450  0097  3184  24EB  3180   	fcall	_DATAEE_ReadByte
  6451  009A  0020               	movlb	0	; select bank0
  6452  009B  00DC               	movwf	??_main
  6453  009C  085C               	movf	??_main,w
  6454  009D  00C9               	movwf	_nreg_pt
  6455  009E                     l4407:	
  6456                           
  6457                           ;main.c: 88:     reset_recv();
  6458  009E  3183  23DF  3180   	fcall	_reset_recv
  6459  00A1                     l4409:	
  6460                           
  6461                           ;main.c: 91:     DATAEE_WriteByte(0xF0FF - 10, 0xAB);
  6462  00A1  30F5               	movlw	245
  6463  00A2  0020               	movlb	0	; select bank0
  6464  00A3  00D6               	movwf	DATAEE_WriteByte@bAdd
  6465  00A4  30F0               	movlw	240
  6466  00A5  00D7               	movwf	DATAEE_WriteByte@bAdd+1
  6467  00A6  30AB               	movlw	171
  6468  00A7  00DC               	movwf	??_main
  6469  00A8  085C               	movf	??_main,w
  6470  00A9  00D8               	movwf	DATAEE_WriteByte@bData
  6471  00AA  3183  2357  3180   	fcall	_DATAEE_WriteByte
  6472  00AD                     l4411:	
  6473                           
  6474                           ;main.c: 92:     cksum_w();
  6475  00AD  3184  24CB  3180   	fcall	_cksum_w
  6476  00B0                     l4413:	
  6477                           
  6478                           ;main.c: 94:     SYSTEM_Initialize();
  6479  00B0  3185  2508  3180   	fcall	_SYSTEM_Initialize
  6480  00B3                     l4415:	
  6481                           
  6482                           ;main.c: 95:     (INTCONbits.GIE = 1);
  6483  00B3  178B               	bsf	11,7	;volatile
  6484  00B4                     l4417:	
  6485                           
  6486                           ;main.c: 96:     (INTCONbits.PEIE = 1);
  6487  00B4  170B               	bsf	11,6	;volatile
  6488  00B5                     l4419:	
  6489                           
  6490                           ;main.c: 98:     TMR1_SetInterruptHandler(h_clock);
  6491  00B5  3030               	movlw	low _h_clock
  6492  00B6  0020               	movlb	0	; select bank0
  6493  00B7  00D0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  6494  00B8  3004               	movlw	high _h_clock
  6495  00B9  00D1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  6496  00BA  3185  2560  3180   	fcall	_TMR1_SetInterruptHandler
  6497  00BD                     l4421:	
  6498                           
  6499                           ;main.c: 101:     i2c1_driver_open();
  6500  00BD  3185  2515  3180   	fcall	_i2c1_driver_open
  6501  00C0                     l4423:	
  6502                           
  6503                           ;main.c: 102:     TRISCbits.TRISC3 = 1;
  6504  00C0  0020               	movlb	0	; select bank0
  6505  00C1  1593               	bsf	19,3	;volatile
  6506  00C2                     l4425:	
  6507                           
  6508                           ;main.c: 103:     TRISCbits.TRISC4 = 1;
  6509  00C2  1613               	bsf	19,4	;volatile
  6510  00C3                     l4427:	
  6511                           
  6512                           ;main.c: 104:     WPUC3 = 1;
  6513  00C3  003E               	movlb	30	; select bank30
  6514  00C4  15CF               	bsf	79,3	;volatile
  6515  00C5                     l4429:	
  6516                           
  6517                           ;main.c: 105:     WPUC4 = 1;
  6518  00C5  164F               	bsf	79,4	;volatile
  6519                           
  6520                           ;main.c: 107:     while (running)
  6521  00C6  2951               	goto	l882
  6522  00C7                     l4431:	
  6523                           
  6524                           ;main.c: 113:         if(pmon) {
  6525  00C7  0020               	movlb	0	; select bank0
  6526  00C8  0848               	movf	_pmon,w
  6527  00C9  1903               	btfsc	3,2
  6528  00CA  28CC               	goto	u2161
  6529  00CB  28CD               	goto	u2160
  6530  00CC                     u2161:	
  6531  00CC  2924               	goto	l885
  6532  00CD                     u2160:	
  6533  00CD                     l4433:	
  6534                           
  6535                           ;main.c: 114:             (INTCONbits.GIE = 0);
  6536  00CD  138B               	bcf	11,7	;volatile
  6537  00CE                     l4435:	
  6538                           
  6539                           ;main.c: 115:             if(last5s >= pmon) {
  6540  00CE  0848               	movf	_pmon,w
  6541  00CF  024C               	subwf	_last5s,w	;volatile
  6542  00D0  1C03               	skipc
  6543  00D1  28D3               	goto	u2171
  6544  00D2  28D4               	goto	u2170
  6545  00D3                     u2171:	
  6546  00D3  2923               	goto	l886
  6547  00D4                     u2170:	
  6548  00D4                     l4437:	
  6549                           
  6550                           ;main.c: 116:                 last5s = 0;
  6551  00D4  01CC               	clrf	_last5s	;volatile
  6552  00D5                     l4439:	
  6553                           
  6554                           ;main.c: 117:                (INTCONbits.GIE = 1);
  6555  00D5  178B               	bsf	11,7	;volatile
  6556  00D6                     l4441:	
  6557                           
  6558                           ;main.c: 120:                 __nop();
  6559  00D6  0000               	nop
  6560  00D7                     l4443:	
  6561                           
  6562                           ;main.c: 121:                 temp++;
  6563  00D7  3001               	movlw	1
  6564  00D8  0020               	movlb	0	; select bank0
  6565  00D9  00DC               	movwf	??_main
  6566  00DA  085C               	movf	??_main,w
  6567  00DB  07C7               	addwf	_temp,f
  6568  00DC                     l4445:	
  6569                           
  6570                           ;main.c: 122:                 __nop();
  6571  00DC  0000               	nop
  6572  00DD                     l4447:	
  6573                           
  6574                           ;main.c: 127:                 if (temp != read_ring(0, 3) || lum != read_ring(0, 4)) {
  6575  00DD  3003               	movlw	3
  6576  00DE  0020               	movlb	0	; select bank0
  6577  00DF  00DC               	movwf	??_main
  6578  00E0  085C               	movf	??_main,w
  6579  00E1  00D4               	movwf	read_ring@subindex
  6580  00E2  3000               	movlw	0
  6581  00E3  3182  223A  3180   	fcall	_read_ring
  6582  00E6  0020               	movlb	0	; select bank0
  6583  00E7  0647               	xorwf	_temp,w
  6584  00E8  1D03               	skipz
  6585  00E9  28EB               	goto	u2181
  6586  00EA  28EC               	goto	u2180
  6587  00EB                     u2181:	
  6588  00EB  28FA               	goto	l889
  6589  00EC                     u2180:	
  6590  00EC                     l4449:	
  6591  00EC  3004               	movlw	4
  6592  00ED  00DC               	movwf	??_main
  6593  00EE  085C               	movf	??_main,w
  6594  00EF  00D4               	movwf	read_ring@subindex
  6595  00F0  3000               	movlw	0
  6596  00F1  3182  223A  3180   	fcall	_read_ring
  6597  00F4  0020               	movlb	0	; select bank0
  6598  00F5  0646               	xorwf	_lum,w
  6599  00F6  1903               	skipnz
  6600  00F7  28F9               	goto	u2191
  6601  00F8  28FA               	goto	u2190
  6602  00F9                     u2191:	
  6603  00F9  2924               	goto	l885
  6604  00FA                     u2190:	
  6605  00FA                     l889:	
  6606                           
  6607                           ;main.c: 128:                     (INTCONbits.GIE = 0);
  6608  00FA  138B               	bcf	11,7	;volatile
  6609  00FB                     l4451:	
  6610                           
  6611                           ;main.c: 129:                     ring_byte[0] = clkh;
  6612  00FB  084F               	movf	_clkh,w	;volatile
  6613  00FC  00DC               	movwf	??_main
  6614  00FD  085C               	movf	??_main,w
  6615  00FE  00BD               	movwf	_ring_byte
  6616                           
  6617                           ;main.c: 130:                     ring_byte[1] = clkm;
  6618  00FF  084E               	movf	_clkm,w	;volatile
  6619  0100  00DC               	movwf	??_main
  6620  0101  085C               	movf	??_main,w
  6621  0102  00BE               	movwf	_ring_byte+1
  6622                           
  6623                           ;main.c: 131:                     ring_byte[2] = seg;
  6624  0103  084D               	movf	_seg,w	;volatile
  6625  0104  00DC               	movwf	??_main
  6626  0105  085C               	movf	??_main,w
  6627  0106  00BF               	movwf	_ring_byte+2
  6628  0107                     l4453:	
  6629                           
  6630                           ;main.c: 132:                     (INTCONbits.GIE = 1);
  6631  0107  178B               	bsf	11,7	;volatile
  6632                           
  6633                           ;main.c: 133:                     ring_byte[3] = temp;
  6634  0108  0847               	movf	_temp,w
  6635  0109  00DC               	movwf	??_main
  6636  010A  085C               	movf	??_main,w
  6637  010B  00C0               	movwf	_ring_byte+3
  6638                           
  6639                           ;main.c: 134:                     ring_byte[4] = lum;
  6640  010C  0846               	movf	_lum,w
  6641  010D  00DC               	movwf	??_main
  6642  010E  085C               	movf	??_main,w
  6643  010F  00C1               	movwf	_ring_byte+4
  6644  0110                     l4455:	
  6645                           
  6646                           ;main.c: 135:                     push_ring();
  6647  0110  3182  22AB  3180   	fcall	_push_ring
  6648  0113                     l4457:	
  6649                           
  6650                           ;main.c: 138:                     DATAEE_WriteByte(0xF0FF - 10 + 3, nreg_pt);
  6651  0113  30F8               	movlw	248
  6652  0114  0020               	movlb	0	; select bank0
  6653  0115  00D6               	movwf	DATAEE_WriteByte@bAdd
  6654  0116  30F0               	movlw	240
  6655  0117  00D7               	movwf	DATAEE_WriteByte@bAdd+1
  6656  0118  0849               	movf	_nreg_pt,w
  6657  0119  00DC               	movwf	??_main
  6658  011A  085C               	movf	??_main,w
  6659  011B  00D8               	movwf	DATAEE_WriteByte@bData
  6660  011C  3183  2357  3180   	fcall	_DATAEE_WriteByte
  6661  011F                     l4459:	
  6662                           
  6663                           ;main.c: 139:                     cksum_w();
  6664  011F  3184  24CB  3180   	fcall	_cksum_w
  6665  0122  2924               	goto	l885
  6666  0123                     l886:	
  6667                           ;main.c: 142:             else
  6668                           
  6669                           
  6670                           ;main.c: 143:                 (INTCONbits.GIE = 1);
  6671  0123  178B               	bsf	11,7	;volatile
  6672  0124                     l885:	
  6673                           ;main.c: 144:         }
  6674                           
  6675                           
  6676                           ;main.c: 147:         (INTCONbits.GIE = 0);
  6677  0124  138B               	bcf	11,7	;volatile
  6678  0125                     l4461:	
  6679                           
  6680                           ;main.c: 148:         if (last1m >= 1) {
  6681  0125  0020               	movlb	0	; select bank0
  6682  0126  084B               	movf	_last1m,w	;volatile
  6683  0127  1903               	btfsc	3,2
  6684  0128  292A               	goto	u2201
  6685  0129  292B               	goto	u2200
  6686  012A                     u2201:	
  6687  012A  2950               	goto	l891
  6688  012B                     u2200:	
  6689  012B                     l4463:	
  6690                           
  6691                           ;main.c: 150:             last1m = 0;
  6692  012B  01CB               	clrf	_last1m	;volatile
  6693  012C                     l4465:	
  6694                           
  6695                           ;main.c: 151:             aux = clkh;
  6696  012C  084F               	movf	_clkh,w	;volatile
  6697  012D  00DC               	movwf	??_main
  6698  012E  085C               	movf	??_main,w
  6699  012F  00C5               	movwf	_aux
  6700  0130                     l4467:	
  6701                           
  6702                           ;main.c: 152:             aux1 = clkm;
  6703  0130  084E               	movf	_clkm,w	;volatile
  6704  0131  00DC               	movwf	??_main
  6705  0132  085C               	movf	??_main,w
  6706  0133  00C4               	movwf	_aux1
  6707  0134                     l4469:	
  6708                           
  6709                           ;main.c: 153:             (INTCONbits.GIE = 1);
  6710  0134  178B               	bsf	11,7	;volatile
  6711  0135                     l4471:	
  6712                           
  6713                           ;main.c: 154:             DATAEE_WriteByte(0xF0FF - 10 + 1, aux);
  6714  0135  30F6               	movlw	246
  6715  0136  00D6               	movwf	DATAEE_WriteByte@bAdd
  6716  0137  30F0               	movlw	240
  6717  0138  00D7               	movwf	DATAEE_WriteByte@bAdd+1
  6718  0139  0845               	movf	_aux,w
  6719  013A  00DC               	movwf	??_main
  6720  013B  085C               	movf	??_main,w
  6721  013C  00D8               	movwf	DATAEE_WriteByte@bData
  6722  013D  3183  2357  3180   	fcall	_DATAEE_WriteByte
  6723  0140                     l4473:	
  6724                           
  6725                           ;main.c: 155:             DATAEE_WriteByte(0xF0FF - 10 + 2, aux1);
  6726  0140  30F7               	movlw	247
  6727  0141  0020               	movlb	0	; select bank0
  6728  0142  00D6               	movwf	DATAEE_WriteByte@bAdd
  6729  0143  30F0               	movlw	240
  6730  0144  00D7               	movwf	DATAEE_WriteByte@bAdd+1
  6731  0145  0844               	movf	_aux1,w
  6732  0146  00DC               	movwf	??_main
  6733  0147  085C               	movf	??_main,w
  6734  0148  00D8               	movwf	DATAEE_WriteByte@bData
  6735  0149  3183  2357  3180   	fcall	_DATAEE_WriteByte
  6736  014C                     l4475:	
  6737                           
  6738                           ;main.c: 156:             cksum_w();
  6739  014C  3184  24CB  3180   	fcall	_cksum_w
  6740                           
  6741                           ;main.c: 157:         }
  6742  014F  2951               	goto	l882
  6743  0150                     l891:	
  6744                           ;main.c: 158:         else
  6745                           
  6746                           
  6747                           ;main.c: 159:             (INTCONbits.GIE = 1);
  6748  0150  178B               	bsf	11,7	;volatile
  6749  0151                     l882:	
  6750                           ;main.c: 160:     }
  6751                           
  6752                           
  6753                           ;main.c: 107:     while (running)
  6754  0151  187D               	btfsc	_running/(0+8),_running& (0+7)
  6755  0152  2954               	goto	u2211
  6756  0153  2955               	goto	u2210
  6757  0154                     u2211:	
  6758  0154  28C7               	goto	l4431
  6759  0155                     u2210:	
  6760  0155                     l894:	
  6761  0155  3180  2836         	ljmp	start
  6762  0157                     __end_of_main:	
  6763                           
  6764                           	psect	text1
  6765  03DF                     __ptext1:	
  6766 ;; *************** function _reset_recv *****************
  6767 ;; Defined at:
  6768 ;;		line 163 in file "main.c"
  6769 ;; Parameters:    Size  Location     Type
  6770 ;;		None
  6771 ;; Auto vars:     Size  Location     Type
  6772 ;;  i               2   10[BANK0 ] unsigned int 
  6773 ;; Return value:  Size  Location     Type
  6774 ;;                  1    wreg      void 
  6775 ;; Registers used:
  6776 ;;		wreg, status,2, status,0, pclath, cstack
  6777 ;; Tracked objects:
  6778 ;;		On entry : 0/0
  6779 ;;		On exit  : 0/0
  6780 ;;		Unchanged: 0/0
  6781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6783 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6785 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6786 ;;Total ram usage:        2 bytes
  6787 ;; Hardware stack levels used:    1
  6788 ;; Hardware stack levels required when called:    7
  6789 ;; This function calls:
  6790 ;;		_DATAEE_WriteByte
  6791 ;; This function is called by:
  6792 ;;		_main
  6793 ;; This function uses a non-reentrant model
  6794 ;;
  6795                           
  6796                           
  6797                           ;psect for function _reset_recv
  6798  03DF                     _reset_recv:	
  6799  03DF                     l4209:	
  6800                           ;incstack = 0
  6801                           ; Regs used in _reset_recv: [wreg+status,2+status,0+pclath+cstack]
  6802                           
  6803                           
  6804                           ;main.c: 164:     for(unsigned int i = 0xF0FF - 10; i <= 0xF0FF; i ++)
  6805  03DF  30F5               	movlw	245
  6806  03E0  0020               	movlb	0	; select bank0
  6807  03E1  00DA               	movwf	reset_recv@i
  6808  03E2  30F0               	movlw	240
  6809  03E3  00DB               	movwf	reset_recv@i+1
  6810  03E4                     l4213:	
  6811                           
  6812                           ;main.c: 165:         DATAEE_WriteByte(i, 0);
  6813  03E4  085B               	movf	reset_recv@i+1,w
  6814  03E5  00D7               	movwf	DATAEE_WriteByte@bAdd+1
  6815  03E6  085A               	movf	reset_recv@i,w
  6816  03E7  00D6               	movwf	DATAEE_WriteByte@bAdd
  6817  03E8  01D8               	clrf	DATAEE_WriteByte@bData
  6818  03E9  3183  2357  3183   	fcall	_DATAEE_WriteByte
  6819  03EC                     l4215:	
  6820  03EC  3001               	movlw	1
  6821  03ED  0020               	movlb	0	; select bank0
  6822  03EE  07DA               	addwf	reset_recv@i,f
  6823  03EF  3000               	movlw	0
  6824  03F0  3DDB               	addwfc	reset_recv@i+1,f
  6825  03F1                     l4217:	
  6826  03F1  30F1               	movlw	241
  6827  03F2  025B               	subwf	reset_recv@i+1,w
  6828  03F3  3000               	movlw	0
  6829  03F4  1903               	skipnz
  6830  03F5  025A               	subwf	reset_recv@i,w
  6831  03F6  1C03               	skipc
  6832  03F7  2BF9               	goto	u1841
  6833  03F8  2BFA               	goto	u1840
  6834  03F9                     u1841:	
  6835  03F9  2BE4               	goto	l4213
  6836  03FA                     u1840:	
  6837  03FA                     l899:	
  6838  03FA  0008               	return
  6839  03FB                     __end_of_reset_recv:	
  6840                           
  6841                           	psect	text2
  6842  023A                     __ptext2:	
  6843 ;; *************** function _read_ring *****************
  6844 ;; Defined at:
  6845 ;;		line 182 in file "main.c"
  6846 ;; Parameters:    Size  Location     Type
  6847 ;;  index           1    wreg     unsigned char 
  6848 ;;  subindex        1    4[BANK0 ] unsigned char 
  6849 ;; Auto vars:     Size  Location     Type
  6850 ;;  index           1    8[BANK0 ] unsigned char 
  6851 ;;  absindex        1    9[BANK0 ] unsigned char 
  6852 ;;  i               1    7[BANK0 ] unsigned char 
  6853 ;; Return value:  Size  Location     Type
  6854 ;;                  1    wreg      unsigned char 
  6855 ;; Registers used:
  6856 ;;		wreg, status,2, status,0, pclath, cstack
  6857 ;; Tracked objects:
  6858 ;;		On entry : 0/0
  6859 ;;		On exit  : 0/0
  6860 ;;		Unchanged: 0/0
  6861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6862 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6863 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6864 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6865 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6866 ;;Total ram usage:        6 bytes
  6867 ;; Hardware stack levels used:    1
  6868 ;; Hardware stack levels required when called:    7
  6869 ;; This function calls:
  6870 ;;		_DATAEE_ReadByte
  6871 ;;		___bmul
  6872 ;; This function is called by:
  6873 ;;		_main
  6874 ;; This function uses a non-reentrant model
  6875 ;;
  6876                           
  6877                           
  6878                           ;psect for function _read_ring
  6879  023A                     _read_ring:	
  6880                           
  6881                           ;incstack = 0
  6882                           ; Regs used in _read_ring: [wreg+status,2+status,0+pclath+cstack]
  6883                           ;read_ring@index stored from wreg
  6884  023A  0020               	movlb	0	; select bank0
  6885  023B  00D8               	movwf	read_ring@index
  6886  023C                     l4221:	
  6887  023C                     l4223:	
  6888                           
  6889                           ;main.c: 187:     if(index <= nreg && nreg_init) {
  6890  023C  0858               	movf	read_ring@index,w
  6891  023D  024A               	subwf	_nreg,w
  6892  023E  1C03               	skipc
  6893  023F  2A41               	goto	u1851
  6894  0240  2A42               	goto	u1850
  6895  0241                     u1851:	
  6896  0241  2A6B               	goto	l4235
  6897  0242                     u1850:	
  6898  0242                     l4225:	
  6899  0242  1CFD               	btfss	_nreg_init/(0+8),_nreg_init& (0+7)
  6900  0243  2A45               	goto	u1861
  6901  0244  2A46               	goto	u1860
  6902  0245                     u1861:	
  6903  0245  2A6B               	goto	l4235
  6904  0246                     u1860:	
  6905  0246                     l4227:	
  6906                           
  6907                           ;main.c: 188:         absindex = 5 * index + subindex;
  6908  0246  3005               	movlw	5
  6909  0247  00D5               	movwf	??_read_ring
  6910  0248  0855               	movf	??_read_ring,w
  6911  0249  00D0               	movwf	___bmul@multiplicand
  6912  024A  0858               	movf	read_ring@index,w
  6913  024B  3184  2447  3182   	fcall	___bmul
  6914  024E  0020               	movlb	0	; select bank0
  6915  024F  0754               	addwf	read_ring@subindex,w
  6916  0250  00D6               	movwf	??_read_ring+1
  6917  0251  0856               	movf	??_read_ring+1,w
  6918  0252  00D9               	movwf	read_ring@absindex
  6919  0253                     l4229:	
  6920                           
  6921                           ;main.c: 189:         if(absindex <= nreg_pt)
  6922  0253  0859               	movf	read_ring@absindex,w
  6923  0254  0249               	subwf	_nreg_pt,w
  6924  0255  1C03               	skipc
  6925  0256  2A58               	goto	u1871
  6926  0257  2A59               	goto	u1870
  6927  0258                     u1871:	
  6928  0258  2A60               	goto	l4233
  6929  0259                     u1870:	
  6930  0259                     l4231:	
  6931                           
  6932                           ;main.c: 190:             i = nreg_pt - 5 + absindex;
  6933  0259  0849               	movf	_nreg_pt,w
  6934  025A  0759               	addwf	read_ring@absindex,w
  6935  025B  3EFB               	addlw	251
  6936  025C  00D5               	movwf	??_read_ring
  6937  025D  0855               	movf	??_read_ring,w
  6938  025E  00D7               	movwf	read_ring@i
  6939  025F  2A6D               	goto	l4239
  6940  0260                     l4233:	
  6941                           
  6942                           ;main.c: 192:             i = nreg - (nreg_pt - 5 + absindex);
  6943  0260  0349               	decf	_nreg_pt,w
  6944  0261  3AFF               	xorlw	255
  6945  0262  00D5               	movwf	??_read_ring
  6946  0263  0859               	movf	read_ring@absindex,w
  6947  0264  0255               	subwf	??_read_ring,w
  6948  0265  074A               	addwf	_nreg,w
  6949  0266  3E05               	addlw	5
  6950  0267  00D6               	movwf	??_read_ring+1
  6951  0268  0856               	movf	??_read_ring+1,w
  6952  0269  00D7               	movwf	read_ring@i
  6953  026A  2A6D               	goto	l4239
  6954  026B                     l4235:	
  6955                           
  6956                           ;main.c: 195:         return 0;
  6957  026B  3000               	movlw	0
  6958  026C  2A77               	goto	l914
  6959  026D                     l4239:	
  6960                           
  6961                           ;main.c: 197:     return DATAEE_ReadByte(0xF000 + i);
  6962  026D  0857               	movf	read_ring@i,w
  6963  026E  3E00               	addlw	0
  6964  026F  00D0               	movwf	DATAEE_ReadByte@bAdd
  6965  0270  30F0               	movlw	240
  6966  0271  1803               	skipnc
  6967  0272  30F1               	movlw	241
  6968  0273  00D1               	movwf	DATAEE_ReadByte@bAdd+1
  6969  0274  3184  24EB  3182   	fcall	_DATAEE_ReadByte
  6970  0277                     l914:	
  6971  0277  0008               	return
  6972  0278                     __end_of_read_ring:	
  6973                           
  6974                           	psect	text3
  6975  0447                     __ptext3:	
  6976 ;; *************** function ___bmul *****************
  6977 ;; Defined at:
  6978 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul8.c"
  6979 ;; Parameters:    Size  Location     Type
  6980 ;;  multiplier      1    wreg     unsigned char 
  6981 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  6982 ;; Auto vars:     Size  Location     Type
  6983 ;;  multiplier      1    3[BANK0 ] unsigned char 
  6984 ;;  product         1    2[BANK0 ] unsigned char 
  6985 ;; Return value:  Size  Location     Type
  6986 ;;                  1    wreg      unsigned char 
  6987 ;; Registers used:
  6988 ;;		wreg, status,2, status,0
  6989 ;; Tracked objects:
  6990 ;;		On entry : 0/0
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6994 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6995 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6996 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6997 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6998 ;;Total ram usage:        4 bytes
  6999 ;; Hardware stack levels used:    1
  7000 ;; Hardware stack levels required when called:    6
  7001 ;; This function calls:
  7002 ;;		Nothing
  7003 ;; This function is called by:
  7004 ;;		_read_ring
  7005 ;; This function uses a non-reentrant model
  7006 ;;
  7007                           
  7008                           
  7009                           ;psect for function ___bmul
  7010  0447                     ___bmul:	
  7011                           
  7012                           ;incstack = 0
  7013                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7014                           ;___bmul@multiplier stored from wreg
  7015  0447  0020               	movlb	0	; select bank0
  7016  0448  00D3               	movwf	___bmul@multiplier
  7017  0449                     l3355:	
  7018  0449  01D2               	clrf	___bmul@product
  7019  044A                     l3357:	
  7020  044A  1C53               	btfss	___bmul@multiplier,0
  7021  044B  2C4D               	goto	u1251
  7022  044C  2C4E               	goto	u1250
  7023  044D                     u1251:	
  7024  044D  2C52               	goto	l3361
  7025  044E                     u1250:	
  7026  044E                     l3359:	
  7027  044E  0850               	movf	___bmul@multiplicand,w
  7028  044F  00D1               	movwf	??___bmul
  7029  0450  0851               	movf	??___bmul,w
  7030  0451  07D2               	addwf	___bmul@product,f
  7031  0452                     l3361:	
  7032  0452  1003               	clrc
  7033  0453  0DD0               	rlf	___bmul@multiplicand,f
  7034  0454                     l3363:	
  7035  0454  1003               	clrc
  7036  0455  0CD3               	rrf	___bmul@multiplier,f
  7037  0456  0853               	movf	___bmul@multiplier,w
  7038  0457  1D03               	btfss	3,2
  7039  0458  2C5A               	goto	u1261
  7040  0459  2C5B               	goto	u1260
  7041  045A                     u1261:	
  7042  045A  2C4A               	goto	l3357
  7043  045B                     u1260:	
  7044  045B                     l3365:	
  7045  045B  0852               	movf	___bmul@product,w
  7046  045C                     l1181:	
  7047  045C  0008               	return
  7048  045D                     __end_of___bmul:	
  7049                           
  7050                           	psect	text4
  7051  02AB                     __ptext4:	
  7052 ;; *************** function _push_ring *****************
  7053 ;; Defined at:
  7054 ;;		line 200 in file "main.c"
  7055 ;; Parameters:    Size  Location     Type
  7056 ;;		None
  7057 ;; Auto vars:     Size  Location     Type
  7058 ;;  i               1   11[BANK0 ] unsigned char 
  7059 ;; Return value:  Size  Location     Type
  7060 ;;                  1    wreg      void 
  7061 ;; Registers used:
  7062 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7063 ;; Tracked objects:
  7064 ;;		On entry : 0/0
  7065 ;;		On exit  : 0/0
  7066 ;;		Unchanged: 0/0
  7067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7069 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7070 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7071 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7072 ;;Total ram usage:        2 bytes
  7073 ;; Hardware stack levels used:    1
  7074 ;; Hardware stack levels required when called:    7
  7075 ;; This function calls:
  7076 ;;		_DATAEE_WriteByte
  7077 ;; This function is called by:
  7078 ;;		_main
  7079 ;; This function uses a non-reentrant model
  7080 ;;
  7081                           
  7082                           
  7083                           ;psect for function _push_ring
  7084  02AB                     _push_ring:	
  7085  02AB                     l4243:	
  7086                           ;incstack = 0
  7087                           ; Regs used in _push_ring: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7088                           
  7089  02AB  18FD               	btfsc	_nreg_init/(0+8),_nreg_init& (0+7)
  7090  02AC  2AAE               	goto	u1881
  7091  02AD  2AAF               	goto	u1880
  7092  02AE                     u1881:	
  7093  02AE  2AB0               	goto	l4247
  7094  02AF                     u1880:	
  7095  02AF                     l4245:	
  7096  02AF  14FD               	bsf	_nreg_init/(0+8),_nreg_init& (0+7)
  7097  02B0                     l4247:	
  7098                           
  7099                           ;main.c: 202:     for(unsigned char i = 0; i < 5; i++) {
  7100  02B0  0020               	movlb	0	; select bank0
  7101  02B1  01DB               	clrf	push_ring@i
  7102  02B2                     l4253:	
  7103                           
  7104                           ;main.c: 203:         if(nreg_pt >= nreg) nreg_pt = 0;
  7105  02B2  084A               	movf	_nreg,w
  7106  02B3  0249               	subwf	_nreg_pt,w
  7107  02B4  1C03               	skipc
  7108  02B5  2AB7               	goto	u1891
  7109  02B6  2AB8               	goto	u1890
  7110  02B7                     u1891:	
  7111  02B7  2AB9               	goto	l4257
  7112  02B8                     u1890:	
  7113  02B8                     l4255:	
  7114  02B8  01C9               	clrf	_nreg_pt
  7115  02B9                     l4257:	
  7116                           
  7117                           ;main.c: 204:         DATAEE_WriteByte(0xF000 + nreg_pt, ring_byte[i]);
  7118  02B9  0849               	movf	_nreg_pt,w
  7119  02BA  3E00               	addlw	0
  7120  02BB  00D6               	movwf	DATAEE_WriteByte@bAdd
  7121  02BC  30F0               	movlw	240
  7122  02BD  1803               	skipnc
  7123  02BE  30F1               	movlw	241
  7124  02BF  00D7               	movwf	DATAEE_WriteByte@bAdd+1
  7125  02C0  085B               	movf	push_ring@i,w
  7126  02C1  3E3D               	addlw	(low (_ring_byte| 0))& (0+255)
  7127  02C2  0086               	movwf	6
  7128  02C3  0187               	clrf	7
  7129  02C4  0801               	movf	1,w
  7130  02C5  00DA               	movwf	??_push_ring
  7131  02C6  085A               	movf	??_push_ring,w
  7132  02C7  00D8               	movwf	DATAEE_WriteByte@bData
  7133  02C8  3183  2357  3182   	fcall	_DATAEE_WriteByte
  7134  02CB                     l4259:	
  7135                           
  7136                           ;main.c: 205:         nreg_pt ++;
  7137  02CB  3001               	movlw	1
  7138  02CC  0020               	movlb	0	; select bank0
  7139  02CD  00DA               	movwf	??_push_ring
  7140  02CE  085A               	movf	??_push_ring,w
  7141  02CF  07C9               	addwf	_nreg_pt,f
  7142  02D0                     l4261:	
  7143                           
  7144                           ;main.c: 206:     }
  7145  02D0  3001               	movlw	1
  7146  02D1  00DA               	movwf	??_push_ring
  7147  02D2  085A               	movf	??_push_ring,w
  7148  02D3  07DB               	addwf	push_ring@i,f
  7149  02D4                     l4263:	
  7150  02D4  3005               	movlw	5
  7151  02D5  025B               	subwf	push_ring@i,w
  7152  02D6  1C03               	skipc
  7153  02D7  2AD9               	goto	u1901
  7154  02D8  2ADA               	goto	u1900
  7155  02D9                     u1901:	
  7156  02D9  2AB2               	goto	l4253
  7157  02DA                     u1900:	
  7158  02DA                     l921:	
  7159  02DA  0008               	return
  7160  02DB                     __end_of_push_ring:	
  7161                           
  7162                           	psect	text5
  7163  0515                     __ptext5:	
  7164 ;; *************** function _i2c1_driver_open *****************
  7165 ;; Defined at:
  7166 ;;		line 84 in file "mcc_generated_files/i2c1_driver.c"
  7167 ;; Parameters:    Size  Location     Type
  7168 ;;		None
  7169 ;; Auto vars:     Size  Location     Type
  7170 ;;		None
  7171 ;; Return value:  Size  Location     Type
  7172 ;;		None               void
  7173 ;; Registers used:
  7174 ;;		wreg, status,2
  7175 ;; Tracked objects:
  7176 ;;		On entry : 0/0
  7177 ;;		On exit  : 0/0
  7178 ;;		Unchanged: 0/0
  7179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7184 ;;Total ram usage:        0 bytes
  7185 ;; Hardware stack levels used:    1
  7186 ;; Hardware stack levels required when called:    6
  7187 ;; This function calls:
  7188 ;;		Nothing
  7189 ;; This function is called by:
  7190 ;;		_main
  7191 ;;		_i2c_open
  7192 ;; This function uses a non-reentrant model
  7193 ;;
  7194                           
  7195                           
  7196                           ;psect for function _i2c1_driver_open
  7197  0515                     _i2c1_driver_open:	
  7198  0515                     l4171:	
  7199                           ;incstack = 0
  7200                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
  7201                           
  7202  0515  0023               	movlb	3	; select bank3
  7203  0516  1A90               	btfsc	16,5	;volatile
  7204  0517  2D19               	goto	u1811
  7205  0518  2D1A               	goto	u1810
  7206  0519                     u1811:	
  7207  0519  2D20               	goto	l651
  7208  051A                     u1810:	
  7209  051A                     l4173:	
  7210  051A  018F               	clrf	15	;volatile
  7211  051B                     l4175:	
  7212  051B  3028               	movlw	40
  7213  051C  0090               	movwf	16	;volatile
  7214  051D                     l4177:	
  7215  051D  0191               	clrf	17	;volatile
  7216  051E  3009               	movlw	9
  7217  051F  008D               	movwf	13	;volatile
  7218  0520                     l651:	
  7219  0520  0008               	return
  7220  0521                     __end_of_i2c1_driver_open:	
  7221                           
  7222                           	psect	text6
  7223  04CB                     __ptext6:	
  7224 ;; *************** function _cksum_w *****************
  7225 ;; Defined at:
  7226 ;;		line 168 in file "main.c"
  7227 ;; Parameters:    Size  Location     Type
  7228 ;;		None
  7229 ;; Auto vars:     Size  Location     Type
  7230 ;;		None
  7231 ;; Return value:  Size  Location     Type
  7232 ;;                  1    wreg      void 
  7233 ;; Registers used:
  7234 ;;		wreg, status,2, status,0, pclath, cstack
  7235 ;; Tracked objects:
  7236 ;;		On entry : 0/0
  7237 ;;		On exit  : 0/0
  7238 ;;		Unchanged: 0/0
  7239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7242 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7243 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7244 ;;Total ram usage:        1 bytes
  7245 ;; Hardware stack levels used:    1
  7246 ;; Hardware stack levels required when called:    8
  7247 ;; This function calls:
  7248 ;;		_DATAEE_WriteByte
  7249 ;;		_cksum
  7250 ;; This function is called by:
  7251 ;;		_main
  7252 ;; This function uses a non-reentrant model
  7253 ;;
  7254                           
  7255                           
  7256                           ;psect for function _cksum_w
  7257  04CB                     _cksum_w:	
  7258  04CB                     l4219:	
  7259                           ;incstack = 0
  7260                           ; Regs used in _cksum_w: [wreg+status,2+status,0+pclath+cstack]
  7261                           
  7262                           
  7263                           ;main.c: 170:     DATAEE_WriteByte(0xF0FF, cksum());
  7264  04CB  30FF               	movlw	255
  7265  04CC  0020               	movlb	0	; select bank0
  7266  04CD  00D6               	movwf	DATAEE_WriteByte@bAdd
  7267  04CE  30F0               	movlw	240
  7268  04CF  00D7               	movwf	DATAEE_WriteByte@bAdd+1
  7269  04D0  3183  23BF  3184   	fcall	_cksum
  7270  04D3  0020               	movlb	0	; select bank0
  7271  04D4  00DA               	movwf	??_cksum_w
  7272  04D5  085A               	movf	??_cksum_w,w
  7273  04D6  00D8               	movwf	DATAEE_WriteByte@bData
  7274  04D7  3183  2357  3184   	fcall	_DATAEE_WriteByte
  7275  04DA                     l902:	
  7276  04DA  0008               	return
  7277  04DB                     __end_of_cksum_w:	
  7278                           
  7279                           	psect	text7
  7280  03BF                     __ptext7:	
  7281 ;; *************** function _cksum *****************
  7282 ;; Defined at:
  7283 ;;		line 173 in file "main.c"
  7284 ;; Parameters:    Size  Location     Type
  7285 ;;		None
  7286 ;; Auto vars:     Size  Location     Type
  7287 ;;  i               2    4[BANK0 ] unsigned int 
  7288 ;;  res             1    3[BANK0 ] unsigned char 
  7289 ;; Return value:  Size  Location     Type
  7290 ;;                  1    wreg      unsigned char 
  7291 ;; Registers used:
  7292 ;;		wreg, status,2, status,0, pclath, cstack
  7293 ;; Tracked objects:
  7294 ;;		On entry : 0/0
  7295 ;;		On exit  : 0/0
  7296 ;;		Unchanged: 0/0
  7297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7299 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7300 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7301 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7302 ;;Total ram usage:        4 bytes
  7303 ;; Hardware stack levels used:    1
  7304 ;; Hardware stack levels required when called:    7
  7305 ;; This function calls:
  7306 ;;		_DATAEE_ReadByte
  7307 ;; This function is called by:
  7308 ;;		_main
  7309 ;;		_cksum_w
  7310 ;; This function uses a non-reentrant model
  7311 ;;
  7312                           
  7313                           
  7314                           ;psect for function _cksum
  7315  03BF                     _cksum:	
  7316  03BF                     l4117:	
  7317                           ;incstack = 0
  7318                           ; Regs used in _cksum: [wreg+status,2+status,0+pclath+cstack]
  7319                           
  7320                           
  7321                           ;main.c: 175:     unsigned char res = 0;
  7322  03BF  0020               	movlb	0	; select bank0
  7323  03C0  01D3               	clrf	cksum@res
  7324  03C1                     l4119:	
  7325                           
  7326                           ;main.c: 176:     for(unsigned int i = 0xF0FF - 10; i < 0xF0FF; i ++) {
  7327  03C1  30F5               	movlw	245
  7328  03C2  00D4               	movwf	cksum@i
  7329  03C3  30F0               	movlw	240
  7330  03C4  00D5               	movwf	cksum@i+1
  7331  03C5                     l4125:	
  7332                           
  7333                           ;main.c: 177:         res += DATAEE_ReadByte(i);
  7334  03C5  0855               	movf	cksum@i+1,w
  7335  03C6  00D1               	movwf	DATAEE_ReadByte@bAdd+1
  7336  03C7  0854               	movf	cksum@i,w
  7337  03C8  00D0               	movwf	DATAEE_ReadByte@bAdd
  7338  03C9  3184  24EB  3183   	fcall	_DATAEE_ReadByte
  7339  03CC  0020               	movlb	0	; select bank0
  7340  03CD  00D2               	movwf	??_cksum
  7341  03CE  0852               	movf	??_cksum,w
  7342  03CF  07D3               	addwf	cksum@res,f
  7343  03D0                     l4127:	
  7344                           
  7345                           ;main.c: 178:     }
  7346  03D0  3001               	movlw	1
  7347  03D1  07D4               	addwf	cksum@i,f
  7348  03D2  3000               	movlw	0
  7349  03D3  3DD5               	addwfc	cksum@i+1,f
  7350  03D4                     l4129:	
  7351  03D4  30F0               	movlw	240
  7352  03D5  0255               	subwf	cksum@i+1,w
  7353  03D6  30FF               	movlw	255
  7354  03D7  1903               	skipnz
  7355  03D8  0254               	subwf	cksum@i,w
  7356  03D9  1C03               	skipc
  7357  03DA  2BDC               	goto	u1791
  7358  03DB  2BDD               	goto	u1790
  7359  03DC                     u1791:	
  7360  03DC  2BC5               	goto	l4125
  7361  03DD                     u1790:	
  7362  03DD                     l4131:	
  7363                           
  7364                           ;main.c: 179:     return res;
  7365  03DD  0853               	movf	cksum@res,w
  7366  03DE                     l907:	
  7367  03DE  0008               	return
  7368  03DF                     __end_of_cksum:	
  7369                           
  7370                           	psect	text8
  7371  04EB                     __ptext8:	
  7372 ;; *************** function _DATAEE_ReadByte *****************
  7373 ;; Defined at:
  7374 ;;		line 202 in file "mcc_generated_files/memory.c"
  7375 ;; Parameters:    Size  Location     Type
  7376 ;;  bAdd            2    0[BANK0 ] unsigned short 
  7377 ;; Auto vars:     Size  Location     Type
  7378 ;;		None
  7379 ;; Return value:  Size  Location     Type
  7380 ;;                  1    wreg      unsigned char 
  7381 ;; Registers used:
  7382 ;;		wreg, status,2
  7383 ;; Tracked objects:
  7384 ;;		On entry : 0/0
  7385 ;;		On exit  : 0/0
  7386 ;;		Unchanged: 0/0
  7387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7388 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7391 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7392 ;;Total ram usage:        2 bytes
  7393 ;; Hardware stack levels used:    1
  7394 ;; Hardware stack levels required when called:    6
  7395 ;; This function calls:
  7396 ;;		Nothing
  7397 ;; This function is called by:
  7398 ;;		_main
  7399 ;;		_cksum
  7400 ;;		_read_ring
  7401 ;; This function uses a non-reentrant model
  7402 ;;
  7403                           
  7404                           
  7405                           ;psect for function _DATAEE_ReadByte
  7406  04EB                     _DATAEE_ReadByte:	
  7407  04EB                     l3875:	
  7408                           ;incstack = 0
  7409                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
  7410                           
  7411                           
  7412                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
  7413  04EB  0020               	movlb	0	; select bank0
  7414  04EC  0851               	movf	DATAEE_ReadByte@bAdd+1,w
  7415  04ED  0030               	movlb	16	; select bank16
  7416  04EE  009B               	movwf	27	;volatile
  7417  04EF                     l3877:	
  7418                           
  7419                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
  7420  04EF  0020               	movlb	0	; select bank0
  7421  04F0  0850               	movf	DATAEE_ReadByte@bAdd,w
  7422  04F1  0030               	movlb	16	; select bank16
  7423  04F2  009A               	movwf	26	;volatile
  7424  04F3                     l3879:	
  7425                           
  7426                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
  7427  04F3  171E               	bsf	30,6	;volsfr
  7428  04F4                     l3881:	
  7429                           
  7430                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
  7431  04F4  141E               	bsf	30,0	;volsfr
  7432  04F5                     l3883:	
  7433                           
  7434                           ;mcc_generated_files/memory.c: 208:     __nop();
  7435  04F5  0000               	nop
  7436  04F6                     l3885:	
  7437                           
  7438                           ;mcc_generated_files/memory.c: 209:     __nop();
  7439  04F6  0000               	nop
  7440  04F7                     l3887:	
  7441                           
  7442                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
  7443  04F7  0030               	movlb	16	; select bank16
  7444  04F8  081C               	movf	28,w	;volatile
  7445  04F9                     l782:	
  7446  04F9  0008               	return
  7447  04FA                     __end_of_DATAEE_ReadByte:	
  7448                           
  7449                           	psect	text9
  7450  0357                     __ptext9:	
  7451 ;; *************** function _DATAEE_WriteByte *****************
  7452 ;; Defined at:
  7453 ;;		line 180 in file "mcc_generated_files/memory.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;  bAdd            2    6[BANK0 ] unsigned short 
  7456 ;;  bData           1    8[BANK0 ] unsigned char 
  7457 ;; Auto vars:     Size  Location     Type
  7458 ;;  GIEBitValue     1    9[BANK0 ] unsigned char 
  7459 ;; Return value:  Size  Location     Type
  7460 ;;                  1    wreg      void 
  7461 ;; Registers used:
  7462 ;;		wreg, status,2, status,0
  7463 ;; Tracked objects:
  7464 ;;		On entry : 0/0
  7465 ;;		On exit  : 0/0
  7466 ;;		Unchanged: 0/0
  7467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7468 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7469 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7471 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7472 ;;Total ram usage:        4 bytes
  7473 ;; Hardware stack levels used:    1
  7474 ;; Hardware stack levels required when called:    6
  7475 ;; This function calls:
  7476 ;;		Nothing
  7477 ;; This function is called by:
  7478 ;;		_main
  7479 ;;		_reset_recv
  7480 ;;		_cksum_w
  7481 ;;		_push_ring
  7482 ;; This function uses a non-reentrant model
  7483 ;;
  7484                           
  7485                           
  7486                           ;psect for function _DATAEE_WriteByte
  7487  0357                     _DATAEE_WriteByte:	
  7488  0357                     l4097:	
  7489                           ;incstack = 0
  7490                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
  7491                           
  7492                           
  7493                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
  7494  0357  3000               	movlw	0
  7495  0358  1B8B               	btfsc	11,7	;volatile
  7496  0359  3001               	movlw	1
  7497  035A  0020               	movlb	0	; select bank0
  7498  035B  00D9               	movwf	DATAEE_WriteByte@GIEBitValue
  7499                           
  7500                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
  7501  035C  0857               	movf	DATAEE_WriteByte@bAdd+1,w
  7502  035D  0030               	movlb	16	; select bank16
  7503  035E  009B               	movwf	27	;volatile
  7504  035F                     l4099:	
  7505                           
  7506                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
  7507  035F  0020               	movlb	0	; select bank0
  7508  0360  0856               	movf	DATAEE_WriteByte@bAdd,w
  7509  0361  0030               	movlb	16	; select bank16
  7510  0362  009A               	movwf	26	;volatile
  7511  0363                     l4101:	
  7512                           
  7513                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
  7514  0363  0020               	movlb	0	; select bank0
  7515  0364  0858               	movf	DATAEE_WriteByte@bData,w
  7516  0365  0030               	movlb	16	; select bank16
  7517  0366  009C               	movwf	28	;volatile
  7518  0367                     l4103:	
  7519                           
  7520                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
  7521  0367  171E               	bsf	30,6	;volsfr
  7522  0368                     l4105:	
  7523                           
  7524                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
  7525  0368  151E               	bsf	30,2	;volsfr
  7526  0369                     l4107:	
  7527                           
  7528                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
  7529  0369  138B               	bcf	11,7	;volatile
  7530  036A                     l4109:	
  7531                           
  7532                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
  7533  036A  3055               	movlw	85
  7534  036B  009F               	movwf	31	;volsfr
  7535  036C                     l4111:	
  7536                           
  7537                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
  7538  036C  30AA               	movlw	170
  7539  036D  009F               	movwf	31	;volsfr
  7540  036E                     l4113:	
  7541                           
  7542                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
  7543  036E  149E               	bsf	30,1	;volsfr
  7544  036F                     l776:	
  7545                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
  7546                           
  7547                           
  7548                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
  7549  036F  189E               	btfsc	30,1	;volsfr
  7550  0370  2B72               	goto	u1781
  7551  0371  2B73               	goto	u1780
  7552  0372                     u1781:	
  7553  0372  2B6F               	goto	l776
  7554  0373                     u1780:	
  7555  0373                     l778:	
  7556                           
  7557                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
  7558  0373  111E               	bcf	30,2	;volsfr
  7559  0374                     l4115:	
  7560                           
  7561                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
  7562  0374  0020               	movlb	0	; select bank0
  7563  0375  0C59               	rrf	DATAEE_WriteByte@GIEBitValue,w
  7564  0376  1C03               	skipc
  7565  0377  138B               	bcf	11,7	;volatile
  7566  0378  1803               	skipnc
  7567  0379  178B               	bsf	11,7	;volatile
  7568  037A                     l779:	
  7569  037A  0008               	return
  7570  037B                     __end_of_DATAEE_WriteByte:	
  7571                           
  7572                           	psect	text10
  7573  0508                     __ptext10:	
  7574 ;; *************** function _SYSTEM_Initialize *****************
  7575 ;; Defined at:
  7576 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7577 ;; Parameters:    Size  Location     Type
  7578 ;;		None
  7579 ;; Auto vars:     Size  Location     Type
  7580 ;;		None
  7581 ;; Return value:  Size  Location     Type
  7582 ;;                  1    wreg      void 
  7583 ;; Registers used:
  7584 ;;		wreg, status,2, status,0, pclath, cstack
  7585 ;; Tracked objects:
  7586 ;;		On entry : 0/0
  7587 ;;		On exit  : 0/0
  7588 ;;		Unchanged: 0/0
  7589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7594 ;;Total ram usage:        0 bytes
  7595 ;; Hardware stack levels used:    1
  7596 ;; Hardware stack levels required when called:    8
  7597 ;; This function calls:
  7598 ;;		_OSCILLATOR_Initialize
  7599 ;;		_PIN_MANAGER_Initialize
  7600 ;;		_PMD_Initialize
  7601 ;;		_TMR1_Initialize
  7602 ;; This function is called by:
  7603 ;;		_main
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           
  7607                           
  7608                           ;psect for function _SYSTEM_Initialize
  7609  0508                     _SYSTEM_Initialize:	
  7610  0508                     l4201:	
  7611                           ;incstack = 0
  7612                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7613                           
  7614                           
  7615                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  7616  0508  3185  2533  3185   	fcall	_PMD_Initialize
  7617  050B                     l4203:	
  7618                           
  7619                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  7620  050B  3181  21F5  3185   	fcall	_PIN_MANAGER_Initialize
  7621  050E                     l4205:	
  7622                           
  7623                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  7624  050E  3185  2521  3185   	fcall	_OSCILLATOR_Initialize
  7625  0511                     l4207:	
  7626                           
  7627                           ;mcc_generated_files/mcc.c: 55:     TMR1_Initialize();
  7628  0511  3183  23FB  3185   	fcall	_TMR1_Initialize
  7629  0514                     l500:	
  7630  0514  0008               	return
  7631  0515                     __end_of_SYSTEM_Initialize:	
  7632                           
  7633                           	psect	text11
  7634  03FB                     __ptext11:	
  7635 ;; *************** function _TMR1_Initialize *****************
  7636 ;; Defined at:
  7637 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  7638 ;; Parameters:    Size  Location     Type
  7639 ;;		None
  7640 ;; Auto vars:     Size  Location     Type
  7641 ;;		None
  7642 ;; Return value:  Size  Location     Type
  7643 ;;                  1    wreg      void 
  7644 ;; Registers used:
  7645 ;;		wreg, status,2, status,0, pclath, cstack
  7646 ;; Tracked objects:
  7647 ;;		On entry : 0/0
  7648 ;;		On exit  : 0/0
  7649 ;;		Unchanged: 0/0
  7650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7655 ;;Total ram usage:        0 bytes
  7656 ;; Hardware stack levels used:    1
  7657 ;; Hardware stack levels required when called:    7
  7658 ;; This function calls:
  7659 ;;		_TMR1_SetInterruptHandler
  7660 ;; This function is called by:
  7661 ;;		_SYSTEM_Initialize
  7662 ;; This function uses a non-reentrant model
  7663 ;;
  7664                           
  7665                           
  7666                           ;psect for function _TMR1_Initialize
  7667  03FB                     _TMR1_Initialize:	
  7668  03FB                     l4019:	
  7669                           ;incstack = 0
  7670                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7671                           
  7672                           
  7673                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  7674  03FB  0024               	movlb	4	; select bank4
  7675  03FC  018F               	clrf	15	;volatile
  7676                           
  7677                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
  7678  03FD  0190               	clrf	16	;volatile
  7679  03FE                     l4021:	
  7680                           
  7681                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
  7682  03FE  3004               	movlw	4
  7683  03FF  0091               	movwf	17	;volatile
  7684  0400                     l4023:	
  7685                           
  7686                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xC3;
  7687  0400  30C3               	movlw	195
  7688  0401  008D               	movwf	13	;volatile
  7689  0402                     l4025:	
  7690                           
  7691                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0x74;
  7692  0402  3074               	movlw	116
  7693  0403  008C               	movwf	12	;volatile
  7694  0404                     l4027:	
  7695                           
  7696                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  7697  0404  080D               	movf	13,w	;volatile
  7698  0405  00FA               	movwf	_timer1ReloadVal+1	;volatile
  7699  0406  080C               	movf	12,w	;volatile
  7700  0407  00F9               	movwf	_timer1ReloadVal	;volatile
  7701  0408                     l4029:	
  7702                           
  7703                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
  7704  0408  002E               	movlb	14	; select bank14
  7705  0409  1010               	bcf	16,0	;volatile
  7706  040A                     l4031:	
  7707                           
  7708                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
  7709  040A  141A               	bsf	26,0	;volatile
  7710  040B                     l4033:	
  7711                           
  7712                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  7713  040B  30BB               	movlw	low _TMR1_DefaultInterruptHandler
  7714  040C  0020               	movlb	0	; select bank0
  7715  040D  00D0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  7716  040E  3005               	movlw	high _TMR1_DefaultInterruptHandler
  7717  040F  00D1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  7718  0410  3185  2560  3183   	fcall	_TMR1_SetInterruptHandler
  7719  0413                     l4035:	
  7720                           
  7721                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x05;
  7722  0413  3005               	movlw	5
  7723  0414  0024               	movlb	4	; select bank4
  7724  0415  008E               	movwf	14	;volatile
  7725  0416                     l401:	
  7726  0416  0008               	return
  7727  0417                     __end_of_TMR1_Initialize:	
  7728                           
  7729                           	psect	text12
  7730  0560                     __ptext12:	
  7731 ;; *************** function _TMR1_SetInterruptHandler *****************
  7732 ;; Defined at:
  7733 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  7734 ;; Parameters:    Size  Location     Type
  7735 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  7736 ;;		 -> h_clock(1), TMR1_DefaultInterruptHandler(1), 
  7737 ;; Auto vars:     Size  Location     Type
  7738 ;;		None
  7739 ;; Return value:  Size  Location     Type
  7740 ;;                  1    wreg      void 
  7741 ;; Registers used:
  7742 ;;		wreg
  7743 ;; Tracked objects:
  7744 ;;		On entry : 0/0
  7745 ;;		On exit  : 0/0
  7746 ;;		Unchanged: 0/0
  7747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7748 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7751 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7752 ;;Total ram usage:        2 bytes
  7753 ;; Hardware stack levels used:    1
  7754 ;; Hardware stack levels required when called:    6
  7755 ;; This function calls:
  7756 ;;		Nothing
  7757 ;; This function is called by:
  7758 ;;		_TMR1_Initialize
  7759 ;;		_main
  7760 ;; This function uses a non-reentrant model
  7761 ;;
  7762                           
  7763                           
  7764                           ;psect for function _TMR1_SetInterruptHandler
  7765  0560                     _TMR1_SetInterruptHandler:	
  7766  0560                     l3873:	
  7767                           ;incstack = 0
  7768                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  7769                           
  7770                           
  7771                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  7772  0560  0020               	movlb	0	; select bank0
  7773  0561  0851               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  7774  0562  00F8               	movwf	_TMR1_InterruptHandler+1
  7775  0563  0850               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  7776  0564  00F7               	movwf	_TMR1_InterruptHandler
  7777  0565                     l431:	
  7778  0565  0008               	return
  7779  0566                     __end_of_TMR1_SetInterruptHandler:	
  7780                           
  7781                           	psect	text13
  7782  0533                     __ptext13:	
  7783 ;; *************** function _PMD_Initialize *****************
  7784 ;; Defined at:
  7785 ;;		line 72 in file "mcc_generated_files/mcc.c"
  7786 ;; Parameters:    Size  Location     Type
  7787 ;;		None
  7788 ;; Auto vars:     Size  Location     Type
  7789 ;;		None
  7790 ;; Return value:  Size  Location     Type
  7791 ;;                  1    wreg      void 
  7792 ;; Registers used:
  7793 ;;		status,2
  7794 ;; Tracked objects:
  7795 ;;		On entry : 0/0
  7796 ;;		On exit  : 0/0
  7797 ;;		Unchanged: 0/0
  7798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7803 ;;Total ram usage:        0 bytes
  7804 ;; Hardware stack levels used:    1
  7805 ;; Hardware stack levels required when called:    6
  7806 ;; This function calls:
  7807 ;;		Nothing
  7808 ;; This function is called by:
  7809 ;;		_SYSTEM_Initialize
  7810 ;; This function uses a non-reentrant model
  7811 ;;
  7812                           
  7813                           
  7814                           ;psect for function _PMD_Initialize
  7815  0533                     _PMD_Initialize:	
  7816  0533                     l4037:	
  7817                           ;incstack = 0
  7818                           ; Regs used in _PMD_Initialize: [status,2]
  7819                           
  7820                           
  7821                           ;mcc_generated_files/mcc.c: 75:     PMD0 = 0x00;
  7822  0533  002F               	movlb	15	; select bank15
  7823  0534  0196               	clrf	22	;volatile
  7824                           
  7825                           ;mcc_generated_files/mcc.c: 77:     PMD1 = 0x00;
  7826  0535  0197               	clrf	23	;volatile
  7827                           
  7828                           ;mcc_generated_files/mcc.c: 79:     PMD2 = 0x00;
  7829  0536  0198               	clrf	24	;volatile
  7830                           
  7831                           ;mcc_generated_files/mcc.c: 81:     PMD3 = 0x00;
  7832  0537  0199               	clrf	25	;volatile
  7833                           
  7834                           ;mcc_generated_files/mcc.c: 83:     PMD4 = 0x00;
  7835  0538  019A               	clrf	26	;volatile
  7836                           
  7837                           ;mcc_generated_files/mcc.c: 85:     PMD5 = 0x00;
  7838  0539  019B               	clrf	27	;volatile
  7839  053A                     l506:	
  7840  053A  0008               	return
  7841  053B                     __end_of_PMD_Initialize:	
  7842                           
  7843                           	psect	text14
  7844  01F5                     __ptext14:	
  7845 ;; *************** function _PIN_MANAGER_Initialize *****************
  7846 ;; Defined at:
  7847 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7848 ;; Parameters:    Size  Location     Type
  7849 ;;		None
  7850 ;; Auto vars:     Size  Location     Type
  7851 ;;		None
  7852 ;; Return value:  Size  Location     Type
  7853 ;;                  1    wreg      void 
  7854 ;; Registers used:
  7855 ;;		wreg, status,2
  7856 ;; Tracked objects:
  7857 ;;		On entry : 0/0
  7858 ;;		On exit  : 0/0
  7859 ;;		Unchanged: 0/0
  7860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7865 ;;Total ram usage:        0 bytes
  7866 ;; Hardware stack levels used:    1
  7867 ;; Hardware stack levels required when called:    6
  7868 ;; This function calls:
  7869 ;;		Nothing
  7870 ;; This function is called by:
  7871 ;;		_SYSTEM_Initialize
  7872 ;; This function uses a non-reentrant model
  7873 ;;
  7874                           
  7875                           
  7876                           ;psect for function _PIN_MANAGER_Initialize
  7877  01F5                     _PIN_MANAGER_Initialize:	
  7878  01F5                     l4039:	
  7879                           ;incstack = 0
  7880                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7881                           
  7882                           
  7883                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  7884  01F5  0020               	movlb	0	; select bank0
  7885  01F6  019A               	clrf	26	;volatile
  7886                           
  7887                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  7888  01F7  0199               	clrf	25	;volatile
  7889                           
  7890                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  7891  01F8  0196               	clrf	22	;volatile
  7892                           
  7893                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  7894  01F9  0197               	clrf	23	;volatile
  7895                           
  7896                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  7897  01FA  0198               	clrf	24	;volatile
  7898  01FB                     l4041:	
  7899                           
  7900                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  7901  01FB  3007               	movlw	7
  7902  01FC  0095               	movwf	21	;volatile
  7903  01FD                     l4043:	
  7904                           
  7905                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x6F;
  7906  01FD  306F               	movlw	111
  7907  01FE  0091               	movwf	17	;volatile
  7908  01FF                     l4045:	
  7909                           
  7910                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  7911  01FF  30FF               	movlw	255
  7912  0200  0092               	movwf	18	;volatile
  7913  0201                     l4047:	
  7914                           
  7915                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  7916  0201  30FF               	movlw	255
  7917  0202  0093               	movwf	19	;volatile
  7918  0203                     l4049:	
  7919                           
  7920                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  7921  0203  30FF               	movlw	255
  7922  0204  0094               	movwf	20	;volatile
  7923  0205                     l4051:	
  7924                           
  7925                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  7926  0205  30FF               	movlw	255
  7927  0206  003E               	movlb	30	; select bank30
  7928  0207  00D9               	movwf	89	;volatile
  7929  0208                     l4053:	
  7930                           
  7931                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xE7;
  7932  0208  30E7               	movlw	231
  7933  0209  00CE               	movwf	78	;volatile
  7934  020A                     l4055:	
  7935                           
  7936                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xFF;
  7937  020A  30FF               	movlw	255
  7938  020B  00C3               	movwf	67	;volatile
  7939  020C                     l4057:	
  7940                           
  7941                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  7942  020C  3007               	movlw	7
  7943  020D  00E4               	movwf	100	;volatile
  7944  020E                     l4059:	
  7945                           
  7946                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  7947  020E  30FF               	movlw	255
  7948  020F  00B8               	movwf	56	;volatile
  7949                           
  7950                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  7951  0210  01DA               	clrf	90	;volatile
  7952                           
  7953                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  7954  0211  01E5               	clrf	101	;volatile
  7955                           
  7956                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  7957  0212  01C4               	clrf	68	;volatile
  7958                           
  7959                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  7960  0213  01B9               	clrf	57	;volatile
  7961                           
  7962                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  7963  0214  01CF               	clrf	79	;volatile
  7964                           
  7965                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  7966  0215  01E6               	clrf	102	;volatile
  7967                           
  7968                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  7969  0216  01BA               	clrf	58	;volatile
  7970                           
  7971                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  7972  0217  01C5               	clrf	69	;volatile
  7973                           
  7974                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  7975  0218  01D0               	clrf	80	;volatile
  7976                           
  7977                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  7978  0219  01DB               	clrf	91	;volatile
  7979  021A                     l4061:	
  7980                           
  7981                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  7982  021A  30FF               	movlw	255
  7983  021B  00BB               	movwf	59	;volatile
  7984  021C                     l4063:	
  7985                           
  7986                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  7987  021C  30FF               	movlw	255
  7988  021D  00C6               	movwf	70	;volatile
  7989  021E                     l4065:	
  7990                           
  7991                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  7992  021E  30FF               	movlw	255
  7993  021F  00D1               	movwf	81	;volatile
  7994  0220                     l4067:	
  7995                           
  7996                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  7997  0220  30FF               	movlw	255
  7998  0221  00DC               	movwf	92	;volatile
  7999  0222                     l4069:	
  8000                           
  8001                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  8002  0222  3007               	movlw	7
  8003  0223  00E7               	movwf	103	;volatile
  8004  0224                     l4071:	
  8005                           
  8006                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  8007  0224  30FF               	movlw	255
  8008  0225  00BC               	movwf	60	;volatile
  8009  0226                     l4073:	
  8010                           
  8011                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  8012  0226  30FF               	movlw	255
  8013  0227  00C7               	movwf	71	;volatile
  8014  0228                     l4075:	
  8015                           
  8016                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  8017  0228  30FF               	movlw	255
  8018  0229  00D2               	movwf	82	;volatile
  8019  022A                     l4077:	
  8020                           
  8021                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  8022  022A  30FF               	movlw	255
  8023  022B  00DD               	movwf	93	;volatile
  8024  022C                     l4079:	
  8025                           
  8026                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
  8027  022C  3007               	movlw	7
  8028  022D  00E8               	movwf	104	;volatile
  8029  022E                     l4081:	
  8030                           
  8031                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
  8032  022E  3013               	movlw	19
  8033  022F  003D               	movlb	29	; select bank29
  8034  0230  00C5               	movwf	69	;volatile
  8035  0231                     l4083:	
  8036                           
  8037                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x14;
  8038  0231  3014               	movlw	20
  8039  0232  003E               	movlb	30	; select bank30
  8040  0233  00A3               	movwf	35	;volatile
  8041  0234                     l4085:	
  8042                           
  8043                           ;mcc_generated_files/pin_manager.c: 129:     RC4PPS = 0x15;
  8044  0234  3015               	movlw	21
  8045  0235  00A4               	movwf	36	;volatile
  8046  0236                     l4087:	
  8047                           
  8048                           ;mcc_generated_files/pin_manager.c: 130:     SSP1DATPPS = 0x14;
  8049  0236  3014               	movlw	20
  8050  0237  003D               	movlb	29	; select bank29
  8051  0238  00C6               	movwf	70	;volatile
  8052  0239                     l587:	
  8053  0239  0008               	return
  8054  023A                     __end_of_PIN_MANAGER_Initialize:	
  8055                           
  8056                           	psect	text15
  8057  0521                     __ptext15:	
  8058 ;; *************** function _OSCILLATOR_Initialize *****************
  8059 ;; Defined at:
  8060 ;;		line 58 in file "mcc_generated_files/mcc.c"
  8061 ;; Parameters:    Size  Location     Type
  8062 ;;		None
  8063 ;; Auto vars:     Size  Location     Type
  8064 ;;		None
  8065 ;; Return value:  Size  Location     Type
  8066 ;;                  1    wreg      void 
  8067 ;; Registers used:
  8068 ;;		wreg, status,2
  8069 ;; Tracked objects:
  8070 ;;		On entry : 0/0
  8071 ;;		On exit  : 0/0
  8072 ;;		Unchanged: 0/0
  8073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8078 ;;Total ram usage:        0 bytes
  8079 ;; Hardware stack levels used:    1
  8080 ;; Hardware stack levels required when called:    6
  8081 ;; This function calls:
  8082 ;;		Nothing
  8083 ;; This function is called by:
  8084 ;;		_SYSTEM_Initialize
  8085 ;; This function uses a non-reentrant model
  8086 ;;
  8087                           
  8088                           
  8089                           ;psect for function _OSCILLATOR_Initialize
  8090  0521                     _OSCILLATOR_Initialize:	
  8091  0521                     l4089:	
  8092                           ;incstack = 0
  8093                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8094                           
  8095                           
  8096                           ;mcc_generated_files/mcc.c: 61:     OSCCON1 = 0x60;
  8097  0521  3060               	movlw	96
  8098  0522  0031               	movlb	17	; select bank17
  8099  0523  008D               	movwf	13	;volatile
  8100  0524                     l4091:	
  8101                           
  8102                           ;mcc_generated_files/mcc.c: 63:     OSCCON3 = 0x00;
  8103  0524  018F               	clrf	15	;volatile
  8104  0525                     l4093:	
  8105                           
  8106                           ;mcc_generated_files/mcc.c: 65:     OSCEN = 0x00;
  8107  0525  0191               	clrf	17	;volatile
  8108                           
  8109                           ;mcc_generated_files/mcc.c: 67:     OSCFRQ = 0x02;
  8110  0526  3002               	movlw	2
  8111  0527  0093               	movwf	19	;volatile
  8112  0528                     l4095:	
  8113                           
  8114                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
  8115  0528  0192               	clrf	18	;volatile
  8116  0529                     l503:	
  8117  0529  0008               	return
  8118  052A                     __end_of_OSCILLATOR_Initialize:	
  8119                           
  8120                           	psect	intentry
  8121  0004                     __pintentry:	
  8122 ;; *************** function _INTERRUPT_InterruptManager *****************
  8123 ;; Defined at:
  8124 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8125 ;; Parameters:    Size  Location     Type
  8126 ;;		None
  8127 ;; Auto vars:     Size  Location     Type
  8128 ;;		None
  8129 ;; Return value:  Size  Location     Type
  8130 ;;                  1    wreg      void 
  8131 ;; Registers used:
  8132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8133 ;; Tracked objects:
  8134 ;;		On entry : 0/0
  8135 ;;		On exit  : 0/0
  8136 ;;		Unchanged: 0/0
  8137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8142 ;;Total ram usage:        0 bytes
  8143 ;; Hardware stack levels used:    1
  8144 ;; Hardware stack levels required when called:    5
  8145 ;; This function calls:
  8146 ;;		Absolute function
  8147 ;;		_TMR1_ISR
  8148 ;;		_i2c_ISR
  8149 ;;		_i2c_busCollisionISR
  8150 ;; This function is called by:
  8151 ;;		Interrupt level 1
  8152 ;; This function uses a non-reentrant model
  8153 ;;
  8154                           
  8155  0004                     _INTERRUPT_InterruptManager:	
  8156                           
  8157                           ;incstack = 0
  8158  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8159                           
  8160                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8161  0005  3180               	pagesel	$
  8162  0006                     i1l4369:	
  8163                           
  8164                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  8165  0006  1F0B               	btfss	11,6	;volatile
  8166  0007  2809               	goto	u207_21
  8167  0008  280A               	goto	u207_20
  8168  0009                     u207_21:	
  8169  0009  2834               	goto	i1l463
  8170  000A                     u207_20:	
  8171  000A                     i1l4371:	
  8172                           
  8173                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
  8174  000A  002E               	movlb	14	; select bank14
  8175  000B  1C99               	btfss	25,1	;volatile
  8176  000C  280E               	goto	u208_21
  8177  000D  280F               	goto	u208_20
  8178  000E                     u208_21:	
  8179  000E  2819               	goto	i1l456
  8180  000F                     u208_20:	
  8181  000F                     i1l4373:	
  8182  000F  1C8F               	btfss	15,1	;volatile
  8183  0010  2812               	goto	u209_21
  8184  0011  2813               	goto	u209_20
  8185  0012                     u209_21:	
  8186  0012  2819               	goto	i1l456
  8187  0013                     u209_20:	
  8188  0013                     i1l4375:	
  8189                           
  8190                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             i2c1_driver_busCollisionISR();
  8191  0013  087C               	movf	_i2c1_driver_busCollisionISR+1,w
  8192  0014  008A               	movwf	10
  8193  0015  087B               	movf	_i2c1_driver_busCollisionISR,w
  8194  0016  000A               	callw
  8195  0017  3180               	pagesel	$
  8196                           
  8197                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  8198  0018  2834               	goto	i1l463
  8199  0019                     i1l456:	
  8200                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
  8201                           
  8202  0019  1C19               	btfss	25,0	;volatile
  8203  001A  281C               	goto	u210_21
  8204  001B  281D               	goto	u210_20
  8205  001C                     u210_21:	
  8206  001C  2828               	goto	i1l458
  8207  001D                     u210_20:	
  8208  001D                     i1l4377:	
  8209  001D  1C0F               	btfss	15,0	;volatile
  8210  001E  2820               	goto	u211_21
  8211  001F  2821               	goto	u211_20
  8212  0020                     u211_21:	
  8213  0020  2828               	goto	i1l458
  8214  0021                     u211_20:	
  8215  0021                     i1l4379:	
  8216                           
  8217                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             i2c1_driver_i2cISR();
  8218  0021  0020               	movlb	0	; select bank0
  8219  0022  0843               	movf	_i2c1_driver_i2cISR+1,w
  8220  0023  008A               	movwf	10
  8221  0024  0842               	movf	_i2c1_driver_i2cISR,w
  8222  0025  000A               	callw
  8223  0026  3180               	pagesel	$
  8224                           
  8225                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  8226  0027  2834               	goto	i1l463
  8227  0028                     i1l458:	
  8228                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE4bits.TMR1IE == 1 && PI
      +                          R4bits.TMR1IF == 1)
  8229                           
  8230  0028  1C1A               	btfss	26,0	;volatile
  8231  0029  282B               	goto	u212_21
  8232  002A  282C               	goto	u212_20
  8233  002B                     u212_21:	
  8234  002B  2834               	goto	i1l457
  8235  002C                     u212_20:	
  8236  002C                     i1l4381:	
  8237  002C  1C10               	btfss	16,0	;volatile
  8238  002D  282F               	goto	u213_21
  8239  002E  2830               	goto	u213_20
  8240  002F                     u213_21:	
  8241  002F  2834               	goto	i1l457
  8242  0030                     u213_20:	
  8243  0030                     i1l4383:	
  8244                           
  8245                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR1_ISR();
  8246  0030  3184  245D  3180   	fcall	_TMR1_ISR
  8247                           
  8248                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  8249  0033  2834               	goto	i1l463
  8250  0034                     i1l457:	
  8251  0034                     i1l463:	
  8252                           ;mcc_generated_files/interrupt_manager.c: 73:     }
  8253                           
  8254  0034  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8255  0035  0009               	retfie
  8256  0036                     __end_of_INTERRUPT_InterruptManager:	
  8257                           
  8258                           	psect	text17
  8259  0593                     __ptext17:	
  8260 ;; *************** function _i2c_busCollisionISR *****************
  8261 ;; Defined at:
  8262 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
  8263 ;; Parameters:    Size  Location     Type
  8264 ;;		None
  8265 ;; Auto vars:     Size  Location     Type
  8266 ;;		None
  8267 ;; Return value:  Size  Location     Type
  8268 ;;                  1    wreg      void 
  8269 ;; Registers used:
  8270 ;;		status,2, status,0, pclath, cstack
  8271 ;; Tracked objects:
  8272 ;;		On entry : 0/0
  8273 ;;		On exit  : 0/0
  8274 ;;		Unchanged: 0/0
  8275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8280 ;;Total ram usage:        0 bytes
  8281 ;; Hardware stack levels used:    1
  8282 ;; Hardware stack levels required when called:    1
  8283 ;; This function calls:
  8284 ;;		_i2c1_driver_clearBusCollision
  8285 ;; This function is called by:
  8286 ;;		_i2c_open
  8287 ;;		_INTERRUPT_InterruptManager
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291                           
  8292                           ;psect for function _i2c_busCollisionISR
  8293  0593                     _i2c_busCollisionISR:	
  8294  0593                     i1l3449:	
  8295                           ;incstack = 0
  8296                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
  8297                           
  8298                           
  8299                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
  8300  0593  3185  259F  3185   	fcall	_i2c1_driver_clearBusCollision
  8301  0596                     i1l250:	
  8302  0596  0008               	return
  8303  0597                     __end_of_i2c_busCollisionISR:	
  8304                           
  8305                           	psect	text18
  8306  059F                     __ptext18:	
  8307 ;; *************** function _i2c1_driver_clearBusCollision *****************
  8308 ;; Defined at:
  8309 ;;		line 254 in file "mcc_generated_files/i2c1_driver.c"
  8310 ;; Parameters:    Size  Location     Type
  8311 ;;		None
  8312 ;; Auto vars:     Size  Location     Type
  8313 ;;		None
  8314 ;; Return value:  Size  Location     Type
  8315 ;;                  1    wreg      void 
  8316 ;; Registers used:
  8317 ;;		None
  8318 ;; Tracked objects:
  8319 ;;		On entry : 0/0
  8320 ;;		On exit  : 0/0
  8321 ;;		Unchanged: 0/0
  8322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8327 ;;Total ram usage:        0 bytes
  8328 ;; Hardware stack levels used:    1
  8329 ;; This function calls:
  8330 ;;		Nothing
  8331 ;; This function is called by:
  8332 ;;		_i2c_busCollisionISR
  8333 ;; This function uses a non-reentrant model
  8334 ;;
  8335                           
  8336                           
  8337                           ;psect for function _i2c1_driver_clearBusCollision
  8338  059F                     _i2c1_driver_clearBusCollision:	
  8339  059F                     i1l3215:	
  8340                           ;incstack = 0
  8341                           ; Regs used in _i2c1_driver_clearBusCollision: []
  8342                           
  8343                           
  8344                           ;mcc_generated_files/i2c1_driver.c: 256:     PIR3bits.BCL1IF = 0;
  8345  059F  002E               	movlb	14	; select bank14
  8346  05A0  108F               	bcf	15,1	;volatile
  8347  05A1                     i1l729:	
  8348  05A1  0008               	return
  8349  05A2                     __end_of_i2c1_driver_clearBusCollision:	
  8350                           
  8351                           	psect	text19
  8352  0307                     __ptext19:	
  8353 ;; *************** function _i2c_ISR *****************
  8354 ;; Defined at:
  8355 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
  8356 ;; Parameters:    Size  Location     Type
  8357 ;;		None
  8358 ;; Auto vars:     Size  Location     Type
  8359 ;;		None
  8360 ;; Return value:  Size  Location     Type
  8361 ;;                  1    wreg      void 
  8362 ;; Registers used:
  8363 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8364 ;; Tracked objects:
  8365 ;;		On entry : 0/0
  8366 ;;		On exit  : 0/0
  8367 ;;		Unchanged: 0/0
  8368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8371 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8372 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8373 ;;Total ram usage:        3 bytes
  8374 ;; Hardware stack levels used:    1
  8375 ;; Hardware stack levels required when called:    4
  8376 ;; This function calls:
  8377 ;;		_do_I2C_DO_ACK
  8378 ;;		_do_I2C_DO_ADDRESS_NACK
  8379 ;;		_do_I2C_DO_NACK_RESTART
  8380 ;;		_do_I2C_DO_NACK_STOP
  8381 ;;		_do_I2C_IDLE
  8382 ;;		_do_I2C_RCEN
  8383 ;;		_do_I2C_RESET
  8384 ;;		_do_I2C_RX
  8385 ;;		_do_I2C_SEND_ADR_READ
  8386 ;;		_do_I2C_SEND_ADR_WRITE
  8387 ;;		_do_I2C_SEND_RESTART
  8388 ;;		_do_I2C_SEND_RESTART_READ
  8389 ;;		_do_I2C_SEND_RESTART_WRITE
  8390 ;;		_do_I2C_SEND_STOP
  8391 ;;		_do_I2C_TX
  8392 ;;		_do_I2C_TX_EMPTY
  8393 ;;		_i2c1_driver_isNACK
  8394 ;;		_mssp1_clearIRQ
  8395 ;; This function is called by:
  8396 ;;		_i2c_open
  8397 ;;		_i2c_poller
  8398 ;;		_INTERRUPT_InterruptManager
  8399 ;; This function uses a non-reentrant model
  8400 ;;
  8401                           
  8402                           
  8403                           ;psect for function _i2c_ISR
  8404  0307                     _i2c_ISR:	
  8405  0307                     i1l4191:	
  8406                           ;incstack = 0
  8407                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8408                           
  8409                           
  8410                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
  8411  0307  3185  25A2  3183   	fcall	_mssp1_clearIRQ
  8412  030A                     i1l4193:	
  8413                           
  8414                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
  8415  030A  0020               	movlb	0	; select bank0
  8416  030B  1DA0               	btfss	_i2c_status,3
  8417  030C  2B0E               	goto	u182_21
  8418  030D  2B0F               	goto	u182_20
  8419  030E                     u182_21:	
  8420  030E  2B1B               	goto	i1l4199
  8421  030F                     u182_20:	
  8422  030F                     i1l4195:	
  8423  030F  3185  254B  3183   	fcall	_i2c1_driver_isNACK
  8424  0312  1C03               	btfss	3,0
  8425  0313  2B15               	goto	u183_21
  8426  0314  2B16               	goto	u183_20
  8427  0315                     u183_21:	
  8428  0315  2B1B               	goto	i1l4199
  8429  0316                     u183_20:	
  8430  0316                     i1l4197:	
  8431                           
  8432                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
  8433  0316  300F               	movlw	15
  8434  0317  00F4               	movwf	??_i2c_ISR
  8435  0318  0874               	movf	??_i2c_ISR,w
  8436  0319  0020               	movlb	0	; select bank0
  8437  031A  00A9               	movwf	_i2c_status+9
  8438  031B                     i1l4199:	
  8439                           
  8440                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
  8441  031B  0020               	movlb	0	; select bank0
  8442  031C  0829               	movf	_i2c_status+9,w
  8443  031D  00F4               	movwf	??_i2c_ISR
  8444  031E  01F5               	clrf	??_i2c_ISR+1
  8445  031F  35F4               	lslf	??_i2c_ISR,f
  8446  0320  0DF5               	rlf	??_i2c_ISR+1,f
  8447  0321  309F               	movlw	low (_fsmStateTable| (0+32768))
  8448  0322  0774               	addwf	??_i2c_ISR,w
  8449  0323  0084               	movwf	4
  8450  0324  3083               	movlw	high (_fsmStateTable| (0+32768))
  8451  0325  3D75               	addwfc	??_i2c_ISR+1,w
  8452  0326  0085               	movwf	5
  8453  0327  3F01               	moviw [1]fsr0
  8454  0328  008A               	movwf	10
  8455  0329  3F00               	moviw [0]fsr0
  8456  032A  000A               	callw
  8457  032B  3183               	pagesel	$
  8458  032C  00F6               	movwf	??_i2c_ISR+2
  8459  032D  0876               	movf	??_i2c_ISR+2,w
  8460  032E  0020               	movlb	0	; select bank0
  8461  032F  00A9               	movwf	_i2c_status+9
  8462  0330                     i1l247:	
  8463  0330  0008               	return
  8464  0331                     __end_of_i2c_ISR:	
  8465                           
  8466                           	psect	text20
  8467  05A2                     __ptext20:	
  8468 ;; *************** function _mssp1_clearIRQ *****************
  8469 ;; Defined at:
  8470 ;;		line 54 in file "mcc_generated_files/i2c1_driver.c"
  8471 ;; Parameters:    Size  Location     Type
  8472 ;;		None
  8473 ;; Auto vars:     Size  Location     Type
  8474 ;;		None
  8475 ;; Return value:  Size  Location     Type
  8476 ;;                  1    wreg      void 
  8477 ;; Registers used:
  8478 ;;		None
  8479 ;; Tracked objects:
  8480 ;;		On entry : 0/0
  8481 ;;		On exit  : 0/0
  8482 ;;		Unchanged: 0/0
  8483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8488 ;;Total ram usage:        0 bytes
  8489 ;; Hardware stack levels used:    1
  8490 ;; This function calls:
  8491 ;;		Nothing
  8492 ;; This function is called by:
  8493 ;;		_i2c_ISR
  8494 ;;		_i2c_open
  8495 ;;		_i2c_close
  8496 ;; This function uses a non-reentrant model
  8497 ;;
  8498                           
  8499                           
  8500                           ;psect for function _mssp1_clearIRQ
  8501  05A2                     _mssp1_clearIRQ:	
  8502  05A2                     i1l3037:	
  8503                           ;incstack = 0
  8504                           ; Regs used in _mssp1_clearIRQ: []
  8505                           
  8506                           
  8507                           ;mcc_generated_files/i2c1_driver.c: 56:         SSP1CON1 = 0x28;
  8508  05A2  002E               	movlb	14	; select bank14
  8509  05A3  100F               	bcf	15,0	;volatile
  8510  05A4                     i1l633:	
  8511  05A4  0008               	return
  8512  05A5                     __end_of_mssp1_clearIRQ:	
  8513                           
  8514                           	psect	text21
  8515  01AB                     __ptext21:	
  8516 ;; *************** function _do_I2C_RX *****************
  8517 ;; Defined at:
  8518 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
  8519 ;; Parameters:    Size  Location     Type
  8520 ;;		None
  8521 ;; Auto vars:     Size  Location     Type
  8522 ;;		None
  8523 ;; Return value:  Size  Location     Type
  8524 ;;                  1    wreg      enum E12722
  8525 ;; Registers used:
  8526 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8527 ;; Tracked objects:
  8528 ;;		On entry : 0/0
  8529 ;;		On exit  : 0/0
  8530 ;;		Unchanged: 0/0
  8531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8534 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8535 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8536 ;;Total ram usage:        3 bytes
  8537 ;; Hardware stack levels used:    1
  8538 ;; Hardware stack levels required when called:    3
  8539 ;; This function calls:
  8540 ;;		Absolute function
  8541 ;;		_do_I2C_DO_NACK_RESTART
  8542 ;;		_do_I2C_DO_NACK_STOP
  8543 ;;		_i2c1_driver_getRXData
  8544 ;;		_i2c1_driver_sendACK
  8545 ;;		_i2c_restartWrite
  8546 ;;		_rd1RegCompleteHandler
  8547 ;;		_rd2RegCompleteHandler
  8548 ;;		_rdBlkRegCompleteHandler
  8549 ;;		_returnReset
  8550 ;;		_returnStop
  8551 ;;		_wr1RegCompleteHandler
  8552 ;;		_wr2RegCompleteHandler
  8553 ;; This function is called by:
  8554 ;;		_i2c_ISR
  8555 ;; This function uses a non-reentrant model
  8556 ;;
  8557                           
  8558                           
  8559                           ;psect for function _do_I2C_RX
  8560  01AB                     _do_I2C_RX:	
  8561  01AB                     i1l3965:	
  8562                           ;incstack = 0
  8563                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8564                           
  8565                           
  8566                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
  8567  01AB  3185  25A8  3181   	fcall	_i2c1_driver_getRXData
  8568  01AE  00F0               	movwf	??_do_I2C_RX
  8569  01AF  0020               	movlb	0	; select bank0
  8570  01B0  0822               	movf	low ((_i2c_status| 0+2)),w
  8571  01B1  0086               	movwf	6
  8572  01B2  0187               	clrf	7
  8573  01B3  0870               	movf	??_do_I2C_RX,w
  8574  01B4  0081               	movwf	1
  8575  01B5                     i1l3967:	
  8576  01B5  3001               	movlw	1
  8577  01B6  00F0               	movwf	??_do_I2C_RX
  8578  01B7  0870               	movf	??_do_I2C_RX,w
  8579  01B8  07A2               	addwf	low ((_i2c_status| 0+2)),f
  8580  01B9                     i1l3969:	
  8581                           
  8582                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
  8583  01B9  3001               	movlw	1
  8584  01BA  02A3               	subwf	_i2c_status+3,f
  8585  01BB  3000               	movlw	0
  8586  01BC  3BA4               	subwfb	_i2c_status+4,f
  8587  01BD  0823               	movf	_i2c_status+3,w
  8588  01BE  0424               	iorwf	_i2c_status+4,w
  8589  01BF  1903               	btfsc	3,2
  8590  01C0  29C2               	goto	u177_21
  8591  01C1  29C3               	goto	u177_20
  8592  01C2                     u177_21:	
  8593  01C2  29C8               	goto	i1l222
  8594  01C3                     u177_20:	
  8595  01C3                     i1l3971:	
  8596                           
  8597                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
  8598  01C3  3185  259B  3181   	fcall	_i2c1_driver_sendACK
  8599  01C6                     i1l3973:	
  8600                           
  8601                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
  8602  01C6  3005               	movlw	5
  8603  01C7  29F4               	goto	i1l223
  8604  01C8                     i1l222:	
  8605                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
  8606                           
  8607                           
  8608                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
  8609  01C8  1520               	bsf	_i2c_status,2
  8610                           
  8611                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
  8612  01C9  29D2               	goto	i1l3989
  8613  01CA                     i1l3979:	
  8614                           
  8615                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
  8616  01CA  3185  2566  3181   	fcall	_do_I2C_DO_NACK_RESTART
  8617  01CD  29F4               	goto	i1l223
  8618  01CE                     i1l3983:	
  8619                           
  8620                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
  8621  01CE  3185  256B  3181   	fcall	_do_I2C_DO_NACK_STOP
  8622  01D1  29F4               	goto	i1l223
  8623  01D2                     i1l3989:	
  8624  01D2  0837               	movf	low ((_i2c_status| 0+23)),w
  8625  01D3  00F0               	movwf	??_do_I2C_RX
  8626  01D4  0870               	movf	??_do_I2C_RX,w
  8627  01D5  00F6               	movwf	rdBlkRegCompleteHandler@p
  8628  01D6  300B               	movlw	11
  8629  01D7  3E20               	addlw	(low (_i2c_status| 0))& (0+255)
  8630  01D8  0086               	movwf	6
  8631  01D9  0187               	clrf	7
  8632  01DA  3F41               	moviw [1]fsr1
  8633  01DB  008A               	movwf	10
  8634  01DC  3F40               	moviw [0]fsr1
  8635  01DD  000A               	callw
  8636  01DE  3181               	pagesel	$
  8637  01DF  00F1               	movwf	??_do_I2C_RX+1
  8638  01E0  01F2               	clrf	??_do_I2C_RX+2
  8639                           
  8640                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8641                           ; Switch size 1, requested type "simple"
  8642                           ; Number of cases is 1, Range of values is 0 to 0
  8643                           ; switch strategies available:
  8644                           ; Name         Instructions Cycles
  8645                           ; simple_byte            4     3 (average)
  8646                           ; direct_byte            8     6 (fixed)
  8647                           ; jumptable            260     6 (fixed)
  8648                           ;	Chosen strategy is simple_byte
  8649  01E1  0872               	movf	??_do_I2C_RX+2,w
  8650  01E2  3A00               	xorlw	0	; case 0
  8651  01E3  1903               	skipnz
  8652  01E4  29E6               	goto	i1l4557
  8653  01E5  29CE               	goto	i1l3983
  8654  01E6                     i1l4557:	
  8655                           
  8656                           ; Switch size 1, requested type "simple"
  8657                           ; Number of cases is 4, Range of values is 1 to 4
  8658                           ; switch strategies available:
  8659                           ; Name         Instructions Cycles
  8660                           ; simple_byte           13     7 (average)
  8661                           ; direct_byte           17     9 (fixed)
  8662                           ; jumptable            263     9 (fixed)
  8663                           ;	Chosen strategy is simple_byte
  8664  01E6  0871               	movf	??_do_I2C_RX+1,w
  8665  01E7  3A01               	xorlw	1	; case 1
  8666  01E8  1903               	skipnz
  8667  01E9  29CE               	goto	i1l3983
  8668  01EA  3A03               	xorlw	3	; case 2
  8669  01EB  1903               	skipnz
  8670  01EC  29CA               	goto	i1l3979
  8671  01ED  3A01               	xorlw	1	; case 3
  8672  01EE  1903               	skipnz
  8673  01EF  29CA               	goto	i1l3979
  8674  01F0  3A07               	xorlw	7	; case 4
  8675  01F1  1903               	skipnz
  8676  01F2  29CE               	goto	i1l3983
  8677  01F3  29CE               	goto	i1l3983
  8678  01F4                     i1l223:	
  8679  01F4  0008               	return
  8680  01F5                     __end_of_do_I2C_RX:	
  8681                           
  8682                           	psect	text22
  8683  0157                     __ptext22:	
  8684 ;; *************** function _do_I2C_TX *****************
  8685 ;; Defined at:
  8686 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
  8687 ;; Parameters:    Size  Location     Type
  8688 ;;		None
  8689 ;; Auto vars:     Size  Location     Type
  8690 ;;		None
  8691 ;; Return value:  Size  Location     Type
  8692 ;;                  1    wreg      enum E12722
  8693 ;; Registers used:
  8694 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8695 ;; Tracked objects:
  8696 ;;		On entry : 0/0
  8697 ;;		On exit  : 0/0
  8698 ;;		Unchanged: 0/0
  8699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8702 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8703 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8704 ;;Total ram usage:        3 bytes
  8705 ;; Hardware stack levels used:    1
  8706 ;; Hardware stack levels required when called:    3
  8707 ;; This function calls:
  8708 ;;		Absolute function
  8709 ;;		_do_I2C_SEND_RESTART_READ
  8710 ;;		_do_I2C_SEND_RESTART_WRITE
  8711 ;;		_do_I2C_SEND_STOP
  8712 ;;		_i2c1_driver_TXData
  8713 ;;		_i2c1_driver_isNACK
  8714 ;;		_i2c_restartWrite
  8715 ;;		_rd1RegCompleteHandler
  8716 ;;		_rd2RegCompleteHandler
  8717 ;;		_rdBlkRegCompleteHandler
  8718 ;;		_returnReset
  8719 ;;		_returnStop
  8720 ;;		_wr1RegCompleteHandler
  8721 ;;		_wr2RegCompleteHandler
  8722 ;; This function is called by:
  8723 ;;		_i2c_ISR
  8724 ;; This function uses a non-reentrant model
  8725 ;;
  8726                           
  8727                           
  8728                           ;psect for function _do_I2C_TX
  8729  0157                     _do_I2C_TX:	
  8730  0157                     i1l3931:	
  8731                           ;incstack = 0
  8732                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8733                           
  8734                           
  8735                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
  8736  0157  3185  254B  3181   	fcall	_i2c1_driver_isNACK
  8737  015A  1C03               	btfss	3,0
  8738  015B  295D               	goto	u175_21
  8739  015C  295E               	goto	u175_20
  8740  015D                     u175_21:	
  8741  015D  298E               	goto	i1l206
  8742  015E                     u175_20:	
  8743  015E  296B               	goto	i1l3949
  8744  015F                     i1l3935:	
  8745                           
  8746                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
  8747  015F  3185  2584  3181   	fcall	_do_I2C_SEND_RESTART_READ
  8748  0162  29AA               	goto	i1l209
  8749  0163                     i1l3939:	
  8750                           
  8751                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
  8752  0163  3185  257F  3181   	fcall	_do_I2C_SEND_RESTART_WRITE
  8753  0166  29AA               	goto	i1l209
  8754  0167                     i1l3943:	
  8755                           
  8756                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
  8757  0167  3185  2575  3181   	fcall	_do_I2C_SEND_STOP
  8758  016A  29AA               	goto	i1l209
  8759  016B                     i1l3949:	
  8760  016B  0020               	movlb	0	; select bank0
  8761  016C  083A               	movf	low ((_i2c_status| 0+26)),w
  8762  016D  00F1               	movwf	??_do_I2C_TX
  8763  016E  0871               	movf	??_do_I2C_TX,w
  8764  016F  00F6               	movwf	rdBlkRegCompleteHandler@p
  8765  0170  3011               	movlw	17
  8766  0171  3E20               	addlw	(low (_i2c_status| 0))& (0+255)
  8767  0172  0086               	movwf	6
  8768  0173  0187               	clrf	7
  8769  0174  3F41               	moviw [1]fsr1
  8770  0175  008A               	movwf	10
  8771  0176  3F40               	moviw [0]fsr1
  8772  0177  000A               	callw
  8773  0178  3181               	pagesel	$
  8774  0179  00F2               	movwf	??_do_I2C_TX+1
  8775  017A  01F3               	clrf	??_do_I2C_TX+2
  8776                           
  8777                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8778                           ; Switch size 1, requested type "simple"
  8779                           ; Number of cases is 1, Range of values is 0 to 0
  8780                           ; switch strategies available:
  8781                           ; Name         Instructions Cycles
  8782                           ; simple_byte            4     3 (average)
  8783                           ; direct_byte            8     6 (fixed)
  8784                           ; jumptable            260     6 (fixed)
  8785                           ;	Chosen strategy is simple_byte
  8786  017B  0873               	movf	??_do_I2C_TX+2,w
  8787  017C  3A00               	xorlw	0	; case 0
  8788  017D  1903               	skipnz
  8789  017E  2980               	goto	i1l4559
  8790  017F  2967               	goto	i1l3943
  8791  0180                     i1l4559:	
  8792                           
  8793                           ; Switch size 1, requested type "simple"
  8794                           ; Number of cases is 4, Range of values is 1 to 4
  8795                           ; switch strategies available:
  8796                           ; Name         Instructions Cycles
  8797                           ; simple_byte           13     7 (average)
  8798                           ; direct_byte           17     9 (fixed)
  8799                           ; jumptable            263     9 (fixed)
  8800                           ;	Chosen strategy is simple_byte
  8801  0180  0872               	movf	??_do_I2C_TX+1,w
  8802  0181  3A01               	xorlw	1	; case 1
  8803  0182  1903               	skipnz
  8804  0183  2967               	goto	i1l3943
  8805  0184  3A03               	xorlw	3	; case 2
  8806  0185  1903               	skipnz
  8807  0186  295F               	goto	i1l3935
  8808  0187  3A01               	xorlw	1	; case 3
  8809  0188  1903               	skipnz
  8810  0189  2963               	goto	i1l3939
  8811  018A  3A07               	xorlw	7	; case 4
  8812  018B  1903               	skipnz
  8813  018C  2967               	goto	i1l3943
  8814  018D  2967               	goto	i1l3943
  8815  018E                     i1l206:	
  8816                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
  8817                           
  8818                           
  8819                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
  8820  018E  0020               	movlb	0	; select bank0
  8821  018F  11A0               	bcf	_i2c_status,3
  8822  0190                     i1l3951:	
  8823                           
  8824                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
  8825  0190  3002               	movlw	2
  8826  0191  3E20               	addlw	(low (_i2c_status| 0))& (0+255)
  8827  0192  0086               	movwf	6
  8828  0193  0187               	clrf	7
  8829  0194  3F40               	moviw [0]fsr1
  8830  0195  0084               	movwf	4
  8831  0196  0185               	clrf	5
  8832  0197  0A81               	incf	1,f
  8833  0198  0800               	movf	0,w
  8834  0199  3185  258E  3181   	fcall	_i2c1_driver_TXData
  8835  019C                     i1l3953:	
  8836                           
  8837                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
  8838  019C  3001               	movlw	1
  8839  019D  0020               	movlb	0	; select bank0
  8840  019E  02A3               	subwf	_i2c_status+3,f
  8841  019F  3000               	movlw	0
  8842  01A0  3BA4               	subwfb	_i2c_status+4,f
  8843  01A1  0823               	movf	_i2c_status+3,w
  8844  01A2  0424               	iorwf	_i2c_status+4,w
  8845  01A3  1D03               	btfss	3,2
  8846  01A4  29A6               	goto	u176_21
  8847  01A5  29A7               	goto	u176_20
  8848  01A6                     u176_21:	
  8849  01A6  29A9               	goto	i1l3957
  8850  01A7                     u176_20:	
  8851  01A7                     i1l3955:	
  8852  01A7  3006               	movlw	6
  8853  01A8  29AA               	goto	i1l209
  8854  01A9                     i1l3957:	
  8855  01A9  3003               	movlw	3
  8856  01AA                     i1l209:	
  8857  01AA  0008               	return
  8858  01AB                     __end_of_do_I2C_TX:	
  8859                           
  8860                           	psect	text23
  8861  02DB                     __ptext23:	
  8862 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
  8863 ;; Defined at:
  8864 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
  8865 ;; Parameters:    Size  Location     Type
  8866 ;;		None
  8867 ;; Auto vars:     Size  Location     Type
  8868 ;;		None
  8869 ;; Return value:  Size  Location     Type
  8870 ;;                  1    wreg      enum E12722
  8871 ;; Registers used:
  8872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8873 ;; Tracked objects:
  8874 ;;		On entry : 0/0
  8875 ;;		On exit  : 0/0
  8876 ;;		Unchanged: 0/0
  8877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8880 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8881 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8882 ;;Total ram usage:        3 bytes
  8883 ;; Hardware stack levels used:    1
  8884 ;; Hardware stack levels required when called:    3
  8885 ;; This function calls:
  8886 ;;		Absolute function
  8887 ;;		_do_I2C_SEND_RESTART
  8888 ;;		_do_I2C_SEND_STOP
  8889 ;;		_i2c_restartWrite
  8890 ;;		_rd1RegCompleteHandler
  8891 ;;		_rd2RegCompleteHandler
  8892 ;;		_rdBlkRegCompleteHandler
  8893 ;;		_returnReset
  8894 ;;		_returnStop
  8895 ;;		_wr1RegCompleteHandler
  8896 ;;		_wr2RegCompleteHandler
  8897 ;; This function is called by:
  8898 ;;		_i2c_ISR
  8899 ;; This function uses a non-reentrant model
  8900 ;;
  8901                           
  8902                           
  8903                           ;psect for function _do_I2C_DO_ADDRESS_NACK
  8904  02DB                     _do_I2C_DO_ADDRESS_NACK:	
  8905  02DB                     i1l3911:	
  8906                           ;incstack = 0
  8907                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8908                           
  8909                           
  8910                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
  8911  02DB  0020               	movlb	0	; select bank0
  8912  02DC  11A0               	bcf	_i2c_status,3
  8913  02DD                     i1l3913:	
  8914                           
  8915                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
  8916  02DD  3002               	movlw	2
  8917  02DE  00F0               	movwf	??_do_I2C_DO_ADDRESS_NACK
  8918  02DF  0870               	movf	??_do_I2C_DO_ADDRESS_NACK,w
  8919  02E0  00AA               	movwf	_i2c_status+10
  8920                           
  8921                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
  8922  02E1  2AEA               	goto	i1l3925
  8923  02E2                     i1l3915:	
  8924                           
  8925                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
  8926  02E2  3185  257A  3182   	fcall	_do_I2C_SEND_RESTART
  8927  02E5  2B06               	goto	i1l201
  8928  02E6                     i1l3919:	
  8929                           
  8930                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
  8931  02E6  3185  2575  3182   	fcall	_do_I2C_SEND_STOP
  8932  02E9  2B06               	goto	i1l201
  8933  02EA                     i1l3925:	
  8934  02EA  0839               	movf	low ((_i2c_status| 0+25)),w
  8935  02EB  00F0               	movwf	??_do_I2C_DO_ADDRESS_NACK
  8936  02EC  0870               	movf	??_do_I2C_DO_ADDRESS_NACK,w
  8937  02ED  00F6               	movwf	rdBlkRegCompleteHandler@p
  8938  02EE  300F               	movlw	15
  8939  02EF  3E20               	addlw	(low (_i2c_status| 0))& (0+255)
  8940  02F0  0086               	movwf	6
  8941  02F1  0187               	clrf	7
  8942  02F2  3F41               	moviw [1]fsr1
  8943  02F3  008A               	movwf	10
  8944  02F4  3F40               	moviw [0]fsr1
  8945  02F5  000A               	callw
  8946  02F6  3182               	pagesel	$
  8947  02F7  00F1               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
  8948  02F8  01F2               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
  8949                           
  8950                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8951                           ; Switch size 1, requested type "simple"
  8952                           ; Number of cases is 1, Range of values is 0 to 0
  8953                           ; switch strategies available:
  8954                           ; Name         Instructions Cycles
  8955                           ; simple_byte            4     3 (average)
  8956                           ; direct_byte            8     6 (fixed)
  8957                           ; jumptable            260     6 (fixed)
  8958                           ;	Chosen strategy is simple_byte
  8959  02F9  0872               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
  8960  02FA  3A00               	xorlw	0	; case 0
  8961  02FB  1903               	skipnz
  8962  02FC  2AFE               	goto	i1l4561
  8963  02FD  2AE6               	goto	i1l3919
  8964  02FE                     i1l4561:	
  8965                           
  8966                           ; Switch size 1, requested type "simple"
  8967                           ; Number of cases is 2, Range of values is 2 to 3
  8968                           ; switch strategies available:
  8969                           ; Name         Instructions Cycles
  8970                           ; simple_byte            7     4 (average)
  8971                           ; direct_byte           13     9 (fixed)
  8972                           ; jumptable            263     9 (fixed)
  8973                           ;	Chosen strategy is simple_byte
  8974  02FE  0871               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
  8975  02FF  3A02               	xorlw	2	; case 2
  8976  0300  1903               	skipnz
  8977  0301  2AE2               	goto	i1l3915
  8978  0302  3A01               	xorlw	1	; case 3
  8979  0303  1903               	skipnz
  8980  0304  2AE2               	goto	i1l3915
  8981  0305  2AE6               	goto	i1l3919
  8982  0306                     i1l201:	
  8983  0306  0008               	return
  8984  0307                     __end_of_do_I2C_DO_ADDRESS_NACK:	
  8985                           
  8986                           	psect	text24
  8987  0566                     __ptext24:	
  8988 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
  8989 ;; Defined at:
  8990 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
  8991 ;; Parameters:    Size  Location     Type
  8992 ;;		None
  8993 ;; Auto vars:     Size  Location     Type
  8994 ;;		None
  8995 ;; Return value:  Size  Location     Type
  8996 ;;                  1    wreg      enum E12722
  8997 ;; Registers used:
  8998 ;;		wreg, status,2, status,0, pclath, cstack
  8999 ;; Tracked objects:
  9000 ;;		On entry : 0/0
  9001 ;;		On exit  : 0/0
  9002 ;;		Unchanged: 0/0
  9003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9008 ;;Total ram usage:        0 bytes
  9009 ;; Hardware stack levels used:    1
  9010 ;; Hardware stack levels required when called:    1
  9011 ;; This function calls:
  9012 ;;		_i2c1_driver_sendNACK
  9013 ;; This function is called by:
  9014 ;;		_do_I2C_RX
  9015 ;;		_i2c_ISR
  9016 ;; This function uses a non-reentrant model
  9017 ;;
  9018                           
  9019                           
  9020                           ;psect for function _do_I2C_DO_NACK_RESTART
  9021  0566                     _do_I2C_DO_NACK_RESTART:	
  9022  0566                     i1l2939:	
  9023                           ;incstack = 0
  9024                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  9025                           
  9026                           
  9027                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
  9028  0566  3185  2597  3185   	fcall	_i2c1_driver_sendNACK
  9029  0569                     i1l2941:	
  9030                           
  9031                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
  9032  0569  3009               	movlw	9
  9033  056A                     i1l195:	
  9034  056A  0008               	return
  9035  056B                     __end_of_do_I2C_DO_NACK_RESTART:	
  9036                           
  9037                           	psect	text25
  9038  056B                     __ptext25:	
  9039 ;; *************** function _do_I2C_DO_NACK_STOP *****************
  9040 ;; Defined at:
  9041 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
  9042 ;; Parameters:    Size  Location     Type
  9043 ;;		None
  9044 ;; Auto vars:     Size  Location     Type
  9045 ;;		None
  9046 ;; Return value:  Size  Location     Type
  9047 ;;                  1    wreg      enum E12722
  9048 ;; Registers used:
  9049 ;;		wreg, status,2, status,0, pclath, cstack
  9050 ;; Tracked objects:
  9051 ;;		On entry : 0/0
  9052 ;;		On exit  : 0/0
  9053 ;;		Unchanged: 0/0
  9054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9059 ;;Total ram usage:        0 bytes
  9060 ;; Hardware stack levels used:    1
  9061 ;; Hardware stack levels required when called:    1
  9062 ;; This function calls:
  9063 ;;		_i2c1_driver_sendNACK
  9064 ;; This function is called by:
  9065 ;;		_do_I2C_RX
  9066 ;;		_i2c_ISR
  9067 ;; This function uses a non-reentrant model
  9068 ;;
  9069                           
  9070                           
  9071                           ;psect for function _do_I2C_DO_NACK_STOP
  9072  056B                     _do_I2C_DO_NACK_STOP:	
  9073  056B                     i1l2933:	
  9074                           ;incstack = 0
  9075                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  9076                           
  9077                           
  9078                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
  9079  056B  3185  2597  3185   	fcall	_i2c1_driver_sendNACK
  9080  056E                     i1l2935:	
  9081                           
  9082                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
  9083  056E  300A               	movlw	10
  9084  056F                     i1l192:	
  9085  056F  0008               	return
  9086  0570                     __end_of_do_I2C_DO_NACK_STOP:	
  9087                           
  9088                           	psect	text26
  9089  0570                     __ptext26:	
  9090 ;; *************** function _do_I2C_DO_ACK *****************
  9091 ;; Defined at:
  9092 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
  9093 ;; Parameters:    Size  Location     Type
  9094 ;;		None
  9095 ;; Auto vars:     Size  Location     Type
  9096 ;;		None
  9097 ;; Return value:  Size  Location     Type
  9098 ;;                  1    wreg      enum E12722
  9099 ;; Registers used:
  9100 ;;		wreg, status,2, status,0, pclath, cstack
  9101 ;; Tracked objects:
  9102 ;;		On entry : 0/0
  9103 ;;		On exit  : 0/0
  9104 ;;		Unchanged: 0/0
  9105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9110 ;;Total ram usage:        0 bytes
  9111 ;; Hardware stack levels used:    1
  9112 ;; Hardware stack levels required when called:    1
  9113 ;; This function calls:
  9114 ;;		_i2c1_driver_sendACK
  9115 ;; This function is called by:
  9116 ;;		_i2c_ISR
  9117 ;; This function uses a non-reentrant model
  9118 ;;
  9119                           
  9120                           
  9121                           ;psect for function _do_I2C_DO_ACK
  9122  0570                     _do_I2C_DO_ACK:	
  9123  0570                     i1l3101:	
  9124                           ;incstack = 0
  9125                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
  9126                           
  9127                           
  9128                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
  9129  0570  3185  259B  3185   	fcall	_i2c1_driver_sendACK
  9130  0573                     i1l3103:	
  9131                           
  9132                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
  9133  0573  3005               	movlw	5
  9134  0574                     i1l189:	
  9135  0574  0008               	return
  9136  0575                     __end_of_do_I2C_DO_ACK:	
  9137                           
  9138                           	psect	text27
  9139  0553                     __ptext27:	
  9140 ;; *************** function _do_I2C_RCEN *****************
  9141 ;; Defined at:
  9142 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
  9143 ;; Parameters:    Size  Location     Type
  9144 ;;		None
  9145 ;; Auto vars:     Size  Location     Type
  9146 ;;		None
  9147 ;; Return value:  Size  Location     Type
  9148 ;;                  1    wreg      enum E12722
  9149 ;; Registers used:
  9150 ;;		wreg, status,2, status,0, pclath, cstack
  9151 ;; Tracked objects:
  9152 ;;		On entry : 0/0
  9153 ;;		On exit  : 0/0
  9154 ;;		Unchanged: 0/0
  9155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9160 ;;Total ram usage:        0 bytes
  9161 ;; Hardware stack levels used:    1
  9162 ;; Hardware stack levels required when called:    1
  9163 ;; This function calls:
  9164 ;;		_i2c1_driver_startRX
  9165 ;; This function is called by:
  9166 ;;		_i2c_ISR
  9167 ;; This function uses a non-reentrant model
  9168 ;;
  9169                           
  9170                           
  9171                           ;psect for function _do_I2C_RCEN
  9172  0553                     _do_I2C_RCEN:	
  9173  0553                     i1l3093:	
  9174                           ;incstack = 0
  9175                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
  9176                           
  9177                           
  9178                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
  9179  0553  0020               	movlb	0	; select bank0
  9180  0554  11A0               	bcf	_i2c_status,3
  9181  0555                     i1l3095:	
  9182                           
  9183                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
  9184  0555  3185  25AB  3185   	fcall	_i2c1_driver_startRX
  9185  0558                     i1l3097:	
  9186                           
  9187                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
  9188  0558  3004               	movlw	4
  9189  0559                     i1l186:	
  9190  0559  0008               	return
  9191  055A                     __end_of_do_I2C_RCEN:	
  9192                           
  9193                           	psect	text28
  9194  053B                     __ptext28:	
  9195 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
  9196 ;; Defined at:
  9197 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
  9198 ;; Parameters:    Size  Location     Type
  9199 ;;		None
  9200 ;; Auto vars:     Size  Location     Type
  9201 ;;		None
  9202 ;; Return value:  Size  Location     Type
  9203 ;;                  1    wreg      enum E12722
  9204 ;; Registers used:
  9205 ;;		wreg, status,2, status,0, pclath, cstack
  9206 ;; Tracked objects:
  9207 ;;		On entry : 0/0
  9208 ;;		On exit  : 0/0
  9209 ;;		Unchanged: 0/0
  9210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9215 ;;Total ram usage:        0 bytes
  9216 ;; Hardware stack levels used:    1
  9217 ;; Hardware stack levels required when called:    1
  9218 ;; This function calls:
  9219 ;;		_i2c1_driver_TXData
  9220 ;; This function is called by:
  9221 ;;		_i2c_ISR
  9222 ;; This function uses a non-reentrant model
  9223 ;;
  9224                           
  9225                           
  9226                           ;psect for function _do_I2C_SEND_ADR_WRITE
  9227  053B                     _do_I2C_SEND_ADR_WRITE:	
  9228  053B                     i1l3085:	
  9229                           ;incstack = 0
  9230                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  9231                           
  9232                           
  9233                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
  9234  053B  0020               	movlb	0	; select bank0
  9235  053C  15A0               	bsf	_i2c_status,3
  9236  053D                     i1l3087:	
  9237                           
  9238                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
  9239  053D  3521               	lslf	_i2c_status+1,w
  9240  053E  3185  258E  3185   	fcall	_i2c1_driver_TXData
  9241  0541                     i1l3089:	
  9242                           
  9243                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
  9244  0541  3003               	movlw	3
  9245  0542                     i1l183:	
  9246  0542  0008               	return
  9247  0543                     __end_of_do_I2C_SEND_ADR_WRITE:	
  9248                           
  9249                           	psect	text29
  9250  052A                     __ptext29:	
  9251 ;; *************** function _do_I2C_SEND_ADR_READ *****************
  9252 ;; Defined at:
  9253 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
  9254 ;; Parameters:    Size  Location     Type
  9255 ;;		None
  9256 ;; Auto vars:     Size  Location     Type
  9257 ;;		None
  9258 ;; Return value:  Size  Location     Type
  9259 ;;                  1    wreg      enum E12722
  9260 ;; Registers used:
  9261 ;;		wreg, status,2, status,0, pclath, cstack
  9262 ;; Tracked objects:
  9263 ;;		On entry : 0/0
  9264 ;;		On exit  : 0/0
  9265 ;;		Unchanged: 0/0
  9266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9271 ;;Total ram usage:        0 bytes
  9272 ;; Hardware stack levels used:    1
  9273 ;; Hardware stack levels required when called:    1
  9274 ;; This function calls:
  9275 ;;		_i2c1_driver_TXData
  9276 ;; This function is called by:
  9277 ;;		_i2c_ISR
  9278 ;; This function uses a non-reentrant model
  9279 ;;
  9280                           
  9281                           
  9282                           ;psect for function _do_I2C_SEND_ADR_READ
  9283  052A                     _do_I2C_SEND_ADR_READ:	
  9284  052A                     i1l3077:	
  9285                           ;incstack = 0
  9286                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  9287                           
  9288                           
  9289                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
  9290  052A  0020               	movlb	0	; select bank0
  9291  052B  15A0               	bsf	_i2c_status,3
  9292  052C                     i1l3079:	
  9293                           
  9294                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
  9295  052C  1403               	setc
  9296  052D  0D21               	rlf	_i2c_status+1,w
  9297  052E  3185  258E  3185   	fcall	_i2c1_driver_TXData
  9298  0531                     i1l3081:	
  9299                           
  9300                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
  9301  0531  3005               	movlw	5
  9302  0532                     i1l180:	
  9303  0532  0008               	return
  9304  0533                     __end_of_do_I2C_SEND_ADR_READ:	
  9305                           
  9306                           	psect	text30
  9307  0575                     __ptext30:	
  9308 ;; *************** function _do_I2C_SEND_STOP *****************
  9309 ;; Defined at:
  9310 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
  9311 ;; Parameters:    Size  Location     Type
  9312 ;;		None
  9313 ;; Auto vars:     Size  Location     Type
  9314 ;;		None
  9315 ;; Return value:  Size  Location     Type
  9316 ;;                  1    wreg      enum E12722
  9317 ;; Registers used:
  9318 ;;		wreg, status,2, status,0, pclath, cstack
  9319 ;; Tracked objects:
  9320 ;;		On entry : 0/0
  9321 ;;		On exit  : 0/0
  9322 ;;		Unchanged: 0/0
  9323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9328 ;;Total ram usage:        0 bytes
  9329 ;; Hardware stack levels used:    1
  9330 ;; Hardware stack levels required when called:    1
  9331 ;; This function calls:
  9332 ;;		_i2c1_driver_stop
  9333 ;; This function is called by:
  9334 ;;		_do_I2C_DO_ADDRESS_NACK
  9335 ;;		_do_I2C_TX
  9336 ;;		_do_I2C_TX_EMPTY
  9337 ;;		_i2c_ISR
  9338 ;; This function uses a non-reentrant model
  9339 ;;
  9340                           
  9341                           
  9342                           ;psect for function _do_I2C_SEND_STOP
  9343  0575                     _do_I2C_SEND_STOP:	
  9344  0575                     i1l2921:	
  9345                           ;incstack = 0
  9346                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  9347                           
  9348                           
  9349                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
  9350  0575  3185  25AE  3185   	fcall	_i2c1_driver_stop
  9351  0578                     i1l2923:	
  9352                           
  9353                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
  9354  0578  3000               	movlw	0
  9355  0579                     i1l177:	
  9356  0579  0008               	return
  9357  057A                     __end_of_do_I2C_SEND_STOP:	
  9358                           
  9359                           	psect	text31
  9360  057A                     __ptext31:	
  9361 ;; *************** function _do_I2C_SEND_RESTART *****************
  9362 ;; Defined at:
  9363 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
  9364 ;; Parameters:    Size  Location     Type
  9365 ;;		None
  9366 ;; Auto vars:     Size  Location     Type
  9367 ;;		None
  9368 ;; Return value:  Size  Location     Type
  9369 ;;                  1    wreg      enum E12722
  9370 ;; Registers used:
  9371 ;;		wreg, status,2, status,0, pclath, cstack
  9372 ;; Tracked objects:
  9373 ;;		On entry : 0/0
  9374 ;;		On exit  : 0/0
  9375 ;;		Unchanged: 0/0
  9376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9381 ;;Total ram usage:        0 bytes
  9382 ;; Hardware stack levels used:    1
  9383 ;; Hardware stack levels required when called:    1
  9384 ;; This function calls:
  9385 ;;		_i2c1_driver_restart
  9386 ;; This function is called by:
  9387 ;;		_do_I2C_DO_ADDRESS_NACK
  9388 ;;		_do_I2C_TX_EMPTY
  9389 ;;		_i2c_ISR
  9390 ;; This function uses a non-reentrant model
  9391 ;;
  9392                           
  9393                           
  9394                           ;psect for function _do_I2C_SEND_RESTART
  9395  057A                     _do_I2C_SEND_RESTART:	
  9396  057A                     i1l2915:	
  9397                           ;incstack = 0
  9398                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  9399                           
  9400                           
  9401                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
  9402  057A  3185  25B1  3185   	fcall	_i2c1_driver_restart
  9403  057D                     i1l2917:	
  9404                           
  9405                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
  9406  057D  3001               	movlw	1
  9407  057E                     i1l174:	
  9408  057E  0008               	return
  9409  057F                     __end_of_do_I2C_SEND_RESTART:	
  9410                           
  9411                           	psect	text32
  9412  057F                     __ptext32:	
  9413 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
  9414 ;; Defined at:
  9415 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
  9416 ;; Parameters:    Size  Location     Type
  9417 ;;		None
  9418 ;; Auto vars:     Size  Location     Type
  9419 ;;		None
  9420 ;; Return value:  Size  Location     Type
  9421 ;;                  1    wreg      enum E12722
  9422 ;; Registers used:
  9423 ;;		wreg, status,2, status,0, pclath, cstack
  9424 ;; Tracked objects:
  9425 ;;		On entry : 0/0
  9426 ;;		On exit  : 0/0
  9427 ;;		Unchanged: 0/0
  9428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9433 ;;Total ram usage:        0 bytes
  9434 ;; Hardware stack levels used:    1
  9435 ;; Hardware stack levels required when called:    1
  9436 ;; This function calls:
  9437 ;;		_i2c1_driver_restart
  9438 ;; This function is called by:
  9439 ;;		_do_I2C_TX
  9440 ;;		_i2c_ISR
  9441 ;; This function uses a non-reentrant model
  9442 ;;
  9443                           
  9444                           
  9445                           ;psect for function _do_I2C_SEND_RESTART_WRITE
  9446  057F                     _do_I2C_SEND_RESTART_WRITE:	
  9447  057F                     i1l2909:	
  9448                           ;incstack = 0
  9449                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  9450                           
  9451                           
  9452                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
  9453  057F  3185  25B1  3185   	fcall	_i2c1_driver_restart
  9454  0582                     i1l2911:	
  9455                           
  9456                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
  9457  0582  3002               	movlw	2
  9458  0583                     i1l171:	
  9459  0583  0008               	return
  9460  0584                     __end_of_do_I2C_SEND_RESTART_WRITE:	
  9461                           
  9462                           	psect	text33
  9463  0584                     __ptext33:	
  9464 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
  9465 ;; Defined at:
  9466 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
  9467 ;; Parameters:    Size  Location     Type
  9468 ;;		None
  9469 ;; Auto vars:     Size  Location     Type
  9470 ;;		None
  9471 ;; Return value:  Size  Location     Type
  9472 ;;                  1    wreg      enum E12722
  9473 ;; Registers used:
  9474 ;;		wreg, status,2, status,0, pclath, cstack
  9475 ;; Tracked objects:
  9476 ;;		On entry : 0/0
  9477 ;;		On exit  : 0/0
  9478 ;;		Unchanged: 0/0
  9479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9484 ;;Total ram usage:        0 bytes
  9485 ;; Hardware stack levels used:    1
  9486 ;; Hardware stack levels required when called:    1
  9487 ;; This function calls:
  9488 ;;		_i2c1_driver_restart
  9489 ;; This function is called by:
  9490 ;;		_do_I2C_TX
  9491 ;;		_i2c_ISR
  9492 ;; This function uses a non-reentrant model
  9493 ;;
  9494                           
  9495                           
  9496                           ;psect for function _do_I2C_SEND_RESTART_READ
  9497  0584                     _do_I2C_SEND_RESTART_READ:	
  9498  0584                     i1l2903:	
  9499                           ;incstack = 0
  9500                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  9501                           
  9502                           
  9503                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
  9504  0584  3185  25B1  3185   	fcall	_i2c1_driver_restart
  9505  0587                     i1l2905:	
  9506                           
  9507                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
  9508  0587  3001               	movlw	1
  9509  0588                     i1l168:	
  9510  0588  0008               	return
  9511  0589                     __end_of_do_I2C_SEND_RESTART_READ:	
  9512                           
  9513                           	psect	text34
  9514  0589                     __ptext34:	
  9515 ;; *************** function _do_I2C_IDLE *****************
  9516 ;; Defined at:
  9517 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
  9518 ;; Parameters:    Size  Location     Type
  9519 ;;		None
  9520 ;; Auto vars:     Size  Location     Type
  9521 ;;		None
  9522 ;; Return value:  Size  Location     Type
  9523 ;;                  1    wreg      enum E12722
  9524 ;; Registers used:
  9525 ;;		wreg, status,2
  9526 ;; Tracked objects:
  9527 ;;		On entry : 0/0
  9528 ;;		On exit  : 0/0
  9529 ;;		Unchanged: 0/0
  9530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9535 ;;Total ram usage:        0 bytes
  9536 ;; Hardware stack levels used:    1
  9537 ;; This function calls:
  9538 ;;		Nothing
  9539 ;; This function is called by:
  9540 ;;		_i2c_ISR
  9541 ;; This function uses a non-reentrant model
  9542 ;;
  9543                           
  9544                           
  9545                           ;psect for function _do_I2C_IDLE
  9546  0589                     _do_I2C_IDLE:	
  9547  0589                     i1l3069:	
  9548                           ;incstack = 0
  9549                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
  9550                           
  9551                           
  9552                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
  9553  0589  0020               	movlb	0	; select bank0
  9554  058A  1020               	bcf	_i2c_status,0
  9555  058B                     i1l3071:	
  9556                           
  9557                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
  9558  058B  01AA               	clrf	_i2c_status+10
  9559  058C                     i1l3073:	
  9560                           
  9561                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
  9562  058C  300E               	movlw	14
  9563  058D                     i1l165:	
  9564  058D  0008               	return
  9565  058E                     __end_of_do_I2C_IDLE:	
  9566                           
  9567                           	psect	text35
  9568  0543                     __ptext35:	
  9569 ;; *************** function _do_I2C_RESET *****************
  9570 ;; Defined at:
  9571 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
  9572 ;; Parameters:    Size  Location     Type
  9573 ;;		None
  9574 ;; Auto vars:     Size  Location     Type
  9575 ;;		None
  9576 ;; Return value:  Size  Location     Type
  9577 ;;                  1    wreg      enum E12722
  9578 ;; Registers used:
  9579 ;;		wreg, status,2, status,0, pclath, cstack
  9580 ;; Tracked objects:
  9581 ;;		On entry : 0/0
  9582 ;;		On exit  : 0/0
  9583 ;;		Unchanged: 0/0
  9584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9589 ;;Total ram usage:        0 bytes
  9590 ;; Hardware stack levels used:    1
  9591 ;; Hardware stack levels required when called:    1
  9592 ;; This function calls:
  9593 ;;		_i2c1_driver_resetBus
  9594 ;; This function is called by:
  9595 ;;		_i2c_ISR
  9596 ;; This function uses a non-reentrant model
  9597 ;;
  9598                           
  9599                           
  9600                           ;psect for function _do_I2C_RESET
  9601  0543                     _do_I2C_RESET:	
  9602  0543                     i1l3059:	
  9603                           ;incstack = 0
  9604                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
  9605                           
  9606                           
  9607                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
  9608  0543  3185  25BA  3185   	fcall	_i2c1_driver_resetBus
  9609  0546                     i1l3061:	
  9610                           
  9611                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
  9612  0546  0020               	movlb	0	; select bank0
  9613  0547  1020               	bcf	_i2c_status,0
  9614  0548                     i1l3063:	
  9615                           
  9616                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
  9617  0548  01AA               	clrf	_i2c_status+10
  9618  0549                     i1l3065:	
  9619                           
  9620                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
  9621  0549  300E               	movlw	14
  9622  054A                     i1l162:	
  9623  054A  0008               	return
  9624  054B                     __end_of_do_I2C_RESET:	
  9625                           
  9626                           	psect	text36
  9627  0278                     __ptext36:	
  9628 ;; *************** function _do_I2C_TX_EMPTY *****************
  9629 ;; Defined at:
  9630 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
  9631 ;; Parameters:    Size  Location     Type
  9632 ;;		None
  9633 ;; Auto vars:     Size  Location     Type
  9634 ;;		None
  9635 ;; Return value:  Size  Location     Type
  9636 ;;                  1    wreg      enum E12722
  9637 ;; Registers used:
  9638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9639 ;; Tracked objects:
  9640 ;;		On entry : 0/0
  9641 ;;		On exit  : 0/0
  9642 ;;		Unchanged: 0/0
  9643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9646 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9647 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9648 ;;Total ram usage:        3 bytes
  9649 ;; Hardware stack levels used:    1
  9650 ;; Hardware stack levels required when called:    3
  9651 ;; This function calls:
  9652 ;;		Absolute function
  9653 ;;		_do_I2C_SEND_RESTART
  9654 ;;		_do_I2C_SEND_STOP
  9655 ;;		_i2c_restartWrite
  9656 ;;		_mssp1_setIRQ
  9657 ;;		_rd1RegCompleteHandler
  9658 ;;		_rd2RegCompleteHandler
  9659 ;;		_rdBlkRegCompleteHandler
  9660 ;;		_returnReset
  9661 ;;		_returnStop
  9662 ;;		_wr1RegCompleteHandler
  9663 ;;		_wr2RegCompleteHandler
  9664 ;; This function is called by:
  9665 ;;		_i2c_ISR
  9666 ;; This function uses a non-reentrant model
  9667 ;;
  9668                           
  9669                           
  9670                           ;psect for function _do_I2C_TX_EMPTY
  9671  0278                     _do_I2C_TX_EMPTY:	
  9672  0278                     i1l3995:	
  9673                           ;incstack = 0
  9674                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9675                           
  9676                           
  9677                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
  9678  0278  0020               	movlb	0	; select bank0
  9679  0279  1520               	bsf	_i2c_status,2
  9680                           
  9681                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
  9682  027A  2A88               	goto	i1l4013
  9683  027B                     i1l3997:	
  9684                           
  9685                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
  9686  027B  3185  257A  3182   	fcall	_do_I2C_SEND_RESTART
  9687  027E  2AAA               	goto	i1l237
  9688  027F                     i1l4001:	
  9689                           
  9690                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
  9691  027F  3185  25A5  3182   	fcall	_mssp1_setIRQ
  9692  0282                     i1l4003:	
  9693                           
  9694                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
  9695  0282  3003               	movlw	3
  9696  0283  2AAA               	goto	i1l237
  9697  0284                     i1l4007:	
  9698                           
  9699                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
  9700  0284  3185  2575  3182   	fcall	_do_I2C_SEND_STOP
  9701  0287  2AAA               	goto	i1l237
  9702  0288                     i1l4013:	
  9703  0288  0837               	movf	low ((_i2c_status| 0+23)),w
  9704  0289  00F0               	movwf	??_do_I2C_TX_EMPTY
  9705  028A  0870               	movf	??_do_I2C_TX_EMPTY,w
  9706  028B  00F6               	movwf	rdBlkRegCompleteHandler@p
  9707  028C  300B               	movlw	11
  9708  028D  3E20               	addlw	(low (_i2c_status| 0))& (0+255)
  9709  028E  0086               	movwf	6
  9710  028F  0187               	clrf	7
  9711  0290  3F41               	moviw [1]fsr1
  9712  0291  008A               	movwf	10
  9713  0292  3F40               	moviw [0]fsr1
  9714  0293  000A               	callw
  9715  0294  3182               	pagesel	$
  9716  0295  00F1               	movwf	??_do_I2C_TX_EMPTY+1
  9717  0296  01F2               	clrf	??_do_I2C_TX_EMPTY+2
  9718                           
  9719                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9720                           ; Switch size 1, requested type "simple"
  9721                           ; Number of cases is 1, Range of values is 0 to 0
  9722                           ; switch strategies available:
  9723                           ; Name         Instructions Cycles
  9724                           ; simple_byte            4     3 (average)
  9725                           ; direct_byte            8     6 (fixed)
  9726                           ; jumptable            260     6 (fixed)
  9727                           ;	Chosen strategy is simple_byte
  9728  0297  0872               	movf	??_do_I2C_TX_EMPTY+2,w
  9729  0298  3A00               	xorlw	0	; case 0
  9730  0299  1903               	skipnz
  9731  029A  2A9C               	goto	i1l4563
  9732  029B  2A84               	goto	i1l4007
  9733  029C                     i1l4563:	
  9734                           
  9735                           ; Switch size 1, requested type "simple"
  9736                           ; Number of cases is 4, Range of values is 1 to 4
  9737                           ; switch strategies available:
  9738                           ; Name         Instructions Cycles
  9739                           ; simple_byte           13     7 (average)
  9740                           ; direct_byte           17     9 (fixed)
  9741                           ; jumptable            263     9 (fixed)
  9742                           ;	Chosen strategy is simple_byte
  9743  029C  0871               	movf	??_do_I2C_TX_EMPTY+1,w
  9744  029D  3A01               	xorlw	1	; case 1
  9745  029E  1903               	skipnz
  9746  029F  2A84               	goto	i1l4007
  9747  02A0  3A03               	xorlw	3	; case 2
  9748  02A1  1903               	skipnz
  9749  02A2  2A7B               	goto	i1l3997
  9750  02A3  3A01               	xorlw	1	; case 3
  9751  02A4  1903               	skipnz
  9752  02A5  2A7B               	goto	i1l3997
  9753  02A6  3A07               	xorlw	7	; case 4
  9754  02A7  1903               	skipnz
  9755  02A8  2A7F               	goto	i1l4001
  9756  02A9  2A84               	goto	i1l4007
  9757  02AA                     i1l237:	
  9758  02AA  0008               	return
  9759  02AB                     __end_of_do_I2C_TX_EMPTY:	
  9760                           
  9761                           	psect	text37
  9762  05A5                     __ptext37:	
  9763 ;; *************** function _mssp1_setIRQ *****************
  9764 ;; Defined at:
  9765 ;;		line 59 in file "mcc_generated_files/i2c1_driver.c"
  9766 ;; Parameters:    Size  Location     Type
  9767 ;;		None
  9768 ;; Auto vars:     Size  Location     Type
  9769 ;;		None
  9770 ;; Return value:  Size  Location     Type
  9771 ;;                  1    wreg      void 
  9772 ;; Registers used:
  9773 ;;		None
  9774 ;; Tracked objects:
  9775 ;;		On entry : 0/0
  9776 ;;		On exit  : 0/0
  9777 ;;		Unchanged: 0/0
  9778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9783 ;;Total ram usage:        0 bytes
  9784 ;; Hardware stack levels used:    1
  9785 ;; This function calls:
  9786 ;;		Nothing
  9787 ;; This function is called by:
  9788 ;;		_do_I2C_TX_EMPTY
  9789 ;; This function uses a non-reentrant model
  9790 ;;
  9791                           
  9792                           
  9793                           ;psect for function _mssp1_setIRQ
  9794  05A5                     _mssp1_setIRQ:	
  9795  05A5                     i1l2953:	
  9796                           ;incstack = 0
  9797                           ; Regs used in _mssp1_setIRQ: []
  9798                           
  9799                           
  9800                           ;mcc_generated_files/i2c1_driver.c: 61:     else
  9801  05A5  002E               	movlb	14	; select bank14
  9802  05A6  140F               	bsf	15,0	;volatile
  9803  05A7                     i1l636:	
  9804  05A7  0008               	return
  9805  05A8                     __end_of_mssp1_setIRQ:	
  9806                           
  9807                           	psect	text38
  9808  054B                     __ptext38:	
  9809 ;; *************** function _i2c1_driver_isNACK *****************
  9810 ;; Defined at:
  9811 ;;		line 162 in file "mcc_generated_files/i2c1_driver.c"
  9812 ;; Parameters:    Size  Location     Type
  9813 ;;		None
  9814 ;; Auto vars:     Size  Location     Type
  9815 ;;		None
  9816 ;; Return value:  Size  Location     Type
  9817 ;;		None               void
  9818 ;; Registers used:
  9819 ;;		wreg, status,2, status,0
  9820 ;; Tracked objects:
  9821 ;;		On entry : 0/0
  9822 ;;		On exit  : 0/0
  9823 ;;		Unchanged: 0/0
  9824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9827 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9828 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9829 ;;Total ram usage:        1 bytes
  9830 ;; Hardware stack levels used:    1
  9831 ;; This function calls:
  9832 ;;		Nothing
  9833 ;; This function is called by:
  9834 ;;		_do_I2C_TX
  9835 ;;		_i2c_ISR
  9836 ;; This function uses a non-reentrant model
  9837 ;;
  9838                           
  9839                           
  9840                           ;psect for function _i2c1_driver_isNACK
  9841  054B                     _i2c1_driver_isNACK:	
  9842  054B                     i1l2945:	
  9843                           ;incstack = 0
  9844                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
  9845                           
  9846                           
  9847                           ;mcc_generated_files/i2c1_driver.c: 164:     return SSP1CON2bits.ACKSTAT;
  9848  054B  0023               	movlb	3	; select bank3
  9849  054C  0E11               	swapf	17,w	;volatile
  9850  054D  0C89               	rrf	9,f
  9851  054E  0C89               	rrf	9,f
  9852  054F  3901               	andlw	1
  9853  0550  00F0               	movwf	??_i2c1_driver_isNACK
  9854  0551  0C70               	rrf	??_i2c1_driver_isNACK,w
  9855  0552                     i1l671:	
  9856  0552  0008               	return
  9857  0553                     __end_of_i2c1_driver_isNACK:	
  9858                           
  9859                           	psect	text39
  9860  058E                     __ptext39:	
  9861 ;; *************** function _i2c1_driver_TXData *****************
  9862 ;; Defined at:
  9863 ;;		line 187 in file "mcc_generated_files/i2c1_driver.c"
  9864 ;; Parameters:    Size  Location     Type
  9865 ;;  d               1    wreg     unsigned char 
  9866 ;; Auto vars:     Size  Location     Type
  9867 ;;  d               1    0[COMMON] unsigned char 
  9868 ;; Return value:  Size  Location     Type
  9869 ;;                  1    wreg      void 
  9870 ;; Registers used:
  9871 ;;		wreg
  9872 ;; Tracked objects:
  9873 ;;		On entry : 0/0
  9874 ;;		On exit  : 0/0
  9875 ;;		Unchanged: 0/0
  9876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9878 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9880 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9881 ;;Total ram usage:        1 bytes
  9882 ;; Hardware stack levels used:    1
  9883 ;; This function calls:
  9884 ;;		Nothing
  9885 ;; This function is called by:
  9886 ;;		_do_I2C_SEND_ADR_READ
  9887 ;;		_do_I2C_SEND_ADR_WRITE
  9888 ;;		_do_I2C_TX
  9889 ;; This function uses a non-reentrant model
  9890 ;;
  9891                           
  9892                           
  9893                           ;psect for function _i2c1_driver_TXData
  9894  058E                     _i2c1_driver_TXData:	
  9895                           
  9896                           ;incstack = 0
  9897                           ; Regs used in _i2c1_driver_TXData: [wreg]
  9898                           ;i2c1_driver_TXData@d stored from wreg
  9899  058E  00F0               	movwf	i2c1_driver_TXData@d
  9900  058F                     i1l2927:	
  9901                           
  9902                           ;mcc_generated_files/i2c1_driver.c: 187: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 188: {;mcc_generated_files/i2c1_driver.c: 18
      +                          9:     SSP1BUF = d;
  9903  058F  0870               	movf	i2c1_driver_TXData@d,w
  9904  0590  0023               	movlb	3	; select bank3
  9905  0591  008C               	movwf	12	;volatile
  9906  0592                     i1l686:	
  9907  0592  0008               	return
  9908  0593                     __end_of_i2c1_driver_TXData:	
  9909                           
  9910                           	psect	text40
  9911  05A8                     __ptext40:	
  9912 ;; *************** function _i2c1_driver_getRXData *****************
  9913 ;; Defined at:
  9914 ;;		line 172 in file "mcc_generated_files/i2c1_driver.c"
  9915 ;; Parameters:    Size  Location     Type
  9916 ;;		None
  9917 ;; Auto vars:     Size  Location     Type
  9918 ;;		None
  9919 ;; Return value:  Size  Location     Type
  9920 ;;                  1    wreg      unsigned char 
  9921 ;; Registers used:
  9922 ;;		wreg
  9923 ;; Tracked objects:
  9924 ;;		On entry : 0/0
  9925 ;;		On exit  : 0/0
  9926 ;;		Unchanged: 0/0
  9927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9932 ;;Total ram usage:        0 bytes
  9933 ;; Hardware stack levels used:    1
  9934 ;; This function calls:
  9935 ;;		Nothing
  9936 ;; This function is called by:
  9937 ;;		_do_I2C_RX
  9938 ;; This function uses a non-reentrant model
  9939 ;;
  9940                           
  9941                           
  9942                           ;psect for function _i2c1_driver_getRXData
  9943  05A8                     _i2c1_driver_getRXData:	
  9944  05A8                     i1l2949:	
  9945                           ;incstack = 0
  9946                           ; Regs used in _i2c1_driver_getRXData: [wreg]
  9947                           
  9948                           
  9949                           ;mcc_generated_files/i2c1_driver.c: 174:     return SSP1BUF;
  9950  05A8  0023               	movlb	3	; select bank3
  9951  05A9  080C               	movf	12,w	;volatile
  9952  05AA                     i1l677:	
  9953  05AA  0008               	return
  9954  05AB                     __end_of_i2c1_driver_getRXData:	
  9955                           
  9956                           	psect	text41
  9957  0597                     __ptext41:	
  9958 ;; *************** function _i2c1_driver_sendNACK *****************
  9959 ;; Defined at:
  9960 ;;		line 203 in file "mcc_generated_files/i2c1_driver.c"
  9961 ;; Parameters:    Size  Location     Type
  9962 ;;		None
  9963 ;; Auto vars:     Size  Location     Type
  9964 ;;		None
  9965 ;; Return value:  Size  Location     Type
  9966 ;;                  1    wreg      void 
  9967 ;; Registers used:
  9968 ;;		None
  9969 ;; Tracked objects:
  9970 ;;		On entry : 0/0
  9971 ;;		On exit  : 0/0
  9972 ;;		Unchanged: 0/0
  9973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9978 ;;Total ram usage:        0 bytes
  9979 ;; Hardware stack levels used:    1
  9980 ;; This function calls:
  9981 ;;		Nothing
  9982 ;; This function is called by:
  9983 ;;		_do_I2C_DO_NACK_STOP
  9984 ;;		_do_I2C_DO_NACK_RESTART
  9985 ;; This function uses a non-reentrant model
  9986 ;;
  9987                           
  9988                           
  9989                           ;psect for function _i2c1_driver_sendNACK
  9990  0597                     _i2c1_driver_sendNACK:	
  9991  0597                     i1l2893:	
  9992                           ;incstack = 0
  9993                           ; Regs used in _i2c1_driver_sendNACK: []
  9994                           
  9995                           
  9996                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKDT = 1;
  9997  0597  0023               	movlb	3	; select bank3
  9998  0598  1691               	bsf	17,5	;volatile
  9999                           
 10000                           ;mcc_generated_files/i2c1_driver.c: 206:     SSP1CON2bits.ACKEN = 1;
 10001  0599  1611               	bsf	17,4	;volatile
 10002  059A                     i1l695:	
 10003  059A  0008               	return
 10004  059B                     __end_of_i2c1_driver_sendNACK:	
 10005                           
 10006                           	psect	text42
 10007  05BA                     __ptext42:	
 10008 ;; *************** function _i2c1_driver_resetBus *****************
 10009 ;; Defined at:
 10010 ;;		line 142 in file "mcc_generated_files/i2c1_driver.c"
 10011 ;; Parameters:    Size  Location     Type
 10012 ;;		None
 10013 ;; Auto vars:     Size  Location     Type
 10014 ;;		None
 10015 ;; Return value:  Size  Location     Type
 10016 ;;                  1    wreg      void 
 10017 ;; Registers used:
 10018 ;;		None
 10019 ;; Tracked objects:
 10020 ;;		On entry : 0/0
 10021 ;;		On exit  : 0/0
 10022 ;;		Unchanged: 0/0
 10023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10028 ;;Total ram usage:        0 bytes
 10029 ;; Hardware stack levels used:    1
 10030 ;; This function calls:
 10031 ;;		Nothing
 10032 ;; This function is called by:
 10033 ;;		_do_I2C_RESET
 10034 ;; This function uses a non-reentrant model
 10035 ;;
 10036                           
 10037                           
 10038                           ;psect for function _i2c1_driver_resetBus
 10039  05BA                     _i2c1_driver_resetBus:	
 10040  05BA                     i1l659:	
 10041                           ;incstack = 0
 10042                           ; Regs used in _i2c1_driver_resetBus: []
 10043                           
 10044  05BA  0008               	return
 10045  05BB                     __end_of_i2c1_driver_resetBus:	
 10046                           
 10047                           	psect	text43
 10048  05AB                     __ptext43:	
 10049 ;; *************** function _i2c1_driver_startRX *****************
 10050 ;; Defined at:
 10051 ;;		line 167 in file "mcc_generated_files/i2c1_driver.c"
 10052 ;; Parameters:    Size  Location     Type
 10053 ;;		None
 10054 ;; Auto vars:     Size  Location     Type
 10055 ;;		None
 10056 ;; Return value:  Size  Location     Type
 10057 ;;                  1    wreg      void 
 10058 ;; Registers used:
 10059 ;;		None
 10060 ;; Tracked objects:
 10061 ;;		On entry : 0/0
 10062 ;;		On exit  : 0/0
 10063 ;;		Unchanged: 0/0
 10064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10069 ;;Total ram usage:        0 bytes
 10070 ;; Hardware stack levels used:    1
 10071 ;; This function calls:
 10072 ;;		Nothing
 10073 ;; This function is called by:
 10074 ;;		_do_I2C_RCEN
 10075 ;; This function uses a non-reentrant model
 10076 ;;
 10077                           
 10078                           
 10079                           ;psect for function _i2c1_driver_startRX
 10080  05AB                     _i2c1_driver_startRX:	
 10081  05AB                     i1l2929:	
 10082                           ;incstack = 0
 10083                           ; Regs used in _i2c1_driver_startRX: []
 10084                           
 10085                           
 10086                           ;mcc_generated_files/i2c1_driver.c: 169:     SSP1CON2bits.RCEN = 1;
 10087  05AB  0023               	movlb	3	; select bank3
 10088  05AC  1591               	bsf	17,3	;volatile
 10089  05AD                     i1l674:	
 10090  05AD  0008               	return
 10091  05AE                     __end_of_i2c1_driver_startRX:	
 10092                           
 10093                           	psect	text44
 10094  0417                     __ptext44:	
 10095 ;; *************** function _rdBlkRegCompleteHandler *****************
 10096 ;; Defined at:
 10097 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10098 ;; Parameters:    Size  Location     Type
 10099 ;;  p               1    6[COMMON] PTR void 
 10100 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10101 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10102 ;; Auto vars:     Size  Location     Type
 10103 ;;		None
 10104 ;; Return value:  Size  Location     Type
 10105 ;;                  1    wreg      enum E358
 10106 ;; Registers used:
 10107 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10108 ;; Tracked objects:
 10109 ;;		On entry : 0/0
 10110 ;;		On exit  : 0/0
 10111 ;;		Unchanged: 0/0
 10112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10113 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10116 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10117 ;;Total ram usage:        1 bytes
 10118 ;; Hardware stack levels used:    1
 10119 ;; Hardware stack levels required when called:    2
 10120 ;; This function calls:
 10121 ;;		_i2c_setBuffer
 10122 ;;		_i2c_setDataCompleteCallback
 10123 ;; This function is called by:
 10124 ;;		_i2c_readDataBlock
 10125 ;;		_do_I2C_DO_ADDRESS_NACK
 10126 ;;		_do_I2C_TX
 10127 ;;		_do_I2C_RX
 10128 ;;		_do_I2C_TX_EMPTY
 10129 ;; This function uses a non-reentrant model
 10130 ;;
 10131                           
 10132                           
 10133                           ;psect for function _rdBlkRegCompleteHandler
 10134  0417                     _rdBlkRegCompleteHandler:	
 10135  0417                     i1l3867:	
 10136                           ;incstack = 0
 10137                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 10138                           
 10139                           
 10140                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
 10141  0417  0876               	movf	rdBlkRegCompleteHandler@p,w
 10142  0418  0086               	movwf	6
 10143  0419  0187               	clrf	7
 10144  041A  3F40               	moviw [0]fsr1
 10145  041B  00F0               	movwf	i2c_setBuffer@bufferSize
 10146  041C  3F41               	moviw [1]fsr1
 10147  041D  00F1               	movwf	i2c_setBuffer@bufferSize+1
 10148  041E  0876               	movf	rdBlkRegCompleteHandler@p,w
 10149  041F  3E02               	addlw	2
 10150  0420  0086               	movwf	6
 10151  0421  0187               	clrf	7
 10152  0422  0801               	movf	1,w
 10153  0423  3184  24DB  3184   	fcall	_i2c_setBuffer
 10154                           
 10155                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 10156  0426  3000               	movlw	0
 10157  0427  0020               	movlb	0	; select bank0
 10158  0428  00D0               	movwf	i2c_setDataCompleteCallback@cb
 10159  0429  00D1               	movwf	i2c_setDataCompleteCallback@cb+1
 10160  042A  01D2               	clrf	i2c_setDataCompleteCallback@p
 10161  042B  3184  24FA  3184   	fcall	_i2c_setDataCompleteCallback
 10162  042E                     i1l3869:	
 10163                           
 10164                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
 10165  042E  3002               	movlw	2
 10166  042F                     i1l340:	
 10167  042F  0008               	return
 10168  0430                     __end_of_rdBlkRegCompleteHandler:	
 10169                           
 10170                           	psect	text45
 10171  0472                     __ptext45:	
 10172 ;; *************** function _rd2RegCompleteHandler *****************
 10173 ;; Defined at:
 10174 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10175 ;; Parameters:    Size  Location     Type
 10176 ;;  p               1    6[COMMON] PTR void 
 10177 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10178 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10179 ;; Auto vars:     Size  Location     Type
 10180 ;;		None
 10181 ;; Return value:  Size  Location     Type
 10182 ;;                  1    wreg      enum E358
 10183 ;; Registers used:
 10184 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10185 ;; Tracked objects:
 10186 ;;		On entry : 0/0
 10187 ;;		On exit  : 0/0
 10188 ;;		Unchanged: 0/0
 10189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10190 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10193 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10194 ;;Total ram usage:        1 bytes
 10195 ;; Hardware stack levels used:    1
 10196 ;; Hardware stack levels required when called:    2
 10197 ;; This function calls:
 10198 ;;		_i2c_setBuffer
 10199 ;;		_i2c_setDataCompleteCallback
 10200 ;; This function is called by:
 10201 ;;		_i2c_read2ByteRegister
 10202 ;;		_do_I2C_DO_ADDRESS_NACK
 10203 ;;		_do_I2C_TX
 10204 ;;		_do_I2C_RX
 10205 ;;		_do_I2C_TX_EMPTY
 10206 ;; This function uses a non-reentrant model
 10207 ;;
 10208                           
 10209                           
 10210                           ;psect for function _rd2RegCompleteHandler
 10211  0472                     _rd2RegCompleteHandler:	
 10212  0472                     i1l3851:	
 10213                           ;incstack = 0
 10214                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10215                           
 10216                           
 10217                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
 10218  0472  3002               	movlw	2
 10219  0473  00F0               	movwf	i2c_setBuffer@bufferSize
 10220  0474  3000               	movlw	0
 10221  0475  00F1               	movwf	i2c_setBuffer@bufferSize+1
 10222  0476  0876               	movf	rd2RegCompleteHandler@p,w
 10223  0477  3184  24DB  3184   	fcall	_i2c_setBuffer
 10224  047A                     i1l3853:	
 10225                           
 10226                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 10227  047A  3000               	movlw	0
 10228  047B  0020               	movlb	0	; select bank0
 10229  047C  00D0               	movwf	i2c_setDataCompleteCallback@cb
 10230  047D  00D1               	movwf	i2c_setDataCompleteCallback@cb+1
 10231  047E  01D2               	clrf	i2c_setDataCompleteCallback@p
 10232  047F  3184  24FA  3184   	fcall	_i2c_setDataCompleteCallback
 10233  0482                     i1l3855:	
 10234                           
 10235                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
 10236  0482  3002               	movlw	2
 10237  0483                     i1l316:	
 10238  0483  0008               	return
 10239  0484                     __end_of_rd2RegCompleteHandler:	
 10240                           
 10241                           	psect	text46
 10242  0484                     __ptext46:	
 10243 ;; *************** function _rd1RegCompleteHandler *****************
 10244 ;; Defined at:
 10245 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10246 ;; Parameters:    Size  Location     Type
 10247 ;;  p               1    6[COMMON] PTR void 
 10248 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10249 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10250 ;; Auto vars:     Size  Location     Type
 10251 ;;		None
 10252 ;; Return value:  Size  Location     Type
 10253 ;;                  1    wreg      enum E358
 10254 ;; Registers used:
 10255 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10256 ;; Tracked objects:
 10257 ;;		On entry : 0/0
 10258 ;;		On exit  : 0/0
 10259 ;;		Unchanged: 0/0
 10260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10261 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10264 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10265 ;;Total ram usage:        1 bytes
 10266 ;; Hardware stack levels used:    1
 10267 ;; Hardware stack levels required when called:    2
 10268 ;; This function calls:
 10269 ;;		_i2c_setBuffer
 10270 ;;		_i2c_setDataCompleteCallback
 10271 ;; This function is called by:
 10272 ;;		_i2c_read1ByteRegister
 10273 ;;		_do_I2C_DO_ADDRESS_NACK
 10274 ;;		_do_I2C_TX
 10275 ;;		_do_I2C_RX
 10276 ;;		_do_I2C_TX_EMPTY
 10277 ;; This function uses a non-reentrant model
 10278 ;;
 10279                           
 10280                           
 10281                           ;psect for function _rd1RegCompleteHandler
 10282  0484                     _rd1RegCompleteHandler:	
 10283  0484                     i1l3843:	
 10284                           ;incstack = 0
 10285                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10286                           
 10287                           
 10288                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
 10289  0484  3001               	movlw	1
 10290  0485  00F0               	movwf	i2c_setBuffer@bufferSize
 10291  0486  3000               	movlw	0
 10292  0487  00F1               	movwf	i2c_setBuffer@bufferSize+1
 10293  0488  0876               	movf	rd1RegCompleteHandler@p,w
 10294  0489  3184  24DB  3184   	fcall	_i2c_setBuffer
 10295  048C                     i1l3845:	
 10296                           
 10297                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 10298  048C  3000               	movlw	0
 10299  048D  0020               	movlb	0	; select bank0
 10300  048E  00D0               	movwf	i2c_setDataCompleteCallback@cb
 10301  048F  00D1               	movwf	i2c_setDataCompleteCallback@cb+1
 10302  0490  01D2               	clrf	i2c_setDataCompleteCallback@p
 10303  0491  3184  24FA  3184   	fcall	_i2c_setDataCompleteCallback
 10304  0494                     i1l3847:	
 10305                           
 10306                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
 10307  0494  3002               	movlw	2
 10308  0495                     i1l301:	
 10309  0495  0008               	return
 10310  0496                     __end_of_rd1RegCompleteHandler:	
 10311                           
 10312                           	psect	text47
 10313  0496                     __ptext47:	
 10314 ;; *************** function _wr1RegCompleteHandler *****************
 10315 ;; Defined at:
 10316 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10317 ;; Parameters:    Size  Location     Type
 10318 ;;  p               1    6[COMMON] PTR void 
 10319 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10320 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10321 ;; Auto vars:     Size  Location     Type
 10322 ;;		None
 10323 ;; Return value:  Size  Location     Type
 10324 ;;                  1    wreg      enum E358
 10325 ;; Registers used:
 10326 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10327 ;; Tracked objects:
 10328 ;;		On entry : 0/0
 10329 ;;		On exit  : 0/0
 10330 ;;		Unchanged: 0/0
 10331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10332 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10335 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10336 ;;Total ram usage:        1 bytes
 10337 ;; Hardware stack levels used:    1
 10338 ;; Hardware stack levels required when called:    2
 10339 ;; This function calls:
 10340 ;;		_i2c_setBuffer
 10341 ;;		_i2c_setDataCompleteCallback
 10342 ;; This function is called by:
 10343 ;;		_i2c_write1ByteRegister
 10344 ;;		_do_I2C_DO_ADDRESS_NACK
 10345 ;;		_do_I2C_TX
 10346 ;;		_do_I2C_RX
 10347 ;;		_do_I2C_TX_EMPTY
 10348 ;; This function uses a non-reentrant model
 10349 ;;
 10350                           
 10351                           
 10352                           ;psect for function _wr1RegCompleteHandler
 10353  0496                     _wr1RegCompleteHandler:	
 10354  0496                     i1l3835:	
 10355                           ;incstack = 0
 10356                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10357                           
 10358                           
 10359                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
 10360  0496  3001               	movlw	1
 10361  0497  00F0               	movwf	i2c_setBuffer@bufferSize
 10362  0498  3000               	movlw	0
 10363  0499  00F1               	movwf	i2c_setBuffer@bufferSize+1
 10364  049A  0876               	movf	wr1RegCompleteHandler@p,w
 10365  049B  3184  24DB  3184   	fcall	_i2c_setBuffer
 10366  049E                     i1l3837:	
 10367                           
 10368                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 10369  049E  3000               	movlw	0
 10370  049F  0020               	movlb	0	; select bank0
 10371  04A0  00D0               	movwf	i2c_setDataCompleteCallback@cb
 10372  04A1  00D1               	movwf	i2c_setDataCompleteCallback@cb+1
 10373  04A2  01D2               	clrf	i2c_setDataCompleteCallback@p
 10374  04A3  3184  24FA  3184   	fcall	_i2c_setDataCompleteCallback
 10375  04A6                     i1l3839:	
 10376                           
 10377                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
 10378  04A6  3004               	movlw	4
 10379  04A7                     i1l280:	
 10380  04A7  0008               	return
 10381  04A8                     __end_of_wr1RegCompleteHandler:	
 10382                           
 10383                           	psect	text48
 10384  05B4                     __ptext48:	
 10385 ;; *************** function _i2c_restartWrite *****************
 10386 ;; Defined at:
 10387 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 10388 ;; Parameters:    Size  Location     Type
 10389 ;;  p               1    6[COMMON] PTR void 
 10390 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10391 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10392 ;; Auto vars:     Size  Location     Type
 10393 ;;		None
 10394 ;; Return value:  Size  Location     Type
 10395 ;;                  1    wreg      enum E358
 10396 ;; Registers used:
 10397 ;;		wreg
 10398 ;; Tracked objects:
 10399 ;;		On entry : 0/0
 10400 ;;		On exit  : 0/0
 10401 ;;		Unchanged: 0/0
 10402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10403 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10406 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10407 ;;Total ram usage:        1 bytes
 10408 ;; Hardware stack levels used:    1
 10409 ;; This function calls:
 10410 ;;		Nothing
 10411 ;; This function is called by:
 10412 ;;		_i2c_write1ByteRegister
 10413 ;;		_i2c_writeNBytes
 10414 ;;		_i2c_read1ByteRegister
 10415 ;;		_i2c_read2ByteRegister
 10416 ;;		_i2c_write2ByteRegister
 10417 ;;		_i2c_readDataBlock
 10418 ;;		_do_I2C_DO_ADDRESS_NACK
 10419 ;;		_do_I2C_TX
 10420 ;;		_do_I2C_RX
 10421 ;;		_do_I2C_TX_EMPTY
 10422 ;; This function uses a non-reentrant model
 10423 ;;
 10424                           
 10425                           
 10426                           ;psect for function _i2c_restartWrite
 10427  05B4                     _i2c_restartWrite:	
 10428  05B4                     i1l3001:	
 10429                           ;incstack = 0
 10430                           ; Regs used in _i2c_restartWrite: [wreg]
 10431                           
 10432                           
 10433                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
 10434  05B4  3003               	movlw	3
 10435  05B5                     i1l367:	
 10436  05B5  0008               	return
 10437  05B6                     __end_of_i2c_restartWrite:	
 10438                           
 10439                           	psect	text49
 10440  05B6                     __ptext49:	
 10441 ;; *************** function _returnReset *****************
 10442 ;; Defined at:
 10443 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 10444 ;; Parameters:    Size  Location     Type
 10445 ;;  p               1    6[COMMON] PTR void 
 10446 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10447 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10448 ;; Auto vars:     Size  Location     Type
 10449 ;;		None
 10450 ;; Return value:  Size  Location     Type
 10451 ;;                  1    wreg      enum E12568
 10452 ;; Registers used:
 10453 ;;		wreg
 10454 ;; Tracked objects:
 10455 ;;		On entry : 0/0
 10456 ;;		On exit  : 0/0
 10457 ;;		Unchanged: 0/0
 10458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10459 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10462 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10463 ;;Total ram usage:        1 bytes
 10464 ;; Hardware stack levels used:    1
 10465 ;; This function calls:
 10466 ;;		Nothing
 10467 ;; This function is called by:
 10468 ;;		_i2c_open
 10469 ;;		_do_I2C_DO_ADDRESS_NACK
 10470 ;;		_do_I2C_TX
 10471 ;;		_do_I2C_RX
 10472 ;;		_do_I2C_TX_EMPTY
 10473 ;; This function uses a non-reentrant model
 10474 ;;
 10475                           
 10476                           
 10477                           ;psect for function _returnReset
 10478  05B6                     _returnReset:	
 10479  05B6                     i1l2959:	
 10480                           ;incstack = 0
 10481                           ; Regs used in _returnReset: [wreg]
 10482                           
 10483                           
 10484                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 10485  05B6  3005               	movlw	5
 10486  05B7                     i1l256:	
 10487  05B7  0008               	return
 10488  05B8                     __end_of_returnReset:	
 10489                           
 10490                           	psect	text50
 10491  05B8                     __ptext50:	
 10492 ;; *************** function _returnStop *****************
 10493 ;; Defined at:
 10494 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 10495 ;; Parameters:    Size  Location     Type
 10496 ;;  p               1    6[COMMON] PTR void 
 10497 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10498 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10499 ;; Auto vars:     Size  Location     Type
 10500 ;;		None
 10501 ;; Return value:  Size  Location     Type
 10502 ;;                  1    wreg      enum E12568
 10503 ;; Registers used:
 10504 ;;		wreg
 10505 ;; Tracked objects:
 10506 ;;		On entry : 0/0
 10507 ;;		On exit  : 0/0
 10508 ;;		Unchanged: 0/0
 10509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10510 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10513 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10514 ;;Total ram usage:        1 bytes
 10515 ;; Hardware stack levels used:    1
 10516 ;; This function calls:
 10517 ;;		Nothing
 10518 ;; This function is called by:
 10519 ;;		_setCallBack
 10520 ;;		_i2c_open
 10521 ;;		_do_I2C_DO_ADDRESS_NACK
 10522 ;;		_do_I2C_TX
 10523 ;;		_do_I2C_RX
 10524 ;;		_do_I2C_TX_EMPTY
 10525 ;; This function uses a non-reentrant model
 10526 ;;
 10527                           
 10528                           
 10529                           ;psect for function _returnStop
 10530  05B8                     _returnStop:	
 10531  05B8                     i1l2955:	
 10532                           ;incstack = 0
 10533                           ; Regs used in _returnStop: [wreg]
 10534                           
 10535                           
 10536                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
 10537  05B8  3001               	movlw	1
 10538  05B9                     i1l253:	
 10539  05B9  0008               	return
 10540  05BA                     __end_of_returnStop:	
 10541                           
 10542                           	psect	text51
 10543  04A8                     __ptext51:	
 10544 ;; *************** function _wr2RegCompleteHandler *****************
 10545 ;; Defined at:
 10546 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10547 ;; Parameters:    Size  Location     Type
 10548 ;;  p               1    6[COMMON] PTR void 
 10549 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10550 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10551 ;; Auto vars:     Size  Location     Type
 10552 ;;		None
 10553 ;; Return value:  Size  Location     Type
 10554 ;;                  1    wreg      enum E358
 10555 ;; Registers used:
 10556 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10557 ;; Tracked objects:
 10558 ;;		On entry : 0/0
 10559 ;;		On exit  : 0/0
 10560 ;;		Unchanged: 0/0
 10561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10562 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10565 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10566 ;;Total ram usage:        1 bytes
 10567 ;; Hardware stack levels used:    1
 10568 ;; Hardware stack levels required when called:    2
 10569 ;; This function calls:
 10570 ;;		_i2c_setBuffer
 10571 ;;		_i2c_setDataCompleteCallback
 10572 ;; This function is called by:
 10573 ;;		_i2c_write2ByteRegister
 10574 ;;		_do_I2C_DO_ADDRESS_NACK
 10575 ;;		_do_I2C_TX
 10576 ;;		_do_I2C_RX
 10577 ;;		_do_I2C_TX_EMPTY
 10578 ;; This function uses a non-reentrant model
 10579 ;;
 10580                           
 10581                           
 10582                           ;psect for function _wr2RegCompleteHandler
 10583  04A8                     _wr2RegCompleteHandler:	
 10584  04A8                     i1l3859:	
 10585                           ;incstack = 0
 10586                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 10587                           
 10588                           
 10589                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
 10590  04A8  3002               	movlw	2
 10591  04A9  00F0               	movwf	i2c_setBuffer@bufferSize
 10592  04AA  3000               	movlw	0
 10593  04AB  00F1               	movwf	i2c_setBuffer@bufferSize+1
 10594  04AC  0876               	movf	wr2RegCompleteHandler@p,w
 10595  04AD  3184  24DB  3184   	fcall	_i2c_setBuffer
 10596  04B0                     i1l3861:	
 10597                           
 10598                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 10599  04B0  3000               	movlw	0
 10600  04B1  0020               	movlb	0	; select bank0
 10601  04B2  00D0               	movwf	i2c_setDataCompleteCallback@cb
 10602  04B3  00D1               	movwf	i2c_setDataCompleteCallback@cb+1
 10603  04B4  01D2               	clrf	i2c_setDataCompleteCallback@p
 10604  04B5  3184  24FA  3184   	fcall	_i2c_setDataCompleteCallback
 10605  04B8                     i1l3863:	
 10606                           
 10607                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
 10608  04B8  3004               	movlw	4
 10609  04B9                     i1l328:	
 10610  04B9  0008               	return
 10611  04BA                     __end_of_wr2RegCompleteHandler:	
 10612                           
 10613                           	psect	text52
 10614  04FA                     __ptext52:	
 10615 ;; *************** function _i2c_setDataCompleteCallback *****************
 10616 ;; Defined at:
 10617 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 10618 ;; Parameters:    Size  Location     Type
 10619 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
 10620 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 10621 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 10622 ;;  p               1    2[BANK0 ] PTR void 
 10623 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10624 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10625 ;; Auto vars:     Size  Location     Type
 10626 ;;		None
 10627 ;; Return value:  Size  Location     Type
 10628 ;;                  1    wreg      void 
 10629 ;; Registers used:
 10630 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10631 ;; Tracked objects:
 10632 ;;		On entry : 0/0
 10633 ;;		On exit  : 0/0
 10634 ;;		Unchanged: 0/0
 10635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10636 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10638 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10639 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10640 ;;Total ram usage:        4 bytes
 10641 ;; Hardware stack levels used:    1
 10642 ;; Hardware stack levels required when called:    1
 10643 ;; This function calls:
 10644 ;;		_setCallBack
 10645 ;; This function is called by:
 10646 ;;		_wr1RegCompleteHandler
 10647 ;;		_rd1RegCompleteHandler
 10648 ;;		_rd2RegCompleteHandler
 10649 ;;		_wr2RegCompleteHandler
 10650 ;;		_rdBlkRegCompleteHandler
 10651 ;;		_i2c_write1ByteRegister
 10652 ;;		_i2c_read1ByteRegister
 10653 ;;		_i2c_read2ByteRegister
 10654 ;;		_i2c_write2ByteRegister
 10655 ;;		_i2c_readDataBlock
 10656 ;; This function uses a non-reentrant model
 10657 ;;
 10658                           
 10659                           
 10660                           ;psect for function _i2c_setDataCompleteCallback
 10661  04FA                     _i2c_setDataCompleteCallback:	
 10662  04FA                     i1l3825:	
 10663                           ;incstack = 0
 10664                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 10665                           
 10666                           
 10667                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
 10668  04FA  0020               	movlb	0	; select bank0
 10669  04FB  0851               	movf	i2c_setDataCompleteCallback@cb+1,w
 10670  04FC  00F1               	movwf	setCallBack@cb+1
 10671  04FD  0850               	movf	i2c_setDataCompleteCallback@cb,w
 10672  04FE  00F0               	movwf	setCallBack@cb
 10673  04FF  0852               	movf	i2c_setDataCompleteCallback@p,w
 10674  0500  00F5               	movwf	??_i2c_setDataCompleteCallback
 10675  0501  0875               	movf	??_i2c_setDataCompleteCallback,w
 10676  0502  00F2               	movwf	setCallBack@p
 10677  0503  3000               	movlw	0
 10678  0504  3183  2331  3184   	fcall	_setCallBack
 10679  0507                     i1l110:	
 10680  0507  0008               	return
 10681  0508                     __end_of_i2c_setDataCompleteCallback:	
 10682                           
 10683                           	psect	text53
 10684  0331                     __ptext53:	
 10685 ;; *************** function _setCallBack *****************
 10686 ;; Defined at:
 10687 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 10688 ;; Parameters:    Size  Location     Type
 10689 ;;  idx             1    wreg     enum E12740
 10690 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 10691 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 10692 ;;		 -> i2c_restartWrite(1), wr1RegCompleteHandler(1), Absolute function(1), 
 10693 ;;  p               1    2[COMMON] PTR void 
 10694 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10695 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10696 ;; Auto vars:     Size  Location     Type
 10697 ;;  idx             1    4[COMMON] enum E12740
 10698 ;; Return value:  Size  Location     Type
 10699 ;;                  1    wreg      void 
 10700 ;; Registers used:
 10701 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10702 ;; Tracked objects:
 10703 ;;		On entry : 0/0
 10704 ;;		On exit  : 0/0
 10705 ;;		Unchanged: 0/0
 10706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10707 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10708 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10709 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10710 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10711 ;;Total ram usage:        5 bytes
 10712 ;; Hardware stack levels used:    1
 10713 ;; This function calls:
 10714 ;;		Nothing
 10715 ;; This function is called by:
 10716 ;;		_i2c_setDataCompleteCallback
 10717 ;;		_i2c_setWriteCollisionCallback
 10718 ;;		_i2c_setAddressNACKCallback
 10719 ;;		_i2c_setDataNACKCallback
 10720 ;;		_i2c_setTimeOutCallback
 10721 ;; This function uses a non-reentrant model
 10722 ;;
 10723                           
 10724                           
 10725                           ;psect for function _setCallBack
 10726  0331                     _setCallBack:	
 10727                           
 10728                           ;incstack = 0
 10729                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 10730                           ;setCallBack@idx stored from wreg
 10731  0331  00F4               	movwf	setCallBack@idx
 10732  0332                     i1l2875:	
 10733                           
 10734                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
 10735  0332  0870               	movf	setCallBack@cb,w
 10736  0333  0471               	iorwf	setCallBack@cb+1,w
 10737  0334  1903               	btfsc	3,2
 10738  0335  2B37               	goto	u108_21
 10739  0336  2B38               	goto	u108_20
 10740  0337                     u108_21:	
 10741  0337  2B49               	goto	i1l2879
 10742  0338                     u108_20:	
 10743  0338                     i1l2877:	
 10744                           
 10745                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
 10746  0338  3574               	lslf	setCallBack@idx,w
 10747  0339  3E2B               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 10748  033A  0086               	movwf	6
 10749  033B  0187               	clrf	7
 10750  033C  0870               	movf	setCallBack@cb,w
 10751  033D  3FC0               	movwi [0]fsr1
 10752  033E  0871               	movf	setCallBack@cb+1,w
 10753  033F  3FC1               	movwi [1]fsr1
 10754                           
 10755                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
 10756  0340  0872               	movf	setCallBack@p,w
 10757  0341  00F3               	movwf	??_setCallBack
 10758  0342  0874               	movf	setCallBack@idx,w
 10759  0343  3E37               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 10760  0344  0086               	movwf	6
 10761  0345  0187               	clrf	7
 10762  0346  0873               	movf	??_setCallBack,w
 10763  0347  0081               	movwf	1
 10764                           
 10765                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
 10766  0348  2B56               	goto	i1l261
 10767  0349                     i1l2879:	
 10768                           
 10769                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
 10770  0349  3574               	lslf	setCallBack@idx,w
 10771  034A  3E2B               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 10772  034B  0086               	movwf	6
 10773  034C  0187               	clrf	7
 10774  034D  30B8               	movlw	low _returnStop
 10775  034E  3FC0               	movwi [0]fsr1
 10776  034F  3005               	movlw	high _returnStop
 10777  0350  3FC1               	movwi [1]fsr1
 10778                           
 10779                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
 10780  0351  0874               	movf	setCallBack@idx,w
 10781  0352  3E37               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 10782  0353  0086               	movwf	6
 10783  0354  0187               	clrf	7
 10784  0355  0181               	clrf	1
 10785  0356                     i1l261:	
 10786  0356  0008               	return
 10787  0357                     __end_of_setCallBack:	
 10788                           
 10789                           	psect	text54
 10790  04DB                     __ptext54:	
 10791 ;; *************** function _i2c_setBuffer *****************
 10792 ;; Defined at:
 10793 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 10794 ;; Parameters:    Size  Location     Type
 10795 ;;  buffer          1    wreg     PTR void 
 10796 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 10797 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 10798 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 10799 ;;  bufferSize      2    0[COMMON] unsigned int 
 10800 ;; Auto vars:     Size  Location     Type
 10801 ;;  buffer          1    3[COMMON] PTR void 
 10802 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 10803 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 10804 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 10805 ;; Return value:  Size  Location     Type
 10806 ;;                  1    wreg      void 
 10807 ;; Registers used:
 10808 ;;		wreg
 10809 ;; Tracked objects:
 10810 ;;		On entry : 0/0
 10811 ;;		On exit  : 0/0
 10812 ;;		Unchanged: 0/0
 10813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10814 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10815 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10816 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10817 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10818 ;;Total ram usage:        4 bytes
 10819 ;; Hardware stack levels used:    1
 10820 ;; This function calls:
 10821 ;;		Nothing
 10822 ;; This function is called by:
 10823 ;;		_wr1RegCompleteHandler
 10824 ;;		_rd1RegCompleteHandler
 10825 ;;		_rd2RegCompleteHandler
 10826 ;;		_wr2RegCompleteHandler
 10827 ;;		_rdBlkRegCompleteHandler
 10828 ;;		_i2c_write1ByteRegister
 10829 ;;		_i2c_writeNBytes
 10830 ;;		_i2c_read1ByteRegister
 10831 ;;		_i2c_read2ByteRegister
 10832 ;;		_i2c_write2ByteRegister
 10833 ;;		_i2c_readDataBlock
 10834 ;;		_i2c_readNBytes
 10835 ;; This function uses a non-reentrant model
 10836 ;;
 10837                           
 10838                           
 10839                           ;psect for function _i2c_setBuffer
 10840  04DB                     _i2c_setBuffer:	
 10841                           
 10842                           ;incstack = 0
 10843                           ; Regs used in _i2c_setBuffer: [wreg]
 10844                           ;i2c_setBuffer@buffer stored from wreg
 10845  04DB  00F3               	movwf	i2c_setBuffer@buffer
 10846  04DC                     i1l2883:	
 10847                           
 10848                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
 10849  04DC  0020               	movlb	0	; select bank0
 10850  04DD  1D20               	btfss	_i2c_status,2
 10851  04DE  2CE0               	goto	u109_21
 10852  04DF  2CE1               	goto	u109_20
 10853  04E0                     u109_21:	
 10854  04E0  2CEA               	goto	i1l140
 10855  04E1                     u109_20:	
 10856  04E1                     i1l2885:	
 10857                           
 10858                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
 10859  04E1  0873               	movf	i2c_setBuffer@buffer,w
 10860  04E2  00F2               	movwf	??_i2c_setBuffer
 10861  04E3  0872               	movf	??_i2c_setBuffer,w
 10862  04E4  00A2               	movwf	low ((_i2c_status| 0+2))
 10863                           
 10864                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
 10865  04E5  0871               	movf	i2c_setBuffer@bufferSize+1,w
 10866  04E6  00A4               	movwf	_i2c_status+4
 10867  04E7  0870               	movf	i2c_setBuffer@bufferSize,w
 10868  04E8  00A3               	movwf	_i2c_status+3
 10869  04E9                     i1l2887:	
 10870                           
 10871                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
 10872  04E9  1120               	bcf	_i2c_status,2
 10873  04EA                     i1l140:	
 10874  04EA  0008               	return
 10875  04EB                     __end_of_i2c_setBuffer:	
 10876                           
 10877                           	psect	text55
 10878  05AE                     __ptext55:	
 10879 ;; *************** function _i2c1_driver_stop *****************
 10880 ;; Defined at:
 10881 ;;		line 157 in file "mcc_generated_files/i2c1_driver.c"
 10882 ;; Parameters:    Size  Location     Type
 10883 ;;		None
 10884 ;; Auto vars:     Size  Location     Type
 10885 ;;		None
 10886 ;; Return value:  Size  Location     Type
 10887 ;;                  1    wreg      void 
 10888 ;; Registers used:
 10889 ;;		None
 10890 ;; Tracked objects:
 10891 ;;		On entry : 0/0
 10892 ;;		On exit  : 0/0
 10893 ;;		Unchanged: 0/0
 10894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10899 ;;Total ram usage:        0 bytes
 10900 ;; Hardware stack levels used:    1
 10901 ;; This function calls:
 10902 ;;		Nothing
 10903 ;; This function is called by:
 10904 ;;		_do_I2C_SEND_STOP
 10905 ;; This function uses a non-reentrant model
 10906 ;;
 10907                           
 10908                           
 10909                           ;psect for function _i2c1_driver_stop
 10910  05AE                     _i2c1_driver_stop:	
 10911  05AE                     i1l2891:	
 10912                           ;incstack = 0
 10913                           ; Regs used in _i2c1_driver_stop: []
 10914                           
 10915                           
 10916                           ;mcc_generated_files/i2c1_driver.c: 159:     SSP1CON2bits.PEN = 1;
 10917  05AE  0023               	movlb	3	; select bank3
 10918  05AF  1511               	bsf	17,2	;volatile
 10919  05B0                     i1l668:	
 10920  05B0  0008               	return
 10921  05B1                     __end_of_i2c1_driver_stop:	
 10922                           
 10923                           	psect	text56
 10924  05B1                     __ptext56:	
 10925 ;; *************** function _i2c1_driver_restart *****************
 10926 ;; Defined at:
 10927 ;;		line 152 in file "mcc_generated_files/i2c1_driver.c"
 10928 ;; Parameters:    Size  Location     Type
 10929 ;;		None
 10930 ;; Auto vars:     Size  Location     Type
 10931 ;;		None
 10932 ;; Return value:  Size  Location     Type
 10933 ;;                  1    wreg      void 
 10934 ;; Registers used:
 10935 ;;		None
 10936 ;; Tracked objects:
 10937 ;;		On entry : 0/0
 10938 ;;		On exit  : 0/0
 10939 ;;		Unchanged: 0/0
 10940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10945 ;;Total ram usage:        0 bytes
 10946 ;; Hardware stack levels used:    1
 10947 ;; This function calls:
 10948 ;;		Nothing
 10949 ;; This function is called by:
 10950 ;;		_do_I2C_SEND_RESTART_READ
 10951 ;;		_do_I2C_SEND_RESTART_WRITE
 10952 ;;		_do_I2C_SEND_RESTART
 10953 ;; This function uses a non-reentrant model
 10954 ;;
 10955                           
 10956                           
 10957                           ;psect for function _i2c1_driver_restart
 10958  05B1                     _i2c1_driver_restart:	
 10959  05B1                     i1l2889:	
 10960                           ;incstack = 0
 10961                           ; Regs used in _i2c1_driver_restart: []
 10962                           
 10963                           
 10964                           ;mcc_generated_files/i2c1_driver.c: 154:     SSP1CON2bits.RSEN = 1;
 10965  05B1  0023               	movlb	3	; select bank3
 10966  05B2  1491               	bsf	17,1	;volatile
 10967  05B3                     i1l665:	
 10968  05B3  0008               	return
 10969  05B4                     __end_of_i2c1_driver_restart:	
 10970                           
 10971                           	psect	text57
 10972  059B                     __ptext57:	
 10973 ;; *************** function _i2c1_driver_sendACK *****************
 10974 ;; Defined at:
 10975 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
 10976 ;; Parameters:    Size  Location     Type
 10977 ;;		None
 10978 ;; Auto vars:     Size  Location     Type
 10979 ;;		None
 10980 ;; Return value:  Size  Location     Type
 10981 ;;                  1    wreg      void 
 10982 ;; Registers used:
 10983 ;;		None
 10984 ;; Tracked objects:
 10985 ;;		On entry : 0/0
 10986 ;;		On exit  : 0/0
 10987 ;;		Unchanged: 0/0
 10988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10993 ;;Total ram usage:        0 bytes
 10994 ;; Hardware stack levels used:    1
 10995 ;; This function calls:
 10996 ;;		Nothing
 10997 ;; This function is called by:
 10998 ;;		_do_I2C_DO_ACK
 10999 ;;		_do_I2C_RX
 11000 ;; This function uses a non-reentrant model
 11001 ;;
 11002                           
 11003                           
 11004                           ;psect for function _i2c1_driver_sendACK
 11005  059B                     _i2c1_driver_sendACK:	
 11006  059B                     i1l2931:	
 11007                           ;incstack = 0
 11008                           ; Regs used in _i2c1_driver_sendACK: []
 11009                           
 11010                           
 11011                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKDT = 0;
 11012  059B  0023               	movlb	3	; select bank3
 11013  059C  1291               	bcf	17,5	;volatile
 11014                           
 11015                           ;mcc_generated_files/i2c1_driver.c: 200:     SSP1CON2bits.ACKEN = 1;
 11016  059D  1611               	bsf	17,4	;volatile
 11017  059E                     i1l692:	
 11018  059E  0008               	return
 11019  059F                     __end_of_i2c1_driver_sendACK:	
 11020                           
 11021                           	psect	text58
 11022  045D                     __ptext58:	
 11023 ;; *************** function _TMR1_ISR *****************
 11024 ;; Defined at:
 11025 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 11026 ;; Parameters:    Size  Location     Type
 11027 ;;		None
 11028 ;; Auto vars:     Size  Location     Type
 11029 ;;		None
 11030 ;; Return value:  Size  Location     Type
 11031 ;;                  1    wreg      void 
 11032 ;; Registers used:
 11033 ;;		wreg, status,2, status,0, pclath, cstack
 11034 ;; Tracked objects:
 11035 ;;		On entry : 0/0
 11036 ;;		On exit  : 0/0
 11037 ;;		Unchanged: 0/0
 11038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11043 ;;Total ram usage:        0 bytes
 11044 ;; Hardware stack levels used:    1
 11045 ;; Hardware stack levels required when called:    2
 11046 ;; This function calls:
 11047 ;;		Absolute function
 11048 ;;		_TMR1_DefaultInterruptHandler
 11049 ;;		_TMR1_WriteTimer
 11050 ;;		_h_clock
 11051 ;; This function is called by:
 11052 ;;		_INTERRUPT_InterruptManager
 11053 ;; This function uses a non-reentrant model
 11054 ;;
 11055                           
 11056                           
 11057                           ;psect for function _TMR1_ISR
 11058  045D                     _TMR1_ISR:	
 11059  045D                     i1l3451:	
 11060                           ;incstack = 0
 11061                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 11062                           
 11063                           
 11064                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 11065  045D  002E               	movlb	14	; select bank14
 11066  045E  1010               	bcf	16,0	;volatile
 11067  045F                     i1l3453:	
 11068                           
 11069                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 11070  045F  087A               	movf	_timer1ReloadVal+1,w	;volatile
 11071  0460  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 11072  0461  0879               	movf	_timer1ReloadVal,w	;volatile
 11073  0462  00F0               	movwf	TMR1_WriteTimer@timerVal
 11074  0463  3184  24BA  3184   	fcall	_TMR1_WriteTimer
 11075  0466                     i1l3455:	
 11076                           
 11077                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 11078  0466  0877               	movf	_TMR1_InterruptHandler,w
 11079  0467  0478               	iorwf	_TMR1_InterruptHandler+1,w
 11080  0468  1903               	btfsc	3,2
 11081  0469  2C6B               	goto	u132_21
 11082  046A  2C6C               	goto	u132_20
 11083  046B                     u132_21:	
 11084  046B  2C71               	goto	i1l428
 11085  046C                     u132_20:	
 11086  046C                     i1l3457:	
 11087                           
 11088                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 11089  046C  0878               	movf	_TMR1_InterruptHandler+1,w
 11090  046D  008A               	movwf	10
 11091  046E  0877               	movf	_TMR1_InterruptHandler,w
 11092  046F  000A               	callw
 11093  0470  3184               	pagesel	$
 11094  0471                     i1l428:	
 11095  0471  0008               	return
 11096  0472                     __end_of_TMR1_ISR:	
 11097                           
 11098                           	psect	text59
 11099  05BB                     __ptext59:	
 11100 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 11101 ;; Defined at:
 11102 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 11103 ;; Parameters:    Size  Location     Type
 11104 ;;		None
 11105 ;; Auto vars:     Size  Location     Type
 11106 ;;		None
 11107 ;; Return value:  Size  Location     Type
 11108 ;;                  1    wreg      void 
 11109 ;; Registers used:
 11110 ;;		None
 11111 ;; Tracked objects:
 11112 ;;		On entry : 0/0
 11113 ;;		On exit  : 0/0
 11114 ;;		Unchanged: 0/0
 11115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11120 ;;Total ram usage:        0 bytes
 11121 ;; Hardware stack levels used:    1
 11122 ;; This function calls:
 11123 ;;		Nothing
 11124 ;; This function is called by:
 11125 ;;		_TMR1_Initialize
 11126 ;;		_TMR1_ISR
 11127 ;; This function uses a non-reentrant model
 11128 ;;
 11129                           
 11130                           
 11131                           ;psect for function _TMR1_DefaultInterruptHandler
 11132  05BB                     _TMR1_DefaultInterruptHandler:	
 11133  05BB                     i1l434:	
 11134                           ;incstack = 0
 11135                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 11136                           
 11137  05BB  0008               	return
 11138  05BC                     __end_of_TMR1_DefaultInterruptHandler:	
 11139                           
 11140                           	psect	text60
 11141  0430                     __ptext60:	
 11142 ;; *************** function _h_clock *****************
 11143 ;; Defined at:
 11144 ;;		line 36 in file "main.c"
 11145 ;; Parameters:    Size  Location     Type
 11146 ;;		None
 11147 ;; Auto vars:     Size  Location     Type
 11148 ;;		None
 11149 ;; Return value:  Size  Location     Type
 11150 ;;                  1    wreg      void 
 11151 ;; Registers used:
 11152 ;;		wreg, status,2, status,0, pclath, cstack
 11153 ;; Tracked objects:
 11154 ;;		On entry : 0/0
 11155 ;;		On exit  : 0/0
 11156 ;;		Unchanged: 0/0
 11157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11162 ;;Total ram usage:        0 bytes
 11163 ;; Hardware stack levels used:    1
 11164 ;; Hardware stack levels required when called:    1
 11165 ;; This function calls:
 11166 ;;		_update_clock
 11167 ;; This function is called by:
 11168 ;;		_main
 11169 ;;		_TMR1_ISR
 11170 ;; This function uses a non-reentrant model
 11171 ;;
 11172                           
 11173                           
 11174                           ;psect for function _h_clock
 11175  0430                     _h_clock:	
 11176  0430                     i1l835:	
 11177                           ;incstack = 0
 11178                           ; Regs used in _h_clock: [wreg+status,2+status,0+pclath+cstack]
 11179                           ;main.c: 37:     do { LATAbits.LATA7 = ~LATAbits.LATA7; } while(0);
 11180                           
 11181  0430                     i1l3329:	
 11182  0430  1003               	clrc
 11183  0431  0020               	movlb	0	; select bank0
 11184  0432  1F96               	btfss	22,7	;volatile
 11185  0433  1403               	setc
 11186  0434  1803               	btfsc	3,0
 11187  0435  2C37               	goto	u121_21
 11188  0436  2C3A               	goto	u121_20
 11189  0437                     u121_21:	
 11190  0437  0020               	movlb	0	; select bank0
 11191  0438  1796               	bsf	22,7	;volatile
 11192  0439  2C3C               	goto	u122_24
 11193  043A                     u121_20:	
 11194  043A  0020               	movlb	0	; select bank0
 11195  043B  1396               	bcf	22,7	;volatile
 11196  043C                     u122_24:	
 11197  043C                     i1l3331:	
 11198                           
 11199                           ;main.c: 38:     if(!half) {
 11200  043C  19FD               	btfsc	_half/(0+8),_half& (0+7)	;volatile
 11201  043D  2C3F               	goto	u123_21
 11202  043E  2C40               	goto	u123_20
 11203  043F                     u123_21:	
 11204  043F  2C45               	goto	i1l837
 11205  0440                     u123_20:	
 11206  0440                     i1l3333:	
 11207                           
 11208                           ;main.c: 39:         update_clock();
 11209  0440  3183  237B  3184   	fcall	_update_clock
 11210  0443                     i1l3335:	
 11211                           
 11212                           ;main.c: 40:         half = 1;
 11213  0443  15FD               	bsf	_half/(0+8),_half& (0+7)	;volatile
 11214                           
 11215                           ;main.c: 41:     }
 11216  0444  2C46               	goto	i1l839
 11217  0445                     i1l837:	
 11218                           ;main.c: 42:     else {
 11219                           
 11220                           
 11221                           ;main.c: 43:         half = 0;
 11222  0445  11FD               	bcf	_half/(0+8),_half& (0+7)	;volatile
 11223  0446                     i1l839:	
 11224  0446  0008               	return
 11225  0447                     __end_of_h_clock:	
 11226                           
 11227                           	psect	text61
 11228  037B                     __ptext61:	
 11229 ;; *************** function _update_clock *****************
 11230 ;; Defined at:
 11231 ;;		line 209 in file "main.c"
 11232 ;; Parameters:    Size  Location     Type
 11233 ;;		None
 11234 ;; Auto vars:     Size  Location     Type
 11235 ;;		None
 11236 ;; Return value:  Size  Location     Type
 11237 ;;                  1    wreg      void 
 11238 ;; Registers used:
 11239 ;;		wreg, status,2, status,0
 11240 ;; Tracked objects:
 11241 ;;		On entry : 0/0
 11242 ;;		On exit  : 0/0
 11243 ;;		Unchanged: 0/0
 11244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11247 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11248 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11249 ;;Total ram usage:        1 bytes
 11250 ;; Hardware stack levels used:    1
 11251 ;; This function calls:
 11252 ;;		Nothing
 11253 ;; This function is called by:
 11254 ;;		_h_clock
 11255 ;; This function uses a non-reentrant model
 11256 ;;
 11257                           
 11258                           
 11259                           ;psect for function _update_clock
 11260  037B                     _update_clock:	
 11261  037B                     i1l3023:	
 11262                           ;incstack = 0
 11263                           ; Regs used in _update_clock: [wreg+status,2+status,0]
 11264                           
 11265                           
 11266                           ;main.c: 210:     seg++;
 11267  037B  3001               	movlw	1
 11268  037C  00F0               	movwf	??_update_clock
 11269  037D  0870               	movf	??_update_clock,w
 11270  037E  0020               	movlb	0	; select bank0
 11271  037F  07CD               	addwf	_seg,f	;volatile
 11272                           
 11273                           ;main.c: 211:     last5s++;
 11274  0380  3001               	movlw	1
 11275  0381  00F0               	movwf	??_update_clock
 11276  0382  0870               	movf	??_update_clock,w
 11277  0383  07CC               	addwf	_last5s,f	;volatile
 11278  0384                     i1l3025:	
 11279                           
 11280                           ;main.c: 212:     if(seg >= 60) {
 11281  0384  303C               	movlw	60
 11282  0385  024D               	subwf	_seg,w	;volatile
 11283  0386  1C03               	skipc
 11284  0387  2B89               	goto	u111_21
 11285  0388  2B8A               	goto	u111_20
 11286  0389                     u111_21:	
 11287  0389  2B9E               	goto	i1l926
 11288  038A                     u111_20:	
 11289  038A                     i1l3027:	
 11290                           
 11291                           ;main.c: 213:         clkm++;
 11292  038A  3001               	movlw	1
 11293  038B  00F0               	movwf	??_update_clock
 11294  038C  0870               	movf	??_update_clock,w
 11295  038D  07CE               	addwf	_clkm,f	;volatile
 11296                           
 11297                           ;main.c: 214:         last1m++;
 11298  038E  3001               	movlw	1
 11299  038F  00F0               	movwf	??_update_clock
 11300  0390  0870               	movf	??_update_clock,w
 11301  0391  07CB               	addwf	_last1m,f	;volatile
 11302  0392                     i1l3029:	
 11303                           
 11304                           ;main.c: 215:         seg = 0;
 11305  0392  01CD               	clrf	_seg	;volatile
 11306  0393                     i1l3031:	
 11307                           
 11308                           ;main.c: 216:         if(clkm >= 60) {
 11309  0393  303C               	movlw	60
 11310  0394  024E               	subwf	_clkm,w	;volatile
 11311  0395  1C03               	skipc
 11312  0396  2B98               	goto	u112_21
 11313  0397  2B99               	goto	u112_20
 11314  0398                     u112_21:	
 11315  0398  2B9E               	goto	i1l926
 11316  0399                     u112_20:	
 11317  0399                     i1l3033:	
 11318                           
 11319                           ;main.c: 217:             clkh++;
 11320  0399  3001               	movlw	1
 11321  039A  00F0               	movwf	??_update_clock
 11322  039B  0870               	movf	??_update_clock,w
 11323  039C  07CF               	addwf	_clkh,f	;volatile
 11324  039D                     i1l3035:	
 11325                           
 11326                           ;main.c: 218:             clkm = 0;
 11327  039D  01CE               	clrf	_clkm	;volatile
 11328  039E                     i1l926:	
 11329  039E  0008               	return
 11330  039F                     __end_of_update_clock:	
 11331                           
 11332                           	psect	text62
 11333  04BA                     __ptext62:	
 11334 ;; *************** function _TMR1_WriteTimer *****************
 11335 ;; Defined at:
 11336 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 11337 ;; Parameters:    Size  Location     Type
 11338 ;;  timerVal        2    0[COMMON] unsigned short 
 11339 ;; Auto vars:     Size  Location     Type
 11340 ;;		None
 11341 ;; Return value:  Size  Location     Type
 11342 ;;                  1    wreg      void 
 11343 ;; Registers used:
 11344 ;;		wreg, status,2
 11345 ;; Tracked objects:
 11346 ;;		On entry : 0/0
 11347 ;;		On exit  : 0/0
 11348 ;;		Unchanged: 0/0
 11349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11350 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11353 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11354 ;;Total ram usage:        2 bytes
 11355 ;; Hardware stack levels used:    1
 11356 ;; This function calls:
 11357 ;;		Nothing
 11358 ;; This function is called by:
 11359 ;;		_TMR1_ISR
 11360 ;;		_TMR1_Reload
 11361 ;; This function uses a non-reentrant model
 11362 ;;
 11363                           
 11364                           
 11365                           ;psect for function _TMR1_WriteTimer
 11366  04BA                     _TMR1_WriteTimer:	
 11367  04BA                     i1l3235:	
 11368                           ;incstack = 0
 11369                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 11370                           
 11371                           
 11372                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 11373  04BA  0024               	movlb	4	; select bank4
 11374  04BB  1D0E               	btfss	14,2	;volatile
 11375  04BC  2CBE               	goto	u119_21
 11376  04BD  2CBF               	goto	u119_20
 11377  04BE                     u119_21:	
 11378  04BE  2CC6               	goto	i1l3245
 11379  04BF                     u119_20:	
 11380  04BF                     i1l3237:	
 11381                           
 11382                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 11383  04BF  100E               	bcf	14,0	;volatile
 11384  04C0                     i1l3239:	
 11385                           
 11386                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 11387  04C0  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 11388  04C1  008D               	movwf	13	;volatile
 11389  04C2                     i1l3241:	
 11390                           
 11391                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 11392  04C2  0870               	movf	TMR1_WriteTimer@timerVal,w
 11393  04C3  008C               	movwf	12	;volatile
 11394  04C4                     i1l3243:	
 11395                           
 11396                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 11397  04C4  140E               	bsf	14,0	;volatile
 11398                           
 11399                           ;mcc_generated_files/tmr1.c: 140:     }
 11400  04C5  2CCA               	goto	i1l415
 11401  04C6                     i1l3245:	
 11402                           
 11403                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 11404  04C6  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 11405  04C7  008D               	movwf	13	;volatile
 11406  04C8                     i1l3247:	
 11407                           
 11408                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 11409  04C8  0870               	movf	TMR1_WriteTimer@timerVal,w
 11410  04C9  008C               	movwf	12	;volatile
 11411  04CA                     i1l415:	
 11412  04CA  0008               	return
 11413  04CB                     __end_of_TMR1_WriteTimer:	
 11414  007E                     btemp	set	126	;btemp
 11415  007E                     int$flags	set	126
 11416  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    32
    Data        0
    BSS         54
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     15      63
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$2618$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$2624	const PTR FTN()enum E12722 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX$2623	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$2618	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), wr1RegCompleteHandler(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S422$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> h_clock(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> h_clock(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S743$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), wr1RegCompleteHandler(), Absolute function(), 

    fsmStateTable	const PTR FTN()enum E12722[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S422$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S422$callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), wr1RegCompleteHandler(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> i2c_restartWrite(), wr1RegCompleteHandler(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    S422$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_i2c_ISR
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c1_driver_TXData
    _do_I2C_TX->_i2c1_driver_isNACK
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _TMR1_ISR->_TMR1_WriteTimer
    _h_clock->_update_clock

Critical Paths under _main in BANK0

    _main->_push_ring
    _main->_reset_recv
    _reset_recv->_DATAEE_WriteByte
    _read_ring->___bmul
    _push_ring->_DATAEE_WriteByte
    _cksum_w->_DATAEE_WriteByte
    _cksum->_DATAEE_ReadByte
    _DATAEE_WriteByte->_cksum
    _TMR1_Initialize->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    9822
                                             12 BANK0      3     3      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                              _cksum
                            _cksum_w
                   _i2c1_driver_open
                          _push_ring
                          _read_ring
                         _reset_recv
 ---------------------------------------------------------------------------------
 (1) _reset_recv                                           2     2      0    1486
                                             10 BANK0      2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (1) _read_ring                                            6     5      1    1269
                                              4 BANK0      6     5      1
                    _DATAEE_ReadByte
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _push_ring                                            2     2      0    1486
                                             10 BANK0      2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cksum_w                                              1     1      0    2215
                                             10 BANK0      1     1      0
                   _DATAEE_WriteByte
                              _cksum
 ---------------------------------------------------------------------------------
 (2) _cksum                                                4     4      0     828
                                              2 BANK0      4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2     692
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3    1387
                                              6 BANK0      4     1      3
                              _cksum (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     211
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0   84650
                   Absolute function *
                           _TMR1_ISR
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (5) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_ISR                                              3     3      0   84410
                                              4 COMMON     3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (6) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_TX_EMPTY                                      3     3      0   21086
                                              0 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_TX                                            3     3      0   21108
                                              1 COMMON     3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_TXData                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_RX                                            3     3      0   21086
                                              0 COMMON     3     3      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_DO_ADDRESS_NACK                               3     3      0   21086
                                              0 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _wr2RegCompleteHandler                                1     0      1    4159
                                              6 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _wr1RegCompleteHandler                                1     0      1    4159
                                              6 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _returnStop                                           1     0      1       0
                                              6 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (7) _returnReset                                          1     0      1       0
                                              6 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (7) _rdBlkRegCompleteHandler                              1     0      1    4450
                                              6 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rd2RegCompleteHandler                                1     0      1    4159
                                              6 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rd1RegCompleteHandler                                1     0      1    4159
                                              6 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _i2c_setDataCompleteCallback                          4     1      3    2776
                                              5 COMMON     1     1      0
                                              0 BANK0      3     0      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (9) _setCallBack                                          5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (8) _i2c_setBuffer                                        4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _i2c_restartWrite                                     1     0      1       0
                                              6 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                            _h_clock *
 ---------------------------------------------------------------------------------
 (6) _h_clock                                              0     0      0       0
                       _update_clock
 ---------------------------------------------------------------------------------
 (7) _update_clock                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
     _cksum (ARG)
       _DATAEE_ReadByte
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _cksum
     _DATAEE_ReadByte
   _cksum_w
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
   _i2c1_driver_open
   _push_ring
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
   _read_ring
     _DATAEE_ReadByte
     ___bmul
   _reset_recv
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _h_clock *
       _update_clock
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c1_driver_sendNACK
       _i2c1_driver_getRXData *
       _i2c1_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c1_driver_restart
     _do_I2C_SEND_STOP *
       _i2c1_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c1_driver_TXData *
       _i2c1_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _mssp1_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      F      3F       5       78.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      4D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      4D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Oct 31 17:23:21 2019

                            _update_clock 037B                              returnReset@p 0076  
                          ___bmul@product 0052                               __CFG_CP$OFF 0000  
                    __size_of_do_I2C_IDLE 0005                       _do_I2C_SEND_RESTART 057A  
                    __size_of_do_I2C_RCEN 0007                               __CFG_LVP$ON 0000  
                                     l401 0416                                       l500 0514  
                                     l503 0529                                       l431 0565  
                                     l506 053A                                       l651 0520  
                                     l902 04DA                                       l921 02DA  
                                     l914 0277                                       l587 0239  
                                     l907 03DE                                       l782 04F9  
                                     l776 036F                                       l778 0373  
                                     l882 0151                                       l779 037A  
                                     l891 0150                                       l885 0124  
                                     l894 0155                                       l886 0123  
                                     l879 0052                                       l889 00FA  
                                     l899 03FA                              __CFG_CPD$OFF 0000  
                         _timer1ReloadVal 0079                                       _aux 0045  
                                     _seg 004D                                       _lum 0046  
           i2c_setDataCompleteCallback@cb 0050                   __size_of_PMD_Initialize 0008  
                   __size_of_do_I2C_RESET 0008                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_ZCD$OFF 0000  
                 ??_rd2RegCompleteHandler 0077                                      l1181 045C  
                                    l4021 03FE                                      l4101 0363  
                                    l4031 040A                                      l4023 0400  
                                    l4111 036C                                      l4103 0367  
                                    l4041 01FB                                      l4033 040B  
                                    l4025 0402                                      l4201 0508  
                                    l4113 036E                                      l4105 0368  
                                    l4051 0205                                      l4043 01FD  
                                    l4035 0413                                      l4027 0404  
                                    l4019 03FB                                      l4203 050B  
                                    l4115 0374                                      l4107 0369  
                                    l4131 03DD                                      l4061 021A  
                                    l4053 0208                                      l4045 01FF  
                                    l4037 0533                                      l4029 0408  
                                    l4205 050E                                      l4109 036A  
                                    l4125 03C5                                      l4117 03BF  
                                    l4221 023C                                      l4213 03E4  
                                    l4071 0224                                      l4063 021C  
                                    l4055 020A                                      l4047 0201  
                                    l4039 01F5                                      l4207 0511  
                                    l4127 03D0                                      l4119 03C1  
                                    l4231 0259                                      l4223 023C  
                                    l4215 03EC                                      l4081 022E  
                                    l4073 0226                                      l4065 021E  
                                    l4057 020C                                      l4049 0203  
                                    l4129 03D4                                      l3361 0452  
                                    l4233 0260                                      l4225 0242  
                                    l4217 03F1                                      l4209 03DF  
                                    l4401 005F                                      l4091 0524  
                                    l4083 0231                                      l4075 0228  
                                    l4067 0220                                      l4059 020E  
                                    l4219 04CB                                      l4171 0515  
                                    l4243 02AB                                      l3363 0454  
                                    l3355 0449                                      l4227 0246  
                                    l4235 026B                                      l4411 00AD  
                                    l4403 006B                                      l4093 0525  
                                    l4085 0234                                      l4077 022A  
                                    l4069 0222                                      l4173 051A  
                                    l4261 02D0                                      l4253 02B2  
                                    l4245 02AF                                      l3365 045B  
                                    l3357 044A                                      l4229 0253  
                                    l4421 00BD                                      l4413 00B0  
                                    l4405 007D                                      l4095 0528  
                                    l4087 0236                                      l4079 022C  
                                    l4175 051B                                      l4263 02D4  
                                    l4255 02B8                                      l4247 02B0  
                                    l3359 044E                                      l4239 026D  
                                    l4431 00C7                                      l4423 00C0  
                                    l4415 00B3                                      l4407 009E  
                                    l4089 0521                                      l4097 0357  
                                    l4177 051D                                      l4257 02B9  
                                    l4441 00D6                                      l4433 00CD  
                                    l4425 00C2                                      l4417 00B4  
                                    l4409 00A1                                      l4099 035F  
                                    l4259 02CB                                      l4451 00FB  
                                    l4443 00D7                                      l4435 00CE  
                                    l4427 00C3                                      l4419 00B5  
                                    l4461 0125                                      l4453 0107  
                                    l4445 00DC                                      l4437 00D4  
                                    l4429 00C5                                      l4471 0135  
                                    l4463 012B                                      l4455 0110  
                                    l4447 00DD                                      l4439 00D5  
                                    l4473 0140                                      l4465 012C  
                                    l4457 0113                                      l4449 00EC  
                                    l4393 0056                                      l4385 004B  
                                    l4475 014C                                      l4467 0130  
                                    l4459 011F                                      l4395 0057  
                                    l4387 0051                                      l4469 0134  
                                    l4397 0058                                      l4389 0052  
                                    l4399 005C                                      l3873 0560  
                                    l3881 04F4                                      l3883 04F5  
                                    l3875 04EB                                      l3885 04F6  
                                    l3877 04EF                                      l3887 04F7  
                                    l3879 04F3                                      u2200 012B  
                                    u2201 012A                                      u1250 044E  
                                    u2210 0155                                      u1251 044D  
                                    u2211 0154                                      u1260 045B  
                                    u2140 006B                                      u1261 045A  
                                    u2141 006A                                      _LATA 0016  
                                    u2150 007D                                      _LATB 0017  
                                    u2151 007C                                      _LATC 0018  
                                    u2160 00CD                                      _LATD 0019  
                                    u2161 00CC                                      _LATE 001A  
                                    u2170 00D4                                      u2171 00D3  
                                    u2180 00EC                                      u2181 00EB  
                                    u2190 00FA                                      u2191 00F9  
                                    u1810 051A                                      u1811 0519  
                                    u1900 02DA                                      u1901 02D9  
                                    u1840 03FA                                      u1841 03F9  
                                    u1850 0242                                      u1851 0241  
                                    u1780 0373                                      u1860 0246  
                                    u1781 0372                                      u1861 0245  
                                    u1790 03DD                                      u1870 0259  
                                    u1791 03DC                                      u1871 0258  
                                    u1880 02AF                                      u1881 02AE  
                                    u1890 02B8                                      u1891 02B7  
                                    _PMD0 0796                                      _PMD1 0797  
                                    _PMD2 0798                                      _PMD3 0799  
                                    _PMD4 079A                                      _PMD5 079B  
                    ?_do_I2C_SEND_RESTART 0070                                      _WPUA 0F39  
                                    _WPUB 0F44                                      _WPUC 0F4F  
                                    _WPUD 0F5A                                      _WPUE 0F65  
                 ??_wr2RegCompleteHandler 0077                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000         __size_of_do_I2C_SEND_RESTART_READ 0005  
                                    _aux1 0044                                      _half 03EB  
                                    _clkh 004F                 ?_do_I2C_SEND_RESTART_READ 0070  
                                    _clkm 004E                                      _main 004B  
               __size_of_do_I2C_SEND_STOP 0005                    __size_of_do_I2C_DO_ACK 0005  
                                    _nreg 004A                                      _temp 0047  
                                    _pmon 0048                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                           __CFG_BOREN$ON 0000                     ?_do_I2C_SEND_ADR_READ 0070  
         ??_i2c1_driver_clearBusCollision 0070                                      start 0036  
                           _i2c_setBuffer 04DB                ??_TMR1_SetInterruptHandler 0052  
                           __CFG_CSWEN$ON 0000                         ___bmul@multiplier 0053  
                           __CFG_MCLRE$ON 0000                           __end_of_i2c_ISR 0331  
        __size_of_rdBlkRegCompleteHandler 0019                  ??_do_I2C_DO_NACK_RESTART 0070  
               __size_of_DATAEE_WriteByte 0024                              _do_I2C_RESET 0543  
          __size_of_OSCILLATOR_Initialize 0009             __end_of_OSCILLATOR_Initialize 052A  
                __end_of_i2c1_driver_open 0521                                     ?_main 0070  
                __end_of_i2c1_driver_stop 05B1                             __CFG_WDTE$OFF 0000  
                                   _T1CLK 0211                                     _T1CON 020E  
              __end_of_i2c1_driver_TXData 0593                            __CFG_DEBUG$OFF 0000  
                                   i1l110 0507                                     i1l201 0306  
                                   i1l140 04EA                                     i1l301 0495  
                                   i1l206 018E                                     i1l222 01C8  
                                   i1l223 01F4                                     i1l209 01AA  
                                   i1l162 054A                                     i1l250 0596  
                                   i1l171 0583                                     i1l316 0483  
                                   i1l340 042F                                     i1l180 0532  
                                   i1l261 0356                                     i1l253 05B9  
                                   i1l237 02AA                                     i1l165 058D  
                                   i1l174 057E                                     i1l415 04CA  
                                   i1l183 0542                                     i1l247 0330  
                                   i1l328 04B9                                     i1l256 05B7  
                                   i1l280 04A7                                     i1l168 0588  
                                   i1l192 056F                                     i1l177 0579  
                                   i1l434 05BB                                     i1l186 0559  
                                   i1l195 056A                                     i1l428 0471  
                                   i1l189 0574                                     i1l367 05B5  
                                   i1l463 0034                                     i1l456 0019  
                                   i1l633 05A4                                     i1l457 0034  
                                   i1l458 0028                                     i1l636 05A7  
                                   i1l671 0552                                     i1l665 05B3  
                                   i1l729 05A1                                     i1l674 05AD  
                                   i1l835 0430                                     i1l659 05BA  
                                   i1l692 059E                                     i1l668 05B0  
                                   i1l837 0445                                     i1l677 05AA  
                                   i1l926 039E                                     i1l686 0592  
                                   i1l839 0446                                     i1l695 059A  
                                   _OSCEN 0891                                     _TMR1H 020D  
                                   _TMR1L 020C                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                                   _WPUC3 7A7B                                     _WPUC4 7A7C  
                         __end_of_h_clock 0447                          __end_of_TMR1_ISR 0472  
                         __end_of_cksum_w 04DB                           _DATAEE_ReadByte 04EB  
              __end_of_i2c1_driver_isNACK 0553                                     _cksum 03BF  
              ?_do_I2C_SEND_RESTART_WRITE 0070                     ??_do_I2C_SEND_RESTART 0070  
                 __end_of_TMR1_Initialize 0417                            __pbitbssCOMMON 03E8  
                                   pclath 000A                   __size_of_mssp1_clearIRQ 0003  
                  ?_do_I2C_SEND_ADR_WRITE 0070                                     status 0003  
                                   wtemp0 007E                           _TMR1_WriteTimer 04BA  
                          ?_i2c_setBuffer 0070                              ?_setCallBack 0070  
                           _fsmStateTable 039F                           __initialization 0038  
                              _i2c_status 0020                              __end_of_main 0157  
             ?_INTERRUPT_InterruptManager 0070                             setCallBack@cb 0070  
                           _do_I2C_DO_ACK 0570                                    ??_main 005C  
                       ?_i2c_restartWrite 0076             __size_of_i2c1_driver_sendNACK 0004  
                      ??_i2c_restartWrite 0077             __size_of_i2c1_driver_resetBus 0001  
                 ?_do_I2C_DO_ADDRESS_NACK 0070                                    ?_cksum 0070  
                                  _ANSELA 0F38                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                                    _ANSELD 0F59  
                                  _ANSELE 0F64                        __CFG_RSTOSC$HFINT1 0000  
                                  _T1GATE 0210                                    _T1GCON 020F  
                                  _RC3PPS 0F23                   TMR1_WriteTimer@timerVal 0070  
                                  _RC4PPS 0F24                                    u111_20 038A  
                                  u111_21 0389                                    i1l3001 05B4  
                                  i1l3101 0570                                    i1l3031 0393  
                                  i1l3023 037B                                    i1l3103 0573  
                                  u112_20 0399                                    i1l3033 0399  
                                  u112_21 0398                                    i1l3025 0384  
                                  i1l4001 027F                                    _ODCONA 0F3A  
                                  _ODCONB 0F45                                    i1l3035 039D  
                                  i1l3027 038A                                    i1l4003 0282  
                                  _ODCONC 0F50                                    _ODCOND 0F5B  
                                  i1l3029 0392                                    i1l4013 0288  
                                  i1l3061 0546                                    i1l3037 05A2  
                                  _ODCONE 0F66                                    i1l4007 0284  
                                  i1l3063 0548                                    i1l3071 058B  
                                  i1l3215 059F                                    u121_20 043A  
                                  i1l3241 04C2                                    u121_21 0437  
                                  i1l3065 0549                                    i1l3073 058C  
                                  i1l3081 0531                                    i1l3243 04C4  
                                  i1l3235 04BA                                    i1l3331 043C  
                                  i1l3059 0543                                    i1l3237 04BF  
                                  i1l3245 04C6                                    i1l3333 0440  
                                  i1l3069 0589                                    i1l3077 052A  
                                  i1l3085 053B                                    i1l3093 0553  
                                  i1l3247 04C8                                    i1l3239 04C0  
                                  i1l3335 0443                                    i1l3079 052C  
                                  i1l3087 053D                                    i1l3095 0555  
                                  u210_20 001D                                    i1l3329 0430  
                                  i1l3089 0541                                    i1l3097 0558  
                                  u210_21 001C                                    i1l3451 045D  
                                  u122_24 043C                                    i1l3453 045F  
                                  i1l3455 0466                                    i1l2903 0584  
                                  i1l2911 0582                                    i1l4191 0307  
                                  u123_20 0440                                    u211_20 0021  
                                  u123_21 043F                                    i1l3457 046C  
                                  i1l2905 0587                                    i1l2921 0575  
                                  i1l4193 030A                                    i1l3449 0593  
                                  u211_21 0020                                    i1l2931 059B  
                                  i1l2915 057A                                    i1l2923 0578  
                                  i1l4195 030F                                    i1l4371 000A  
                                  i1l2909 057F                                    i1l2917 057D  
                                  i1l2933 056B                                    i1l2941 0569  
                                  i1l4197 0316                                    i1l4381 002C  
                                  i1l4373 000F                                    i1l2927 058F  
                                  i1l2935 056E                                    i1l3911 02DB  
                                  i1l4199 031B                                    i1l4383 0030  
                                  i1l4375 0013                                    u132_20 046C  
                                  u108_20 0338                                    u212_20 002C  
                                  u132_21 046B                                    u108_21 0337  
                                  i1l3825 04FA                                    i1l2929 05AB  
                                  i1l2945 054B                                    i1l2953 05A5  
                                  i1l4561 02FE                                    i1l3913 02DD  
                                  u212_21 002B                                    i1l4377 001D  
                                  i1l4369 0006                                    i1l2891 05AE  
                                  i1l2883 04DC                                    i1l2875 0332  
                                  i1l2955 05B8                                    i1l3835 0496  
                                  i1l3843 0484                                    i1l3851 0472  
                                  i1l4563 029C                                    i1l2939 0566  
                                  i1l3915 02E2                                    i1l3931 0157  
                                  i1l4379 0021                                    i1l2885 04E1  
                                  i1l2877 0338                                    i1l3861 04B0  
                                  i1l3837 049E                                    i1l3845 048C  
                                  i1l3853 047A                                    i1l2893 0597  
                                  i1l2949 05A8                                    i1l3925 02EA  
                                  i1l4557 01E6                                    i1l2887 04E9  
                                  i1l2879 0349                                    i1l3863 04B8  
                                  i1l2959 05B6                                    i1l3839 04A6  
                                  i1l3847 0494                                    i1l3855 0482  
                                  i1l3919 02E6                                    i1l3951 0190  
                                  i1l4559 0180                                    i1l3943 0167  
                                  i1l3935 015F                                    u109_20 04E1  
                                  u213_20 0030                                    i1l2889 05B1  
                                  u109_21 04E0                                    i1l3953 019C  
                                  u213_21 002F                                    i1l3859 04A8  
                                  i1l3867 0417                                    i1l3955 01A7  
                                  i1l3939 0163                                    i1l3971 01C3  
                                  i1l3869 042E                                    i1l3957 01A9  
                                  i1l3949 016B                                    i1l3973 01C6  
                                  i1l3965 01AB                                    i1l3983 01CE  
                                  i1l3967 01B5                                    i1l3969 01B9  
                                  i1l3995 0278                                    i1l3979 01CA  
                                  i1l3997 027B                                    i1l3989 01D2  
                                  u119_20 04BF                                    u207_20 000A  
                                  u119_21 04BE                                    u207_21 0009  
                                  u208_20 000F                                    u208_21 000E  
                                  _INLVLA 0F3C                                    _INLVLB 0F47  
                                  _INLVLC 0F52                                    _INLVLD 0F5D  
                                  _INLVLE 0F68                                    u209_20 0013  
                                  u209_21 0012                                    u182_20 030F  
                                  u182_21 030E                                    u175_20 015E  
                                  u183_20 0316                                    u175_21 015D  
                                  u183_21 0315                                    u176_20 01A7  
                                  u176_21 01A6                                    u177_20 01C3  
                                  u177_21 01C2                                    _OSCFRQ 0893  
                  ??_do_I2C_SEND_ADR_READ 0070                  rdBlkRegCompleteHandler@p 0076  
                               ??_i2c_ISR 0074                            __CFG_PWRTE$OFF 0000  
                   _i2c1_driver_getRXData 05A8      __end_of_TMR1_DefaultInterruptHandler 05BC  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 05BB  
                                  ___bmul 0447               __end_of_do_I2C_DO_NACK_STOP 0570  
     __end_of_i2c_setDataCompleteCallback 0508               _i2c_setDataCompleteCallback 04FA  
   __end_of_i2c1_driver_clearBusCollision 05A2    __size_of_i2c1_driver_clearBusCollision 0003  
           _i2c1_driver_clearBusCollision 059F                            __CFG_STVREN$ON 0000  
         __size_of_do_I2C_DO_NACK_RESTART 0005                                    _last1m 004B  
                                  _last5s 004C                            ?_do_I2C_DO_ACK 0070  
                               ??_h_clock 0071                                    cksum@i 0054  
                 __end_of_DATAEE_ReadByte 04FA                                 ??_cksum_w 005A  
             __end_of_i2c1_driver_sendACK 059F                            _PMD_Initialize 0533  
          __end_of_do_I2C_DO_ADDRESS_NACK 0307               __end_of_i2c1_driver_restart 05B4  
                            ?_returnReset 0076               __end_of_i2c1_driver_startRX 05AE  
TMR1_SetInterruptHandler@InterruptHandler 0050                   __end_of_TMR1_WriteTimer 04CB  
                        ?_TMR1_Initialize 0070                         _SYSTEM_Initialize 0508  
                 __end_of__initialization 0047                           ??_i2c_setBuffer 0072  
                        _do_I2C_SEND_STOP 0575                        __size_of_do_I2C_RX 004A  
                      __size_of_do_I2C_TX 0054                        ?_SYSTEM_Initialize 0070  
                __size_of_do_I2C_TX_EMPTY 0033                       ___bmul@multiplicand 0050  
                 _rdBlkRegCompleteHandler 0417                            __pcstackCOMMON 0070  
                     ??_SYSTEM_Initialize 0052                                 ?_TMR1_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                             __end_of_cksum 03DF  
                        _DATAEE_WriteByte 0357                    __end_of_PMD_Initialize 053B  
                          setCallBack@idx 0074                                   ??_cksum 0052  
                  _do_I2C_DO_NACK_RESTART 0566                 __end_of_SYSTEM_Initialize 0515  
                          _mssp1_clearIRQ 05A2                                __pbssBANK0 0020  
          __size_of_rd2RegCompleteHandler 0012             __end_of_rd2RegCompleteHandler 0484  
          __size_of_wr2RegCompleteHandler 0012             __end_of_wr2RegCompleteHandler 04BA  
                   _rd1RegCompleteHandler 0484                    ?_i2c1_driver_getRXData 0070  
                      __size_of_read_ring 003E                     _wr1RegCompleteHandler 0496  
            __size_of_i2c_busCollisionISR 0004                                __pmaintext 004B  
                           ??_do_I2C_IDLE 0070                      __size_of_setCallBack 0026  
                           ??_do_I2C_RCEN 0070                                   ?___bmul 0050  
                              ??_TMR1_ISR 0072                           __CFG_PPS1WAY$ON 0000  
                         ??_do_I2C_DO_ACK 0070                                __pintentry 0004  
                     i2c_setBuffer@buffer 0073                           ?_PMD_Initialize 0070  
          ?_i2c1_driver_clearBusCollision 0070                          ?_DATAEE_ReadByte 0050  
                       ?_i2c1_driver_open 0070                         __end_of_do_I2C_RX 01F5  
                       __end_of_do_I2C_TX 01AB                         ?_i2c1_driver_stop 0070  
                      ??_i2c1_driver_open 0050                        ??_i2c1_driver_stop 0070  
                                 _OSCCON1 088D                                   _OSCCON3 088F  
                           ?_mssp1_setIRQ 0070                                   _NVMADRH 081B  
                                 _NVMADRL 081A                                   _NVMDATH 081D  
                                 _OSCTUNE 0892                                   _NVMDATL 081C  
                                 _NVMCON2 081F                                   _SSP1ADD 018D  
                                 _SLRCONA 0F3B                                   _SLRCONB 0F46  
                                 _SLRCONC 0F51                                   _SLRCOND 0F5C  
                                 _SLRCONE 0F67                                   _SSP1BUF 018C  
                  __end_of_mssp1_clearIRQ 05A5                                   _SSP1MSK 018E  
                 ??_do_I2C_SEND_ADR_WRITE 0071                        __size_of_push_ring 0030  
                        ?_TMR1_WriteTimer 0070               ??_do_I2C_SEND_RESTART_WRITE 0070  
                      _i2c1_driver_TXData 058E                      DATAEE_WriteByte@bAdd 0056  
                      _i2c1_driver_i2cISR 0042                                   _i2c_ISR 0307  
               ??_rdBlkRegCompleteHandler 0077                        _i2c1_driver_isNACK 054B  
                     ?_i2c1_driver_TXData 0070                      __CFG_SCANE$available 0000  
                         __size_of___bmul 0016                         ??_do_I2C_TX_EMPTY 0070  
                     ?_i2c1_driver_isNACK 0070                                   _h_clock 0430  
                                 __ptext1 03DF                                   __ptext2 023A  
                                 __ptext3 0447                                   __ptext4 02AB  
                                 __ptext5 0515                                   __ptext6 04CB  
                                 __ptext7 03BF                                   __ptext8 04EB  
                                 __ptext9 0357                       __end_of_do_I2C_IDLE 058E  
                     __end_of_do_I2C_RCEN 055A            ??_TMR1_DefaultInterruptHandler 0070  
                                 _cksum_w 04CB                                 _T1CONbits 020E  
                   _OSCILLATOR_Initialize 0521               __end_of_do_I2C_SEND_RESTART 057F  
                          ??_mssp1_setIRQ 0070                               reset_recv@i 005A  
       __size_of_TMR1_SetInterruptHandler 0006                      ??_i2c1_driver_TXData 0070  
                       __end_of_read_ring 0278                  ??_PIN_MANAGER_Initialize 0050  
               ?_TMR1_SetInterruptHandler 0050                                   _nreg_pt 0049  
                         ?_mssp1_clearIRQ 0070                  _do_I2C_SEND_RESTART_READ 0584  
              __size_of_SYSTEM_Initialize 000D                                   clrloop0 055B  
                                 _running 03E8                      __size_of_returnReset 0002  
                    end_of_initialization 0047                      ??_i2c1_driver_isNACK 0070  
               __size_of_i2c_restartWrite 0002              __end_of_i2c1_driver_sendNACK 059B  
                  ?_rd1RegCompleteHandler 0076                    ?_wr1RegCompleteHandler 0076  
            __end_of_i2c1_driver_resetBus 05BB                                _reset_recv 03DF  
               _do_I2C_SEND_RESTART_WRITE 057F                         __end_of_push_ring 02DB  
                   __CFG_WDTCPS$WDTCPS_14 0000                                _returnStop 05B8  
         __end_of_rdBlkRegCompleteHandler 0430                  __end_of_do_I2C_SEND_STOP 057A  
                    __CFG_WDTCCS$HFINTOSC 0000                        _configuration_mode 03EA  
                               _TRISCbits 0013      __size_of_i2c_setDataCompleteCallback 000E  
                             returnStop@p 0076                          __CFG_FEXTOSC$OFF 0000  
                __end_of_DATAEE_WriteByte 037B              i2c_setDataCompleteCallback@p 0052  
           __size_of_do_I2C_SEND_ADR_READ 0009                             ?_update_clock 0070  
                             _do_I2C_IDLE 0589                               _do_I2C_RCEN 0553  
                          __end_of___bmul 045D                         __size_of_TMR1_ISR 0015  
                  ?_OSCILLATOR_Initialize 0070              __size_of_do_I2C_DO_NACK_STOP 0005  
                 ?_do_I2C_DO_NACK_RESTART 0070                       start_initialization 0038  
                     _i2c_busCollisionISR 0593           __size_of_PIN_MANAGER_Initialize 0045  
                            setCallBack@p 0072              __size_of_i2c1_driver_sendACK 0004  
                 i2c_setBuffer@bufferSize 0070                   ??_i2c1_driver_getRXData 0070  
                  rd1RegCompleteHandler@p 0076              __size_of_i2c1_driver_restart 0003  
            __size_of_i2c1_driver_startRX 0003                       DATAEE_ReadByte@bAdd 0050  
                   __end_of_i2c_setBuffer 04EB                      ?_i2c_busCollisionISR 0070  
                          ??_update_clock 0070                          __CFG_LPBOREN$OFF 0000  
                             ?_reset_recv 0070                      __end_of_mssp1_setIRQ 05A8  
                __size_of_TMR1_Initialize 001C                                  ??___bmul 0051  
                        ??_PMD_Initialize 0050                    wr1RegCompleteHandler@p 0076  
                           ?_do_I2C_RESET 0070                               ?_returnStop 0076  
          __end_of_do_I2C_DO_NACK_RESTART 056B                                read_ring@i 0057  
                    _i2c1_driver_sendNACK 0597                         read_ring@absindex 0059  
                             __pbssCOMMON 0077                                 ___latbits 0002  
                    _i2c1_driver_resetBus 05BA                             __pcstackBANK0 0050  
                               _do_I2C_RX 01AB                                 _do_I2C_TX 0157  
          __size_of_do_I2C_SEND_ADR_WRITE 0008             __end_of_do_I2C_SEND_ADR_WRITE 0543  
                        _i2c_restartWrite 05B4                 __size_of_i2c1_driver_open 000C  
               __size_of_i2c1_driver_stop 0003                                  ?_i2c_ISR 0070  
                         _do_I2C_TX_EMPTY 0278                             ??_setCallBack 0073  
                   _rd2RegCompleteHandler 0472                     ??_i2c_busCollisionISR 0070  
                   __end_of_fsmStateTable 03BF                    _PIN_MANAGER_Initialize 01F5  
                   _wr2RegCompleteHandler 04A8          __end_of_TMR1_SetInterruptHandler 0566  
                       read_ring@subindex 0054                            ??_do_I2C_RESET 0070  
                ??_do_I2C_DO_ADDRESS_NACK 0070               _i2c1_driver_busCollisionISR 007B  
                   __end_of_do_I2C_DO_ACK 0575                                  ?_h_clock 0070  
            ??_INTERRUPT_InterruptManager 0077                ??_do_I2C_SEND_RESTART_READ 0070  
                   ?_i2c1_driver_sendNACK 0070                                  ?_cksum_w 0070  
                        ??_mssp1_clearIRQ 0070                     ?_i2c1_driver_resetBus 0070  
      __size_of_do_I2C_SEND_RESTART_WRITE 0005                                ?_do_I2C_RX 0070  
                              ?_do_I2C_TX 0070                       __size_of_reset_recv 001C  
                          __size_of_cksum 0020                  __size_of_DATAEE_ReadByte 000F  
                 ??_rd1RegCompleteHandler 0077                                 _read_ring 023A  
                 ??_wr1RegCompleteHandler 0077                                  _LATAbits 0016  
                     __size_of_returnStop 0002                                 clear_ram0 055A  
                               _nreg_init 03E9                                  _PIE3bits 0719  
                                _PIE4bits 071A                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 0032                                  _PIR3bits 070F  
                               _ring_byte 003D                                  _PIR4bits 0710  
                                _SSP1CON1 0190                                  _SSP1CON2 0191  
                                _TMR1_ISR 045D              ?_i2c_setDataCompleteCallback 0050  
                                _SSP1STAT 018F                       __end_of_setCallBack 0357  
                       ??_TMR1_Initialize 0052                                 _push_ring 02AB  
                       ?_do_I2C_SEND_STOP 0070                             ??_returnReset 0077  
                      ??_do_I2C_SEND_STOP 0070               __size_of_i2c1_driver_TXData 0005  
                   DATAEE_WriteByte@bData 0058                      __end_of_update_clock 039F  
       __end_of_do_I2C_SEND_RESTART_WRITE 0584                   __end_of_do_I2C_TX_EMPTY 02AB  
                              ?_read_ring 0054                  ?_rdBlkRegCompleteHandler 0076  
                       ?_DATAEE_WriteByte 0056              __size_of_do_I2C_SEND_RESTART 0005  
             __size_of_i2c1_driver_isNACK 0008                     __size_of_mssp1_setIRQ 0003  
                  ?_rd2RegCompleteHandler 0076                        ??_DATAEE_WriteByte 0059  
                     _do_I2C_DO_NACK_STOP 056B                          __size_of_i2c_ISR 002A  
                  ?_wr2RegCompleteHandler 0076                              ?_do_I2C_IDLE 0070  
                            ?_do_I2C_RCEN 0070                                push_ring@i 005B  
                 ??_OSCILLATOR_Initialize 0050                       _i2c1_driver_sendACK 059B  
         __size_of_do_I2C_DO_ADDRESS_NACK 002C                       i2c1_driver_TXData@d 0070  
                  ??_i2c1_driver_sendNACK 0070             ??_i2c_setDataCompleteCallback 0075  
                     _i2c1_driver_restart 05B1                  _TMR1_SetInterruptHandler 0560  
                        __size_of_h_clock 0017                      ?_do_I2C_DO_NACK_STOP 0070  
                     _i2c1_driver_startRX 05AB              __end_of_do_I2C_SEND_ADR_READ 0533  
                              ?_push_ring 0070                    ??_i2c1_driver_resetBus 0070  
                   _TMR1_InterruptHandler 0077                          __size_of_cksum_w 0010  
                            _mssp1_setIRQ 05A5                               ??_do_I2C_RX 0070  
                             ??_do_I2C_TX 0071                                  __ptext10 0508  
                                __ptext11 03FB                                  __ptext20 05A2  
                                __ptext12 0560                                  __ptext21 01AB  
                                __ptext13 0533                                _T1GCONbits 020F  
                                __ptext30 0575                                  __ptext22 0157  
                                __ptext14 01F5                                  __ptext31 057A  
                                __ptext23 02DB                                  __ptext15 0521  
                                __ptext40 05A8                                  __ptext32 057F  
                                __ptext24 0566                                  __ptext41 0597  
                                __ptext33 0584                                  __ptext25 056B  
                                __ptext17 0593                                  __ptext50 05B8  
                                __ptext42 05BA                                  __ptext34 0589  
                                __ptext26 0570                                  __ptext18 059F  
                                __ptext51 04A8                                  __ptext43 05AB  
                                __ptext35 0543                                  __ptext27 0553  
                                __ptext19 0307                                  __ptext60 0430  
                                __ptext52 04FA                                  __ptext44 0417  
                                __ptext36 0278                                  __ptext28 053B  
                                __ptext61 037B                                  __ptext53 0331  
                                __ptext45 0472                                  __ptext37 05A5  
                                __ptext29 052A                                  __ptext62 04BA  
                                __ptext54 04DB                                  __ptext46 0484  
                                __ptext38 054B                                  __ptext55 05AE  
                                __ptext47 0496                                  __ptext39 058E  
                                __ptext56 05B1                                  __ptext48 05B4  
                                __ptext57 059B                                  __ptext49 05B6  
                                __ptext58 045D                                  __ptext59 05BB  
                            _SSP1CON1bits 0190                              _SSP1CON2bits 0191  
                    ?_i2c1_driver_sendACK 0070                      __end_of_do_I2C_RESET 054B  
             DATAEE_WriteByte@GIEBitValue 0059                      ?_i2c1_driver_restart 0070  
                     __end_of_returnReset 05B8                          _i2c1_driver_open 0515  
                        _i2c1_driver_stop 05AE                             __size_of_main 010C  
                    ?_i2c1_driver_startRX 0070            __size_of_i2c1_driver_getRXData 0003  
           __end_of_i2c1_driver_getRXData 05AB                         ??_DATAEE_ReadByte 0052  
                    __CFG_WDTCWS$WDTCWS_7 0000                               _setCallBack 0331  
                            ??_reset_recv 005A                                  int$flags 007E  
      __end_of_INTERRUPT_InterruptManager 0036                _INTERRUPT_InterruptManager 0004  
                            _SSP1STATbits 018F                         ??_TMR1_WriteTimer 0072  
                                cksum@res 0053          __end_of_do_I2C_SEND_RESTART_READ 0589  
                            ??_returnStop 0077                  __end_of_i2c_restartWrite 05B6  
                   ??_do_I2C_DO_NACK_STOP 0070                                _INTCONbits 000B  
                             _NVMCON1bits 081E                        __end_of_reset_recv 03FB  
                   ??_i2c1_driver_sendACK 0070                          ?_do_I2C_TX_EMPTY 0070  
                             ??_read_ring 0055                    _do_I2C_DO_ADDRESS_NACK 02DB  
                                intlevel1 0000                     ??_i2c1_driver_restart 0070  
                  rd2RegCompleteHandler@p 0076                     ??_i2c1_driver_startRX 0070  
                 ?_PIN_MANAGER_Initialize 0070                         i2c_restartWrite@p 0076  
                       __CFG_CLKOUTEN$OFF 0000                        __end_of_returnStop 05BA  
                  wr2RegCompleteHandler@p 0076                             __pstringtext1 039F  
                   __size_of_update_clock 0024                            read_ring@index 0058  
                             ??_push_ring 005A                                _SSP1DATPPS 0EC6  
                              _SSP1CLKPPS 0EC5                    __size_of_i2c_setBuffer 0010  
                             _returnReset 05B6            __end_of_PIN_MANAGER_Initialize 023A  
             __end_of_i2c_busCollisionISR 0597            __size_of_rd1RegCompleteHandler 0012  
           __end_of_rd1RegCompleteHandler 0496            __size_of_wr1RegCompleteHandler 0012  
           __end_of_wr1RegCompleteHandler 04A8                     _do_I2C_SEND_ADR_WRITE 053B  
                    _do_I2C_SEND_ADR_READ 052A                           _TMR1_Initialize 03FB  
