

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 29 13:39:21 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	psect	text43,local,class=CODE,merge=1,delta=2
    63                           	psect	text44,local,class=CODE,merge=1,delta=2
    64                           	psect	text45,local,class=CODE,merge=1,delta=2
    65                           	psect	text46,local,class=CODE,merge=1,delta=2
    66                           	psect	text47,local,class=CODE,merge=1,delta=2
    67                           	psect	text48,local,class=CODE,merge=1,delta=2
    68                           	psect	text49,local,class=CODE,merge=1,delta=2
    69                           	psect	text50,local,class=CODE,merge=1,delta=2
    70                           	psect	text51,local,class=CODE,merge=1,delta=2
    71                           	psect	text52,local,class=CODE,merge=1,delta=2
    72                           	psect	text53,local,class=CODE,merge=1,delta=2
    73                           	psect	text54,local,class=CODE,merge=1,delta=2
    74                           	psect	text55,local,class=CODE,merge=1,delta=2
    75                           	psect	intentry,global,class=CODE,delta=2
    76                           	psect	text57,local,class=CODE,merge=1,delta=2
    77                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    78                           	psect	text59,local,class=CODE,merge=1,delta=2
    79                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    80                           	psect	text61,local,class=CODE,merge=1,delta=2
    81                           	psect	text62,local,class=CODE,merge=1,delta=2
    82                           	psect	text63,local,class=CODE,merge=1,delta=2
    83                           	psect	text64,local,class=CODE,merge=1,delta=2
    84                           	psect	text65,local,class=CODE,merge=1,delta=2
    85                           	psect	text66,local,class=CODE,merge=1,delta=2
    86                           	psect	text67,local,class=CODE,merge=1,delta=2
    87                           	psect	text68,local,class=CODE,merge=1,delta=2
    88                           	psect	text69,local,class=CODE,merge=1,delta=2
    89                           	psect	text70,local,class=CODE,merge=1,delta=2
    90                           	psect	text71,local,class=CODE,merge=1,delta=2
    91                           	psect	text72,local,class=CODE,merge=1,delta=2
    92                           	psect	text73,local,class=CODE,merge=1,delta=2
    93                           	psect	text74,local,class=CODE,merge=1,delta=2
    94                           	psect	text75,local,class=CODE,merge=1,delta=2
    95                           	psect	text76,local,class=CODE,merge=1,delta=2
    96                           	psect	text77,local,class=CODE,merge=1,inline,delta=2
    97                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
    98                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
    99                           	psect	text80,local,class=CODE,merge=1,inline,delta=2
   100                           	psect	text81,local,class=CODE,merge=1,inline,delta=2
   101                           	psect	text82,local,class=CODE,merge=1,inline,delta=2
   102                           	psect	text83,local,class=CODE,merge=1,inline,delta=2
   103                           	psect	text84,local,class=CODE,merge=1,delta=2
   104                           	psect	text85,local,class=CODE,merge=1,delta=2
   105                           	psect	text86,local,class=CODE,merge=1,delta=2
   106                           	psect	text87,local,class=CODE,merge=1,delta=2
   107                           	psect	text88,local,class=CODE,merge=1,delta=2
   108                           	psect	text89,local,class=CODE,merge=1,delta=2
   109                           	psect	text90,local,class=CODE,merge=1,delta=2
   110                           	psect	text91,local,class=CODE,merge=1,delta=2
   111                           	psect	text92,local,class=CODE,merge=1,delta=2
   112                           	psect	text93,local,class=CODE,merge=1,delta=2
   113                           	psect	text94,local,class=CODE,merge=1,delta=2
   114                           	psect	text95,local,class=CODE,merge=1,inline,delta=2
   115                           	psect	text96,local,class=CODE,merge=1,inline,delta=2
   116                           	psect	text97,local,class=CODE,merge=1,inline,delta=2
   117                           	psect	text98,local,class=CODE,merge=1,delta=2
   118                           	psect	text99,local,class=CODE,merge=1,delta=2
   119                           	psect	text100,local,class=CODE,merge=1,delta=2
   120                           	psect	text101,local,class=CODE,merge=1,delta=2
   121                           	psect	text102,local,class=CODE,merge=1,delta=2
   122                           	psect	text103,local,class=CODE,merge=1,delta=2
   123                           	psect	text104,local,class=CODE,merge=1,delta=2
   124                           	psect	text105,local,class=CODE,merge=1,delta=2
   125                           	psect	text106,local,class=CODE,merge=1,delta=2
   126                           	psect	text107,local,class=CODE,merge=1,delta=2
   127                           	psect	text108,local,class=CODE,merge=1,delta=2
   128                           	psect	text109,local,class=CODE,merge=1,delta=2
   129                           	psect	text110,local,class=CODE,merge=1,delta=2
   130                           	psect	text111,local,class=CODE,merge=1,delta=2
   131                           	psect	text112,local,class=CODE,merge=1,delta=2
   132                           	psect	text113,local,class=CODE,merge=1,delta=2
   133                           	psect	text114,local,class=CODE,merge=1,delta=2
   134                           	dabs	1,0x7E,2
   135  0000                     
   136                           ; Version 2.10
   137                           ; Generated 31/07/2019 GMT
   138                           ; 
   139                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   140                           ; All rights reserved.
   141                           ; 
   142                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   143                           ; 
   144                           ; Redistribution and use in source and binary forms, with or without modification, are
   145                           ; permitted provided that the following conditions are met:
   146                           ; 
   147                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   148                           ;        conditions and the following disclaimer.
   149                           ; 
   150                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   151                           ;        of conditions and the following disclaimer in the documentation and/or other
   152                           ;        materials provided with the distribution.
   153                           ; 
   154                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   155                           ;        software without specific prior written permission.
   156                           ; 
   157                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   158                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   159                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   160                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   161                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   162                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   163                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   164                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   165                           ; 
   166                           ; 
   167                           ; Code-generator required, PIC16F18875 Definitions
   168                           ; 
   169                           ; SFR Addresses
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001C                     	;# 
   198  001C                     	;# 
   199  001D                     	;# 
   200  001D                     	;# 
   201  001E                     	;# 
   202  001F                     	;# 
   203  008C                     	;# 
   204  008C                     	;# 
   205  008D                     	;# 
   206  008E                     	;# 
   207  008E                     	;# 
   208  008F                     	;# 
   209  0090                     	;# 
   210  0090                     	;# 
   211  0091                     	;# 
   212  0093                     	;# 
   213  0094                     	;# 
   214  0095                     	;# 
   215  0096                     	;# 
   216  0097                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009A                     	;# 
   220  009B                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  010E                     	;# 
   227  010E                     	;# 
   228  010F                     	;# 
   229  0110                     	;# 
   230  0110                     	;# 
   231  0111                     	;# 
   232  0112                     	;# 
   233  0112                     	;# 
   234  0113                     	;# 
   235  0114                     	;# 
   236  0114                     	;# 
   237  0115                     	;# 
   238  0116                     	;# 
   239  0116                     	;# 
   240  0117                     	;# 
   241  0119                     	;# 
   242  0119                     	;# 
   243  0119                     	;# 
   244  011A                     	;# 
   245  011A                     	;# 
   246  011A                     	;# 
   247  011B                     	;# 
   248  011B                     	;# 
   249  011B                     	;# 
   250  011B                     	;# 
   251  011B                     	;# 
   252  011C                     	;# 
   253  011C                     	;# 
   254  011C                     	;# 
   255  011D                     	;# 
   256  011D                     	;# 
   257  011D                     	;# 
   258  011E                     	;# 
   259  011E                     	;# 
   260  011E                     	;# 
   261  011F                     	;# 
   262  011F                     	;# 
   263  011F                     	;# 
   264  011F                     	;# 
   265  011F                     	;# 
   266  018C                     	;# 
   267  018D                     	;# 
   268  018E                     	;# 
   269  018F                     	;# 
   270  0190                     	;# 
   271  0191                     	;# 
   272  0192                     	;# 
   273  0196                     	;# 
   274  0197                     	;# 
   275  0198                     	;# 
   276  0199                     	;# 
   277  019A                     	;# 
   278  019B                     	;# 
   279  019C                     	;# 
   280  020C                     	;# 
   281  020C                     	;# 
   282  020D                     	;# 
   283  020E                     	;# 
   284  020F                     	;# 
   285  020F                     	;# 
   286  0210                     	;# 
   287  0210                     	;# 
   288  0211                     	;# 
   289  0211                     	;# 
   290  0212                     	;# 
   291  0212                     	;# 
   292  0213                     	;# 
   293  0214                     	;# 
   294  0215                     	;# 
   295  0215                     	;# 
   296  0216                     	;# 
   297  0216                     	;# 
   298  0217                     	;# 
   299  0217                     	;# 
   300  0218                     	;# 
   301  0218                     	;# 
   302  0219                     	;# 
   303  021A                     	;# 
   304  021B                     	;# 
   305  021B                     	;# 
   306  021C                     	;# 
   307  021C                     	;# 
   308  021D                     	;# 
   309  021D                     	;# 
   310  021E                     	;# 
   311  021F                     	;# 
   312  028C                     	;# 
   313  028C                     	;# 
   314  028D                     	;# 
   315  028D                     	;# 
   316  028E                     	;# 
   317  028F                     	;# 
   318  0290                     	;# 
   319  0290                     	;# 
   320  0291                     	;# 
   321  0292                     	;# 
   322  0292                     	;# 
   323  0293                     	;# 
   324  0293                     	;# 
   325  0294                     	;# 
   326  0295                     	;# 
   327  0296                     	;# 
   328  0296                     	;# 
   329  0297                     	;# 
   330  0298                     	;# 
   331  0298                     	;# 
   332  0299                     	;# 
   333  0299                     	;# 
   334  029A                     	;# 
   335  029B                     	;# 
   336  029C                     	;# 
   337  029C                     	;# 
   338  029D                     	;# 
   339  030C                     	;# 
   340  030C                     	;# 
   341  030D                     	;# 
   342  030E                     	;# 
   343  030F                     	;# 
   344  0310                     	;# 
   345  0310                     	;# 
   346  0311                     	;# 
   347  0312                     	;# 
   348  0313                     	;# 
   349  0314                     	;# 
   350  0314                     	;# 
   351  0315                     	;# 
   352  0316                     	;# 
   353  0317                     	;# 
   354  0318                     	;# 
   355  0318                     	;# 
   356  0319                     	;# 
   357  031A                     	;# 
   358  031B                     	;# 
   359  031C                     	;# 
   360  031C                     	;# 
   361  031D                     	;# 
   362  031E                     	;# 
   363  031F                     	;# 
   364  038C                     	;# 
   365  038C                     	;# 
   366  038D                     	;# 
   367  038E                     	;# 
   368  0390                     	;# 
   369  0390                     	;# 
   370  0391                     	;# 
   371  0392                     	;# 
   372  040C                     	;# 
   373  040D                     	;# 
   374  040E                     	;# 
   375  040F                     	;# 
   376  0410                     	;# 
   377  0411                     	;# 
   378  0416                     	;# 
   379  0416                     	;# 
   380  0417                     	;# 
   381  0418                     	;# 
   382  0418                     	;# 
   383  0419                     	;# 
   384  041A                     	;# 
   385  041A                     	;# 
   386  041B                     	;# 
   387  041C                     	;# 
   388  041C                     	;# 
   389  041D                     	;# 
   390  041E                     	;# 
   391  041F                     	;# 
   392  048C                     	;# 
   393  048C                     	;# 
   394  048D                     	;# 
   395  048E                     	;# 
   396  048F                     	;# 
   397  048F                     	;# 
   398  0490                     	;# 
   399  0491                     	;# 
   400  0492                     	;# 
   401  0492                     	;# 
   402  0493                     	;# 
   403  0494                     	;# 
   404  0495                     	;# 
   405  0495                     	;# 
   406  0496                     	;# 
   407  0497                     	;# 
   408  0498                     	;# 
   409  0499                     	;# 
   410  049A                     	;# 
   411  049B                     	;# 
   412  049C                     	;# 
   413  049D                     	;# 
   414  050C                     	;# 
   415  050C                     	;# 
   416  050D                     	;# 
   417  050E                     	;# 
   418  050F                     	;# 
   419  050F                     	;# 
   420  0510                     	;# 
   421  0511                     	;# 
   422  0512                     	;# 
   423  0512                     	;# 
   424  0513                     	;# 
   425  0514                     	;# 
   426  0515                     	;# 
   427  0515                     	;# 
   428  0516                     	;# 
   429  0517                     	;# 
   430  0518                     	;# 
   431  0519                     	;# 
   432  051A                     	;# 
   433  051B                     	;# 
   434  051C                     	;# 
   435  051D                     	;# 
   436  058C                     	;# 
   437  058C                     	;# 
   438  058D                     	;# 
   439  058E                     	;# 
   440  058F                     	;# 
   441  058F                     	;# 
   442  0590                     	;# 
   443  0591                     	;# 
   444  0592                     	;# 
   445  0593                     	;# 
   446  060C                     	;# 
   447  060D                     	;# 
   448  060E                     	;# 
   449  060F                     	;# 
   450  0610                     	;# 
   451  0611                     	;# 
   452  0612                     	;# 
   453  0613                     	;# 
   454  0614                     	;# 
   455  0616                     	;# 
   456  0617                     	;# 
   457  0618                     	;# 
   458  0619                     	;# 
   459  061A                     	;# 
   460  061B                     	;# 
   461  061C                     	;# 
   462  061D                     	;# 
   463  061E                     	;# 
   464  068C                     	;# 
   465  068D                     	;# 
   466  068E                     	;# 
   467  068F                     	;# 
   468  0690                     	;# 
   469  0691                     	;# 
   470  0692                     	;# 
   471  0693                     	;# 
   472  0694                     	;# 
   473  070C                     	;# 
   474  070D                     	;# 
   475  070E                     	;# 
   476  070F                     	;# 
   477  0710                     	;# 
   478  0711                     	;# 
   479  0712                     	;# 
   480  0713                     	;# 
   481  0714                     	;# 
   482  0716                     	;# 
   483  0717                     	;# 
   484  0718                     	;# 
   485  0719                     	;# 
   486  071A                     	;# 
   487  071B                     	;# 
   488  071C                     	;# 
   489  071D                     	;# 
   490  071E                     	;# 
   491  0796                     	;# 
   492  0797                     	;# 
   493  0798                     	;# 
   494  0799                     	;# 
   495  079A                     	;# 
   496  079B                     	;# 
   497  080C                     	;# 
   498  080D                     	;# 
   499  080E                     	;# 
   500  080F                     	;# 
   501  0810                     	;# 
   502  0811                     	;# 
   503  0812                     	;# 
   504  0813                     	;# 
   505  0814                     	;# 
   506  081A                     	;# 
   507  081B                     	;# 
   508  081C                     	;# 
   509  081D                     	;# 
   510  081E                     	;# 
   511  081F                     	;# 
   512  088C                     	;# 
   513  088D                     	;# 
   514  088E                     	;# 
   515  088F                     	;# 
   516  0890                     	;# 
   517  0891                     	;# 
   518  0892                     	;# 
   519  0893                     	;# 
   520  0895                     	;# 
   521  0896                     	;# 
   522  0897                     	;# 
   523  0898                     	;# 
   524  0899                     	;# 
   525  089A                     	;# 
   526  089B                     	;# 
   527  090C                     	;# 
   528  090E                     	;# 
   529  090F                     	;# 
   530  091F                     	;# 
   531  091F                     	;# 
   532  098F                     	;# 
   533  098F                     	;# 
   534  0990                     	;# 
   535  0991                     	;# 
   536  0992                     	;# 
   537  0993                     	;# 
   538  0994                     	;# 
   539  0995                     	;# 
   540  0996                     	;# 
   541  0997                     	;# 
   542  0E0F                     	;# 
   543  0E10                     	;# 
   544  0E11                     	;# 
   545  0E12                     	;# 
   546  0E13                     	;# 
   547  0E14                     	;# 
   548  0E15                     	;# 
   549  0E16                     	;# 
   550  0E17                     	;# 
   551  0E18                     	;# 
   552  0E19                     	;# 
   553  0E1A                     	;# 
   554  0E1B                     	;# 
   555  0E1C                     	;# 
   556  0E1D                     	;# 
   557  0E1E                     	;# 
   558  0E1F                     	;# 
   559  0E20                     	;# 
   560  0E21                     	;# 
   561  0E22                     	;# 
   562  0E23                     	;# 
   563  0E24                     	;# 
   564  0E25                     	;# 
   565  0E26                     	;# 
   566  0E27                     	;# 
   567  0E28                     	;# 
   568  0E29                     	;# 
   569  0E2A                     	;# 
   570  0E2B                     	;# 
   571  0E2C                     	;# 
   572  0E2D                     	;# 
   573  0E2E                     	;# 
   574  0E2F                     	;# 
   575  0E30                     	;# 
   576  0E31                     	;# 
   577  0E32                     	;# 
   578  0E33                     	;# 
   579  0E34                     	;# 
   580  0E35                     	;# 
   581  0E36                     	;# 
   582  0E37                     	;# 
   583  0E8F                     	;# 
   584  0E90                     	;# 
   585  0E91                     	;# 
   586  0E92                     	;# 
   587  0E93                     	;# 
   588  0E94                     	;# 
   589  0E95                     	;# 
   590  0E96                     	;# 
   591  0E97                     	;# 
   592  0E9C                     	;# 
   593  0E9D                     	;# 
   594  0E9E                     	;# 
   595  0EA1                     	;# 
   596  0EA2                     	;# 
   597  0EA3                     	;# 
   598  0EA4                     	;# 
   599  0EA5                     	;# 
   600  0EA9                     	;# 
   601  0EAA                     	;# 
   602  0EAB                     	;# 
   603  0EAC                     	;# 
   604  0EB1                     	;# 
   605  0EB2                     	;# 
   606  0EB3                     	;# 
   607  0EB8                     	;# 
   608  0EB9                     	;# 
   609  0EBA                     	;# 
   610  0EBB                     	;# 
   611  0EBC                     	;# 
   612  0EBD                     	;# 
   613  0EBE                     	;# 
   614  0EC3                     	;# 
   615  0EC5                     	;# 
   616  0EC6                     	;# 
   617  0EC7                     	;# 
   618  0EC8                     	;# 
   619  0EC9                     	;# 
   620  0ECA                     	;# 
   621  0ECB                     	;# 
   622  0ECC                     	;# 
   623  0F10                     	;# 
   624  0F11                     	;# 
   625  0F12                     	;# 
   626  0F13                     	;# 
   627  0F14                     	;# 
   628  0F15                     	;# 
   629  0F16                     	;# 
   630  0F17                     	;# 
   631  0F18                     	;# 
   632  0F19                     	;# 
   633  0F1A                     	;# 
   634  0F1B                     	;# 
   635  0F1C                     	;# 
   636  0F1D                     	;# 
   637  0F1E                     	;# 
   638  0F1F                     	;# 
   639  0F20                     	;# 
   640  0F21                     	;# 
   641  0F22                     	;# 
   642  0F23                     	;# 
   643  0F24                     	;# 
   644  0F25                     	;# 
   645  0F26                     	;# 
   646  0F27                     	;# 
   647  0F28                     	;# 
   648  0F29                     	;# 
   649  0F2A                     	;# 
   650  0F2B                     	;# 
   651  0F2C                     	;# 
   652  0F2D                     	;# 
   653  0F2E                     	;# 
   654  0F2F                     	;# 
   655  0F30                     	;# 
   656  0F31                     	;# 
   657  0F32                     	;# 
   658  0F38                     	;# 
   659  0F39                     	;# 
   660  0F3A                     	;# 
   661  0F3B                     	;# 
   662  0F3C                     	;# 
   663  0F3D                     	;# 
   664  0F3E                     	;# 
   665  0F3F                     	;# 
   666  0F40                     	;# 
   667  0F41                     	;# 
   668  0F43                     	;# 
   669  0F44                     	;# 
   670  0F45                     	;# 
   671  0F46                     	;# 
   672  0F47                     	;# 
   673  0F48                     	;# 
   674  0F49                     	;# 
   675  0F4A                     	;# 
   676  0F4B                     	;# 
   677  0F4C                     	;# 
   678  0F4E                     	;# 
   679  0F4F                     	;# 
   680  0F50                     	;# 
   681  0F51                     	;# 
   682  0F52                     	;# 
   683  0F53                     	;# 
   684  0F54                     	;# 
   685  0F55                     	;# 
   686  0F56                     	;# 
   687  0F57                     	;# 
   688  0F59                     	;# 
   689  0F5A                     	;# 
   690  0F5B                     	;# 
   691  0F5C                     	;# 
   692  0F5D                     	;# 
   693  0F61                     	;# 
   694  0F62                     	;# 
   695  0F64                     	;# 
   696  0F65                     	;# 
   697  0F66                     	;# 
   698  0F67                     	;# 
   699  0F68                     	;# 
   700  0F69                     	;# 
   701  0F6A                     	;# 
   702  0F6B                     	;# 
   703  0F6C                     	;# 
   704  0F6D                     	;# 
   705  0FE4                     	;# 
   706  0FE5                     	;# 
   707  0FE6                     	;# 
   708  0FE7                     	;# 
   709  0FE8                     	;# 
   710  0FE9                     	;# 
   711  0FEA                     	;# 
   712  0FEB                     	;# 
   713  0FED                     	;# 
   714  0FEE                     	;# 
   715  0FEF                     	;# 
   716  0000                     	;# 
   717  0001                     	;# 
   718  0002                     	;# 
   719  0003                     	;# 
   720  0004                     	;# 
   721  0005                     	;# 
   722  0006                     	;# 
   723  0007                     	;# 
   724  0008                     	;# 
   725  0009                     	;# 
   726  000A                     	;# 
   727  000B                     	;# 
   728  000C                     	;# 
   729  000D                     	;# 
   730  000E                     	;# 
   731  000F                     	;# 
   732  0010                     	;# 
   733  0011                     	;# 
   734  0012                     	;# 
   735  0013                     	;# 
   736  0014                     	;# 
   737  0015                     	;# 
   738  0016                     	;# 
   739  0017                     	;# 
   740  0018                     	;# 
   741  0019                     	;# 
   742  001A                     	;# 
   743  001C                     	;# 
   744  001C                     	;# 
   745  001D                     	;# 
   746  001D                     	;# 
   747  001E                     	;# 
   748  001F                     	;# 
   749  008C                     	;# 
   750  008C                     	;# 
   751  008D                     	;# 
   752  008E                     	;# 
   753  008E                     	;# 
   754  008F                     	;# 
   755  0090                     	;# 
   756  0090                     	;# 
   757  0091                     	;# 
   758  0093                     	;# 
   759  0094                     	;# 
   760  0095                     	;# 
   761  0096                     	;# 
   762  0097                     	;# 
   763  0098                     	;# 
   764  0099                     	;# 
   765  009A                     	;# 
   766  009B                     	;# 
   767  009C                     	;# 
   768  009D                     	;# 
   769  009E                     	;# 
   770  010C                     	;# 
   771  010D                     	;# 
   772  010E                     	;# 
   773  010E                     	;# 
   774  010F                     	;# 
   775  0110                     	;# 
   776  0110                     	;# 
   777  0111                     	;# 
   778  0112                     	;# 
   779  0112                     	;# 
   780  0113                     	;# 
   781  0114                     	;# 
   782  0114                     	;# 
   783  0115                     	;# 
   784  0116                     	;# 
   785  0116                     	;# 
   786  0117                     	;# 
   787  0119                     	;# 
   788  0119                     	;# 
   789  0119                     	;# 
   790  011A                     	;# 
   791  011A                     	;# 
   792  011A                     	;# 
   793  011B                     	;# 
   794  011B                     	;# 
   795  011B                     	;# 
   796  011B                     	;# 
   797  011B                     	;# 
   798  011C                     	;# 
   799  011C                     	;# 
   800  011C                     	;# 
   801  011D                     	;# 
   802  011D                     	;# 
   803  011D                     	;# 
   804  011E                     	;# 
   805  011E                     	;# 
   806  011E                     	;# 
   807  011F                     	;# 
   808  011F                     	;# 
   809  011F                     	;# 
   810  011F                     	;# 
   811  011F                     	;# 
   812  018C                     	;# 
   813  018D                     	;# 
   814  018E                     	;# 
   815  018F                     	;# 
   816  0190                     	;# 
   817  0191                     	;# 
   818  0192                     	;# 
   819  0196                     	;# 
   820  0197                     	;# 
   821  0198                     	;# 
   822  0199                     	;# 
   823  019A                     	;# 
   824  019B                     	;# 
   825  019C                     	;# 
   826  020C                     	;# 
   827  020C                     	;# 
   828  020D                     	;# 
   829  020E                     	;# 
   830  020F                     	;# 
   831  020F                     	;# 
   832  0210                     	;# 
   833  0210                     	;# 
   834  0211                     	;# 
   835  0211                     	;# 
   836  0212                     	;# 
   837  0212                     	;# 
   838  0213                     	;# 
   839  0214                     	;# 
   840  0215                     	;# 
   841  0215                     	;# 
   842  0216                     	;# 
   843  0216                     	;# 
   844  0217                     	;# 
   845  0217                     	;# 
   846  0218                     	;# 
   847  0218                     	;# 
   848  0219                     	;# 
   849  021A                     	;# 
   850  021B                     	;# 
   851  021B                     	;# 
   852  021C                     	;# 
   853  021C                     	;# 
   854  021D                     	;# 
   855  021D                     	;# 
   856  021E                     	;# 
   857  021F                     	;# 
   858  028C                     	;# 
   859  028C                     	;# 
   860  028D                     	;# 
   861  028D                     	;# 
   862  028E                     	;# 
   863  028F                     	;# 
   864  0290                     	;# 
   865  0290                     	;# 
   866  0291                     	;# 
   867  0292                     	;# 
   868  0292                     	;# 
   869  0293                     	;# 
   870  0293                     	;# 
   871  0294                     	;# 
   872  0295                     	;# 
   873  0296                     	;# 
   874  0296                     	;# 
   875  0297                     	;# 
   876  0298                     	;# 
   877  0298                     	;# 
   878  0299                     	;# 
   879  0299                     	;# 
   880  029A                     	;# 
   881  029B                     	;# 
   882  029C                     	;# 
   883  029C                     	;# 
   884  029D                     	;# 
   885  030C                     	;# 
   886  030C                     	;# 
   887  030D                     	;# 
   888  030E                     	;# 
   889  030F                     	;# 
   890  0310                     	;# 
   891  0310                     	;# 
   892  0311                     	;# 
   893  0312                     	;# 
   894  0313                     	;# 
   895  0314                     	;# 
   896  0314                     	;# 
   897  0315                     	;# 
   898  0316                     	;# 
   899  0317                     	;# 
   900  0318                     	;# 
   901  0318                     	;# 
   902  0319                     	;# 
   903  031A                     	;# 
   904  031B                     	;# 
   905  031C                     	;# 
   906  031C                     	;# 
   907  031D                     	;# 
   908  031E                     	;# 
   909  031F                     	;# 
   910  038C                     	;# 
   911  038C                     	;# 
   912  038D                     	;# 
   913  038E                     	;# 
   914  0390                     	;# 
   915  0390                     	;# 
   916  0391                     	;# 
   917  0392                     	;# 
   918  040C                     	;# 
   919  040D                     	;# 
   920  040E                     	;# 
   921  040F                     	;# 
   922  0410                     	;# 
   923  0411                     	;# 
   924  0416                     	;# 
   925  0416                     	;# 
   926  0417                     	;# 
   927  0418                     	;# 
   928  0418                     	;# 
   929  0419                     	;# 
   930  041A                     	;# 
   931  041A                     	;# 
   932  041B                     	;# 
   933  041C                     	;# 
   934  041C                     	;# 
   935  041D                     	;# 
   936  041E                     	;# 
   937  041F                     	;# 
   938  048C                     	;# 
   939  048C                     	;# 
   940  048D                     	;# 
   941  048E                     	;# 
   942  048F                     	;# 
   943  048F                     	;# 
   944  0490                     	;# 
   945  0491                     	;# 
   946  0492                     	;# 
   947  0492                     	;# 
   948  0493                     	;# 
   949  0494                     	;# 
   950  0495                     	;# 
   951  0495                     	;# 
   952  0496                     	;# 
   953  0497                     	;# 
   954  0498                     	;# 
   955  0499                     	;# 
   956  049A                     	;# 
   957  049B                     	;# 
   958  049C                     	;# 
   959  049D                     	;# 
   960  050C                     	;# 
   961  050C                     	;# 
   962  050D                     	;# 
   963  050E                     	;# 
   964  050F                     	;# 
   965  050F                     	;# 
   966  0510                     	;# 
   967  0511                     	;# 
   968  0512                     	;# 
   969  0512                     	;# 
   970  0513                     	;# 
   971  0514                     	;# 
   972  0515                     	;# 
   973  0515                     	;# 
   974  0516                     	;# 
   975  0517                     	;# 
   976  0518                     	;# 
   977  0519                     	;# 
   978  051A                     	;# 
   979  051B                     	;# 
   980  051C                     	;# 
   981  051D                     	;# 
   982  058C                     	;# 
   983  058C                     	;# 
   984  058D                     	;# 
   985  058E                     	;# 
   986  058F                     	;# 
   987  058F                     	;# 
   988  0590                     	;# 
   989  0591                     	;# 
   990  0592                     	;# 
   991  0593                     	;# 
   992  060C                     	;# 
   993  060D                     	;# 
   994  060E                     	;# 
   995  060F                     	;# 
   996  0610                     	;# 
   997  0611                     	;# 
   998  0612                     	;# 
   999  0613                     	;# 
  1000  0614                     	;# 
  1001  0616                     	;# 
  1002  0617                     	;# 
  1003  0618                     	;# 
  1004  0619                     	;# 
  1005  061A                     	;# 
  1006  061B                     	;# 
  1007  061C                     	;# 
  1008  061D                     	;# 
  1009  061E                     	;# 
  1010  068C                     	;# 
  1011  068D                     	;# 
  1012  068E                     	;# 
  1013  068F                     	;# 
  1014  0690                     	;# 
  1015  0691                     	;# 
  1016  0692                     	;# 
  1017  0693                     	;# 
  1018  0694                     	;# 
  1019  070C                     	;# 
  1020  070D                     	;# 
  1021  070E                     	;# 
  1022  070F                     	;# 
  1023  0710                     	;# 
  1024  0711                     	;# 
  1025  0712                     	;# 
  1026  0713                     	;# 
  1027  0714                     	;# 
  1028  0716                     	;# 
  1029  0717                     	;# 
  1030  0718                     	;# 
  1031  0719                     	;# 
  1032  071A                     	;# 
  1033  071B                     	;# 
  1034  071C                     	;# 
  1035  071D                     	;# 
  1036  071E                     	;# 
  1037  0796                     	;# 
  1038  0797                     	;# 
  1039  0798                     	;# 
  1040  0799                     	;# 
  1041  079A                     	;# 
  1042  079B                     	;# 
  1043  080C                     	;# 
  1044  080D                     	;# 
  1045  080E                     	;# 
  1046  080F                     	;# 
  1047  0810                     	;# 
  1048  0811                     	;# 
  1049  0812                     	;# 
  1050  0813                     	;# 
  1051  0814                     	;# 
  1052  081A                     	;# 
  1053  081B                     	;# 
  1054  081C                     	;# 
  1055  081D                     	;# 
  1056  081E                     	;# 
  1057  081F                     	;# 
  1058  088C                     	;# 
  1059  088D                     	;# 
  1060  088E                     	;# 
  1061  088F                     	;# 
  1062  0890                     	;# 
  1063  0891                     	;# 
  1064  0892                     	;# 
  1065  0893                     	;# 
  1066  0895                     	;# 
  1067  0896                     	;# 
  1068  0897                     	;# 
  1069  0898                     	;# 
  1070  0899                     	;# 
  1071  089A                     	;# 
  1072  089B                     	;# 
  1073  090C                     	;# 
  1074  090E                     	;# 
  1075  090F                     	;# 
  1076  091F                     	;# 
  1077  091F                     	;# 
  1078  098F                     	;# 
  1079  098F                     	;# 
  1080  0990                     	;# 
  1081  0991                     	;# 
  1082  0992                     	;# 
  1083  0993                     	;# 
  1084  0994                     	;# 
  1085  0995                     	;# 
  1086  0996                     	;# 
  1087  0997                     	;# 
  1088  0E0F                     	;# 
  1089  0E10                     	;# 
  1090  0E11                     	;# 
  1091  0E12                     	;# 
  1092  0E13                     	;# 
  1093  0E14                     	;# 
  1094  0E15                     	;# 
  1095  0E16                     	;# 
  1096  0E17                     	;# 
  1097  0E18                     	;# 
  1098  0E19                     	;# 
  1099  0E1A                     	;# 
  1100  0E1B                     	;# 
  1101  0E1C                     	;# 
  1102  0E1D                     	;# 
  1103  0E1E                     	;# 
  1104  0E1F                     	;# 
  1105  0E20                     	;# 
  1106  0E21                     	;# 
  1107  0E22                     	;# 
  1108  0E23                     	;# 
  1109  0E24                     	;# 
  1110  0E25                     	;# 
  1111  0E26                     	;# 
  1112  0E27                     	;# 
  1113  0E28                     	;# 
  1114  0E29                     	;# 
  1115  0E2A                     	;# 
  1116  0E2B                     	;# 
  1117  0E2C                     	;# 
  1118  0E2D                     	;# 
  1119  0E2E                     	;# 
  1120  0E2F                     	;# 
  1121  0E30                     	;# 
  1122  0E31                     	;# 
  1123  0E32                     	;# 
  1124  0E33                     	;# 
  1125  0E34                     	;# 
  1126  0E35                     	;# 
  1127  0E36                     	;# 
  1128  0E37                     	;# 
  1129  0E8F                     	;# 
  1130  0E90                     	;# 
  1131  0E91                     	;# 
  1132  0E92                     	;# 
  1133  0E93                     	;# 
  1134  0E94                     	;# 
  1135  0E95                     	;# 
  1136  0E96                     	;# 
  1137  0E97                     	;# 
  1138  0E9C                     	;# 
  1139  0E9D                     	;# 
  1140  0E9E                     	;# 
  1141  0EA1                     	;# 
  1142  0EA2                     	;# 
  1143  0EA3                     	;# 
  1144  0EA4                     	;# 
  1145  0EA5                     	;# 
  1146  0EA9                     	;# 
  1147  0EAA                     	;# 
  1148  0EAB                     	;# 
  1149  0EAC                     	;# 
  1150  0EB1                     	;# 
  1151  0EB2                     	;# 
  1152  0EB3                     	;# 
  1153  0EB8                     	;# 
  1154  0EB9                     	;# 
  1155  0EBA                     	;# 
  1156  0EBB                     	;# 
  1157  0EBC                     	;# 
  1158  0EBD                     	;# 
  1159  0EBE                     	;# 
  1160  0EC3                     	;# 
  1161  0EC5                     	;# 
  1162  0EC6                     	;# 
  1163  0EC7                     	;# 
  1164  0EC8                     	;# 
  1165  0EC9                     	;# 
  1166  0ECA                     	;# 
  1167  0ECB                     	;# 
  1168  0ECC                     	;# 
  1169  0F10                     	;# 
  1170  0F11                     	;# 
  1171  0F12                     	;# 
  1172  0F13                     	;# 
  1173  0F14                     	;# 
  1174  0F15                     	;# 
  1175  0F16                     	;# 
  1176  0F17                     	;# 
  1177  0F18                     	;# 
  1178  0F19                     	;# 
  1179  0F1A                     	;# 
  1180  0F1B                     	;# 
  1181  0F1C                     	;# 
  1182  0F1D                     	;# 
  1183  0F1E                     	;# 
  1184  0F1F                     	;# 
  1185  0F20                     	;# 
  1186  0F21                     	;# 
  1187  0F22                     	;# 
  1188  0F23                     	;# 
  1189  0F24                     	;# 
  1190  0F25                     	;# 
  1191  0F26                     	;# 
  1192  0F27                     	;# 
  1193  0F28                     	;# 
  1194  0F29                     	;# 
  1195  0F2A                     	;# 
  1196  0F2B                     	;# 
  1197  0F2C                     	;# 
  1198  0F2D                     	;# 
  1199  0F2E                     	;# 
  1200  0F2F                     	;# 
  1201  0F30                     	;# 
  1202  0F31                     	;# 
  1203  0F32                     	;# 
  1204  0F38                     	;# 
  1205  0F39                     	;# 
  1206  0F3A                     	;# 
  1207  0F3B                     	;# 
  1208  0F3C                     	;# 
  1209  0F3D                     	;# 
  1210  0F3E                     	;# 
  1211  0F3F                     	;# 
  1212  0F40                     	;# 
  1213  0F41                     	;# 
  1214  0F43                     	;# 
  1215  0F44                     	;# 
  1216  0F45                     	;# 
  1217  0F46                     	;# 
  1218  0F47                     	;# 
  1219  0F48                     	;# 
  1220  0F49                     	;# 
  1221  0F4A                     	;# 
  1222  0F4B                     	;# 
  1223  0F4C                     	;# 
  1224  0F4E                     	;# 
  1225  0F4F                     	;# 
  1226  0F50                     	;# 
  1227  0F51                     	;# 
  1228  0F52                     	;# 
  1229  0F53                     	;# 
  1230  0F54                     	;# 
  1231  0F55                     	;# 
  1232  0F56                     	;# 
  1233  0F57                     	;# 
  1234  0F59                     	;# 
  1235  0F5A                     	;# 
  1236  0F5B                     	;# 
  1237  0F5C                     	;# 
  1238  0F5D                     	;# 
  1239  0F61                     	;# 
  1240  0F62                     	;# 
  1241  0F64                     	;# 
  1242  0F65                     	;# 
  1243  0F66                     	;# 
  1244  0F67                     	;# 
  1245  0F68                     	;# 
  1246  0F69                     	;# 
  1247  0F6A                     	;# 
  1248  0F6B                     	;# 
  1249  0F6C                     	;# 
  1250  0F6D                     	;# 
  1251  0FE4                     	;# 
  1252  0FE5                     	;# 
  1253  0FE6                     	;# 
  1254  0FE7                     	;# 
  1255  0FE8                     	;# 
  1256  0FE9                     	;# 
  1257  0FEA                     	;# 
  1258  0FEB                     	;# 
  1259  0FED                     	;# 
  1260  0FEE                     	;# 
  1261  0FEF                     	;# 
  1262  0000                     	;# 
  1263  0001                     	;# 
  1264  0002                     	;# 
  1265  0003                     	;# 
  1266  0004                     	;# 
  1267  0005                     	;# 
  1268  0006                     	;# 
  1269  0007                     	;# 
  1270  0008                     	;# 
  1271  0009                     	;# 
  1272  000A                     	;# 
  1273  000B                     	;# 
  1274  000C                     	;# 
  1275  000D                     	;# 
  1276  000E                     	;# 
  1277  000F                     	;# 
  1278  0010                     	;# 
  1279  0011                     	;# 
  1280  0012                     	;# 
  1281  0013                     	;# 
  1282  0014                     	;# 
  1283  0015                     	;# 
  1284  0016                     	;# 
  1285  0017                     	;# 
  1286  0018                     	;# 
  1287  0019                     	;# 
  1288  001A                     	;# 
  1289  001C                     	;# 
  1290  001C                     	;# 
  1291  001D                     	;# 
  1292  001D                     	;# 
  1293  001E                     	;# 
  1294  001F                     	;# 
  1295  008C                     	;# 
  1296  008C                     	;# 
  1297  008D                     	;# 
  1298  008E                     	;# 
  1299  008E                     	;# 
  1300  008F                     	;# 
  1301  0090                     	;# 
  1302  0090                     	;# 
  1303  0091                     	;# 
  1304  0093                     	;# 
  1305  0094                     	;# 
  1306  0095                     	;# 
  1307  0096                     	;# 
  1308  0097                     	;# 
  1309  0098                     	;# 
  1310  0099                     	;# 
  1311  009A                     	;# 
  1312  009B                     	;# 
  1313  009C                     	;# 
  1314  009D                     	;# 
  1315  009E                     	;# 
  1316  010C                     	;# 
  1317  010D                     	;# 
  1318  010E                     	;# 
  1319  010E                     	;# 
  1320  010F                     	;# 
  1321  0110                     	;# 
  1322  0110                     	;# 
  1323  0111                     	;# 
  1324  0112                     	;# 
  1325  0112                     	;# 
  1326  0113                     	;# 
  1327  0114                     	;# 
  1328  0114                     	;# 
  1329  0115                     	;# 
  1330  0116                     	;# 
  1331  0116                     	;# 
  1332  0117                     	;# 
  1333  0119                     	;# 
  1334  0119                     	;# 
  1335  0119                     	;# 
  1336  011A                     	;# 
  1337  011A                     	;# 
  1338  011A                     	;# 
  1339  011B                     	;# 
  1340  011B                     	;# 
  1341  011B                     	;# 
  1342  011B                     	;# 
  1343  011B                     	;# 
  1344  011C                     	;# 
  1345  011C                     	;# 
  1346  011C                     	;# 
  1347  011D                     	;# 
  1348  011D                     	;# 
  1349  011D                     	;# 
  1350  011E                     	;# 
  1351  011E                     	;# 
  1352  011E                     	;# 
  1353  011F                     	;# 
  1354  011F                     	;# 
  1355  011F                     	;# 
  1356  011F                     	;# 
  1357  011F                     	;# 
  1358  018C                     	;# 
  1359  018D                     	;# 
  1360  018E                     	;# 
  1361  018F                     	;# 
  1362  0190                     	;# 
  1363  0191                     	;# 
  1364  0192                     	;# 
  1365  0196                     	;# 
  1366  0197                     	;# 
  1367  0198                     	;# 
  1368  0199                     	;# 
  1369  019A                     	;# 
  1370  019B                     	;# 
  1371  019C                     	;# 
  1372  020C                     	;# 
  1373  020C                     	;# 
  1374  020D                     	;# 
  1375  020E                     	;# 
  1376  020F                     	;# 
  1377  020F                     	;# 
  1378  0210                     	;# 
  1379  0210                     	;# 
  1380  0211                     	;# 
  1381  0211                     	;# 
  1382  0212                     	;# 
  1383  0212                     	;# 
  1384  0213                     	;# 
  1385  0214                     	;# 
  1386  0215                     	;# 
  1387  0215                     	;# 
  1388  0216                     	;# 
  1389  0216                     	;# 
  1390  0217                     	;# 
  1391  0217                     	;# 
  1392  0218                     	;# 
  1393  0218                     	;# 
  1394  0219                     	;# 
  1395  021A                     	;# 
  1396  021B                     	;# 
  1397  021B                     	;# 
  1398  021C                     	;# 
  1399  021C                     	;# 
  1400  021D                     	;# 
  1401  021D                     	;# 
  1402  021E                     	;# 
  1403  021F                     	;# 
  1404  028C                     	;# 
  1405  028C                     	;# 
  1406  028D                     	;# 
  1407  028D                     	;# 
  1408  028E                     	;# 
  1409  028F                     	;# 
  1410  0290                     	;# 
  1411  0290                     	;# 
  1412  0291                     	;# 
  1413  0292                     	;# 
  1414  0292                     	;# 
  1415  0293                     	;# 
  1416  0293                     	;# 
  1417  0294                     	;# 
  1418  0295                     	;# 
  1419  0296                     	;# 
  1420  0296                     	;# 
  1421  0297                     	;# 
  1422  0298                     	;# 
  1423  0298                     	;# 
  1424  0299                     	;# 
  1425  0299                     	;# 
  1426  029A                     	;# 
  1427  029B                     	;# 
  1428  029C                     	;# 
  1429  029C                     	;# 
  1430  029D                     	;# 
  1431  030C                     	;# 
  1432  030C                     	;# 
  1433  030D                     	;# 
  1434  030E                     	;# 
  1435  030F                     	;# 
  1436  0310                     	;# 
  1437  0310                     	;# 
  1438  0311                     	;# 
  1439  0312                     	;# 
  1440  0313                     	;# 
  1441  0314                     	;# 
  1442  0314                     	;# 
  1443  0315                     	;# 
  1444  0316                     	;# 
  1445  0317                     	;# 
  1446  0318                     	;# 
  1447  0318                     	;# 
  1448  0319                     	;# 
  1449  031A                     	;# 
  1450  031B                     	;# 
  1451  031C                     	;# 
  1452  031C                     	;# 
  1453  031D                     	;# 
  1454  031E                     	;# 
  1455  031F                     	;# 
  1456  038C                     	;# 
  1457  038C                     	;# 
  1458  038D                     	;# 
  1459  038E                     	;# 
  1460  0390                     	;# 
  1461  0390                     	;# 
  1462  0391                     	;# 
  1463  0392                     	;# 
  1464  040C                     	;# 
  1465  040D                     	;# 
  1466  040E                     	;# 
  1467  040F                     	;# 
  1468  0410                     	;# 
  1469  0411                     	;# 
  1470  0416                     	;# 
  1471  0416                     	;# 
  1472  0417                     	;# 
  1473  0418                     	;# 
  1474  0418                     	;# 
  1475  0419                     	;# 
  1476  041A                     	;# 
  1477  041A                     	;# 
  1478  041B                     	;# 
  1479  041C                     	;# 
  1480  041C                     	;# 
  1481  041D                     	;# 
  1482  041E                     	;# 
  1483  041F                     	;# 
  1484  048C                     	;# 
  1485  048C                     	;# 
  1486  048D                     	;# 
  1487  048E                     	;# 
  1488  048F                     	;# 
  1489  048F                     	;# 
  1490  0490                     	;# 
  1491  0491                     	;# 
  1492  0492                     	;# 
  1493  0492                     	;# 
  1494  0493                     	;# 
  1495  0494                     	;# 
  1496  0495                     	;# 
  1497  0495                     	;# 
  1498  0496                     	;# 
  1499  0497                     	;# 
  1500  0498                     	;# 
  1501  0499                     	;# 
  1502  049A                     	;# 
  1503  049B                     	;# 
  1504  049C                     	;# 
  1505  049D                     	;# 
  1506  050C                     	;# 
  1507  050C                     	;# 
  1508  050D                     	;# 
  1509  050E                     	;# 
  1510  050F                     	;# 
  1511  050F                     	;# 
  1512  0510                     	;# 
  1513  0511                     	;# 
  1514  0512                     	;# 
  1515  0512                     	;# 
  1516  0513                     	;# 
  1517  0514                     	;# 
  1518  0515                     	;# 
  1519  0515                     	;# 
  1520  0516                     	;# 
  1521  0517                     	;# 
  1522  0518                     	;# 
  1523  0519                     	;# 
  1524  051A                     	;# 
  1525  051B                     	;# 
  1526  051C                     	;# 
  1527  051D                     	;# 
  1528  058C                     	;# 
  1529  058C                     	;# 
  1530  058D                     	;# 
  1531  058E                     	;# 
  1532  058F                     	;# 
  1533  058F                     	;# 
  1534  0590                     	;# 
  1535  0591                     	;# 
  1536  0592                     	;# 
  1537  0593                     	;# 
  1538  060C                     	;# 
  1539  060D                     	;# 
  1540  060E                     	;# 
  1541  060F                     	;# 
  1542  0610                     	;# 
  1543  0611                     	;# 
  1544  0612                     	;# 
  1545  0613                     	;# 
  1546  0614                     	;# 
  1547  0616                     	;# 
  1548  0617                     	;# 
  1549  0618                     	;# 
  1550  0619                     	;# 
  1551  061A                     	;# 
  1552  061B                     	;# 
  1553  061C                     	;# 
  1554  061D                     	;# 
  1555  061E                     	;# 
  1556  068C                     	;# 
  1557  068D                     	;# 
  1558  068E                     	;# 
  1559  068F                     	;# 
  1560  0690                     	;# 
  1561  0691                     	;# 
  1562  0692                     	;# 
  1563  0693                     	;# 
  1564  0694                     	;# 
  1565  070C                     	;# 
  1566  070D                     	;# 
  1567  070E                     	;# 
  1568  070F                     	;# 
  1569  0710                     	;# 
  1570  0711                     	;# 
  1571  0712                     	;# 
  1572  0713                     	;# 
  1573  0714                     	;# 
  1574  0716                     	;# 
  1575  0717                     	;# 
  1576  0718                     	;# 
  1577  0719                     	;# 
  1578  071A                     	;# 
  1579  071B                     	;# 
  1580  071C                     	;# 
  1581  071D                     	;# 
  1582  071E                     	;# 
  1583  0796                     	;# 
  1584  0797                     	;# 
  1585  0798                     	;# 
  1586  0799                     	;# 
  1587  079A                     	;# 
  1588  079B                     	;# 
  1589  080C                     	;# 
  1590  080D                     	;# 
  1591  080E                     	;# 
  1592  080F                     	;# 
  1593  0810                     	;# 
  1594  0811                     	;# 
  1595  0812                     	;# 
  1596  0813                     	;# 
  1597  0814                     	;# 
  1598  081A                     	;# 
  1599  081B                     	;# 
  1600  081C                     	;# 
  1601  081D                     	;# 
  1602  081E                     	;# 
  1603  081F                     	;# 
  1604  088C                     	;# 
  1605  088D                     	;# 
  1606  088E                     	;# 
  1607  088F                     	;# 
  1608  0890                     	;# 
  1609  0891                     	;# 
  1610  0892                     	;# 
  1611  0893                     	;# 
  1612  0895                     	;# 
  1613  0896                     	;# 
  1614  0897                     	;# 
  1615  0898                     	;# 
  1616  0899                     	;# 
  1617  089A                     	;# 
  1618  089B                     	;# 
  1619  090C                     	;# 
  1620  090E                     	;# 
  1621  090F                     	;# 
  1622  091F                     	;# 
  1623  091F                     	;# 
  1624  098F                     	;# 
  1625  098F                     	;# 
  1626  0990                     	;# 
  1627  0991                     	;# 
  1628  0992                     	;# 
  1629  0993                     	;# 
  1630  0994                     	;# 
  1631  0995                     	;# 
  1632  0996                     	;# 
  1633  0997                     	;# 
  1634  0E0F                     	;# 
  1635  0E10                     	;# 
  1636  0E11                     	;# 
  1637  0E12                     	;# 
  1638  0E13                     	;# 
  1639  0E14                     	;# 
  1640  0E15                     	;# 
  1641  0E16                     	;# 
  1642  0E17                     	;# 
  1643  0E18                     	;# 
  1644  0E19                     	;# 
  1645  0E1A                     	;# 
  1646  0E1B                     	;# 
  1647  0E1C                     	;# 
  1648  0E1D                     	;# 
  1649  0E1E                     	;# 
  1650  0E1F                     	;# 
  1651  0E20                     	;# 
  1652  0E21                     	;# 
  1653  0E22                     	;# 
  1654  0E23                     	;# 
  1655  0E24                     	;# 
  1656  0E25                     	;# 
  1657  0E26                     	;# 
  1658  0E27                     	;# 
  1659  0E28                     	;# 
  1660  0E29                     	;# 
  1661  0E2A                     	;# 
  1662  0E2B                     	;# 
  1663  0E2C                     	;# 
  1664  0E2D                     	;# 
  1665  0E2E                     	;# 
  1666  0E2F                     	;# 
  1667  0E30                     	;# 
  1668  0E31                     	;# 
  1669  0E32                     	;# 
  1670  0E33                     	;# 
  1671  0E34                     	;# 
  1672  0E35                     	;# 
  1673  0E36                     	;# 
  1674  0E37                     	;# 
  1675  0E8F                     	;# 
  1676  0E90                     	;# 
  1677  0E91                     	;# 
  1678  0E92                     	;# 
  1679  0E93                     	;# 
  1680  0E94                     	;# 
  1681  0E95                     	;# 
  1682  0E96                     	;# 
  1683  0E97                     	;# 
  1684  0E9C                     	;# 
  1685  0E9D                     	;# 
  1686  0E9E                     	;# 
  1687  0EA1                     	;# 
  1688  0EA2                     	;# 
  1689  0EA3                     	;# 
  1690  0EA4                     	;# 
  1691  0EA5                     	;# 
  1692  0EA9                     	;# 
  1693  0EAA                     	;# 
  1694  0EAB                     	;# 
  1695  0EAC                     	;# 
  1696  0EB1                     	;# 
  1697  0EB2                     	;# 
  1698  0EB3                     	;# 
  1699  0EB8                     	;# 
  1700  0EB9                     	;# 
  1701  0EBA                     	;# 
  1702  0EBB                     	;# 
  1703  0EBC                     	;# 
  1704  0EBD                     	;# 
  1705  0EBE                     	;# 
  1706  0EC3                     	;# 
  1707  0EC5                     	;# 
  1708  0EC6                     	;# 
  1709  0EC7                     	;# 
  1710  0EC8                     	;# 
  1711  0EC9                     	;# 
  1712  0ECA                     	;# 
  1713  0ECB                     	;# 
  1714  0ECC                     	;# 
  1715  0F10                     	;# 
  1716  0F11                     	;# 
  1717  0F12                     	;# 
  1718  0F13                     	;# 
  1719  0F14                     	;# 
  1720  0F15                     	;# 
  1721  0F16                     	;# 
  1722  0F17                     	;# 
  1723  0F18                     	;# 
  1724  0F19                     	;# 
  1725  0F1A                     	;# 
  1726  0F1B                     	;# 
  1727  0F1C                     	;# 
  1728  0F1D                     	;# 
  1729  0F1E                     	;# 
  1730  0F1F                     	;# 
  1731  0F20                     	;# 
  1732  0F21                     	;# 
  1733  0F22                     	;# 
  1734  0F23                     	;# 
  1735  0F24                     	;# 
  1736  0F25                     	;# 
  1737  0F26                     	;# 
  1738  0F27                     	;# 
  1739  0F28                     	;# 
  1740  0F29                     	;# 
  1741  0F2A                     	;# 
  1742  0F2B                     	;# 
  1743  0F2C                     	;# 
  1744  0F2D                     	;# 
  1745  0F2E                     	;# 
  1746  0F2F                     	;# 
  1747  0F30                     	;# 
  1748  0F31                     	;# 
  1749  0F32                     	;# 
  1750  0F38                     	;# 
  1751  0F39                     	;# 
  1752  0F3A                     	;# 
  1753  0F3B                     	;# 
  1754  0F3C                     	;# 
  1755  0F3D                     	;# 
  1756  0F3E                     	;# 
  1757  0F3F                     	;# 
  1758  0F40                     	;# 
  1759  0F41                     	;# 
  1760  0F43                     	;# 
  1761  0F44                     	;# 
  1762  0F45                     	;# 
  1763  0F46                     	;# 
  1764  0F47                     	;# 
  1765  0F48                     	;# 
  1766  0F49                     	;# 
  1767  0F4A                     	;# 
  1768  0F4B                     	;# 
  1769  0F4C                     	;# 
  1770  0F4E                     	;# 
  1771  0F4F                     	;# 
  1772  0F50                     	;# 
  1773  0F51                     	;# 
  1774  0F52                     	;# 
  1775  0F53                     	;# 
  1776  0F54                     	;# 
  1777  0F55                     	;# 
  1778  0F56                     	;# 
  1779  0F57                     	;# 
  1780  0F59                     	;# 
  1781  0F5A                     	;# 
  1782  0F5B                     	;# 
  1783  0F5C                     	;# 
  1784  0F5D                     	;# 
  1785  0F61                     	;# 
  1786  0F62                     	;# 
  1787  0F64                     	;# 
  1788  0F65                     	;# 
  1789  0F66                     	;# 
  1790  0F67                     	;# 
  1791  0F68                     	;# 
  1792  0F69                     	;# 
  1793  0F6A                     	;# 
  1794  0F6B                     	;# 
  1795  0F6C                     	;# 
  1796  0F6D                     	;# 
  1797  0FE4                     	;# 
  1798  0FE5                     	;# 
  1799  0FE6                     	;# 
  1800  0FE7                     	;# 
  1801  0FE8                     	;# 
  1802  0FE9                     	;# 
  1803  0FEA                     	;# 
  1804  0FEB                     	;# 
  1805  0FED                     	;# 
  1806  0FEE                     	;# 
  1807  0FEF                     	;# 
  1808  0000                     	;# 
  1809  0001                     	;# 
  1810  0002                     	;# 
  1811  0003                     	;# 
  1812  0004                     	;# 
  1813  0005                     	;# 
  1814  0006                     	;# 
  1815  0007                     	;# 
  1816  0008                     	;# 
  1817  0009                     	;# 
  1818  000A                     	;# 
  1819  000B                     	;# 
  1820  000C                     	;# 
  1821  000D                     	;# 
  1822  000E                     	;# 
  1823  000F                     	;# 
  1824  0010                     	;# 
  1825  0011                     	;# 
  1826  0012                     	;# 
  1827  0013                     	;# 
  1828  0014                     	;# 
  1829  0015                     	;# 
  1830  0016                     	;# 
  1831  0017                     	;# 
  1832  0018                     	;# 
  1833  0019                     	;# 
  1834  001A                     	;# 
  1835  001C                     	;# 
  1836  001C                     	;# 
  1837  001D                     	;# 
  1838  001D                     	;# 
  1839  001E                     	;# 
  1840  001F                     	;# 
  1841  008C                     	;# 
  1842  008C                     	;# 
  1843  008D                     	;# 
  1844  008E                     	;# 
  1845  008E                     	;# 
  1846  008F                     	;# 
  1847  0090                     	;# 
  1848  0090                     	;# 
  1849  0091                     	;# 
  1850  0093                     	;# 
  1851  0094                     	;# 
  1852  0095                     	;# 
  1853  0096                     	;# 
  1854  0097                     	;# 
  1855  0098                     	;# 
  1856  0099                     	;# 
  1857  009A                     	;# 
  1858  009B                     	;# 
  1859  009C                     	;# 
  1860  009D                     	;# 
  1861  009E                     	;# 
  1862  010C                     	;# 
  1863  010D                     	;# 
  1864  010E                     	;# 
  1865  010E                     	;# 
  1866  010F                     	;# 
  1867  0110                     	;# 
  1868  0110                     	;# 
  1869  0111                     	;# 
  1870  0112                     	;# 
  1871  0112                     	;# 
  1872  0113                     	;# 
  1873  0114                     	;# 
  1874  0114                     	;# 
  1875  0115                     	;# 
  1876  0116                     	;# 
  1877  0116                     	;# 
  1878  0117                     	;# 
  1879  0119                     	;# 
  1880  0119                     	;# 
  1881  0119                     	;# 
  1882  011A                     	;# 
  1883  011A                     	;# 
  1884  011A                     	;# 
  1885  011B                     	;# 
  1886  011B                     	;# 
  1887  011B                     	;# 
  1888  011B                     	;# 
  1889  011B                     	;# 
  1890  011C                     	;# 
  1891  011C                     	;# 
  1892  011C                     	;# 
  1893  011D                     	;# 
  1894  011D                     	;# 
  1895  011D                     	;# 
  1896  011E                     	;# 
  1897  011E                     	;# 
  1898  011E                     	;# 
  1899  011F                     	;# 
  1900  011F                     	;# 
  1901  011F                     	;# 
  1902  011F                     	;# 
  1903  011F                     	;# 
  1904  018C                     	;# 
  1905  018D                     	;# 
  1906  018E                     	;# 
  1907  018F                     	;# 
  1908  0190                     	;# 
  1909  0191                     	;# 
  1910  0192                     	;# 
  1911  0196                     	;# 
  1912  0197                     	;# 
  1913  0198                     	;# 
  1914  0199                     	;# 
  1915  019A                     	;# 
  1916  019B                     	;# 
  1917  019C                     	;# 
  1918  020C                     	;# 
  1919  020C                     	;# 
  1920  020D                     	;# 
  1921  020E                     	;# 
  1922  020F                     	;# 
  1923  020F                     	;# 
  1924  0210                     	;# 
  1925  0210                     	;# 
  1926  0211                     	;# 
  1927  0211                     	;# 
  1928  0212                     	;# 
  1929  0212                     	;# 
  1930  0213                     	;# 
  1931  0214                     	;# 
  1932  0215                     	;# 
  1933  0215                     	;# 
  1934  0216                     	;# 
  1935  0216                     	;# 
  1936  0217                     	;# 
  1937  0217                     	;# 
  1938  0218                     	;# 
  1939  0218                     	;# 
  1940  0219                     	;# 
  1941  021A                     	;# 
  1942  021B                     	;# 
  1943  021B                     	;# 
  1944  021C                     	;# 
  1945  021C                     	;# 
  1946  021D                     	;# 
  1947  021D                     	;# 
  1948  021E                     	;# 
  1949  021F                     	;# 
  1950  028C                     	;# 
  1951  028C                     	;# 
  1952  028D                     	;# 
  1953  028D                     	;# 
  1954  028E                     	;# 
  1955  028F                     	;# 
  1956  0290                     	;# 
  1957  0290                     	;# 
  1958  0291                     	;# 
  1959  0292                     	;# 
  1960  0292                     	;# 
  1961  0293                     	;# 
  1962  0293                     	;# 
  1963  0294                     	;# 
  1964  0295                     	;# 
  1965  0296                     	;# 
  1966  0296                     	;# 
  1967  0297                     	;# 
  1968  0298                     	;# 
  1969  0298                     	;# 
  1970  0299                     	;# 
  1971  0299                     	;# 
  1972  029A                     	;# 
  1973  029B                     	;# 
  1974  029C                     	;# 
  1975  029C                     	;# 
  1976  029D                     	;# 
  1977  030C                     	;# 
  1978  030C                     	;# 
  1979  030D                     	;# 
  1980  030E                     	;# 
  1981  030F                     	;# 
  1982  0310                     	;# 
  1983  0310                     	;# 
  1984  0311                     	;# 
  1985  0312                     	;# 
  1986  0313                     	;# 
  1987  0314                     	;# 
  1988  0314                     	;# 
  1989  0315                     	;# 
  1990  0316                     	;# 
  1991  0317                     	;# 
  1992  0318                     	;# 
  1993  0318                     	;# 
  1994  0319                     	;# 
  1995  031A                     	;# 
  1996  031B                     	;# 
  1997  031C                     	;# 
  1998  031C                     	;# 
  1999  031D                     	;# 
  2000  031E                     	;# 
  2001  031F                     	;# 
  2002  038C                     	;# 
  2003  038C                     	;# 
  2004  038D                     	;# 
  2005  038E                     	;# 
  2006  0390                     	;# 
  2007  0390                     	;# 
  2008  0391                     	;# 
  2009  0392                     	;# 
  2010  040C                     	;# 
  2011  040D                     	;# 
  2012  040E                     	;# 
  2013  040F                     	;# 
  2014  0410                     	;# 
  2015  0411                     	;# 
  2016  0416                     	;# 
  2017  0416                     	;# 
  2018  0417                     	;# 
  2019  0418                     	;# 
  2020  0418                     	;# 
  2021  0419                     	;# 
  2022  041A                     	;# 
  2023  041A                     	;# 
  2024  041B                     	;# 
  2025  041C                     	;# 
  2026  041C                     	;# 
  2027  041D                     	;# 
  2028  041E                     	;# 
  2029  041F                     	;# 
  2030  048C                     	;# 
  2031  048C                     	;# 
  2032  048D                     	;# 
  2033  048E                     	;# 
  2034  048F                     	;# 
  2035  048F                     	;# 
  2036  0490                     	;# 
  2037  0491                     	;# 
  2038  0492                     	;# 
  2039  0492                     	;# 
  2040  0493                     	;# 
  2041  0494                     	;# 
  2042  0495                     	;# 
  2043  0495                     	;# 
  2044  0496                     	;# 
  2045  0497                     	;# 
  2046  0498                     	;# 
  2047  0499                     	;# 
  2048  049A                     	;# 
  2049  049B                     	;# 
  2050  049C                     	;# 
  2051  049D                     	;# 
  2052  050C                     	;# 
  2053  050C                     	;# 
  2054  050D                     	;# 
  2055  050E                     	;# 
  2056  050F                     	;# 
  2057  050F                     	;# 
  2058  0510                     	;# 
  2059  0511                     	;# 
  2060  0512                     	;# 
  2061  0512                     	;# 
  2062  0513                     	;# 
  2063  0514                     	;# 
  2064  0515                     	;# 
  2065  0515                     	;# 
  2066  0516                     	;# 
  2067  0517                     	;# 
  2068  0518                     	;# 
  2069  0519                     	;# 
  2070  051A                     	;# 
  2071  051B                     	;# 
  2072  051C                     	;# 
  2073  051D                     	;# 
  2074  058C                     	;# 
  2075  058C                     	;# 
  2076  058D                     	;# 
  2077  058E                     	;# 
  2078  058F                     	;# 
  2079  058F                     	;# 
  2080  0590                     	;# 
  2081  0591                     	;# 
  2082  0592                     	;# 
  2083  0593                     	;# 
  2084  060C                     	;# 
  2085  060D                     	;# 
  2086  060E                     	;# 
  2087  060F                     	;# 
  2088  0610                     	;# 
  2089  0611                     	;# 
  2090  0612                     	;# 
  2091  0613                     	;# 
  2092  0614                     	;# 
  2093  0616                     	;# 
  2094  0617                     	;# 
  2095  0618                     	;# 
  2096  0619                     	;# 
  2097  061A                     	;# 
  2098  061B                     	;# 
  2099  061C                     	;# 
  2100  061D                     	;# 
  2101  061E                     	;# 
  2102  068C                     	;# 
  2103  068D                     	;# 
  2104  068E                     	;# 
  2105  068F                     	;# 
  2106  0690                     	;# 
  2107  0691                     	;# 
  2108  0692                     	;# 
  2109  0693                     	;# 
  2110  0694                     	;# 
  2111  070C                     	;# 
  2112  070D                     	;# 
  2113  070E                     	;# 
  2114  070F                     	;# 
  2115  0710                     	;# 
  2116  0711                     	;# 
  2117  0712                     	;# 
  2118  0713                     	;# 
  2119  0714                     	;# 
  2120  0716                     	;# 
  2121  0717                     	;# 
  2122  0718                     	;# 
  2123  0719                     	;# 
  2124  071A                     	;# 
  2125  071B                     	;# 
  2126  071C                     	;# 
  2127  071D                     	;# 
  2128  071E                     	;# 
  2129  0796                     	;# 
  2130  0797                     	;# 
  2131  0798                     	;# 
  2132  0799                     	;# 
  2133  079A                     	;# 
  2134  079B                     	;# 
  2135  080C                     	;# 
  2136  080D                     	;# 
  2137  080E                     	;# 
  2138  080F                     	;# 
  2139  0810                     	;# 
  2140  0811                     	;# 
  2141  0812                     	;# 
  2142  0813                     	;# 
  2143  0814                     	;# 
  2144  081A                     	;# 
  2145  081B                     	;# 
  2146  081C                     	;# 
  2147  081D                     	;# 
  2148  081E                     	;# 
  2149  081F                     	;# 
  2150  088C                     	;# 
  2151  088D                     	;# 
  2152  088E                     	;# 
  2153  088F                     	;# 
  2154  0890                     	;# 
  2155  0891                     	;# 
  2156  0892                     	;# 
  2157  0893                     	;# 
  2158  0895                     	;# 
  2159  0896                     	;# 
  2160  0897                     	;# 
  2161  0898                     	;# 
  2162  0899                     	;# 
  2163  089A                     	;# 
  2164  089B                     	;# 
  2165  090C                     	;# 
  2166  090E                     	;# 
  2167  090F                     	;# 
  2168  091F                     	;# 
  2169  091F                     	;# 
  2170  098F                     	;# 
  2171  098F                     	;# 
  2172  0990                     	;# 
  2173  0991                     	;# 
  2174  0992                     	;# 
  2175  0993                     	;# 
  2176  0994                     	;# 
  2177  0995                     	;# 
  2178  0996                     	;# 
  2179  0997                     	;# 
  2180  0E0F                     	;# 
  2181  0E10                     	;# 
  2182  0E11                     	;# 
  2183  0E12                     	;# 
  2184  0E13                     	;# 
  2185  0E14                     	;# 
  2186  0E15                     	;# 
  2187  0E16                     	;# 
  2188  0E17                     	;# 
  2189  0E18                     	;# 
  2190  0E19                     	;# 
  2191  0E1A                     	;# 
  2192  0E1B                     	;# 
  2193  0E1C                     	;# 
  2194  0E1D                     	;# 
  2195  0E1E                     	;# 
  2196  0E1F                     	;# 
  2197  0E20                     	;# 
  2198  0E21                     	;# 
  2199  0E22                     	;# 
  2200  0E23                     	;# 
  2201  0E24                     	;# 
  2202  0E25                     	;# 
  2203  0E26                     	;# 
  2204  0E27                     	;# 
  2205  0E28                     	;# 
  2206  0E29                     	;# 
  2207  0E2A                     	;# 
  2208  0E2B                     	;# 
  2209  0E2C                     	;# 
  2210  0E2D                     	;# 
  2211  0E2E                     	;# 
  2212  0E2F                     	;# 
  2213  0E30                     	;# 
  2214  0E31                     	;# 
  2215  0E32                     	;# 
  2216  0E33                     	;# 
  2217  0E34                     	;# 
  2218  0E35                     	;# 
  2219  0E36                     	;# 
  2220  0E37                     	;# 
  2221  0E8F                     	;# 
  2222  0E90                     	;# 
  2223  0E91                     	;# 
  2224  0E92                     	;# 
  2225  0E93                     	;# 
  2226  0E94                     	;# 
  2227  0E95                     	;# 
  2228  0E96                     	;# 
  2229  0E97                     	;# 
  2230  0E9C                     	;# 
  2231  0E9D                     	;# 
  2232  0E9E                     	;# 
  2233  0EA1                     	;# 
  2234  0EA2                     	;# 
  2235  0EA3                     	;# 
  2236  0EA4                     	;# 
  2237  0EA5                     	;# 
  2238  0EA9                     	;# 
  2239  0EAA                     	;# 
  2240  0EAB                     	;# 
  2241  0EAC                     	;# 
  2242  0EB1                     	;# 
  2243  0EB2                     	;# 
  2244  0EB3                     	;# 
  2245  0EB8                     	;# 
  2246  0EB9                     	;# 
  2247  0EBA                     	;# 
  2248  0EBB                     	;# 
  2249  0EBC                     	;# 
  2250  0EBD                     	;# 
  2251  0EBE                     	;# 
  2252  0EC3                     	;# 
  2253  0EC5                     	;# 
  2254  0EC6                     	;# 
  2255  0EC7                     	;# 
  2256  0EC8                     	;# 
  2257  0EC9                     	;# 
  2258  0ECA                     	;# 
  2259  0ECB                     	;# 
  2260  0ECC                     	;# 
  2261  0F10                     	;# 
  2262  0F11                     	;# 
  2263  0F12                     	;# 
  2264  0F13                     	;# 
  2265  0F14                     	;# 
  2266  0F15                     	;# 
  2267  0F16                     	;# 
  2268  0F17                     	;# 
  2269  0F18                     	;# 
  2270  0F19                     	;# 
  2271  0F1A                     	;# 
  2272  0F1B                     	;# 
  2273  0F1C                     	;# 
  2274  0F1D                     	;# 
  2275  0F1E                     	;# 
  2276  0F1F                     	;# 
  2277  0F20                     	;# 
  2278  0F21                     	;# 
  2279  0F22                     	;# 
  2280  0F23                     	;# 
  2281  0F24                     	;# 
  2282  0F25                     	;# 
  2283  0F26                     	;# 
  2284  0F27                     	;# 
  2285  0F28                     	;# 
  2286  0F29                     	;# 
  2287  0F2A                     	;# 
  2288  0F2B                     	;# 
  2289  0F2C                     	;# 
  2290  0F2D                     	;# 
  2291  0F2E                     	;# 
  2292  0F2F                     	;# 
  2293  0F30                     	;# 
  2294  0F31                     	;# 
  2295  0F32                     	;# 
  2296  0F38                     	;# 
  2297  0F39                     	;# 
  2298  0F3A                     	;# 
  2299  0F3B                     	;# 
  2300  0F3C                     	;# 
  2301  0F3D                     	;# 
  2302  0F3E                     	;# 
  2303  0F3F                     	;# 
  2304  0F40                     	;# 
  2305  0F41                     	;# 
  2306  0F43                     	;# 
  2307  0F44                     	;# 
  2308  0F45                     	;# 
  2309  0F46                     	;# 
  2310  0F47                     	;# 
  2311  0F48                     	;# 
  2312  0F49                     	;# 
  2313  0F4A                     	;# 
  2314  0F4B                     	;# 
  2315  0F4C                     	;# 
  2316  0F4E                     	;# 
  2317  0F4F                     	;# 
  2318  0F50                     	;# 
  2319  0F51                     	;# 
  2320  0F52                     	;# 
  2321  0F53                     	;# 
  2322  0F54                     	;# 
  2323  0F55                     	;# 
  2324  0F56                     	;# 
  2325  0F57                     	;# 
  2326  0F59                     	;# 
  2327  0F5A                     	;# 
  2328  0F5B                     	;# 
  2329  0F5C                     	;# 
  2330  0F5D                     	;# 
  2331  0F61                     	;# 
  2332  0F62                     	;# 
  2333  0F64                     	;# 
  2334  0F65                     	;# 
  2335  0F66                     	;# 
  2336  0F67                     	;# 
  2337  0F68                     	;# 
  2338  0F69                     	;# 
  2339  0F6A                     	;# 
  2340  0F6B                     	;# 
  2341  0F6C                     	;# 
  2342  0F6D                     	;# 
  2343  0FE4                     	;# 
  2344  0FE5                     	;# 
  2345  0FE6                     	;# 
  2346  0FE7                     	;# 
  2347  0FE8                     	;# 
  2348  0FE9                     	;# 
  2349  0FEA                     	;# 
  2350  0FEB                     	;# 
  2351  0FED                     	;# 
  2352  0FEE                     	;# 
  2353  0FEF                     	;# 
  2354  0000                     	;# 
  2355  0001                     	;# 
  2356  0002                     	;# 
  2357  0003                     	;# 
  2358  0004                     	;# 
  2359  0005                     	;# 
  2360  0006                     	;# 
  2361  0007                     	;# 
  2362  0008                     	;# 
  2363  0009                     	;# 
  2364  000A                     	;# 
  2365  000B                     	;# 
  2366  000C                     	;# 
  2367  000D                     	;# 
  2368  000E                     	;# 
  2369  000F                     	;# 
  2370  0010                     	;# 
  2371  0011                     	;# 
  2372  0012                     	;# 
  2373  0013                     	;# 
  2374  0014                     	;# 
  2375  0015                     	;# 
  2376  0016                     	;# 
  2377  0017                     	;# 
  2378  0018                     	;# 
  2379  0019                     	;# 
  2380  001A                     	;# 
  2381  001C                     	;# 
  2382  001C                     	;# 
  2383  001D                     	;# 
  2384  001D                     	;# 
  2385  001E                     	;# 
  2386  001F                     	;# 
  2387  008C                     	;# 
  2388  008C                     	;# 
  2389  008D                     	;# 
  2390  008E                     	;# 
  2391  008E                     	;# 
  2392  008F                     	;# 
  2393  0090                     	;# 
  2394  0090                     	;# 
  2395  0091                     	;# 
  2396  0093                     	;# 
  2397  0094                     	;# 
  2398  0095                     	;# 
  2399  0096                     	;# 
  2400  0097                     	;# 
  2401  0098                     	;# 
  2402  0099                     	;# 
  2403  009A                     	;# 
  2404  009B                     	;# 
  2405  009C                     	;# 
  2406  009D                     	;# 
  2407  009E                     	;# 
  2408  010C                     	;# 
  2409  010D                     	;# 
  2410  010E                     	;# 
  2411  010E                     	;# 
  2412  010F                     	;# 
  2413  0110                     	;# 
  2414  0110                     	;# 
  2415  0111                     	;# 
  2416  0112                     	;# 
  2417  0112                     	;# 
  2418  0113                     	;# 
  2419  0114                     	;# 
  2420  0114                     	;# 
  2421  0115                     	;# 
  2422  0116                     	;# 
  2423  0116                     	;# 
  2424  0117                     	;# 
  2425  0119                     	;# 
  2426  0119                     	;# 
  2427  0119                     	;# 
  2428  011A                     	;# 
  2429  011A                     	;# 
  2430  011A                     	;# 
  2431  011B                     	;# 
  2432  011B                     	;# 
  2433  011B                     	;# 
  2434  011B                     	;# 
  2435  011B                     	;# 
  2436  011C                     	;# 
  2437  011C                     	;# 
  2438  011C                     	;# 
  2439  011D                     	;# 
  2440  011D                     	;# 
  2441  011D                     	;# 
  2442  011E                     	;# 
  2443  011E                     	;# 
  2444  011E                     	;# 
  2445  011F                     	;# 
  2446  011F                     	;# 
  2447  011F                     	;# 
  2448  011F                     	;# 
  2449  011F                     	;# 
  2450  018C                     	;# 
  2451  018D                     	;# 
  2452  018E                     	;# 
  2453  018F                     	;# 
  2454  0190                     	;# 
  2455  0191                     	;# 
  2456  0192                     	;# 
  2457  0196                     	;# 
  2458  0197                     	;# 
  2459  0198                     	;# 
  2460  0199                     	;# 
  2461  019A                     	;# 
  2462  019B                     	;# 
  2463  019C                     	;# 
  2464  020C                     	;# 
  2465  020C                     	;# 
  2466  020D                     	;# 
  2467  020E                     	;# 
  2468  020F                     	;# 
  2469  020F                     	;# 
  2470  0210                     	;# 
  2471  0210                     	;# 
  2472  0211                     	;# 
  2473  0211                     	;# 
  2474  0212                     	;# 
  2475  0212                     	;# 
  2476  0213                     	;# 
  2477  0214                     	;# 
  2478  0215                     	;# 
  2479  0215                     	;# 
  2480  0216                     	;# 
  2481  0216                     	;# 
  2482  0217                     	;# 
  2483  0217                     	;# 
  2484  0218                     	;# 
  2485  0218                     	;# 
  2486  0219                     	;# 
  2487  021A                     	;# 
  2488  021B                     	;# 
  2489  021B                     	;# 
  2490  021C                     	;# 
  2491  021C                     	;# 
  2492  021D                     	;# 
  2493  021D                     	;# 
  2494  021E                     	;# 
  2495  021F                     	;# 
  2496  028C                     	;# 
  2497  028C                     	;# 
  2498  028D                     	;# 
  2499  028D                     	;# 
  2500  028E                     	;# 
  2501  028F                     	;# 
  2502  0290                     	;# 
  2503  0290                     	;# 
  2504  0291                     	;# 
  2505  0292                     	;# 
  2506  0292                     	;# 
  2507  0293                     	;# 
  2508  0293                     	;# 
  2509  0294                     	;# 
  2510  0295                     	;# 
  2511  0296                     	;# 
  2512  0296                     	;# 
  2513  0297                     	;# 
  2514  0298                     	;# 
  2515  0298                     	;# 
  2516  0299                     	;# 
  2517  0299                     	;# 
  2518  029A                     	;# 
  2519  029B                     	;# 
  2520  029C                     	;# 
  2521  029C                     	;# 
  2522  029D                     	;# 
  2523  030C                     	;# 
  2524  030C                     	;# 
  2525  030D                     	;# 
  2526  030E                     	;# 
  2527  030F                     	;# 
  2528  0310                     	;# 
  2529  0310                     	;# 
  2530  0311                     	;# 
  2531  0312                     	;# 
  2532  0313                     	;# 
  2533  0314                     	;# 
  2534  0314                     	;# 
  2535  0315                     	;# 
  2536  0316                     	;# 
  2537  0317                     	;# 
  2538  0318                     	;# 
  2539  0318                     	;# 
  2540  0319                     	;# 
  2541  031A                     	;# 
  2542  031B                     	;# 
  2543  031C                     	;# 
  2544  031C                     	;# 
  2545  031D                     	;# 
  2546  031E                     	;# 
  2547  031F                     	;# 
  2548  038C                     	;# 
  2549  038C                     	;# 
  2550  038D                     	;# 
  2551  038E                     	;# 
  2552  0390                     	;# 
  2553  0390                     	;# 
  2554  0391                     	;# 
  2555  0392                     	;# 
  2556  040C                     	;# 
  2557  040D                     	;# 
  2558  040E                     	;# 
  2559  040F                     	;# 
  2560  0410                     	;# 
  2561  0411                     	;# 
  2562  0416                     	;# 
  2563  0416                     	;# 
  2564  0417                     	;# 
  2565  0418                     	;# 
  2566  0418                     	;# 
  2567  0419                     	;# 
  2568  041A                     	;# 
  2569  041A                     	;# 
  2570  041B                     	;# 
  2571  041C                     	;# 
  2572  041C                     	;# 
  2573  041D                     	;# 
  2574  041E                     	;# 
  2575  041F                     	;# 
  2576  048C                     	;# 
  2577  048C                     	;# 
  2578  048D                     	;# 
  2579  048E                     	;# 
  2580  048F                     	;# 
  2581  048F                     	;# 
  2582  0490                     	;# 
  2583  0491                     	;# 
  2584  0492                     	;# 
  2585  0492                     	;# 
  2586  0493                     	;# 
  2587  0494                     	;# 
  2588  0495                     	;# 
  2589  0495                     	;# 
  2590  0496                     	;# 
  2591  0497                     	;# 
  2592  0498                     	;# 
  2593  0499                     	;# 
  2594  049A                     	;# 
  2595  049B                     	;# 
  2596  049C                     	;# 
  2597  049D                     	;# 
  2598  050C                     	;# 
  2599  050C                     	;# 
  2600  050D                     	;# 
  2601  050E                     	;# 
  2602  050F                     	;# 
  2603  050F                     	;# 
  2604  0510                     	;# 
  2605  0511                     	;# 
  2606  0512                     	;# 
  2607  0512                     	;# 
  2608  0513                     	;# 
  2609  0514                     	;# 
  2610  0515                     	;# 
  2611  0515                     	;# 
  2612  0516                     	;# 
  2613  0517                     	;# 
  2614  0518                     	;# 
  2615  0519                     	;# 
  2616  051A                     	;# 
  2617  051B                     	;# 
  2618  051C                     	;# 
  2619  051D                     	;# 
  2620  058C                     	;# 
  2621  058C                     	;# 
  2622  058D                     	;# 
  2623  058E                     	;# 
  2624  058F                     	;# 
  2625  058F                     	;# 
  2626  0590                     	;# 
  2627  0591                     	;# 
  2628  0592                     	;# 
  2629  0593                     	;# 
  2630  060C                     	;# 
  2631  060D                     	;# 
  2632  060E                     	;# 
  2633  060F                     	;# 
  2634  0610                     	;# 
  2635  0611                     	;# 
  2636  0612                     	;# 
  2637  0613                     	;# 
  2638  0614                     	;# 
  2639  0616                     	;# 
  2640  0617                     	;# 
  2641  0618                     	;# 
  2642  0619                     	;# 
  2643  061A                     	;# 
  2644  061B                     	;# 
  2645  061C                     	;# 
  2646  061D                     	;# 
  2647  061E                     	;# 
  2648  068C                     	;# 
  2649  068D                     	;# 
  2650  068E                     	;# 
  2651  068F                     	;# 
  2652  0690                     	;# 
  2653  0691                     	;# 
  2654  0692                     	;# 
  2655  0693                     	;# 
  2656  0694                     	;# 
  2657  070C                     	;# 
  2658  070D                     	;# 
  2659  070E                     	;# 
  2660  070F                     	;# 
  2661  0710                     	;# 
  2662  0711                     	;# 
  2663  0712                     	;# 
  2664  0713                     	;# 
  2665  0714                     	;# 
  2666  0716                     	;# 
  2667  0717                     	;# 
  2668  0718                     	;# 
  2669  0719                     	;# 
  2670  071A                     	;# 
  2671  071B                     	;# 
  2672  071C                     	;# 
  2673  071D                     	;# 
  2674  071E                     	;# 
  2675  0796                     	;# 
  2676  0797                     	;# 
  2677  0798                     	;# 
  2678  0799                     	;# 
  2679  079A                     	;# 
  2680  079B                     	;# 
  2681  080C                     	;# 
  2682  080D                     	;# 
  2683  080E                     	;# 
  2684  080F                     	;# 
  2685  0810                     	;# 
  2686  0811                     	;# 
  2687  0812                     	;# 
  2688  0813                     	;# 
  2689  0814                     	;# 
  2690  081A                     	;# 
  2691  081B                     	;# 
  2692  081C                     	;# 
  2693  081D                     	;# 
  2694  081E                     	;# 
  2695  081F                     	;# 
  2696  088C                     	;# 
  2697  088D                     	;# 
  2698  088E                     	;# 
  2699  088F                     	;# 
  2700  0890                     	;# 
  2701  0891                     	;# 
  2702  0892                     	;# 
  2703  0893                     	;# 
  2704  0895                     	;# 
  2705  0896                     	;# 
  2706  0897                     	;# 
  2707  0898                     	;# 
  2708  0899                     	;# 
  2709  089A                     	;# 
  2710  089B                     	;# 
  2711  090C                     	;# 
  2712  090E                     	;# 
  2713  090F                     	;# 
  2714  091F                     	;# 
  2715  091F                     	;# 
  2716  098F                     	;# 
  2717  098F                     	;# 
  2718  0990                     	;# 
  2719  0991                     	;# 
  2720  0992                     	;# 
  2721  0993                     	;# 
  2722  0994                     	;# 
  2723  0995                     	;# 
  2724  0996                     	;# 
  2725  0997                     	;# 
  2726  0E0F                     	;# 
  2727  0E10                     	;# 
  2728  0E11                     	;# 
  2729  0E12                     	;# 
  2730  0E13                     	;# 
  2731  0E14                     	;# 
  2732  0E15                     	;# 
  2733  0E16                     	;# 
  2734  0E17                     	;# 
  2735  0E18                     	;# 
  2736  0E19                     	;# 
  2737  0E1A                     	;# 
  2738  0E1B                     	;# 
  2739  0E1C                     	;# 
  2740  0E1D                     	;# 
  2741  0E1E                     	;# 
  2742  0E1F                     	;# 
  2743  0E20                     	;# 
  2744  0E21                     	;# 
  2745  0E22                     	;# 
  2746  0E23                     	;# 
  2747  0E24                     	;# 
  2748  0E25                     	;# 
  2749  0E26                     	;# 
  2750  0E27                     	;# 
  2751  0E28                     	;# 
  2752  0E29                     	;# 
  2753  0E2A                     	;# 
  2754  0E2B                     	;# 
  2755  0E2C                     	;# 
  2756  0E2D                     	;# 
  2757  0E2E                     	;# 
  2758  0E2F                     	;# 
  2759  0E30                     	;# 
  2760  0E31                     	;# 
  2761  0E32                     	;# 
  2762  0E33                     	;# 
  2763  0E34                     	;# 
  2764  0E35                     	;# 
  2765  0E36                     	;# 
  2766  0E37                     	;# 
  2767  0E8F                     	;# 
  2768  0E90                     	;# 
  2769  0E91                     	;# 
  2770  0E92                     	;# 
  2771  0E93                     	;# 
  2772  0E94                     	;# 
  2773  0E95                     	;# 
  2774  0E96                     	;# 
  2775  0E97                     	;# 
  2776  0E9C                     	;# 
  2777  0E9D                     	;# 
  2778  0E9E                     	;# 
  2779  0EA1                     	;# 
  2780  0EA2                     	;# 
  2781  0EA3                     	;# 
  2782  0EA4                     	;# 
  2783  0EA5                     	;# 
  2784  0EA9                     	;# 
  2785  0EAA                     	;# 
  2786  0EAB                     	;# 
  2787  0EAC                     	;# 
  2788  0EB1                     	;# 
  2789  0EB2                     	;# 
  2790  0EB3                     	;# 
  2791  0EB8                     	;# 
  2792  0EB9                     	;# 
  2793  0EBA                     	;# 
  2794  0EBB                     	;# 
  2795  0EBC                     	;# 
  2796  0EBD                     	;# 
  2797  0EBE                     	;# 
  2798  0EC3                     	;# 
  2799  0EC5                     	;# 
  2800  0EC6                     	;# 
  2801  0EC7                     	;# 
  2802  0EC8                     	;# 
  2803  0EC9                     	;# 
  2804  0ECA                     	;# 
  2805  0ECB                     	;# 
  2806  0ECC                     	;# 
  2807  0F10                     	;# 
  2808  0F11                     	;# 
  2809  0F12                     	;# 
  2810  0F13                     	;# 
  2811  0F14                     	;# 
  2812  0F15                     	;# 
  2813  0F16                     	;# 
  2814  0F17                     	;# 
  2815  0F18                     	;# 
  2816  0F19                     	;# 
  2817  0F1A                     	;# 
  2818  0F1B                     	;# 
  2819  0F1C                     	;# 
  2820  0F1D                     	;# 
  2821  0F1E                     	;# 
  2822  0F1F                     	;# 
  2823  0F20                     	;# 
  2824  0F21                     	;# 
  2825  0F22                     	;# 
  2826  0F23                     	;# 
  2827  0F24                     	;# 
  2828  0F25                     	;# 
  2829  0F26                     	;# 
  2830  0F27                     	;# 
  2831  0F28                     	;# 
  2832  0F29                     	;# 
  2833  0F2A                     	;# 
  2834  0F2B                     	;# 
  2835  0F2C                     	;# 
  2836  0F2D                     	;# 
  2837  0F2E                     	;# 
  2838  0F2F                     	;# 
  2839  0F30                     	;# 
  2840  0F31                     	;# 
  2841  0F32                     	;# 
  2842  0F38                     	;# 
  2843  0F39                     	;# 
  2844  0F3A                     	;# 
  2845  0F3B                     	;# 
  2846  0F3C                     	;# 
  2847  0F3D                     	;# 
  2848  0F3E                     	;# 
  2849  0F3F                     	;# 
  2850  0F40                     	;# 
  2851  0F41                     	;# 
  2852  0F43                     	;# 
  2853  0F44                     	;# 
  2854  0F45                     	;# 
  2855  0F46                     	;# 
  2856  0F47                     	;# 
  2857  0F48                     	;# 
  2858  0F49                     	;# 
  2859  0F4A                     	;# 
  2860  0F4B                     	;# 
  2861  0F4C                     	;# 
  2862  0F4E                     	;# 
  2863  0F4F                     	;# 
  2864  0F50                     	;# 
  2865  0F51                     	;# 
  2866  0F52                     	;# 
  2867  0F53                     	;# 
  2868  0F54                     	;# 
  2869  0F55                     	;# 
  2870  0F56                     	;# 
  2871  0F57                     	;# 
  2872  0F59                     	;# 
  2873  0F5A                     	;# 
  2874  0F5B                     	;# 
  2875  0F5C                     	;# 
  2876  0F5D                     	;# 
  2877  0F61                     	;# 
  2878  0F62                     	;# 
  2879  0F64                     	;# 
  2880  0F65                     	;# 
  2881  0F66                     	;# 
  2882  0F67                     	;# 
  2883  0F68                     	;# 
  2884  0F69                     	;# 
  2885  0F6A                     	;# 
  2886  0F6B                     	;# 
  2887  0F6C                     	;# 
  2888  0F6D                     	;# 
  2889  0FE4                     	;# 
  2890  0FE5                     	;# 
  2891  0FE6                     	;# 
  2892  0FE7                     	;# 
  2893  0FE8                     	;# 
  2894  0FE9                     	;# 
  2895  0FEA                     	;# 
  2896  0FEB                     	;# 
  2897  0FED                     	;# 
  2898  0FEE                     	;# 
  2899  0FEF                     	;# 
  2900  0000                     	;# 
  2901  0001                     	;# 
  2902  0002                     	;# 
  2903  0003                     	;# 
  2904  0004                     	;# 
  2905  0005                     	;# 
  2906  0006                     	;# 
  2907  0007                     	;# 
  2908  0008                     	;# 
  2909  0009                     	;# 
  2910  000A                     	;# 
  2911  000B                     	;# 
  2912  000C                     	;# 
  2913  000D                     	;# 
  2914  000E                     	;# 
  2915  000F                     	;# 
  2916  0010                     	;# 
  2917  0011                     	;# 
  2918  0012                     	;# 
  2919  0013                     	;# 
  2920  0014                     	;# 
  2921  0015                     	;# 
  2922  0016                     	;# 
  2923  0017                     	;# 
  2924  0018                     	;# 
  2925  0019                     	;# 
  2926  001A                     	;# 
  2927  001C                     	;# 
  2928  001C                     	;# 
  2929  001D                     	;# 
  2930  001D                     	;# 
  2931  001E                     	;# 
  2932  001F                     	;# 
  2933  008C                     	;# 
  2934  008C                     	;# 
  2935  008D                     	;# 
  2936  008E                     	;# 
  2937  008E                     	;# 
  2938  008F                     	;# 
  2939  0090                     	;# 
  2940  0090                     	;# 
  2941  0091                     	;# 
  2942  0093                     	;# 
  2943  0094                     	;# 
  2944  0095                     	;# 
  2945  0096                     	;# 
  2946  0097                     	;# 
  2947  0098                     	;# 
  2948  0099                     	;# 
  2949  009A                     	;# 
  2950  009B                     	;# 
  2951  009C                     	;# 
  2952  009D                     	;# 
  2953  009E                     	;# 
  2954  010C                     	;# 
  2955  010D                     	;# 
  2956  010E                     	;# 
  2957  010E                     	;# 
  2958  010F                     	;# 
  2959  0110                     	;# 
  2960  0110                     	;# 
  2961  0111                     	;# 
  2962  0112                     	;# 
  2963  0112                     	;# 
  2964  0113                     	;# 
  2965  0114                     	;# 
  2966  0114                     	;# 
  2967  0115                     	;# 
  2968  0116                     	;# 
  2969  0116                     	;# 
  2970  0117                     	;# 
  2971  0119                     	;# 
  2972  0119                     	;# 
  2973  0119                     	;# 
  2974  011A                     	;# 
  2975  011A                     	;# 
  2976  011A                     	;# 
  2977  011B                     	;# 
  2978  011B                     	;# 
  2979  011B                     	;# 
  2980  011B                     	;# 
  2981  011B                     	;# 
  2982  011C                     	;# 
  2983  011C                     	;# 
  2984  011C                     	;# 
  2985  011D                     	;# 
  2986  011D                     	;# 
  2987  011D                     	;# 
  2988  011E                     	;# 
  2989  011E                     	;# 
  2990  011E                     	;# 
  2991  011F                     	;# 
  2992  011F                     	;# 
  2993  011F                     	;# 
  2994  011F                     	;# 
  2995  011F                     	;# 
  2996  018C                     	;# 
  2997  018D                     	;# 
  2998  018E                     	;# 
  2999  018F                     	;# 
  3000  0190                     	;# 
  3001  0191                     	;# 
  3002  0192                     	;# 
  3003  0196                     	;# 
  3004  0197                     	;# 
  3005  0198                     	;# 
  3006  0199                     	;# 
  3007  019A                     	;# 
  3008  019B                     	;# 
  3009  019C                     	;# 
  3010  020C                     	;# 
  3011  020C                     	;# 
  3012  020D                     	;# 
  3013  020E                     	;# 
  3014  020F                     	;# 
  3015  020F                     	;# 
  3016  0210                     	;# 
  3017  0210                     	;# 
  3018  0211                     	;# 
  3019  0211                     	;# 
  3020  0212                     	;# 
  3021  0212                     	;# 
  3022  0213                     	;# 
  3023  0214                     	;# 
  3024  0215                     	;# 
  3025  0215                     	;# 
  3026  0216                     	;# 
  3027  0216                     	;# 
  3028  0217                     	;# 
  3029  0217                     	;# 
  3030  0218                     	;# 
  3031  0218                     	;# 
  3032  0219                     	;# 
  3033  021A                     	;# 
  3034  021B                     	;# 
  3035  021B                     	;# 
  3036  021C                     	;# 
  3037  021C                     	;# 
  3038  021D                     	;# 
  3039  021D                     	;# 
  3040  021E                     	;# 
  3041  021F                     	;# 
  3042  028C                     	;# 
  3043  028C                     	;# 
  3044  028D                     	;# 
  3045  028D                     	;# 
  3046  028E                     	;# 
  3047  028F                     	;# 
  3048  0290                     	;# 
  3049  0290                     	;# 
  3050  0291                     	;# 
  3051  0292                     	;# 
  3052  0292                     	;# 
  3053  0293                     	;# 
  3054  0293                     	;# 
  3055  0294                     	;# 
  3056  0295                     	;# 
  3057  0296                     	;# 
  3058  0296                     	;# 
  3059  0297                     	;# 
  3060  0298                     	;# 
  3061  0298                     	;# 
  3062  0299                     	;# 
  3063  0299                     	;# 
  3064  029A                     	;# 
  3065  029B                     	;# 
  3066  029C                     	;# 
  3067  029C                     	;# 
  3068  029D                     	;# 
  3069  030C                     	;# 
  3070  030C                     	;# 
  3071  030D                     	;# 
  3072  030E                     	;# 
  3073  030F                     	;# 
  3074  0310                     	;# 
  3075  0310                     	;# 
  3076  0311                     	;# 
  3077  0312                     	;# 
  3078  0313                     	;# 
  3079  0314                     	;# 
  3080  0314                     	;# 
  3081  0315                     	;# 
  3082  0316                     	;# 
  3083  0317                     	;# 
  3084  0318                     	;# 
  3085  0318                     	;# 
  3086  0319                     	;# 
  3087  031A                     	;# 
  3088  031B                     	;# 
  3089  031C                     	;# 
  3090  031C                     	;# 
  3091  031D                     	;# 
  3092  031E                     	;# 
  3093  031F                     	;# 
  3094  038C                     	;# 
  3095  038C                     	;# 
  3096  038D                     	;# 
  3097  038E                     	;# 
  3098  0390                     	;# 
  3099  0390                     	;# 
  3100  0391                     	;# 
  3101  0392                     	;# 
  3102  040C                     	;# 
  3103  040D                     	;# 
  3104  040E                     	;# 
  3105  040F                     	;# 
  3106  0410                     	;# 
  3107  0411                     	;# 
  3108  0416                     	;# 
  3109  0416                     	;# 
  3110  0417                     	;# 
  3111  0418                     	;# 
  3112  0418                     	;# 
  3113  0419                     	;# 
  3114  041A                     	;# 
  3115  041A                     	;# 
  3116  041B                     	;# 
  3117  041C                     	;# 
  3118  041C                     	;# 
  3119  041D                     	;# 
  3120  041E                     	;# 
  3121  041F                     	;# 
  3122  048C                     	;# 
  3123  048C                     	;# 
  3124  048D                     	;# 
  3125  048E                     	;# 
  3126  048F                     	;# 
  3127  048F                     	;# 
  3128  0490                     	;# 
  3129  0491                     	;# 
  3130  0492                     	;# 
  3131  0492                     	;# 
  3132  0493                     	;# 
  3133  0494                     	;# 
  3134  0495                     	;# 
  3135  0495                     	;# 
  3136  0496                     	;# 
  3137  0497                     	;# 
  3138  0498                     	;# 
  3139  0499                     	;# 
  3140  049A                     	;# 
  3141  049B                     	;# 
  3142  049C                     	;# 
  3143  049D                     	;# 
  3144  050C                     	;# 
  3145  050C                     	;# 
  3146  050D                     	;# 
  3147  050E                     	;# 
  3148  050F                     	;# 
  3149  050F                     	;# 
  3150  0510                     	;# 
  3151  0511                     	;# 
  3152  0512                     	;# 
  3153  0512                     	;# 
  3154  0513                     	;# 
  3155  0514                     	;# 
  3156  0515                     	;# 
  3157  0515                     	;# 
  3158  0516                     	;# 
  3159  0517                     	;# 
  3160  0518                     	;# 
  3161  0519                     	;# 
  3162  051A                     	;# 
  3163  051B                     	;# 
  3164  051C                     	;# 
  3165  051D                     	;# 
  3166  058C                     	;# 
  3167  058C                     	;# 
  3168  058D                     	;# 
  3169  058E                     	;# 
  3170  058F                     	;# 
  3171  058F                     	;# 
  3172  0590                     	;# 
  3173  0591                     	;# 
  3174  0592                     	;# 
  3175  0593                     	;# 
  3176  060C                     	;# 
  3177  060D                     	;# 
  3178  060E                     	;# 
  3179  060F                     	;# 
  3180  0610                     	;# 
  3181  0611                     	;# 
  3182  0612                     	;# 
  3183  0613                     	;# 
  3184  0614                     	;# 
  3185  0616                     	;# 
  3186  0617                     	;# 
  3187  0618                     	;# 
  3188  0619                     	;# 
  3189  061A                     	;# 
  3190  061B                     	;# 
  3191  061C                     	;# 
  3192  061D                     	;# 
  3193  061E                     	;# 
  3194  068C                     	;# 
  3195  068D                     	;# 
  3196  068E                     	;# 
  3197  068F                     	;# 
  3198  0690                     	;# 
  3199  0691                     	;# 
  3200  0692                     	;# 
  3201  0693                     	;# 
  3202  0694                     	;# 
  3203  070C                     	;# 
  3204  070D                     	;# 
  3205  070E                     	;# 
  3206  070F                     	;# 
  3207  0710                     	;# 
  3208  0711                     	;# 
  3209  0712                     	;# 
  3210  0713                     	;# 
  3211  0714                     	;# 
  3212  0716                     	;# 
  3213  0717                     	;# 
  3214  0718                     	;# 
  3215  0719                     	;# 
  3216  071A                     	;# 
  3217  071B                     	;# 
  3218  071C                     	;# 
  3219  071D                     	;# 
  3220  071E                     	;# 
  3221  0796                     	;# 
  3222  0797                     	;# 
  3223  0798                     	;# 
  3224  0799                     	;# 
  3225  079A                     	;# 
  3226  079B                     	;# 
  3227  080C                     	;# 
  3228  080D                     	;# 
  3229  080E                     	;# 
  3230  080F                     	;# 
  3231  0810                     	;# 
  3232  0811                     	;# 
  3233  0812                     	;# 
  3234  0813                     	;# 
  3235  0814                     	;# 
  3236  081A                     	;# 
  3237  081B                     	;# 
  3238  081C                     	;# 
  3239  081D                     	;# 
  3240  081E                     	;# 
  3241  081F                     	;# 
  3242  088C                     	;# 
  3243  088D                     	;# 
  3244  088E                     	;# 
  3245  088F                     	;# 
  3246  0890                     	;# 
  3247  0891                     	;# 
  3248  0892                     	;# 
  3249  0893                     	;# 
  3250  0895                     	;# 
  3251  0896                     	;# 
  3252  0897                     	;# 
  3253  0898                     	;# 
  3254  0899                     	;# 
  3255  089A                     	;# 
  3256  089B                     	;# 
  3257  090C                     	;# 
  3258  090E                     	;# 
  3259  090F                     	;# 
  3260  091F                     	;# 
  3261  091F                     	;# 
  3262  098F                     	;# 
  3263  098F                     	;# 
  3264  0990                     	;# 
  3265  0991                     	;# 
  3266  0992                     	;# 
  3267  0993                     	;# 
  3268  0994                     	;# 
  3269  0995                     	;# 
  3270  0996                     	;# 
  3271  0997                     	;# 
  3272  0E0F                     	;# 
  3273  0E10                     	;# 
  3274  0E11                     	;# 
  3275  0E12                     	;# 
  3276  0E13                     	;# 
  3277  0E14                     	;# 
  3278  0E15                     	;# 
  3279  0E16                     	;# 
  3280  0E17                     	;# 
  3281  0E18                     	;# 
  3282  0E19                     	;# 
  3283  0E1A                     	;# 
  3284  0E1B                     	;# 
  3285  0E1C                     	;# 
  3286  0E1D                     	;# 
  3287  0E1E                     	;# 
  3288  0E1F                     	;# 
  3289  0E20                     	;# 
  3290  0E21                     	;# 
  3291  0E22                     	;# 
  3292  0E23                     	;# 
  3293  0E24                     	;# 
  3294  0E25                     	;# 
  3295  0E26                     	;# 
  3296  0E27                     	;# 
  3297  0E28                     	;# 
  3298  0E29                     	;# 
  3299  0E2A                     	;# 
  3300  0E2B                     	;# 
  3301  0E2C                     	;# 
  3302  0E2D                     	;# 
  3303  0E2E                     	;# 
  3304  0E2F                     	;# 
  3305  0E30                     	;# 
  3306  0E31                     	;# 
  3307  0E32                     	;# 
  3308  0E33                     	;# 
  3309  0E34                     	;# 
  3310  0E35                     	;# 
  3311  0E36                     	;# 
  3312  0E37                     	;# 
  3313  0E8F                     	;# 
  3314  0E90                     	;# 
  3315  0E91                     	;# 
  3316  0E92                     	;# 
  3317  0E93                     	;# 
  3318  0E94                     	;# 
  3319  0E95                     	;# 
  3320  0E96                     	;# 
  3321  0E97                     	;# 
  3322  0E9C                     	;# 
  3323  0E9D                     	;# 
  3324  0E9E                     	;# 
  3325  0EA1                     	;# 
  3326  0EA2                     	;# 
  3327  0EA3                     	;# 
  3328  0EA4                     	;# 
  3329  0EA5                     	;# 
  3330  0EA9                     	;# 
  3331  0EAA                     	;# 
  3332  0EAB                     	;# 
  3333  0EAC                     	;# 
  3334  0EB1                     	;# 
  3335  0EB2                     	;# 
  3336  0EB3                     	;# 
  3337  0EB8                     	;# 
  3338  0EB9                     	;# 
  3339  0EBA                     	;# 
  3340  0EBB                     	;# 
  3341  0EBC                     	;# 
  3342  0EBD                     	;# 
  3343  0EBE                     	;# 
  3344  0EC3                     	;# 
  3345  0EC5                     	;# 
  3346  0EC6                     	;# 
  3347  0EC7                     	;# 
  3348  0EC8                     	;# 
  3349  0EC9                     	;# 
  3350  0ECA                     	;# 
  3351  0ECB                     	;# 
  3352  0ECC                     	;# 
  3353  0F10                     	;# 
  3354  0F11                     	;# 
  3355  0F12                     	;# 
  3356  0F13                     	;# 
  3357  0F14                     	;# 
  3358  0F15                     	;# 
  3359  0F16                     	;# 
  3360  0F17                     	;# 
  3361  0F18                     	;# 
  3362  0F19                     	;# 
  3363  0F1A                     	;# 
  3364  0F1B                     	;# 
  3365  0F1C                     	;# 
  3366  0F1D                     	;# 
  3367  0F1E                     	;# 
  3368  0F1F                     	;# 
  3369  0F20                     	;# 
  3370  0F21                     	;# 
  3371  0F22                     	;# 
  3372  0F23                     	;# 
  3373  0F24                     	;# 
  3374  0F25                     	;# 
  3375  0F26                     	;# 
  3376  0F27                     	;# 
  3377  0F28                     	;# 
  3378  0F29                     	;# 
  3379  0F2A                     	;# 
  3380  0F2B                     	;# 
  3381  0F2C                     	;# 
  3382  0F2D                     	;# 
  3383  0F2E                     	;# 
  3384  0F2F                     	;# 
  3385  0F30                     	;# 
  3386  0F31                     	;# 
  3387  0F32                     	;# 
  3388  0F38                     	;# 
  3389  0F39                     	;# 
  3390  0F3A                     	;# 
  3391  0F3B                     	;# 
  3392  0F3C                     	;# 
  3393  0F3D                     	;# 
  3394  0F3E                     	;# 
  3395  0F3F                     	;# 
  3396  0F40                     	;# 
  3397  0F41                     	;# 
  3398  0F43                     	;# 
  3399  0F44                     	;# 
  3400  0F45                     	;# 
  3401  0F46                     	;# 
  3402  0F47                     	;# 
  3403  0F48                     	;# 
  3404  0F49                     	;# 
  3405  0F4A                     	;# 
  3406  0F4B                     	;# 
  3407  0F4C                     	;# 
  3408  0F4E                     	;# 
  3409  0F4F                     	;# 
  3410  0F50                     	;# 
  3411  0F51                     	;# 
  3412  0F52                     	;# 
  3413  0F53                     	;# 
  3414  0F54                     	;# 
  3415  0F55                     	;# 
  3416  0F56                     	;# 
  3417  0F57                     	;# 
  3418  0F59                     	;# 
  3419  0F5A                     	;# 
  3420  0F5B                     	;# 
  3421  0F5C                     	;# 
  3422  0F5D                     	;# 
  3423  0F61                     	;# 
  3424  0F62                     	;# 
  3425  0F64                     	;# 
  3426  0F65                     	;# 
  3427  0F66                     	;# 
  3428  0F67                     	;# 
  3429  0F68                     	;# 
  3430  0F69                     	;# 
  3431  0F6A                     	;# 
  3432  0F6B                     	;# 
  3433  0F6C                     	;# 
  3434  0F6D                     	;# 
  3435  0FE4                     	;# 
  3436  0FE5                     	;# 
  3437  0FE6                     	;# 
  3438  0FE7                     	;# 
  3439  0FE8                     	;# 
  3440  0FE9                     	;# 
  3441  0FEA                     	;# 
  3442  0FEB                     	;# 
  3443  0FED                     	;# 
  3444  0FEE                     	;# 
  3445  0FEF                     	;# 
  3446  0000                     	;# 
  3447  0001                     	;# 
  3448  0002                     	;# 
  3449  0003                     	;# 
  3450  0004                     	;# 
  3451  0005                     	;# 
  3452  0006                     	;# 
  3453  0007                     	;# 
  3454  0008                     	;# 
  3455  0009                     	;# 
  3456  000A                     	;# 
  3457  000B                     	;# 
  3458  000C                     	;# 
  3459  000D                     	;# 
  3460  000E                     	;# 
  3461  000F                     	;# 
  3462  0010                     	;# 
  3463  0011                     	;# 
  3464  0012                     	;# 
  3465  0013                     	;# 
  3466  0014                     	;# 
  3467  0015                     	;# 
  3468  0016                     	;# 
  3469  0017                     	;# 
  3470  0018                     	;# 
  3471  0019                     	;# 
  3472  001A                     	;# 
  3473  001C                     	;# 
  3474  001C                     	;# 
  3475  001D                     	;# 
  3476  001D                     	;# 
  3477  001E                     	;# 
  3478  001F                     	;# 
  3479  008C                     	;# 
  3480  008C                     	;# 
  3481  008D                     	;# 
  3482  008E                     	;# 
  3483  008E                     	;# 
  3484  008F                     	;# 
  3485  0090                     	;# 
  3486  0090                     	;# 
  3487  0091                     	;# 
  3488  0093                     	;# 
  3489  0094                     	;# 
  3490  0095                     	;# 
  3491  0096                     	;# 
  3492  0097                     	;# 
  3493  0098                     	;# 
  3494  0099                     	;# 
  3495  009A                     	;# 
  3496  009B                     	;# 
  3497  009C                     	;# 
  3498  009D                     	;# 
  3499  009E                     	;# 
  3500  010C                     	;# 
  3501  010D                     	;# 
  3502  010E                     	;# 
  3503  010E                     	;# 
  3504  010F                     	;# 
  3505  0110                     	;# 
  3506  0110                     	;# 
  3507  0111                     	;# 
  3508  0112                     	;# 
  3509  0112                     	;# 
  3510  0113                     	;# 
  3511  0114                     	;# 
  3512  0114                     	;# 
  3513  0115                     	;# 
  3514  0116                     	;# 
  3515  0116                     	;# 
  3516  0117                     	;# 
  3517  0119                     	;# 
  3518  0119                     	;# 
  3519  0119                     	;# 
  3520  011A                     	;# 
  3521  011A                     	;# 
  3522  011A                     	;# 
  3523  011B                     	;# 
  3524  011B                     	;# 
  3525  011B                     	;# 
  3526  011B                     	;# 
  3527  011B                     	;# 
  3528  011C                     	;# 
  3529  011C                     	;# 
  3530  011C                     	;# 
  3531  011D                     	;# 
  3532  011D                     	;# 
  3533  011D                     	;# 
  3534  011E                     	;# 
  3535  011E                     	;# 
  3536  011E                     	;# 
  3537  011F                     	;# 
  3538  011F                     	;# 
  3539  011F                     	;# 
  3540  011F                     	;# 
  3541  011F                     	;# 
  3542  018C                     	;# 
  3543  018D                     	;# 
  3544  018E                     	;# 
  3545  018F                     	;# 
  3546  0190                     	;# 
  3547  0191                     	;# 
  3548  0192                     	;# 
  3549  0196                     	;# 
  3550  0197                     	;# 
  3551  0198                     	;# 
  3552  0199                     	;# 
  3553  019A                     	;# 
  3554  019B                     	;# 
  3555  019C                     	;# 
  3556  020C                     	;# 
  3557  020C                     	;# 
  3558  020D                     	;# 
  3559  020E                     	;# 
  3560  020F                     	;# 
  3561  020F                     	;# 
  3562  0210                     	;# 
  3563  0210                     	;# 
  3564  0211                     	;# 
  3565  0211                     	;# 
  3566  0212                     	;# 
  3567  0212                     	;# 
  3568  0213                     	;# 
  3569  0214                     	;# 
  3570  0215                     	;# 
  3571  0215                     	;# 
  3572  0216                     	;# 
  3573  0216                     	;# 
  3574  0217                     	;# 
  3575  0217                     	;# 
  3576  0218                     	;# 
  3577  0218                     	;# 
  3578  0219                     	;# 
  3579  021A                     	;# 
  3580  021B                     	;# 
  3581  021B                     	;# 
  3582  021C                     	;# 
  3583  021C                     	;# 
  3584  021D                     	;# 
  3585  021D                     	;# 
  3586  021E                     	;# 
  3587  021F                     	;# 
  3588  028C                     	;# 
  3589  028C                     	;# 
  3590  028D                     	;# 
  3591  028D                     	;# 
  3592  028E                     	;# 
  3593  028F                     	;# 
  3594  0290                     	;# 
  3595  0290                     	;# 
  3596  0291                     	;# 
  3597  0292                     	;# 
  3598  0292                     	;# 
  3599  0293                     	;# 
  3600  0293                     	;# 
  3601  0294                     	;# 
  3602  0295                     	;# 
  3603  0296                     	;# 
  3604  0296                     	;# 
  3605  0297                     	;# 
  3606  0298                     	;# 
  3607  0298                     	;# 
  3608  0299                     	;# 
  3609  0299                     	;# 
  3610  029A                     	;# 
  3611  029B                     	;# 
  3612  029C                     	;# 
  3613  029C                     	;# 
  3614  029D                     	;# 
  3615  030C                     	;# 
  3616  030C                     	;# 
  3617  030D                     	;# 
  3618  030E                     	;# 
  3619  030F                     	;# 
  3620  0310                     	;# 
  3621  0310                     	;# 
  3622  0311                     	;# 
  3623  0312                     	;# 
  3624  0313                     	;# 
  3625  0314                     	;# 
  3626  0314                     	;# 
  3627  0315                     	;# 
  3628  0316                     	;# 
  3629  0317                     	;# 
  3630  0318                     	;# 
  3631  0318                     	;# 
  3632  0319                     	;# 
  3633  031A                     	;# 
  3634  031B                     	;# 
  3635  031C                     	;# 
  3636  031C                     	;# 
  3637  031D                     	;# 
  3638  031E                     	;# 
  3639  031F                     	;# 
  3640  038C                     	;# 
  3641  038C                     	;# 
  3642  038D                     	;# 
  3643  038E                     	;# 
  3644  0390                     	;# 
  3645  0390                     	;# 
  3646  0391                     	;# 
  3647  0392                     	;# 
  3648  040C                     	;# 
  3649  040D                     	;# 
  3650  040E                     	;# 
  3651  040F                     	;# 
  3652  0410                     	;# 
  3653  0411                     	;# 
  3654  0416                     	;# 
  3655  0416                     	;# 
  3656  0417                     	;# 
  3657  0418                     	;# 
  3658  0418                     	;# 
  3659  0419                     	;# 
  3660  041A                     	;# 
  3661  041A                     	;# 
  3662  041B                     	;# 
  3663  041C                     	;# 
  3664  041C                     	;# 
  3665  041D                     	;# 
  3666  041E                     	;# 
  3667  041F                     	;# 
  3668  048C                     	;# 
  3669  048C                     	;# 
  3670  048D                     	;# 
  3671  048E                     	;# 
  3672  048F                     	;# 
  3673  048F                     	;# 
  3674  0490                     	;# 
  3675  0491                     	;# 
  3676  0492                     	;# 
  3677  0492                     	;# 
  3678  0493                     	;# 
  3679  0494                     	;# 
  3680  0495                     	;# 
  3681  0495                     	;# 
  3682  0496                     	;# 
  3683  0497                     	;# 
  3684  0498                     	;# 
  3685  0499                     	;# 
  3686  049A                     	;# 
  3687  049B                     	;# 
  3688  049C                     	;# 
  3689  049D                     	;# 
  3690  050C                     	;# 
  3691  050C                     	;# 
  3692  050D                     	;# 
  3693  050E                     	;# 
  3694  050F                     	;# 
  3695  050F                     	;# 
  3696  0510                     	;# 
  3697  0511                     	;# 
  3698  0512                     	;# 
  3699  0512                     	;# 
  3700  0513                     	;# 
  3701  0514                     	;# 
  3702  0515                     	;# 
  3703  0515                     	;# 
  3704  0516                     	;# 
  3705  0517                     	;# 
  3706  0518                     	;# 
  3707  0519                     	;# 
  3708  051A                     	;# 
  3709  051B                     	;# 
  3710  051C                     	;# 
  3711  051D                     	;# 
  3712  058C                     	;# 
  3713  058C                     	;# 
  3714  058D                     	;# 
  3715  058E                     	;# 
  3716  058F                     	;# 
  3717  058F                     	;# 
  3718  0590                     	;# 
  3719  0591                     	;# 
  3720  0592                     	;# 
  3721  0593                     	;# 
  3722  060C                     	;# 
  3723  060D                     	;# 
  3724  060E                     	;# 
  3725  060F                     	;# 
  3726  0610                     	;# 
  3727  0611                     	;# 
  3728  0612                     	;# 
  3729  0613                     	;# 
  3730  0614                     	;# 
  3731  0616                     	;# 
  3732  0617                     	;# 
  3733  0618                     	;# 
  3734  0619                     	;# 
  3735  061A                     	;# 
  3736  061B                     	;# 
  3737  061C                     	;# 
  3738  061D                     	;# 
  3739  061E                     	;# 
  3740  068C                     	;# 
  3741  068D                     	;# 
  3742  068E                     	;# 
  3743  068F                     	;# 
  3744  0690                     	;# 
  3745  0691                     	;# 
  3746  0692                     	;# 
  3747  0693                     	;# 
  3748  0694                     	;# 
  3749  070C                     	;# 
  3750  070D                     	;# 
  3751  070E                     	;# 
  3752  070F                     	;# 
  3753  0710                     	;# 
  3754  0711                     	;# 
  3755  0712                     	;# 
  3756  0713                     	;# 
  3757  0714                     	;# 
  3758  0716                     	;# 
  3759  0717                     	;# 
  3760  0718                     	;# 
  3761  0719                     	;# 
  3762  071A                     	;# 
  3763  071B                     	;# 
  3764  071C                     	;# 
  3765  071D                     	;# 
  3766  071E                     	;# 
  3767  0796                     	;# 
  3768  0797                     	;# 
  3769  0798                     	;# 
  3770  0799                     	;# 
  3771  079A                     	;# 
  3772  079B                     	;# 
  3773  080C                     	;# 
  3774  080D                     	;# 
  3775  080E                     	;# 
  3776  080F                     	;# 
  3777  0810                     	;# 
  3778  0811                     	;# 
  3779  0812                     	;# 
  3780  0813                     	;# 
  3781  0814                     	;# 
  3782  081A                     	;# 
  3783  081B                     	;# 
  3784  081C                     	;# 
  3785  081D                     	;# 
  3786  081E                     	;# 
  3787  081F                     	;# 
  3788  088C                     	;# 
  3789  088D                     	;# 
  3790  088E                     	;# 
  3791  088F                     	;# 
  3792  0890                     	;# 
  3793  0891                     	;# 
  3794  0892                     	;# 
  3795  0893                     	;# 
  3796  0895                     	;# 
  3797  0896                     	;# 
  3798  0897                     	;# 
  3799  0898                     	;# 
  3800  0899                     	;# 
  3801  089A                     	;# 
  3802  089B                     	;# 
  3803  090C                     	;# 
  3804  090E                     	;# 
  3805  090F                     	;# 
  3806  091F                     	;# 
  3807  091F                     	;# 
  3808  098F                     	;# 
  3809  098F                     	;# 
  3810  0990                     	;# 
  3811  0991                     	;# 
  3812  0992                     	;# 
  3813  0993                     	;# 
  3814  0994                     	;# 
  3815  0995                     	;# 
  3816  0996                     	;# 
  3817  0997                     	;# 
  3818  0E0F                     	;# 
  3819  0E10                     	;# 
  3820  0E11                     	;# 
  3821  0E12                     	;# 
  3822  0E13                     	;# 
  3823  0E14                     	;# 
  3824  0E15                     	;# 
  3825  0E16                     	;# 
  3826  0E17                     	;# 
  3827  0E18                     	;# 
  3828  0E19                     	;# 
  3829  0E1A                     	;# 
  3830  0E1B                     	;# 
  3831  0E1C                     	;# 
  3832  0E1D                     	;# 
  3833  0E1E                     	;# 
  3834  0E1F                     	;# 
  3835  0E20                     	;# 
  3836  0E21                     	;# 
  3837  0E22                     	;# 
  3838  0E23                     	;# 
  3839  0E24                     	;# 
  3840  0E25                     	;# 
  3841  0E26                     	;# 
  3842  0E27                     	;# 
  3843  0E28                     	;# 
  3844  0E29                     	;# 
  3845  0E2A                     	;# 
  3846  0E2B                     	;# 
  3847  0E2C                     	;# 
  3848  0E2D                     	;# 
  3849  0E2E                     	;# 
  3850  0E2F                     	;# 
  3851  0E30                     	;# 
  3852  0E31                     	;# 
  3853  0E32                     	;# 
  3854  0E33                     	;# 
  3855  0E34                     	;# 
  3856  0E35                     	;# 
  3857  0E36                     	;# 
  3858  0E37                     	;# 
  3859  0E8F                     	;# 
  3860  0E90                     	;# 
  3861  0E91                     	;# 
  3862  0E92                     	;# 
  3863  0E93                     	;# 
  3864  0E94                     	;# 
  3865  0E95                     	;# 
  3866  0E96                     	;# 
  3867  0E97                     	;# 
  3868  0E9C                     	;# 
  3869  0E9D                     	;# 
  3870  0E9E                     	;# 
  3871  0EA1                     	;# 
  3872  0EA2                     	;# 
  3873  0EA3                     	;# 
  3874  0EA4                     	;# 
  3875  0EA5                     	;# 
  3876  0EA9                     	;# 
  3877  0EAA                     	;# 
  3878  0EAB                     	;# 
  3879  0EAC                     	;# 
  3880  0EB1                     	;# 
  3881  0EB2                     	;# 
  3882  0EB3                     	;# 
  3883  0EB8                     	;# 
  3884  0EB9                     	;# 
  3885  0EBA                     	;# 
  3886  0EBB                     	;# 
  3887  0EBC                     	;# 
  3888  0EBD                     	;# 
  3889  0EBE                     	;# 
  3890  0EC3                     	;# 
  3891  0EC5                     	;# 
  3892  0EC6                     	;# 
  3893  0EC7                     	;# 
  3894  0EC8                     	;# 
  3895  0EC9                     	;# 
  3896  0ECA                     	;# 
  3897  0ECB                     	;# 
  3898  0ECC                     	;# 
  3899  0F10                     	;# 
  3900  0F11                     	;# 
  3901  0F12                     	;# 
  3902  0F13                     	;# 
  3903  0F14                     	;# 
  3904  0F15                     	;# 
  3905  0F16                     	;# 
  3906  0F17                     	;# 
  3907  0F18                     	;# 
  3908  0F19                     	;# 
  3909  0F1A                     	;# 
  3910  0F1B                     	;# 
  3911  0F1C                     	;# 
  3912  0F1D                     	;# 
  3913  0F1E                     	;# 
  3914  0F1F                     	;# 
  3915  0F20                     	;# 
  3916  0F21                     	;# 
  3917  0F22                     	;# 
  3918  0F23                     	;# 
  3919  0F24                     	;# 
  3920  0F25                     	;# 
  3921  0F26                     	;# 
  3922  0F27                     	;# 
  3923  0F28                     	;# 
  3924  0F29                     	;# 
  3925  0F2A                     	;# 
  3926  0F2B                     	;# 
  3927  0F2C                     	;# 
  3928  0F2D                     	;# 
  3929  0F2E                     	;# 
  3930  0F2F                     	;# 
  3931  0F30                     	;# 
  3932  0F31                     	;# 
  3933  0F32                     	;# 
  3934  0F38                     	;# 
  3935  0F39                     	;# 
  3936  0F3A                     	;# 
  3937  0F3B                     	;# 
  3938  0F3C                     	;# 
  3939  0F3D                     	;# 
  3940  0F3E                     	;# 
  3941  0F3F                     	;# 
  3942  0F40                     	;# 
  3943  0F41                     	;# 
  3944  0F43                     	;# 
  3945  0F44                     	;# 
  3946  0F45                     	;# 
  3947  0F46                     	;# 
  3948  0F47                     	;# 
  3949  0F48                     	;# 
  3950  0F49                     	;# 
  3951  0F4A                     	;# 
  3952  0F4B                     	;# 
  3953  0F4C                     	;# 
  3954  0F4E                     	;# 
  3955  0F4F                     	;# 
  3956  0F50                     	;# 
  3957  0F51                     	;# 
  3958  0F52                     	;# 
  3959  0F53                     	;# 
  3960  0F54                     	;# 
  3961  0F55                     	;# 
  3962  0F56                     	;# 
  3963  0F57                     	;# 
  3964  0F59                     	;# 
  3965  0F5A                     	;# 
  3966  0F5B                     	;# 
  3967  0F5C                     	;# 
  3968  0F5D                     	;# 
  3969  0F61                     	;# 
  3970  0F62                     	;# 
  3971  0F64                     	;# 
  3972  0F65                     	;# 
  3973  0F66                     	;# 
  3974  0F67                     	;# 
  3975  0F68                     	;# 
  3976  0F69                     	;# 
  3977  0F6A                     	;# 
  3978  0F6B                     	;# 
  3979  0F6C                     	;# 
  3980  0F6D                     	;# 
  3981  0FE4                     	;# 
  3982  0FE5                     	;# 
  3983  0FE6                     	;# 
  3984  0FE7                     	;# 
  3985  0FE8                     	;# 
  3986  0FE9                     	;# 
  3987  0FEA                     	;# 
  3988  0FEB                     	;# 
  3989  0FED                     	;# 
  3990  0FEE                     	;# 
  3991  0FEF                     	;# 
  3992  0000                     	;# 
  3993  0001                     	;# 
  3994  0002                     	;# 
  3995  0003                     	;# 
  3996  0004                     	;# 
  3997  0005                     	;# 
  3998  0006                     	;# 
  3999  0007                     	;# 
  4000  0008                     	;# 
  4001  0009                     	;# 
  4002  000A                     	;# 
  4003  000B                     	;# 
  4004  000C                     	;# 
  4005  000D                     	;# 
  4006  000E                     	;# 
  4007  000F                     	;# 
  4008  0010                     	;# 
  4009  0011                     	;# 
  4010  0012                     	;# 
  4011  0013                     	;# 
  4012  0014                     	;# 
  4013  0015                     	;# 
  4014  0016                     	;# 
  4015  0017                     	;# 
  4016  0018                     	;# 
  4017  0019                     	;# 
  4018  001A                     	;# 
  4019  001C                     	;# 
  4020  001C                     	;# 
  4021  001D                     	;# 
  4022  001D                     	;# 
  4023  001E                     	;# 
  4024  001F                     	;# 
  4025  008C                     	;# 
  4026  008C                     	;# 
  4027  008D                     	;# 
  4028  008E                     	;# 
  4029  008E                     	;# 
  4030  008F                     	;# 
  4031  0090                     	;# 
  4032  0090                     	;# 
  4033  0091                     	;# 
  4034  0093                     	;# 
  4035  0094                     	;# 
  4036  0095                     	;# 
  4037  0096                     	;# 
  4038  0097                     	;# 
  4039  0098                     	;# 
  4040  0099                     	;# 
  4041  009A                     	;# 
  4042  009B                     	;# 
  4043  009C                     	;# 
  4044  009D                     	;# 
  4045  009E                     	;# 
  4046  010C                     	;# 
  4047  010D                     	;# 
  4048  010E                     	;# 
  4049  010E                     	;# 
  4050  010F                     	;# 
  4051  0110                     	;# 
  4052  0110                     	;# 
  4053  0111                     	;# 
  4054  0112                     	;# 
  4055  0112                     	;# 
  4056  0113                     	;# 
  4057  0114                     	;# 
  4058  0114                     	;# 
  4059  0115                     	;# 
  4060  0116                     	;# 
  4061  0116                     	;# 
  4062  0117                     	;# 
  4063  0119                     	;# 
  4064  0119                     	;# 
  4065  0119                     	;# 
  4066  011A                     	;# 
  4067  011A                     	;# 
  4068  011A                     	;# 
  4069  011B                     	;# 
  4070  011B                     	;# 
  4071  011B                     	;# 
  4072  011B                     	;# 
  4073  011B                     	;# 
  4074  011C                     	;# 
  4075  011C                     	;# 
  4076  011C                     	;# 
  4077  011D                     	;# 
  4078  011D                     	;# 
  4079  011D                     	;# 
  4080  011E                     	;# 
  4081  011E                     	;# 
  4082  011E                     	;# 
  4083  011F                     	;# 
  4084  011F                     	;# 
  4085  011F                     	;# 
  4086  011F                     	;# 
  4087  011F                     	;# 
  4088  018C                     	;# 
  4089  018D                     	;# 
  4090  018E                     	;# 
  4091  018F                     	;# 
  4092  0190                     	;# 
  4093  0191                     	;# 
  4094  0192                     	;# 
  4095  0196                     	;# 
  4096  0197                     	;# 
  4097  0198                     	;# 
  4098  0199                     	;# 
  4099  019A                     	;# 
  4100  019B                     	;# 
  4101  019C                     	;# 
  4102  020C                     	;# 
  4103  020C                     	;# 
  4104  020D                     	;# 
  4105  020E                     	;# 
  4106  020F                     	;# 
  4107  020F                     	;# 
  4108  0210                     	;# 
  4109  0210                     	;# 
  4110  0211                     	;# 
  4111  0211                     	;# 
  4112  0212                     	;# 
  4113  0212                     	;# 
  4114  0213                     	;# 
  4115  0214                     	;# 
  4116  0215                     	;# 
  4117  0215                     	;# 
  4118  0216                     	;# 
  4119  0216                     	;# 
  4120  0217                     	;# 
  4121  0217                     	;# 
  4122  0218                     	;# 
  4123  0218                     	;# 
  4124  0219                     	;# 
  4125  021A                     	;# 
  4126  021B                     	;# 
  4127  021B                     	;# 
  4128  021C                     	;# 
  4129  021C                     	;# 
  4130  021D                     	;# 
  4131  021D                     	;# 
  4132  021E                     	;# 
  4133  021F                     	;# 
  4134  028C                     	;# 
  4135  028C                     	;# 
  4136  028D                     	;# 
  4137  028D                     	;# 
  4138  028E                     	;# 
  4139  028F                     	;# 
  4140  0290                     	;# 
  4141  0290                     	;# 
  4142  0291                     	;# 
  4143  0292                     	;# 
  4144  0292                     	;# 
  4145  0293                     	;# 
  4146  0293                     	;# 
  4147  0294                     	;# 
  4148  0295                     	;# 
  4149  0296                     	;# 
  4150  0296                     	;# 
  4151  0297                     	;# 
  4152  0298                     	;# 
  4153  0298                     	;# 
  4154  0299                     	;# 
  4155  0299                     	;# 
  4156  029A                     	;# 
  4157  029B                     	;# 
  4158  029C                     	;# 
  4159  029C                     	;# 
  4160  029D                     	;# 
  4161  030C                     	;# 
  4162  030C                     	;# 
  4163  030D                     	;# 
  4164  030E                     	;# 
  4165  030F                     	;# 
  4166  0310                     	;# 
  4167  0310                     	;# 
  4168  0311                     	;# 
  4169  0312                     	;# 
  4170  0313                     	;# 
  4171  0314                     	;# 
  4172  0314                     	;# 
  4173  0315                     	;# 
  4174  0316                     	;# 
  4175  0317                     	;# 
  4176  0318                     	;# 
  4177  0318                     	;# 
  4178  0319                     	;# 
  4179  031A                     	;# 
  4180  031B                     	;# 
  4181  031C                     	;# 
  4182  031C                     	;# 
  4183  031D                     	;# 
  4184  031E                     	;# 
  4185  031F                     	;# 
  4186  038C                     	;# 
  4187  038C                     	;# 
  4188  038D                     	;# 
  4189  038E                     	;# 
  4190  0390                     	;# 
  4191  0390                     	;# 
  4192  0391                     	;# 
  4193  0392                     	;# 
  4194  040C                     	;# 
  4195  040D                     	;# 
  4196  040E                     	;# 
  4197  040F                     	;# 
  4198  0410                     	;# 
  4199  0411                     	;# 
  4200  0416                     	;# 
  4201  0416                     	;# 
  4202  0417                     	;# 
  4203  0418                     	;# 
  4204  0418                     	;# 
  4205  0419                     	;# 
  4206  041A                     	;# 
  4207  041A                     	;# 
  4208  041B                     	;# 
  4209  041C                     	;# 
  4210  041C                     	;# 
  4211  041D                     	;# 
  4212  041E                     	;# 
  4213  041F                     	;# 
  4214  048C                     	;# 
  4215  048C                     	;# 
  4216  048D                     	;# 
  4217  048E                     	;# 
  4218  048F                     	;# 
  4219  048F                     	;# 
  4220  0490                     	;# 
  4221  0491                     	;# 
  4222  0492                     	;# 
  4223  0492                     	;# 
  4224  0493                     	;# 
  4225  0494                     	;# 
  4226  0495                     	;# 
  4227  0495                     	;# 
  4228  0496                     	;# 
  4229  0497                     	;# 
  4230  0498                     	;# 
  4231  0499                     	;# 
  4232  049A                     	;# 
  4233  049B                     	;# 
  4234  049C                     	;# 
  4235  049D                     	;# 
  4236  050C                     	;# 
  4237  050C                     	;# 
  4238  050D                     	;# 
  4239  050E                     	;# 
  4240  050F                     	;# 
  4241  050F                     	;# 
  4242  0510                     	;# 
  4243  0511                     	;# 
  4244  0512                     	;# 
  4245  0512                     	;# 
  4246  0513                     	;# 
  4247  0514                     	;# 
  4248  0515                     	;# 
  4249  0515                     	;# 
  4250  0516                     	;# 
  4251  0517                     	;# 
  4252  0518                     	;# 
  4253  0519                     	;# 
  4254  051A                     	;# 
  4255  051B                     	;# 
  4256  051C                     	;# 
  4257  051D                     	;# 
  4258  058C                     	;# 
  4259  058C                     	;# 
  4260  058D                     	;# 
  4261  058E                     	;# 
  4262  058F                     	;# 
  4263  058F                     	;# 
  4264  0590                     	;# 
  4265  0591                     	;# 
  4266  0592                     	;# 
  4267  0593                     	;# 
  4268  060C                     	;# 
  4269  060D                     	;# 
  4270  060E                     	;# 
  4271  060F                     	;# 
  4272  0610                     	;# 
  4273  0611                     	;# 
  4274  0612                     	;# 
  4275  0613                     	;# 
  4276  0614                     	;# 
  4277  0616                     	;# 
  4278  0617                     	;# 
  4279  0618                     	;# 
  4280  0619                     	;# 
  4281  061A                     	;# 
  4282  061B                     	;# 
  4283  061C                     	;# 
  4284  061D                     	;# 
  4285  061E                     	;# 
  4286  068C                     	;# 
  4287  068D                     	;# 
  4288  068E                     	;# 
  4289  068F                     	;# 
  4290  0690                     	;# 
  4291  0691                     	;# 
  4292  0692                     	;# 
  4293  0693                     	;# 
  4294  0694                     	;# 
  4295  070C                     	;# 
  4296  070D                     	;# 
  4297  070E                     	;# 
  4298  070F                     	;# 
  4299  0710                     	;# 
  4300  0711                     	;# 
  4301  0712                     	;# 
  4302  0713                     	;# 
  4303  0714                     	;# 
  4304  0716                     	;# 
  4305  0717                     	;# 
  4306  0718                     	;# 
  4307  0719                     	;# 
  4308  071A                     	;# 
  4309  071B                     	;# 
  4310  071C                     	;# 
  4311  071D                     	;# 
  4312  071E                     	;# 
  4313  0796                     	;# 
  4314  0797                     	;# 
  4315  0798                     	;# 
  4316  0799                     	;# 
  4317  079A                     	;# 
  4318  079B                     	;# 
  4319  080C                     	;# 
  4320  080D                     	;# 
  4321  080E                     	;# 
  4322  080F                     	;# 
  4323  0810                     	;# 
  4324  0811                     	;# 
  4325  0812                     	;# 
  4326  0813                     	;# 
  4327  0814                     	;# 
  4328  081A                     	;# 
  4329  081B                     	;# 
  4330  081C                     	;# 
  4331  081D                     	;# 
  4332  081E                     	;# 
  4333  081F                     	;# 
  4334  088C                     	;# 
  4335  088D                     	;# 
  4336  088E                     	;# 
  4337  088F                     	;# 
  4338  0890                     	;# 
  4339  0891                     	;# 
  4340  0892                     	;# 
  4341  0893                     	;# 
  4342  0895                     	;# 
  4343  0896                     	;# 
  4344  0897                     	;# 
  4345  0898                     	;# 
  4346  0899                     	;# 
  4347  089A                     	;# 
  4348  089B                     	;# 
  4349  090C                     	;# 
  4350  090E                     	;# 
  4351  090F                     	;# 
  4352  091F                     	;# 
  4353  091F                     	;# 
  4354  098F                     	;# 
  4355  098F                     	;# 
  4356  0990                     	;# 
  4357  0991                     	;# 
  4358  0992                     	;# 
  4359  0993                     	;# 
  4360  0994                     	;# 
  4361  0995                     	;# 
  4362  0996                     	;# 
  4363  0997                     	;# 
  4364  0E0F                     	;# 
  4365  0E10                     	;# 
  4366  0E11                     	;# 
  4367  0E12                     	;# 
  4368  0E13                     	;# 
  4369  0E14                     	;# 
  4370  0E15                     	;# 
  4371  0E16                     	;# 
  4372  0E17                     	;# 
  4373  0E18                     	;# 
  4374  0E19                     	;# 
  4375  0E1A                     	;# 
  4376  0E1B                     	;# 
  4377  0E1C                     	;# 
  4378  0E1D                     	;# 
  4379  0E1E                     	;# 
  4380  0E1F                     	;# 
  4381  0E20                     	;# 
  4382  0E21                     	;# 
  4383  0E22                     	;# 
  4384  0E23                     	;# 
  4385  0E24                     	;# 
  4386  0E25                     	;# 
  4387  0E26                     	;# 
  4388  0E27                     	;# 
  4389  0E28                     	;# 
  4390  0E29                     	;# 
  4391  0E2A                     	;# 
  4392  0E2B                     	;# 
  4393  0E2C                     	;# 
  4394  0E2D                     	;# 
  4395  0E2E                     	;# 
  4396  0E2F                     	;# 
  4397  0E30                     	;# 
  4398  0E31                     	;# 
  4399  0E32                     	;# 
  4400  0E33                     	;# 
  4401  0E34                     	;# 
  4402  0E35                     	;# 
  4403  0E36                     	;# 
  4404  0E37                     	;# 
  4405  0E8F                     	;# 
  4406  0E90                     	;# 
  4407  0E91                     	;# 
  4408  0E92                     	;# 
  4409  0E93                     	;# 
  4410  0E94                     	;# 
  4411  0E95                     	;# 
  4412  0E96                     	;# 
  4413  0E97                     	;# 
  4414  0E9C                     	;# 
  4415  0E9D                     	;# 
  4416  0E9E                     	;# 
  4417  0EA1                     	;# 
  4418  0EA2                     	;# 
  4419  0EA3                     	;# 
  4420  0EA4                     	;# 
  4421  0EA5                     	;# 
  4422  0EA9                     	;# 
  4423  0EAA                     	;# 
  4424  0EAB                     	;# 
  4425  0EAC                     	;# 
  4426  0EB1                     	;# 
  4427  0EB2                     	;# 
  4428  0EB3                     	;# 
  4429  0EB8                     	;# 
  4430  0EB9                     	;# 
  4431  0EBA                     	;# 
  4432  0EBB                     	;# 
  4433  0EBC                     	;# 
  4434  0EBD                     	;# 
  4435  0EBE                     	;# 
  4436  0EC3                     	;# 
  4437  0EC5                     	;# 
  4438  0EC6                     	;# 
  4439  0EC7                     	;# 
  4440  0EC8                     	;# 
  4441  0EC9                     	;# 
  4442  0ECA                     	;# 
  4443  0ECB                     	;# 
  4444  0ECC                     	;# 
  4445  0F10                     	;# 
  4446  0F11                     	;# 
  4447  0F12                     	;# 
  4448  0F13                     	;# 
  4449  0F14                     	;# 
  4450  0F15                     	;# 
  4451  0F16                     	;# 
  4452  0F17                     	;# 
  4453  0F18                     	;# 
  4454  0F19                     	;# 
  4455  0F1A                     	;# 
  4456  0F1B                     	;# 
  4457  0F1C                     	;# 
  4458  0F1D                     	;# 
  4459  0F1E                     	;# 
  4460  0F1F                     	;# 
  4461  0F20                     	;# 
  4462  0F21                     	;# 
  4463  0F22                     	;# 
  4464  0F23                     	;# 
  4465  0F24                     	;# 
  4466  0F25                     	;# 
  4467  0F26                     	;# 
  4468  0F27                     	;# 
  4469  0F28                     	;# 
  4470  0F29                     	;# 
  4471  0F2A                     	;# 
  4472  0F2B                     	;# 
  4473  0F2C                     	;# 
  4474  0F2D                     	;# 
  4475  0F2E                     	;# 
  4476  0F2F                     	;# 
  4477  0F30                     	;# 
  4478  0F31                     	;# 
  4479  0F32                     	;# 
  4480  0F38                     	;# 
  4481  0F39                     	;# 
  4482  0F3A                     	;# 
  4483  0F3B                     	;# 
  4484  0F3C                     	;# 
  4485  0F3D                     	;# 
  4486  0F3E                     	;# 
  4487  0F3F                     	;# 
  4488  0F40                     	;# 
  4489  0F41                     	;# 
  4490  0F43                     	;# 
  4491  0F44                     	;# 
  4492  0F45                     	;# 
  4493  0F46                     	;# 
  4494  0F47                     	;# 
  4495  0F48                     	;# 
  4496  0F49                     	;# 
  4497  0F4A                     	;# 
  4498  0F4B                     	;# 
  4499  0F4C                     	;# 
  4500  0F4E                     	;# 
  4501  0F4F                     	;# 
  4502  0F50                     	;# 
  4503  0F51                     	;# 
  4504  0F52                     	;# 
  4505  0F53                     	;# 
  4506  0F54                     	;# 
  4507  0F55                     	;# 
  4508  0F56                     	;# 
  4509  0F57                     	;# 
  4510  0F59                     	;# 
  4511  0F5A                     	;# 
  4512  0F5B                     	;# 
  4513  0F5C                     	;# 
  4514  0F5D                     	;# 
  4515  0F61                     	;# 
  4516  0F62                     	;# 
  4517  0F64                     	;# 
  4518  0F65                     	;# 
  4519  0F66                     	;# 
  4520  0F67                     	;# 
  4521  0F68                     	;# 
  4522  0F69                     	;# 
  4523  0F6A                     	;# 
  4524  0F6B                     	;# 
  4525  0F6C                     	;# 
  4526  0F6D                     	;# 
  4527  0FE4                     	;# 
  4528  0FE5                     	;# 
  4529  0FE6                     	;# 
  4530  0FE7                     	;# 
  4531  0FE8                     	;# 
  4532  0FE9                     	;# 
  4533  0FEA                     	;# 
  4534  0FEB                     	;# 
  4535  0FED                     	;# 
  4536  0FEE                     	;# 
  4537  0FEF                     	;# 
  4538  0000                     	;# 
  4539  0001                     	;# 
  4540  0002                     	;# 
  4541  0003                     	;# 
  4542  0004                     	;# 
  4543  0005                     	;# 
  4544  0006                     	;# 
  4545  0007                     	;# 
  4546  0008                     	;# 
  4547  0009                     	;# 
  4548  000A                     	;# 
  4549  000B                     	;# 
  4550  000C                     	;# 
  4551  000D                     	;# 
  4552  000E                     	;# 
  4553  000F                     	;# 
  4554  0010                     	;# 
  4555  0011                     	;# 
  4556  0012                     	;# 
  4557  0013                     	;# 
  4558  0014                     	;# 
  4559  0015                     	;# 
  4560  0016                     	;# 
  4561  0017                     	;# 
  4562  0018                     	;# 
  4563  0019                     	;# 
  4564  001A                     	;# 
  4565  001C                     	;# 
  4566  001C                     	;# 
  4567  001D                     	;# 
  4568  001D                     	;# 
  4569  001E                     	;# 
  4570  001F                     	;# 
  4571  008C                     	;# 
  4572  008C                     	;# 
  4573  008D                     	;# 
  4574  008E                     	;# 
  4575  008E                     	;# 
  4576  008F                     	;# 
  4577  0090                     	;# 
  4578  0090                     	;# 
  4579  0091                     	;# 
  4580  0093                     	;# 
  4581  0094                     	;# 
  4582  0095                     	;# 
  4583  0096                     	;# 
  4584  0097                     	;# 
  4585  0098                     	;# 
  4586  0099                     	;# 
  4587  009A                     	;# 
  4588  009B                     	;# 
  4589  009C                     	;# 
  4590  009D                     	;# 
  4591  009E                     	;# 
  4592  010C                     	;# 
  4593  010D                     	;# 
  4594  010E                     	;# 
  4595  010E                     	;# 
  4596  010F                     	;# 
  4597  0110                     	;# 
  4598  0110                     	;# 
  4599  0111                     	;# 
  4600  0112                     	;# 
  4601  0112                     	;# 
  4602  0113                     	;# 
  4603  0114                     	;# 
  4604  0114                     	;# 
  4605  0115                     	;# 
  4606  0116                     	;# 
  4607  0116                     	;# 
  4608  0117                     	;# 
  4609  0119                     	;# 
  4610  0119                     	;# 
  4611  0119                     	;# 
  4612  011A                     	;# 
  4613  011A                     	;# 
  4614  011A                     	;# 
  4615  011B                     	;# 
  4616  011B                     	;# 
  4617  011B                     	;# 
  4618  011B                     	;# 
  4619  011B                     	;# 
  4620  011C                     	;# 
  4621  011C                     	;# 
  4622  011C                     	;# 
  4623  011D                     	;# 
  4624  011D                     	;# 
  4625  011D                     	;# 
  4626  011E                     	;# 
  4627  011E                     	;# 
  4628  011E                     	;# 
  4629  011F                     	;# 
  4630  011F                     	;# 
  4631  011F                     	;# 
  4632  011F                     	;# 
  4633  011F                     	;# 
  4634  018C                     	;# 
  4635  018D                     	;# 
  4636  018E                     	;# 
  4637  018F                     	;# 
  4638  0190                     	;# 
  4639  0191                     	;# 
  4640  0192                     	;# 
  4641  0196                     	;# 
  4642  0197                     	;# 
  4643  0198                     	;# 
  4644  0199                     	;# 
  4645  019A                     	;# 
  4646  019B                     	;# 
  4647  019C                     	;# 
  4648  020C                     	;# 
  4649  020C                     	;# 
  4650  020D                     	;# 
  4651  020E                     	;# 
  4652  020F                     	;# 
  4653  020F                     	;# 
  4654  0210                     	;# 
  4655  0210                     	;# 
  4656  0211                     	;# 
  4657  0211                     	;# 
  4658  0212                     	;# 
  4659  0212                     	;# 
  4660  0213                     	;# 
  4661  0214                     	;# 
  4662  0215                     	;# 
  4663  0215                     	;# 
  4664  0216                     	;# 
  4665  0216                     	;# 
  4666  0217                     	;# 
  4667  0217                     	;# 
  4668  0218                     	;# 
  4669  0218                     	;# 
  4670  0219                     	;# 
  4671  021A                     	;# 
  4672  021B                     	;# 
  4673  021B                     	;# 
  4674  021C                     	;# 
  4675  021C                     	;# 
  4676  021D                     	;# 
  4677  021D                     	;# 
  4678  021E                     	;# 
  4679  021F                     	;# 
  4680  028C                     	;# 
  4681  028C                     	;# 
  4682  028D                     	;# 
  4683  028D                     	;# 
  4684  028E                     	;# 
  4685  028F                     	;# 
  4686  0290                     	;# 
  4687  0290                     	;# 
  4688  0291                     	;# 
  4689  0292                     	;# 
  4690  0292                     	;# 
  4691  0293                     	;# 
  4692  0293                     	;# 
  4693  0294                     	;# 
  4694  0295                     	;# 
  4695  0296                     	;# 
  4696  0296                     	;# 
  4697  0297                     	;# 
  4698  0298                     	;# 
  4699  0298                     	;# 
  4700  0299                     	;# 
  4701  0299                     	;# 
  4702  029A                     	;# 
  4703  029B                     	;# 
  4704  029C                     	;# 
  4705  029C                     	;# 
  4706  029D                     	;# 
  4707  030C                     	;# 
  4708  030C                     	;# 
  4709  030D                     	;# 
  4710  030E                     	;# 
  4711  030F                     	;# 
  4712  0310                     	;# 
  4713  0310                     	;# 
  4714  0311                     	;# 
  4715  0312                     	;# 
  4716  0313                     	;# 
  4717  0314                     	;# 
  4718  0314                     	;# 
  4719  0315                     	;# 
  4720  0316                     	;# 
  4721  0317                     	;# 
  4722  0318                     	;# 
  4723  0318                     	;# 
  4724  0319                     	;# 
  4725  031A                     	;# 
  4726  031B                     	;# 
  4727  031C                     	;# 
  4728  031C                     	;# 
  4729  031D                     	;# 
  4730  031E                     	;# 
  4731  031F                     	;# 
  4732  038C                     	;# 
  4733  038C                     	;# 
  4734  038D                     	;# 
  4735  038E                     	;# 
  4736  0390                     	;# 
  4737  0390                     	;# 
  4738  0391                     	;# 
  4739  0392                     	;# 
  4740  040C                     	;# 
  4741  040D                     	;# 
  4742  040E                     	;# 
  4743  040F                     	;# 
  4744  0410                     	;# 
  4745  0411                     	;# 
  4746  0416                     	;# 
  4747  0416                     	;# 
  4748  0417                     	;# 
  4749  0418                     	;# 
  4750  0418                     	;# 
  4751  0419                     	;# 
  4752  041A                     	;# 
  4753  041A                     	;# 
  4754  041B                     	;# 
  4755  041C                     	;# 
  4756  041C                     	;# 
  4757  041D                     	;# 
  4758  041E                     	;# 
  4759  041F                     	;# 
  4760  048C                     	;# 
  4761  048C                     	;# 
  4762  048D                     	;# 
  4763  048E                     	;# 
  4764  048F                     	;# 
  4765  048F                     	;# 
  4766  0490                     	;# 
  4767  0491                     	;# 
  4768  0492                     	;# 
  4769  0492                     	;# 
  4770  0493                     	;# 
  4771  0494                     	;# 
  4772  0495                     	;# 
  4773  0495                     	;# 
  4774  0496                     	;# 
  4775  0497                     	;# 
  4776  0498                     	;# 
  4777  0499                     	;# 
  4778  049A                     	;# 
  4779  049B                     	;# 
  4780  049C                     	;# 
  4781  049D                     	;# 
  4782  050C                     	;# 
  4783  050C                     	;# 
  4784  050D                     	;# 
  4785  050E                     	;# 
  4786  050F                     	;# 
  4787  050F                     	;# 
  4788  0510                     	;# 
  4789  0511                     	;# 
  4790  0512                     	;# 
  4791  0512                     	;# 
  4792  0513                     	;# 
  4793  0514                     	;# 
  4794  0515                     	;# 
  4795  0515                     	;# 
  4796  0516                     	;# 
  4797  0517                     	;# 
  4798  0518                     	;# 
  4799  0519                     	;# 
  4800  051A                     	;# 
  4801  051B                     	;# 
  4802  051C                     	;# 
  4803  051D                     	;# 
  4804  058C                     	;# 
  4805  058C                     	;# 
  4806  058D                     	;# 
  4807  058E                     	;# 
  4808  058F                     	;# 
  4809  058F                     	;# 
  4810  0590                     	;# 
  4811  0591                     	;# 
  4812  0592                     	;# 
  4813  0593                     	;# 
  4814  060C                     	;# 
  4815  060D                     	;# 
  4816  060E                     	;# 
  4817  060F                     	;# 
  4818  0610                     	;# 
  4819  0611                     	;# 
  4820  0612                     	;# 
  4821  0613                     	;# 
  4822  0614                     	;# 
  4823  0616                     	;# 
  4824  0617                     	;# 
  4825  0618                     	;# 
  4826  0619                     	;# 
  4827  061A                     	;# 
  4828  061B                     	;# 
  4829  061C                     	;# 
  4830  061D                     	;# 
  4831  061E                     	;# 
  4832  068C                     	;# 
  4833  068D                     	;# 
  4834  068E                     	;# 
  4835  068F                     	;# 
  4836  0690                     	;# 
  4837  0691                     	;# 
  4838  0692                     	;# 
  4839  0693                     	;# 
  4840  0694                     	;# 
  4841  070C                     	;# 
  4842  070D                     	;# 
  4843  070E                     	;# 
  4844  070F                     	;# 
  4845  0710                     	;# 
  4846  0711                     	;# 
  4847  0712                     	;# 
  4848  0713                     	;# 
  4849  0714                     	;# 
  4850  0716                     	;# 
  4851  0717                     	;# 
  4852  0718                     	;# 
  4853  0719                     	;# 
  4854  071A                     	;# 
  4855  071B                     	;# 
  4856  071C                     	;# 
  4857  071D                     	;# 
  4858  071E                     	;# 
  4859  0796                     	;# 
  4860  0797                     	;# 
  4861  0798                     	;# 
  4862  0799                     	;# 
  4863  079A                     	;# 
  4864  079B                     	;# 
  4865  080C                     	;# 
  4866  080D                     	;# 
  4867  080E                     	;# 
  4868  080F                     	;# 
  4869  0810                     	;# 
  4870  0811                     	;# 
  4871  0812                     	;# 
  4872  0813                     	;# 
  4873  0814                     	;# 
  4874  081A                     	;# 
  4875  081B                     	;# 
  4876  081C                     	;# 
  4877  081D                     	;# 
  4878  081E                     	;# 
  4879  081F                     	;# 
  4880  088C                     	;# 
  4881  088D                     	;# 
  4882  088E                     	;# 
  4883  088F                     	;# 
  4884  0890                     	;# 
  4885  0891                     	;# 
  4886  0892                     	;# 
  4887  0893                     	;# 
  4888  0895                     	;# 
  4889  0896                     	;# 
  4890  0897                     	;# 
  4891  0898                     	;# 
  4892  0899                     	;# 
  4893  089A                     	;# 
  4894  089B                     	;# 
  4895  090C                     	;# 
  4896  090E                     	;# 
  4897  090F                     	;# 
  4898  091F                     	;# 
  4899  091F                     	;# 
  4900  098F                     	;# 
  4901  098F                     	;# 
  4902  0990                     	;# 
  4903  0991                     	;# 
  4904  0992                     	;# 
  4905  0993                     	;# 
  4906  0994                     	;# 
  4907  0995                     	;# 
  4908  0996                     	;# 
  4909  0997                     	;# 
  4910  0E0F                     	;# 
  4911  0E10                     	;# 
  4912  0E11                     	;# 
  4913  0E12                     	;# 
  4914  0E13                     	;# 
  4915  0E14                     	;# 
  4916  0E15                     	;# 
  4917  0E16                     	;# 
  4918  0E17                     	;# 
  4919  0E18                     	;# 
  4920  0E19                     	;# 
  4921  0E1A                     	;# 
  4922  0E1B                     	;# 
  4923  0E1C                     	;# 
  4924  0E1D                     	;# 
  4925  0E1E                     	;# 
  4926  0E1F                     	;# 
  4927  0E20                     	;# 
  4928  0E21                     	;# 
  4929  0E22                     	;# 
  4930  0E23                     	;# 
  4931  0E24                     	;# 
  4932  0E25                     	;# 
  4933  0E26                     	;# 
  4934  0E27                     	;# 
  4935  0E28                     	;# 
  4936  0E29                     	;# 
  4937  0E2A                     	;# 
  4938  0E2B                     	;# 
  4939  0E2C                     	;# 
  4940  0E2D                     	;# 
  4941  0E2E                     	;# 
  4942  0E2F                     	;# 
  4943  0E30                     	;# 
  4944  0E31                     	;# 
  4945  0E32                     	;# 
  4946  0E33                     	;# 
  4947  0E34                     	;# 
  4948  0E35                     	;# 
  4949  0E36                     	;# 
  4950  0E37                     	;# 
  4951  0E8F                     	;# 
  4952  0E90                     	;# 
  4953  0E91                     	;# 
  4954  0E92                     	;# 
  4955  0E93                     	;# 
  4956  0E94                     	;# 
  4957  0E95                     	;# 
  4958  0E96                     	;# 
  4959  0E97                     	;# 
  4960  0E9C                     	;# 
  4961  0E9D                     	;# 
  4962  0E9E                     	;# 
  4963  0EA1                     	;# 
  4964  0EA2                     	;# 
  4965  0EA3                     	;# 
  4966  0EA4                     	;# 
  4967  0EA5                     	;# 
  4968  0EA9                     	;# 
  4969  0EAA                     	;# 
  4970  0EAB                     	;# 
  4971  0EAC                     	;# 
  4972  0EB1                     	;# 
  4973  0EB2                     	;# 
  4974  0EB3                     	;# 
  4975  0EB8                     	;# 
  4976  0EB9                     	;# 
  4977  0EBA                     	;# 
  4978  0EBB                     	;# 
  4979  0EBC                     	;# 
  4980  0EBD                     	;# 
  4981  0EBE                     	;# 
  4982  0EC3                     	;# 
  4983  0EC5                     	;# 
  4984  0EC6                     	;# 
  4985  0EC7                     	;# 
  4986  0EC8                     	;# 
  4987  0EC9                     	;# 
  4988  0ECA                     	;# 
  4989  0ECB                     	;# 
  4990  0ECC                     	;# 
  4991  0F10                     	;# 
  4992  0F11                     	;# 
  4993  0F12                     	;# 
  4994  0F13                     	;# 
  4995  0F14                     	;# 
  4996  0F15                     	;# 
  4997  0F16                     	;# 
  4998  0F17                     	;# 
  4999  0F18                     	;# 
  5000  0F19                     	;# 
  5001  0F1A                     	;# 
  5002  0F1B                     	;# 
  5003  0F1C                     	;# 
  5004  0F1D                     	;# 
  5005  0F1E                     	;# 
  5006  0F1F                     	;# 
  5007  0F20                     	;# 
  5008  0F21                     	;# 
  5009  0F22                     	;# 
  5010  0F23                     	;# 
  5011  0F24                     	;# 
  5012  0F25                     	;# 
  5013  0F26                     	;# 
  5014  0F27                     	;# 
  5015  0F28                     	;# 
  5016  0F29                     	;# 
  5017  0F2A                     	;# 
  5018  0F2B                     	;# 
  5019  0F2C                     	;# 
  5020  0F2D                     	;# 
  5021  0F2E                     	;# 
  5022  0F2F                     	;# 
  5023  0F30                     	;# 
  5024  0F31                     	;# 
  5025  0F32                     	;# 
  5026  0F38                     	;# 
  5027  0F39                     	;# 
  5028  0F3A                     	;# 
  5029  0F3B                     	;# 
  5030  0F3C                     	;# 
  5031  0F3D                     	;# 
  5032  0F3E                     	;# 
  5033  0F3F                     	;# 
  5034  0F40                     	;# 
  5035  0F41                     	;# 
  5036  0F43                     	;# 
  5037  0F44                     	;# 
  5038  0F45                     	;# 
  5039  0F46                     	;# 
  5040  0F47                     	;# 
  5041  0F48                     	;# 
  5042  0F49                     	;# 
  5043  0F4A                     	;# 
  5044  0F4B                     	;# 
  5045  0F4C                     	;# 
  5046  0F4E                     	;# 
  5047  0F4F                     	;# 
  5048  0F50                     	;# 
  5049  0F51                     	;# 
  5050  0F52                     	;# 
  5051  0F53                     	;# 
  5052  0F54                     	;# 
  5053  0F55                     	;# 
  5054  0F56                     	;# 
  5055  0F57                     	;# 
  5056  0F59                     	;# 
  5057  0F5A                     	;# 
  5058  0F5B                     	;# 
  5059  0F5C                     	;# 
  5060  0F5D                     	;# 
  5061  0F61                     	;# 
  5062  0F62                     	;# 
  5063  0F64                     	;# 
  5064  0F65                     	;# 
  5065  0F66                     	;# 
  5066  0F67                     	;# 
  5067  0F68                     	;# 
  5068  0F69                     	;# 
  5069  0F6A                     	;# 
  5070  0F6B                     	;# 
  5071  0F6C                     	;# 
  5072  0F6D                     	;# 
  5073  0FE4                     	;# 
  5074  0FE5                     	;# 
  5075  0FE6                     	;# 
  5076  0FE7                     	;# 
  5077  0FE8                     	;# 
  5078  0FE9                     	;# 
  5079  0FEA                     	;# 
  5080  0FEB                     	;# 
  5081  0FED                     	;# 
  5082  0FEE                     	;# 
  5083  0FEF                     	;# 
  5084  0000                     	;# 
  5085  0001                     	;# 
  5086  0002                     	;# 
  5087  0003                     	;# 
  5088  0004                     	;# 
  5089  0005                     	;# 
  5090  0006                     	;# 
  5091  0007                     	;# 
  5092  0008                     	;# 
  5093  0009                     	;# 
  5094  000A                     	;# 
  5095  000B                     	;# 
  5096  000C                     	;# 
  5097  000D                     	;# 
  5098  000E                     	;# 
  5099  000F                     	;# 
  5100  0010                     	;# 
  5101  0011                     	;# 
  5102  0012                     	;# 
  5103  0013                     	;# 
  5104  0014                     	;# 
  5105  0015                     	;# 
  5106  0016                     	;# 
  5107  0017                     	;# 
  5108  0018                     	;# 
  5109  0019                     	;# 
  5110  001A                     	;# 
  5111  001C                     	;# 
  5112  001C                     	;# 
  5113  001D                     	;# 
  5114  001D                     	;# 
  5115  001E                     	;# 
  5116  001F                     	;# 
  5117  008C                     	;# 
  5118  008C                     	;# 
  5119  008D                     	;# 
  5120  008E                     	;# 
  5121  008E                     	;# 
  5122  008F                     	;# 
  5123  0090                     	;# 
  5124  0090                     	;# 
  5125  0091                     	;# 
  5126  0093                     	;# 
  5127  0094                     	;# 
  5128  0095                     	;# 
  5129  0096                     	;# 
  5130  0097                     	;# 
  5131  0098                     	;# 
  5132  0099                     	;# 
  5133  009A                     	;# 
  5134  009B                     	;# 
  5135  009C                     	;# 
  5136  009D                     	;# 
  5137  009E                     	;# 
  5138  010C                     	;# 
  5139  010D                     	;# 
  5140  010E                     	;# 
  5141  010E                     	;# 
  5142  010F                     	;# 
  5143  0110                     	;# 
  5144  0110                     	;# 
  5145  0111                     	;# 
  5146  0112                     	;# 
  5147  0112                     	;# 
  5148  0113                     	;# 
  5149  0114                     	;# 
  5150  0114                     	;# 
  5151  0115                     	;# 
  5152  0116                     	;# 
  5153  0116                     	;# 
  5154  0117                     	;# 
  5155  0119                     	;# 
  5156  0119                     	;# 
  5157  0119                     	;# 
  5158  011A                     	;# 
  5159  011A                     	;# 
  5160  011A                     	;# 
  5161  011B                     	;# 
  5162  011B                     	;# 
  5163  011B                     	;# 
  5164  011B                     	;# 
  5165  011B                     	;# 
  5166  011C                     	;# 
  5167  011C                     	;# 
  5168  011C                     	;# 
  5169  011D                     	;# 
  5170  011D                     	;# 
  5171  011D                     	;# 
  5172  011E                     	;# 
  5173  011E                     	;# 
  5174  011E                     	;# 
  5175  011F                     	;# 
  5176  011F                     	;# 
  5177  011F                     	;# 
  5178  011F                     	;# 
  5179  011F                     	;# 
  5180  018C                     	;# 
  5181  018D                     	;# 
  5182  018E                     	;# 
  5183  018F                     	;# 
  5184  0190                     	;# 
  5185  0191                     	;# 
  5186  0192                     	;# 
  5187  0196                     	;# 
  5188  0197                     	;# 
  5189  0198                     	;# 
  5190  0199                     	;# 
  5191  019A                     	;# 
  5192  019B                     	;# 
  5193  019C                     	;# 
  5194  020C                     	;# 
  5195  020C                     	;# 
  5196  020D                     	;# 
  5197  020E                     	;# 
  5198  020F                     	;# 
  5199  020F                     	;# 
  5200  0210                     	;# 
  5201  0210                     	;# 
  5202  0211                     	;# 
  5203  0211                     	;# 
  5204  0212                     	;# 
  5205  0212                     	;# 
  5206  0213                     	;# 
  5207  0214                     	;# 
  5208  0215                     	;# 
  5209  0215                     	;# 
  5210  0216                     	;# 
  5211  0216                     	;# 
  5212  0217                     	;# 
  5213  0217                     	;# 
  5214  0218                     	;# 
  5215  0218                     	;# 
  5216  0219                     	;# 
  5217  021A                     	;# 
  5218  021B                     	;# 
  5219  021B                     	;# 
  5220  021C                     	;# 
  5221  021C                     	;# 
  5222  021D                     	;# 
  5223  021D                     	;# 
  5224  021E                     	;# 
  5225  021F                     	;# 
  5226  028C                     	;# 
  5227  028C                     	;# 
  5228  028D                     	;# 
  5229  028D                     	;# 
  5230  028E                     	;# 
  5231  028F                     	;# 
  5232  0290                     	;# 
  5233  0290                     	;# 
  5234  0291                     	;# 
  5235  0292                     	;# 
  5236  0292                     	;# 
  5237  0293                     	;# 
  5238  0293                     	;# 
  5239  0294                     	;# 
  5240  0295                     	;# 
  5241  0296                     	;# 
  5242  0296                     	;# 
  5243  0297                     	;# 
  5244  0298                     	;# 
  5245  0298                     	;# 
  5246  0299                     	;# 
  5247  0299                     	;# 
  5248  029A                     	;# 
  5249  029B                     	;# 
  5250  029C                     	;# 
  5251  029C                     	;# 
  5252  029D                     	;# 
  5253  030C                     	;# 
  5254  030C                     	;# 
  5255  030D                     	;# 
  5256  030E                     	;# 
  5257  030F                     	;# 
  5258  0310                     	;# 
  5259  0310                     	;# 
  5260  0311                     	;# 
  5261  0312                     	;# 
  5262  0313                     	;# 
  5263  0314                     	;# 
  5264  0314                     	;# 
  5265  0315                     	;# 
  5266  0316                     	;# 
  5267  0317                     	;# 
  5268  0318                     	;# 
  5269  0318                     	;# 
  5270  0319                     	;# 
  5271  031A                     	;# 
  5272  031B                     	;# 
  5273  031C                     	;# 
  5274  031C                     	;# 
  5275  031D                     	;# 
  5276  031E                     	;# 
  5277  031F                     	;# 
  5278  038C                     	;# 
  5279  038C                     	;# 
  5280  038D                     	;# 
  5281  038E                     	;# 
  5282  0390                     	;# 
  5283  0390                     	;# 
  5284  0391                     	;# 
  5285  0392                     	;# 
  5286  040C                     	;# 
  5287  040D                     	;# 
  5288  040E                     	;# 
  5289  040F                     	;# 
  5290  0410                     	;# 
  5291  0411                     	;# 
  5292  0416                     	;# 
  5293  0416                     	;# 
  5294  0417                     	;# 
  5295  0418                     	;# 
  5296  0418                     	;# 
  5297  0419                     	;# 
  5298  041A                     	;# 
  5299  041A                     	;# 
  5300  041B                     	;# 
  5301  041C                     	;# 
  5302  041C                     	;# 
  5303  041D                     	;# 
  5304  041E                     	;# 
  5305  041F                     	;# 
  5306  048C                     	;# 
  5307  048C                     	;# 
  5308  048D                     	;# 
  5309  048E                     	;# 
  5310  048F                     	;# 
  5311  048F                     	;# 
  5312  0490                     	;# 
  5313  0491                     	;# 
  5314  0492                     	;# 
  5315  0492                     	;# 
  5316  0493                     	;# 
  5317  0494                     	;# 
  5318  0495                     	;# 
  5319  0495                     	;# 
  5320  0496                     	;# 
  5321  0497                     	;# 
  5322  0498                     	;# 
  5323  0499                     	;# 
  5324  049A                     	;# 
  5325  049B                     	;# 
  5326  049C                     	;# 
  5327  049D                     	;# 
  5328  050C                     	;# 
  5329  050C                     	;# 
  5330  050D                     	;# 
  5331  050E                     	;# 
  5332  050F                     	;# 
  5333  050F                     	;# 
  5334  0510                     	;# 
  5335  0511                     	;# 
  5336  0512                     	;# 
  5337  0512                     	;# 
  5338  0513                     	;# 
  5339  0514                     	;# 
  5340  0515                     	;# 
  5341  0515                     	;# 
  5342  0516                     	;# 
  5343  0517                     	;# 
  5344  0518                     	;# 
  5345  0519                     	;# 
  5346  051A                     	;# 
  5347  051B                     	;# 
  5348  051C                     	;# 
  5349  051D                     	;# 
  5350  058C                     	;# 
  5351  058C                     	;# 
  5352  058D                     	;# 
  5353  058E                     	;# 
  5354  058F                     	;# 
  5355  058F                     	;# 
  5356  0590                     	;# 
  5357  0591                     	;# 
  5358  0592                     	;# 
  5359  0593                     	;# 
  5360  060C                     	;# 
  5361  060D                     	;# 
  5362  060E                     	;# 
  5363  060F                     	;# 
  5364  0610                     	;# 
  5365  0611                     	;# 
  5366  0612                     	;# 
  5367  0613                     	;# 
  5368  0614                     	;# 
  5369  0616                     	;# 
  5370  0617                     	;# 
  5371  0618                     	;# 
  5372  0619                     	;# 
  5373  061A                     	;# 
  5374  061B                     	;# 
  5375  061C                     	;# 
  5376  061D                     	;# 
  5377  061E                     	;# 
  5378  068C                     	;# 
  5379  068D                     	;# 
  5380  068E                     	;# 
  5381  068F                     	;# 
  5382  0690                     	;# 
  5383  0691                     	;# 
  5384  0692                     	;# 
  5385  0693                     	;# 
  5386  0694                     	;# 
  5387  070C                     	;# 
  5388  070D                     	;# 
  5389  070E                     	;# 
  5390  070F                     	;# 
  5391  0710                     	;# 
  5392  0711                     	;# 
  5393  0712                     	;# 
  5394  0713                     	;# 
  5395  0714                     	;# 
  5396  0716                     	;# 
  5397  0717                     	;# 
  5398  0718                     	;# 
  5399  0719                     	;# 
  5400  071A                     	;# 
  5401  071B                     	;# 
  5402  071C                     	;# 
  5403  071D                     	;# 
  5404  071E                     	;# 
  5405  0796                     	;# 
  5406  0797                     	;# 
  5407  0798                     	;# 
  5408  0799                     	;# 
  5409  079A                     	;# 
  5410  079B                     	;# 
  5411  080C                     	;# 
  5412  080D                     	;# 
  5413  080E                     	;# 
  5414  080F                     	;# 
  5415  0810                     	;# 
  5416  0811                     	;# 
  5417  0812                     	;# 
  5418  0813                     	;# 
  5419  0814                     	;# 
  5420  081A                     	;# 
  5421  081B                     	;# 
  5422  081C                     	;# 
  5423  081D                     	;# 
  5424  081E                     	;# 
  5425  081F                     	;# 
  5426  088C                     	;# 
  5427  088D                     	;# 
  5428  088E                     	;# 
  5429  088F                     	;# 
  5430  0890                     	;# 
  5431  0891                     	;# 
  5432  0892                     	;# 
  5433  0893                     	;# 
  5434  0895                     	;# 
  5435  0896                     	;# 
  5436  0897                     	;# 
  5437  0898                     	;# 
  5438  0899                     	;# 
  5439  089A                     	;# 
  5440  089B                     	;# 
  5441  090C                     	;# 
  5442  090E                     	;# 
  5443  090F                     	;# 
  5444  091F                     	;# 
  5445  091F                     	;# 
  5446  098F                     	;# 
  5447  098F                     	;# 
  5448  0990                     	;# 
  5449  0991                     	;# 
  5450  0992                     	;# 
  5451  0993                     	;# 
  5452  0994                     	;# 
  5453  0995                     	;# 
  5454  0996                     	;# 
  5455  0997                     	;# 
  5456  0E0F                     	;# 
  5457  0E10                     	;# 
  5458  0E11                     	;# 
  5459  0E12                     	;# 
  5460  0E13                     	;# 
  5461  0E14                     	;# 
  5462  0E15                     	;# 
  5463  0E16                     	;# 
  5464  0E17                     	;# 
  5465  0E18                     	;# 
  5466  0E19                     	;# 
  5467  0E1A                     	;# 
  5468  0E1B                     	;# 
  5469  0E1C                     	;# 
  5470  0E1D                     	;# 
  5471  0E1E                     	;# 
  5472  0E1F                     	;# 
  5473  0E20                     	;# 
  5474  0E21                     	;# 
  5475  0E22                     	;# 
  5476  0E23                     	;# 
  5477  0E24                     	;# 
  5478  0E25                     	;# 
  5479  0E26                     	;# 
  5480  0E27                     	;# 
  5481  0E28                     	;# 
  5482  0E29                     	;# 
  5483  0E2A                     	;# 
  5484  0E2B                     	;# 
  5485  0E2C                     	;# 
  5486  0E2D                     	;# 
  5487  0E2E                     	;# 
  5488  0E2F                     	;# 
  5489  0E30                     	;# 
  5490  0E31                     	;# 
  5491  0E32                     	;# 
  5492  0E33                     	;# 
  5493  0E34                     	;# 
  5494  0E35                     	;# 
  5495  0E36                     	;# 
  5496  0E37                     	;# 
  5497  0E8F                     	;# 
  5498  0E90                     	;# 
  5499  0E91                     	;# 
  5500  0E92                     	;# 
  5501  0E93                     	;# 
  5502  0E94                     	;# 
  5503  0E95                     	;# 
  5504  0E96                     	;# 
  5505  0E97                     	;# 
  5506  0E9C                     	;# 
  5507  0E9D                     	;# 
  5508  0E9E                     	;# 
  5509  0EA1                     	;# 
  5510  0EA2                     	;# 
  5511  0EA3                     	;# 
  5512  0EA4                     	;# 
  5513  0EA5                     	;# 
  5514  0EA9                     	;# 
  5515  0EAA                     	;# 
  5516  0EAB                     	;# 
  5517  0EAC                     	;# 
  5518  0EB1                     	;# 
  5519  0EB2                     	;# 
  5520  0EB3                     	;# 
  5521  0EB8                     	;# 
  5522  0EB9                     	;# 
  5523  0EBA                     	;# 
  5524  0EBB                     	;# 
  5525  0EBC                     	;# 
  5526  0EBD                     	;# 
  5527  0EBE                     	;# 
  5528  0EC3                     	;# 
  5529  0EC5                     	;# 
  5530  0EC6                     	;# 
  5531  0EC7                     	;# 
  5532  0EC8                     	;# 
  5533  0EC9                     	;# 
  5534  0ECA                     	;# 
  5535  0ECB                     	;# 
  5536  0ECC                     	;# 
  5537  0F10                     	;# 
  5538  0F11                     	;# 
  5539  0F12                     	;# 
  5540  0F13                     	;# 
  5541  0F14                     	;# 
  5542  0F15                     	;# 
  5543  0F16                     	;# 
  5544  0F17                     	;# 
  5545  0F18                     	;# 
  5546  0F19                     	;# 
  5547  0F1A                     	;# 
  5548  0F1B                     	;# 
  5549  0F1C                     	;# 
  5550  0F1D                     	;# 
  5551  0F1E                     	;# 
  5552  0F1F                     	;# 
  5553  0F20                     	;# 
  5554  0F21                     	;# 
  5555  0F22                     	;# 
  5556  0F23                     	;# 
  5557  0F24                     	;# 
  5558  0F25                     	;# 
  5559  0F26                     	;# 
  5560  0F27                     	;# 
  5561  0F28                     	;# 
  5562  0F29                     	;# 
  5563  0F2A                     	;# 
  5564  0F2B                     	;# 
  5565  0F2C                     	;# 
  5566  0F2D                     	;# 
  5567  0F2E                     	;# 
  5568  0F2F                     	;# 
  5569  0F30                     	;# 
  5570  0F31                     	;# 
  5571  0F32                     	;# 
  5572  0F38                     	;# 
  5573  0F39                     	;# 
  5574  0F3A                     	;# 
  5575  0F3B                     	;# 
  5576  0F3C                     	;# 
  5577  0F3D                     	;# 
  5578  0F3E                     	;# 
  5579  0F3F                     	;# 
  5580  0F40                     	;# 
  5581  0F41                     	;# 
  5582  0F43                     	;# 
  5583  0F44                     	;# 
  5584  0F45                     	;# 
  5585  0F46                     	;# 
  5586  0F47                     	;# 
  5587  0F48                     	;# 
  5588  0F49                     	;# 
  5589  0F4A                     	;# 
  5590  0F4B                     	;# 
  5591  0F4C                     	;# 
  5592  0F4E                     	;# 
  5593  0F4F                     	;# 
  5594  0F50                     	;# 
  5595  0F51                     	;# 
  5596  0F52                     	;# 
  5597  0F53                     	;# 
  5598  0F54                     	;# 
  5599  0F55                     	;# 
  5600  0F56                     	;# 
  5601  0F57                     	;# 
  5602  0F59                     	;# 
  5603  0F5A                     	;# 
  5604  0F5B                     	;# 
  5605  0F5C                     	;# 
  5606  0F5D                     	;# 
  5607  0F61                     	;# 
  5608  0F62                     	;# 
  5609  0F64                     	;# 
  5610  0F65                     	;# 
  5611  0F66                     	;# 
  5612  0F67                     	;# 
  5613  0F68                     	;# 
  5614  0F69                     	;# 
  5615  0F6A                     	;# 
  5616  0F6B                     	;# 
  5617  0F6C                     	;# 
  5618  0F6D                     	;# 
  5619  0FE4                     	;# 
  5620  0FE5                     	;# 
  5621  0FE6                     	;# 
  5622  0FE7                     	;# 
  5623  0FE8                     	;# 
  5624  0FE9                     	;# 
  5625  0FEA                     	;# 
  5626  0FEB                     	;# 
  5627  0FED                     	;# 
  5628  0FEE                     	;# 
  5629  0FEF                     	;# 
  5630  0000                     	;# 
  5631  0001                     	;# 
  5632  0002                     	;# 
  5633  0003                     	;# 
  5634  0004                     	;# 
  5635  0005                     	;# 
  5636  0006                     	;# 
  5637  0007                     	;# 
  5638  0008                     	;# 
  5639  0009                     	;# 
  5640  000A                     	;# 
  5641  000B                     	;# 
  5642  000C                     	;# 
  5643  000D                     	;# 
  5644  000E                     	;# 
  5645  000F                     	;# 
  5646  0010                     	;# 
  5647  0011                     	;# 
  5648  0012                     	;# 
  5649  0013                     	;# 
  5650  0014                     	;# 
  5651  0015                     	;# 
  5652  0016                     	;# 
  5653  0017                     	;# 
  5654  0018                     	;# 
  5655  0019                     	;# 
  5656  001A                     	;# 
  5657  001C                     	;# 
  5658  001C                     	;# 
  5659  001D                     	;# 
  5660  001D                     	;# 
  5661  001E                     	;# 
  5662  001F                     	;# 
  5663  008C                     	;# 
  5664  008C                     	;# 
  5665  008D                     	;# 
  5666  008E                     	;# 
  5667  008E                     	;# 
  5668  008F                     	;# 
  5669  0090                     	;# 
  5670  0090                     	;# 
  5671  0091                     	;# 
  5672  0093                     	;# 
  5673  0094                     	;# 
  5674  0095                     	;# 
  5675  0096                     	;# 
  5676  0097                     	;# 
  5677  0098                     	;# 
  5678  0099                     	;# 
  5679  009A                     	;# 
  5680  009B                     	;# 
  5681  009C                     	;# 
  5682  009D                     	;# 
  5683  009E                     	;# 
  5684  010C                     	;# 
  5685  010D                     	;# 
  5686  010E                     	;# 
  5687  010E                     	;# 
  5688  010F                     	;# 
  5689  0110                     	;# 
  5690  0110                     	;# 
  5691  0111                     	;# 
  5692  0112                     	;# 
  5693  0112                     	;# 
  5694  0113                     	;# 
  5695  0114                     	;# 
  5696  0114                     	;# 
  5697  0115                     	;# 
  5698  0116                     	;# 
  5699  0116                     	;# 
  5700  0117                     	;# 
  5701  0119                     	;# 
  5702  0119                     	;# 
  5703  0119                     	;# 
  5704  011A                     	;# 
  5705  011A                     	;# 
  5706  011A                     	;# 
  5707  011B                     	;# 
  5708  011B                     	;# 
  5709  011B                     	;# 
  5710  011B                     	;# 
  5711  011B                     	;# 
  5712  011C                     	;# 
  5713  011C                     	;# 
  5714  011C                     	;# 
  5715  011D                     	;# 
  5716  011D                     	;# 
  5717  011D                     	;# 
  5718  011E                     	;# 
  5719  011E                     	;# 
  5720  011E                     	;# 
  5721  011F                     	;# 
  5722  011F                     	;# 
  5723  011F                     	;# 
  5724  011F                     	;# 
  5725  011F                     	;# 
  5726  018C                     	;# 
  5727  018D                     	;# 
  5728  018E                     	;# 
  5729  018F                     	;# 
  5730  0190                     	;# 
  5731  0191                     	;# 
  5732  0192                     	;# 
  5733  0196                     	;# 
  5734  0197                     	;# 
  5735  0198                     	;# 
  5736  0199                     	;# 
  5737  019A                     	;# 
  5738  019B                     	;# 
  5739  019C                     	;# 
  5740  020C                     	;# 
  5741  020C                     	;# 
  5742  020D                     	;# 
  5743  020E                     	;# 
  5744  020F                     	;# 
  5745  020F                     	;# 
  5746  0210                     	;# 
  5747  0210                     	;# 
  5748  0211                     	;# 
  5749  0211                     	;# 
  5750  0212                     	;# 
  5751  0212                     	;# 
  5752  0213                     	;# 
  5753  0214                     	;# 
  5754  0215                     	;# 
  5755  0215                     	;# 
  5756  0216                     	;# 
  5757  0216                     	;# 
  5758  0217                     	;# 
  5759  0217                     	;# 
  5760  0218                     	;# 
  5761  0218                     	;# 
  5762  0219                     	;# 
  5763  021A                     	;# 
  5764  021B                     	;# 
  5765  021B                     	;# 
  5766  021C                     	;# 
  5767  021C                     	;# 
  5768  021D                     	;# 
  5769  021D                     	;# 
  5770  021E                     	;# 
  5771  021F                     	;# 
  5772  028C                     	;# 
  5773  028C                     	;# 
  5774  028D                     	;# 
  5775  028D                     	;# 
  5776  028E                     	;# 
  5777  028F                     	;# 
  5778  0290                     	;# 
  5779  0290                     	;# 
  5780  0291                     	;# 
  5781  0292                     	;# 
  5782  0292                     	;# 
  5783  0293                     	;# 
  5784  0293                     	;# 
  5785  0294                     	;# 
  5786  0295                     	;# 
  5787  0296                     	;# 
  5788  0296                     	;# 
  5789  0297                     	;# 
  5790  0298                     	;# 
  5791  0298                     	;# 
  5792  0299                     	;# 
  5793  0299                     	;# 
  5794  029A                     	;# 
  5795  029B                     	;# 
  5796  029C                     	;# 
  5797  029C                     	;# 
  5798  029D                     	;# 
  5799  030C                     	;# 
  5800  030C                     	;# 
  5801  030D                     	;# 
  5802  030E                     	;# 
  5803  030F                     	;# 
  5804  0310                     	;# 
  5805  0310                     	;# 
  5806  0311                     	;# 
  5807  0312                     	;# 
  5808  0313                     	;# 
  5809  0314                     	;# 
  5810  0314                     	;# 
  5811  0315                     	;# 
  5812  0316                     	;# 
  5813  0317                     	;# 
  5814  0318                     	;# 
  5815  0318                     	;# 
  5816  0319                     	;# 
  5817  031A                     	;# 
  5818  031B                     	;# 
  5819  031C                     	;# 
  5820  031C                     	;# 
  5821  031D                     	;# 
  5822  031E                     	;# 
  5823  031F                     	;# 
  5824  038C                     	;# 
  5825  038C                     	;# 
  5826  038D                     	;# 
  5827  038E                     	;# 
  5828  0390                     	;# 
  5829  0390                     	;# 
  5830  0391                     	;# 
  5831  0392                     	;# 
  5832  040C                     	;# 
  5833  040D                     	;# 
  5834  040E                     	;# 
  5835  040F                     	;# 
  5836  0410                     	;# 
  5837  0411                     	;# 
  5838  0416                     	;# 
  5839  0416                     	;# 
  5840  0417                     	;# 
  5841  0418                     	;# 
  5842  0418                     	;# 
  5843  0419                     	;# 
  5844  041A                     	;# 
  5845  041A                     	;# 
  5846  041B                     	;# 
  5847  041C                     	;# 
  5848  041C                     	;# 
  5849  041D                     	;# 
  5850  041E                     	;# 
  5851  041F                     	;# 
  5852  048C                     	;# 
  5853  048C                     	;# 
  5854  048D                     	;# 
  5855  048E                     	;# 
  5856  048F                     	;# 
  5857  048F                     	;# 
  5858  0490                     	;# 
  5859  0491                     	;# 
  5860  0492                     	;# 
  5861  0492                     	;# 
  5862  0493                     	;# 
  5863  0494                     	;# 
  5864  0495                     	;# 
  5865  0495                     	;# 
  5866  0496                     	;# 
  5867  0497                     	;# 
  5868  0498                     	;# 
  5869  0499                     	;# 
  5870  049A                     	;# 
  5871  049B                     	;# 
  5872  049C                     	;# 
  5873  049D                     	;# 
  5874  050C                     	;# 
  5875  050C                     	;# 
  5876  050D                     	;# 
  5877  050E                     	;# 
  5878  050F                     	;# 
  5879  050F                     	;# 
  5880  0510                     	;# 
  5881  0511                     	;# 
  5882  0512                     	;# 
  5883  0512                     	;# 
  5884  0513                     	;# 
  5885  0514                     	;# 
  5886  0515                     	;# 
  5887  0515                     	;# 
  5888  0516                     	;# 
  5889  0517                     	;# 
  5890  0518                     	;# 
  5891  0519                     	;# 
  5892  051A                     	;# 
  5893  051B                     	;# 
  5894  051C                     	;# 
  5895  051D                     	;# 
  5896  058C                     	;# 
  5897  058C                     	;# 
  5898  058D                     	;# 
  5899  058E                     	;# 
  5900  058F                     	;# 
  5901  058F                     	;# 
  5902  0590                     	;# 
  5903  0591                     	;# 
  5904  0592                     	;# 
  5905  0593                     	;# 
  5906  060C                     	;# 
  5907  060D                     	;# 
  5908  060E                     	;# 
  5909  060F                     	;# 
  5910  0610                     	;# 
  5911  0611                     	;# 
  5912  0612                     	;# 
  5913  0613                     	;# 
  5914  0614                     	;# 
  5915  0616                     	;# 
  5916  0617                     	;# 
  5917  0618                     	;# 
  5918  0619                     	;# 
  5919  061A                     	;# 
  5920  061B                     	;# 
  5921  061C                     	;# 
  5922  061D                     	;# 
  5923  061E                     	;# 
  5924  068C                     	;# 
  5925  068D                     	;# 
  5926  068E                     	;# 
  5927  068F                     	;# 
  5928  0690                     	;# 
  5929  0691                     	;# 
  5930  0692                     	;# 
  5931  0693                     	;# 
  5932  0694                     	;# 
  5933  070C                     	;# 
  5934  070D                     	;# 
  5935  070E                     	;# 
  5936  070F                     	;# 
  5937  0710                     	;# 
  5938  0711                     	;# 
  5939  0712                     	;# 
  5940  0713                     	;# 
  5941  0714                     	;# 
  5942  0716                     	;# 
  5943  0717                     	;# 
  5944  0718                     	;# 
  5945  0719                     	;# 
  5946  071A                     	;# 
  5947  071B                     	;# 
  5948  071C                     	;# 
  5949  071D                     	;# 
  5950  071E                     	;# 
  5951  0796                     	;# 
  5952  0797                     	;# 
  5953  0798                     	;# 
  5954  0799                     	;# 
  5955  079A                     	;# 
  5956  079B                     	;# 
  5957  080C                     	;# 
  5958  080D                     	;# 
  5959  080E                     	;# 
  5960  080F                     	;# 
  5961  0810                     	;# 
  5962  0811                     	;# 
  5963  0812                     	;# 
  5964  0813                     	;# 
  5965  0814                     	;# 
  5966  081A                     	;# 
  5967  081B                     	;# 
  5968  081C                     	;# 
  5969  081D                     	;# 
  5970  081E                     	;# 
  5971  081F                     	;# 
  5972  088C                     	;# 
  5973  088D                     	;# 
  5974  088E                     	;# 
  5975  088F                     	;# 
  5976  0890                     	;# 
  5977  0891                     	;# 
  5978  0892                     	;# 
  5979  0893                     	;# 
  5980  0895                     	;# 
  5981  0896                     	;# 
  5982  0897                     	;# 
  5983  0898                     	;# 
  5984  0899                     	;# 
  5985  089A                     	;# 
  5986  089B                     	;# 
  5987  090C                     	;# 
  5988  090E                     	;# 
  5989  090F                     	;# 
  5990  091F                     	;# 
  5991  091F                     	;# 
  5992  098F                     	;# 
  5993  098F                     	;# 
  5994  0990                     	;# 
  5995  0991                     	;# 
  5996  0992                     	;# 
  5997  0993                     	;# 
  5998  0994                     	;# 
  5999  0995                     	;# 
  6000  0996                     	;# 
  6001  0997                     	;# 
  6002  0E0F                     	;# 
  6003  0E10                     	;# 
  6004  0E11                     	;# 
  6005  0E12                     	;# 
  6006  0E13                     	;# 
  6007  0E14                     	;# 
  6008  0E15                     	;# 
  6009  0E16                     	;# 
  6010  0E17                     	;# 
  6011  0E18                     	;# 
  6012  0E19                     	;# 
  6013  0E1A                     	;# 
  6014  0E1B                     	;# 
  6015  0E1C                     	;# 
  6016  0E1D                     	;# 
  6017  0E1E                     	;# 
  6018  0E1F                     	;# 
  6019  0E20                     	;# 
  6020  0E21                     	;# 
  6021  0E22                     	;# 
  6022  0E23                     	;# 
  6023  0E24                     	;# 
  6024  0E25                     	;# 
  6025  0E26                     	;# 
  6026  0E27                     	;# 
  6027  0E28                     	;# 
  6028  0E29                     	;# 
  6029  0E2A                     	;# 
  6030  0E2B                     	;# 
  6031  0E2C                     	;# 
  6032  0E2D                     	;# 
  6033  0E2E                     	;# 
  6034  0E2F                     	;# 
  6035  0E30                     	;# 
  6036  0E31                     	;# 
  6037  0E32                     	;# 
  6038  0E33                     	;# 
  6039  0E34                     	;# 
  6040  0E35                     	;# 
  6041  0E36                     	;# 
  6042  0E37                     	;# 
  6043  0E8F                     	;# 
  6044  0E90                     	;# 
  6045  0E91                     	;# 
  6046  0E92                     	;# 
  6047  0E93                     	;# 
  6048  0E94                     	;# 
  6049  0E95                     	;# 
  6050  0E96                     	;# 
  6051  0E97                     	;# 
  6052  0E9C                     	;# 
  6053  0E9D                     	;# 
  6054  0E9E                     	;# 
  6055  0EA1                     	;# 
  6056  0EA2                     	;# 
  6057  0EA3                     	;# 
  6058  0EA4                     	;# 
  6059  0EA5                     	;# 
  6060  0EA9                     	;# 
  6061  0EAA                     	;# 
  6062  0EAB                     	;# 
  6063  0EAC                     	;# 
  6064  0EB1                     	;# 
  6065  0EB2                     	;# 
  6066  0EB3                     	;# 
  6067  0EB8                     	;# 
  6068  0EB9                     	;# 
  6069  0EBA                     	;# 
  6070  0EBB                     	;# 
  6071  0EBC                     	;# 
  6072  0EBD                     	;# 
  6073  0EBE                     	;# 
  6074  0EC3                     	;# 
  6075  0EC5                     	;# 
  6076  0EC6                     	;# 
  6077  0EC7                     	;# 
  6078  0EC8                     	;# 
  6079  0EC9                     	;# 
  6080  0ECA                     	;# 
  6081  0ECB                     	;# 
  6082  0ECC                     	;# 
  6083  0F10                     	;# 
  6084  0F11                     	;# 
  6085  0F12                     	;# 
  6086  0F13                     	;# 
  6087  0F14                     	;# 
  6088  0F15                     	;# 
  6089  0F16                     	;# 
  6090  0F17                     	;# 
  6091  0F18                     	;# 
  6092  0F19                     	;# 
  6093  0F1A                     	;# 
  6094  0F1B                     	;# 
  6095  0F1C                     	;# 
  6096  0F1D                     	;# 
  6097  0F1E                     	;# 
  6098  0F1F                     	;# 
  6099  0F20                     	;# 
  6100  0F21                     	;# 
  6101  0F22                     	;# 
  6102  0F23                     	;# 
  6103  0F24                     	;# 
  6104  0F25                     	;# 
  6105  0F26                     	;# 
  6106  0F27                     	;# 
  6107  0F28                     	;# 
  6108  0F29                     	;# 
  6109  0F2A                     	;# 
  6110  0F2B                     	;# 
  6111  0F2C                     	;# 
  6112  0F2D                     	;# 
  6113  0F2E                     	;# 
  6114  0F2F                     	;# 
  6115  0F30                     	;# 
  6116  0F31                     	;# 
  6117  0F32                     	;# 
  6118  0F38                     	;# 
  6119  0F39                     	;# 
  6120  0F3A                     	;# 
  6121  0F3B                     	;# 
  6122  0F3C                     	;# 
  6123  0F3D                     	;# 
  6124  0F3E                     	;# 
  6125  0F3F                     	;# 
  6126  0F40                     	;# 
  6127  0F41                     	;# 
  6128  0F43                     	;# 
  6129  0F44                     	;# 
  6130  0F45                     	;# 
  6131  0F46                     	;# 
  6132  0F47                     	;# 
  6133  0F48                     	;# 
  6134  0F49                     	;# 
  6135  0F4A                     	;# 
  6136  0F4B                     	;# 
  6137  0F4C                     	;# 
  6138  0F4E                     	;# 
  6139  0F4F                     	;# 
  6140  0F50                     	;# 
  6141  0F51                     	;# 
  6142  0F52                     	;# 
  6143  0F53                     	;# 
  6144  0F54                     	;# 
  6145  0F55                     	;# 
  6146  0F56                     	;# 
  6147  0F57                     	;# 
  6148  0F59                     	;# 
  6149  0F5A                     	;# 
  6150  0F5B                     	;# 
  6151  0F5C                     	;# 
  6152  0F5D                     	;# 
  6153  0F61                     	;# 
  6154  0F62                     	;# 
  6155  0F64                     	;# 
  6156  0F65                     	;# 
  6157  0F66                     	;# 
  6158  0F67                     	;# 
  6159  0F68                     	;# 
  6160  0F69                     	;# 
  6161  0F6A                     	;# 
  6162  0F6B                     	;# 
  6163  0F6C                     	;# 
  6164  0F6D                     	;# 
  6165  0FE4                     	;# 
  6166  0FE5                     	;# 
  6167  0FE6                     	;# 
  6168  0FE7                     	;# 
  6169  0FE8                     	;# 
  6170  0FE9                     	;# 
  6171  0FEA                     	;# 
  6172  0FEB                     	;# 
  6173  0FED                     	;# 
  6174  0FEE                     	;# 
  6175  0FEF                     	;# 
  6176  0000                     	;# 
  6177  0001                     	;# 
  6178  0002                     	;# 
  6179  0003                     	;# 
  6180  0004                     	;# 
  6181  0005                     	;# 
  6182  0006                     	;# 
  6183  0007                     	;# 
  6184  0008                     	;# 
  6185  0009                     	;# 
  6186  000A                     	;# 
  6187  000B                     	;# 
  6188  000C                     	;# 
  6189  000D                     	;# 
  6190  000E                     	;# 
  6191  000F                     	;# 
  6192  0010                     	;# 
  6193  0011                     	;# 
  6194  0012                     	;# 
  6195  0013                     	;# 
  6196  0014                     	;# 
  6197  0015                     	;# 
  6198  0016                     	;# 
  6199  0017                     	;# 
  6200  0018                     	;# 
  6201  0019                     	;# 
  6202  001A                     	;# 
  6203  001C                     	;# 
  6204  001C                     	;# 
  6205  001D                     	;# 
  6206  001D                     	;# 
  6207  001E                     	;# 
  6208  001F                     	;# 
  6209  008C                     	;# 
  6210  008C                     	;# 
  6211  008D                     	;# 
  6212  008E                     	;# 
  6213  008E                     	;# 
  6214  008F                     	;# 
  6215  0090                     	;# 
  6216  0090                     	;# 
  6217  0091                     	;# 
  6218  0093                     	;# 
  6219  0094                     	;# 
  6220  0095                     	;# 
  6221  0096                     	;# 
  6222  0097                     	;# 
  6223  0098                     	;# 
  6224  0099                     	;# 
  6225  009A                     	;# 
  6226  009B                     	;# 
  6227  009C                     	;# 
  6228  009D                     	;# 
  6229  009E                     	;# 
  6230  010C                     	;# 
  6231  010D                     	;# 
  6232  010E                     	;# 
  6233  010E                     	;# 
  6234  010F                     	;# 
  6235  0110                     	;# 
  6236  0110                     	;# 
  6237  0111                     	;# 
  6238  0112                     	;# 
  6239  0112                     	;# 
  6240  0113                     	;# 
  6241  0114                     	;# 
  6242  0114                     	;# 
  6243  0115                     	;# 
  6244  0116                     	;# 
  6245  0116                     	;# 
  6246  0117                     	;# 
  6247  0119                     	;# 
  6248  0119                     	;# 
  6249  0119                     	;# 
  6250  011A                     	;# 
  6251  011A                     	;# 
  6252  011A                     	;# 
  6253  011B                     	;# 
  6254  011B                     	;# 
  6255  011B                     	;# 
  6256  011B                     	;# 
  6257  011B                     	;# 
  6258  011C                     	;# 
  6259  011C                     	;# 
  6260  011C                     	;# 
  6261  011D                     	;# 
  6262  011D                     	;# 
  6263  011D                     	;# 
  6264  011E                     	;# 
  6265  011E                     	;# 
  6266  011E                     	;# 
  6267  011F                     	;# 
  6268  011F                     	;# 
  6269  011F                     	;# 
  6270  011F                     	;# 
  6271  011F                     	;# 
  6272  018C                     	;# 
  6273  018D                     	;# 
  6274  018E                     	;# 
  6275  018F                     	;# 
  6276  0190                     	;# 
  6277  0191                     	;# 
  6278  0192                     	;# 
  6279  0196                     	;# 
  6280  0197                     	;# 
  6281  0198                     	;# 
  6282  0199                     	;# 
  6283  019A                     	;# 
  6284  019B                     	;# 
  6285  019C                     	;# 
  6286  020C                     	;# 
  6287  020C                     	;# 
  6288  020D                     	;# 
  6289  020E                     	;# 
  6290  020F                     	;# 
  6291  020F                     	;# 
  6292  0210                     	;# 
  6293  0210                     	;# 
  6294  0211                     	;# 
  6295  0211                     	;# 
  6296  0212                     	;# 
  6297  0212                     	;# 
  6298  0213                     	;# 
  6299  0214                     	;# 
  6300  0215                     	;# 
  6301  0215                     	;# 
  6302  0216                     	;# 
  6303  0216                     	;# 
  6304  0217                     	;# 
  6305  0217                     	;# 
  6306  0218                     	;# 
  6307  0218                     	;# 
  6308  0219                     	;# 
  6309  021A                     	;# 
  6310  021B                     	;# 
  6311  021B                     	;# 
  6312  021C                     	;# 
  6313  021C                     	;# 
  6314  021D                     	;# 
  6315  021D                     	;# 
  6316  021E                     	;# 
  6317  021F                     	;# 
  6318  028C                     	;# 
  6319  028C                     	;# 
  6320  028D                     	;# 
  6321  028D                     	;# 
  6322  028E                     	;# 
  6323  028F                     	;# 
  6324  0290                     	;# 
  6325  0290                     	;# 
  6326  0291                     	;# 
  6327  0292                     	;# 
  6328  0292                     	;# 
  6329  0293                     	;# 
  6330  0293                     	;# 
  6331  0294                     	;# 
  6332  0295                     	;# 
  6333  0296                     	;# 
  6334  0296                     	;# 
  6335  0297                     	;# 
  6336  0298                     	;# 
  6337  0298                     	;# 
  6338  0299                     	;# 
  6339  0299                     	;# 
  6340  029A                     	;# 
  6341  029B                     	;# 
  6342  029C                     	;# 
  6343  029C                     	;# 
  6344  029D                     	;# 
  6345  030C                     	;# 
  6346  030C                     	;# 
  6347  030D                     	;# 
  6348  030E                     	;# 
  6349  030F                     	;# 
  6350  0310                     	;# 
  6351  0310                     	;# 
  6352  0311                     	;# 
  6353  0312                     	;# 
  6354  0313                     	;# 
  6355  0314                     	;# 
  6356  0314                     	;# 
  6357  0315                     	;# 
  6358  0316                     	;# 
  6359  0317                     	;# 
  6360  0318                     	;# 
  6361  0318                     	;# 
  6362  0319                     	;# 
  6363  031A                     	;# 
  6364  031B                     	;# 
  6365  031C                     	;# 
  6366  031C                     	;# 
  6367  031D                     	;# 
  6368  031E                     	;# 
  6369  031F                     	;# 
  6370  038C                     	;# 
  6371  038C                     	;# 
  6372  038D                     	;# 
  6373  038E                     	;# 
  6374  0390                     	;# 
  6375  0390                     	;# 
  6376  0391                     	;# 
  6377  0392                     	;# 
  6378  040C                     	;# 
  6379  040D                     	;# 
  6380  040E                     	;# 
  6381  040F                     	;# 
  6382  0410                     	;# 
  6383  0411                     	;# 
  6384  0416                     	;# 
  6385  0416                     	;# 
  6386  0417                     	;# 
  6387  0418                     	;# 
  6388  0418                     	;# 
  6389  0419                     	;# 
  6390  041A                     	;# 
  6391  041A                     	;# 
  6392  041B                     	;# 
  6393  041C                     	;# 
  6394  041C                     	;# 
  6395  041D                     	;# 
  6396  041E                     	;# 
  6397  041F                     	;# 
  6398  048C                     	;# 
  6399  048C                     	;# 
  6400  048D                     	;# 
  6401  048E                     	;# 
  6402  048F                     	;# 
  6403  048F                     	;# 
  6404  0490                     	;# 
  6405  0491                     	;# 
  6406  0492                     	;# 
  6407  0492                     	;# 
  6408  0493                     	;# 
  6409  0494                     	;# 
  6410  0495                     	;# 
  6411  0495                     	;# 
  6412  0496                     	;# 
  6413  0497                     	;# 
  6414  0498                     	;# 
  6415  0499                     	;# 
  6416  049A                     	;# 
  6417  049B                     	;# 
  6418  049C                     	;# 
  6419  049D                     	;# 
  6420  050C                     	;# 
  6421  050C                     	;# 
  6422  050D                     	;# 
  6423  050E                     	;# 
  6424  050F                     	;# 
  6425  050F                     	;# 
  6426  0510                     	;# 
  6427  0511                     	;# 
  6428  0512                     	;# 
  6429  0512                     	;# 
  6430  0513                     	;# 
  6431  0514                     	;# 
  6432  0515                     	;# 
  6433  0515                     	;# 
  6434  0516                     	;# 
  6435  0517                     	;# 
  6436  0518                     	;# 
  6437  0519                     	;# 
  6438  051A                     	;# 
  6439  051B                     	;# 
  6440  051C                     	;# 
  6441  051D                     	;# 
  6442  058C                     	;# 
  6443  058C                     	;# 
  6444  058D                     	;# 
  6445  058E                     	;# 
  6446  058F                     	;# 
  6447  058F                     	;# 
  6448  0590                     	;# 
  6449  0591                     	;# 
  6450  0592                     	;# 
  6451  0593                     	;# 
  6452  060C                     	;# 
  6453  060D                     	;# 
  6454  060E                     	;# 
  6455  060F                     	;# 
  6456  0610                     	;# 
  6457  0611                     	;# 
  6458  0612                     	;# 
  6459  0613                     	;# 
  6460  0614                     	;# 
  6461  0616                     	;# 
  6462  0617                     	;# 
  6463  0618                     	;# 
  6464  0619                     	;# 
  6465  061A                     	;# 
  6466  061B                     	;# 
  6467  061C                     	;# 
  6468  061D                     	;# 
  6469  061E                     	;# 
  6470  068C                     	;# 
  6471  068D                     	;# 
  6472  068E                     	;# 
  6473  068F                     	;# 
  6474  0690                     	;# 
  6475  0691                     	;# 
  6476  0692                     	;# 
  6477  0693                     	;# 
  6478  0694                     	;# 
  6479  070C                     	;# 
  6480  070D                     	;# 
  6481  070E                     	;# 
  6482  070F                     	;# 
  6483  0710                     	;# 
  6484  0711                     	;# 
  6485  0712                     	;# 
  6486  0713                     	;# 
  6487  0714                     	;# 
  6488  0716                     	;# 
  6489  0717                     	;# 
  6490  0718                     	;# 
  6491  0719                     	;# 
  6492  071A                     	;# 
  6493  071B                     	;# 
  6494  071C                     	;# 
  6495  071D                     	;# 
  6496  071E                     	;# 
  6497  0796                     	;# 
  6498  0797                     	;# 
  6499  0798                     	;# 
  6500  0799                     	;# 
  6501  079A                     	;# 
  6502  079B                     	;# 
  6503  080C                     	;# 
  6504  080D                     	;# 
  6505  080E                     	;# 
  6506  080F                     	;# 
  6507  0810                     	;# 
  6508  0811                     	;# 
  6509  0812                     	;# 
  6510  0813                     	;# 
  6511  0814                     	;# 
  6512  081A                     	;# 
  6513  081B                     	;# 
  6514  081C                     	;# 
  6515  081D                     	;# 
  6516  081E                     	;# 
  6517  081F                     	;# 
  6518  088C                     	;# 
  6519  088D                     	;# 
  6520  088E                     	;# 
  6521  088F                     	;# 
  6522  0890                     	;# 
  6523  0891                     	;# 
  6524  0892                     	;# 
  6525  0893                     	;# 
  6526  0895                     	;# 
  6527  0896                     	;# 
  6528  0897                     	;# 
  6529  0898                     	;# 
  6530  0899                     	;# 
  6531  089A                     	;# 
  6532  089B                     	;# 
  6533  090C                     	;# 
  6534  090E                     	;# 
  6535  090F                     	;# 
  6536  091F                     	;# 
  6537  091F                     	;# 
  6538  098F                     	;# 
  6539  098F                     	;# 
  6540  0990                     	;# 
  6541  0991                     	;# 
  6542  0992                     	;# 
  6543  0993                     	;# 
  6544  0994                     	;# 
  6545  0995                     	;# 
  6546  0996                     	;# 
  6547  0997                     	;# 
  6548  0E0F                     	;# 
  6549  0E10                     	;# 
  6550  0E11                     	;# 
  6551  0E12                     	;# 
  6552  0E13                     	;# 
  6553  0E14                     	;# 
  6554  0E15                     	;# 
  6555  0E16                     	;# 
  6556  0E17                     	;# 
  6557  0E18                     	;# 
  6558  0E19                     	;# 
  6559  0E1A                     	;# 
  6560  0E1B                     	;# 
  6561  0E1C                     	;# 
  6562  0E1D                     	;# 
  6563  0E1E                     	;# 
  6564  0E1F                     	;# 
  6565  0E20                     	;# 
  6566  0E21                     	;# 
  6567  0E22                     	;# 
  6568  0E23                     	;# 
  6569  0E24                     	;# 
  6570  0E25                     	;# 
  6571  0E26                     	;# 
  6572  0E27                     	;# 
  6573  0E28                     	;# 
  6574  0E29                     	;# 
  6575  0E2A                     	;# 
  6576  0E2B                     	;# 
  6577  0E2C                     	;# 
  6578  0E2D                     	;# 
  6579  0E2E                     	;# 
  6580  0E2F                     	;# 
  6581  0E30                     	;# 
  6582  0E31                     	;# 
  6583  0E32                     	;# 
  6584  0E33                     	;# 
  6585  0E34                     	;# 
  6586  0E35                     	;# 
  6587  0E36                     	;# 
  6588  0E37                     	;# 
  6589  0E8F                     	;# 
  6590  0E90                     	;# 
  6591  0E91                     	;# 
  6592  0E92                     	;# 
  6593  0E93                     	;# 
  6594  0E94                     	;# 
  6595  0E95                     	;# 
  6596  0E96                     	;# 
  6597  0E97                     	;# 
  6598  0E9C                     	;# 
  6599  0E9D                     	;# 
  6600  0E9E                     	;# 
  6601  0EA1                     	;# 
  6602  0EA2                     	;# 
  6603  0EA3                     	;# 
  6604  0EA4                     	;# 
  6605  0EA5                     	;# 
  6606  0EA9                     	;# 
  6607  0EAA                     	;# 
  6608  0EAB                     	;# 
  6609  0EAC                     	;# 
  6610  0EB1                     	;# 
  6611  0EB2                     	;# 
  6612  0EB3                     	;# 
  6613  0EB8                     	;# 
  6614  0EB9                     	;# 
  6615  0EBA                     	;# 
  6616  0EBB                     	;# 
  6617  0EBC                     	;# 
  6618  0EBD                     	;# 
  6619  0EBE                     	;# 
  6620  0EC3                     	;# 
  6621  0EC5                     	;# 
  6622  0EC6                     	;# 
  6623  0EC7                     	;# 
  6624  0EC8                     	;# 
  6625  0EC9                     	;# 
  6626  0ECA                     	;# 
  6627  0ECB                     	;# 
  6628  0ECC                     	;# 
  6629  0F10                     	;# 
  6630  0F11                     	;# 
  6631  0F12                     	;# 
  6632  0F13                     	;# 
  6633  0F14                     	;# 
  6634  0F15                     	;# 
  6635  0F16                     	;# 
  6636  0F17                     	;# 
  6637  0F18                     	;# 
  6638  0F19                     	;# 
  6639  0F1A                     	;# 
  6640  0F1B                     	;# 
  6641  0F1C                     	;# 
  6642  0F1D                     	;# 
  6643  0F1E                     	;# 
  6644  0F1F                     	;# 
  6645  0F20                     	;# 
  6646  0F21                     	;# 
  6647  0F22                     	;# 
  6648  0F23                     	;# 
  6649  0F24                     	;# 
  6650  0F25                     	;# 
  6651  0F26                     	;# 
  6652  0F27                     	;# 
  6653  0F28                     	;# 
  6654  0F29                     	;# 
  6655  0F2A                     	;# 
  6656  0F2B                     	;# 
  6657  0F2C                     	;# 
  6658  0F2D                     	;# 
  6659  0F2E                     	;# 
  6660  0F2F                     	;# 
  6661  0F30                     	;# 
  6662  0F31                     	;# 
  6663  0F32                     	;# 
  6664  0F38                     	;# 
  6665  0F39                     	;# 
  6666  0F3A                     	;# 
  6667  0F3B                     	;# 
  6668  0F3C                     	;# 
  6669  0F3D                     	;# 
  6670  0F3E                     	;# 
  6671  0F3F                     	;# 
  6672  0F40                     	;# 
  6673  0F41                     	;# 
  6674  0F43                     	;# 
  6675  0F44                     	;# 
  6676  0F45                     	;# 
  6677  0F46                     	;# 
  6678  0F47                     	;# 
  6679  0F48                     	;# 
  6680  0F49                     	;# 
  6681  0F4A                     	;# 
  6682  0F4B                     	;# 
  6683  0F4C                     	;# 
  6684  0F4E                     	;# 
  6685  0F4F                     	;# 
  6686  0F50                     	;# 
  6687  0F51                     	;# 
  6688  0F52                     	;# 
  6689  0F53                     	;# 
  6690  0F54                     	;# 
  6691  0F55                     	;# 
  6692  0F56                     	;# 
  6693  0F57                     	;# 
  6694  0F59                     	;# 
  6695  0F5A                     	;# 
  6696  0F5B                     	;# 
  6697  0F5C                     	;# 
  6698  0F5D                     	;# 
  6699  0F61                     	;# 
  6700  0F62                     	;# 
  6701  0F64                     	;# 
  6702  0F65                     	;# 
  6703  0F66                     	;# 
  6704  0F67                     	;# 
  6705  0F68                     	;# 
  6706  0F69                     	;# 
  6707  0F6A                     	;# 
  6708  0F6B                     	;# 
  6709  0F6C                     	;# 
  6710  0F6D                     	;# 
  6711  0FE4                     	;# 
  6712  0FE5                     	;# 
  6713  0FE6                     	;# 
  6714  0FE7                     	;# 
  6715  0FE8                     	;# 
  6716  0FE9                     	;# 
  6717  0FEA                     	;# 
  6718  0FEB                     	;# 
  6719  0FED                     	;# 
  6720  0FEE                     	;# 
  6721  0FEF                     	;# 
  6722  0000                     	;# 
  6723  0001                     	;# 
  6724  0002                     	;# 
  6725  0003                     	;# 
  6726  0004                     	;# 
  6727  0005                     	;# 
  6728  0006                     	;# 
  6729  0007                     	;# 
  6730  0008                     	;# 
  6731  0009                     	;# 
  6732  000A                     	;# 
  6733  000B                     	;# 
  6734  000C                     	;# 
  6735  000D                     	;# 
  6736  000E                     	;# 
  6737  000F                     	;# 
  6738  0010                     	;# 
  6739  0011                     	;# 
  6740  0012                     	;# 
  6741  0013                     	;# 
  6742  0014                     	;# 
  6743  0015                     	;# 
  6744  0016                     	;# 
  6745  0017                     	;# 
  6746  0018                     	;# 
  6747  0019                     	;# 
  6748  001A                     	;# 
  6749  001C                     	;# 
  6750  001C                     	;# 
  6751  001D                     	;# 
  6752  001D                     	;# 
  6753  001E                     	;# 
  6754  001F                     	;# 
  6755  008C                     	;# 
  6756  008C                     	;# 
  6757  008D                     	;# 
  6758  008E                     	;# 
  6759  008E                     	;# 
  6760  008F                     	;# 
  6761  0090                     	;# 
  6762  0090                     	;# 
  6763  0091                     	;# 
  6764  0093                     	;# 
  6765  0094                     	;# 
  6766  0095                     	;# 
  6767  0096                     	;# 
  6768  0097                     	;# 
  6769  0098                     	;# 
  6770  0099                     	;# 
  6771  009A                     	;# 
  6772  009B                     	;# 
  6773  009C                     	;# 
  6774  009D                     	;# 
  6775  009E                     	;# 
  6776  010C                     	;# 
  6777  010D                     	;# 
  6778  010E                     	;# 
  6779  010E                     	;# 
  6780  010F                     	;# 
  6781  0110                     	;# 
  6782  0110                     	;# 
  6783  0111                     	;# 
  6784  0112                     	;# 
  6785  0112                     	;# 
  6786  0113                     	;# 
  6787  0114                     	;# 
  6788  0114                     	;# 
  6789  0115                     	;# 
  6790  0116                     	;# 
  6791  0116                     	;# 
  6792  0117                     	;# 
  6793  0119                     	;# 
  6794  0119                     	;# 
  6795  0119                     	;# 
  6796  011A                     	;# 
  6797  011A                     	;# 
  6798  011A                     	;# 
  6799  011B                     	;# 
  6800  011B                     	;# 
  6801  011B                     	;# 
  6802  011B                     	;# 
  6803  011B                     	;# 
  6804  011C                     	;# 
  6805  011C                     	;# 
  6806  011C                     	;# 
  6807  011D                     	;# 
  6808  011D                     	;# 
  6809  011D                     	;# 
  6810  011E                     	;# 
  6811  011E                     	;# 
  6812  011E                     	;# 
  6813  011F                     	;# 
  6814  011F                     	;# 
  6815  011F                     	;# 
  6816  011F                     	;# 
  6817  011F                     	;# 
  6818  018C                     	;# 
  6819  018D                     	;# 
  6820  018E                     	;# 
  6821  018F                     	;# 
  6822  0190                     	;# 
  6823  0191                     	;# 
  6824  0192                     	;# 
  6825  0196                     	;# 
  6826  0197                     	;# 
  6827  0198                     	;# 
  6828  0199                     	;# 
  6829  019A                     	;# 
  6830  019B                     	;# 
  6831  019C                     	;# 
  6832  020C                     	;# 
  6833  020C                     	;# 
  6834  020D                     	;# 
  6835  020E                     	;# 
  6836  020F                     	;# 
  6837  020F                     	;# 
  6838  0210                     	;# 
  6839  0210                     	;# 
  6840  0211                     	;# 
  6841  0211                     	;# 
  6842  0212                     	;# 
  6843  0212                     	;# 
  6844  0213                     	;# 
  6845  0214                     	;# 
  6846  0215                     	;# 
  6847  0215                     	;# 
  6848  0216                     	;# 
  6849  0216                     	;# 
  6850  0217                     	;# 
  6851  0217                     	;# 
  6852  0218                     	;# 
  6853  0218                     	;# 
  6854  0219                     	;# 
  6855  021A                     	;# 
  6856  021B                     	;# 
  6857  021B                     	;# 
  6858  021C                     	;# 
  6859  021C                     	;# 
  6860  021D                     	;# 
  6861  021D                     	;# 
  6862  021E                     	;# 
  6863  021F                     	;# 
  6864  028C                     	;# 
  6865  028C                     	;# 
  6866  028D                     	;# 
  6867  028D                     	;# 
  6868  028E                     	;# 
  6869  028F                     	;# 
  6870  0290                     	;# 
  6871  0290                     	;# 
  6872  0291                     	;# 
  6873  0292                     	;# 
  6874  0292                     	;# 
  6875  0293                     	;# 
  6876  0293                     	;# 
  6877  0294                     	;# 
  6878  0295                     	;# 
  6879  0296                     	;# 
  6880  0296                     	;# 
  6881  0297                     	;# 
  6882  0298                     	;# 
  6883  0298                     	;# 
  6884  0299                     	;# 
  6885  0299                     	;# 
  6886  029A                     	;# 
  6887  029B                     	;# 
  6888  029C                     	;# 
  6889  029C                     	;# 
  6890  029D                     	;# 
  6891  030C                     	;# 
  6892  030C                     	;# 
  6893  030D                     	;# 
  6894  030E                     	;# 
  6895  030F                     	;# 
  6896  0310                     	;# 
  6897  0310                     	;# 
  6898  0311                     	;# 
  6899  0312                     	;# 
  6900  0313                     	;# 
  6901  0314                     	;# 
  6902  0314                     	;# 
  6903  0315                     	;# 
  6904  0316                     	;# 
  6905  0317                     	;# 
  6906  0318                     	;# 
  6907  0318                     	;# 
  6908  0319                     	;# 
  6909  031A                     	;# 
  6910  031B                     	;# 
  6911  031C                     	;# 
  6912  031C                     	;# 
  6913  031D                     	;# 
  6914  031E                     	;# 
  6915  031F                     	;# 
  6916  038C                     	;# 
  6917  038C                     	;# 
  6918  038D                     	;# 
  6919  038E                     	;# 
  6920  0390                     	;# 
  6921  0390                     	;# 
  6922  0391                     	;# 
  6923  0392                     	;# 
  6924  040C                     	;# 
  6925  040D                     	;# 
  6926  040E                     	;# 
  6927  040F                     	;# 
  6928  0410                     	;# 
  6929  0411                     	;# 
  6930  0416                     	;# 
  6931  0416                     	;# 
  6932  0417                     	;# 
  6933  0418                     	;# 
  6934  0418                     	;# 
  6935  0419                     	;# 
  6936  041A                     	;# 
  6937  041A                     	;# 
  6938  041B                     	;# 
  6939  041C                     	;# 
  6940  041C                     	;# 
  6941  041D                     	;# 
  6942  041E                     	;# 
  6943  041F                     	;# 
  6944  048C                     	;# 
  6945  048C                     	;# 
  6946  048D                     	;# 
  6947  048E                     	;# 
  6948  048F                     	;# 
  6949  048F                     	;# 
  6950  0490                     	;# 
  6951  0491                     	;# 
  6952  0492                     	;# 
  6953  0492                     	;# 
  6954  0493                     	;# 
  6955  0494                     	;# 
  6956  0495                     	;# 
  6957  0495                     	;# 
  6958  0496                     	;# 
  6959  0497                     	;# 
  6960  0498                     	;# 
  6961  0499                     	;# 
  6962  049A                     	;# 
  6963  049B                     	;# 
  6964  049C                     	;# 
  6965  049D                     	;# 
  6966  050C                     	;# 
  6967  050C                     	;# 
  6968  050D                     	;# 
  6969  050E                     	;# 
  6970  050F                     	;# 
  6971  050F                     	;# 
  6972  0510                     	;# 
  6973  0511                     	;# 
  6974  0512                     	;# 
  6975  0512                     	;# 
  6976  0513                     	;# 
  6977  0514                     	;# 
  6978  0515                     	;# 
  6979  0515                     	;# 
  6980  0516                     	;# 
  6981  0517                     	;# 
  6982  0518                     	;# 
  6983  0519                     	;# 
  6984  051A                     	;# 
  6985  051B                     	;# 
  6986  051C                     	;# 
  6987  051D                     	;# 
  6988  058C                     	;# 
  6989  058C                     	;# 
  6990  058D                     	;# 
  6991  058E                     	;# 
  6992  058F                     	;# 
  6993  058F                     	;# 
  6994  0590                     	;# 
  6995  0591                     	;# 
  6996  0592                     	;# 
  6997  0593                     	;# 
  6998  060C                     	;# 
  6999  060D                     	;# 
  7000  060E                     	;# 
  7001  060F                     	;# 
  7002  0610                     	;# 
  7003  0611                     	;# 
  7004  0612                     	;# 
  7005  0613                     	;# 
  7006  0614                     	;# 
  7007  0616                     	;# 
  7008  0617                     	;# 
  7009  0618                     	;# 
  7010  0619                     	;# 
  7011  061A                     	;# 
  7012  061B                     	;# 
  7013  061C                     	;# 
  7014  061D                     	;# 
  7015  061E                     	;# 
  7016  068C                     	;# 
  7017  068D                     	;# 
  7018  068E                     	;# 
  7019  068F                     	;# 
  7020  0690                     	;# 
  7021  0691                     	;# 
  7022  0692                     	;# 
  7023  0693                     	;# 
  7024  0694                     	;# 
  7025  070C                     	;# 
  7026  070D                     	;# 
  7027  070E                     	;# 
  7028  070F                     	;# 
  7029  0710                     	;# 
  7030  0711                     	;# 
  7031  0712                     	;# 
  7032  0713                     	;# 
  7033  0714                     	;# 
  7034  0716                     	;# 
  7035  0717                     	;# 
  7036  0718                     	;# 
  7037  0719                     	;# 
  7038  071A                     	;# 
  7039  071B                     	;# 
  7040  071C                     	;# 
  7041  071D                     	;# 
  7042  071E                     	;# 
  7043  0796                     	;# 
  7044  0797                     	;# 
  7045  0798                     	;# 
  7046  0799                     	;# 
  7047  079A                     	;# 
  7048  079B                     	;# 
  7049  080C                     	;# 
  7050  080D                     	;# 
  7051  080E                     	;# 
  7052  080F                     	;# 
  7053  0810                     	;# 
  7054  0811                     	;# 
  7055  0812                     	;# 
  7056  0813                     	;# 
  7057  0814                     	;# 
  7058  081A                     	;# 
  7059  081B                     	;# 
  7060  081C                     	;# 
  7061  081D                     	;# 
  7062  081E                     	;# 
  7063  081F                     	;# 
  7064  088C                     	;# 
  7065  088D                     	;# 
  7066  088E                     	;# 
  7067  088F                     	;# 
  7068  0890                     	;# 
  7069  0891                     	;# 
  7070  0892                     	;# 
  7071  0893                     	;# 
  7072  0895                     	;# 
  7073  0896                     	;# 
  7074  0897                     	;# 
  7075  0898                     	;# 
  7076  0899                     	;# 
  7077  089A                     	;# 
  7078  089B                     	;# 
  7079  090C                     	;# 
  7080  090E                     	;# 
  7081  090F                     	;# 
  7082  091F                     	;# 
  7083  091F                     	;# 
  7084  098F                     	;# 
  7085  098F                     	;# 
  7086  0990                     	;# 
  7087  0991                     	;# 
  7088  0992                     	;# 
  7089  0993                     	;# 
  7090  0994                     	;# 
  7091  0995                     	;# 
  7092  0996                     	;# 
  7093  0997                     	;# 
  7094  0E0F                     	;# 
  7095  0E10                     	;# 
  7096  0E11                     	;# 
  7097  0E12                     	;# 
  7098  0E13                     	;# 
  7099  0E14                     	;# 
  7100  0E15                     	;# 
  7101  0E16                     	;# 
  7102  0E17                     	;# 
  7103  0E18                     	;# 
  7104  0E19                     	;# 
  7105  0E1A                     	;# 
  7106  0E1B                     	;# 
  7107  0E1C                     	;# 
  7108  0E1D                     	;# 
  7109  0E1E                     	;# 
  7110  0E1F                     	;# 
  7111  0E20                     	;# 
  7112  0E21                     	;# 
  7113  0E22                     	;# 
  7114  0E23                     	;# 
  7115  0E24                     	;# 
  7116  0E25                     	;# 
  7117  0E26                     	;# 
  7118  0E27                     	;# 
  7119  0E28                     	;# 
  7120  0E29                     	;# 
  7121  0E2A                     	;# 
  7122  0E2B                     	;# 
  7123  0E2C                     	;# 
  7124  0E2D                     	;# 
  7125  0E2E                     	;# 
  7126  0E2F                     	;# 
  7127  0E30                     	;# 
  7128  0E31                     	;# 
  7129  0E32                     	;# 
  7130  0E33                     	;# 
  7131  0E34                     	;# 
  7132  0E35                     	;# 
  7133  0E36                     	;# 
  7134  0E37                     	;# 
  7135  0E8F                     	;# 
  7136  0E90                     	;# 
  7137  0E91                     	;# 
  7138  0E92                     	;# 
  7139  0E93                     	;# 
  7140  0E94                     	;# 
  7141  0E95                     	;# 
  7142  0E96                     	;# 
  7143  0E97                     	;# 
  7144  0E9C                     	;# 
  7145  0E9D                     	;# 
  7146  0E9E                     	;# 
  7147  0EA1                     	;# 
  7148  0EA2                     	;# 
  7149  0EA3                     	;# 
  7150  0EA4                     	;# 
  7151  0EA5                     	;# 
  7152  0EA9                     	;# 
  7153  0EAA                     	;# 
  7154  0EAB                     	;# 
  7155  0EAC                     	;# 
  7156  0EB1                     	;# 
  7157  0EB2                     	;# 
  7158  0EB3                     	;# 
  7159  0EB8                     	;# 
  7160  0EB9                     	;# 
  7161  0EBA                     	;# 
  7162  0EBB                     	;# 
  7163  0EBC                     	;# 
  7164  0EBD                     	;# 
  7165  0EBE                     	;# 
  7166  0EC3                     	;# 
  7167  0EC5                     	;# 
  7168  0EC6                     	;# 
  7169  0EC7                     	;# 
  7170  0EC8                     	;# 
  7171  0EC9                     	;# 
  7172  0ECA                     	;# 
  7173  0ECB                     	;# 
  7174  0ECC                     	;# 
  7175  0F10                     	;# 
  7176  0F11                     	;# 
  7177  0F12                     	;# 
  7178  0F13                     	;# 
  7179  0F14                     	;# 
  7180  0F15                     	;# 
  7181  0F16                     	;# 
  7182  0F17                     	;# 
  7183  0F18                     	;# 
  7184  0F19                     	;# 
  7185  0F1A                     	;# 
  7186  0F1B                     	;# 
  7187  0F1C                     	;# 
  7188  0F1D                     	;# 
  7189  0F1E                     	;# 
  7190  0F1F                     	;# 
  7191  0F20                     	;# 
  7192  0F21                     	;# 
  7193  0F22                     	;# 
  7194  0F23                     	;# 
  7195  0F24                     	;# 
  7196  0F25                     	;# 
  7197  0F26                     	;# 
  7198  0F27                     	;# 
  7199  0F28                     	;# 
  7200  0F29                     	;# 
  7201  0F2A                     	;# 
  7202  0F2B                     	;# 
  7203  0F2C                     	;# 
  7204  0F2D                     	;# 
  7205  0F2E                     	;# 
  7206  0F2F                     	;# 
  7207  0F30                     	;# 
  7208  0F31                     	;# 
  7209  0F32                     	;# 
  7210  0F38                     	;# 
  7211  0F39                     	;# 
  7212  0F3A                     	;# 
  7213  0F3B                     	;# 
  7214  0F3C                     	;# 
  7215  0F3D                     	;# 
  7216  0F3E                     	;# 
  7217  0F3F                     	;# 
  7218  0F40                     	;# 
  7219  0F41                     	;# 
  7220  0F43                     	;# 
  7221  0F44                     	;# 
  7222  0F45                     	;# 
  7223  0F46                     	;# 
  7224  0F47                     	;# 
  7225  0F48                     	;# 
  7226  0F49                     	;# 
  7227  0F4A                     	;# 
  7228  0F4B                     	;# 
  7229  0F4C                     	;# 
  7230  0F4E                     	;# 
  7231  0F4F                     	;# 
  7232  0F50                     	;# 
  7233  0F51                     	;# 
  7234  0F52                     	;# 
  7235  0F53                     	;# 
  7236  0F54                     	;# 
  7237  0F55                     	;# 
  7238  0F56                     	;# 
  7239  0F57                     	;# 
  7240  0F59                     	;# 
  7241  0F5A                     	;# 
  7242  0F5B                     	;# 
  7243  0F5C                     	;# 
  7244  0F5D                     	;# 
  7245  0F61                     	;# 
  7246  0F62                     	;# 
  7247  0F64                     	;# 
  7248  0F65                     	;# 
  7249  0F66                     	;# 
  7250  0F67                     	;# 
  7251  0F68                     	;# 
  7252  0F69                     	;# 
  7253  0F6A                     	;# 
  7254  0F6B                     	;# 
  7255  0F6C                     	;# 
  7256  0F6D                     	;# 
  7257  0FE4                     	;# 
  7258  0FE5                     	;# 
  7259  0FE6                     	;# 
  7260  0FE7                     	;# 
  7261  0FE8                     	;# 
  7262  0FE9                     	;# 
  7263  0FEA                     	;# 
  7264  0FEB                     	;# 
  7265  0FED                     	;# 
  7266  0FEE                     	;# 
  7267  0FEF                     	;# 
  7268  0000                     	;# 
  7269  0001                     	;# 
  7270  0002                     	;# 
  7271  0003                     	;# 
  7272  0004                     	;# 
  7273  0005                     	;# 
  7274  0006                     	;# 
  7275  0007                     	;# 
  7276  0008                     	;# 
  7277  0009                     	;# 
  7278  000A                     	;# 
  7279  000B                     	;# 
  7280  000C                     	;# 
  7281  000D                     	;# 
  7282  000E                     	;# 
  7283  000F                     	;# 
  7284  0010                     	;# 
  7285  0011                     	;# 
  7286  0012                     	;# 
  7287  0013                     	;# 
  7288  0014                     	;# 
  7289  0015                     	;# 
  7290  0016                     	;# 
  7291  0017                     	;# 
  7292  0018                     	;# 
  7293  0019                     	;# 
  7294  001A                     	;# 
  7295  001C                     	;# 
  7296  001C                     	;# 
  7297  001D                     	;# 
  7298  001D                     	;# 
  7299  001E                     	;# 
  7300  001F                     	;# 
  7301  008C                     	;# 
  7302  008C                     	;# 
  7303  008D                     	;# 
  7304  008E                     	;# 
  7305  008E                     	;# 
  7306  008F                     	;# 
  7307  0090                     	;# 
  7308  0090                     	;# 
  7309  0091                     	;# 
  7310  0093                     	;# 
  7311  0094                     	;# 
  7312  0095                     	;# 
  7313  0096                     	;# 
  7314  0097                     	;# 
  7315  0098                     	;# 
  7316  0099                     	;# 
  7317  009A                     	;# 
  7318  009B                     	;# 
  7319  009C                     	;# 
  7320  009D                     	;# 
  7321  009E                     	;# 
  7322  010C                     	;# 
  7323  010D                     	;# 
  7324  010E                     	;# 
  7325  010E                     	;# 
  7326  010F                     	;# 
  7327  0110                     	;# 
  7328  0110                     	;# 
  7329  0111                     	;# 
  7330  0112                     	;# 
  7331  0112                     	;# 
  7332  0113                     	;# 
  7333  0114                     	;# 
  7334  0114                     	;# 
  7335  0115                     	;# 
  7336  0116                     	;# 
  7337  0116                     	;# 
  7338  0117                     	;# 
  7339  0119                     	;# 
  7340  0119                     	;# 
  7341  0119                     	;# 
  7342  011A                     	;# 
  7343  011A                     	;# 
  7344  011A                     	;# 
  7345  011B                     	;# 
  7346  011B                     	;# 
  7347  011B                     	;# 
  7348  011B                     	;# 
  7349  011B                     	;# 
  7350  011C                     	;# 
  7351  011C                     	;# 
  7352  011C                     	;# 
  7353  011D                     	;# 
  7354  011D                     	;# 
  7355  011D                     	;# 
  7356  011E                     	;# 
  7357  011E                     	;# 
  7358  011E                     	;# 
  7359  011F                     	;# 
  7360  011F                     	;# 
  7361  011F                     	;# 
  7362  011F                     	;# 
  7363  011F                     	;# 
  7364  018C                     	;# 
  7365  018D                     	;# 
  7366  018E                     	;# 
  7367  018F                     	;# 
  7368  0190                     	;# 
  7369  0191                     	;# 
  7370  0192                     	;# 
  7371  0196                     	;# 
  7372  0197                     	;# 
  7373  0198                     	;# 
  7374  0199                     	;# 
  7375  019A                     	;# 
  7376  019B                     	;# 
  7377  019C                     	;# 
  7378  020C                     	;# 
  7379  020C                     	;# 
  7380  020D                     	;# 
  7381  020E                     	;# 
  7382  020F                     	;# 
  7383  020F                     	;# 
  7384  0210                     	;# 
  7385  0210                     	;# 
  7386  0211                     	;# 
  7387  0211                     	;# 
  7388  0212                     	;# 
  7389  0212                     	;# 
  7390  0213                     	;# 
  7391  0214                     	;# 
  7392  0215                     	;# 
  7393  0215                     	;# 
  7394  0216                     	;# 
  7395  0216                     	;# 
  7396  0217                     	;# 
  7397  0217                     	;# 
  7398  0218                     	;# 
  7399  0218                     	;# 
  7400  0219                     	;# 
  7401  021A                     	;# 
  7402  021B                     	;# 
  7403  021B                     	;# 
  7404  021C                     	;# 
  7405  021C                     	;# 
  7406  021D                     	;# 
  7407  021D                     	;# 
  7408  021E                     	;# 
  7409  021F                     	;# 
  7410  028C                     	;# 
  7411  028C                     	;# 
  7412  028D                     	;# 
  7413  028D                     	;# 
  7414  028E                     	;# 
  7415  028F                     	;# 
  7416  0290                     	;# 
  7417  0290                     	;# 
  7418  0291                     	;# 
  7419  0292                     	;# 
  7420  0292                     	;# 
  7421  0293                     	;# 
  7422  0293                     	;# 
  7423  0294                     	;# 
  7424  0295                     	;# 
  7425  0296                     	;# 
  7426  0296                     	;# 
  7427  0297                     	;# 
  7428  0298                     	;# 
  7429  0298                     	;# 
  7430  0299                     	;# 
  7431  0299                     	;# 
  7432  029A                     	;# 
  7433  029B                     	;# 
  7434  029C                     	;# 
  7435  029C                     	;# 
  7436  029D                     	;# 
  7437  030C                     	;# 
  7438  030C                     	;# 
  7439  030D                     	;# 
  7440  030E                     	;# 
  7441  030F                     	;# 
  7442  0310                     	;# 
  7443  0310                     	;# 
  7444  0311                     	;# 
  7445  0312                     	;# 
  7446  0313                     	;# 
  7447  0314                     	;# 
  7448  0314                     	;# 
  7449  0315                     	;# 
  7450  0316                     	;# 
  7451  0317                     	;# 
  7452  0318                     	;# 
  7453  0318                     	;# 
  7454  0319                     	;# 
  7455  031A                     	;# 
  7456  031B                     	;# 
  7457  031C                     	;# 
  7458  031C                     	;# 
  7459  031D                     	;# 
  7460  031E                     	;# 
  7461  031F                     	;# 
  7462  038C                     	;# 
  7463  038C                     	;# 
  7464  038D                     	;# 
  7465  038E                     	;# 
  7466  0390                     	;# 
  7467  0390                     	;# 
  7468  0391                     	;# 
  7469  0392                     	;# 
  7470  040C                     	;# 
  7471  040D                     	;# 
  7472  040E                     	;# 
  7473  040F                     	;# 
  7474  0410                     	;# 
  7475  0411                     	;# 
  7476  0416                     	;# 
  7477  0416                     	;# 
  7478  0417                     	;# 
  7479  0418                     	;# 
  7480  0418                     	;# 
  7481  0419                     	;# 
  7482  041A                     	;# 
  7483  041A                     	;# 
  7484  041B                     	;# 
  7485  041C                     	;# 
  7486  041C                     	;# 
  7487  041D                     	;# 
  7488  041E                     	;# 
  7489  041F                     	;# 
  7490  048C                     	;# 
  7491  048C                     	;# 
  7492  048D                     	;# 
  7493  048E                     	;# 
  7494  048F                     	;# 
  7495  048F                     	;# 
  7496  0490                     	;# 
  7497  0491                     	;# 
  7498  0492                     	;# 
  7499  0492                     	;# 
  7500  0493                     	;# 
  7501  0494                     	;# 
  7502  0495                     	;# 
  7503  0495                     	;# 
  7504  0496                     	;# 
  7505  0497                     	;# 
  7506  0498                     	;# 
  7507  0499                     	;# 
  7508  049A                     	;# 
  7509  049B                     	;# 
  7510  049C                     	;# 
  7511  049D                     	;# 
  7512  050C                     	;# 
  7513  050C                     	;# 
  7514  050D                     	;# 
  7515  050E                     	;# 
  7516  050F                     	;# 
  7517  050F                     	;# 
  7518  0510                     	;# 
  7519  0511                     	;# 
  7520  0512                     	;# 
  7521  0512                     	;# 
  7522  0513                     	;# 
  7523  0514                     	;# 
  7524  0515                     	;# 
  7525  0515                     	;# 
  7526  0516                     	;# 
  7527  0517                     	;# 
  7528  0518                     	;# 
  7529  0519                     	;# 
  7530  051A                     	;# 
  7531  051B                     	;# 
  7532  051C                     	;# 
  7533  051D                     	;# 
  7534  058C                     	;# 
  7535  058C                     	;# 
  7536  058D                     	;# 
  7537  058E                     	;# 
  7538  058F                     	;# 
  7539  058F                     	;# 
  7540  0590                     	;# 
  7541  0591                     	;# 
  7542  0592                     	;# 
  7543  0593                     	;# 
  7544  060C                     	;# 
  7545  060D                     	;# 
  7546  060E                     	;# 
  7547  060F                     	;# 
  7548  0610                     	;# 
  7549  0611                     	;# 
  7550  0612                     	;# 
  7551  0613                     	;# 
  7552  0614                     	;# 
  7553  0616                     	;# 
  7554  0617                     	;# 
  7555  0618                     	;# 
  7556  0619                     	;# 
  7557  061A                     	;# 
  7558  061B                     	;# 
  7559  061C                     	;# 
  7560  061D                     	;# 
  7561  061E                     	;# 
  7562  068C                     	;# 
  7563  068D                     	;# 
  7564  068E                     	;# 
  7565  068F                     	;# 
  7566  0690                     	;# 
  7567  0691                     	;# 
  7568  0692                     	;# 
  7569  0693                     	;# 
  7570  0694                     	;# 
  7571  070C                     	;# 
  7572  070D                     	;# 
  7573  070E                     	;# 
  7574  070F                     	;# 
  7575  0710                     	;# 
  7576  0711                     	;# 
  7577  0712                     	;# 
  7578  0713                     	;# 
  7579  0714                     	;# 
  7580  0716                     	;# 
  7581  0717                     	;# 
  7582  0718                     	;# 
  7583  0719                     	;# 
  7584  071A                     	;# 
  7585  071B                     	;# 
  7586  071C                     	;# 
  7587  071D                     	;# 
  7588  071E                     	;# 
  7589  0796                     	;# 
  7590  0797                     	;# 
  7591  0798                     	;# 
  7592  0799                     	;# 
  7593  079A                     	;# 
  7594  079B                     	;# 
  7595  080C                     	;# 
  7596  080D                     	;# 
  7597  080E                     	;# 
  7598  080F                     	;# 
  7599  0810                     	;# 
  7600  0811                     	;# 
  7601  0812                     	;# 
  7602  0813                     	;# 
  7603  0814                     	;# 
  7604  081A                     	;# 
  7605  081B                     	;# 
  7606  081C                     	;# 
  7607  081D                     	;# 
  7608  081E                     	;# 
  7609  081F                     	;# 
  7610  088C                     	;# 
  7611  088D                     	;# 
  7612  088E                     	;# 
  7613  088F                     	;# 
  7614  0890                     	;# 
  7615  0891                     	;# 
  7616  0892                     	;# 
  7617  0893                     	;# 
  7618  0895                     	;# 
  7619  0896                     	;# 
  7620  0897                     	;# 
  7621  0898                     	;# 
  7622  0899                     	;# 
  7623  089A                     	;# 
  7624  089B                     	;# 
  7625  090C                     	;# 
  7626  090E                     	;# 
  7627  090F                     	;# 
  7628  091F                     	;# 
  7629  091F                     	;# 
  7630  098F                     	;# 
  7631  098F                     	;# 
  7632  0990                     	;# 
  7633  0991                     	;# 
  7634  0992                     	;# 
  7635  0993                     	;# 
  7636  0994                     	;# 
  7637  0995                     	;# 
  7638  0996                     	;# 
  7639  0997                     	;# 
  7640  0E0F                     	;# 
  7641  0E10                     	;# 
  7642  0E11                     	;# 
  7643  0E12                     	;# 
  7644  0E13                     	;# 
  7645  0E14                     	;# 
  7646  0E15                     	;# 
  7647  0E16                     	;# 
  7648  0E17                     	;# 
  7649  0E18                     	;# 
  7650  0E19                     	;# 
  7651  0E1A                     	;# 
  7652  0E1B                     	;# 
  7653  0E1C                     	;# 
  7654  0E1D                     	;# 
  7655  0E1E                     	;# 
  7656  0E1F                     	;# 
  7657  0E20                     	;# 
  7658  0E21                     	;# 
  7659  0E22                     	;# 
  7660  0E23                     	;# 
  7661  0E24                     	;# 
  7662  0E25                     	;# 
  7663  0E26                     	;# 
  7664  0E27                     	;# 
  7665  0E28                     	;# 
  7666  0E29                     	;# 
  7667  0E2A                     	;# 
  7668  0E2B                     	;# 
  7669  0E2C                     	;# 
  7670  0E2D                     	;# 
  7671  0E2E                     	;# 
  7672  0E2F                     	;# 
  7673  0E30                     	;# 
  7674  0E31                     	;# 
  7675  0E32                     	;# 
  7676  0E33                     	;# 
  7677  0E34                     	;# 
  7678  0E35                     	;# 
  7679  0E36                     	;# 
  7680  0E37                     	;# 
  7681  0E8F                     	;# 
  7682  0E90                     	;# 
  7683  0E91                     	;# 
  7684  0E92                     	;# 
  7685  0E93                     	;# 
  7686  0E94                     	;# 
  7687  0E95                     	;# 
  7688  0E96                     	;# 
  7689  0E97                     	;# 
  7690  0E9C                     	;# 
  7691  0E9D                     	;# 
  7692  0E9E                     	;# 
  7693  0EA1                     	;# 
  7694  0EA2                     	;# 
  7695  0EA3                     	;# 
  7696  0EA4                     	;# 
  7697  0EA5                     	;# 
  7698  0EA9                     	;# 
  7699  0EAA                     	;# 
  7700  0EAB                     	;# 
  7701  0EAC                     	;# 
  7702  0EB1                     	;# 
  7703  0EB2                     	;# 
  7704  0EB3                     	;# 
  7705  0EB8                     	;# 
  7706  0EB9                     	;# 
  7707  0EBA                     	;# 
  7708  0EBB                     	;# 
  7709  0EBC                     	;# 
  7710  0EBD                     	;# 
  7711  0EBE                     	;# 
  7712  0EC3                     	;# 
  7713  0EC5                     	;# 
  7714  0EC6                     	;# 
  7715  0EC7                     	;# 
  7716  0EC8                     	;# 
  7717  0EC9                     	;# 
  7718  0ECA                     	;# 
  7719  0ECB                     	;# 
  7720  0ECC                     	;# 
  7721  0F10                     	;# 
  7722  0F11                     	;# 
  7723  0F12                     	;# 
  7724  0F13                     	;# 
  7725  0F14                     	;# 
  7726  0F15                     	;# 
  7727  0F16                     	;# 
  7728  0F17                     	;# 
  7729  0F18                     	;# 
  7730  0F19                     	;# 
  7731  0F1A                     	;# 
  7732  0F1B                     	;# 
  7733  0F1C                     	;# 
  7734  0F1D                     	;# 
  7735  0F1E                     	;# 
  7736  0F1F                     	;# 
  7737  0F20                     	;# 
  7738  0F21                     	;# 
  7739  0F22                     	;# 
  7740  0F23                     	;# 
  7741  0F24                     	;# 
  7742  0F25                     	;# 
  7743  0F26                     	;# 
  7744  0F27                     	;# 
  7745  0F28                     	;# 
  7746  0F29                     	;# 
  7747  0F2A                     	;# 
  7748  0F2B                     	;# 
  7749  0F2C                     	;# 
  7750  0F2D                     	;# 
  7751  0F2E                     	;# 
  7752  0F2F                     	;# 
  7753  0F30                     	;# 
  7754  0F31                     	;# 
  7755  0F32                     	;# 
  7756  0F38                     	;# 
  7757  0F39                     	;# 
  7758  0F3A                     	;# 
  7759  0F3B                     	;# 
  7760  0F3C                     	;# 
  7761  0F3D                     	;# 
  7762  0F3E                     	;# 
  7763  0F3F                     	;# 
  7764  0F40                     	;# 
  7765  0F41                     	;# 
  7766  0F43                     	;# 
  7767  0F44                     	;# 
  7768  0F45                     	;# 
  7769  0F46                     	;# 
  7770  0F47                     	;# 
  7771  0F48                     	;# 
  7772  0F49                     	;# 
  7773  0F4A                     	;# 
  7774  0F4B                     	;# 
  7775  0F4C                     	;# 
  7776  0F4E                     	;# 
  7777  0F4F                     	;# 
  7778  0F50                     	;# 
  7779  0F51                     	;# 
  7780  0F52                     	;# 
  7781  0F53                     	;# 
  7782  0F54                     	;# 
  7783  0F55                     	;# 
  7784  0F56                     	;# 
  7785  0F57                     	;# 
  7786  0F59                     	;# 
  7787  0F5A                     	;# 
  7788  0F5B                     	;# 
  7789  0F5C                     	;# 
  7790  0F5D                     	;# 
  7791  0F61                     	;# 
  7792  0F62                     	;# 
  7793  0F64                     	;# 
  7794  0F65                     	;# 
  7795  0F66                     	;# 
  7796  0F67                     	;# 
  7797  0F68                     	;# 
  7798  0F69                     	;# 
  7799  0F6A                     	;# 
  7800  0F6B                     	;# 
  7801  0F6C                     	;# 
  7802  0F6D                     	;# 
  7803  0FE4                     	;# 
  7804  0FE5                     	;# 
  7805  0FE6                     	;# 
  7806  0FE7                     	;# 
  7807  0FE8                     	;# 
  7808  0FE9                     	;# 
  7809  0FEA                     	;# 
  7810  0FEB                     	;# 
  7811  0FED                     	;# 
  7812  0FEE                     	;# 
  7813  0FEF                     	;# 
  7814  0000                     	;# 
  7815  0001                     	;# 
  7816  0002                     	;# 
  7817  0003                     	;# 
  7818  0004                     	;# 
  7819  0005                     	;# 
  7820  0006                     	;# 
  7821  0007                     	;# 
  7822  0008                     	;# 
  7823  0009                     	;# 
  7824  000A                     	;# 
  7825  000B                     	;# 
  7826  000C                     	;# 
  7827  000D                     	;# 
  7828  000E                     	;# 
  7829  000F                     	;# 
  7830  0010                     	;# 
  7831  0011                     	;# 
  7832  0012                     	;# 
  7833  0013                     	;# 
  7834  0014                     	;# 
  7835  0015                     	;# 
  7836  0016                     	;# 
  7837  0017                     	;# 
  7838  0018                     	;# 
  7839  0019                     	;# 
  7840  001A                     	;# 
  7841  001C                     	;# 
  7842  001C                     	;# 
  7843  001D                     	;# 
  7844  001D                     	;# 
  7845  001E                     	;# 
  7846  001F                     	;# 
  7847  008C                     	;# 
  7848  008C                     	;# 
  7849  008D                     	;# 
  7850  008E                     	;# 
  7851  008E                     	;# 
  7852  008F                     	;# 
  7853  0090                     	;# 
  7854  0090                     	;# 
  7855  0091                     	;# 
  7856  0093                     	;# 
  7857  0094                     	;# 
  7858  0095                     	;# 
  7859  0096                     	;# 
  7860  0097                     	;# 
  7861  0098                     	;# 
  7862  0099                     	;# 
  7863  009A                     	;# 
  7864  009B                     	;# 
  7865  009C                     	;# 
  7866  009D                     	;# 
  7867  009E                     	;# 
  7868  010C                     	;# 
  7869  010D                     	;# 
  7870  010E                     	;# 
  7871  010E                     	;# 
  7872  010F                     	;# 
  7873  0110                     	;# 
  7874  0110                     	;# 
  7875  0111                     	;# 
  7876  0112                     	;# 
  7877  0112                     	;# 
  7878  0113                     	;# 
  7879  0114                     	;# 
  7880  0114                     	;# 
  7881  0115                     	;# 
  7882  0116                     	;# 
  7883  0116                     	;# 
  7884  0117                     	;# 
  7885  0119                     	;# 
  7886  0119                     	;# 
  7887  0119                     	;# 
  7888  011A                     	;# 
  7889  011A                     	;# 
  7890  011A                     	;# 
  7891  011B                     	;# 
  7892  011B                     	;# 
  7893  011B                     	;# 
  7894  011B                     	;# 
  7895  011B                     	;# 
  7896  011C                     	;# 
  7897  011C                     	;# 
  7898  011C                     	;# 
  7899  011D                     	;# 
  7900  011D                     	;# 
  7901  011D                     	;# 
  7902  011E                     	;# 
  7903  011E                     	;# 
  7904  011E                     	;# 
  7905  011F                     	;# 
  7906  011F                     	;# 
  7907  011F                     	;# 
  7908  011F                     	;# 
  7909  011F                     	;# 
  7910  018C                     	;# 
  7911  018D                     	;# 
  7912  018E                     	;# 
  7913  018F                     	;# 
  7914  0190                     	;# 
  7915  0191                     	;# 
  7916  0192                     	;# 
  7917  0196                     	;# 
  7918  0197                     	;# 
  7919  0198                     	;# 
  7920  0199                     	;# 
  7921  019A                     	;# 
  7922  019B                     	;# 
  7923  019C                     	;# 
  7924  020C                     	;# 
  7925  020C                     	;# 
  7926  020D                     	;# 
  7927  020E                     	;# 
  7928  020F                     	;# 
  7929  020F                     	;# 
  7930  0210                     	;# 
  7931  0210                     	;# 
  7932  0211                     	;# 
  7933  0211                     	;# 
  7934  0212                     	;# 
  7935  0212                     	;# 
  7936  0213                     	;# 
  7937  0214                     	;# 
  7938  0215                     	;# 
  7939  0215                     	;# 
  7940  0216                     	;# 
  7941  0216                     	;# 
  7942  0217                     	;# 
  7943  0217                     	;# 
  7944  0218                     	;# 
  7945  0218                     	;# 
  7946  0219                     	;# 
  7947  021A                     	;# 
  7948  021B                     	;# 
  7949  021B                     	;# 
  7950  021C                     	;# 
  7951  021C                     	;# 
  7952  021D                     	;# 
  7953  021D                     	;# 
  7954  021E                     	;# 
  7955  021F                     	;# 
  7956  028C                     	;# 
  7957  028C                     	;# 
  7958  028D                     	;# 
  7959  028D                     	;# 
  7960  028E                     	;# 
  7961  028F                     	;# 
  7962  0290                     	;# 
  7963  0290                     	;# 
  7964  0291                     	;# 
  7965  0292                     	;# 
  7966  0292                     	;# 
  7967  0293                     	;# 
  7968  0293                     	;# 
  7969  0294                     	;# 
  7970  0295                     	;# 
  7971  0296                     	;# 
  7972  0296                     	;# 
  7973  0297                     	;# 
  7974  0298                     	;# 
  7975  0298                     	;# 
  7976  0299                     	;# 
  7977  0299                     	;# 
  7978  029A                     	;# 
  7979  029B                     	;# 
  7980  029C                     	;# 
  7981  029C                     	;# 
  7982  029D                     	;# 
  7983  030C                     	;# 
  7984  030C                     	;# 
  7985  030D                     	;# 
  7986  030E                     	;# 
  7987  030F                     	;# 
  7988  0310                     	;# 
  7989  0310                     	;# 
  7990  0311                     	;# 
  7991  0312                     	;# 
  7992  0313                     	;# 
  7993  0314                     	;# 
  7994  0314                     	;# 
  7995  0315                     	;# 
  7996  0316                     	;# 
  7997  0317                     	;# 
  7998  0318                     	;# 
  7999  0318                     	;# 
  8000  0319                     	;# 
  8001  031A                     	;# 
  8002  031B                     	;# 
  8003  031C                     	;# 
  8004  031C                     	;# 
  8005  031D                     	;# 
  8006  031E                     	;# 
  8007  031F                     	;# 
  8008  038C                     	;# 
  8009  038C                     	;# 
  8010  038D                     	;# 
  8011  038E                     	;# 
  8012  0390                     	;# 
  8013  0390                     	;# 
  8014  0391                     	;# 
  8015  0392                     	;# 
  8016  040C                     	;# 
  8017  040D                     	;# 
  8018  040E                     	;# 
  8019  040F                     	;# 
  8020  0410                     	;# 
  8021  0411                     	;# 
  8022  0416                     	;# 
  8023  0416                     	;# 
  8024  0417                     	;# 
  8025  0418                     	;# 
  8026  0418                     	;# 
  8027  0419                     	;# 
  8028  041A                     	;# 
  8029  041A                     	;# 
  8030  041B                     	;# 
  8031  041C                     	;# 
  8032  041C                     	;# 
  8033  041D                     	;# 
  8034  041E                     	;# 
  8035  041F                     	;# 
  8036  048C                     	;# 
  8037  048C                     	;# 
  8038  048D                     	;# 
  8039  048E                     	;# 
  8040  048F                     	;# 
  8041  048F                     	;# 
  8042  0490                     	;# 
  8043  0491                     	;# 
  8044  0492                     	;# 
  8045  0492                     	;# 
  8046  0493                     	;# 
  8047  0494                     	;# 
  8048  0495                     	;# 
  8049  0495                     	;# 
  8050  0496                     	;# 
  8051  0497                     	;# 
  8052  0498                     	;# 
  8053  0499                     	;# 
  8054  049A                     	;# 
  8055  049B                     	;# 
  8056  049C                     	;# 
  8057  049D                     	;# 
  8058  050C                     	;# 
  8059  050C                     	;# 
  8060  050D                     	;# 
  8061  050E                     	;# 
  8062  050F                     	;# 
  8063  050F                     	;# 
  8064  0510                     	;# 
  8065  0511                     	;# 
  8066  0512                     	;# 
  8067  0512                     	;# 
  8068  0513                     	;# 
  8069  0514                     	;# 
  8070  0515                     	;# 
  8071  0515                     	;# 
  8072  0516                     	;# 
  8073  0517                     	;# 
  8074  0518                     	;# 
  8075  0519                     	;# 
  8076  051A                     	;# 
  8077  051B                     	;# 
  8078  051C                     	;# 
  8079  051D                     	;# 
  8080  058C                     	;# 
  8081  058C                     	;# 
  8082  058D                     	;# 
  8083  058E                     	;# 
  8084  058F                     	;# 
  8085  058F                     	;# 
  8086  0590                     	;# 
  8087  0591                     	;# 
  8088  0592                     	;# 
  8089  0593                     	;# 
  8090  060C                     	;# 
  8091  060D                     	;# 
  8092  060E                     	;# 
  8093  060F                     	;# 
  8094  0610                     	;# 
  8095  0611                     	;# 
  8096  0612                     	;# 
  8097  0613                     	;# 
  8098  0614                     	;# 
  8099  0616                     	;# 
  8100  0617                     	;# 
  8101  0618                     	;# 
  8102  0619                     	;# 
  8103  061A                     	;# 
  8104  061B                     	;# 
  8105  061C                     	;# 
  8106  061D                     	;# 
  8107  061E                     	;# 
  8108  068C                     	;# 
  8109  068D                     	;# 
  8110  068E                     	;# 
  8111  068F                     	;# 
  8112  0690                     	;# 
  8113  0691                     	;# 
  8114  0692                     	;# 
  8115  0693                     	;# 
  8116  0694                     	;# 
  8117  070C                     	;# 
  8118  070D                     	;# 
  8119  070E                     	;# 
  8120  070F                     	;# 
  8121  0710                     	;# 
  8122  0711                     	;# 
  8123  0712                     	;# 
  8124  0713                     	;# 
  8125  0714                     	;# 
  8126  0716                     	;# 
  8127  0717                     	;# 
  8128  0718                     	;# 
  8129  0719                     	;# 
  8130  071A                     	;# 
  8131  071B                     	;# 
  8132  071C                     	;# 
  8133  071D                     	;# 
  8134  071E                     	;# 
  8135  0796                     	;# 
  8136  0797                     	;# 
  8137  0798                     	;# 
  8138  0799                     	;# 
  8139  079A                     	;# 
  8140  079B                     	;# 
  8141  080C                     	;# 
  8142  080D                     	;# 
  8143  080E                     	;# 
  8144  080F                     	;# 
  8145  0810                     	;# 
  8146  0811                     	;# 
  8147  0812                     	;# 
  8148  0813                     	;# 
  8149  0814                     	;# 
  8150  081A                     	;# 
  8151  081B                     	;# 
  8152  081C                     	;# 
  8153  081D                     	;# 
  8154  081E                     	;# 
  8155  081F                     	;# 
  8156  088C                     	;# 
  8157  088D                     	;# 
  8158  088E                     	;# 
  8159  088F                     	;# 
  8160  0890                     	;# 
  8161  0891                     	;# 
  8162  0892                     	;# 
  8163  0893                     	;# 
  8164  0895                     	;# 
  8165  0896                     	;# 
  8166  0897                     	;# 
  8167  0898                     	;# 
  8168  0899                     	;# 
  8169  089A                     	;# 
  8170  089B                     	;# 
  8171  090C                     	;# 
  8172  090E                     	;# 
  8173  090F                     	;# 
  8174  091F                     	;# 
  8175  091F                     	;# 
  8176  098F                     	;# 
  8177  098F                     	;# 
  8178  0990                     	;# 
  8179  0991                     	;# 
  8180  0992                     	;# 
  8181  0993                     	;# 
  8182  0994                     	;# 
  8183  0995                     	;# 
  8184  0996                     	;# 
  8185  0997                     	;# 
  8186  0E0F                     	;# 
  8187  0E10                     	;# 
  8188  0E11                     	;# 
  8189  0E12                     	;# 
  8190  0E13                     	;# 
  8191  0E14                     	;# 
  8192  0E15                     	;# 
  8193  0E16                     	;# 
  8194  0E17                     	;# 
  8195  0E18                     	;# 
  8196  0E19                     	;# 
  8197  0E1A                     	;# 
  8198  0E1B                     	;# 
  8199  0E1C                     	;# 
  8200  0E1D                     	;# 
  8201  0E1E                     	;# 
  8202  0E1F                     	;# 
  8203  0E20                     	;# 
  8204  0E21                     	;# 
  8205  0E22                     	;# 
  8206  0E23                     	;# 
  8207  0E24                     	;# 
  8208  0E25                     	;# 
  8209  0E26                     	;# 
  8210  0E27                     	;# 
  8211  0E28                     	;# 
  8212  0E29                     	;# 
  8213  0E2A                     	;# 
  8214  0E2B                     	;# 
  8215  0E2C                     	;# 
  8216  0E2D                     	;# 
  8217  0E2E                     	;# 
  8218  0E2F                     	;# 
  8219  0E30                     	;# 
  8220  0E31                     	;# 
  8221  0E32                     	;# 
  8222  0E33                     	;# 
  8223  0E34                     	;# 
  8224  0E35                     	;# 
  8225  0E36                     	;# 
  8226  0E37                     	;# 
  8227  0E8F                     	;# 
  8228  0E90                     	;# 
  8229  0E91                     	;# 
  8230  0E92                     	;# 
  8231  0E93                     	;# 
  8232  0E94                     	;# 
  8233  0E95                     	;# 
  8234  0E96                     	;# 
  8235  0E97                     	;# 
  8236  0E9C                     	;# 
  8237  0E9D                     	;# 
  8238  0E9E                     	;# 
  8239  0EA1                     	;# 
  8240  0EA2                     	;# 
  8241  0EA3                     	;# 
  8242  0EA4                     	;# 
  8243  0EA5                     	;# 
  8244  0EA9                     	;# 
  8245  0EAA                     	;# 
  8246  0EAB                     	;# 
  8247  0EAC                     	;# 
  8248  0EB1                     	;# 
  8249  0EB2                     	;# 
  8250  0EB3                     	;# 
  8251  0EB8                     	;# 
  8252  0EB9                     	;# 
  8253  0EBA                     	;# 
  8254  0EBB                     	;# 
  8255  0EBC                     	;# 
  8256  0EBD                     	;# 
  8257  0EBE                     	;# 
  8258  0EC3                     	;# 
  8259  0EC5                     	;# 
  8260  0EC6                     	;# 
  8261  0EC7                     	;# 
  8262  0EC8                     	;# 
  8263  0EC9                     	;# 
  8264  0ECA                     	;# 
  8265  0ECB                     	;# 
  8266  0ECC                     	;# 
  8267  0F10                     	;# 
  8268  0F11                     	;# 
  8269  0F12                     	;# 
  8270  0F13                     	;# 
  8271  0F14                     	;# 
  8272  0F15                     	;# 
  8273  0F16                     	;# 
  8274  0F17                     	;# 
  8275  0F18                     	;# 
  8276  0F19                     	;# 
  8277  0F1A                     	;# 
  8278  0F1B                     	;# 
  8279  0F1C                     	;# 
  8280  0F1D                     	;# 
  8281  0F1E                     	;# 
  8282  0F1F                     	;# 
  8283  0F20                     	;# 
  8284  0F21                     	;# 
  8285  0F22                     	;# 
  8286  0F23                     	;# 
  8287  0F24                     	;# 
  8288  0F25                     	;# 
  8289  0F26                     	;# 
  8290  0F27                     	;# 
  8291  0F28                     	;# 
  8292  0F29                     	;# 
  8293  0F2A                     	;# 
  8294  0F2B                     	;# 
  8295  0F2C                     	;# 
  8296  0F2D                     	;# 
  8297  0F2E                     	;# 
  8298  0F2F                     	;# 
  8299  0F30                     	;# 
  8300  0F31                     	;# 
  8301  0F32                     	;# 
  8302  0F38                     	;# 
  8303  0F39                     	;# 
  8304  0F3A                     	;# 
  8305  0F3B                     	;# 
  8306  0F3C                     	;# 
  8307  0F3D                     	;# 
  8308  0F3E                     	;# 
  8309  0F3F                     	;# 
  8310  0F40                     	;# 
  8311  0F41                     	;# 
  8312  0F43                     	;# 
  8313  0F44                     	;# 
  8314  0F45                     	;# 
  8315  0F46                     	;# 
  8316  0F47                     	;# 
  8317  0F48                     	;# 
  8318  0F49                     	;# 
  8319  0F4A                     	;# 
  8320  0F4B                     	;# 
  8321  0F4C                     	;# 
  8322  0F4E                     	;# 
  8323  0F4F                     	;# 
  8324  0F50                     	;# 
  8325  0F51                     	;# 
  8326  0F52                     	;# 
  8327  0F53                     	;# 
  8328  0F54                     	;# 
  8329  0F55                     	;# 
  8330  0F56                     	;# 
  8331  0F57                     	;# 
  8332  0F59                     	;# 
  8333  0F5A                     	;# 
  8334  0F5B                     	;# 
  8335  0F5C                     	;# 
  8336  0F5D                     	;# 
  8337  0F61                     	;# 
  8338  0F62                     	;# 
  8339  0F64                     	;# 
  8340  0F65                     	;# 
  8341  0F66                     	;# 
  8342  0F67                     	;# 
  8343  0F68                     	;# 
  8344  0F69                     	;# 
  8345  0F6A                     	;# 
  8346  0F6B                     	;# 
  8347  0F6C                     	;# 
  8348  0F6D                     	;# 
  8349  0FE4                     	;# 
  8350  0FE5                     	;# 
  8351  0FE6                     	;# 
  8352  0FE7                     	;# 
  8353  0FE8                     	;# 
  8354  0FE9                     	;# 
  8355  0FEA                     	;# 
  8356  0FEB                     	;# 
  8357  0FED                     	;# 
  8358  0FEE                     	;# 
  8359  0FEF                     	;# 
  8360  0000                     	;# 
  8361  0001                     	;# 
  8362  0002                     	;# 
  8363  0003                     	;# 
  8364  0004                     	;# 
  8365  0005                     	;# 
  8366  0006                     	;# 
  8367  0007                     	;# 
  8368  0008                     	;# 
  8369  0009                     	;# 
  8370  000A                     	;# 
  8371  000B                     	;# 
  8372  000C                     	;# 
  8373  000D                     	;# 
  8374  000E                     	;# 
  8375  000F                     	;# 
  8376  0010                     	;# 
  8377  0011                     	;# 
  8378  0012                     	;# 
  8379  0013                     	;# 
  8380  0014                     	;# 
  8381  0015                     	;# 
  8382  0016                     	;# 
  8383  0017                     	;# 
  8384  0018                     	;# 
  8385  0019                     	;# 
  8386  001A                     	;# 
  8387  001C                     	;# 
  8388  001C                     	;# 
  8389  001D                     	;# 
  8390  001D                     	;# 
  8391  001E                     	;# 
  8392  001F                     	;# 
  8393  008C                     	;# 
  8394  008C                     	;# 
  8395  008D                     	;# 
  8396  008E                     	;# 
  8397  008E                     	;# 
  8398  008F                     	;# 
  8399  0090                     	;# 
  8400  0090                     	;# 
  8401  0091                     	;# 
  8402  0093                     	;# 
  8403  0094                     	;# 
  8404  0095                     	;# 
  8405  0096                     	;# 
  8406  0097                     	;# 
  8407  0098                     	;# 
  8408  0099                     	;# 
  8409  009A                     	;# 
  8410  009B                     	;# 
  8411  009C                     	;# 
  8412  009D                     	;# 
  8413  009E                     	;# 
  8414  010C                     	;# 
  8415  010D                     	;# 
  8416  010E                     	;# 
  8417  010E                     	;# 
  8418  010F                     	;# 
  8419  0110                     	;# 
  8420  0110                     	;# 
  8421  0111                     	;# 
  8422  0112                     	;# 
  8423  0112                     	;# 
  8424  0113                     	;# 
  8425  0114                     	;# 
  8426  0114                     	;# 
  8427  0115                     	;# 
  8428  0116                     	;# 
  8429  0116                     	;# 
  8430  0117                     	;# 
  8431  0119                     	;# 
  8432  0119                     	;# 
  8433  0119                     	;# 
  8434  011A                     	;# 
  8435  011A                     	;# 
  8436  011A                     	;# 
  8437  011B                     	;# 
  8438  011B                     	;# 
  8439  011B                     	;# 
  8440  011B                     	;# 
  8441  011B                     	;# 
  8442  011C                     	;# 
  8443  011C                     	;# 
  8444  011C                     	;# 
  8445  011D                     	;# 
  8446  011D                     	;# 
  8447  011D                     	;# 
  8448  011E                     	;# 
  8449  011E                     	;# 
  8450  011E                     	;# 
  8451  011F                     	;# 
  8452  011F                     	;# 
  8453  011F                     	;# 
  8454  011F                     	;# 
  8455  011F                     	;# 
  8456  018C                     	;# 
  8457  018D                     	;# 
  8458  018E                     	;# 
  8459  018F                     	;# 
  8460  0190                     	;# 
  8461  0191                     	;# 
  8462  0192                     	;# 
  8463  0196                     	;# 
  8464  0197                     	;# 
  8465  0198                     	;# 
  8466  0199                     	;# 
  8467  019A                     	;# 
  8468  019B                     	;# 
  8469  019C                     	;# 
  8470  020C                     	;# 
  8471  020C                     	;# 
  8472  020D                     	;# 
  8473  020E                     	;# 
  8474  020F                     	;# 
  8475  020F                     	;# 
  8476  0210                     	;# 
  8477  0210                     	;# 
  8478  0211                     	;# 
  8479  0211                     	;# 
  8480  0212                     	;# 
  8481  0212                     	;# 
  8482  0213                     	;# 
  8483  0214                     	;# 
  8484  0215                     	;# 
  8485  0215                     	;# 
  8486  0216                     	;# 
  8487  0216                     	;# 
  8488  0217                     	;# 
  8489  0217                     	;# 
  8490  0218                     	;# 
  8491  0218                     	;# 
  8492  0219                     	;# 
  8493  021A                     	;# 
  8494  021B                     	;# 
  8495  021B                     	;# 
  8496  021C                     	;# 
  8497  021C                     	;# 
  8498  021D                     	;# 
  8499  021D                     	;# 
  8500  021E                     	;# 
  8501  021F                     	;# 
  8502  028C                     	;# 
  8503  028C                     	;# 
  8504  028D                     	;# 
  8505  028D                     	;# 
  8506  028E                     	;# 
  8507  028F                     	;# 
  8508  0290                     	;# 
  8509  0290                     	;# 
  8510  0291                     	;# 
  8511  0292                     	;# 
  8512  0292                     	;# 
  8513  0293                     	;# 
  8514  0293                     	;# 
  8515  0294                     	;# 
  8516  0295                     	;# 
  8517  0296                     	;# 
  8518  0296                     	;# 
  8519  0297                     	;# 
  8520  0298                     	;# 
  8521  0298                     	;# 
  8522  0299                     	;# 
  8523  0299                     	;# 
  8524  029A                     	;# 
  8525  029B                     	;# 
  8526  029C                     	;# 
  8527  029C                     	;# 
  8528  029D                     	;# 
  8529  030C                     	;# 
  8530  030C                     	;# 
  8531  030D                     	;# 
  8532  030E                     	;# 
  8533  030F                     	;# 
  8534  0310                     	;# 
  8535  0310                     	;# 
  8536  0311                     	;# 
  8537  0312                     	;# 
  8538  0313                     	;# 
  8539  0314                     	;# 
  8540  0314                     	;# 
  8541  0315                     	;# 
  8542  0316                     	;# 
  8543  0317                     	;# 
  8544  0318                     	;# 
  8545  0318                     	;# 
  8546  0319                     	;# 
  8547  031A                     	;# 
  8548  031B                     	;# 
  8549  031C                     	;# 
  8550  031C                     	;# 
  8551  031D                     	;# 
  8552  031E                     	;# 
  8553  031F                     	;# 
  8554  038C                     	;# 
  8555  038C                     	;# 
  8556  038D                     	;# 
  8557  038E                     	;# 
  8558  0390                     	;# 
  8559  0390                     	;# 
  8560  0391                     	;# 
  8561  0392                     	;# 
  8562  040C                     	;# 
  8563  040D                     	;# 
  8564  040E                     	;# 
  8565  040F                     	;# 
  8566  0410                     	;# 
  8567  0411                     	;# 
  8568  0416                     	;# 
  8569  0416                     	;# 
  8570  0417                     	;# 
  8571  0418                     	;# 
  8572  0418                     	;# 
  8573  0419                     	;# 
  8574  041A                     	;# 
  8575  041A                     	;# 
  8576  041B                     	;# 
  8577  041C                     	;# 
  8578  041C                     	;# 
  8579  041D                     	;# 
  8580  041E                     	;# 
  8581  041F                     	;# 
  8582  048C                     	;# 
  8583  048C                     	;# 
  8584  048D                     	;# 
  8585  048E                     	;# 
  8586  048F                     	;# 
  8587  048F                     	;# 
  8588  0490                     	;# 
  8589  0491                     	;# 
  8590  0492                     	;# 
  8591  0492                     	;# 
  8592  0493                     	;# 
  8593  0494                     	;# 
  8594  0495                     	;# 
  8595  0495                     	;# 
  8596  0496                     	;# 
  8597  0497                     	;# 
  8598  0498                     	;# 
  8599  0499                     	;# 
  8600  049A                     	;# 
  8601  049B                     	;# 
  8602  049C                     	;# 
  8603  049D                     	;# 
  8604  050C                     	;# 
  8605  050C                     	;# 
  8606  050D                     	;# 
  8607  050E                     	;# 
  8608  050F                     	;# 
  8609  050F                     	;# 
  8610  0510                     	;# 
  8611  0511                     	;# 
  8612  0512                     	;# 
  8613  0512                     	;# 
  8614  0513                     	;# 
  8615  0514                     	;# 
  8616  0515                     	;# 
  8617  0515                     	;# 
  8618  0516                     	;# 
  8619  0517                     	;# 
  8620  0518                     	;# 
  8621  0519                     	;# 
  8622  051A                     	;# 
  8623  051B                     	;# 
  8624  051C                     	;# 
  8625  051D                     	;# 
  8626  058C                     	;# 
  8627  058C                     	;# 
  8628  058D                     	;# 
  8629  058E                     	;# 
  8630  058F                     	;# 
  8631  058F                     	;# 
  8632  0590                     	;# 
  8633  0591                     	;# 
  8634  0592                     	;# 
  8635  0593                     	;# 
  8636  060C                     	;# 
  8637  060D                     	;# 
  8638  060E                     	;# 
  8639  060F                     	;# 
  8640  0610                     	;# 
  8641  0611                     	;# 
  8642  0612                     	;# 
  8643  0613                     	;# 
  8644  0614                     	;# 
  8645  0616                     	;# 
  8646  0617                     	;# 
  8647  0618                     	;# 
  8648  0619                     	;# 
  8649  061A                     	;# 
  8650  061B                     	;# 
  8651  061C                     	;# 
  8652  061D                     	;# 
  8653  061E                     	;# 
  8654  068C                     	;# 
  8655  068D                     	;# 
  8656  068E                     	;# 
  8657  068F                     	;# 
  8658  0690                     	;# 
  8659  0691                     	;# 
  8660  0692                     	;# 
  8661  0693                     	;# 
  8662  0694                     	;# 
  8663  070C                     	;# 
  8664  070D                     	;# 
  8665  070E                     	;# 
  8666  070F                     	;# 
  8667  0710                     	;# 
  8668  0711                     	;# 
  8669  0712                     	;# 
  8670  0713                     	;# 
  8671  0714                     	;# 
  8672  0716                     	;# 
  8673  0717                     	;# 
  8674  0718                     	;# 
  8675  0719                     	;# 
  8676  071A                     	;# 
  8677  071B                     	;# 
  8678  071C                     	;# 
  8679  071D                     	;# 
  8680  071E                     	;# 
  8681  0796                     	;# 
  8682  0797                     	;# 
  8683  0798                     	;# 
  8684  0799                     	;# 
  8685  079A                     	;# 
  8686  079B                     	;# 
  8687  080C                     	;# 
  8688  080D                     	;# 
  8689  080E                     	;# 
  8690  080F                     	;# 
  8691  0810                     	;# 
  8692  0811                     	;# 
  8693  0812                     	;# 
  8694  0813                     	;# 
  8695  0814                     	;# 
  8696  081A                     	;# 
  8697  081B                     	;# 
  8698  081C                     	;# 
  8699  081D                     	;# 
  8700  081E                     	;# 
  8701  081F                     	;# 
  8702  088C                     	;# 
  8703  088D                     	;# 
  8704  088E                     	;# 
  8705  088F                     	;# 
  8706  0890                     	;# 
  8707  0891                     	;# 
  8708  0892                     	;# 
  8709  0893                     	;# 
  8710  0895                     	;# 
  8711  0896                     	;# 
  8712  0897                     	;# 
  8713  0898                     	;# 
  8714  0899                     	;# 
  8715  089A                     	;# 
  8716  089B                     	;# 
  8717  090C                     	;# 
  8718  090E                     	;# 
  8719  090F                     	;# 
  8720  091F                     	;# 
  8721  091F                     	;# 
  8722  098F                     	;# 
  8723  098F                     	;# 
  8724  0990                     	;# 
  8725  0991                     	;# 
  8726  0992                     	;# 
  8727  0993                     	;# 
  8728  0994                     	;# 
  8729  0995                     	;# 
  8730  0996                     	;# 
  8731  0997                     	;# 
  8732  0E0F                     	;# 
  8733  0E10                     	;# 
  8734  0E11                     	;# 
  8735  0E12                     	;# 
  8736  0E13                     	;# 
  8737  0E14                     	;# 
  8738  0E15                     	;# 
  8739  0E16                     	;# 
  8740  0E17                     	;# 
  8741  0E18                     	;# 
  8742  0E19                     	;# 
  8743  0E1A                     	;# 
  8744  0E1B                     	;# 
  8745  0E1C                     	;# 
  8746  0E1D                     	;# 
  8747  0E1E                     	;# 
  8748  0E1F                     	;# 
  8749  0E20                     	;# 
  8750  0E21                     	;# 
  8751  0E22                     	;# 
  8752  0E23                     	;# 
  8753  0E24                     	;# 
  8754  0E25                     	;# 
  8755  0E26                     	;# 
  8756  0E27                     	;# 
  8757  0E28                     	;# 
  8758  0E29                     	;# 
  8759  0E2A                     	;# 
  8760  0E2B                     	;# 
  8761  0E2C                     	;# 
  8762  0E2D                     	;# 
  8763  0E2E                     	;# 
  8764  0E2F                     	;# 
  8765  0E30                     	;# 
  8766  0E31                     	;# 
  8767  0E32                     	;# 
  8768  0E33                     	;# 
  8769  0E34                     	;# 
  8770  0E35                     	;# 
  8771  0E36                     	;# 
  8772  0E37                     	;# 
  8773  0E8F                     	;# 
  8774  0E90                     	;# 
  8775  0E91                     	;# 
  8776  0E92                     	;# 
  8777  0E93                     	;# 
  8778  0E94                     	;# 
  8779  0E95                     	;# 
  8780  0E96                     	;# 
  8781  0E97                     	;# 
  8782  0E9C                     	;# 
  8783  0E9D                     	;# 
  8784  0E9E                     	;# 
  8785  0EA1                     	;# 
  8786  0EA2                     	;# 
  8787  0EA3                     	;# 
  8788  0EA4                     	;# 
  8789  0EA5                     	;# 
  8790  0EA9                     	;# 
  8791  0EAA                     	;# 
  8792  0EAB                     	;# 
  8793  0EAC                     	;# 
  8794  0EB1                     	;# 
  8795  0EB2                     	;# 
  8796  0EB3                     	;# 
  8797  0EB8                     	;# 
  8798  0EB9                     	;# 
  8799  0EBA                     	;# 
  8800  0EBB                     	;# 
  8801  0EBC                     	;# 
  8802  0EBD                     	;# 
  8803  0EBE                     	;# 
  8804  0EC3                     	;# 
  8805  0EC5                     	;# 
  8806  0EC6                     	;# 
  8807  0EC7                     	;# 
  8808  0EC8                     	;# 
  8809  0EC9                     	;# 
  8810  0ECA                     	;# 
  8811  0ECB                     	;# 
  8812  0ECC                     	;# 
  8813  0F10                     	;# 
  8814  0F11                     	;# 
  8815  0F12                     	;# 
  8816  0F13                     	;# 
  8817  0F14                     	;# 
  8818  0F15                     	;# 
  8819  0F16                     	;# 
  8820  0F17                     	;# 
  8821  0F18                     	;# 
  8822  0F19                     	;# 
  8823  0F1A                     	;# 
  8824  0F1B                     	;# 
  8825  0F1C                     	;# 
  8826  0F1D                     	;# 
  8827  0F1E                     	;# 
  8828  0F1F                     	;# 
  8829  0F20                     	;# 
  8830  0F21                     	;# 
  8831  0F22                     	;# 
  8832  0F23                     	;# 
  8833  0F24                     	;# 
  8834  0F25                     	;# 
  8835  0F26                     	;# 
  8836  0F27                     	;# 
  8837  0F28                     	;# 
  8838  0F29                     	;# 
  8839  0F2A                     	;# 
  8840  0F2B                     	;# 
  8841  0F2C                     	;# 
  8842  0F2D                     	;# 
  8843  0F2E                     	;# 
  8844  0F2F                     	;# 
  8845  0F30                     	;# 
  8846  0F31                     	;# 
  8847  0F32                     	;# 
  8848  0F38                     	;# 
  8849  0F39                     	;# 
  8850  0F3A                     	;# 
  8851  0F3B                     	;# 
  8852  0F3C                     	;# 
  8853  0F3D                     	;# 
  8854  0F3E                     	;# 
  8855  0F3F                     	;# 
  8856  0F40                     	;# 
  8857  0F41                     	;# 
  8858  0F43                     	;# 
  8859  0F44                     	;# 
  8860  0F45                     	;# 
  8861  0F46                     	;# 
  8862  0F47                     	;# 
  8863  0F48                     	;# 
  8864  0F49                     	;# 
  8865  0F4A                     	;# 
  8866  0F4B                     	;# 
  8867  0F4C                     	;# 
  8868  0F4E                     	;# 
  8869  0F4F                     	;# 
  8870  0F50                     	;# 
  8871  0F51                     	;# 
  8872  0F52                     	;# 
  8873  0F53                     	;# 
  8874  0F54                     	;# 
  8875  0F55                     	;# 
  8876  0F56                     	;# 
  8877  0F57                     	;# 
  8878  0F59                     	;# 
  8879  0F5A                     	;# 
  8880  0F5B                     	;# 
  8881  0F5C                     	;# 
  8882  0F5D                     	;# 
  8883  0F61                     	;# 
  8884  0F62                     	;# 
  8885  0F64                     	;# 
  8886  0F65                     	;# 
  8887  0F66                     	;# 
  8888  0F67                     	;# 
  8889  0F68                     	;# 
  8890  0F69                     	;# 
  8891  0F6A                     	;# 
  8892  0F6B                     	;# 
  8893  0F6C                     	;# 
  8894  0F6D                     	;# 
  8895  0FE4                     	;# 
  8896  0FE5                     	;# 
  8897  0FE6                     	;# 
  8898  0FE7                     	;# 
  8899  0FE8                     	;# 
  8900  0FE9                     	;# 
  8901  0FEA                     	;# 
  8902  0FEB                     	;# 
  8903  0FED                     	;# 
  8904  0FEE                     	;# 
  8905  0FEF                     	;# 
  8906  0000                     	;# 
  8907  0001                     	;# 
  8908  0002                     	;# 
  8909  0003                     	;# 
  8910  0004                     	;# 
  8911  0005                     	;# 
  8912  0006                     	;# 
  8913  0007                     	;# 
  8914  0008                     	;# 
  8915  0009                     	;# 
  8916  000A                     	;# 
  8917  000B                     	;# 
  8918  000C                     	;# 
  8919  000D                     	;# 
  8920  000E                     	;# 
  8921  000F                     	;# 
  8922  0010                     	;# 
  8923  0011                     	;# 
  8924  0012                     	;# 
  8925  0013                     	;# 
  8926  0014                     	;# 
  8927  0015                     	;# 
  8928  0016                     	;# 
  8929  0017                     	;# 
  8930  0018                     	;# 
  8931  0019                     	;# 
  8932  001A                     	;# 
  8933  001C                     	;# 
  8934  001C                     	;# 
  8935  001D                     	;# 
  8936  001D                     	;# 
  8937  001E                     	;# 
  8938  001F                     	;# 
  8939  008C                     	;# 
  8940  008C                     	;# 
  8941  008D                     	;# 
  8942  008E                     	;# 
  8943  008E                     	;# 
  8944  008F                     	;# 
  8945  0090                     	;# 
  8946  0090                     	;# 
  8947  0091                     	;# 
  8948  0093                     	;# 
  8949  0094                     	;# 
  8950  0095                     	;# 
  8951  0096                     	;# 
  8952  0097                     	;# 
  8953  0098                     	;# 
  8954  0099                     	;# 
  8955  009A                     	;# 
  8956  009B                     	;# 
  8957  009C                     	;# 
  8958  009D                     	;# 
  8959  009E                     	;# 
  8960  010C                     	;# 
  8961  010D                     	;# 
  8962  010E                     	;# 
  8963  010E                     	;# 
  8964  010F                     	;# 
  8965  0110                     	;# 
  8966  0110                     	;# 
  8967  0111                     	;# 
  8968  0112                     	;# 
  8969  0112                     	;# 
  8970  0113                     	;# 
  8971  0114                     	;# 
  8972  0114                     	;# 
  8973  0115                     	;# 
  8974  0116                     	;# 
  8975  0116                     	;# 
  8976  0117                     	;# 
  8977  0119                     	;# 
  8978  0119                     	;# 
  8979  0119                     	;# 
  8980  011A                     	;# 
  8981  011A                     	;# 
  8982  011A                     	;# 
  8983  011B                     	;# 
  8984  011B                     	;# 
  8985  011B                     	;# 
  8986  011B                     	;# 
  8987  011B                     	;# 
  8988  011C                     	;# 
  8989  011C                     	;# 
  8990  011C                     	;# 
  8991  011D                     	;# 
  8992  011D                     	;# 
  8993  011D                     	;# 
  8994  011E                     	;# 
  8995  011E                     	;# 
  8996  011E                     	;# 
  8997  011F                     	;# 
  8998  011F                     	;# 
  8999  011F                     	;# 
  9000  011F                     	;# 
  9001  011F                     	;# 
  9002  018C                     	;# 
  9003  018D                     	;# 
  9004  018E                     	;# 
  9005  018F                     	;# 
  9006  0190                     	;# 
  9007  0191                     	;# 
  9008  0192                     	;# 
  9009  0196                     	;# 
  9010  0197                     	;# 
  9011  0198                     	;# 
  9012  0199                     	;# 
  9013  019A                     	;# 
  9014  019B                     	;# 
  9015  019C                     	;# 
  9016  020C                     	;# 
  9017  020C                     	;# 
  9018  020D                     	;# 
  9019  020E                     	;# 
  9020  020F                     	;# 
  9021  020F                     	;# 
  9022  0210                     	;# 
  9023  0210                     	;# 
  9024  0211                     	;# 
  9025  0211                     	;# 
  9026  0212                     	;# 
  9027  0212                     	;# 
  9028  0213                     	;# 
  9029  0214                     	;# 
  9030  0215                     	;# 
  9031  0215                     	;# 
  9032  0216                     	;# 
  9033  0216                     	;# 
  9034  0217                     	;# 
  9035  0217                     	;# 
  9036  0218                     	;# 
  9037  0218                     	;# 
  9038  0219                     	;# 
  9039  021A                     	;# 
  9040  021B                     	;# 
  9041  021B                     	;# 
  9042  021C                     	;# 
  9043  021C                     	;# 
  9044  021D                     	;# 
  9045  021D                     	;# 
  9046  021E                     	;# 
  9047  021F                     	;# 
  9048  028C                     	;# 
  9049  028C                     	;# 
  9050  028D                     	;# 
  9051  028D                     	;# 
  9052  028E                     	;# 
  9053  028F                     	;# 
  9054  0290                     	;# 
  9055  0290                     	;# 
  9056  0291                     	;# 
  9057  0292                     	;# 
  9058  0292                     	;# 
  9059  0293                     	;# 
  9060  0293                     	;# 
  9061  0294                     	;# 
  9062  0295                     	;# 
  9063  0296                     	;# 
  9064  0296                     	;# 
  9065  0297                     	;# 
  9066  0298                     	;# 
  9067  0298                     	;# 
  9068  0299                     	;# 
  9069  0299                     	;# 
  9070  029A                     	;# 
  9071  029B                     	;# 
  9072  029C                     	;# 
  9073  029C                     	;# 
  9074  029D                     	;# 
  9075  030C                     	;# 
  9076  030C                     	;# 
  9077  030D                     	;# 
  9078  030E                     	;# 
  9079  030F                     	;# 
  9080  0310                     	;# 
  9081  0310                     	;# 
  9082  0311                     	;# 
  9083  0312                     	;# 
  9084  0313                     	;# 
  9085  0314                     	;# 
  9086  0314                     	;# 
  9087  0315                     	;# 
  9088  0316                     	;# 
  9089  0317                     	;# 
  9090  0318                     	;# 
  9091  0318                     	;# 
  9092  0319                     	;# 
  9093  031A                     	;# 
  9094  031B                     	;# 
  9095  031C                     	;# 
  9096  031C                     	;# 
  9097  031D                     	;# 
  9098  031E                     	;# 
  9099  031F                     	;# 
  9100  038C                     	;# 
  9101  038C                     	;# 
  9102  038D                     	;# 
  9103  038E                     	;# 
  9104  0390                     	;# 
  9105  0390                     	;# 
  9106  0391                     	;# 
  9107  0392                     	;# 
  9108  040C                     	;# 
  9109  040D                     	;# 
  9110  040E                     	;# 
  9111  040F                     	;# 
  9112  0410                     	;# 
  9113  0411                     	;# 
  9114  0416                     	;# 
  9115  0416                     	;# 
  9116  0417                     	;# 
  9117  0418                     	;# 
  9118  0418                     	;# 
  9119  0419                     	;# 
  9120  041A                     	;# 
  9121  041A                     	;# 
  9122  041B                     	;# 
  9123  041C                     	;# 
  9124  041C                     	;# 
  9125  041D                     	;# 
  9126  041E                     	;# 
  9127  041F                     	;# 
  9128  048C                     	;# 
  9129  048C                     	;# 
  9130  048D                     	;# 
  9131  048E                     	;# 
  9132  048F                     	;# 
  9133  048F                     	;# 
  9134  0490                     	;# 
  9135  0491                     	;# 
  9136  0492                     	;# 
  9137  0492                     	;# 
  9138  0493                     	;# 
  9139  0494                     	;# 
  9140  0495                     	;# 
  9141  0495                     	;# 
  9142  0496                     	;# 
  9143  0497                     	;# 
  9144  0498                     	;# 
  9145  0499                     	;# 
  9146  049A                     	;# 
  9147  049B                     	;# 
  9148  049C                     	;# 
  9149  049D                     	;# 
  9150  050C                     	;# 
  9151  050C                     	;# 
  9152  050D                     	;# 
  9153  050E                     	;# 
  9154  050F                     	;# 
  9155  050F                     	;# 
  9156  0510                     	;# 
  9157  0511                     	;# 
  9158  0512                     	;# 
  9159  0512                     	;# 
  9160  0513                     	;# 
  9161  0514                     	;# 
  9162  0515                     	;# 
  9163  0515                     	;# 
  9164  0516                     	;# 
  9165  0517                     	;# 
  9166  0518                     	;# 
  9167  0519                     	;# 
  9168  051A                     	;# 
  9169  051B                     	;# 
  9170  051C                     	;# 
  9171  051D                     	;# 
  9172  058C                     	;# 
  9173  058C                     	;# 
  9174  058D                     	;# 
  9175  058E                     	;# 
  9176  058F                     	;# 
  9177  058F                     	;# 
  9178  0590                     	;# 
  9179  0591                     	;# 
  9180  0592                     	;# 
  9181  0593                     	;# 
  9182  060C                     	;# 
  9183  060D                     	;# 
  9184  060E                     	;# 
  9185  060F                     	;# 
  9186  0610                     	;# 
  9187  0611                     	;# 
  9188  0612                     	;# 
  9189  0613                     	;# 
  9190  0614                     	;# 
  9191  0616                     	;# 
  9192  0617                     	;# 
  9193  0618                     	;# 
  9194  0619                     	;# 
  9195  061A                     	;# 
  9196  061B                     	;# 
  9197  061C                     	;# 
  9198  061D                     	;# 
  9199  061E                     	;# 
  9200  068C                     	;# 
  9201  068D                     	;# 
  9202  068E                     	;# 
  9203  068F                     	;# 
  9204  0690                     	;# 
  9205  0691                     	;# 
  9206  0692                     	;# 
  9207  0693                     	;# 
  9208  0694                     	;# 
  9209  070C                     	;# 
  9210  070D                     	;# 
  9211  070E                     	;# 
  9212  070F                     	;# 
  9213  0710                     	;# 
  9214  0711                     	;# 
  9215  0712                     	;# 
  9216  0713                     	;# 
  9217  0714                     	;# 
  9218  0716                     	;# 
  9219  0717                     	;# 
  9220  0718                     	;# 
  9221  0719                     	;# 
  9222  071A                     	;# 
  9223  071B                     	;# 
  9224  071C                     	;# 
  9225  071D                     	;# 
  9226  071E                     	;# 
  9227  0796                     	;# 
  9228  0797                     	;# 
  9229  0798                     	;# 
  9230  0799                     	;# 
  9231  079A                     	;# 
  9232  079B                     	;# 
  9233  080C                     	;# 
  9234  080D                     	;# 
  9235  080E                     	;# 
  9236  080F                     	;# 
  9237  0810                     	;# 
  9238  0811                     	;# 
  9239  0812                     	;# 
  9240  0813                     	;# 
  9241  0814                     	;# 
  9242  081A                     	;# 
  9243  081B                     	;# 
  9244  081C                     	;# 
  9245  081D                     	;# 
  9246  081E                     	;# 
  9247  081F                     	;# 
  9248  088C                     	;# 
  9249  088D                     	;# 
  9250  088E                     	;# 
  9251  088F                     	;# 
  9252  0890                     	;# 
  9253  0891                     	;# 
  9254  0892                     	;# 
  9255  0893                     	;# 
  9256  0895                     	;# 
  9257  0896                     	;# 
  9258  0897                     	;# 
  9259  0898                     	;# 
  9260  0899                     	;# 
  9261  089A                     	;# 
  9262  089B                     	;# 
  9263  090C                     	;# 
  9264  090E                     	;# 
  9265  090F                     	;# 
  9266  091F                     	;# 
  9267  091F                     	;# 
  9268  098F                     	;# 
  9269  098F                     	;# 
  9270  0990                     	;# 
  9271  0991                     	;# 
  9272  0992                     	;# 
  9273  0993                     	;# 
  9274  0994                     	;# 
  9275  0995                     	;# 
  9276  0996                     	;# 
  9277  0997                     	;# 
  9278  0E0F                     	;# 
  9279  0E10                     	;# 
  9280  0E11                     	;# 
  9281  0E12                     	;# 
  9282  0E13                     	;# 
  9283  0E14                     	;# 
  9284  0E15                     	;# 
  9285  0E16                     	;# 
  9286  0E17                     	;# 
  9287  0E18                     	;# 
  9288  0E19                     	;# 
  9289  0E1A                     	;# 
  9290  0E1B                     	;# 
  9291  0E1C                     	;# 
  9292  0E1D                     	;# 
  9293  0E1E                     	;# 
  9294  0E1F                     	;# 
  9295  0E20                     	;# 
  9296  0E21                     	;# 
  9297  0E22                     	;# 
  9298  0E23                     	;# 
  9299  0E24                     	;# 
  9300  0E25                     	;# 
  9301  0E26                     	;# 
  9302  0E27                     	;# 
  9303  0E28                     	;# 
  9304  0E29                     	;# 
  9305  0E2A                     	;# 
  9306  0E2B                     	;# 
  9307  0E2C                     	;# 
  9308  0E2D                     	;# 
  9309  0E2E                     	;# 
  9310  0E2F                     	;# 
  9311  0E30                     	;# 
  9312  0E31                     	;# 
  9313  0E32                     	;# 
  9314  0E33                     	;# 
  9315  0E34                     	;# 
  9316  0E35                     	;# 
  9317  0E36                     	;# 
  9318  0E37                     	;# 
  9319  0E8F                     	;# 
  9320  0E90                     	;# 
  9321  0E91                     	;# 
  9322  0E92                     	;# 
  9323  0E93                     	;# 
  9324  0E94                     	;# 
  9325  0E95                     	;# 
  9326  0E96                     	;# 
  9327  0E97                     	;# 
  9328  0E9C                     	;# 
  9329  0E9D                     	;# 
  9330  0E9E                     	;# 
  9331  0EA1                     	;# 
  9332  0EA2                     	;# 
  9333  0EA3                     	;# 
  9334  0EA4                     	;# 
  9335  0EA5                     	;# 
  9336  0EA9                     	;# 
  9337  0EAA                     	;# 
  9338  0EAB                     	;# 
  9339  0EAC                     	;# 
  9340  0EB1                     	;# 
  9341  0EB2                     	;# 
  9342  0EB3                     	;# 
  9343  0EB8                     	;# 
  9344  0EB9                     	;# 
  9345  0EBA                     	;# 
  9346  0EBB                     	;# 
  9347  0EBC                     	;# 
  9348  0EBD                     	;# 
  9349  0EBE                     	;# 
  9350  0EC3                     	;# 
  9351  0EC5                     	;# 
  9352  0EC6                     	;# 
  9353  0EC7                     	;# 
  9354  0EC8                     	;# 
  9355  0EC9                     	;# 
  9356  0ECA                     	;# 
  9357  0ECB                     	;# 
  9358  0ECC                     	;# 
  9359  0F10                     	;# 
  9360  0F11                     	;# 
  9361  0F12                     	;# 
  9362  0F13                     	;# 
  9363  0F14                     	;# 
  9364  0F15                     	;# 
  9365  0F16                     	;# 
  9366  0F17                     	;# 
  9367  0F18                     	;# 
  9368  0F19                     	;# 
  9369  0F1A                     	;# 
  9370  0F1B                     	;# 
  9371  0F1C                     	;# 
  9372  0F1D                     	;# 
  9373  0F1E                     	;# 
  9374  0F1F                     	;# 
  9375  0F20                     	;# 
  9376  0F21                     	;# 
  9377  0F22                     	;# 
  9378  0F23                     	;# 
  9379  0F24                     	;# 
  9380  0F25                     	;# 
  9381  0F26                     	;# 
  9382  0F27                     	;# 
  9383  0F28                     	;# 
  9384  0F29                     	;# 
  9385  0F2A                     	;# 
  9386  0F2B                     	;# 
  9387  0F2C                     	;# 
  9388  0F2D                     	;# 
  9389  0F2E                     	;# 
  9390  0F2F                     	;# 
  9391  0F30                     	;# 
  9392  0F31                     	;# 
  9393  0F32                     	;# 
  9394  0F38                     	;# 
  9395  0F39                     	;# 
  9396  0F3A                     	;# 
  9397  0F3B                     	;# 
  9398  0F3C                     	;# 
  9399  0F3D                     	;# 
  9400  0F3E                     	;# 
  9401  0F3F                     	;# 
  9402  0F40                     	;# 
  9403  0F41                     	;# 
  9404  0F43                     	;# 
  9405  0F44                     	;# 
  9406  0F45                     	;# 
  9407  0F46                     	;# 
  9408  0F47                     	;# 
  9409  0F48                     	;# 
  9410  0F49                     	;# 
  9411  0F4A                     	;# 
  9412  0F4B                     	;# 
  9413  0F4C                     	;# 
  9414  0F4E                     	;# 
  9415  0F4F                     	;# 
  9416  0F50                     	;# 
  9417  0F51                     	;# 
  9418  0F52                     	;# 
  9419  0F53                     	;# 
  9420  0F54                     	;# 
  9421  0F55                     	;# 
  9422  0F56                     	;# 
  9423  0F57                     	;# 
  9424  0F59                     	;# 
  9425  0F5A                     	;# 
  9426  0F5B                     	;# 
  9427  0F5C                     	;# 
  9428  0F5D                     	;# 
  9429  0F61                     	;# 
  9430  0F62                     	;# 
  9431  0F64                     	;# 
  9432  0F65                     	;# 
  9433  0F66                     	;# 
  9434  0F67                     	;# 
  9435  0F68                     	;# 
  9436  0F69                     	;# 
  9437  0F6A                     	;# 
  9438  0F6B                     	;# 
  9439  0F6C                     	;# 
  9440  0F6D                     	;# 
  9441  0FE4                     	;# 
  9442  0FE5                     	;# 
  9443  0FE6                     	;# 
  9444  0FE7                     	;# 
  9445  0FE8                     	;# 
  9446  0FE9                     	;# 
  9447  0FEA                     	;# 
  9448  0FEB                     	;# 
  9449  0FED                     	;# 
  9450  0FEE                     	;# 
  9451  0FEF                     	;# 
  9452                           
  9453                           	psect	idataBANK0
  9454  0834                     __pidataBANK0:	
  9455                           
  9456                           ;initializer for _mode_field_subfield
  9457  0834  34FF               	retlw	255
  9458  0835  34FF               	retlw	255
  9459  0836  34FF               	retlw	255
  9460  0837  34FF               	retlw	255
  9461                           
  9462                           ;initializer for _lum_thresh
  9463  0838  3402               	retlw	2
  9464                           
  9465                           ;initializer for _temp_thresh
  9466  0839  3464               	retlw	100
  9467                           
  9468                           ;initializer for _tala
  9469  083A  3403               	retlw	3
  9470                           
  9471                           ;initializer for _pmon
  9472  083B  3405               	retlw	5
  9473                           
  9474                           ;initializer for _nreg
  9475  083C  341E               	retlw	30
  9476                           
  9477                           	psect	stringtext1
  9478  1000                     __pstringtext1:	
  9479  1000                     _fsmStateTable:	
  9480  1000  3485               	retlw	low _do_I2C_IDLE
  9481  1001  3417               	retlw	high _do_I2C_IDLE
  9482  1002  34EE               	retlw	low _do_I2C_SEND_ADR_READ
  9483  1003  3417               	retlw	high _do_I2C_SEND_ADR_READ
  9484  1004  34D6               	retlw	low _do_I2C_SEND_ADR_WRITE
  9485  1005  3417               	retlw	high _do_I2C_SEND_ADR_WRITE
  9486  1006  3404               	retlw	low _do_I2C_TX
  9487  1007  340F               	retlw	high _do_I2C_TX
  9488  1008  34D2               	retlw	low _do_I2C_RX
  9489  1009  340D               	retlw	high _do_I2C_RX
  9490  100A  34BF               	retlw	low _do_I2C_RCEN
  9491  100B  3417               	retlw	high _do_I2C_RCEN
  9492  100C  349C               	retlw	low _do_I2C_TX_EMPTY
  9493  100D  340C               	retlw	high _do_I2C_TX_EMPTY
  9494  100E  348A               	retlw	low _do_I2C_SEND_RESTART_READ
  9495  100F  3417               	retlw	high _do_I2C_SEND_RESTART_READ
  9496  1010  348F               	retlw	low _do_I2C_SEND_RESTART_WRITE
  9497  1011  3417               	retlw	high _do_I2C_SEND_RESTART_WRITE
  9498  1012  3494               	retlw	low _do_I2C_SEND_RESTART
  9499  1013  3417               	retlw	high _do_I2C_SEND_RESTART
  9500  1014  3499               	retlw	low _do_I2C_SEND_STOP
  9501  1015  3417               	retlw	high _do_I2C_SEND_STOP
  9502  1016  349E               	retlw	low _do_I2C_DO_ACK
  9503  1017  3417               	retlw	high _do_I2C_DO_ACK
  9504  1018  34A3               	retlw	low _do_I2C_DO_NACK_STOP
  9505  1019  3417               	retlw	high _do_I2C_DO_NACK_STOP
  9506  101A  34A8               	retlw	low _do_I2C_DO_NACK_RESTART
  9507  101B  3417               	retlw	high _do_I2C_DO_NACK_RESTART
  9508  101C  34CE               	retlw	low _do_I2C_RESET
  9509  101D  3417               	retlw	high _do_I2C_RESET
  9510  101E  3414               	retlw	low _do_I2C_DO_ADDRESS_NACK
  9511  101F  340C               	retlw	high _do_I2C_DO_ADDRESS_NACK
  9512  1020                     __end_of_fsmStateTable:	
  9513                           
  9514                           	psect	stringtext2
  9515  1800                     __pstringtext2:	
  9516  1800                     _num_subfields:	
  9517  1800  3400               	retlw	0
  9518  1801  3404               	retlw	4
  9519  1802  3401               	retlw	1
  9520  1803  3402               	retlw	2
  9521  1804  3401               	retlw	1
  9522  1805                     __end_of_num_subfields:	
  9523                           
  9524                           	psect	nvBANK0
  9525  0068                     __pnvBANK0:	
  9526  0068                     _timer1ReloadVal:	
  9527  0068                     	ds	2
  9528                           
  9529                           	psect	nvBANK1
  9530  00D8                     __pnvBANK1:	
  9531  00D8                     _TMR2_InterruptHandler:	
  9532  00D8                     	ds	2
  9533  00DA                     _TMR1_InterruptHandler:	
  9534  00DA                     	ds	2
  9535  00DC                     _TMR0_InterruptHandler:	
  9536  00DC                     	ds	2
  9537  00DE                     _INT_InterruptHandler:	
  9538  00DE                     	ds	2
  9539  0016                     _LATAbits	set	22
  9540  000E                     _PORTCbits	set	14
  9541  000D                     _PORTBbits	set	13
  9542  0013                     _TRISCbits	set	19
  9543  001E                     _T0CON0bits	set	30
  9544  001E                     _T0CON0	set	30
  9545  001C                     _TMR0L	set	28
  9546  001D                     _TMR0H	set	29
  9547  001F                     _T0CON1	set	31
  9548  0014                     _TRISD	set	20
  9549  0013                     _TRISC	set	19
  9550  0012                     _TRISB	set	18
  9551  0011                     _TRISA	set	17
  9552  0015                     _TRISE	set	21
  9553  0018                     _LATC	set	24
  9554  0017                     _LATB	set	23
  9555  0016                     _LATA	set	22
  9556  0019                     _LATD	set	25
  9557  001A                     _LATE	set	26
  9558  000B                     _INTCONbits	set	11
  9559  0094                     _ADCON1bits	set	148
  9560  008E                     _ADPREVL	set	142
  9561  008F                     _ADPREVH	set	143
  9562  0097                     _ADSTATbits	set	151
  9563  0090                     _ADACCL	set	144
  9564  0091                     _ADACCH	set	145
  9565  0095                     _ADCON2bits	set	149
  9566  009C                     _ADPRE	set	156
  9567  0096                     _ADCON3bits	set	150
  9568  008C                     _ADRESL	set	140
  9569  008D                     _ADRESH	set	141
  9570  0093                     _ADCON0bits	set	147
  9571  009D                     _ADACQ	set	157
  9572  0093                     _ADCON0	set	147
  9573  0098                     _ADCLK	set	152
  9574  0099                     _ADACT	set	153
  9575  009A                     _ADREF	set	154
  9576  0097                     _ADSTAT	set	151
  9577  0096                     _ADCON3	set	150
  9578  0095                     _ADCON2	set	149
  9579  0094                     _ADCON1	set	148
  9580  009B                     _ADCAP	set	155
  9581  009E                     _ADPCH	set	158
  9582  0116                     _ADERRL	set	278
  9583  0117                     _ADERRH	set	279
  9584  0114                     _ADFLTRL	set	276
  9585  0115                     _ADFLTRH	set	277
  9586  010C                     _ADCNT	set	268
  9587  010D                     _ADRPT	set	269
  9588  0113                     _ADSTPTH	set	275
  9589  0112                     _ADSTPTL	set	274
  9590  0111                     _ADUTHH	set	273
  9591  0110                     _ADUTHL	set	272
  9592  010F                     _ADLTHH	set	271
  9593  010E                     _ADLTHL	set	270
  9594  018F                     _SSP1STATbits	set	399
  9595  018E                     _SSP1MSK	set	398
  9596  018C                     _SSP1BUF	set	396
  9597  0191                     _SSP1CON2bits	set	401
  9598  018D                     _SSP1ADD	set	397
  9599  0191                     _SSP1CON2	set	401
  9600  0190                     _SSP1CON1	set	400
  9601  018F                     _SSP1STAT	set	399
  9602  0190                     _SSP1CON1bits	set	400
  9603  021F                     _CCPTMRS1bits	set	543
  9604  020F                     _T1GCONbits	set	527
  9605  020E                     _T1CONbits	set	526
  9606  020E                     _T1CON	set	526
  9607  020C                     _TMR1L	set	524
  9608  020D                     _TMR1H	set	525
  9609  0211                     _T1CLK	set	529
  9610  0210                     _T1GATE	set	528
  9611  020F                     _T1GCON	set	527
  9612  028D                     _PR2	set	653
  9613  028C                     _TMR2	set	652
  9614  028E                     _T2CONbits	set	654
  9615  0291                     _T2RSTbits	set	657
  9616  028F                     _T2HLTbits	set	655
  9617  028E                     _T2CON	set	654
  9618  028C                     _T2TMR	set	652
  9619  028D                     _T2PR	set	653
  9620  0291                     _T2RST	set	657
  9621  028F                     _T2HLT	set	655
  9622  0290                     _T2CLKCON	set	656
  9623  038C                     _PWM6DCL	set	908
  9624  038D                     _PWM6DCH	set	909
  9625  038E                     _PWM6CON	set	910
  9626  0710                     _PIR4bits	set	1808
  9627  071A                     _PIE4bits	set	1818
  9628  070F                     _PIR3bits	set	1807
  9629  0719                     _PIE3bits	set	1817
  9630  0716                     _PIE0bits	set	1814
  9631  070C                     _PIR0bits	set	1804
  9632  079B                     _PMD5	set	1947
  9633  079A                     _PMD4	set	1946
  9634  0799                     _PMD3	set	1945
  9635  0798                     _PMD2	set	1944
  9636  0797                     _PMD1	set	1943
  9637  0796                     _PMD0	set	1942
  9638  081F                     _NVMCON2	set	2079
  9639  081C                     _NVMDATL	set	2076
  9640  081D                     _NVMDATH	set	2077
  9641  081E                     _NVMCON1bits	set	2078
  9642  081B                     _NVMADRH	set	2075
  9643  081A                     _NVMADRL	set	2074
  9644  0892                     _OSCTUNE	set	2194
  9645  0893                     _OSCFRQ	set	2195
  9646  0891                     _OSCEN	set	2193
  9647  088F                     _OSCCON3	set	2191
  9648  088D                     _OSCCON1	set	2189
  9649  0EC6                     _SSP1DATPPS	set	3782
  9650  0EC5                     _SSP1CLKPPS	set	3781
  9651  0E90                     _INTPPS	set	3728
  9652  0F44                     _WPUBbits	set	3908
  9653  0F16                     _RA6PPS	set	3862
  9654  0F24                     _RC4PPS	set	3876
  9655  0F23                     _RC3PPS	set	3875
  9656  0F68                     _INLVLE	set	3944
  9657  0F5D                     _INLVLD	set	3933
  9658  0F52                     _INLVLC	set	3922
  9659  0F47                     _INLVLB	set	3911
  9660  0F3C                     _INLVLA	set	3900
  9661  0F67                     _SLRCONE	set	3943
  9662  0F5C                     _SLRCOND	set	3932
  9663  0F51                     _SLRCONC	set	3921
  9664  0F46                     _SLRCONB	set	3910
  9665  0F3B                     _SLRCONA	set	3899
  9666  0F5B                     _ODCOND	set	3931
  9667  0F50                     _ODCONC	set	3920
  9668  0F45                     _ODCONB	set	3909
  9669  0F3A                     _ODCONA	set	3898
  9670  0F66                     _ODCONE	set	3942
  9671  0F4F                     _WPUC	set	3919
  9672  0F39                     _WPUA	set	3897
  9673  0F44                     _WPUB	set	3908
  9674  0F65                     _WPUE	set	3941
  9675  0F5A                     _WPUD	set	3930
  9676  0F38                     _ANSELA	set	3896
  9677  0F64                     _ANSELE	set	3940
  9678  0F43                     _ANSELB	set	3907
  9679  0F4E                     _ANSELC	set	3918
  9680  0F59                     _ANSELD	set	3929
  9681  7A7C                     _WPUC4	set	31356
  9682  7A7B                     _WPUC3	set	31355
  9683                           
  9684                           ; #config settings
  9685  0000                     
  9686                           	psect	cinit
  9687  005D                     start_initialization:	
  9688  005D                     __initialization:	
  9689                           
  9690                           ; Initialize objects allocated to BANK0
  9691  005D  3034               	movlw	low __pidataBANK0
  9692  005E  0084               	movwf	4
  9693  005F  3088               	movlw	(high __pidataBANK0)| (0+128)
  9694  0060  0085               	movwf	5
  9695  0061  305F               	movlw	low __pdataBANK0
  9696  0062  0086               	movwf	6
  9697  0063  3000               	movlw	high __pdataBANK0
  9698  0064  0087               	movwf	7
  9699  0065  3009               	movlw	9
  9700  0066  3197  27B9  3180   	fcall	init_ram
  9701                           
  9702                           ; Clear objects allocated to COMMON
  9703  0069  01FD               	clrf	__pbssCOMMON& (0+127)
  9704                           
  9705                           ; Clear objects allocated to BANK0
  9706  006A  304D               	movlw	low __pbssBANK0
  9707  006B  0084               	movwf	4
  9708  006C  3000               	movlw	high __pbssBANK0
  9709  006D  0085               	movwf	5
  9710  006E  3012               	movlw	18
  9711  006F  3197  27B3  3180   	fcall	clear_ram0
  9712                           
  9713                           ; Clear objects allocated to BANK1
  9714  0072  30A0               	movlw	low __pbssBANK1
  9715  0073  0084               	movwf	4
  9716  0074  3000               	movlw	high __pbssBANK1
  9717  0075  0085               	movwf	5
  9718  0076  3038               	movlw	56
  9719  0077  3197  27B3  3180   	fcall	clear_ram0
  9720  007A                     end_of_initialization:	
  9721                           ;End of C runtime variable initialization code
  9722                           
  9723  007A                     __end_of__initialization:	
  9724  007A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9725  007B  0020               	movlb	0
  9726  007C  3180  287E         	ljmp	_main	;jump to C main() function
  9727                           
  9728                           	psect	bssCOMMON
  9729  007D                     __pbssCOMMON:	
  9730  007D                     _clkms:	
  9731  007D                     	ds	1
  9732                           
  9733                           	psect	bssBANK0
  9734  004D                     __pbssBANK0:	
  9735  004D                     _threshold:	
  9736  004D                     	ds	2
  9737  004F                     _lum_bin:	
  9738  004F                     	ds	2
  9739  0051                     _alaf:	
  9740  0051                     	ds	1
  9741  0052                     _temp:	
  9742  0052                     	ds	1
  9743  0053                     _alarm:	
  9744  0053                     	ds	1
  9745  0054                     _config_mode:	
  9746  0054                     	ds	1
  9747  0055                     _set_mode:	
  9748  0055                     	ds	1
  9749  0056                     _last1m:	
  9750  0056                     	ds	1
  9751  0057                     _last5s:	
  9752  0057                     	ds	1
  9753  0058                     _last_ms2:	
  9754  0058                     	ds	1
  9755  0059                     _last_ms:	
  9756  0059                     	ds	1
  9757  005A                     _seg:	
  9758  005A                     	ds	1
  9759  005B                     _clkm:	
  9760  005B                     	ds	1
  9761  005C                     _clkh:	
  9762  005C                     	ds	1
  9763  005D                     _nreg_pt:	
  9764  005D                     	ds	1
  9765  005E                     _nreg_init:	
  9766  005E                     	ds	1
  9767                           
  9768                           	psect	dataBANK0
  9769  005F                     __pdataBANK0:	
  9770  005F                     _mode_field_subfield:	
  9771  005F                     	ds	4
  9772  0063                     _lum_thresh:	
  9773  0063                     	ds	1
  9774  0064                     _temp_thresh:	
  9775  0064                     	ds	1
  9776  0065                     _tala:	
  9777  0065                     	ds	1
  9778  0066                     _pmon:	
  9779  0066                     	ds	1
  9780  0067                     _nreg:	
  9781  0067                     	ds	1
  9782                           
  9783                           	psect	bssBANK1
  9784  00A0                     __pbssBANK1:	
  9785  00A0                     _i2c_status:	
  9786  00A0                     	ds	29
  9787  00BD                     _subfield_info:	
  9788  00BD                     	ds	4
  9789  00C1                     _duty_cycle:	
  9790  00C1                     	ds	2
  9791  00C3                     _convertedValue:	
  9792  00C3                     	ds	2
  9793  00C5                     _min_units:	
  9794  00C5                     	ds	2
  9795  00C7                     _min_tens:	
  9796  00C7                     	ds	2
  9797  00C9                     _hours_units:	
  9798  00C9                     	ds	2
  9799  00CB                     _hours_tens:	
  9800  00CB                     	ds	2
  9801  00CD                     _value:	
  9802  00CD                     	ds	2
  9803  00CF                     _i2c1_driver_i2cISR:	
  9804  00CF                     	ds	2
  9805  00D1                     _i2c1_driver_busCollisionISR:	
  9806  00D1                     	ds	2
  9807  00D3                     _ring_byte:	
  9808  00D3                     	ds	5
  9809                           
  9810                           	psect	inittext
  9811  17B9                     init_ram:	
  9812  17B9  00FE               	movwf	btemp
  9813  17BA                     initloop:	
  9814  17BA  0012               	moviw fsr0++
  9815  17BB  001E               	movwi fsr1++
  9816  17BC  0BFE               	decfsz	btemp,f
  9817  17BD  2FBA               	goto	initloop
  9818  17BE  3400               	retlw	0
  9819                           
  9820                           	psect	clrtext
  9821  17B3                     clear_ram0:	
  9822                           ;	Called with FSR0 containing the base address, and
  9823                           ;	WREG with the size to clear
  9824                           
  9825  17B3  0064               	clrwdt	;clear the watchdog before getting into this loop
  9826  17B4                     clrloop0:	
  9827  17B4  0180               	clrf	0	;clear RAM location pointed to by FSR
  9828  17B5  3101               	addfsr 0,1
  9829  17B6  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  9830  17B7  2FB4               	goto	clrloop0	;have we reached the end yet?
  9831  17B8  3400               	retlw	0	;all done for this memory range, return
  9832                           
  9833                           	psect	cstackBANK1
  9834  00E0                     __pcstackBANK1:	
  9835  00E0                     	ds	2
  9836  00E2                     main@t5s:	
  9837                           
  9838                           ; 1 bytes @ 0x2
  9839  00E2                     	ds	1
  9840  00E3                     main@t1m:	
  9841                           
  9842                           ; 1 bytes @ 0x3
  9843  00E3                     	ds	1
  9844  00E4                     _main$2446:	
  9845                           
  9846                           ; 1 bytes @ 0x4
  9847  00E4                     	ds	1
  9848                           
  9849                           	psect	cstackCOMMON
  9850  0070                     __pcstackCOMMON:	
  9851  0070                     ?_i2c1_driver_open:	
  9852  0070                     ?_i2c1_driver_isNACK:	
  9853                           ; 1 bit 
  9854                           
  9855  0070                     ?_setCallBack:	
  9856                           ; 1 bit 
  9857                           
  9858  0070                     ?_mssp1_clearIRQ:	
  9859                           ; 1 bytes @ 0x0
  9860                           
  9861  0070                     ??_mssp1_clearIRQ:	
  9862                           ; 1 bytes @ 0x0
  9863                           
  9864  0070                     ?_i2c_busCollisionISR:	
  9865                           ; 1 bytes @ 0x0
  9866                           
  9867  0070                     ??_i2c_busCollisionISR:	
  9868                           ; 1 bytes @ 0x0
  9869                           
  9870  0070                     ?_i2c_ISR:	
  9871                           ; 1 bytes @ 0x0
  9872                           
  9873  0070                     ?_i2c1_driver_resetBus:	
  9874                           ; 1 bytes @ 0x0
  9875                           
  9876  0070                     ??_i2c1_driver_resetBus:	
  9877                           ; 1 bytes @ 0x0
  9878                           
  9879  0070                     ?_i2c1_driver_restart:	
  9880                           ; 1 bytes @ 0x0
  9881                           
  9882  0070                     ??_i2c1_driver_restart:	
  9883                           ; 1 bytes @ 0x0
  9884                           
  9885  0070                     ?_i2c1_driver_stop:	
  9886                           ; 1 bytes @ 0x0
  9887                           
  9888  0070                     ??_i2c1_driver_stop:	
  9889                           ; 1 bytes @ 0x0
  9890                           
  9891  0070                     ?_i2c1_driver_TXData:	
  9892                           ; 1 bytes @ 0x0
  9893                           
  9894  0070                     ??_i2c1_driver_TXData:	
  9895                           ; 1 bytes @ 0x0
  9896                           
  9897  0070                     ?_i2c1_driver_startRX:	
  9898                           ; 1 bytes @ 0x0
  9899                           
  9900  0070                     ??_i2c1_driver_startRX:	
  9901                           ; 1 bytes @ 0x0
  9902                           
  9903  0070                     ?_i2c1_driver_sendACK:	
  9904                           ; 1 bytes @ 0x0
  9905                           
  9906  0070                     ??_i2c1_driver_sendACK:	
  9907                           ; 1 bytes @ 0x0
  9908                           
  9909  0070                     ?_i2c1_driver_sendNACK:	
  9910                           ; 1 bytes @ 0x0
  9911                           
  9912  0070                     ??_i2c1_driver_sendNACK:	
  9913                           ; 1 bytes @ 0x0
  9914                           
  9915  0070                     ??_i2c1_driver_isNACK:	
  9916                           ; 1 bytes @ 0x0
  9917                           
  9918  0070                     ?_i2c1_driver_getRXData:	
  9919                           ; 1 bytes @ 0x0
  9920                           
  9921  0070                     ??_i2c1_driver_getRXData:	
  9922                           ; 1 bytes @ 0x0
  9923                           
  9924  0070                     ?_mssp1_setIRQ:	
  9925                           ; 1 bytes @ 0x0
  9926                           
  9927  0070                     ??_mssp1_setIRQ:	
  9928                           ; 1 bytes @ 0x0
  9929                           
  9930  0070                     ?_i2c1_driver_clearBusCollision:	
  9931                           ; 1 bytes @ 0x0
  9932                           
  9933  0070                     ??_i2c1_driver_clearBusCollision:	
  9934                           ; 1 bytes @ 0x0
  9935                           
  9936  0070                     ?_INT_CallBack:	
  9937                           ; 1 bytes @ 0x0
  9938                           
  9939  0070                     ?_TMR0_ISR:	
  9940                           ; 1 bytes @ 0x0
  9941                           
  9942  0070                     ?_TMR1_ISR:	
  9943                           ; 1 bytes @ 0x0
  9944                           
  9945  0070                     ?_TMR2_ISR:	
  9946                           ; 1 bytes @ 0x0
  9947                           
  9948  0070                     ?_PMD_Initialize:	
  9949                           ; 1 bytes @ 0x0
  9950                           
  9951  0070                     ?_PIN_MANAGER_Initialize:	
  9952                           ; 1 bytes @ 0x0
  9953                           
  9954  0070                     ?_OSCILLATOR_Initialize:	
  9955                           ; 1 bytes @ 0x0
  9956                           
  9957  0070                     ?_PWM6_Initialize:	
  9958                           ; 1 bytes @ 0x0
  9959                           
  9960  0070                     ?_ADCC_Initialize:	
  9961                           ; 1 bytes @ 0x0
  9962                           
  9963  0070                     ?_TMR2_Initialize:	
  9964                           ; 1 bytes @ 0x0
  9965                           
  9966  0070                     ?_TMR1_Initialize:	
  9967                           ; 1 bytes @ 0x0
  9968                           
  9969  0070                     ?_TMR0_Initialize:	
  9970                           ; 1 bytes @ 0x0
  9971                           
  9972  0070                     ?_TMR0_DefaultInterruptHandler:	
  9973                           ; 1 bytes @ 0x0
  9974                           
  9975  0070                     ??_TMR0_DefaultInterruptHandler:	
  9976                           ; 1 bytes @ 0x0
  9977                           
  9978  0070                     ?_TMR1_DefaultInterruptHandler:	
  9979                           ; 1 bytes @ 0x0
  9980                           
  9981  0070                     ??_TMR1_DefaultInterruptHandler:	
  9982                           ; 1 bytes @ 0x0
  9983                           
  9984  0070                     ?_TMR2_DefaultInterruptHandler:	
  9985                           ; 1 bytes @ 0x0
  9986                           
  9987  0070                     ??_TMR2_DefaultInterruptHandler:	
  9988                           ; 1 bytes @ 0x0
  9989                           
  9990  0070                     ?_checkDebounceSW1:	
  9991                           ; 1 bytes @ 0x0
  9992                           
  9993  0070                     ?_handler_clock_hms:	
  9994                           ; 1 bytes @ 0x0
  9995                           
  9996  0070                     ??_handler_clock_hms:	
  9997                           ; 1 bytes @ 0x0
  9998                           
  9999  0070                     ?_handler_clock_ms:	
 10000                           ; 1 bytes @ 0x0
 10001                           
 10002  0070                     ??_handler_clock_ms:	
 10003                           ; 1 bytes @ 0x0
 10004                           
 10005  0070                     ?_recoverData:	
 10006                           ; 1 bytes @ 0x0
 10007                           
 10008  0070                     ?_tsttc:	
 10009                           ; 1 bytes @ 0x0
 10010                           
 10011  0070                     ?_cksum_w:	
 10012                           ; 1 bytes @ 0x0
 10013                           
 10014  0070                     ?_config_routine:	
 10015                           ; 1 bytes @ 0x0
 10016                           
 10017  0070                     ?_save_recovery_params:	
 10018                           ; 1 bytes @ 0x0
 10019                           
 10020  0070                     ?_all_LED:	
 10021                           ; 1 bytes @ 0x0
 10022                           
 10023  0070                     ?_mod1_LED:	
 10024                           ; 1 bytes @ 0x0
 10025                           
 10026  0070                     ?_mod2_LED:	
 10027                           ; 1 bytes @ 0x0
 10028                           
 10029  0070                     ?_mod3_LED:	
 10030                           ; 1 bytes @ 0x0
 10031                           
 10032  0070                     ?_mod4_LED:	
 10033                           ; 1 bytes @ 0x0
 10034                           
 10035  0070                     ?_checkDebounceSW2:	
 10036                           ; 1 bytes @ 0x0
 10037                           
 10038  0070                     ?_mode_select_LED:	
 10039                           ; 1 bytes @ 0x0
 10040                           
 10041  0070                     ?_selectSubfield:	
 10042                           ; 1 bytes @ 0x0
 10043                           
 10044  0070                     ?_mode_LED:	
 10045                           ; 1 bytes @ 0x0
 10046                           
 10047  0070                     ?_getSubfieldInfo:	
 10048                           ; 1 bytes @ 0x0
 10049                           
 10050  0070                     ?_limitHoursUnits:	
 10051                           ; 1 bytes @ 0x0
 10052                           
 10053  0070                     ?_limitTempThreshUnits:	
 10054                           ; 1 bytes @ 0x0
 10055                           
 10056  0070                     ?_representLed:	
 10057                           ; 1 bytes @ 0x0
 10058                           
 10059  0070                     ?_WriteI2C:	
 10060                           ; 1 bytes @ 0x0
 10061                           
 10062  0070                     ?_ReadI2C:	
 10063                           ; 1 bytes @ 0x0
 10064                           
 10065  0070                     ?_cksum:	
 10066                           ; 1 bytes @ 0x0
 10067                           
 10068  0070                     ?_reset_recv:	
 10069                           ; 1 bytes @ 0x0
 10070                           
 10071  0070                     ?_i2c_setBuffer:	
 10072                           ; 1 bytes @ 0x0
 10073                           
 10074  0070                     ?_do_I2C_RESET:	
 10075                           ; 1 bytes @ 0x0
 10076                           
 10077  0070                     ??_do_I2C_RESET:	
 10078                           ; 1 bytes @ 0x0
 10079                           
 10080  0070                     ?_do_I2C_IDLE:	
 10081                           ; 1 bytes @ 0x0
 10082                           
 10083  0070                     ??_do_I2C_IDLE:	
 10084                           ; 1 bytes @ 0x0
 10085                           
 10086  0070                     ?_do_I2C_SEND_RESTART_READ:	
 10087                           ; 1 bytes @ 0x0
 10088                           
 10089  0070                     ??_do_I2C_SEND_RESTART_READ:	
 10090                           ; 1 bytes @ 0x0
 10091                           
 10092  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
 10093                           ; 1 bytes @ 0x0
 10094                           
 10095  0070                     ??_do_I2C_SEND_RESTART_WRITE:	
 10096                           ; 1 bytes @ 0x0
 10097                           
 10098  0070                     ?_do_I2C_SEND_RESTART:	
 10099                           ; 1 bytes @ 0x0
 10100                           
 10101  0070                     ??_do_I2C_SEND_RESTART:	
 10102                           ; 1 bytes @ 0x0
 10103                           
 10104  0070                     ?_do_I2C_SEND_STOP:	
 10105                           ; 1 bytes @ 0x0
 10106                           
 10107  0070                     ??_do_I2C_SEND_STOP:	
 10108                           ; 1 bytes @ 0x0
 10109                           
 10110  0070                     ?_do_I2C_SEND_ADR_READ:	
 10111                           ; 1 bytes @ 0x0
 10112                           
 10113  0070                     ??_do_I2C_SEND_ADR_READ:	
 10114                           ; 1 bytes @ 0x0
 10115                           
 10116  0070                     ?_do_I2C_SEND_ADR_WRITE:	
 10117                           ; 1 bytes @ 0x0
 10118                           
 10119  0070                     ?_do_I2C_RCEN:	
 10120                           ; 1 bytes @ 0x0
 10121                           
 10122  0070                     ??_do_I2C_RCEN:	
 10123                           ; 1 bytes @ 0x0
 10124                           
 10125  0070                     ?_do_I2C_DO_ACK:	
 10126                           ; 1 bytes @ 0x0
 10127                           
 10128  0070                     ??_do_I2C_DO_ACK:	
 10129                           ; 1 bytes @ 0x0
 10130                           
 10131  0070                     ?_do_I2C_DO_NACK_STOP:	
 10132                           ; 1 bytes @ 0x0
 10133                           
 10134  0070                     ??_do_I2C_DO_NACK_STOP:	
 10135                           ; 1 bytes @ 0x0
 10136                           
 10137  0070                     ?_do_I2C_DO_NACK_RESTART:	
 10138                           ; 1 bytes @ 0x0
 10139                           
 10140  0070                     ??_do_I2C_DO_NACK_RESTART:	
 10141                           ; 1 bytes @ 0x0
 10142                           
 10143  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
 10144                           ; 1 bytes @ 0x0
 10145                           
 10146  0070                     ?_do_I2C_TX:	
 10147                           ; 1 bytes @ 0x0
 10148                           
 10149  0070                     ?_do_I2C_RX:	
 10150                           ; 1 bytes @ 0x0
 10151                           
 10152  0070                     ?_do_I2C_TX_EMPTY:	
 10153                           ; 1 bytes @ 0x0
 10154                           
 10155  0070                     ?_INT_ISR:	
 10156                           ; 1 bytes @ 0x0
 10157                           
 10158  0070                     ?_INT_DefaultInterruptHandler:	
 10159                           ; 1 bytes @ 0x0
 10160                           
 10161  0070                     ??_INT_DefaultInterruptHandler:	
 10162                           ; 1 bytes @ 0x0
 10163                           
 10164  0070                     ?_EXT_INT_Initialize:	
 10165                           ; 1 bytes @ 0x0
 10166                           
 10167  0070                     ?_INTERRUPT_InterruptManager:	
 10168                           ; 1 bytes @ 0x0
 10169                           
 10170  0070                     ?_SYSTEM_Initialize:	
 10171                           ; 1 bytes @ 0x0
 10172                           
 10173  0070                     ?_ADCC_StartConversion:	
 10174                           ; 1 bytes @ 0x0
 10175                           
 10176  0070                     ?_ADCC_IsConversionDone:	
 10177                           ; 1 bytes @ 0x0
 10178                           
 10179  0070                     ?_TMR0_StartTimer:	
 10180                           ; 1 bytes @ 0x0
 10181                           
 10182  0070                     ?_TMR0_StopTimer:	
 10183                           ; 1 bytes @ 0x0
 10184                           
 10185  0070                     ??_TMR0_StopTimer:	
 10186                           ; 1 bytes @ 0x0
 10187                           
 10188  0070                     ?_TMR1_WriteTimer:	
 10189                           ; 1 bytes @ 0x0
 10190                           
 10191  0070                     ?_sw1_EXT:	
 10192                           ; 1 bytes @ 0x0
 10193                           
 10194  0070                     ?_ISR_3s:	
 10195                           ; 1 bytes @ 0x0
 10196                           
 10197  0070                     ?_main:	
 10198                           ; 1 bytes @ 0x0
 10199                           
 10200  0070                     ?i1_PWM6_LoadDutyValue:	
 10201                           ; 1 bytes @ 0x0
 10202                           
 10203  0070                     ?i1_checkDebounceSW1:	
 10204                           ; 1 bytes @ 0x0
 10205                           
 10206  0070                     ??i1_checkDebounceSW1:	
 10207                           ; 1 bytes @ 0x0
 10208                           
 10209  0070                     i2c1_driver_TXData@d:	
 10210                           ; 1 bytes @ 0x0
 10211                           
 10212  0070                     i2c_setBuffer@bufferSize:	
 10213                           ; 1 bytes @ 0x0
 10214                           
 10215  0070                     setCallBack@cb:	
 10216                           ; 2 bytes @ 0x0
 10217                           
 10218  0070                     TMR1_WriteTimer@timerVal:	
 10219                           ; 2 bytes @ 0x0
 10220                           
 10221  0070                     i1PWM6_LoadDutyValue@dutyValue:	
 10222                           ; 2 bytes @ 0x0
 10223                           
 10224                           
 10225                           ; 2 bytes @ 0x0
 10226  0070                     	ds	1
 10227  0071                     ??_TMR2_ISR:	
 10228  0071                     ??_do_I2C_SEND_ADR_WRITE:	
 10229                           ; 1 bytes @ 0x1
 10230                           
 10231                           
 10232                           ; 1 bytes @ 0x1
 10233  0071                     	ds	1
 10234  0072                     ??_TMR1_ISR:	
 10235  0072                     ??_i2c_setBuffer:	
 10236                           ; 1 bytes @ 0x2
 10237                           
 10238  0072                     ??_TMR1_WriteTimer:	
 10239                           ; 1 bytes @ 0x2
 10240                           
 10241  0072                     ??i1_PWM6_LoadDutyValue:	
 10242                           ; 1 bytes @ 0x2
 10243                           
 10244  0072                     setCallBack@p:	
 10245                           ; 1 bytes @ 0x2
 10246                           
 10247                           
 10248                           ; 1 bytes @ 0x2
 10249  0072                     	ds	1
 10250  0073                     ??_setCallBack:	
 10251  0073                     i2c_setBuffer@buffer:	
 10252                           ; 1 bytes @ 0x3
 10253                           
 10254                           
 10255                           ; 1 bytes @ 0x3
 10256  0073                     	ds	1
 10257  0074                     ??_ISR_3s:	
 10258  0074                     setCallBack@idx:	
 10259                           ; 1 bytes @ 0x4
 10260                           
 10261                           
 10262                           ; 1 bytes @ 0x4
 10263  0074                     	ds	1
 10264  0075                     ??_TMR0_ISR:	
 10265  0075                     ?_i2c_setDataCompleteCallback:	
 10266                           ; 1 bytes @ 0x5
 10267                           
 10268  0075                     i2c_setDataCompleteCallback@cb:	
 10269                           ; 1 bytes @ 0x5
 10270                           
 10271                           
 10272                           ; 2 bytes @ 0x5
 10273  0075                     	ds	2
 10274  0077                     ??_sw1_EXT:	
 10275  0077                     i2c_setDataCompleteCallback@p:	
 10276                           ; 1 bytes @ 0x7
 10277                           
 10278                           
 10279                           ; 1 bytes @ 0x7
 10280  0077                     	ds	1
 10281  0078                     ??_INT_CallBack:	
 10282  0078                     ??_i2c_setDataCompleteCallback:	
 10283                           ; 1 bytes @ 0x8
 10284                           
 10285  0078                     ??_INT_ISR:	
 10286                           ; 1 bytes @ 0x8
 10287                           
 10288                           
 10289                           ; 1 bytes @ 0x8
 10290  0078                     	ds	1
 10291  0079                     ?_returnStop:	
 10292  0079                     ?_returnReset:	
 10293                           ; 1 bytes @ 0x9
 10294                           
 10295  0079                     ?_i2c_restartWrite:	
 10296                           ; 1 bytes @ 0x9
 10297                           
 10298  0079                     ?_wr1RegCompleteHandler:	
 10299                           ; 1 bytes @ 0x9
 10300                           
 10301  0079                     ?_rd1RegCompleteHandler:	
 10302                           ; 1 bytes @ 0x9
 10303                           
 10304  0079                     ?_rd2RegCompleteHandler:	
 10305                           ; 1 bytes @ 0x9
 10306                           
 10307  0079                     ?_wr2RegCompleteHandler:	
 10308                           ; 1 bytes @ 0x9
 10309                           
 10310  0079                     ?_rdBlkRegCompleteHandler:	
 10311                           ; 1 bytes @ 0x9
 10312                           
 10313  0079                     i2c_restartWrite@p:	
 10314                           ; 1 bytes @ 0x9
 10315                           
 10316  0079                     returnStop@p:	
 10317                           ; 1 bytes @ 0x9
 10318                           
 10319  0079                     returnReset@p:	
 10320                           ; 1 bytes @ 0x9
 10321                           
 10322  0079                     wr1RegCompleteHandler@p:	
 10323                           ; 1 bytes @ 0x9
 10324                           
 10325  0079                     rd1RegCompleteHandler@p:	
 10326                           ; 1 bytes @ 0x9
 10327                           
 10328  0079                     rd2RegCompleteHandler@p:	
 10329                           ; 1 bytes @ 0x9
 10330                           
 10331  0079                     wr2RegCompleteHandler@p:	
 10332                           ; 1 bytes @ 0x9
 10333                           
 10334  0079                     rdBlkRegCompleteHandler@p:	
 10335                           ; 1 bytes @ 0x9
 10336                           
 10337                           
 10338                           ; 1 bytes @ 0x9
 10339  0079                     	ds	1
 10340  007A                     ??_returnStop:	
 10341  007A                     ??_returnReset:	
 10342                           ; 1 bytes @ 0xA
 10343                           
 10344  007A                     ??_i2c_restartWrite:	
 10345                           ; 1 bytes @ 0xA
 10346                           
 10347  007A                     ??_do_I2C_DO_ADDRESS_NACK:	
 10348                           ; 1 bytes @ 0xA
 10349                           
 10350  007A                     ??_do_I2C_TX:	
 10351                           ; 1 bytes @ 0xA
 10352                           
 10353  007A                     ??_do_I2C_RX:	
 10354                           ; 1 bytes @ 0xA
 10355                           
 10356  007A                     ??_do_I2C_TX_EMPTY:	
 10357                           ; 1 bytes @ 0xA
 10358                           
 10359  007A                     ??_wr1RegCompleteHandler:	
 10360                           ; 1 bytes @ 0xA
 10361                           
 10362  007A                     ??_rd1RegCompleteHandler:	
 10363                           ; 1 bytes @ 0xA
 10364                           
 10365  007A                     ??_rd2RegCompleteHandler:	
 10366                           ; 1 bytes @ 0xA
 10367                           
 10368  007A                     ??_wr2RegCompleteHandler:	
 10369                           ; 1 bytes @ 0xA
 10370                           
 10371  007A                     ??_rdBlkRegCompleteHandler:	
 10372                           ; 1 bytes @ 0xA
 10373                           
 10374                           
 10375                           ; 1 bytes @ 0xA
 10376  007A                     	ds	3
 10377  007D                     ??_INTERRUPT_InterruptManager:	
 10378                           
 10379                           	psect	cstackBANK0
 10380  0020                     __pcstackBANK0:	
 10381                           ; 1 bytes @ 0xD
 10382                           
 10383  0020                     ??_i2c_ISR:	
 10384                           
 10385                           ; 1 bytes @ 0x0
 10386  0020                     	ds	3
 10387  0023                     ??_i2c1_driver_open:	
 10388  0023                     ??_PMD_Initialize:	
 10389                           ; 1 bytes @ 0x3
 10390                           
 10391  0023                     ??_PIN_MANAGER_Initialize:	
 10392                           ; 1 bytes @ 0x3
 10393                           
 10394  0023                     ??_OSCILLATOR_Initialize:	
 10395                           ; 1 bytes @ 0x3
 10396                           
 10397  0023                     ??_PWM6_Initialize:	
 10398                           ; 1 bytes @ 0x3
 10399                           
 10400  0023                     ??_ADCC_Initialize:	
 10401                           ; 1 bytes @ 0x3
 10402                           
 10403  0023                     ?_TMR0_SetInterruptHandler:	
 10404                           ; 1 bytes @ 0x3
 10405                           
 10406  0023                     ?_TMR1_SetInterruptHandler:	
 10407                           ; 1 bytes @ 0x3
 10408                           
 10409  0023                     ?_TMR2_SetInterruptHandler:	
 10410                           ; 1 bytes @ 0x3
 10411                           
 10412  0023                     ??_checkDebounceSW1:	
 10413                           ; 1 bytes @ 0x3
 10414                           
 10415  0023                     ?_LED_bin:	
 10416                           ; 1 bytes @ 0x3
 10417                           
 10418  0023                     ?_ring_buffer:	
 10419                           ; 1 bytes @ 0x3
 10420                           
 10421  0023                     ??_checkDebounceSW2:	
 10422                           ; 1 bytes @ 0x3
 10423                           
 10424  0023                     ??_WriteI2C:	
 10425                           ; 1 bytes @ 0x3
 10426                           
 10427  0023                     ??_ReadI2C:	
 10428                           ; 1 bytes @ 0x3
 10429                           
 10430  0023                     ?_INT_SetInterruptHandler:	
 10431                           ; 1 bytes @ 0x3
 10432                           
 10433  0023                     ??_ADCC_StartConversion:	
 10434                           ; 1 bytes @ 0x3
 10435                           
 10436  0023                     ??_ADCC_IsConversionDone:	
 10437                           ; 1 bytes @ 0x3
 10438                           
 10439  0023                     ??_TMR0_StartTimer:	
 10440                           ; 1 bytes @ 0x3
 10441                           
 10442  0023                     ?_DATAEE_ReadByte:	
 10443                           ; 1 bytes @ 0x3
 10444                           
 10445  0023                     ?___bmul:	
 10446                           ; 1 bytes @ 0x3
 10447                           
 10448  0023                     ?_ADCC_GetConversionResult:	
 10449                           ; 1 bytes @ 0x3
 10450                           
 10451  0023                     ?___wmul:	
 10452                           ; 2 bytes @ 0x3
 10453                           
 10454  0023                     ?___awdiv:	
 10455                           ; 2 bytes @ 0x3
 10456                           
 10457  0023                     ?___awmod:	
 10458                           ; 2 bytes @ 0x3
 10459                           
 10460  0023                     ADCC_StartConversion@channel:	
 10461                           ; 2 bytes @ 0x3
 10462                           
 10463  0023                     ring_buffer@clock_h:	
 10464                           ; 1 bytes @ 0x3
 10465                           
 10466  0023                     ___bmul@multiplicand:	
 10467                           ; 1 bytes @ 0x3
 10468                           
 10469  0023                     INT_SetInterruptHandler@InterruptHandler:	
 10470                           ; 1 bytes @ 0x3
 10471                           
 10472  0023                     TMR0_SetInterruptHandler@InterruptHandler:	
 10473                           ; 2 bytes @ 0x3
 10474                           
 10475  0023                     TMR1_SetInterruptHandler@InterruptHandler:	
 10476                           ; 2 bytes @ 0x3
 10477                           
 10478  0023                     DATAEE_ReadByte@bAdd:	
 10479                           ; 2 bytes @ 0x3
 10480                           
 10481  0023                     TMR2_SetInterruptHandler@InterruptHandler:	
 10482                           ; 2 bytes @ 0x3
 10483                           
 10484  0023                     LED_bin@value:	
 10485                           ; 2 bytes @ 0x3
 10486                           
 10487  0023                     ___wmul@multiplier:	
 10488                           ; 2 bytes @ 0x3
 10489                           
 10490  0023                     ___awdiv@divisor:	
 10491                           ; 2 bytes @ 0x3
 10492                           
 10493  0023                     ___awmod@divisor:	
 10494                           ; 2 bytes @ 0x3
 10495                           
 10496                           
 10497                           ; 2 bytes @ 0x3
 10498  0023                     	ds	1
 10499  0024                     ??___bmul:	
 10500  0024                     ring_buffer@clock_m:	
 10501                           ; 1 bytes @ 0x4
 10502                           
 10503  0024                     WriteI2C@data_out:	
 10504                           ; 1 bytes @ 0x4
 10505                           
 10506                           
 10507                           ; 1 bytes @ 0x4
 10508  0024                     	ds	1
 10509  0025                     ??_TMR2_Initialize:	
 10510  0025                     ??_TMR1_Initialize:	
 10511                           ; 1 bytes @ 0x5
 10512                           
 10513  0025                     ??_TMR0_Initialize:	
 10514                           ; 1 bytes @ 0x5
 10515                           
 10516  0025                     ??_TMR0_SetInterruptHandler:	
 10517                           ; 1 bytes @ 0x5
 10518                           
 10519  0025                     ??_TMR1_SetInterruptHandler:	
 10520                           ; 1 bytes @ 0x5
 10521                           
 10522  0025                     ??_TMR2_SetInterruptHandler:	
 10523                           ; 1 bytes @ 0x5
 10524                           
 10525  0025                     ??_LED_bin:	
 10526                           ; 1 bytes @ 0x5
 10527                           
 10528  0025                     ??_tsttc:	
 10529                           ; 1 bytes @ 0x5
 10530                           
 10531  0025                     ??_cksum:	
 10532                           ; 1 bytes @ 0x5
 10533                           
 10534  0025                     ??_INT_SetInterruptHandler:	
 10535                           ; 1 bytes @ 0x5
 10536                           
 10537  0025                     ??_EXT_INT_Initialize:	
 10538                           ; 1 bytes @ 0x5
 10539                           
 10540  0025                     ??_SYSTEM_Initialize:	
 10541                           ; 1 bytes @ 0x5
 10542                           
 10543  0025                     ??_ADCC_GetConversionResult:	
 10544                           ; 1 bytes @ 0x5
 10545                           
 10546  0025                     ??_DATAEE_ReadByte:	
 10547                           ; 1 bytes @ 0x5
 10548                           
 10549  0025                     ?_ADC_read:	
 10550                           ; 1 bytes @ 0x5
 10551                           
 10552  0025                     ring_buffer@clock_s:	
 10553                           ; 2 bytes @ 0x5
 10554                           
 10555  0025                     ___bmul@product:	
 10556                           ; 1 bytes @ 0x5
 10557                           
 10558  0025                     ___wmul@multiplicand:	
 10559                           ; 1 bytes @ 0x5
 10560                           
 10561  0025                     ___awdiv@dividend:	
 10562                           ; 2 bytes @ 0x5
 10563                           
 10564  0025                     ___awmod@dividend:	
 10565                           ; 2 bytes @ 0x5
 10566                           
 10567                           
 10568                           ; 2 bytes @ 0x5
 10569  0025                     	ds	1
 10570  0026                     ring_buffer@tem:	
 10571  0026                     tsttc@value:	
 10572                           ; 1 bytes @ 0x6
 10573                           
 10574  0026                     cksum@res:	
 10575                           ; 1 bytes @ 0x6
 10576                           
 10577  0026                     ___bmul@multiplier:	
 10578                           ; 1 bytes @ 0x6
 10579                           
 10580                           
 10581                           ; 1 bytes @ 0x6
 10582  0026                     	ds	1
 10583  0027                     ??_ADC_read:	
 10584  0027                     ?_read_ring:	
 10585                           ; 1 bytes @ 0x7
 10586                           
 10587  0027                     ??___wmul:	
 10588                           ; 1 bytes @ 0x7
 10589                           
 10590  0027                     ??___awdiv:	
 10591                           ; 1 bytes @ 0x7
 10592                           
 10593  0027                     ??___awmod:	
 10594                           ; 1 bytes @ 0x7
 10595                           
 10596  0027                     ring_buffer@lum:	
 10597                           ; 1 bytes @ 0x7
 10598                           
 10599  0027                     read_ring@nreg:	
 10600                           ; 1 bytes @ 0x7
 10601                           
 10602  0027                     cksum@i:	
 10603                           ; 1 bytes @ 0x7
 10604                           
 10605  0027                     ___wmul@product:	
 10606                           ; 2 bytes @ 0x7
 10607                           
 10608                           
 10609                           ; 2 bytes @ 0x7
 10610  0027                     	ds	1
 10611  0028                     ??_ring_buffer:	
 10612  0028                     read_ring@nreg_init:	
 10613                           ; 1 bytes @ 0x8
 10614                           
 10615  0028                     ___awdiv@counter:	
 10616                           ; 1 bytes @ 0x8
 10617                           
 10618  0028                     ___awmod@counter:	
 10619                           ; 1 bytes @ 0x8
 10620                           
 10621                           
 10622                           ; 1 bytes @ 0x8
 10623  0028                     	ds	1
 10624  0029                     ?_PWM6_LoadDutyValue:	
 10625  0029                     ?_DATAEE_WriteByte:	
 10626                           ; 1 bytes @ 0x9
 10627                           
 10628  0029                     ring_buffer@_ring_byte:	
 10629                           ; 1 bytes @ 0x9
 10630                           
 10631  0029                     read_ring@index:	
 10632                           ; 1 bytes @ 0x9
 10633                           
 10634  0029                     ___awdiv@sign:	
 10635                           ; 1 bytes @ 0x9
 10636                           
 10637  0029                     ___awmod@sign:	
 10638                           ; 1 bytes @ 0x9
 10639                           
 10640  0029                     PWM6_LoadDutyValue@dutyValue:	
 10641                           ; 1 bytes @ 0x9
 10642                           
 10643  0029                     DATAEE_WriteByte@bAdd:	
 10644                           ; 2 bytes @ 0x9
 10645                           
 10646                           
 10647                           ; 2 bytes @ 0x9
 10648  0029                     	ds	1
 10649  002A                     read_ring@subindex:	
 10650  002A                     ___awdiv@quotient:	
 10651                           ; 1 bytes @ 0xA
 10652                           
 10653                           
 10654                           ; 2 bytes @ 0xA
 10655  002A                     	ds	1
 10656  002B                     ??_read_ring:	
 10657  002B                     ??_PWM6_LoadDutyValue:	
 10658                           ; 1 bytes @ 0xB
 10659                           
 10660  002B                     DATAEE_WriteByte@bData:	
 10661                           ; 1 bytes @ 0xB
 10662                           
 10663                           
 10664                           ; 1 bytes @ 0xB
 10665  002B                     	ds	1
 10666  002C                     ??_limitHoursUnits:	
 10667  002C                     ??_limitTempThreshUnits:	
 10668                           ; 1 bytes @ 0xC
 10669                           
 10670  002C                     ??_DATAEE_WriteByte:	
 10671                           ; 1 bytes @ 0xC
 10672                           
 10673  002C                     DATAEE_WriteByte@GIEBitValue:	
 10674                           ; 1 bytes @ 0xC
 10675                           
 10676                           
 10677                           ; 1 bytes @ 0xC
 10678  002C                     	ds	1
 10679  002D                     ?_push_ring:	
 10680  002D                     ??_cksum_w:	
 10681                           ; 1 bytes @ 0xD
 10682                           
 10683  002D                     ??_all_LED:	
 10684                           ; 1 bytes @ 0xD
 10685                           
 10686  002D                     ??_mod1_LED:	
 10687                           ; 1 bytes @ 0xD
 10688                           
 10689  002D                     ??_mod2_LED:	
 10690                           ; 1 bytes @ 0xD
 10691                           
 10692  002D                     ??_mod3_LED:	
 10693                           ; 1 bytes @ 0xD
 10694                           
 10695  002D                     ??_mod4_LED:	
 10696                           ; 1 bytes @ 0xD
 10697                           
 10698  002D                     ??_mode_select_LED:	
 10699                           ; 1 bytes @ 0xD
 10700                           
 10701  002D                     ??_mode_LED:	
 10702                           ; 1 bytes @ 0xD
 10703                           
 10704  002D                     ??_representLed:	
 10705                           ; 1 bytes @ 0xD
 10706                           
 10707  002D                     ??_reset_recv:	
 10708                           ; 1 bytes @ 0xD
 10709                           
 10710  002D                     push_ring@nreg:	
 10711                           ; 1 bytes @ 0xD
 10712                           
 10713  002D                     read_ring@i:	
 10714                           ; 1 bytes @ 0xD
 10715                           
 10716  002D                     reset_recv@i:	
 10717                           ; 1 bytes @ 0xD
 10718                           
 10719                           
 10720                           ; 2 bytes @ 0xD
 10721  002D                     	ds	1
 10722  002E                     ??_save_recovery_params:	
 10723  002E                     push_ring@nreg_init:	
 10724                           ; 1 bytes @ 0xE
 10725                           
 10726  002E                     read_ring@nreg_pt:	
 10727                           ; 1 bytes @ 0xE
 10728                           
 10729                           
 10730                           ; 1 bytes @ 0xE
 10731  002E                     	ds	1
 10732  002F                     ??_recoverData:	
 10733  002F                     save_recovery_params@aux:	
 10734                           ; 1 bytes @ 0xF
 10735                           
 10736  002F                     push_ring@ring_byte:	
 10737                           ; 1 bytes @ 0xF
 10738                           
 10739  002F                     read_ring@absindex:	
 10740                           ; 1 bytes @ 0xF
 10741                           
 10742  002F                     mode_LED@subfield:	
 10743                           ; 1 bytes @ 0xF
 10744                           
 10745                           
 10746                           ; 1 bytes @ 0xF
 10747  002F                     	ds	1
 10748  0030                     ??_push_ring:	
 10749  0030                     save_recovery_params@aux1:	
 10750                           ; 1 bytes @ 0x10
 10751                           
 10752  0030                     representLed@val:	
 10753                           ; 1 bytes @ 0x10
 10754                           
 10755                           
 10756                           ; 1 bytes @ 0x10
 10757  0030                     	ds	1
 10758  0031                     representLed@aux:	
 10759                           
 10760                           ; 1 bytes @ 0x11
 10761  0031                     	ds	1
 10762  0032                     ?_increment_subfield:	
 10763  0032                     push_ring@i:	
 10764                           ; 1 bytes @ 0x12
 10765                           
 10766  0032                     increment_subfield@init_val:	
 10767                           ; 1 bytes @ 0x12
 10768                           
 10769                           
 10770                           ; 2 bytes @ 0x12
 10771  0032                     	ds	1
 10772  0033                     push_ring@nreg_pt:	
 10773                           
 10774                           ; 1 bytes @ 0x13
 10775  0033                     	ds	1
 10776  0034                     ??_increment_subfield:	
 10777                           
 10778                           ; 1 bytes @ 0x14
 10779  0034                     	ds	1
 10780  0035                     increment_subfield@exit:	
 10781                           
 10782                           ; 1 bytes @ 0x15
 10783  0035                     	ds	1
 10784  0036                     increment_subfield@limit:	
 10785                           
 10786                           ; 1 bytes @ 0x16
 10787  0036                     	ds	1
 10788  0037                     increment_subfield@_value:	
 10789                           
 10790                           ; 1 bytes @ 0x17
 10791  0037                     	ds	1
 10792  0038                     ??_getSubfieldInfo:	
 10793                           
 10794                           ; 1 bytes @ 0x18
 10795  0038                     	ds	3
 10796  003B                     getSubfieldInfo@h_tens:	
 10797                           
 10798                           ; 1 bytes @ 0x1B
 10799  003B                     	ds	1
 10800  003C                     getSubfieldInfo@h_units:	
 10801                           
 10802                           ; 1 bytes @ 0x1C
 10803  003C                     	ds	1
 10804  003D                     getSubfieldInfo@m_tens:	
 10805                           
 10806                           ; 1 bytes @ 0x1D
 10807  003D                     	ds	1
 10808  003E                     getSubfieldInfo@m_units:	
 10809                           
 10810                           ; 1 bytes @ 0x1E
 10811  003E                     	ds	1
 10812  003F                     getSubfieldInfo@temp_thresh_tens:	
 10813                           
 10814                           ; 1 bytes @ 0x1F
 10815  003F                     	ds	1
 10816  0040                     getSubfieldInfo@temp_thresh_units:	
 10817                           
 10818                           ; 1 bytes @ 0x20
 10819  0040                     	ds	1
 10820  0041                     ??_selectSubfield:	
 10821                           
 10822                           ; 1 bytes @ 0x21
 10823  0041                     	ds	2
 10824  0043                     selectSubfield@subfield:	
 10825                           
 10826                           ; 2 bytes @ 0x23
 10827  0043                     	ds	2
 10828  0045                     ??_config_routine:	
 10829                           
 10830                           ; 1 bytes @ 0x25
 10831  0045                     	ds	1
 10832  0046                     config_routine@select_mode:	
 10833                           
 10834                           ; 2 bytes @ 0x26
 10835  0046                     	ds	2
 10836  0048                     ??_main:	
 10837                           
 10838                           ; 1 bytes @ 0x28
 10839  0048                     	ds	5
 10840                           
 10841                           	psect	maintext
 10842  007E                     __pmaintext:	
 10843 ;;
 10844 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
 10845 ;;
 10846 ;; *************** function _main *****************
 10847 ;; Defined at:
 10848 ;;		line 169 in file "main.c"
 10849 ;; Parameters:    Size  Location     Type
 10850 ;;		None
 10851 ;; Auto vars:     Size  Location     Type
 10852 ;;  t1m             1    3[BANK1 ] unsigned char 
 10853 ;;  t5s             1    2[BANK1 ] unsigned char 
 10854 ;; Return value:  Size  Location     Type
 10855 ;;                  1    wreg      void 
 10856 ;; Registers used:
 10857 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10858 ;; Tracked objects:
 10859 ;;		On entry : B1F/0
 10860 ;;		On exit  : 0/0
 10861 ;;		Unchanged: 0/0
 10862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10864 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10865 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10866 ;;      Totals:         0       5       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10867 ;;Total ram usage:       10 bytes
 10868 ;; Hardware stack levels required when called:   12
 10869 ;; This function calls:
 10870 ;;		_ADC_read
 10871 ;;		_DATAEE_WriteByte
 10872 ;;		_INT_SetInterruptHandler
 10873 ;;		_LED_bin
 10874 ;;		_PWM6_LoadDutyValue
 10875 ;;		_SYSTEM_Initialize
 10876 ;;		_TMR0_SetInterruptHandler
 10877 ;;		_TMR0_StartTimer
 10878 ;;		_TMR1_SetInterruptHandler
 10879 ;;		_TMR2_SetInterruptHandler
 10880 ;;		_cksum_w
 10881 ;;		_config_routine
 10882 ;;		_i2c1_driver_open
 10883 ;;		_push_ring
 10884 ;;		_read_ring
 10885 ;;		_recoverData
 10886 ;;		_ring_buffer
 10887 ;;		_save_recovery_params
 10888 ;;		_tsttc
 10889 ;; This function is called by:
 10890 ;;		Startup code after reset
 10891 ;; This function uses a non-reentrant model
 10892 ;;
 10893                           
 10894                           
 10895                           ;psect for function _main
 10896  007E                     _main:	
 10897  007E                     l7484:	
 10898                           ;incstack = 0
 10899                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10900                           
 10901                           
 10902                           ;main.c: 171:     SYSTEM_Initialize();
 10903  007E  318A  227B  3180   	fcall	_SYSTEM_Initialize
 10904                           
 10905                           ;main.c: 172:     TMR0_SetInterruptHandler(ISR_3s);
 10906  0081  30DF               	movlw	low _ISR_3s
 10907  0082  0020               	movlb	0	; select bank0
 10908  0083  00A3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 10909  0084  3009               	movlw	high _ISR_3s
 10910  0085  00A4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 10911  0086  3188  2019  3180   	fcall	_TMR0_SetInterruptHandler
 10912                           
 10913                           ;main.c: 173:     TMR1_SetInterruptHandler(handler_clock_hms);
 10914  0089  30CF               	movlw	low _handler_clock_hms
 10915  008A  0020               	movlb	0	; select bank0
 10916  008B  00A3               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 10917  008C  300C               	movlw	high _handler_clock_hms
 10918  008D  00A4               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 10919  008E  3188  2022  3180   	fcall	_TMR1_SetInterruptHandler
 10920                           
 10921                           ;main.c: 174:     INT_SetInterruptHandler(sw1_EXT);
 10922  0091  3075               	movlw	low _sw1_EXT
 10923  0092  0020               	movlb	0	; select bank0
 10924  0093  00A3               	movwf	INT_SetInterruptHandler@InterruptHandler
 10925  0094  300B               	movlw	high _sw1_EXT
 10926  0095  00A4               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 10927  0096  3188  2007  3180   	fcall	_INT_SetInterruptHandler
 10928                           
 10929                           ;main.c: 175:     TMR2_SetInterruptHandler(handler_clock_ms);
 10930  0099  3068               	movlw	low _handler_clock_ms
 10931  009A  0020               	movlb	0	; select bank0
 10932  009B  00A3               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 10933  009C  3008               	movlw	high _handler_clock_ms
 10934  009D  00A4               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 10935  009E  3188  202B  3180   	fcall	_TMR2_SetInterruptHandler
 10936  00A1                     l7486:	
 10937  00A1                     l7488:	
 10938  00A1                     l7490:	
 10939  00A1                     l1287:	
 10940  00A1  3096               	movlw	150
 10941  00A2  0020               	movlb	0	; select bank0
 10942  00A3  00C8               	movwf	??_main
 10943  00A4  0848               	movf	??_main,w
 10944  00A5  00E7               	movwf	_nreg
 10945  00A6                     l7494:	
 10946                           
 10947                           ;main.c: 183:     nreg_pt = 0;
 10948  00A6  01DD               	clrf	_nreg_pt
 10949  00A7                     l7496:	
 10950                           
 10951                           ;main.c: 184:     nreg_init = 0;
 10952  00A7  01DE               	clrf	_nreg_init
 10953  00A8                     l7498:	
 10954                           
 10955                           ;main.c: 185:     alaf = 1;
 10956  00A8  01D1               	clrf	_alaf
 10957  00A9  0AD1               	incf	_alaf,f
 10958  00AA                     l7500:	
 10959                           
 10960                           ;main.c: 186:     temp = 0;
 10961  00AA  01D2               	clrf	_temp
 10962  00AB                     l7502:	
 10963                           
 10964                           ;main.c: 187:     lum_bin = 0;
 10965  00AB  01CF               	clrf	_lum_bin
 10966  00AC  01D0               	clrf	_lum_bin+1
 10967  00AD                     l7504:	
 10968                           
 10969                           ;main.c: 188:     threshold = 0;
 10970  00AD  01CD               	clrf	_threshold
 10971  00AE  01CE               	clrf	_threshold+1
 10972  00AF                     l7506:	
 10973                           
 10974                           ;main.c: 189:     duty_cycle = 0;
 10975  00AF  0021               	movlb	1	; select bank1
 10976  00B0  01C1               	clrf	_duty_cycle^(0+128)
 10977  00B1  01C2               	clrf	(_duty_cycle+1)^(0+128)
 10978  00B2                     l7508:	
 10979                           
 10980                           ;main.c: 190:     set_mode= 0;
 10981  00B2  0020               	movlb	0	; select bank0
 10982  00B3  01D5               	clrf	_set_mode	;volatile
 10983  00B4                     l7510:	
 10984                           
 10985                           ;main.c: 193:     i2c1_driver_open();
 10986  00B4  3188  2074  3180   	fcall	_i2c1_driver_open
 10987  00B7                     l7512:	
 10988                           
 10989                           ;main.c: 194:     TRISCbits.TRISC3 = 1;
 10990  00B7  0020               	movlb	0	; select bank0
 10991  00B8  1593               	bsf	19,3	;volatile
 10992  00B9                     l7514:	
 10993                           
 10994                           ;main.c: 195:     TRISCbits.TRISC4 = 1;
 10995  00B9  1613               	bsf	19,4	;volatile
 10996  00BA                     l7516:	
 10997                           
 10998                           ;main.c: 196:     WPUC3 = 1;
 10999  00BA  003E               	movlb	30	; select bank30
 11000  00BB  15CF               	bsf	79,3	;volatile
 11001  00BC                     l7518:	
 11002                           
 11003                           ;main.c: 197:     WPUC4 = 1;
 11004  00BC  164F               	bsf	79,4	;volatile
 11005  00BD                     l7520:	
 11006                           
 11007                           ;main.c: 200:     recoverData();
 11008  00BD  3184  24D9  3180   	fcall	_recoverData
 11009  00C0                     l7522:	
 11010                           
 11011                           ;main.c: 202:     PWM6_LoadDutyValue(0);
 11012  00C0  3000               	movlw	0
 11013  00C1  0020               	movlb	0	; select bank0
 11014  00C2  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 11015  00C3  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11016  00C4  3189  21F8  3180   	fcall	_PWM6_LoadDutyValue
 11017  00C7                     l7524:	
 11018                           
 11019                           ;main.c: 203:     alarm = 0 ;
 11020  00C7  0020               	movlb	0	; select bank0
 11021  00C8  01D3               	clrf	_alarm	;volatile
 11022  00C9                     l7526:	
 11023  00C9  003E               	movlb	30	; select bank30
 11024  00CA  1644               	bsf	68,4	;volatile
 11025  00CB                     l7528:	
 11026                           
 11027                           ;main.c: 207:     (INTCONbits.GIE = 1);
 11028  00CB  178B               	bsf	11,7	;volatile
 11029  00CC                     l7530:	
 11030                           
 11031                           ;main.c: 209:     (INTCONbits.PEIE = 1);
 11032  00CC  170B               	bsf	11,6	;volatile
 11033  00CD                     l1290:	
 11034                           ;main.c: 212:     while (1)
 11035                           
 11036  00CD  0063               	sleep	;# 
 11037  00CE                     l7532:	
 11038                           
 11039                           ;main.c: 216:         __nop();
 11040  00CE  0000               	nop
 11041  00CF                     l7534:	
 11042                           
 11043                           ;main.c: 218:         PIE4bits.TMR1IE = 0;
 11044  00CF  002E               	movlb	14	; select bank14
 11045  00D0  101A               	bcf	26,0	;volatile
 11046  00D1                     l7536:	
 11047                           
 11048                           ;main.c: 219:         t5s = last5s;
 11049  00D1  0020               	movlb	0	; select bank0
 11050  00D2  0857               	movf	_last5s,w	;volatile
 11051  00D3  00C8               	movwf	??_main
 11052  00D4  0848               	movf	??_main,w
 11053  00D5  0021               	movlb	1	; select bank1
 11054  00D6  00E2               	movwf	main@t5s^(0+128)
 11055  00D7                     l7538:	
 11056                           
 11057                           ;main.c: 220:         PIE4bits.TMR1IE = 1;
 11058  00D7  002E               	movlb	14	; select bank14
 11059  00D8  141A               	bsf	26,0	;volatile
 11060  00D9                     l7540:	
 11061                           
 11062                           ;main.c: 222:         if(t5s >= pmon){
 11063  00D9  0020               	movlb	0	; select bank0
 11064  00DA  0866               	movf	_pmon,w
 11065  00DB  0021               	movlb	1	; select bank1
 11066  00DC  0262               	subwf	main@t5s^(0+128),w
 11067  00DD  1C03               	skipc
 11068  00DE  28E0               	goto	u4961
 11069  00DF  28E1               	goto	u4960
 11070  00E0                     u4961:	
 11071  00E0  2A17               	goto	l1291
 11072  00E1                     u4960:	
 11073  00E1                     l7542:	
 11074                           
 11075                           ;main.c: 223:             PIE4bits.TMR1IE = 0;
 11076  00E1  002E               	movlb	14	; select bank14
 11077  00E2  101A               	bcf	26,0	;volatile
 11078  00E3                     l7544:	
 11079                           
 11080                           ;main.c: 224:             last5s =0;
 11081  00E3  0020               	movlb	0	; select bank0
 11082  00E4  01D7               	clrf	_last5s	;volatile
 11083  00E5                     l7546:	
 11084                           
 11085                           ;main.c: 225:             PIE4bits.TMR1IE = 1;
 11086  00E5  002E               	movlb	14	; select bank14
 11087  00E6  141A               	bsf	26,0	;volatile
 11088  00E7                     l7548:	
 11089                           
 11090                           ;main.c: 228:                     if(!config_mode){
 11091  00E7  0020               	movlb	0	; select bank0
 11092  00E8  0854               	movf	_config_mode,w	;volatile
 11093  00E9  1D03               	btfss	3,2
 11094  00EA  28EC               	goto	u4971
 11095  00EB  28ED               	goto	u4970
 11096  00EC                     u4971:	
 11097  00EC  29E3               	goto	l7604
 11098  00ED                     u4970:	
 11099  00ED                     l7550:	
 11100                           
 11101                           ;main.c: 230:                             convertedValue = ADC_read();
 11102  00ED  318A  2211  3180   	fcall	_ADC_read
 11103  00F0  0020               	movlb	0	; select bank0
 11104  00F1  0826               	movf	?_ADC_read+1,w
 11105  00F2  0021               	movlb	1	; select bank1
 11106  00F3  00C4               	movwf	(_convertedValue+1)^(0+128)
 11107  00F4  0020               	movlb	0	; select bank0
 11108  00F5  0825               	movf	?_ADC_read,w
 11109  00F6  0021               	movlb	1	; select bank1
 11110  00F7  00C3               	movwf	_convertedValue^(0+128)
 11111  00F8                     l7552:	
 11112                           
 11113                           ;main.c: 231:                             lum_bin = (convertedValue >> 8);
 11114  00F8  0844               	movf	(_convertedValue+1)^(0+128),w
 11115  00F9  0020               	movlb	0	; select bank0
 11116  00FA  00C9               	movwf	??_main+1
 11117  00FB  0021               	movlb	1	; select bank1
 11118  00FC  0843               	movf	_convertedValue^(0+128),w
 11119  00FD  0020               	movlb	0	; select bank0
 11120  00FE  00C8               	movwf	??_main
 11121  00FF  0849               	movf	??_main+1,w
 11122  0100  00C8               	movwf	??_main
 11123  0101  01C9               	clrf	??_main+1
 11124  0102  0848               	movf	??_main,w
 11125  0103  00CF               	movwf	_lum_bin
 11126  0104  0849               	movf	??_main+1,w
 11127  0105  00D0               	movwf	_lum_bin+1
 11128  0106                     l7554:	
 11129                           
 11130                           ;main.c: 232:                             LED_bin(lum_bin);
 11131  0106  0850               	movf	_lum_bin+1,w
 11132  0107  00A4               	movwf	LED_bin@value+1
 11133  0108  084F               	movf	_lum_bin,w
 11134  0109  00A3               	movwf	LED_bin@value
 11135  010A  318A  222B  3180   	fcall	_LED_bin
 11136  010D                     l7556:	
 11137                           
 11138                           ;main.c: 235:                             __nop();
 11139  010D  0000               	nop
 11140  010E                     l7558:	
 11141                           
 11142                           ;main.c: 236:                             temp = tsttc();
 11143  010E  3183  2389  3180   	fcall	_tsttc
 11144  0111  0020               	movlb	0	; select bank0
 11145  0112  00C8               	movwf	??_main
 11146  0113  0848               	movf	??_main,w
 11147  0114  00D2               	movwf	_temp
 11148  0115                     l7560:	
 11149                           
 11150                           ;main.c: 237:                             __nop();
 11151  0115  0000               	nop
 11152  0116                     l7562:	
 11153                           
 11154                           ;main.c: 240:                             if (temp != read_ring(nreg_pt, nreg, nreg_init
      +                          , 0, 3) || lum_bin != read_ring(nreg_pt, nreg, nreg_init, 0, 4)) {
 11155  0116  0020               	movlb	0	; select bank0
 11156  0117  0867               	movf	_nreg,w
 11157  0118  00C8               	movwf	??_main
 11158  0119  0848               	movf	??_main,w
 11159  011A  00A7               	movwf	read_ring@nreg
 11160  011B  085E               	movf	_nreg_init,w
 11161  011C  00C9               	movwf	??_main+1
 11162  011D  0849               	movf	??_main+1,w
 11163  011E  00A8               	movwf	read_ring@nreg_init
 11164  011F  01A9               	clrf	read_ring@index
 11165  0120  3003               	movlw	3
 11166  0121  00CA               	movwf	??_main+2
 11167  0122  084A               	movf	??_main+2,w
 11168  0123  00AA               	movwf	read_ring@subindex
 11169  0124  085D               	movf	_nreg_pt,w
 11170  0125  318D  2503  3180   	fcall	_read_ring
 11171  0128  0020               	movlb	0	; select bank0
 11172  0129  0652               	xorwf	_temp,w
 11173  012A  1D03               	skipz
 11174  012B  292D               	goto	u4981
 11175  012C  292E               	goto	u4980
 11176  012D                     u4981:	
 11177  012D  294C               	goto	l7566
 11178  012E                     u4980:	
 11179  012E                     l7564:	
 11180  012E  0867               	movf	_nreg,w
 11181  012F  00C8               	movwf	??_main
 11182  0130  0848               	movf	??_main,w
 11183  0131  00A7               	movwf	read_ring@nreg
 11184  0132  085E               	movf	_nreg_init,w
 11185  0133  00C9               	movwf	??_main+1
 11186  0134  0849               	movf	??_main+1,w
 11187  0135  00A8               	movwf	read_ring@nreg_init
 11188  0136  01A9               	clrf	read_ring@index
 11189  0137  3004               	movlw	4
 11190  0138  00CA               	movwf	??_main+2
 11191  0139  084A               	movf	??_main+2,w
 11192  013A  00AA               	movwf	read_ring@subindex
 11193  013B  085D               	movf	_nreg_pt,w
 11194  013C  318D  2503  3180   	fcall	_read_ring
 11195  013F  0020               	movlb	0	; select bank0
 11196  0140  00CB               	movwf	??_main+3
 11197  0141  01CC               	clrf	??_main+4
 11198  0142  0850               	movf	_lum_bin+1,w
 11199  0143  064C               	xorwf	??_main+4,w
 11200  0144  1D03               	skipz
 11201  0145  2948               	goto	u4995
 11202  0146  084F               	movf	_lum_bin,w
 11203  0147  064B               	xorwf	??_main+3,w
 11204  0148                     u4995:	
 11205  0148  1903               	skipnz
 11206  0149  294B               	goto	u4991
 11207  014A  294C               	goto	u4990
 11208  014B                     u4991:	
 11209  014B  2984               	goto	l7572
 11210  014C                     u4990:	
 11211  014C                     l7566:	
 11212                           
 11213                           ;main.c: 241:                                 ring_buffer (ring_byte,clkh, clkm, seg, te
      +                          mp,lum_bin);
 11214  014C  085C               	movf	_clkh,w	;volatile
 11215  014D  00C8               	movwf	??_main
 11216  014E  0848               	movf	??_main,w
 11217  014F  00A3               	movwf	ring_buffer@clock_h
 11218  0150  085B               	movf	_clkm,w	;volatile
 11219  0151  00C9               	movwf	??_main+1
 11220  0152  0849               	movf	??_main+1,w
 11221  0153  00A4               	movwf	ring_buffer@clock_m
 11222  0154  085A               	movf	_seg,w	;volatile
 11223  0155  00CA               	movwf	??_main+2
 11224  0156  084A               	movf	??_main+2,w
 11225  0157  00A5               	movwf	ring_buffer@clock_s
 11226  0158  0852               	movf	_temp,w
 11227  0159  00CB               	movwf	??_main+3
 11228  015A  084B               	movf	??_main+3,w
 11229  015B  00A6               	movwf	ring_buffer@tem
 11230  015C  084F               	movf	_lum_bin,w
 11231  015D  00CC               	movwf	??_main+4
 11232  015E  084C               	movf	??_main+4,w
 11233  015F  00A7               	movwf	ring_buffer@lum
 11234  0160  30D3               	movlw	(low (_ring_byte| 0))& (0+255)
 11235  0161  318C  246D  3180   	fcall	_ring_buffer
 11236                           
 11237                           ;main.c: 242:                                 push_ring(&nreg_pt, nreg, &nreg_init, ring
      +                          _byte);
 11238  0164  0020               	movlb	0	; select bank0
 11239  0165  0867               	movf	_nreg,w
 11240  0166  00C8               	movwf	??_main
 11241  0167  0848               	movf	??_main,w
 11242  0168  00AD               	movwf	push_ring@nreg
 11243  0169  305E               	movlw	(low (_nreg_init| 0))& (0+255)
 11244  016A  00C9               	movwf	??_main+1
 11245  016B  0849               	movf	??_main+1,w
 11246  016C  00AE               	movwf	push_ring@nreg_init
 11247  016D  30D3               	movlw	(low (_ring_byte| 0))& (0+255)
 11248  016E  00CA               	movwf	??_main+2
 11249  016F  084A               	movf	??_main+2,w
 11250  0170  00AF               	movwf	push_ring@ring_byte
 11251  0171  305D               	movlw	(low (_nreg_pt| 0))& (0+255)
 11252  0172  318D  2542  3180   	fcall	_push_ring
 11253  0175                     l7568:	
 11254                           
 11255                           ;main.c: 243:                                 DATAEE_WriteByte(0xF0FF - 10 + 4, nreg_pt)
      +                          ;
 11256  0175  30F9               	movlw	249
 11257  0176  0020               	movlb	0	; select bank0
 11258  0177  00A9               	movwf	DATAEE_WriteByte@bAdd
 11259  0178  30F0               	movlw	240
 11260  0179  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11261  017A  085D               	movf	_nreg_pt,w
 11262  017B  00C8               	movwf	??_main
 11263  017C  0848               	movf	??_main,w
 11264  017D  00AB               	movwf	DATAEE_WriteByte@bData
 11265  017E  318B  2351  3180   	fcall	_DATAEE_WriteByte
 11266  0181                     l7570:	
 11267                           
 11268                           ;main.c: 244:                                 cksum_w();
 11269  0181  3188  20F2  3180   	fcall	_cksum_w
 11270  0184                     l7572:	
 11271                           
 11272                           ;main.c: 248:                             threshold = (lum_bin > lum_thresh || temp > te
      +                          mp_thresh ) & alaf;
 11273  0184  0021               	movlb	1	; select bank1
 11274  0185  01E4               	clrf	_main$2446^(0+128)
 11275  0186  0AE4               	incf	_main$2446^(0+128),f
 11276  0187                     l7574:	
 11277  0187  0020               	movlb	0	; select bank0
 11278  0188  0863               	movf	_lum_thresh,w
 11279  0189  00C8               	movwf	??_main
 11280  018A  01C9               	clrf	??_main+1
 11281  018B  0850               	movf	_lum_bin+1,w
 11282  018C  0249               	subwf	??_main+1,w
 11283  018D  1D03               	skipz
 11284  018E  2991               	goto	u5005
 11285  018F  084F               	movf	_lum_bin,w
 11286  0190  0248               	subwf	??_main,w
 11287  0191                     u5005:	
 11288  0191  1C03               	skipc
 11289  0192  2994               	goto	u5001
 11290  0193  2995               	goto	u5000
 11291  0194                     u5001:	
 11292  0194  299D               	goto	l7580
 11293  0195                     u5000:	
 11294  0195                     l7576:	
 11295  0195  0852               	movf	_temp,w
 11296  0196  0264               	subwf	_temp_thresh,w
 11297  0197  1C03               	skipc
 11298  0198  299A               	goto	u5011
 11299  0199  299B               	goto	u5010
 11300  019A                     u5011:	
 11301  019A  299D               	goto	l7580
 11302  019B                     u5010:	
 11303  019B                     l7578:	
 11304  019B  0021               	movlb	1	; select bank1
 11305  019C  01E4               	clrf	_main$2446^(0+128)
 11306  019D                     l7580:	
 11307  019D  0021               	movlb	1	; select bank1
 11308  019E  0864               	movf	_main$2446^(0+128),w
 11309  019F  0020               	movlb	0	; select bank0
 11310  01A0  0551               	andwf	_alaf,w
 11311  01A1  00C8               	movwf	??_main
 11312  01A2  01C9               	clrf	??_main+1
 11313  01A3  0848               	movf	??_main,w
 11314  01A4  00CD               	movwf	_threshold
 11315  01A5  0849               	movf	??_main+1,w
 11316  01A6  00CE               	movwf	_threshold+1
 11317  01A7                     l7582:	
 11318                           
 11319                           ;main.c: 250:                             if(threshold){
 11320  01A7  084D               	movf	_threshold,w
 11321  01A8  044E               	iorwf	_threshold+1,w
 11322  01A9  1903               	btfsc	3,2
 11323  01AA  29AC               	goto	u5021
 11324  01AB  29AD               	goto	u5020
 11325  01AC                     u5021:	
 11326  01AC  29D3               	goto	l7598
 11327  01AD                     u5020:	
 11328  01AD                     l7584:	
 11329                           
 11330                           ;main.c: 251:                                 if(alarm == 2){
 11331  01AD  3002               	movlw	2
 11332  01AE  0653               	xorwf	_alarm,w	;volatile
 11333  01AF  1D03               	btfss	3,2
 11334  01B0  29B2               	goto	u5031
 11335  01B1  29B3               	goto	u5030
 11336  01B2                     u5031:	
 11337  01B2  29C3               	goto	l7590
 11338  01B3                     u5030:	
 11339  01B3                     l7586:	
 11340                           
 11341                           ;main.c: 252:                                     duty_cycle +=1 ;
 11342  01B3  3001               	movlw	1
 11343  01B4  0021               	movlb	1	; select bank1
 11344  01B5  07C1               	addwf	_duty_cycle^(0+128),f
 11345  01B6  3000               	movlw	0
 11346  01B7  3DC2               	addwfc	(_duty_cycle+1)^(0+128),f
 11347  01B8                     l7588:	
 11348                           
 11349                           ;main.c: 253:                                     PWM6_LoadDutyValue(duty_cycle);
 11350  01B8  0842               	movf	(_duty_cycle+1)^(0+128),w
 11351  01B9  0020               	movlb	0	; select bank0
 11352  01BA  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11353  01BB  0021               	movlb	1	; select bank1
 11354  01BC  0841               	movf	_duty_cycle^(0+128),w
 11355  01BD  0020               	movlb	0	; select bank0
 11356  01BE  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 11357  01BF  3189  21F8  3180   	fcall	_PWM6_LoadDutyValue
 11358                           
 11359                           ;main.c: 254:                                 }
 11360  01C2  2A07               	goto	l7616
 11361  01C3                     l7590:	
 11362  01C3  0853               	movf	_alarm,w	;volatile
 11363  01C4  1D03               	btfss	3,2
 11364  01C5  29C7               	goto	u5041
 11365  01C6  29C8               	goto	u5040
 11366  01C7                     u5041:	
 11367  01C7  29E2               	goto	l1303
 11368  01C8                     u5040:	
 11369  01C8                     l7592:	
 11370                           
 11371                           ;main.c: 256:                                     PIE0bits.TMR0IE = 1;
 11372  01C8  002E               	movlb	14	; select bank14
 11373  01C9  1696               	bsf	22,5	;volatile
 11374  01CA                     l7594:	
 11375                           
 11376                           ;main.c: 257:                                     TMR0_StartTimer();
 11377  01CA  3197  2771  3180   	fcall	_TMR0_StartTimer
 11378  01CD                     l7596:	
 11379                           
 11380                           ;main.c: 258:                                     alarm = 2 ;
 11381  01CD  3002               	movlw	2
 11382  01CE  0020               	movlb	0	; select bank0
 11383  01CF  00C8               	movwf	??_main
 11384  01D0  0848               	movf	??_main,w
 11385  01D1  00D3               	movwf	_alarm	;volatile
 11386  01D2  2A07               	goto	l7616
 11387  01D3                     l7598:	
 11388                           
 11389                           ;main.c: 262:                                 if(alarm == 2){
 11390  01D3  3002               	movlw	2
 11391  01D4  0653               	xorwf	_alarm,w	;volatile
 11392  01D5  1D03               	btfss	3,2
 11393  01D6  29D8               	goto	u5051
 11394  01D7  29D9               	goto	u5050
 11395  01D8                     u5051:	
 11396  01D8  2A07               	goto	l7616
 11397  01D9                     u5050:	
 11398  01D9                     l7600:	
 11399                           
 11400                           ;main.c: 263:                                     PWM6_LoadDutyValue(0);
 11401  01D9  3000               	movlw	0
 11402  01DA  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 11403  01DB  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11404  01DC  3189  21F8  3180   	fcall	_PWM6_LoadDutyValue
 11405  01DF                     l7602:	
 11406                           
 11407                           ;main.c: 264:                                     alarm = 0 ;
 11408  01DF  0020               	movlb	0	; select bank0
 11409  01E0  01D3               	clrf	_alarm	;volatile
 11410  01E1  2A07               	goto	l7616
 11411  01E2                     l1303:	
 11412                           ;main.c: 266:                             }
 11413                           
 11414                           
 11415                           ;main.c: 268:                     }
 11416  01E2  2A07               	goto	l7616
 11417  01E3                     l7604:	
 11418  01E3  0354               	decf	_config_mode,w	;volatile
 11419  01E4  1D03               	btfss	3,2
 11420  01E5  29E7               	goto	u5061
 11421  01E6  29E8               	goto	u5060
 11422  01E7                     u5061:	
 11423  01E7  2A07               	goto	l7616
 11424  01E8                     u5060:	
 11425  01E8                     l7606:	
 11426                           
 11427                           ;main.c: 272:                         (PIE0bits.INTE = 0);
 11428  01E8  002E               	movlb	14	; select bank14
 11429  01E9  1016               	bcf	22,0	;volatile
 11430  01EA                     l7608:	
 11431                           
 11432                           ;main.c: 273:                         config_routine();
 11433  01EA  3185  259F  3180   	fcall	_config_routine
 11434  01ED                     l7610:	
 11435                           
 11436                           ;main.c: 274:                         (PIE0bits.INTE = 1);
 11437  01ED  002E               	movlb	14	; select bank14
 11438  01EE  1416               	bsf	22,0	;volatile
 11439  01EF                     l7612:	
 11440                           
 11441                           ;main.c: 275:                         DATAEE_WriteByte(0xF0FF - 10 + 5, temp_thresh);
 11442  01EF  30FA               	movlw	250
 11443  01F0  0020               	movlb	0	; select bank0
 11444  01F1  00A9               	movwf	DATAEE_WriteByte@bAdd
 11445  01F2  30F0               	movlw	240
 11446  01F3  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11447  01F4  0864               	movf	_temp_thresh,w
 11448  01F5  00C8               	movwf	??_main
 11449  01F6  0848               	movf	??_main,w
 11450  01F7  00AB               	movwf	DATAEE_WriteByte@bData
 11451  01F8  318B  2351  3180   	fcall	_DATAEE_WriteByte
 11452  01FB                     l7614:	
 11453                           
 11454                           ;main.c: 276:                         DATAEE_WriteByte(0xF0FF - 10 + 6, lum_thresh);
 11455  01FB  30FB               	movlw	251
 11456  01FC  0020               	movlb	0	; select bank0
 11457  01FD  00A9               	movwf	DATAEE_WriteByte@bAdd
 11458  01FE  30F0               	movlw	240
 11459  01FF  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11460  0200  0863               	movf	_lum_thresh,w
 11461  0201  00C8               	movwf	??_main
 11462  0202  0848               	movf	??_main,w
 11463  0203  00AB               	movwf	DATAEE_WriteByte@bData
 11464  0204  318B  2351  3180   	fcall	_DATAEE_WriteByte
 11465  0207                     l7616:	
 11466                           
 11467                           ;main.c: 279:                     _delay((unsigned long)((10)*(1000000/4000.0)));
 11468  0207  3004               	movlw	4
 11469  0208  0020               	movlb	0	; select bank0
 11470  0209  00C8               	movwf	??_main
 11471  020A  303D               	movlw	61
 11472  020B                     u5107:	
 11473  020B  0B89               	decfsz	9,f
 11474  020C  2A0B               	goto	u5107
 11475  020D  0BC8               	decfsz	??_main,f
 11476  020E  2A0B               	goto	u5107
 11477  020F  3200               	nop2
 11478  0210                     l7618:	
 11479                           
 11480                           ;main.c: 281:             }while(alarm == 2);
 11481  0210  3002               	movlw	2
 11482  0211  0020               	movlb	0	; select bank0
 11483  0212  0653               	xorwf	_alarm,w	;volatile
 11484  0213  1903               	btfsc	3,2
 11485  0214  2A16               	goto	u5071
 11486  0215  2A17               	goto	u5070
 11487  0216                     u5071:	
 11488  0216  28E7               	goto	l7548
 11489  0217                     u5070:	
 11490  0217                     l1291:	
 11491                           ;main.c: 283:         }
 11492                           
 11493                           
 11494                           ;main.c: 285:        PIE4bits.TMR1IE = 0;
 11495  0217  002E               	movlb	14	; select bank14
 11496  0218  101A               	bcf	26,0	;volatile
 11497  0219                     l7620:	
 11498                           
 11499                           ;main.c: 286:        t1m = last1m;
 11500  0219  0020               	movlb	0	; select bank0
 11501  021A  0856               	movf	_last1m,w	;volatile
 11502  021B  00C8               	movwf	??_main
 11503  021C  0848               	movf	??_main,w
 11504  021D  0021               	movlb	1	; select bank1
 11505  021E  00E3               	movwf	main@t1m^(0+128)
 11506  021F                     l7622:	
 11507                           
 11508                           ;main.c: 287:        PIE4bits.TMR1IE = 1;
 11509  021F  002E               	movlb	14	; select bank14
 11510  0220  141A               	bsf	26,0	;volatile
 11511  0221                     l7624:	
 11512                           
 11513                           ;main.c: 289:        if (t1m >= 1) {
 11514  0221  0021               	movlb	1	; select bank1
 11515  0222  0863               	movf	main@t1m^(0+128),w
 11516  0223  1903               	btfsc	3,2
 11517  0224  2A26               	goto	u5081
 11518  0225  2A27               	goto	u5080
 11519  0226                     u5081:	
 11520  0226  28CD               	goto	l1290
 11521  0227                     u5080:	
 11522  0227                     l7626:	
 11523                           
 11524                           ;main.c: 290:          save_recovery_params();
 11525  0227  318B  23EA  3180   	fcall	_save_recovery_params
 11526  022A  28CD               	goto	l1290
 11527  022B  3180  285B         	ljmp	start
 11528  022D                     __end_of_main:	
 11529                           
 11530                           	psect	text1
 11531  0389                     __ptext1:	
 11532 ;; *************** function _tsttc *****************
 11533 ;; Defined at:
 11534 ;;		line 15 in file "I2C/i2c.c"
 11535 ;; Parameters:    Size  Location     Type
 11536 ;;		None
 11537 ;; Auto vars:     Size  Location     Type
 11538 ;;  value           1    6[BANK0 ] unsigned char 
 11539 ;; Return value:  Size  Location     Type
 11540 ;;                  1    wreg      unsigned char 
 11541 ;; Registers used:
 11542 ;;		wreg, status,2, status,0, pclath, cstack
 11543 ;; Tracked objects:
 11544 ;;		On entry : 0/0
 11545 ;;		On exit  : 0/0
 11546 ;;		Unchanged: 0/0
 11547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11549 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11550 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11551 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11552 ;;Total ram usage:        2 bytes
 11553 ;; Hardware stack levels used:    1
 11554 ;; Hardware stack levels required when called:    7
 11555 ;; This function calls:
 11556 ;;		_ReadI2C
 11557 ;;		_WriteI2C
 11558 ;; This function is called by:
 11559 ;;		_main
 11560 ;; This function uses a non-reentrant model
 11561 ;;
 11562                           
 11563                           
 11564                           ;psect for function _tsttc
 11565  0389                     _tsttc:	
 11566  0389                     l1460:	
 11567                           ;incstack = 0
 11568                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
 11569                           ;I2C/i2c.c: 17:  unsigned char value;;I2C/i2c.c: 19:     do{
 11570                           
 11571  0389                     l7206:	
 11572                           ;I2C/i2c.c: 20:         while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11573                           
 11574  0389  0023               	movlb	3	; select bank3
 11575  038A  0C0F               	rrf	15,w	;volatile
 11576  038B  0C89               	rrf	9,f
 11577  038C  3901               	andlw	1
 11578  038D  0020               	movlb	0	; select bank0
 11579  038E  00A5               	movwf	??_tsttc
 11580  038F  0023               	movlb	3	; select bank3
 11581  0390  0811               	movf	17,w	;volatile
 11582  0391  391F               	andlw	31
 11583  0392  0020               	movlb	0	; select bank0
 11584  0393  0425               	iorwf	??_tsttc,w
 11585  0394  1D03               	btfss	3,2
 11586  0395  2B97               	goto	u4421
 11587  0396  2B98               	goto	u4420
 11588  0397                     u4421:	
 11589  0397  2B89               	goto	l7206
 11590  0398                     u4420:	
 11591  0398                     l1463:	
 11592                           
 11593                           ;I2C/i2c.c: 21:         SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0
      +                          x1F) | (SSP1STATbits.R_W));
 11594  0398  0023               	movlb	3	; select bank3
 11595  0399  1411               	bsf	17,0	;volatile
 11596  039A                     l1464:	
 11597  039A  1811               	btfsc	17,0	;volatile
 11598  039B  2B9D               	goto	u4431
 11599  039C  2B9E               	goto	u4430
 11600  039D                     u4431:	
 11601  039D  2B9A               	goto	l1464
 11602  039E                     u4430:	
 11603  039E                     l7208:	
 11604  039E  0023               	movlb	3	; select bank3
 11605  039F  0C0F               	rrf	15,w	;volatile
 11606  03A0  0C89               	rrf	9,f
 11607  03A1  3901               	andlw	1
 11608  03A2  0020               	movlb	0	; select bank0
 11609  03A3  00A5               	movwf	??_tsttc
 11610  03A4  0023               	movlb	3	; select bank3
 11611  03A5  0811               	movf	17,w	;volatile
 11612  03A6  391F               	andlw	31
 11613  03A7  0020               	movlb	0	; select bank0
 11614  03A8  0425               	iorwf	??_tsttc,w
 11615  03A9  1D03               	btfss	3,2
 11616  03AA  2BAC               	goto	u4441
 11617  03AB  2BAD               	goto	u4440
 11618  03AC                     u4441:	
 11619  03AC  2B9E               	goto	l7208
 11620  03AD                     u4440:	
 11621  03AD                     l7210:	
 11622                           
 11623                           ;I2C/i2c.c: 23:         WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.
      +                          R_W));
 11624  03AD  309A               	movlw	154
 11625  03AE  3186  26DC  3183   	fcall	_WriteI2C
 11626  03B1                     l7212:	
 11627  03B1  0023               	movlb	3	; select bank3
 11628  03B2  0C0F               	rrf	15,w	;volatile
 11629  03B3  0C89               	rrf	9,f
 11630  03B4  3901               	andlw	1
 11631  03B5  0020               	movlb	0	; select bank0
 11632  03B6  00A5               	movwf	??_tsttc
 11633  03B7  0023               	movlb	3	; select bank3
 11634  03B8  0811               	movf	17,w	;volatile
 11635  03B9  391F               	andlw	31
 11636  03BA  0020               	movlb	0	; select bank0
 11637  03BB  0425               	iorwf	??_tsttc,w
 11638  03BC  1D03               	btfss	3,2
 11639  03BD  2BBF               	goto	u4451
 11640  03BE  2BC0               	goto	u4450
 11641  03BF                     u4451:	
 11642  03BF  2BB1               	goto	l7212
 11643  03C0                     u4450:	
 11644  03C0                     l7214:	
 11645                           
 11646                           ;I2C/i2c.c: 24:         WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11647  03C0  3001               	movlw	1
 11648  03C1  3186  26DC  3183   	fcall	_WriteI2C
 11649  03C4                     l7216:	
 11650  03C4  0023               	movlb	3	; select bank3
 11651  03C5  0C0F               	rrf	15,w	;volatile
 11652  03C6  0C89               	rrf	9,f
 11653  03C7  3901               	andlw	1
 11654  03C8  0020               	movlb	0	; select bank0
 11655  03C9  00A5               	movwf	??_tsttc
 11656  03CA  0023               	movlb	3	; select bank3
 11657  03CB  0811               	movf	17,w	;volatile
 11658  03CC  391F               	andlw	31
 11659  03CD  0020               	movlb	0	; select bank0
 11660  03CE  0425               	iorwf	??_tsttc,w
 11661  03CF  1D03               	btfss	3,2
 11662  03D0  2BD2               	goto	u4461
 11663  03D1  2BD3               	goto	u4460
 11664  03D2                     u4461:	
 11665  03D2  2BC4               	goto	l7216
 11666  03D3                     u4460:	
 11667  03D3                     l1475:	
 11668                           
 11669                           ;I2C/i2c.c: 25:         SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 &
      +                           0x1F) | (SSP1STATbits.R_W));
 11670  03D3  0023               	movlb	3	; select bank3
 11671  03D4  1491               	bsf	17,1	;volatile
 11672  03D5                     l1476:	
 11673  03D5  1891               	btfsc	17,1	;volatile
 11674  03D6  2BD8               	goto	u4471
 11675  03D7  2BD9               	goto	u4470
 11676  03D8                     u4471:	
 11677  03D8  2BD5               	goto	l1476
 11678  03D9                     u4470:	
 11679  03D9                     l7218:	
 11680  03D9  0023               	movlb	3	; select bank3
 11681  03DA  0C0F               	rrf	15,w	;volatile
 11682  03DB  0C89               	rrf	9,f
 11683  03DC  3901               	andlw	1
 11684  03DD  0020               	movlb	0	; select bank0
 11685  03DE  00A5               	movwf	??_tsttc
 11686  03DF  0023               	movlb	3	; select bank3
 11687  03E0  0811               	movf	17,w	;volatile
 11688  03E1  391F               	andlw	31
 11689  03E2  0020               	movlb	0	; select bank0
 11690  03E3  0425               	iorwf	??_tsttc,w
 11691  03E4  1D03               	btfss	3,2
 11692  03E5  2BE7               	goto	u4481
 11693  03E6  2BE8               	goto	u4480
 11694  03E7                     u4481:	
 11695  03E7  2BD9               	goto	l7218
 11696  03E8                     u4480:	
 11697  03E8                     l7220:	
 11698                           
 11699                           ;I2C/i2c.c: 26:         WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.
      +                          R_W));
 11700  03E8  309B               	movlw	155
 11701  03E9  3186  26DC  3183   	fcall	_WriteI2C
 11702  03EC                     l7222:	
 11703  03EC  0023               	movlb	3	; select bank3
 11704  03ED  0C0F               	rrf	15,w	;volatile
 11705  03EE  0C89               	rrf	9,f
 11706  03EF  3901               	andlw	1
 11707  03F0  0020               	movlb	0	; select bank0
 11708  03F1  00A5               	movwf	??_tsttc
 11709  03F2  0023               	movlb	3	; select bank3
 11710  03F3  0811               	movf	17,w	;volatile
 11711  03F4  391F               	andlw	31
 11712  03F5  0020               	movlb	0	; select bank0
 11713  03F6  0425               	iorwf	??_tsttc,w
 11714  03F7  1D03               	btfss	3,2
 11715  03F8  2BFA               	goto	u4491
 11716  03F9  2BFB               	goto	u4490
 11717  03FA                     u4491:	
 11718  03FA  2BEC               	goto	l7222
 11719  03FB                     u4490:	
 11720  03FB                     l7224:	
 11721                           
 11722                           ;I2C/i2c.c: 27:         value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W)
      +                          );
 11723  03FB  318A  22D2  3183   	fcall	_ReadI2C
 11724  03FE  0020               	movlb	0	; select bank0
 11725  03FF  00A5               	movwf	??_tsttc
 11726  0400  0825               	movf	??_tsttc,w
 11727  0401  00A6               	movwf	tsttc@value
 11728  0402                     l7226:	
 11729  0402  0023               	movlb	3	; select bank3
 11730  0403  0C0F               	rrf	15,w	;volatile
 11731  0404  0C89               	rrf	9,f
 11732  0405  3901               	andlw	1
 11733  0406  0020               	movlb	0	; select bank0
 11734  0407  00A5               	movwf	??_tsttc
 11735  0408  0023               	movlb	3	; select bank3
 11736  0409  0811               	movf	17,w	;volatile
 11737  040A  391F               	andlw	31
 11738  040B  0020               	movlb	0	; select bank0
 11739  040C  0425               	iorwf	??_tsttc,w
 11740  040D  1D03               	btfss	3,2
 11741  040E  2C10               	goto	u4501
 11742  040F  2C11               	goto	u4500
 11743  0410                     u4501:	
 11744  0410  2C02               	goto	l7226
 11745  0411                     u4500:	
 11746  0411                     l1487:	
 11747                           
 11748                           ;I2C/i2c.c: 28:         SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACK
      +                          EN); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11749  0411  0023               	movlb	3	; select bank3
 11750  0412  1691               	bsf	17,5	;volatile
 11751  0413  1611               	bsf	17,4	;volatile
 11752  0414                     l1488:	
 11753  0414  1A11               	btfsc	17,4	;volatile
 11754  0415  2C17               	goto	u4511
 11755  0416  2C18               	goto	u4510
 11756  0417                     u4511:	
 11757  0417  2C14               	goto	l1488
 11758  0418                     u4510:	
 11759  0418                     l7228:	
 11760  0418  0023               	movlb	3	; select bank3
 11761  0419  0C0F               	rrf	15,w	;volatile
 11762  041A  0C89               	rrf	9,f
 11763  041B  3901               	andlw	1
 11764  041C  0020               	movlb	0	; select bank0
 11765  041D  00A5               	movwf	??_tsttc
 11766  041E  0023               	movlb	3	; select bank3
 11767  041F  0811               	movf	17,w	;volatile
 11768  0420  391F               	andlw	31
 11769  0421  0020               	movlb	0	; select bank0
 11770  0422  0425               	iorwf	??_tsttc,w
 11771  0423  1D03               	btfss	3,2
 11772  0424  2C26               	goto	u4521
 11773  0425  2C27               	goto	u4520
 11774  0426                     u4521:	
 11775  0426  2C18               	goto	l7228
 11776  0427                     u4520:	
 11777  0427                     l1493:	
 11778                           
 11779                           ;I2C/i2c.c: 29:         SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11780  0427  0023               	movlb	3	; select bank3
 11781  0428  1511               	bsf	17,2	;volatile
 11782  0429                     l1494:	
 11783  0429  1911               	btfsc	17,2	;volatile
 11784  042A  2C2C               	goto	u4531
 11785  042B  2C2D               	goto	u4530
 11786  042C                     u4531:	
 11787  042C  2C29               	goto	l1494
 11788  042D                     u4530:	
 11789  042D                     l1496:	
 11790                           
 11791                           ;I2C/i2c.c: 30:     } while (!(value & 0x40));
 11792  042D  0020               	movlb	0	; select bank0
 11793  042E  1F26               	btfss	tsttc@value,6
 11794  042F  2C31               	goto	u4541
 11795  0430  2C32               	goto	u4540
 11796  0431                     u4541:	
 11797  0431  2B89               	goto	l1460
 11798  0432                     u4540:	
 11799  0432                     l7230:	
 11800  0432  0023               	movlb	3	; select bank3
 11801  0433  0C0F               	rrf	15,w	;volatile
 11802  0434  0C89               	rrf	9,f
 11803  0435  3901               	andlw	1
 11804  0436  0020               	movlb	0	; select bank0
 11805  0437  00A5               	movwf	??_tsttc
 11806  0438  0023               	movlb	3	; select bank3
 11807  0439  0811               	movf	17,w	;volatile
 11808  043A  391F               	andlw	31
 11809  043B  0020               	movlb	0	; select bank0
 11810  043C  0425               	iorwf	??_tsttc,w
 11811  043D  1D03               	btfss	3,2
 11812  043E  2C40               	goto	u4551
 11813  043F  2C41               	goto	u4550
 11814  0440                     u4551:	
 11815  0440  2C32               	goto	l7230
 11816  0441                     u4550:	
 11817  0441                     l1500:	
 11818                           
 11819                           ;I2C/i2c.c: 33:  SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | 
      +                          (SSP1STATbits.R_W));
 11820  0441  0023               	movlb	3	; select bank3
 11821  0442  1411               	bsf	17,0	;volatile
 11822  0443                     l1501:	
 11823  0443  1811               	btfsc	17,0	;volatile
 11824  0444  2C46               	goto	u4561
 11825  0445  2C47               	goto	u4560
 11826  0446                     u4561:	
 11827  0446  2C43               	goto	l1501
 11828  0447                     u4560:	
 11829  0447                     l7232:	
 11830  0447  0023               	movlb	3	; select bank3
 11831  0448  0C0F               	rrf	15,w	;volatile
 11832  0449  0C89               	rrf	9,f
 11833  044A  3901               	andlw	1
 11834  044B  0020               	movlb	0	; select bank0
 11835  044C  00A5               	movwf	??_tsttc
 11836  044D  0023               	movlb	3	; select bank3
 11837  044E  0811               	movf	17,w	;volatile
 11838  044F  391F               	andlw	31
 11839  0450  0020               	movlb	0	; select bank0
 11840  0451  0425               	iorwf	??_tsttc,w
 11841  0452  1D03               	btfss	3,2
 11842  0453  2C55               	goto	u4571
 11843  0454  2C56               	goto	u4570
 11844  0455                     u4571:	
 11845  0455  2C47               	goto	l7232
 11846  0456                     u4570:	
 11847  0456                     l7234:	
 11848                           
 11849                           ;I2C/i2c.c: 34:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11850  0456  309A               	movlw	154
 11851  0457  3186  26DC  3183   	fcall	_WriteI2C
 11852  045A                     l7236:	
 11853  045A  0023               	movlb	3	; select bank3
 11854  045B  0C0F               	rrf	15,w	;volatile
 11855  045C  0C89               	rrf	9,f
 11856  045D  3901               	andlw	1
 11857  045E  0020               	movlb	0	; select bank0
 11858  045F  00A5               	movwf	??_tsttc
 11859  0460  0023               	movlb	3	; select bank3
 11860  0461  0811               	movf	17,w	;volatile
 11861  0462  391F               	andlw	31
 11862  0463  0020               	movlb	0	; select bank0
 11863  0464  0425               	iorwf	??_tsttc,w
 11864  0465  1D03               	btfss	3,2
 11865  0466  2C68               	goto	u4581
 11866  0467  2C69               	goto	u4580
 11867  0468                     u4581:	
 11868  0468  2C5A               	goto	l7236
 11869  0469                     u4580:	
 11870  0469                     l7238:	
 11871                           
 11872                           ;I2C/i2c.c: 35:  WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11873  0469  3000               	movlw	0
 11874  046A  3186  26DC  3183   	fcall	_WriteI2C
 11875  046D                     l7240:	
 11876  046D  0023               	movlb	3	; select bank3
 11877  046E  0C0F               	rrf	15,w	;volatile
 11878  046F  0C89               	rrf	9,f
 11879  0470  3901               	andlw	1
 11880  0471  0020               	movlb	0	; select bank0
 11881  0472  00A5               	movwf	??_tsttc
 11882  0473  0023               	movlb	3	; select bank3
 11883  0474  0811               	movf	17,w	;volatile
 11884  0475  391F               	andlw	31
 11885  0476  0020               	movlb	0	; select bank0
 11886  0477  0425               	iorwf	??_tsttc,w
 11887  0478  1D03               	btfss	3,2
 11888  0479  2C7B               	goto	u4591
 11889  047A  2C7C               	goto	u4590
 11890  047B                     u4591:	
 11891  047B  2C6D               	goto	l7240
 11892  047C                     u4590:	
 11893  047C                     l1512:	
 11894                           
 11895                           ;I2C/i2c.c: 36:  SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) 
      +                          | (SSP1STATbits.R_W));
 11896  047C  0023               	movlb	3	; select bank3
 11897  047D  1491               	bsf	17,1	;volatile
 11898  047E                     l1513:	
 11899  047E  1891               	btfsc	17,1	;volatile
 11900  047F  2C81               	goto	u4601
 11901  0480  2C82               	goto	u4600
 11902  0481                     u4601:	
 11903  0481  2C7E               	goto	l1513
 11904  0482                     u4600:	
 11905  0482                     l7242:	
 11906  0482  0023               	movlb	3	; select bank3
 11907  0483  0C0F               	rrf	15,w	;volatile
 11908  0484  0C89               	rrf	9,f
 11909  0485  3901               	andlw	1
 11910  0486  0020               	movlb	0	; select bank0
 11911  0487  00A5               	movwf	??_tsttc
 11912  0488  0023               	movlb	3	; select bank3
 11913  0489  0811               	movf	17,w	;volatile
 11914  048A  391F               	andlw	31
 11915  048B  0020               	movlb	0	; select bank0
 11916  048C  0425               	iorwf	??_tsttc,w
 11917  048D  1D03               	btfss	3,2
 11918  048E  2C90               	goto	u4611
 11919  048F  2C91               	goto	u4610
 11920  0490                     u4611:	
 11921  0490  2C82               	goto	l7242
 11922  0491                     u4610:	
 11923  0491                     l7244:	
 11924                           
 11925                           ;I2C/i2c.c: 37:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11926  0491  309B               	movlw	155
 11927  0492  3186  26DC  3183   	fcall	_WriteI2C
 11928  0495                     l7246:	
 11929  0495  0023               	movlb	3	; select bank3
 11930  0496  0C0F               	rrf	15,w	;volatile
 11931  0497  0C89               	rrf	9,f
 11932  0498  3901               	andlw	1
 11933  0499  0020               	movlb	0	; select bank0
 11934  049A  00A5               	movwf	??_tsttc
 11935  049B  0023               	movlb	3	; select bank3
 11936  049C  0811               	movf	17,w	;volatile
 11937  049D  391F               	andlw	31
 11938  049E  0020               	movlb	0	; select bank0
 11939  049F  0425               	iorwf	??_tsttc,w
 11940  04A0  1D03               	btfss	3,2
 11941  04A1  2CA3               	goto	u4621
 11942  04A2  2CA4               	goto	u4620
 11943  04A3                     u4621:	
 11944  04A3  2C95               	goto	l7246
 11945  04A4                     u4620:	
 11946  04A4                     l7248:	
 11947                           
 11948                           ;I2C/i2c.c: 38:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11949  04A4  318A  22D2  3183   	fcall	_ReadI2C
 11950  04A7  0020               	movlb	0	; select bank0
 11951  04A8  00A5               	movwf	??_tsttc
 11952  04A9  0825               	movf	??_tsttc,w
 11953  04AA  00A6               	movwf	tsttc@value
 11954  04AB                     l7250:	
 11955  04AB  0023               	movlb	3	; select bank3
 11956  04AC  0C0F               	rrf	15,w	;volatile
 11957  04AD  0C89               	rrf	9,f
 11958  04AE  3901               	andlw	1
 11959  04AF  0020               	movlb	0	; select bank0
 11960  04B0  00A5               	movwf	??_tsttc
 11961  04B1  0023               	movlb	3	; select bank3
 11962  04B2  0811               	movf	17,w	;volatile
 11963  04B3  391F               	andlw	31
 11964  04B4  0020               	movlb	0	; select bank0
 11965  04B5  0425               	iorwf	??_tsttc,w
 11966  04B6  1D03               	btfss	3,2
 11967  04B7  2CB9               	goto	u4631
 11968  04B8  2CBA               	goto	u4630
 11969  04B9                     u4631:	
 11970  04B9  2CAB               	goto	l7250
 11971  04BA                     u4630:	
 11972  04BA                     l1524:	
 11973                           
 11974                           ;I2C/i2c.c: 39:  SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); wh
      +                          ile ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11975  04BA  0023               	movlb	3	; select bank3
 11976  04BB  1691               	bsf	17,5	;volatile
 11977  04BC  1611               	bsf	17,4	;volatile
 11978  04BD                     l1525:	
 11979  04BD  1A11               	btfsc	17,4	;volatile
 11980  04BE  2CC0               	goto	u4641
 11981  04BF  2CC1               	goto	u4640
 11982  04C0                     u4641:	
 11983  04C0  2CBD               	goto	l1525
 11984  04C1                     u4640:	
 11985  04C1                     l7252:	
 11986  04C1  0023               	movlb	3	; select bank3
 11987  04C2  0C0F               	rrf	15,w	;volatile
 11988  04C3  0C89               	rrf	9,f
 11989  04C4  3901               	andlw	1
 11990  04C5  0020               	movlb	0	; select bank0
 11991  04C6  00A5               	movwf	??_tsttc
 11992  04C7  0023               	movlb	3	; select bank3
 11993  04C8  0811               	movf	17,w	;volatile
 11994  04C9  391F               	andlw	31
 11995  04CA  0020               	movlb	0	; select bank0
 11996  04CB  0425               	iorwf	??_tsttc,w
 11997  04CC  1D03               	btfss	3,2
 11998  04CD  2CCF               	goto	u4651
 11999  04CE  2CD0               	goto	u4650
 12000  04CF                     u4651:	
 12001  04CF  2CC1               	goto	l7252
 12002  04D0                     u4650:	
 12003  04D0                     l1530:	
 12004                           
 12005                           ;I2C/i2c.c: 40:  SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 12006  04D0  0023               	movlb	3	; select bank3
 12007  04D1  1511               	bsf	17,2	;volatile
 12008  04D2                     l1531:	
 12009  04D2  1911               	btfsc	17,2	;volatile
 12010  04D3  2CD5               	goto	u4661
 12011  04D4  2CD6               	goto	u4660
 12012  04D5                     u4661:	
 12013  04D5  2CD2               	goto	l1531
 12014  04D6                     u4660:	
 12015  04D6                     l7254:	
 12016                           
 12017                           ;I2C/i2c.c: 42:  return value;
 12018  04D6  0020               	movlb	0	; select bank0
 12019  04D7  0826               	movf	tsttc@value,w
 12020  04D8                     l1534:	
 12021  04D8  0008               	return
 12022  04D9                     __end_of_tsttc:	
 12023                           
 12024                           	psect	text2
 12025  06DC                     __ptext2:	
 12026 ;; *************** function _WriteI2C *****************
 12027 ;; Defined at:
 12028 ;;		line 88 in file "I2C/i2c.c"
 12029 ;; Parameters:    Size  Location     Type
 12030 ;;  data_out        1    wreg     unsigned char 
 12031 ;; Auto vars:     Size  Location     Type
 12032 ;;  data_out        1    4[BANK0 ] unsigned char 
 12033 ;; Return value:  Size  Location     Type
 12034 ;;                  1    wreg      char 
 12035 ;; Registers used:
 12036 ;;		wreg, status,2, status,0
 12037 ;; Tracked objects:
 12038 ;;		On entry : 0/0
 12039 ;;		On exit  : 0/0
 12040 ;;		Unchanged: 0/0
 12041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12043 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12044 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12045 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12046 ;;Total ram usage:        2 bytes
 12047 ;; Hardware stack levels used:    1
 12048 ;; Hardware stack levels required when called:    6
 12049 ;; This function calls:
 12050 ;;		Nothing
 12051 ;; This function is called by:
 12052 ;;		_tsttc
 12053 ;; This function uses a non-reentrant model
 12054 ;;
 12055                           
 12056                           
 12057                           ;psect for function _WriteI2C
 12058  06DC                     _WriteI2C:	
 12059                           
 12060                           ;incstack = 0
 12061                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 12062                           ;WriteI2C@data_out stored from wreg
 12063  06DC  0020               	movlb	0	; select bank0
 12064  06DD  00A4               	movwf	WriteI2C@data_out
 12065  06DE                     l7056:	
 12066                           
 12067                           ;I2C/i2c.c: 88: signed char WriteI2C( unsigned char data_out );I2C/i2c.c: 89: {;I2C/i2c.
      +                          c: 90:   SSP1BUF = data_out;
 12068  06DE  0824               	movf	WriteI2C@data_out,w
 12069  06DF  0023               	movlb	3	; select bank3
 12070  06E0  008C               	movwf	12	;volatile
 12071  06E1                     l7058:	
 12072                           
 12073                           ;I2C/i2c.c: 91:   if ( SSP1CON1bits.WCOL )
 12074  06E1  1F90               	btfss	16,7	;volatile
 12075  06E2  2EE4               	goto	u4241
 12076  06E3  2EE5               	goto	u4240
 12077  06E4                     u4241:	
 12078  06E4  2EE6               	goto	l7064
 12079  06E5                     u4240:	
 12080  06E5  2F35               	goto	l1550
 12081  06E6                     l7064:	
 12082                           
 12083                           ;I2C/i2c.c: 94:   {;I2C/i2c.c: 95:  if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)!=0x0
      +                          B) )
 12084  06E6  300F               	movlw	15
 12085  06E7  0510               	andwf	16,w	;volatile
 12086  06E8  0020               	movlb	0	; select bank0
 12087  06E9  00A3               	movwf	??_WriteI2C
 12088  06EA  3008               	movlw	8
 12089  06EB  0623               	xorwf	??_WriteI2C,w
 12090  06EC  1903               	btfsc	3,2
 12091  06ED  2EEF               	goto	u4251
 12092  06EE  2EF0               	goto	u4250
 12093  06EF                     u4251:	
 12094  06EF  2F09               	goto	l7076
 12095  06F0                     u4250:	
 12096  06F0                     l7066:	
 12097  06F0  300F               	movlw	15
 12098  06F1  0023               	movlb	3	; select bank3
 12099  06F2  0510               	andwf	16,w	;volatile
 12100  06F3  0020               	movlb	0	; select bank0
 12101  06F4  00A3               	movwf	??_WriteI2C
 12102  06F5  300B               	movlw	11
 12103  06F6  0623               	xorwf	??_WriteI2C,w
 12104  06F7  1903               	btfsc	3,2
 12105  06F8  2EFA               	goto	u4261
 12106  06F9  2EFB               	goto	u4260
 12107  06FA                     u4261:	
 12108  06FA  2F09               	goto	l7076
 12109  06FB                     u4260:	
 12110  06FB                     l7068:	
 12111                           
 12112                           ;I2C/i2c.c: 96:  {;I2C/i2c.c: 97:        SSP1CON1bits.CKP = 1;
 12113  06FB  0023               	movlb	3	; select bank3
 12114  06FC  1610               	bsf	16,4	;volatile
 12115  06FD                     l1553:	
 12116                           ;I2C/i2c.c: 98:        while ( !PIR3bits.SSP1IF );
 12117                           
 12118  06FD  002E               	movlb	14	; select bank14
 12119  06FE  1C0F               	btfss	15,0	;volatile
 12120  06FF  2F01               	goto	u4271
 12121  0700  2F02               	goto	u4270
 12122  0701                     u4271:	
 12123  0701  2EFD               	goto	l1553
 12124  0702                     u4270:	
 12125  0702                     l1555:	
 12126                           
 12127                           ;I2C/i2c.c: 100:        if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 12128  0702  0023               	movlb	3	; select bank3
 12129  0703  190F               	btfsc	15,2	;volatile
 12130  0704  2F06               	goto	u4281
 12131  0705  2F07               	goto	u4280
 12132  0706                     u4281:	
 12133  0706  2F35               	goto	l1550
 12134  0707                     u4280:	
 12135  0707                     l7070:	
 12136  0707  080F               	movf	15,w	;volatile
 12137  0708  2F35               	goto	l1550
 12138  0709                     l7076:	
 12139  0709  300F               	movlw	15
 12140  070A  0023               	movlb	3	; select bank3
 12141  070B  0510               	andwf	16,w	;volatile
 12142  070C  0020               	movlb	0	; select bank0
 12143  070D  00A3               	movwf	??_WriteI2C
 12144  070E  3008               	movlw	8
 12145  070F  0623               	xorwf	??_WriteI2C,w
 12146  0710  1903               	btfsc	3,2
 12147  0711  2F13               	goto	u4291
 12148  0712  2F14               	goto	u4290
 12149  0713                     u4291:	
 12150  0713  2F1F               	goto	l1562
 12151  0714                     u4290:	
 12152  0714                     l7078:	
 12153  0714  300F               	movlw	15
 12154  0715  0023               	movlb	3	; select bank3
 12155  0716  0510               	andwf	16,w	;volatile
 12156  0717  0020               	movlb	0	; select bank0
 12157  0718  00A3               	movwf	??_WriteI2C
 12158  0719  300B               	movlw	11
 12159  071A  0623               	xorwf	??_WriteI2C,w
 12160  071B  1D03               	btfss	3,2
 12161  071C  2F1E               	goto	u4301
 12162  071D  2F1F               	goto	u4300
 12163  071E                     u4301:	
 12164  071E  2F35               	goto	l1550
 12165  071F                     u4300:	
 12166  071F                     l1562:	
 12167  071F  0023               	movlb	3	; select bank3
 12168  0720  180F               	btfsc	15,0	;volatile
 12169  0721  2F23               	goto	u4311
 12170  0722  2F24               	goto	u4310
 12171  0723                     u4311:	
 12172  0723  2F1F               	goto	l1562
 12173  0724                     u4310:	
 12174  0724                     l7080:	
 12175  0724  0023               	movlb	3	; select bank3
 12176  0725  0C0F               	rrf	15,w	;volatile
 12177  0726  0C89               	rrf	9,f
 12178  0727  3901               	andlw	1
 12179  0728  0020               	movlb	0	; select bank0
 12180  0729  00A3               	movwf	??_WriteI2C
 12181  072A  0023               	movlb	3	; select bank3
 12182  072B  0811               	movf	17,w	;volatile
 12183  072C  391F               	andlw	31
 12184  072D  0020               	movlb	0	; select bank0
 12185  072E  0423               	iorwf	??_WriteI2C,w
 12186  072F  1D03               	btfss	3,2
 12187  0730  2F32               	goto	u4321
 12188  0731  2F33               	goto	u4320
 12189  0732                     u4321:	
 12190  0732  2F24               	goto	l7080
 12191  0733                     u4320:	
 12192  0733                     l1567:	
 12193                           
 12194                           ;I2C/i2c.c: 113:      if ( SSP1CON2bits.ACKSTAT )
 12195  0733  0023               	movlb	3	; select bank3
 12196  0734  0811               	movf	17,w	;volatile
 12197  0735                     l1550:	
 12198  0735  0008               	return
 12199  0736                     __end_of_WriteI2C:	
 12200                           
 12201                           	psect	text3
 12202  0AD2                     __ptext3:	
 12203 ;; *************** function _ReadI2C *****************
 12204 ;; Defined at:
 12205 ;;		line 73 in file "I2C/i2c.c"
 12206 ;; Parameters:    Size  Location     Type
 12207 ;;		None
 12208 ;; Auto vars:     Size  Location     Type
 12209 ;;		None
 12210 ;; Return value:  Size  Location     Type
 12211 ;;                  1    wreg      unsigned char 
 12212 ;; Registers used:
 12213 ;;		wreg, status,2, status,0
 12214 ;; Tracked objects:
 12215 ;;		On entry : 0/0
 12216 ;;		On exit  : 0/0
 12217 ;;		Unchanged: 0/0
 12218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12221 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12222 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12223 ;;Total ram usage:        1 bytes
 12224 ;; Hardware stack levels used:    1
 12225 ;; Hardware stack levels required when called:    6
 12226 ;; This function calls:
 12227 ;;		Nothing
 12228 ;; This function is called by:
 12229 ;;		_tsttc
 12230 ;; This function uses a non-reentrant model
 12231 ;;
 12232                           
 12233                           
 12234                           ;psect for function _ReadI2C
 12235  0AD2                     _ReadI2C:	
 12236  0AD2                     l7086:	
 12237                           ;incstack = 0
 12238                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 12239                           
 12240                           
 12241                           ;I2C/i2c.c: 75: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 12242  0AD2  300F               	movlw	15
 12243  0AD3  0023               	movlb	3	; select bank3
 12244  0AD4  0510               	andwf	16,w	;volatile
 12245  0AD5  0020               	movlb	0	; select bank0
 12246  0AD6  00A3               	movwf	??_ReadI2C
 12247  0AD7  3008               	movlw	8
 12248  0AD8  0623               	xorwf	??_ReadI2C,w
 12249  0AD9  1903               	btfsc	3,2
 12250  0ADA  2ADC               	goto	u4331
 12251  0ADB  2ADD               	goto	u4330
 12252  0ADC                     u4331:	
 12253  0ADC  2AE8               	goto	l1542
 12254  0ADD                     u4330:	
 12255  0ADD                     l7088:	
 12256  0ADD  300F               	movlw	15
 12257  0ADE  0023               	movlb	3	; select bank3
 12258  0ADF  0510               	andwf	16,w	;volatile
 12259  0AE0  0020               	movlb	0	; select bank0
 12260  0AE1  00A3               	movwf	??_ReadI2C
 12261  0AE2  300B               	movlw	11
 12262  0AE3  0623               	xorwf	??_ReadI2C,w
 12263  0AE4  1D03               	btfss	3,2
 12264  0AE5  2AE7               	goto	u4341
 12265  0AE6  2AE8               	goto	u4340
 12266  0AE7                     u4341:	
 12267  0AE7  2AEA               	goto	l1543
 12268  0AE8                     u4340:	
 12269  0AE8                     l1542:	
 12270                           
 12271                           ;I2C/i2c.c: 76:   SSP1CON2bits.RCEN = 1;
 12272  0AE8  0023               	movlb	3	; select bank3
 12273  0AE9  1591               	bsf	17,3	;volatile
 12274  0AEA                     l1543:	
 12275  0AEA  0023               	movlb	3	; select bank3
 12276  0AEB  1C0F               	btfss	15,0	;volatile
 12277  0AEC  2AEE               	goto	u4351
 12278  0AED  2AEF               	goto	u4350
 12279  0AEE                     u4351:	
 12280  0AEE  2AEA               	goto	l1543
 12281  0AEF                     u4350:	
 12282  0AEF                     l7090:	
 12283                           
 12284                           ;I2C/i2c.c: 78:   return ( SSP1BUF );
 12285  0AEF  080C               	movf	12,w	;volatile
 12286  0AF0                     l1546:	
 12287  0AF0  0008               	return
 12288  0AF1                     __end_of_ReadI2C:	
 12289                           
 12290                           	psect	text4
 12291  0BEA                     __ptext4:	
 12292 ;; *************** function _save_recovery_params *****************
 12293 ;; Defined at:
 12294 ;;		line 641 in file "main.c"
 12295 ;; Parameters:    Size  Location     Type
 12296 ;;		None
 12297 ;; Auto vars:     Size  Location     Type
 12298 ;;  aux1            1   16[BANK0 ] unsigned char 
 12299 ;;  aux             1   15[BANK0 ] unsigned char 
 12300 ;; Return value:  Size  Location     Type
 12301 ;;                  1    wreg      void 
 12302 ;; Registers used:
 12303 ;;		wreg, status,2, status,0, pclath, cstack
 12304 ;; Tracked objects:
 12305 ;;		On entry : 0/0
 12306 ;;		On exit  : 0/0
 12307 ;;		Unchanged: 0/0
 12308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12310 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12311 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12312 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12313 ;;Total ram usage:        3 bytes
 12314 ;; Hardware stack levels used:    1
 12315 ;; Hardware stack levels required when called:    9
 12316 ;; This function calls:
 12317 ;;		_DATAEE_WriteByte
 12318 ;;		_cksum_w
 12319 ;; This function is called by:
 12320 ;;		_main
 12321 ;; This function uses a non-reentrant model
 12322 ;;
 12323                           
 12324                           
 12325                           ;psect for function _save_recovery_params
 12326  0BEA                     _save_recovery_params:	
 12327  0BEA                     l7364:	
 12328                           ;incstack = 0
 12329                           ; Regs used in _save_recovery_params: [wreg+status,2+status,0+pclath+cstack]
 12330                           
 12331                           
 12332                           ;main.c: 643:     unsigned char aux, aux1;;main.c: 644:     PIE4bits.TMR1IE = 0;
 12333  0BEA  002E               	movlb	14	; select bank14
 12334  0BEB  101A               	bcf	26,0	;volatile
 12335  0BEC                     l7366:	
 12336                           
 12337                           ;main.c: 645:     last1m = 0;
 12338  0BEC  0020               	movlb	0	; select bank0
 12339  0BED  01D6               	clrf	_last1m	;volatile
 12340  0BEE                     l7368:	
 12341                           
 12342                           ;main.c: 646:     aux = clkh;
 12343  0BEE  085C               	movf	_clkh,w	;volatile
 12344  0BEF  00AE               	movwf	??_save_recovery_params
 12345  0BF0  082E               	movf	??_save_recovery_params,w
 12346  0BF1  00AF               	movwf	save_recovery_params@aux
 12347  0BF2                     l7370:	
 12348                           
 12349                           ;main.c: 647:     aux1 = clkm;
 12350  0BF2  085B               	movf	_clkm,w	;volatile
 12351  0BF3  00AE               	movwf	??_save_recovery_params
 12352  0BF4  082E               	movf	??_save_recovery_params,w
 12353  0BF5  00B0               	movwf	save_recovery_params@aux1
 12354  0BF6                     l7372:	
 12355                           
 12356                           ;main.c: 648:     PIE4bits.TMR1IE = 1;
 12357  0BF6  002E               	movlb	14	; select bank14
 12358  0BF7  141A               	bsf	26,0	;volatile
 12359  0BF8                     l7374:	
 12360                           
 12361                           ;main.c: 649:     DATAEE_WriteByte(0xF0FF - 10 + 1, aux);
 12362  0BF8  30F6               	movlw	246
 12363  0BF9  0020               	movlb	0	; select bank0
 12364  0BFA  00A9               	movwf	DATAEE_WriteByte@bAdd
 12365  0BFB  30F0               	movlw	240
 12366  0BFC  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 12367  0BFD  082F               	movf	save_recovery_params@aux,w
 12368  0BFE  00AE               	movwf	??_save_recovery_params
 12369  0BFF  082E               	movf	??_save_recovery_params,w
 12370  0C00  00AB               	movwf	DATAEE_WriteByte@bData
 12371  0C01  318B  2351  318B   	fcall	_DATAEE_WriteByte
 12372  0C04                     l7376:	
 12373                           
 12374                           ;main.c: 650:     DATAEE_WriteByte(0xF0FF - 10 + 2, aux1);
 12375  0C04  30F7               	movlw	247
 12376  0C05  0020               	movlb	0	; select bank0
 12377  0C06  00A9               	movwf	DATAEE_WriteByte@bAdd
 12378  0C07  30F0               	movlw	240
 12379  0C08  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 12380  0C09  0830               	movf	save_recovery_params@aux1,w
 12381  0C0A  00AE               	movwf	??_save_recovery_params
 12382  0C0B  082E               	movf	??_save_recovery_params,w
 12383  0C0C  00AB               	movwf	DATAEE_WriteByte@bData
 12384  0C0D  318B  2351  318B   	fcall	_DATAEE_WriteByte
 12385  0C10                     l7378:	
 12386                           
 12387                           ;main.c: 651:     cksum_w();
 12388  0C10  3188  20F2  318B   	fcall	_cksum_w
 12389  0C13                     l1421:	
 12390  0C13  0008               	return
 12391  0C14                     __end_of_save_recovery_params:	
 12392                           
 12393                           	psect	text5
 12394  0C6D                     __ptext5:	
 12395 ;; *************** function _ring_buffer *****************
 12396 ;; Defined at:
 12397 ;;		line 656 in file "main.c"
 12398 ;; Parameters:    Size  Location     Type
 12399 ;;  _ring_byte      1    wreg     PTR unsigned char 
 12400 ;;		 -> ring_byte(5), 
 12401 ;;  clock_h         1    3[BANK0 ] unsigned char 
 12402 ;;  clock_m         1    4[BANK0 ] unsigned char 
 12403 ;;  clock_s         1    5[BANK0 ] unsigned char 
 12404 ;;  tem             1    6[BANK0 ] unsigned char 
 12405 ;;  lum             1    7[BANK0 ] unsigned char 
 12406 ;; Auto vars:     Size  Location     Type
 12407 ;;  _ring_byte      1    9[BANK0 ] PTR unsigned char 
 12408 ;;		 -> ring_byte(5), 
 12409 ;; Return value:  Size  Location     Type
 12410 ;;                  1    wreg      void 
 12411 ;; Registers used:
 12412 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12413 ;; Tracked objects:
 12414 ;;		On entry : 0/0
 12415 ;;		On exit  : 0/0
 12416 ;;		Unchanged: 0/0
 12417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12418 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12419 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12420 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12421 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12422 ;;Total ram usage:        7 bytes
 12423 ;; Hardware stack levels used:    1
 12424 ;; Hardware stack levels required when called:    6
 12425 ;; This function calls:
 12426 ;;		Nothing
 12427 ;; This function is called by:
 12428 ;;		_main
 12429 ;; This function uses a non-reentrant model
 12430 ;;
 12431                           
 12432                           
 12433                           ;psect for function _ring_buffer
 12434  0C6D                     _ring_buffer:	
 12435                           
 12436                           ;incstack = 0
 12437                           ; Regs used in _ring_buffer: [wreg+fsr1l+fsr1h+status,2+status,0]
 12438                           ;ring_buffer@_ring_byte stored from wreg
 12439  0C6D  0020               	movlb	0	; select bank0
 12440  0C6E  00A9               	movwf	ring_buffer@_ring_byte
 12441  0C6F                     l7280:	
 12442                           
 12443                           ;main.c: 658:     PIE4bits.TMR1IE = 0;
 12444  0C6F  002E               	movlb	14	; select bank14
 12445  0C70  101A               	bcf	26,0	;volatile
 12446  0C71                     l7282:	
 12447                           
 12448                           ;main.c: 659:     _ring_byte[0] = clock_h;
 12449  0C71  0020               	movlb	0	; select bank0
 12450  0C72  0823               	movf	ring_buffer@clock_h,w
 12451  0C73  00A8               	movwf	??_ring_buffer
 12452  0C74  0829               	movf	ring_buffer@_ring_byte,w
 12453  0C75  0086               	movwf	6
 12454  0C76  0187               	clrf	7
 12455  0C77  0828               	movf	??_ring_buffer,w
 12456  0C78  0081               	movwf	1
 12457                           
 12458                           ;main.c: 660:     _ring_byte[1] = clock_m;
 12459  0C79  0824               	movf	ring_buffer@clock_m,w
 12460  0C7A  00A8               	movwf	??_ring_buffer
 12461  0C7B  0A29               	incf	ring_buffer@_ring_byte,w
 12462  0C7C  0086               	movwf	6
 12463  0C7D  0187               	clrf	7
 12464  0C7E  0828               	movf	??_ring_buffer,w
 12465  0C7F  0081               	movwf	1
 12466  0C80                     l7284:	
 12467                           
 12468                           ;main.c: 661:     _ring_byte[2] = clock_s;
 12469  0C80  0825               	movf	ring_buffer@clock_s,w
 12470  0C81  00A8               	movwf	??_ring_buffer
 12471  0C82  0829               	movf	ring_buffer@_ring_byte,w
 12472  0C83  3E02               	addlw	2
 12473  0C84  0086               	movwf	6
 12474  0C85  0187               	clrf	7
 12475  0C86  0828               	movf	??_ring_buffer,w
 12476  0C87  0081               	movwf	1
 12477  0C88                     l7286:	
 12478                           
 12479                           ;main.c: 662:     PIE4bits.TMR1IE = 1;
 12480  0C88  002E               	movlb	14	; select bank14
 12481  0C89  141A               	bsf	26,0	;volatile
 12482  0C8A                     l7288:	
 12483                           
 12484                           ;main.c: 663:     _ring_byte[3] = tem;
 12485  0C8A  0020               	movlb	0	; select bank0
 12486  0C8B  0826               	movf	ring_buffer@tem,w
 12487  0C8C  00A8               	movwf	??_ring_buffer
 12488  0C8D  0829               	movf	ring_buffer@_ring_byte,w
 12489  0C8E  3E03               	addlw	3
 12490  0C8F  0086               	movwf	6
 12491  0C90  0187               	clrf	7
 12492  0C91  0828               	movf	??_ring_buffer,w
 12493  0C92  0081               	movwf	1
 12494  0C93                     l7290:	
 12495                           
 12496                           ;main.c: 664:     _ring_byte[4] = lum;
 12497  0C93  0827               	movf	ring_buffer@lum,w
 12498  0C94  00A8               	movwf	??_ring_buffer
 12499  0C95  0829               	movf	ring_buffer@_ring_byte,w
 12500  0C96  3E04               	addlw	4
 12501  0C97  0086               	movwf	6
 12502  0C98  0187               	clrf	7
 12503  0C99  0828               	movf	??_ring_buffer,w
 12504  0C9A  0081               	movwf	1
 12505  0C9B                     l1424:	
 12506  0C9B  0008               	return
 12507  0C9C                     __end_of_ring_buffer:	
 12508                           
 12509                           	psect	text6
 12510  04D9                     __ptext6:	
 12511 ;; *************** function _recoverData *****************
 12512 ;; Defined at:
 12513 ;;		line 13 in file "eeprom_rw.c"
 12514 ;; Parameters:    Size  Location     Type
 12515 ;;		None
 12516 ;; Auto vars:     Size  Location     Type
 12517 ;;		None
 12518 ;; Return value:  Size  Location     Type
 12519 ;;                  1    wreg      void 
 12520 ;; Registers used:
 12521 ;;		wreg, status,2, status,0, pclath, cstack
 12522 ;; Tracked objects:
 12523 ;;		On entry : 0/0
 12524 ;;		On exit  : 0/0
 12525 ;;		Unchanged: 0/0
 12526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12529 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12530 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12531 ;;Total ram usage:        1 bytes
 12532 ;; Hardware stack levels used:    1
 12533 ;; Hardware stack levels required when called:    9
 12534 ;; This function calls:
 12535 ;;		_DATAEE_ReadByte
 12536 ;;		_DATAEE_WriteByte
 12537 ;;		_cksum
 12538 ;;		_cksum_w
 12539 ;;		_reset_recv
 12540 ;; This function is called by:
 12541 ;;		_main
 12542 ;; This function uses a non-reentrant model
 12543 ;;
 12544                           
 12545                           
 12546                           ;psect for function _recoverData
 12547  04D9                     _recoverData:	
 12548  04D9                     l7172:	
 12549                           ;incstack = 0
 12550                           ; Regs used in _recoverData: [wreg+status,2+status,0+pclath+cstack]
 12551                           
 12552                           
 12553                           ;eeprom_rw.c: 15:     if(DATAEE_ReadByte(0xF0FF - 10) == 0xAB){
 12554  04D9  30F5               	movlw	245
 12555  04DA  0020               	movlb	0	; select bank0
 12556  04DB  00A3               	movwf	DATAEE_ReadByte@bAdd
 12557  04DC  30F0               	movlw	240
 12558  04DD  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 12559  04DE  3188  20D3  3184   	fcall	_DATAEE_ReadByte
 12560  04E1  3AAB               	xorlw	171
 12561  04E2  1D03               	skipz
 12562  04E3  2CE5               	goto	u4391
 12563  04E4  2CE6               	goto	u4390
 12564  04E5                     u4391:	
 12565  04E5  2D50               	goto	l7178
 12566  04E6                     u4390:	
 12567  04E6                     l7174:	
 12568                           
 12569                           ;eeprom_rw.c: 16:         if(DATAEE_ReadByte(0xF0FF) == cksum()){
 12570  04E6  318B  2331  3184   	fcall	_cksum
 12571  04E9  0020               	movlb	0	; select bank0
 12572  04EA  00AF               	movwf	??_recoverData
 12573  04EB  30FF               	movlw	255
 12574  04EC  00A3               	movwf	DATAEE_ReadByte@bAdd
 12575  04ED  30F0               	movlw	240
 12576  04EE  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 12577  04EF  3188  20D3  3184   	fcall	_DATAEE_ReadByte
 12578  04F2  0020               	movlb	0	; select bank0
 12579  04F3  062F               	xorwf	??_recoverData,w
 12580  04F4  1D03               	skipz
 12581  04F5  2CF7               	goto	u4401
 12582  04F6  2CF8               	goto	u4400
 12583  04F7                     u4401:	
 12584  04F7  2D50               	goto	l7178
 12585  04F8                     u4400:	
 12586  04F8                     l7176:	
 12587                           
 12588                           ;eeprom_rw.c: 17:             clkh = DATAEE_ReadByte(0xF0FF - 10 + 1);
 12589  04F8  30F6               	movlw	246
 12590  04F9  00A3               	movwf	DATAEE_ReadByte@bAdd
 12591  04FA  30F0               	movlw	240
 12592  04FB  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 12593  04FC  3188  20D3  3184   	fcall	_DATAEE_ReadByte
 12594  04FF  0020               	movlb	0	; select bank0
 12595  0500  00AF               	movwf	??_recoverData
 12596  0501  082F               	movf	??_recoverData,w
 12597  0502  00DC               	movwf	_clkh	;volatile
 12598                           
 12599                           ;eeprom_rw.c: 18:             clkm = DATAEE_ReadByte(0xF0FF - 10 + 2);
 12600  0503  30F7               	movlw	247
 12601  0504  00A3               	movwf	DATAEE_ReadByte@bAdd
 12602  0505  30F0               	movlw	240
 12603  0506  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 12604  0507  3188  20D3  3184   	fcall	_DATAEE_ReadByte
 12605  050A  0020               	movlb	0	; select bank0
 12606  050B  00AF               	movwf	??_recoverData
 12607  050C  082F               	movf	??_recoverData,w
 12608  050D  00DB               	movwf	_clkm	;volatile
 12609                           
 12610                           ;eeprom_rw.c: 19:             nreg = DATAEE_ReadByte(0xF0FF - 10 + 3);
 12611  050E  30F8               	movlw	248
 12612  050F  00A3               	movwf	DATAEE_ReadByte@bAdd
 12613  0510  30F0               	movlw	240
 12614  0511  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 12615  0512  3188  20D3  3184   	fcall	_DATAEE_ReadByte
 12616  0515  0020               	movlb	0	; select bank0
 12617  0516  00AF               	movwf	??_recoverData
 12618  0517  082F               	movf	??_recoverData,w
 12619  0518  00E7               	movwf	_nreg
 12620                           
 12621                           ;eeprom_rw.c: 20:             nreg_pt = DATAEE_ReadByte(0xF0FF - 10 + 4);
 12622  0519  30F9               	movlw	249
 12623  051A  00A3               	movwf	DATAEE_ReadByte@bAdd
 12624  051B  30F0               	movlw	240
 12625  051C  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 12626  051D  3188  20D3  3184   	fcall	_DATAEE_ReadByte
 12627  0520  0020               	movlb	0	; select bank0
 12628  0521  00AF               	movwf	??_recoverData
 12629  0522  082F               	movf	??_recoverData,w
 12630  0523  00DD               	movwf	_nreg_pt
 12631                           
 12632                           ;eeprom_rw.c: 21:             temp_thresh = DATAEE_ReadByte(0xF0FF - 10 + 5);
 12633  0524  30FA               	movlw	250
 12634  0525  00A3               	movwf	DATAEE_ReadByte@bAdd
 12635  0526  30F0               	movlw	240
 12636  0527  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 12637  0528  3188  20D3  3184   	fcall	_DATAEE_ReadByte
 12638  052B  0020               	movlb	0	; select bank0
 12639  052C  00AF               	movwf	??_recoverData
 12640  052D  082F               	movf	??_recoverData,w
 12641  052E  00E4               	movwf	_temp_thresh
 12642                           
 12643                           ;eeprom_rw.c: 22:             lum_thresh = DATAEE_ReadByte(0xF0FF - 10 + 6);
 12644  052F  30FB               	movlw	251
 12645  0530  00A3               	movwf	DATAEE_ReadByte@bAdd
 12646  0531  30F0               	movlw	240
 12647  0532  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 12648  0533  3188  20D3  3184   	fcall	_DATAEE_ReadByte
 12649  0536  0020               	movlb	0	; select bank0
 12650  0537  00AF               	movwf	??_recoverData
 12651  0538  082F               	movf	??_recoverData,w
 12652  0539  00E3               	movwf	_lum_thresh
 12653                           
 12654                           ;eeprom_rw.c: 23:             pmon = DATAEE_ReadByte(0xF0FF - 10 + 7);
 12655  053A  30FC               	movlw	252
 12656  053B  00A3               	movwf	DATAEE_ReadByte@bAdd
 12657  053C  30F0               	movlw	240
 12658  053D  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 12659  053E  3188  20D3  3184   	fcall	_DATAEE_ReadByte
 12660  0541  0020               	movlb	0	; select bank0
 12661  0542  00AF               	movwf	??_recoverData
 12662  0543  082F               	movf	??_recoverData,w
 12663  0544  00E6               	movwf	_pmon
 12664                           
 12665                           ;eeprom_rw.c: 24:             tala = DATAEE_ReadByte(0xF0FF - 10 + 8);
 12666  0545  30FD               	movlw	253
 12667  0546  00A3               	movwf	DATAEE_ReadByte@bAdd
 12668  0547  30F0               	movlw	240
 12669  0548  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 12670  0549  3188  20D3  3184   	fcall	_DATAEE_ReadByte
 12671  054C  0020               	movlb	0	; select bank0
 12672  054D  00AF               	movwf	??_recoverData
 12673  054E  082F               	movf	??_recoverData,w
 12674  054F  00E5               	movwf	_tala
 12675  0550                     l7178:	
 12676                           
 12677                           ;eeprom_rw.c: 28:     reset_recv();
 12678  0550  318A  2297  3184   	fcall	_reset_recv
 12679  0553                     l7180:	
 12680                           
 12681                           ;eeprom_rw.c: 31:     DATAEE_WriteByte(0xF0FF - 10, 0xAB);
 12682  0553  30F5               	movlw	245
 12683  0554  0020               	movlb	0	; select bank0
 12684  0555  00A9               	movwf	DATAEE_WriteByte@bAdd
 12685  0556  30F0               	movlw	240
 12686  0557  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 12687  0558  30AB               	movlw	171
 12688  0559  00AF               	movwf	??_recoverData
 12689  055A  082F               	movf	??_recoverData,w
 12690  055B  00AB               	movwf	DATAEE_WriteByte@bData
 12691  055C  318B  2351  3184   	fcall	_DATAEE_WriteByte
 12692  055F                     l7182:	
 12693                           
 12694                           ;eeprom_rw.c: 32:     DATAEE_WriteByte(0xF0FF - 10 + 3, nreg);
 12695  055F  30F8               	movlw	248
 12696  0560  0020               	movlb	0	; select bank0
 12697  0561  00A9               	movwf	DATAEE_WriteByte@bAdd
 12698  0562  30F0               	movlw	240
 12699  0563  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 12700  0564  0867               	movf	_nreg,w
 12701  0565  00AF               	movwf	??_recoverData
 12702  0566  082F               	movf	??_recoverData,w
 12703  0567  00AB               	movwf	DATAEE_WriteByte@bData
 12704  0568  318B  2351  3184   	fcall	_DATAEE_WriteByte
 12705  056B                     l7184:	
 12706                           
 12707                           ;eeprom_rw.c: 33:     DATAEE_WriteByte(0xF0FF - 10 + 5, temp_thresh);
 12708  056B  30FA               	movlw	250
 12709  056C  0020               	movlb	0	; select bank0
 12710  056D  00A9               	movwf	DATAEE_WriteByte@bAdd
 12711  056E  30F0               	movlw	240
 12712  056F  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 12713  0570  0864               	movf	_temp_thresh,w
 12714  0571  00AF               	movwf	??_recoverData
 12715  0572  082F               	movf	??_recoverData,w
 12716  0573  00AB               	movwf	DATAEE_WriteByte@bData
 12717  0574  318B  2351  3184   	fcall	_DATAEE_WriteByte
 12718  0577                     l7186:	
 12719                           
 12720                           ;eeprom_rw.c: 34:     DATAEE_WriteByte(0xF0FF - 10 + 6, lum_thresh);
 12721  0577  30FB               	movlw	251
 12722  0578  0020               	movlb	0	; select bank0
 12723  0579  00A9               	movwf	DATAEE_WriteByte@bAdd
 12724  057A  30F0               	movlw	240
 12725  057B  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 12726  057C  0863               	movf	_lum_thresh,w
 12727  057D  00AF               	movwf	??_recoverData
 12728  057E  082F               	movf	??_recoverData,w
 12729  057F  00AB               	movwf	DATAEE_WriteByte@bData
 12730  0580  318B  2351  3184   	fcall	_DATAEE_WriteByte
 12731  0583                     l7188:	
 12732                           
 12733                           ;eeprom_rw.c: 35:     DATAEE_WriteByte(0xF0FF - 10 + 7, pmon);
 12734  0583  30FC               	movlw	252
 12735  0584  0020               	movlb	0	; select bank0
 12736  0585  00A9               	movwf	DATAEE_WriteByte@bAdd
 12737  0586  30F0               	movlw	240
 12738  0587  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 12739  0588  0866               	movf	_pmon,w
 12740  0589  00AF               	movwf	??_recoverData
 12741  058A  082F               	movf	??_recoverData,w
 12742  058B  00AB               	movwf	DATAEE_WriteByte@bData
 12743  058C  318B  2351  3184   	fcall	_DATAEE_WriteByte
 12744  058F                     l7190:	
 12745                           
 12746                           ;eeprom_rw.c: 36:     DATAEE_WriteByte(0xF0FF - 10 + 8, tala);
 12747  058F  30FD               	movlw	253
 12748  0590  0020               	movlb	0	; select bank0
 12749  0591  00A9               	movwf	DATAEE_WriteByte@bAdd
 12750  0592  30F0               	movlw	240
 12751  0593  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 12752  0594  0865               	movf	_tala,w
 12753  0595  00AF               	movwf	??_recoverData
 12754  0596  082F               	movf	??_recoverData,w
 12755  0597  00AB               	movwf	DATAEE_WriteByte@bData
 12756  0598  318B  2351  3184   	fcall	_DATAEE_WriteByte
 12757  059B                     l7192:	
 12758                           
 12759                           ;eeprom_rw.c: 37:     cksum_w();
 12760  059B  3188  20F2  3184   	fcall	_cksum_w
 12761  059E                     l1604:	
 12762  059E  0008               	return
 12763  059F                     __end_of_recoverData:	
 12764                           
 12765                           	psect	text7
 12766  0A97                     __ptext7:	
 12767 ;; *************** function _reset_recv *****************
 12768 ;; Defined at:
 12769 ;;		line 81 in file "eeprom_rw.c"
 12770 ;; Parameters:    Size  Location     Type
 12771 ;;		None
 12772 ;; Auto vars:     Size  Location     Type
 12773 ;;  i               2   13[BANK0 ] unsigned int 
 12774 ;; Return value:  Size  Location     Type
 12775 ;;                  1    wreg      void 
 12776 ;; Registers used:
 12777 ;;		wreg, status,2, status,0, pclath, cstack
 12778 ;; Tracked objects:
 12779 ;;		On entry : 0/0
 12780 ;;		On exit  : 0/0
 12781 ;;		Unchanged: 0/0
 12782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12784 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12786 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12787 ;;Total ram usage:        2 bytes
 12788 ;; Hardware stack levels used:    1
 12789 ;; Hardware stack levels required when called:    7
 12790 ;; This function calls:
 12791 ;;		_DATAEE_WriteByte
 12792 ;; This function is called by:
 12793 ;;		_recoverData
 12794 ;; This function uses a non-reentrant model
 12795 ;;
 12796                           
 12797                           
 12798                           ;psect for function _reset_recv
 12799  0A97                     _reset_recv:	
 12800  0A97                     l7094:	
 12801                           ;incstack = 0
 12802                           ; Regs used in _reset_recv: [wreg+status,2+status,0+pclath+cstack]
 12803                           
 12804                           
 12805                           ;eeprom_rw.c: 83:     for(unsigned int i = 0xF0FF - 10; i <= 0xF0FF; i ++)
 12806  0A97  30F5               	movlw	245
 12807  0A98  0020               	movlb	0	; select bank0
 12808  0A99  00AD               	movwf	reset_recv@i
 12809  0A9A  30F0               	movlw	240
 12810  0A9B  00AE               	movwf	reset_recv@i+1
 12811  0A9C                     l7098:	
 12812                           
 12813                           ;eeprom_rw.c: 84:         DATAEE_WriteByte(i, 0);
 12814  0A9C  082E               	movf	reset_recv@i+1,w
 12815  0A9D  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 12816  0A9E  082D               	movf	reset_recv@i,w
 12817  0A9F  00A9               	movwf	DATAEE_WriteByte@bAdd
 12818  0AA0  01AB               	clrf	DATAEE_WriteByte@bData
 12819  0AA1  318B  2351  318A   	fcall	_DATAEE_WriteByte
 12820  0AA4                     l7100:	
 12821  0AA4  3001               	movlw	1
 12822  0AA5  0020               	movlb	0	; select bank0
 12823  0AA6  07AD               	addwf	reset_recv@i,f
 12824  0AA7  3000               	movlw	0
 12825  0AA8  3DAE               	addwfc	reset_recv@i+1,f
 12826  0AA9                     l7102:	
 12827  0AA9  30F1               	movlw	241
 12828  0AAA  022E               	subwf	reset_recv@i+1,w
 12829  0AAB  3000               	movlw	0
 12830  0AAC  1903               	skipnz
 12831  0AAD  022D               	subwf	reset_recv@i,w
 12832  0AAE  1C03               	skipc
 12833  0AAF  2AB1               	goto	u4361
 12834  0AB0  2AB2               	goto	u4360
 12835  0AB1                     u4361:	
 12836  0AB1  2A9C               	goto	l7098
 12837  0AB2                     u4360:	
 12838  0AB2                     l1631:	
 12839  0AB2  0008               	return
 12840  0AB3                     __end_of_reset_recv:	
 12841                           
 12842                           	psect	text8
 12843  08F2                     __ptext8:	
 12844 ;; *************** function _cksum_w *****************
 12845 ;; Defined at:
 12846 ;;		line 67 in file "eeprom_rw.c"
 12847 ;; Parameters:    Size  Location     Type
 12848 ;;		None
 12849 ;; Auto vars:     Size  Location     Type
 12850 ;;		None
 12851 ;; Return value:  Size  Location     Type
 12852 ;;                  1    wreg      void 
 12853 ;; Registers used:
 12854 ;;		wreg, status,2, status,0, pclath, cstack
 12855 ;; Tracked objects:
 12856 ;;		On entry : 0/0
 12857 ;;		On exit  : 0/0
 12858 ;;		Unchanged: 0/0
 12859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12862 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12863 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12864 ;;Total ram usage:        1 bytes
 12865 ;; Hardware stack levels used:    1
 12866 ;; Hardware stack levels required when called:    8
 12867 ;; This function calls:
 12868 ;;		_DATAEE_WriteByte
 12869 ;;		_cksum
 12870 ;; This function is called by:
 12871 ;;		_main
 12872 ;;		_save_recovery_params
 12873 ;;		_recoverData
 12874 ;; This function uses a non-reentrant model
 12875 ;;
 12876                           
 12877                           
 12878                           ;psect for function _cksum_w
 12879  08F2                     _cksum_w:	
 12880  08F2                     l7016:	
 12881                           ;incstack = 0
 12882                           ; Regs used in _cksum_w: [wreg+status,2+status,0+pclath+cstack]
 12883                           
 12884                           
 12885                           ;eeprom_rw.c: 69:     DATAEE_WriteByte(0xF0FF, cksum());
 12886  08F2  30FF               	movlw	255
 12887  08F3  0020               	movlb	0	; select bank0
 12888  08F4  00A9               	movwf	DATAEE_WriteByte@bAdd
 12889  08F5  30F0               	movlw	240
 12890  08F6  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 12891  08F7  318B  2331  3188   	fcall	_cksum
 12892  08FA  0020               	movlb	0	; select bank0
 12893  08FB  00AD               	movwf	??_cksum_w
 12894  08FC  082D               	movf	??_cksum_w,w
 12895  08FD  00AB               	movwf	DATAEE_WriteByte@bData
 12896  08FE  318B  2351  3188   	fcall	_DATAEE_WriteByte
 12897  0901                     l1621:	
 12898  0901  0008               	return
 12899  0902                     __end_of_cksum_w:	
 12900                           
 12901                           	psect	text9
 12902  0B31                     __ptext9:	
 12903 ;; *************** function _cksum *****************
 12904 ;; Defined at:
 12905 ;;		line 72 in file "eeprom_rw.c"
 12906 ;; Parameters:    Size  Location     Type
 12907 ;;		None
 12908 ;; Auto vars:     Size  Location     Type
 12909 ;;  i               2    7[BANK0 ] unsigned int 
 12910 ;;  res             1    6[BANK0 ] unsigned char 
 12911 ;; Return value:  Size  Location     Type
 12912 ;;                  1    wreg      unsigned char 
 12913 ;; Registers used:
 12914 ;;		wreg, status,2, status,0, pclath, cstack
 12915 ;; Tracked objects:
 12916 ;;		On entry : 0/0
 12917 ;;		On exit  : 0/0
 12918 ;;		Unchanged: 0/0
 12919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12921 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12922 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12923 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12924 ;;Total ram usage:        4 bytes
 12925 ;; Hardware stack levels used:    1
 12926 ;; Hardware stack levels required when called:    7
 12927 ;; This function calls:
 12928 ;;		_DATAEE_ReadByte
 12929 ;; This function is called by:
 12930 ;;		_recoverData
 12931 ;;		_cksum_w
 12932 ;; This function uses a non-reentrant model
 12933 ;;
 12934                           
 12935                           
 12936                           ;psect for function _cksum
 12937  0B31                     _cksum:	
 12938  0B31                     l6860:	
 12939                           ;incstack = 0
 12940                           ; Regs used in _cksum: [wreg+status,2+status,0+pclath+cstack]
 12941                           
 12942                           
 12943                           ;eeprom_rw.c: 74:     unsigned char res = 0;
 12944  0B31  0020               	movlb	0	; select bank0
 12945  0B32  01A6               	clrf	cksum@res
 12946  0B33                     l6862:	
 12947                           
 12948                           ;eeprom_rw.c: 75:     for(unsigned int i = 0xF0FF - 10; i < 0xF0FF; i ++) {
 12949  0B33  30F5               	movlw	245
 12950  0B34  00A7               	movwf	cksum@i
 12951  0B35  30F0               	movlw	240
 12952  0B36  00A8               	movwf	cksum@i+1
 12953  0B37                     l6868:	
 12954                           
 12955                           ;eeprom_rw.c: 76:         res += DATAEE_ReadByte(i);
 12956  0B37  0828               	movf	cksum@i+1,w
 12957  0B38  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 12958  0B39  0827               	movf	cksum@i,w
 12959  0B3A  00A3               	movwf	DATAEE_ReadByte@bAdd
 12960  0B3B  3188  20D3  318B   	fcall	_DATAEE_ReadByte
 12961  0B3E  0020               	movlb	0	; select bank0
 12962  0B3F  00A5               	movwf	??_cksum
 12963  0B40  0825               	movf	??_cksum,w
 12964  0B41  07A6               	addwf	cksum@res,f
 12965  0B42                     l6870:	
 12966                           
 12967                           ;eeprom_rw.c: 77:     }
 12968  0B42  3001               	movlw	1
 12969  0B43  07A7               	addwf	cksum@i,f
 12970  0B44  3000               	movlw	0
 12971  0B45  3DA8               	addwfc	cksum@i+1,f
 12972  0B46                     l6872:	
 12973  0B46  30F0               	movlw	240
 12974  0B47  0228               	subwf	cksum@i+1,w
 12975  0B48  30FF               	movlw	255
 12976  0B49  1903               	skipnz
 12977  0B4A  0227               	subwf	cksum@i,w
 12978  0B4B  1C03               	skipc
 12979  0B4C  2B4E               	goto	u4181
 12980  0B4D  2B4F               	goto	u4180
 12981  0B4E                     u4181:	
 12982  0B4E  2B37               	goto	l6868
 12983  0B4F                     u4180:	
 12984  0B4F                     l6874:	
 12985                           
 12986                           ;eeprom_rw.c: 78:     return res;
 12987  0B4F  0826               	movf	cksum@res,w
 12988  0B50                     l1626:	
 12989  0B50  0008               	return
 12990  0B51                     __end_of_cksum:	
 12991                           
 12992                           	psect	text10
 12993  0D03                     __ptext10:	
 12994 ;; *************** function _read_ring *****************
 12995 ;; Defined at:
 12996 ;;		line 49 in file "eeprom_rw.c"
 12997 ;; Parameters:    Size  Location     Type
 12998 ;;  nreg_pt         1    wreg     unsigned char 
 12999 ;;  nreg            1    7[BANK0 ] unsigned char 
 13000 ;;  nreg_init       1    8[BANK0 ] unsigned char 
 13001 ;;  index           1    9[BANK0 ] unsigned char 
 13002 ;;  subindex        1   10[BANK0 ] unsigned char 
 13003 ;; Auto vars:     Size  Location     Type
 13004 ;;  nreg_pt         1   14[BANK0 ] unsigned char 
 13005 ;;  absindex        1   15[BANK0 ] unsigned char 
 13006 ;;  i               1   13[BANK0 ] unsigned char 
 13007 ;; Return value:  Size  Location     Type
 13008 ;;                  1    wreg      unsigned char 
 13009 ;; Registers used:
 13010 ;;		wreg, status,2, status,0, pclath, cstack
 13011 ;; Tracked objects:
 13012 ;;		On entry : 0/0
 13013 ;;		On exit  : 0/0
 13014 ;;		Unchanged: 0/0
 13015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13016 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13017 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13018 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13019 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13020 ;;Total ram usage:        9 bytes
 13021 ;; Hardware stack levels used:    1
 13022 ;; Hardware stack levels required when called:    7
 13023 ;; This function calls:
 13024 ;;		_DATAEE_ReadByte
 13025 ;;		___bmul
 13026 ;; This function is called by:
 13027 ;;		_main
 13028 ;; This function uses a non-reentrant model
 13029 ;;
 13030                           
 13031                           
 13032                           ;psect for function _read_ring
 13033  0D03                     _read_ring:	
 13034                           
 13035                           ;incstack = 0
 13036                           ; Regs used in _read_ring: [wreg+status,2+status,0+pclath+cstack]
 13037                           ;read_ring@nreg_pt stored from wreg
 13038  0D03  0020               	movlb	0	; select bank0
 13039  0D04  00AE               	movwf	read_ring@nreg_pt
 13040  0D05                     l7258:	
 13041  0D05                     l7260:	
 13042                           
 13043                           ;eeprom_rw.c: 54:     if(index <= nreg && nreg_init) {
 13044  0D05  0829               	movf	read_ring@index,w
 13045  0D06  0227               	subwf	read_ring@nreg,w
 13046  0D07  1C03               	skipc
 13047  0D08  2D0A               	goto	u4671
 13048  0D09  2D0B               	goto	u4670
 13049  0D0A                     u4671:	
 13050  0D0A  2D35               	goto	l7272
 13051  0D0B                     u4670:	
 13052  0D0B                     l7262:	
 13053  0D0B  0828               	movf	read_ring@nreg_init,w
 13054  0D0C  1903               	btfsc	3,2
 13055  0D0D  2D0F               	goto	u4681
 13056  0D0E  2D10               	goto	u4680
 13057  0D0F                     u4681:	
 13058  0D0F  2D35               	goto	l7272
 13059  0D10                     u4680:	
 13060  0D10                     l7264:	
 13061                           
 13062                           ;eeprom_rw.c: 55:         absindex = 5 * index + subindex;
 13063  0D10  3005               	movlw	5
 13064  0D11  00AB               	movwf	??_read_ring
 13065  0D12  082B               	movf	??_read_ring,w
 13066  0D13  00A3               	movwf	___bmul@multiplicand
 13067  0D14  0829               	movf	read_ring@index,w
 13068  0D15  3187  27EA  318D   	fcall	___bmul
 13069  0D18  0020               	movlb	0	; select bank0
 13070  0D19  072A               	addwf	read_ring@subindex,w
 13071  0D1A  00AC               	movwf	??_read_ring+1
 13072  0D1B  082C               	movf	??_read_ring+1,w
 13073  0D1C  00AF               	movwf	read_ring@absindex
 13074  0D1D                     l7266:	
 13075                           
 13076                           ;eeprom_rw.c: 56:         if(absindex <= nreg_pt)
 13077  0D1D  082F               	movf	read_ring@absindex,w
 13078  0D1E  022E               	subwf	read_ring@nreg_pt,w
 13079  0D1F  1C03               	skipc
 13080  0D20  2D22               	goto	u4691
 13081  0D21  2D23               	goto	u4690
 13082  0D22                     u4691:	
 13083  0D22  2D2A               	goto	l7270
 13084  0D23                     u4690:	
 13085  0D23                     l7268:	
 13086                           
 13087                           ;eeprom_rw.c: 57:             i = nreg_pt - 5 + absindex;
 13088  0D23  082E               	movf	read_ring@nreg_pt,w
 13089  0D24  072F               	addwf	read_ring@absindex,w
 13090  0D25  3EFB               	addlw	251
 13091  0D26  00AB               	movwf	??_read_ring
 13092  0D27  082B               	movf	??_read_ring,w
 13093  0D28  00AD               	movwf	read_ring@i
 13094  0D29  2D37               	goto	l7276
 13095  0D2A                     l7270:	
 13096                           
 13097                           ;eeprom_rw.c: 59:             i = nreg - (nreg_pt - 5 + absindex);
 13098  0D2A  032E               	decf	read_ring@nreg_pt,w
 13099  0D2B  3AFF               	xorlw	255
 13100  0D2C  00AB               	movwf	??_read_ring
 13101  0D2D  082F               	movf	read_ring@absindex,w
 13102  0D2E  022B               	subwf	??_read_ring,w
 13103  0D2F  0727               	addwf	read_ring@nreg,w
 13104  0D30  3E05               	addlw	5
 13105  0D31  00AC               	movwf	??_read_ring+1
 13106  0D32  082C               	movf	??_read_ring+1,w
 13107  0D33  00AD               	movwf	read_ring@i
 13108  0D34  2D37               	goto	l7276
 13109  0D35                     l7272:	
 13110                           
 13111                           ;eeprom_rw.c: 62:         return 0;
 13112  0D35  3000               	movlw	0
 13113  0D36  2D41               	goto	l1618
 13114  0D37                     l7276:	
 13115                           
 13116                           ;eeprom_rw.c: 64:     return DATAEE_ReadByte(0xF000 + i);
 13117  0D37  082D               	movf	read_ring@i,w
 13118  0D38  3E00               	addlw	0
 13119  0D39  00A3               	movwf	DATAEE_ReadByte@bAdd
 13120  0D3A  30F0               	movlw	240
 13121  0D3B  1803               	skipnc
 13122  0D3C  30F1               	movlw	241
 13123  0D3D  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 13124  0D3E  3188  20D3  318D   	fcall	_DATAEE_ReadByte
 13125  0D41                     l1618:	
 13126  0D41  0008               	return
 13127  0D42                     __end_of_read_ring:	
 13128                           
 13129                           	psect	text11
 13130  08D3                     __ptext11:	
 13131 ;; *************** function _DATAEE_ReadByte *****************
 13132 ;; Defined at:
 13133 ;;		line 202 in file "mcc_generated_files/memory.c"
 13134 ;; Parameters:    Size  Location     Type
 13135 ;;  bAdd            2    3[BANK0 ] unsigned short 
 13136 ;; Auto vars:     Size  Location     Type
 13137 ;;		None
 13138 ;; Return value:  Size  Location     Type
 13139 ;;                  1    wreg      unsigned char 
 13140 ;; Registers used:
 13141 ;;		wreg, status,2
 13142 ;; Tracked objects:
 13143 ;;		On entry : 0/0
 13144 ;;		On exit  : 0/0
 13145 ;;		Unchanged: 0/0
 13146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13147 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13150 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13151 ;;Total ram usage:        2 bytes
 13152 ;; Hardware stack levels used:    1
 13153 ;; Hardware stack levels required when called:    6
 13154 ;; This function calls:
 13155 ;;		Nothing
 13156 ;; This function is called by:
 13157 ;;		_recoverData
 13158 ;;		_read_ring
 13159 ;;		_cksum
 13160 ;; This function uses a non-reentrant model
 13161 ;;
 13162                           
 13163                           
 13164                           ;psect for function _DATAEE_ReadByte
 13165  08D3                     _DATAEE_ReadByte:	
 13166  08D3                     l6582:	
 13167                           ;incstack = 0
 13168                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 13169                           
 13170                           
 13171                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 13172  08D3  0020               	movlb	0	; select bank0
 13173  08D4  0824               	movf	DATAEE_ReadByte@bAdd+1,w
 13174  08D5  0030               	movlb	16	; select bank16
 13175  08D6  009B               	movwf	27	;volatile
 13176  08D7                     l6584:	
 13177                           
 13178                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 13179  08D7  0020               	movlb	0	; select bank0
 13180  08D8  0823               	movf	DATAEE_ReadByte@bAdd,w
 13181  08D9  0030               	movlb	16	; select bank16
 13182  08DA  009A               	movwf	26	;volatile
 13183  08DB                     l6586:	
 13184                           
 13185                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 13186  08DB  171E               	bsf	30,6	;volsfr
 13187  08DC                     l6588:	
 13188                           
 13189                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 13190  08DC  141E               	bsf	30,0	;volsfr
 13191  08DD                     l6590:	
 13192                           
 13193                           ;mcc_generated_files/memory.c: 208:     __nop();
 13194  08DD  0000               	nop
 13195  08DE                     l6592:	
 13196                           
 13197                           ;mcc_generated_files/memory.c: 209:     __nop();
 13198  08DE  0000               	nop
 13199  08DF                     l6594:	
 13200                           
 13201                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 13202  08DF  0030               	movlb	16	; select bank16
 13203  08E0  081C               	movf	28,w	;volatile
 13204  08E1                     l1011:	
 13205  08E1  0008               	return
 13206  08E2                     __end_of_DATAEE_ReadByte:	
 13207                           
 13208                           	psect	text12
 13209  0D42                     __ptext12:	
 13210 ;; *************** function _push_ring *****************
 13211 ;; Defined at:
 13212 ;;		line 40 in file "eeprom_rw.c"
 13213 ;; Parameters:    Size  Location     Type
 13214 ;;  nreg_pt         1    wreg     PTR unsigned char 
 13215 ;;		 -> nreg_pt(1), 
 13216 ;;  nreg            1   13[BANK0 ] unsigned char 
 13217 ;;  nreg_init       1   14[BANK0 ] PTR unsigned char 
 13218 ;;		 -> nreg_init(1), 
 13219 ;;  ring_byte       1   15[BANK0 ] PTR unsigned char 
 13220 ;;		 -> ring_byte(5), 
 13221 ;; Auto vars:     Size  Location     Type
 13222 ;;  nreg_pt         1   19[BANK0 ] PTR unsigned char 
 13223 ;;		 -> nreg_pt(1), 
 13224 ;;  i               1   18[BANK0 ] unsigned char 
 13225 ;; Return value:  Size  Location     Type
 13226 ;;                  1    wreg      void 
 13227 ;; Registers used:
 13228 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13229 ;; Tracked objects:
 13230 ;;		On entry : 0/0
 13231 ;;		On exit  : 0/0
 13232 ;;		Unchanged: 0/0
 13233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13234 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13235 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13236 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13237 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13238 ;;Total ram usage:        7 bytes
 13239 ;; Hardware stack levels used:    1
 13240 ;; Hardware stack levels required when called:    7
 13241 ;; This function calls:
 13242 ;;		_DATAEE_WriteByte
 13243 ;; This function is called by:
 13244 ;;		_main
 13245 ;; This function uses a non-reentrant model
 13246 ;;
 13247                           
 13248                           
 13249                           ;psect for function _push_ring
 13250  0D42                     _push_ring:	
 13251                           
 13252                           ;incstack = 0
 13253                           ; Regs used in _push_ring: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13254                           ;push_ring@nreg_pt stored from wreg
 13255  0D42  0020               	movlb	0	; select bank0
 13256  0D43  00B3               	movwf	push_ring@nreg_pt
 13257  0D44                     l7292:	
 13258                           
 13259                           ;eeprom_rw.c: 40: void push_ring(unsigned char* nreg_pt, unsigned char nreg, unsigned ch
      +                          ar* nreg_init, unsigned char* ring_byte);eeprom_rw.c: 41: { if(!(*nreg_init)) (*nreg_ini
      +                          t) = 1;
 13260  0D44  082E               	movf	push_ring@nreg_init,w
 13261  0D45  0086               	movwf	6
 13262  0D46  0187               	clrf	7
 13263  0D47  0801               	movf	1,w
 13264  0D48  1D03               	btfss	3,2
 13265  0D49  2D4B               	goto	u4701
 13266  0D4A  2D4C               	goto	u4700
 13267  0D4B                     u4701:	
 13268  0D4B  2D51               	goto	l7296
 13269  0D4C                     u4700:	
 13270  0D4C                     l7294:	
 13271  0D4C  082E               	movf	push_ring@nreg_init,w
 13272  0D4D  0086               	movwf	6
 13273  0D4E  0187               	clrf	7
 13274  0D4F  0181               	clrf	1
 13275  0D50  0A81               	incf	1,f
 13276  0D51                     l7296:	
 13277                           
 13278                           ;eeprom_rw.c: 42:     for(unsigned char i = 0; i < 5; i++) {
 13279  0D51  01B2               	clrf	push_ring@i
 13280  0D52                     l7302:	
 13281                           
 13282                           ;eeprom_rw.c: 43:         if((*nreg_pt) >= nreg) (*nreg_pt) = 0;
 13283  0D52  0833               	movf	push_ring@nreg_pt,w
 13284  0D53  0086               	movwf	6
 13285  0D54  0187               	clrf	7
 13286  0D55  082D               	movf	push_ring@nreg,w
 13287  0D56  0201               	subwf	1,w
 13288  0D57  1C03               	skipc
 13289  0D58  2D5A               	goto	u4711
 13290  0D59  2D5B               	goto	u4710
 13291  0D5A                     u4711:	
 13292  0D5A  2D5F               	goto	l7306
 13293  0D5B                     u4710:	
 13294  0D5B                     l7304:	
 13295  0D5B  0833               	movf	push_ring@nreg_pt,w
 13296  0D5C  0086               	movwf	6
 13297  0D5D  0187               	clrf	7
 13298  0D5E  0181               	clrf	1
 13299  0D5F                     l7306:	
 13300                           
 13301                           ;eeprom_rw.c: 44:         DATAEE_WriteByte(0xF000 + (*nreg_pt), ring_byte[i]);
 13302  0D5F  0833               	movf	push_ring@nreg_pt,w
 13303  0D60  0086               	movwf	6
 13304  0D61  0187               	clrf	7
 13305  0D62  0801               	movf	1,w
 13306  0D63  3E00               	addlw	0
 13307  0D64  00A9               	movwf	DATAEE_WriteByte@bAdd
 13308  0D65  30F0               	movlw	240
 13309  0D66  1803               	skipnc
 13310  0D67  30F1               	movlw	241
 13311  0D68  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 13312  0D69  0832               	movf	push_ring@i,w
 13313  0D6A  072F               	addwf	push_ring@ring_byte,w
 13314  0D6B  00B0               	movwf	??_push_ring
 13315  0D6C  0830               	movf	??_push_ring,w
 13316  0D6D  0086               	movwf	6
 13317  0D6E  0187               	clrf	7
 13318  0D6F  0801               	movf	1,w
 13319  0D70  00B1               	movwf	??_push_ring+1
 13320  0D71  0831               	movf	??_push_ring+1,w
 13321  0D72  00AB               	movwf	DATAEE_WriteByte@bData
 13322  0D73  318B  2351  318D   	fcall	_DATAEE_WriteByte
 13323  0D76                     l7308:	
 13324                           
 13325                           ;eeprom_rw.c: 45:         (*nreg_pt)++;
 13326  0D76  3001               	movlw	1
 13327  0D77  0020               	movlb	0	; select bank0
 13328  0D78  00B0               	movwf	??_push_ring
 13329  0D79  0833               	movf	push_ring@nreg_pt,w
 13330  0D7A  0086               	movwf	6
 13331  0D7B  0187               	clrf	7
 13332  0D7C  0830               	movf	??_push_ring,w
 13333  0D7D  0781               	addwf	1,f
 13334  0D7E                     l7310:	
 13335                           
 13336                           ;eeprom_rw.c: 46:     }
 13337  0D7E  3001               	movlw	1
 13338  0D7F  00B0               	movwf	??_push_ring
 13339  0D80  0830               	movf	??_push_ring,w
 13340  0D81  07B2               	addwf	push_ring@i,f
 13341  0D82                     l7312:	
 13342  0D82  3005               	movlw	5
 13343  0D83  0232               	subwf	push_ring@i,w
 13344  0D84  1C03               	skipc
 13345  0D85  2D87               	goto	u4721
 13346  0D86  2D88               	goto	u4720
 13347  0D87                     u4721:	
 13348  0D87  2D52               	goto	l7302
 13349  0D88                     u4720:	
 13350  0D88                     l1611:	
 13351  0D88  0008               	return
 13352  0D89                     __end_of_push_ring:	
 13353                           
 13354                           	psect	text13
 13355  0B51                     __ptext13:	
 13356 ;; *************** function _DATAEE_WriteByte *****************
 13357 ;; Defined at:
 13358 ;;		line 180 in file "mcc_generated_files/memory.c"
 13359 ;; Parameters:    Size  Location     Type
 13360 ;;  bAdd            2    9[BANK0 ] unsigned short 
 13361 ;;  bData           1   11[BANK0 ] unsigned char 
 13362 ;; Auto vars:     Size  Location     Type
 13363 ;;  GIEBitValue     1   12[BANK0 ] unsigned char 
 13364 ;; Return value:  Size  Location     Type
 13365 ;;                  1    wreg      void 
 13366 ;; Registers used:
 13367 ;;		wreg, status,2, status,0
 13368 ;; Tracked objects:
 13369 ;;		On entry : 0/0
 13370 ;;		On exit  : 0/0
 13371 ;;		Unchanged: 0/0
 13372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13373 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13374 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13376 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13377 ;;Total ram usage:        4 bytes
 13378 ;; Hardware stack levels used:    1
 13379 ;; Hardware stack levels required when called:    6
 13380 ;; This function calls:
 13381 ;;		Nothing
 13382 ;; This function is called by:
 13383 ;;		_main
 13384 ;;		_save_recovery_params
 13385 ;;		_recoverData
 13386 ;;		_push_ring
 13387 ;;		_cksum_w
 13388 ;;		_reset_recv
 13389 ;; This function uses a non-reentrant model
 13390 ;;
 13391                           
 13392                           
 13393                           ;psect for function _DATAEE_WriteByte
 13394  0B51                     _DATAEE_WriteByte:	
 13395  0B51                     l6742:	
 13396                           ;incstack = 0
 13397                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 13398                           
 13399                           
 13400                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 13401  0B51  3000               	movlw	0
 13402  0B52  1B8B               	btfsc	11,7	;volatile
 13403  0B53  3001               	movlw	1
 13404  0B54  0020               	movlb	0	; select bank0
 13405  0B55  00AC               	movwf	DATAEE_WriteByte@GIEBitValue
 13406                           
 13407                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 13408  0B56  082A               	movf	DATAEE_WriteByte@bAdd+1,w
 13409  0B57  0030               	movlb	16	; select bank16
 13410  0B58  009B               	movwf	27	;volatile
 13411  0B59                     l6744:	
 13412                           
 13413                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 13414  0B59  0020               	movlb	0	; select bank0
 13415  0B5A  0829               	movf	DATAEE_WriteByte@bAdd,w
 13416  0B5B  0030               	movlb	16	; select bank16
 13417  0B5C  009A               	movwf	26	;volatile
 13418  0B5D                     l6746:	
 13419                           
 13420                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 13421  0B5D  0020               	movlb	0	; select bank0
 13422  0B5E  082B               	movf	DATAEE_WriteByte@bData,w
 13423  0B5F  0030               	movlb	16	; select bank16
 13424  0B60  009C               	movwf	28	;volatile
 13425  0B61                     l6748:	
 13426                           
 13427                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 13428  0B61  171E               	bsf	30,6	;volsfr
 13429  0B62                     l6750:	
 13430                           
 13431                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 13432  0B62  151E               	bsf	30,2	;volsfr
 13433  0B63                     l6752:	
 13434                           
 13435                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 13436  0B63  138B               	bcf	11,7	;volatile
 13437  0B64                     l6754:	
 13438                           
 13439                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 13440  0B64  3055               	movlw	85
 13441  0B65  009F               	movwf	31	;volsfr
 13442  0B66                     l6756:	
 13443                           
 13444                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 13445  0B66  30AA               	movlw	170
 13446  0B67  009F               	movwf	31	;volsfr
 13447  0B68                     l6758:	
 13448                           
 13449                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 13450  0B68  149E               	bsf	30,1	;volsfr
 13451  0B69                     l1005:	
 13452                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 13453                           
 13454                           
 13455                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 13456  0B69  189E               	btfsc	30,1	;volsfr
 13457  0B6A  2B6C               	goto	u4171
 13458  0B6B  2B6D               	goto	u4170
 13459  0B6C                     u4171:	
 13460  0B6C  2B69               	goto	l1005
 13461  0B6D                     u4170:	
 13462  0B6D                     l1007:	
 13463                           
 13464                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 13465  0B6D  111E               	bcf	30,2	;volsfr
 13466  0B6E                     l6760:	
 13467                           
 13468                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 13469  0B6E  0020               	movlb	0	; select bank0
 13470  0B6F  0C2C               	rrf	DATAEE_WriteByte@GIEBitValue,w
 13471  0B70  1C03               	skipc
 13472  0B71  138B               	bcf	11,7	;volatile
 13473  0B72  1803               	skipnc
 13474  0B73  178B               	bsf	11,7	;volatile
 13475  0B74                     l1008:	
 13476  0B74  0008               	return
 13477  0B75                     __end_of_DATAEE_WriteByte:	
 13478                           
 13479                           	psect	text14
 13480  0874                     __ptext14:	
 13481 ;; *************** function _i2c1_driver_open *****************
 13482 ;; Defined at:
 13483 ;;		line 84 in file "mcc_generated_files/i2c1_driver.c"
 13484 ;; Parameters:    Size  Location     Type
 13485 ;;		None
 13486 ;; Auto vars:     Size  Location     Type
 13487 ;;		None
 13488 ;; Return value:  Size  Location     Type
 13489 ;;		None               void
 13490 ;; Registers used:
 13491 ;;		wreg, status,2
 13492 ;; Tracked objects:
 13493 ;;		On entry : 0/0
 13494 ;;		On exit  : 0/0
 13495 ;;		Unchanged: 0/0
 13496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13501 ;;Total ram usage:        0 bytes
 13502 ;; Hardware stack levels used:    1
 13503 ;; Hardware stack levels required when called:    6
 13504 ;; This function calls:
 13505 ;;		Nothing
 13506 ;; This function is called by:
 13507 ;;		_main
 13508 ;;		_i2c_open
 13509 ;;		_I2C_Initialize
 13510 ;; This function uses a non-reentrant model
 13511 ;;
 13512                           
 13513                           
 13514                           ;psect for function _i2c1_driver_open
 13515  0874                     _i2c1_driver_open:	
 13516  0874                     l7140:	
 13517                           ;incstack = 0
 13518                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 13519                           
 13520  0874  0023               	movlb	3	; select bank3
 13521  0875  1A90               	btfsc	16,5	;volatile
 13522  0876  2878               	goto	u4381
 13523  0877  2879               	goto	u4380
 13524  0878                     u4381:	
 13525  0878  287F               	goto	l506
 13526  0879                     u4380:	
 13527  0879                     l7142:	
 13528  0879  018F               	clrf	15	;volatile
 13529  087A                     l7144:	
 13530  087A  3028               	movlw	40
 13531  087B  0090               	movwf	16	;volatile
 13532  087C                     l7146:	
 13533  087C  0191               	clrf	17	;volatile
 13534  087D  3003               	movlw	3
 13535  087E  008D               	movwf	13	;volatile
 13536  087F                     l506:	
 13537  087F  0008               	return
 13538  0880                     __end_of_i2c1_driver_open:	
 13539                           
 13540                           	psect	text15
 13541  059F                     __ptext15:	
 13542 ;; *************** function _config_routine *****************
 13543 ;; Defined at:
 13544 ;;		line 304 in file "main.c"
 13545 ;; Parameters:    Size  Location     Type
 13546 ;;		None
 13547 ;; Auto vars:     Size  Location     Type
 13548 ;;  select_mode     2   38[BANK0 ] unsigned int 
 13549 ;; Return value:  Size  Location     Type
 13550 ;;                  1    wreg      void 
 13551 ;; Registers used:
 13552 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13553 ;; Tracked objects:
 13554 ;;		On entry : 0/0
 13555 ;;		On exit  : 0/0
 13556 ;;		Unchanged: 0/0
 13557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13559 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13560 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13561 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13562 ;;Total ram usage:        3 bytes
 13563 ;; Hardware stack levels used:    1
 13564 ;; Hardware stack levels required when called:   11
 13565 ;; This function calls:
 13566 ;;		_all_LED
 13567 ;;		_checkDebounceSW1
 13568 ;;		_checkDebounceSW2
 13569 ;;		_mod1_LED
 13570 ;;		_mod2_LED
 13571 ;;		_mod3_LED
 13572 ;;		_mod4_LED
 13573 ;;		_mode_select_LED
 13574 ;;		_selectSubfield
 13575 ;; This function is called by:
 13576 ;;		_main
 13577 ;; This function uses a non-reentrant model
 13578 ;;
 13579                           
 13580                           
 13581                           ;psect for function _config_routine
 13582  059F                     _config_routine:	
 13583  059F                     l7314:	
 13584                           ;incstack = 0
 13585                           ; Regs used in _config_routine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13586                           
 13587                           
 13588                           ;main.c: 306:     unsigned int select_mode =0;
 13589  059F  0020               	movlb	0	; select bank0
 13590  05A0  01C6               	clrf	config_routine@select_mode
 13591  05A1  01C7               	clrf	config_routine@select_mode+1
 13592  05A2                     l7316:	
 13593                           
 13594                           ;main.c: 307:     last_ms = clkms;
 13595  05A2  087D               	movf	_clkms,w	;volatile
 13596  05A3  00C5               	movwf	??_config_routine
 13597  05A4  0845               	movf	??_config_routine,w
 13598  05A5  00D9               	movwf	_last_ms
 13599  05A6                     l7318:	
 13600                           
 13601                           ;main.c: 308:     last_ms2 = clkms;
 13602  05A6  087D               	movf	_clkms,w	;volatile
 13603  05A7  00C5               	movwf	??_config_routine
 13604  05A8  0845               	movf	??_config_routine,w
 13605  05A9  00D8               	movwf	_last_ms2
 13606  05AA                     l7320:	
 13607                           
 13608                           ;main.c: 311:         if(mode_field_subfield[0] == -1 && select_mode == 0){
 13609  05AA  0A5F               	incf	_mode_field_subfield,w
 13610  05AB  1D03               	skipz
 13611  05AC  2DB1               	goto	u4731
 13612  05AD  0A60               	incf	_mode_field_subfield+1,w
 13613  05AE  1D03               	btfss	3,2
 13614  05AF  2DB1               	goto	u4731
 13615  05B0  2DB2               	goto	u4730
 13616  05B1                     u4731:	
 13617  05B1  2DBB               	goto	l7326
 13618  05B2                     u4730:	
 13619  05B2                     l7322:	
 13620  05B2  0846               	movf	config_routine@select_mode,w
 13621  05B3  0447               	iorwf	config_routine@select_mode+1,w
 13622  05B4  1D03               	btfss	3,2
 13623  05B5  2DB7               	goto	u4741
 13624  05B6  2DB8               	goto	u4740
 13625  05B7                     u4741:	
 13626  05B7  2DBB               	goto	l7326
 13627  05B8                     u4740:	
 13628  05B8                     l7324:	
 13629                           
 13630                           ;main.c: 312:             all_LED();
 13631  05B8  3186  2681  3185   	fcall	_all_LED
 13632  05BB                     l7326:	
 13633                           
 13634                           ;main.c: 315:         if(!PORTBbits.RB4){
 13635  05BB  0020               	movlb	0	; select bank0
 13636  05BC  1A0D               	btfsc	13,4	;volatile
 13637  05BD  2DBF               	goto	u4751
 13638  05BE  2DC0               	goto	u4750
 13639  05BF                     u4751:	
 13640  05BF  2DF6               	goto	l1316
 13641  05C0                     u4750:	
 13642  05C0                     l7328:	
 13643                           
 13644                           ;main.c: 316:             if(checkDebounceSW1()){
 13645  05C0  3187  2736  3185   	fcall	_checkDebounceSW1
 13646  05C3  3A00               	xorlw	0
 13647  05C4  1903               	skipnz
 13648  05C5  2DC7               	goto	u4761
 13649  05C6  2DC8               	goto	u4760
 13650  05C7                     u4761:	
 13651  05C7  2DF6               	goto	l1316
 13652  05C8                     u4760:	
 13653  05C8                     l7330:	
 13654                           
 13655                           ;main.c: 318:                 select_mode +=1;
 13656  05C8  3001               	movlw	1
 13657  05C9  0020               	movlb	0	; select bank0
 13658  05CA  07C6               	addwf	config_routine@select_mode,f
 13659  05CB  3000               	movlw	0
 13660  05CC  3DC7               	addwfc	config_routine@select_mode+1,f
 13661                           
 13662                           ;main.c: 320:                 switch(select_mode){
 13663  05CD  2DE3               	goto	l7344
 13664  05CE                     l7332:	
 13665  05CE  3188  2047  3185   	fcall	_mod1_LED
 13666  05D1  2DF6               	goto	l1316
 13667  05D2                     l7334:	
 13668  05D2  3188  203D  3185   	fcall	_mod2_LED
 13669  05D5  2DF6               	goto	l1316
 13670  05D6                     l7336:	
 13671  05D6  3188  2052  3185   	fcall	_mod3_LED
 13672  05D9  2DF6               	goto	l1316
 13673  05DA                     l7338:	
 13674  05DA  3188  205D  3185   	fcall	_mod4_LED
 13675  05DD  2DF6               	goto	l1316
 13676  05DE                     l7340:	
 13677  05DE  01C6               	clrf	config_routine@select_mode
 13678  05DF  01C7               	clrf	config_routine@select_mode+1
 13679  05E0  01D4               	clrf	_config_mode	;volatile
 13680  05E1  01D3               	clrf	_alarm	;volatile
 13681                           
 13682                           ;main.c: 326:                     break;
 13683  05E2  2DF6               	goto	l1316
 13684  05E3                     l7344:	
 13685                           
 13686                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13687                           ; Switch size 1, requested type "simple"
 13688                           ; Number of cases is 1, Range of values is 0 to 0
 13689                           ; switch strategies available:
 13690                           ; Name         Instructions Cycles
 13691                           ; simple_byte            4     3 (average)
 13692                           ; direct_byte            8     6 (fixed)
 13693                           ; jumptable            260     6 (fixed)
 13694                           ;	Chosen strategy is simple_byte
 13695  05E3  0847               	movf	config_routine@select_mode+1,w
 13696  05E4  3A00               	xorlw	0	; case 0
 13697  05E5  1903               	skipnz
 13698  05E6  2DE8               	goto	l7864
 13699  05E7  2DDE               	goto	l7340
 13700  05E8                     l7864:	
 13701                           
 13702                           ; Switch size 1, requested type "simple"
 13703                           ; Number of cases is 4, Range of values is 1 to 4
 13704                           ; switch strategies available:
 13705                           ; Name         Instructions Cycles
 13706                           ; simple_byte           13     7 (average)
 13707                           ; direct_byte           17     9 (fixed)
 13708                           ; jumptable            263     9 (fixed)
 13709                           ;	Chosen strategy is simple_byte
 13710  05E8  0846               	movf	config_routine@select_mode,w
 13711  05E9  3A01               	xorlw	1	; case 1
 13712  05EA  1903               	skipnz
 13713  05EB  2DCE               	goto	l7332
 13714  05EC  3A03               	xorlw	3	; case 2
 13715  05ED  1903               	skipnz
 13716  05EE  2DD2               	goto	l7334
 13717  05EF  3A01               	xorlw	1	; case 3
 13718  05F0  1903               	skipnz
 13719  05F1  2DD6               	goto	l7336
 13720  05F2  3A07               	xorlw	7	; case 4
 13721  05F3  1903               	skipnz
 13722  05F4  2DDA               	goto	l7338
 13723  05F5  2DDE               	goto	l7340
 13724  05F6                     l1316:	
 13725                           ;main.c: 330:         }
 13726                           
 13727                           
 13728                           ;main.c: 333:         if(!PORTCbits.RC5){
 13729  05F6  0020               	movlb	0	; select bank0
 13730  05F7  1A8E               	btfsc	14,5	;volatile
 13731  05F8  2DFA               	goto	u4771
 13732  05F9  2DFB               	goto	u4770
 13733  05FA                     u4771:	
 13734  05FA  2E0E               	goto	l7354
 13735  05FB                     u4770:	
 13736  05FB                     l7346:	
 13737                           
 13738                           ;main.c: 334:             if(checkDebounceSW2()){
 13739  05FB  318E  261C  3185   	fcall	_checkDebounceSW2
 13740  05FE  3A00               	xorlw	0
 13741  05FF  1903               	skipnz
 13742  0600  2E02               	goto	u4781
 13743  0601  2E03               	goto	u4780
 13744  0602                     u4781:	
 13745  0602  2E0E               	goto	l7354
 13746  0603                     u4780:	
 13747  0603                     l7348:	
 13748                           
 13749                           ;main.c: 335:                 mode_field_subfield[0] = select_mode;
 13750  0603  0020               	movlb	0	; select bank0
 13751  0604  0847               	movf	config_routine@select_mode+1,w
 13752  0605  00E0               	movwf	_mode_field_subfield+1
 13753  0606  0846               	movf	config_routine@select_mode,w
 13754  0607  00DF               	movwf	_mode_field_subfield
 13755  0608                     l7350:	
 13756                           
 13757                           ;main.c: 336:                 mode_select_LED();
 13758  0608  318A  22F1  3185   	fcall	_mode_select_LED
 13759  060B                     l7352:	
 13760                           
 13761                           ;main.c: 337:                 selectSubfield();
 13762  060B  318E  26B6  3185   	fcall	_selectSubfield
 13763  060E                     l7354:	
 13764                           
 13765                           ;main.c: 341:         _delay((unsigned long)((2)*(1000000/4000.0)));
 13766  060E  30A6               	movlw	166
 13767  060F                     u5117:	
 13768  060F  0B89               	decfsz	9,f
 13769  0610  2E0F               	goto	u5117
 13770  0611  3200               	nop2
 13771  0612                     l7356:	
 13772                           
 13773                           ;main.c: 343:     }while(config_mode == 1);
 13774  0612  0020               	movlb	0	; select bank0
 13775  0613  0354               	decf	_config_mode,w	;volatile
 13776  0614  1903               	btfsc	3,2
 13777  0615  2E17               	goto	u4791
 13778  0616  2E18               	goto	u4790
 13779  0617                     u4791:	
 13780  0617  2DAA               	goto	l7320
 13781  0618                     u4790:	
 13782  0618                     l7358:	
 13783                           
 13784                           ;main.c: 345:     mode_field_subfield[0] = -1;
 13785  0618  30FF               	movlw	255
 13786  0619  00DF               	movwf	_mode_field_subfield
 13787  061A  30FF               	movlw	255
 13788  061B  00E0               	movwf	_mode_field_subfield+1
 13789                           
 13790                           ;main.c: 346:     mode_field_subfield[1] = -1;
 13791  061C  30FF               	movlw	255
 13792  061D  00E1               	movwf	_mode_field_subfield+2
 13793  061E  30FF               	movlw	255
 13794  061F  00E2               	movwf	_mode_field_subfield+3
 13795  0620                     l1328:	
 13796  0620  0008               	return
 13797  0621                     __end_of_config_routine:	
 13798                           
 13799                           	psect	text16
 13800  0EB6                     __ptext16:	
 13801 ;; *************** function _selectSubfield *****************
 13802 ;; Defined at:
 13803 ;;		line 355 in file "main.c"
 13804 ;; Parameters:    Size  Location     Type
 13805 ;;		None
 13806 ;; Auto vars:     Size  Location     Type
 13807 ;;  subfield        2   35[BANK0 ] unsigned int 
 13808 ;; Return value:  Size  Location     Type
 13809 ;;                  1    wreg      void 
 13810 ;; Registers used:
 13811 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13812 ;; Tracked objects:
 13813 ;;		On entry : 0/0
 13814 ;;		On exit  : 0/0
 13815 ;;		Unchanged: 0/0
 13816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13818 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13819 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13820 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13821 ;;Total ram usage:        4 bytes
 13822 ;; Hardware stack levels used:    1
 13823 ;; Hardware stack levels required when called:   10
 13824 ;; This function calls:
 13825 ;;		_all_LED
 13826 ;;		_checkDebounceSW1
 13827 ;;		_checkDebounceSW2
 13828 ;;		_getSubfieldInfo
 13829 ;;		_mode_LED
 13830 ;; This function is called by:
 13831 ;;		_config_routine
 13832 ;; This function uses a non-reentrant model
 13833 ;;
 13834                           
 13835                           
 13836                           ;psect for function _selectSubfield
 13837  0EB6                     _selectSubfield:	
 13838  0EB6                     l7032:	
 13839                           ;incstack = 0
 13840                           ; Regs used in _selectSubfield: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13841                           
 13842                           
 13843                           ;main.c: 356:     unsigned int subfield = 1;
 13844  0EB6  3001               	movlw	1
 13845  0EB7  0020               	movlb	0	; select bank0
 13846  0EB8  00C3               	movwf	selectSubfield@subfield
 13847  0EB9  3000               	movlw	0
 13848  0EBA  00C4               	movwf	selectSubfield@subfield+1
 13849  0EBB                     l7034:	
 13850                           
 13851                           ;main.c: 360:         if(!PORTBbits.RB4){
 13852  0EBB  1A0D               	btfsc	13,4	;volatile
 13853  0EBC  2EBE               	goto	u4191
 13854  0EBD  2EBF               	goto	u4190
 13855  0EBE                     u4191:	
 13856  0EBE  2ECC               	goto	l7040
 13857  0EBF                     u4190:	
 13858  0EBF                     l7036:	
 13859                           
 13860                           ;main.c: 361:             if(checkDebounceSW1()){
 13861  0EBF  3187  2736  318E   	fcall	_checkDebounceSW1
 13862  0EC2  3A00               	xorlw	0
 13863  0EC3  1903               	skipnz
 13864  0EC4  2EC6               	goto	u4201
 13865  0EC5  2EC7               	goto	u4200
 13866  0EC6                     u4201:	
 13867  0EC6  2ECC               	goto	l7040
 13868  0EC7                     u4200:	
 13869  0EC7                     l7038:	
 13870                           
 13871                           ;main.c: 362:                 subfield +=1;
 13872  0EC7  3001               	movlw	1
 13873  0EC8  0020               	movlb	0	; select bank0
 13874  0EC9  07C3               	addwf	selectSubfield@subfield,f
 13875  0ECA  3000               	movlw	0
 13876  0ECB  3DC4               	addwfc	selectSubfield@subfield+1,f
 13877  0ECC                     l7040:	
 13878                           
 13879                           ;main.c: 367:         mode_LED( subfield);
 13880  0ECC  0020               	movlb	0	; select bank0
 13881  0ECD  0843               	movf	selectSubfield@subfield,w
 13882  0ECE  318B  23C0  318E   	fcall	_mode_LED
 13883  0ED1                     l7042:	
 13884                           
 13885                           ;main.c: 369:         if(!PORTCbits.RC5){
 13886  0ED1  0020               	movlb	0	; select bank0
 13887  0ED2  1A8E               	btfsc	14,5	;volatile
 13888  0ED3  2ED5               	goto	u4211
 13889  0ED4  2ED6               	goto	u4210
 13890  0ED5                     u4211:	
 13891  0ED5  2EE9               	goto	l7052
 13892  0ED6                     u4210:	
 13893  0ED6                     l7044:	
 13894                           
 13895                           ;main.c: 370:             if(checkDebounceSW2()){
 13896  0ED6  318E  261C  318E   	fcall	_checkDebounceSW2
 13897  0ED9  3A00               	xorlw	0
 13898  0EDA  1903               	skipnz
 13899  0EDB  2EDD               	goto	u4221
 13900  0EDC  2EDE               	goto	u4220
 13901  0EDD                     u4221:	
 13902  0EDD  2EE9               	goto	l7052
 13903  0EDE                     u4220:	
 13904  0EDE                     l7046:	
 13905                           
 13906                           ;main.c: 371:                 mode_field_subfield[1] = subfield;
 13907  0EDE  0020               	movlb	0	; select bank0
 13908  0EDF  0844               	movf	selectSubfield@subfield+1,w
 13909  0EE0  00E2               	movwf	_mode_field_subfield+3
 13910  0EE1  0843               	movf	selectSubfield@subfield,w
 13911  0EE2  00E1               	movwf	_mode_field_subfield+2
 13912  0EE3                     l7048:	
 13913                           
 13914                           ;main.c: 372:                 getSubfieldInfo();
 13915  0EE3  3182  222D  318E   	fcall	_getSubfieldInfo
 13916  0EE6                     l7050:	
 13917                           
 13918                           ;main.c: 373:                 all_LED();
 13919  0EE6  3186  2681  318E   	fcall	_all_LED
 13920  0EE9                     l7052:	
 13921                           
 13922                           ;main.c: 378:         _delay((unsigned long)((2)*(1000000/4000.0)));
 13923  0EE9  30A6               	movlw	166
 13924  0EEA                     u5127:	
 13925  0EEA  0B89               	decfsz	9,f
 13926  0EEB  2EEA               	goto	u5127
 13927  0EEC  3200               	nop2
 13928  0EED                     l7054:	
 13929                           
 13930                           ;main.c: 380:     }while(subfield <= num_subfields[mode_field_subfield[0]]);
 13931  0EED  0020               	movlb	0	; select bank0
 13932  0EEE  0860               	movf	_mode_field_subfield+1,w
 13933  0EEF  0085               	movwf	5
 13934  0EF0  085F               	movf	_mode_field_subfield,w
 13935  0EF1  0084               	movwf	4
 13936  0EF2  3000               	movlw	low (_num_subfields| (0+32768))
 13937  0EF3  0784               	addwf	4,f
 13938  0EF4  3098               	movlw	high (_num_subfields| (0+32768))
 13939  0EF5  3D85               	addwfc	5,f
 13940  0EF6  0800               	movf	0,w	;code access
 13941  0EF7  00C1               	movwf	??_selectSubfield
 13942  0EF8  01C2               	clrf	??_selectSubfield+1
 13943  0EF9  0844               	movf	selectSubfield@subfield+1,w
 13944  0EFA  0242               	subwf	??_selectSubfield+1,w
 13945  0EFB  1D03               	skipz
 13946  0EFC  2EFF               	goto	u4235
 13947  0EFD  0843               	movf	selectSubfield@subfield,w
 13948  0EFE  0241               	subwf	??_selectSubfield,w
 13949  0EFF                     u4235:	
 13950  0EFF  1803               	skipnc
 13951  0F00  2F02               	goto	u4231
 13952  0F01  2F03               	goto	u4230
 13953  0F02                     u4231:	
 13954  0F02  2EBB               	goto	l7034
 13955  0F03                     u4230:	
 13956  0F03                     l1337:	
 13957  0F03  0008               	return
 13958  0F04                     __end_of_selectSubfield:	
 13959                           
 13960                           	psect	text17
 13961  0BC0                     __ptext17:	
 13962 ;; *************** function _mode_LED *****************
 13963 ;; Defined at:
 13964 ;;		line 113 in file "leds.c"
 13965 ;; Parameters:    Size  Location     Type
 13966 ;;  subfield        1    wreg     unsigned char 
 13967 ;; Auto vars:     Size  Location     Type
 13968 ;;  subfield        1   15[BANK0 ] unsigned char 
 13969 ;; Return value:  Size  Location     Type
 13970 ;;                  1    wreg      void 
 13971 ;; Registers used:
 13972 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13973 ;; Tracked objects:
 13974 ;;		On entry : 0/0
 13975 ;;		On exit  : 0/0
 13976 ;;		Unchanged: 0/0
 13977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13979 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13980 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13981 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13982 ;;Total ram usage:        3 bytes
 13983 ;; Hardware stack levels used:    1
 13984 ;; Hardware stack levels required when called:    8
 13985 ;; This function calls:
 13986 ;;		_mod1_LED
 13987 ;;		_mod2_LED
 13988 ;;		_mod3_LED
 13989 ;;		_mod4_LED
 13990 ;; This function is called by:
 13991 ;;		_selectSubfield
 13992 ;; This function uses a non-reentrant model
 13993 ;;
 13994                           
 13995                           
 13996                           ;psect for function _mode_LED
 13997  0BC0                     _mode_LED:	
 13998                           
 13999                           ;incstack = 0
 14000                           ; Regs used in _mode_LED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14001                           ;mode_LED@subfield stored from wreg
 14002  0BC0  0020               	movlb	0	; select bank0
 14003  0BC1  00AF               	movwf	mode_LED@subfield
 14004  0BC2                     l6788:	
 14005                           
 14006                           ;leds.c: 114:         switch(subfield){
 14007  0BC2  2BD3               	goto	l6800
 14008  0BC3                     l6790:	
 14009  0BC3  3188  2047  318B   	fcall	_mod1_LED
 14010  0BC6  2BE9               	goto	l1700
 14011  0BC7                     l6792:	
 14012  0BC7  3188  203D  318B   	fcall	_mod2_LED
 14013  0BCA  2BE9               	goto	l1700
 14014  0BCB                     l6794:	
 14015  0BCB  3188  2052  318B   	fcall	_mod3_LED
 14016  0BCE  2BE9               	goto	l1700
 14017  0BCF                     l6796:	
 14018  0BCF  3188  205D  318B   	fcall	_mod4_LED
 14019  0BD2  2BE9               	goto	l1700
 14020  0BD3                     l6800:	
 14021  0BD3  082F               	movf	mode_LED@subfield,w
 14022  0BD4  00AD               	movwf	??_mode_LED
 14023  0BD5  01AE               	clrf	??_mode_LED+1
 14024                           
 14025                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14026                           ; Switch size 1, requested type "simple"
 14027                           ; Number of cases is 1, Range of values is 0 to 0
 14028                           ; switch strategies available:
 14029                           ; Name         Instructions Cycles
 14030                           ; simple_byte            4     3 (average)
 14031                           ; direct_byte            8     6 (fixed)
 14032                           ; jumptable            260     6 (fixed)
 14033                           ;	Chosen strategy is simple_byte
 14034  0BD6  082E               	movf	??_mode_LED+1,w
 14035  0BD7  3A00               	xorlw	0	; case 0
 14036  0BD8  1903               	skipnz
 14037  0BD9  2BDB               	goto	l7866
 14038  0BDA  2BE9               	goto	l1700
 14039  0BDB                     l7866:	
 14040                           
 14041                           ; Switch size 1, requested type "simple"
 14042                           ; Number of cases is 4, Range of values is 1 to 4
 14043                           ; switch strategies available:
 14044                           ; Name         Instructions Cycles
 14045                           ; simple_byte           13     7 (average)
 14046                           ; direct_byte           17     9 (fixed)
 14047                           ; jumptable            263     9 (fixed)
 14048                           ;	Chosen strategy is simple_byte
 14049  0BDB  082D               	movf	??_mode_LED,w
 14050  0BDC  3A01               	xorlw	1	; case 1
 14051  0BDD  1903               	skipnz
 14052  0BDE  2BC3               	goto	l6790
 14053  0BDF  3A03               	xorlw	3	; case 2
 14054  0BE0  1903               	skipnz
 14055  0BE1  2BC7               	goto	l6792
 14056  0BE2  3A01               	xorlw	1	; case 3
 14057  0BE3  1903               	skipnz
 14058  0BE4  2BCB               	goto	l6794
 14059  0BE5  3A07               	xorlw	7	; case 4
 14060  0BE6  1903               	skipnz
 14061  0BE7  2BCF               	goto	l6796
 14062  0BE8  2BE9               	goto	l1700
 14063  0BE9                     l1700:	
 14064  0BE9  0008               	return
 14065  0BEA                     __end_of_mode_LED:	
 14066                           
 14067                           	psect	text18
 14068  085D                     __ptext18:	
 14069 ;; *************** function _mod4_LED *****************
 14070 ;; Defined at:
 14071 ;;		line 84 in file "leds.c"
 14072 ;; Parameters:    Size  Location     Type
 14073 ;;		None
 14074 ;; Auto vars:     Size  Location     Type
 14075 ;;		None
 14076 ;; Return value:  Size  Location     Type
 14077 ;;                  1    wreg      void 
 14078 ;; Registers used:
 14079 ;;		wreg, status,2, status,0, pclath, cstack
 14080 ;; Tracked objects:
 14081 ;;		On entry : 0/0
 14082 ;;		On exit  : 0/0
 14083 ;;		Unchanged: 0/0
 14084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14089 ;;Total ram usage:        0 bytes
 14090 ;; Hardware stack levels used:    1
 14091 ;; Hardware stack levels required when called:    7
 14092 ;; This function calls:
 14093 ;;		_PWM6_LoadDutyValue
 14094 ;; This function is called by:
 14095 ;;		_config_routine
 14096 ;;		_mode_LED
 14097 ;; This function uses a non-reentrant model
 14098 ;;
 14099                           
 14100                           
 14101                           ;psect for function _mod4_LED
 14102  085D                     _mod4_LED:	
 14103  085D                     l6614:	
 14104                           ;incstack = 0
 14105                           ; Regs used in _mod4_LED: [wreg+status,2+status,0+pclath+cstack]
 14106                           
 14107                           
 14108                           ;leds.c: 85:     LATA = 0;
 14109  085D  0020               	movlb	0	; select bank0
 14110  085E  0196               	clrf	22	;volatile
 14111  085F                     l6616:	
 14112                           
 14113                           ;leds.c: 86:     PWM6_LoadDutyValue(0);
 14114  085F  3000               	movlw	0
 14115  0860  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 14116  0861  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 14117  0862  3189  21F8  3188   	fcall	_PWM6_LoadDutyValue
 14118  0865                     l6618:	
 14119  0865  0020               	movlb	0	; select bank0
 14120  0866  1616               	bsf	22,4	;volatile
 14121  0867                     l1679:	
 14122  0867  0008               	return
 14123  0868                     __end_of_mod4_LED:	
 14124                           
 14125                           	psect	text19
 14126  0852                     __ptext19:	
 14127 ;; *************** function _mod3_LED *****************
 14128 ;; Defined at:
 14129 ;;		line 77 in file "leds.c"
 14130 ;; Parameters:    Size  Location     Type
 14131 ;;		None
 14132 ;; Auto vars:     Size  Location     Type
 14133 ;;		None
 14134 ;; Return value:  Size  Location     Type
 14135 ;;                  1    wreg      void 
 14136 ;; Registers used:
 14137 ;;		wreg, status,2, status,0, pclath, cstack
 14138 ;; Tracked objects:
 14139 ;;		On entry : 0/0
 14140 ;;		On exit  : 0/0
 14141 ;;		Unchanged: 0/0
 14142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14147 ;;Total ram usage:        0 bytes
 14148 ;; Hardware stack levels used:    1
 14149 ;; Hardware stack levels required when called:    7
 14150 ;; This function calls:
 14151 ;;		_PWM6_LoadDutyValue
 14152 ;; This function is called by:
 14153 ;;		_config_routine
 14154 ;;		_mode_LED
 14155 ;; This function uses a non-reentrant model
 14156 ;;
 14157                           
 14158                           
 14159                           ;psect for function _mod3_LED
 14160  0852                     _mod3_LED:	
 14161  0852                     l6608:	
 14162                           ;incstack = 0
 14163                           ; Regs used in _mod3_LED: [wreg+status,2+status,0+pclath+cstack]
 14164                           
 14165                           
 14166                           ;leds.c: 78:     LATA = 0;
 14167  0852  0020               	movlb	0	; select bank0
 14168  0853  0196               	clrf	22	;volatile
 14169  0854                     l6610:	
 14170                           
 14171                           ;leds.c: 79:     PWM6_LoadDutyValue(0);
 14172  0854  3000               	movlw	0
 14173  0855  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 14174  0856  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 14175  0857  3189  21F8  3188   	fcall	_PWM6_LoadDutyValue
 14176  085A                     l6612:	
 14177  085A  0020               	movlb	0	; select bank0
 14178  085B  1696               	bsf	22,5	;volatile
 14179  085C                     l1674:	
 14180  085C  0008               	return
 14181  085D                     __end_of_mod3_LED:	
 14182                           
 14183                           	psect	text20
 14184  083D                     __ptext20:	
 14185 ;; *************** function _mod2_LED *****************
 14186 ;; Defined at:
 14187 ;;		line 72 in file "leds.c"
 14188 ;; Parameters:    Size  Location     Type
 14189 ;;		None
 14190 ;; Auto vars:     Size  Location     Type
 14191 ;;		None
 14192 ;; Return value:  Size  Location     Type
 14193 ;;                  1    wreg      void 
 14194 ;; Registers used:
 14195 ;;		wreg, status,2, status,0, pclath, cstack
 14196 ;; Tracked objects:
 14197 ;;		On entry : 0/0
 14198 ;;		On exit  : 0/0
 14199 ;;		Unchanged: 0/0
 14200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14205 ;;Total ram usage:        0 bytes
 14206 ;; Hardware stack levels used:    1
 14207 ;; Hardware stack levels required when called:    7
 14208 ;; This function calls:
 14209 ;;		_PWM6_LoadDutyValue
 14210 ;; This function is called by:
 14211 ;;		_config_routine
 14212 ;;		_mode_LED
 14213 ;; This function uses a non-reentrant model
 14214 ;;
 14215                           
 14216                           
 14217                           ;psect for function _mod2_LED
 14218  083D                     _mod2_LED:	
 14219  083D                     l6604:	
 14220                           ;incstack = 0
 14221                           ; Regs used in _mod2_LED: [wreg+status,2+status,0+pclath+cstack]
 14222                           
 14223                           
 14224                           ;leds.c: 73:     LATA = 0;
 14225  083D  0020               	movlb	0	; select bank0
 14226  083E  0196               	clrf	22	;volatile
 14227  083F                     l6606:	
 14228                           
 14229                           ;leds.c: 74:     PWM6_LoadDutyValue(1023);
 14230  083F  30FF               	movlw	255
 14231  0840  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 14232  0841  3003               	movlw	3
 14233  0842  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 14234  0843  3189  21F8  3188   	fcall	_PWM6_LoadDutyValue
 14235  0846                     l1669:	
 14236  0846  0008               	return
 14237  0847                     __end_of_mod2_LED:	
 14238                           
 14239                           	psect	text21
 14240  0847                     __ptext21:	
 14241 ;; *************** function _mod1_LED *****************
 14242 ;; Defined at:
 14243 ;;		line 65 in file "leds.c"
 14244 ;; Parameters:    Size  Location     Type
 14245 ;;		None
 14246 ;; Auto vars:     Size  Location     Type
 14247 ;;		None
 14248 ;; Return value:  Size  Location     Type
 14249 ;;                  1    wreg      void 
 14250 ;; Registers used:
 14251 ;;		wreg, status,2, status,0, pclath, cstack
 14252 ;; Tracked objects:
 14253 ;;		On entry : 0/0
 14254 ;;		On exit  : 0/0
 14255 ;;		Unchanged: 0/0
 14256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14261 ;;Total ram usage:        0 bytes
 14262 ;; Hardware stack levels used:    1
 14263 ;; Hardware stack levels required when called:    7
 14264 ;; This function calls:
 14265 ;;		_PWM6_LoadDutyValue
 14266 ;; This function is called by:
 14267 ;;		_config_routine
 14268 ;;		_mode_LED
 14269 ;; This function uses a non-reentrant model
 14270 ;;
 14271                           
 14272                           
 14273                           ;psect for function _mod1_LED
 14274  0847                     _mod1_LED:	
 14275  0847                     l6598:	
 14276                           ;incstack = 0
 14277                           ; Regs used in _mod1_LED: [wreg+status,2+status,0+pclath+cstack]
 14278                           
 14279                           
 14280                           ;leds.c: 66:     LATA = 0;
 14281  0847  0020               	movlb	0	; select bank0
 14282  0848  0196               	clrf	22	;volatile
 14283  0849                     l6600:	
 14284                           
 14285                           ;leds.c: 67:     PWM6_LoadDutyValue(0);
 14286  0849  3000               	movlw	0
 14287  084A  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 14288  084B  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 14289  084C  3189  21F8  3188   	fcall	_PWM6_LoadDutyValue
 14290  084F                     l6602:	
 14291  084F  0020               	movlb	0	; select bank0
 14292  0850  1796               	bsf	22,7	;volatile
 14293  0851                     l1666:	
 14294  0851  0008               	return
 14295  0852                     __end_of_mod1_LED:	
 14296                           
 14297                           	psect	text22
 14298  022D                     __ptext22:	
 14299 ;; *************** function _getSubfieldInfo *****************
 14300 ;; Defined at:
 14301 ;;		line 390 in file "main.c"
 14302 ;; Parameters:    Size  Location     Type
 14303 ;;		None
 14304 ;; Auto vars:     Size  Location     Type
 14305 ;;  temp_thresh_    1   32[BANK0 ] unsigned char 
 14306 ;;  temp_thresh_    1   31[BANK0 ] unsigned char 
 14307 ;;  m_units         1   30[BANK0 ] unsigned char 
 14308 ;;  m_tens          1   29[BANK0 ] unsigned char 
 14309 ;;  h_units         1   28[BANK0 ] unsigned char 
 14310 ;;  h_tens          1   27[BANK0 ] unsigned char 
 14311 ;; Return value:  Size  Location     Type
 14312 ;;                  1    wreg      void 
 14313 ;; Registers used:
 14314 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14315 ;; Tracked objects:
 14316 ;;		On entry : 0/0
 14317 ;;		On exit  : 0/0
 14318 ;;		Unchanged: 0/0
 14319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14321 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14322 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14323 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14324 ;;Total ram usage:        9 bytes
 14325 ;; Hardware stack levels used:    1
 14326 ;; Hardware stack levels required when called:    9
 14327 ;; This function calls:
 14328 ;;		___awdiv
 14329 ;;		___awmod
 14330 ;;		___bmul
 14331 ;;		_increment_subfield
 14332 ;;		_limitHoursUnits
 14333 ;;		_limitTempThreshUnits
 14334 ;; This function is called by:
 14335 ;;		_selectSubfield
 14336 ;; This function uses a non-reentrant model
 14337 ;;
 14338                           
 14339                           
 14340                           ;psect for function _getSubfieldInfo
 14341  022D                     _getSubfieldInfo:	
 14342  022D                     l6808:	
 14343                           ;incstack = 0
 14344                           ; Regs used in _getSubfieldInfo: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14345                           
 14346                           
 14347                           ;main.c: 392:     unsigned char h_tens, h_units, m_tens, m_units, temp_thresh_tens, temp
      +                          _thresh_units;;main.c: 394:     switch(mode_field_subfield[0]){
 14348  022D  2B74               	goto	l6846
 14349  022E                     l1341:	
 14350                           ;main.c: 395:         case 1:
 14351                           
 14352                           
 14353                           ;main.c: 396:             PIE4bits.TMR1IE = 0;
 14354  022E  002E               	movlb	14	; select bank14
 14355  022F  101A               	bcf	26,0	;volatile
 14356  0230                     l6810:	
 14357                           
 14358                           ;main.c: 397:             h_tens = clkh / 10;
 14359  0230  300A               	movlw	10
 14360  0231  0020               	movlb	0	; select bank0
 14361  0232  00A3               	movwf	___awdiv@divisor
 14362  0233  3000               	movlw	0
 14363  0234  00A4               	movwf	___awdiv@divisor+1
 14364  0235  085C               	movf	_clkh,w	;volatile
 14365  0236  00B8               	movwf	??_getSubfieldInfo
 14366  0237  01B9               	clrf	??_getSubfieldInfo+1
 14367  0238  0838               	movf	??_getSubfieldInfo,w
 14368  0239  00A5               	movwf	___awdiv@dividend
 14369  023A  0839               	movf	??_getSubfieldInfo+1,w
 14370  023B  00A6               	movwf	___awdiv@dividend+1
 14371  023C  3186  2621  3182   	fcall	___awdiv
 14372  023F  0020               	movlb	0	; select bank0
 14373  0240  0823               	movf	?___awdiv,w
 14374  0241  00BA               	movwf	??_getSubfieldInfo+2
 14375  0242  083A               	movf	??_getSubfieldInfo+2,w
 14376  0243  00BB               	movwf	getSubfieldInfo@h_tens
 14377                           
 14378                           ;main.c: 398:             h_units = clkh % 10;
 14379  0244  300A               	movlw	10
 14380  0245  00A3               	movwf	___awmod@divisor
 14381  0246  3000               	movlw	0
 14382  0247  00A4               	movwf	___awmod@divisor+1
 14383  0248  085C               	movf	_clkh,w	;volatile
 14384  0249  00B8               	movwf	??_getSubfieldInfo
 14385  024A  01B9               	clrf	??_getSubfieldInfo+1
 14386  024B  0838               	movf	??_getSubfieldInfo,w
 14387  024C  00A5               	movwf	___awmod@dividend
 14388  024D  0839               	movf	??_getSubfieldInfo+1,w
 14389  024E  00A6               	movwf	___awmod@dividend+1
 14390  024F  318F  2758  3182   	fcall	___awmod
 14391  0252  0020               	movlb	0	; select bank0
 14392  0253  0823               	movf	?___awmod,w
 14393  0254  00BA               	movwf	??_getSubfieldInfo+2
 14394  0255  083A               	movf	??_getSubfieldInfo+2,w
 14395  0256  00BC               	movwf	getSubfieldInfo@h_units
 14396                           
 14397                           ;main.c: 399:             m_tens = clkm / 10;
 14398  0257  300A               	movlw	10
 14399  0258  00A3               	movwf	___awdiv@divisor
 14400  0259  3000               	movlw	0
 14401  025A  00A4               	movwf	___awdiv@divisor+1
 14402  025B  085B               	movf	_clkm,w	;volatile
 14403  025C  00B8               	movwf	??_getSubfieldInfo
 14404  025D  01B9               	clrf	??_getSubfieldInfo+1
 14405  025E  0838               	movf	??_getSubfieldInfo,w
 14406  025F  00A5               	movwf	___awdiv@dividend
 14407  0260  0839               	movf	??_getSubfieldInfo+1,w
 14408  0261  00A6               	movwf	___awdiv@dividend+1
 14409  0262  3186  2621  3182   	fcall	___awdiv
 14410  0265  0020               	movlb	0	; select bank0
 14411  0266  0823               	movf	?___awdiv,w
 14412  0267  00BA               	movwf	??_getSubfieldInfo+2
 14413  0268  083A               	movf	??_getSubfieldInfo+2,w
 14414  0269  00BD               	movwf	getSubfieldInfo@m_tens
 14415                           
 14416                           ;main.c: 400:             m_units = clkm % 10;
 14417  026A  300A               	movlw	10
 14418  026B  00A3               	movwf	___awmod@divisor
 14419  026C  3000               	movlw	0
 14420  026D  00A4               	movwf	___awmod@divisor+1
 14421  026E  085B               	movf	_clkm,w	;volatile
 14422  026F  00B8               	movwf	??_getSubfieldInfo
 14423  0270  01B9               	clrf	??_getSubfieldInfo+1
 14424  0271  0838               	movf	??_getSubfieldInfo,w
 14425  0272  00A5               	movwf	___awmod@dividend
 14426  0273  0839               	movf	??_getSubfieldInfo+1,w
 14427  0274  00A6               	movwf	___awmod@dividend+1
 14428  0275  318F  2758  3182   	fcall	___awmod
 14429  0278  0020               	movlb	0	; select bank0
 14430  0279  0823               	movf	?___awmod,w
 14431  027A  00BA               	movwf	??_getSubfieldInfo+2
 14432  027B  083A               	movf	??_getSubfieldInfo+2,w
 14433  027C  00BE               	movwf	getSubfieldInfo@m_units
 14434                           
 14435                           ;main.c: 402:             switch(mode_field_subfield[1]){
 14436  027D  2AC0               	goto	l6822
 14437  027E                     l6812:	
 14438                           
 14439                           ;main.c: 404:                    h_tens = increment_subfield(2, h_tens);
 14440  027E  083B               	movf	getSubfieldInfo@h_tens,w
 14441  027F  00B8               	movwf	??_getSubfieldInfo
 14442  0280  01B9               	clrf	??_getSubfieldInfo+1
 14443  0281  0838               	movf	??_getSubfieldInfo,w
 14444  0282  00B2               	movwf	increment_subfield@init_val
 14445  0283  0839               	movf	??_getSubfieldInfo+1,w
 14446  0284  00B3               	movwf	increment_subfield@init_val+1
 14447  0285  3002               	movlw	2
 14448  0286  318F  27AC  3182   	fcall	_increment_subfield
 14449  0289  0020               	movlb	0	; select bank0
 14450  028A  00BA               	movwf	??_getSubfieldInfo+2
 14451  028B  083A               	movf	??_getSubfieldInfo+2,w
 14452  028C  00BB               	movwf	getSubfieldInfo@h_tens
 14453                           
 14454                           ;main.c: 405:                  break;
 14455  028D  2AD3               	goto	l6824
 14456  028E                     l6814:	
 14457                           
 14458                           ;main.c: 407:                     h_units = increment_subfield( limitHoursUnits() , h_un
      +                          its);
 14459  028E  083C               	movf	getSubfieldInfo@h_units,w
 14460  028F  00B8               	movwf	??_getSubfieldInfo
 14461  0290  01B9               	clrf	??_getSubfieldInfo+1
 14462  0291  0838               	movf	??_getSubfieldInfo,w
 14463  0292  00B2               	movwf	increment_subfield@init_val
 14464  0293  0839               	movf	??_getSubfieldInfo+1,w
 14465  0294  00B3               	movwf	increment_subfield@init_val+1
 14466  0295  318A  2245  3182   	fcall	_limitHoursUnits
 14467  0298  318F  27AC  3182   	fcall	_increment_subfield
 14468  029B  0020               	movlb	0	; select bank0
 14469  029C  00BA               	movwf	??_getSubfieldInfo+2
 14470  029D  083A               	movf	??_getSubfieldInfo+2,w
 14471  029E  00BC               	movwf	getSubfieldInfo@h_units
 14472                           
 14473                           ;main.c: 408:                  break;
 14474  029F  2AD3               	goto	l6824
 14475  02A0                     l6816:	
 14476                           
 14477                           ;main.c: 410:                     m_tens = increment_subfield( 5 , m_tens);
 14478  02A0  083D               	movf	getSubfieldInfo@m_tens,w
 14479  02A1  00B8               	movwf	??_getSubfieldInfo
 14480  02A2  01B9               	clrf	??_getSubfieldInfo+1
 14481  02A3  0838               	movf	??_getSubfieldInfo,w
 14482  02A4  00B2               	movwf	increment_subfield@init_val
 14483  02A5  0839               	movf	??_getSubfieldInfo+1,w
 14484  02A6  00B3               	movwf	increment_subfield@init_val+1
 14485  02A7  3005               	movlw	5
 14486  02A8  318F  27AC  3182   	fcall	_increment_subfield
 14487  02AB  0020               	movlb	0	; select bank0
 14488  02AC  00BA               	movwf	??_getSubfieldInfo+2
 14489  02AD  083A               	movf	??_getSubfieldInfo+2,w
 14490  02AE  00BD               	movwf	getSubfieldInfo@m_tens
 14491                           
 14492                           ;main.c: 411:                  break;
 14493  02AF  2AD3               	goto	l6824
 14494  02B0                     l6818:	
 14495                           
 14496                           ;main.c: 413:                  m_units = increment_subfield( 9, m_units);
 14497  02B0  083E               	movf	getSubfieldInfo@m_units,w
 14498  02B1  00B8               	movwf	??_getSubfieldInfo
 14499  02B2  01B9               	clrf	??_getSubfieldInfo+1
 14500  02B3  0838               	movf	??_getSubfieldInfo,w
 14501  02B4  00B2               	movwf	increment_subfield@init_val
 14502  02B5  0839               	movf	??_getSubfieldInfo+1,w
 14503  02B6  00B3               	movwf	increment_subfield@init_val+1
 14504  02B7  3009               	movlw	9
 14505  02B8  318F  27AC  3182   	fcall	_increment_subfield
 14506  02BB  0020               	movlb	0	; select bank0
 14507  02BC  00BA               	movwf	??_getSubfieldInfo+2
 14508  02BD  083A               	movf	??_getSubfieldInfo+2,w
 14509  02BE  00BE               	movwf	getSubfieldInfo@m_units
 14510                           
 14511                           ;main.c: 414:                      break;
 14512  02BF  2AD3               	goto	l6824
 14513  02C0                     l6822:	
 14514                           
 14515                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14516                           ; Switch size 1, requested type "simple"
 14517                           ; Number of cases is 1, Range of values is 0 to 0
 14518                           ; switch strategies available:
 14519                           ; Name         Instructions Cycles
 14520                           ; simple_byte            4     3 (average)
 14521                           ; direct_byte            8     6 (fixed)
 14522                           ; jumptable            260     6 (fixed)
 14523                           ;	Chosen strategy is simple_byte
 14524  02C0  0862               	movf	_mode_field_subfield+3,w
 14525  02C1  3A00               	xorlw	0	; case 0
 14526  02C2  1903               	skipnz
 14527  02C3  2AC5               	goto	l7868
 14528  02C4  2AD3               	goto	l6824
 14529  02C5                     l7868:	
 14530                           
 14531                           ; Switch size 1, requested type "simple"
 14532                           ; Number of cases is 4, Range of values is 1 to 4
 14533                           ; switch strategies available:
 14534                           ; Name         Instructions Cycles
 14535                           ; simple_byte           13     7 (average)
 14536                           ; direct_byte           17     9 (fixed)
 14537                           ; jumptable            263     9 (fixed)
 14538                           ;	Chosen strategy is simple_byte
 14539  02C5  0861               	movf	_mode_field_subfield+2,w
 14540  02C6  3A01               	xorlw	1	; case 1
 14541  02C7  1903               	skipnz
 14542  02C8  2A7E               	goto	l6812
 14543  02C9  3A03               	xorlw	3	; case 2
 14544  02CA  1903               	skipnz
 14545  02CB  2A8E               	goto	l6814
 14546  02CC  3A01               	xorlw	1	; case 3
 14547  02CD  1903               	skipnz
 14548  02CE  2AA0               	goto	l6816
 14549  02CF  3A07               	xorlw	7	; case 4
 14550  02D0  1903               	skipnz
 14551  02D1  2AB0               	goto	l6818
 14552  02D2  2AD3               	goto	l6824
 14553  02D3                     l6824:	
 14554                           
 14555                           ;main.c: 417:             clkh = 10*h_tens + h_units;
 14556  02D3  300A               	movlw	10
 14557  02D4  00B8               	movwf	??_getSubfieldInfo
 14558  02D5  0838               	movf	??_getSubfieldInfo,w
 14559  02D6  00A3               	movwf	___bmul@multiplicand
 14560  02D7  083B               	movf	getSubfieldInfo@h_tens,w
 14561  02D8  3187  27EA  3182   	fcall	___bmul
 14562  02DB  0020               	movlb	0	; select bank0
 14563  02DC  073C               	addwf	getSubfieldInfo@h_units,w
 14564  02DD  00B9               	movwf	??_getSubfieldInfo+1
 14565  02DE  0839               	movf	??_getSubfieldInfo+1,w
 14566  02DF  00DC               	movwf	_clkh	;volatile
 14567                           
 14568                           ;main.c: 418:             clkm = 10*m_tens + m_units;
 14569  02E0  300A               	movlw	10
 14570  02E1  00B8               	movwf	??_getSubfieldInfo
 14571  02E2  0838               	movf	??_getSubfieldInfo,w
 14572  02E3  00A3               	movwf	___bmul@multiplicand
 14573  02E4  083D               	movf	getSubfieldInfo@m_tens,w
 14574  02E5  3187  27EA  3182   	fcall	___bmul
 14575  02E8  0020               	movlb	0	; select bank0
 14576  02E9  073E               	addwf	getSubfieldInfo@m_units,w
 14577  02EA  00B9               	movwf	??_getSubfieldInfo+1
 14578  02EB  0839               	movf	??_getSubfieldInfo+1,w
 14579  02EC  00DB               	movwf	_clkm	;volatile
 14580  02ED                     l6826:	
 14581                           
 14582                           ;main.c: 419:             PIE4bits.TMR1IE = 0;
 14583  02ED  002E               	movlb	14	; select bank14
 14584  02EE  101A               	bcf	26,0	;volatile
 14585                           
 14586                           ;main.c: 420:         break;
 14587  02EF  2B88               	goto	l1356
 14588  02F0                     l6828:	
 14589                           
 14590                           ;main.c: 423:             alaf = increment_subfield( 1, alaf );
 14591  02F0  0851               	movf	_alaf,w
 14592  02F1  00B8               	movwf	??_getSubfieldInfo
 14593  02F2  01B9               	clrf	??_getSubfieldInfo+1
 14594  02F3  0838               	movf	??_getSubfieldInfo,w
 14595  02F4  00B2               	movwf	increment_subfield@init_val
 14596  02F5  0839               	movf	??_getSubfieldInfo+1,w
 14597  02F6  00B3               	movwf	increment_subfield@init_val+1
 14598  02F7  3001               	movlw	1
 14599  02F8  318F  27AC  3182   	fcall	_increment_subfield
 14600  02FB  0020               	movlb	0	; select bank0
 14601  02FC  00BA               	movwf	??_getSubfieldInfo+2
 14602  02FD  083A               	movf	??_getSubfieldInfo+2,w
 14603  02FE  00D1               	movwf	_alaf
 14604                           
 14605                           ;main.c: 424:  break;
 14606  02FF  2B88               	goto	l1356
 14607  0300                     l6830:	
 14608                           
 14609                           ;main.c: 427:             temp_thresh_tens = temp_thresh / 10;
 14610  0300  300A               	movlw	10
 14611  0301  00A3               	movwf	___awdiv@divisor
 14612  0302  3000               	movlw	0
 14613  0303  00A4               	movwf	___awdiv@divisor+1
 14614  0304  0864               	movf	_temp_thresh,w
 14615  0305  00B8               	movwf	??_getSubfieldInfo
 14616  0306  01B9               	clrf	??_getSubfieldInfo+1
 14617  0307  0838               	movf	??_getSubfieldInfo,w
 14618  0308  00A5               	movwf	___awdiv@dividend
 14619  0309  0839               	movf	??_getSubfieldInfo+1,w
 14620  030A  00A6               	movwf	___awdiv@dividend+1
 14621  030B  3186  2621  3182   	fcall	___awdiv
 14622  030E  0020               	movlb	0	; select bank0
 14623  030F  0823               	movf	?___awdiv,w
 14624  0310  00BA               	movwf	??_getSubfieldInfo+2
 14625  0311  083A               	movf	??_getSubfieldInfo+2,w
 14626  0312  00BF               	movwf	getSubfieldInfo@temp_thresh_tens
 14627                           
 14628                           ;main.c: 428:             temp_thresh_units = temp_thresh % 10;
 14629  0313  300A               	movlw	10
 14630  0314  00A3               	movwf	___awmod@divisor
 14631  0315  3000               	movlw	0
 14632  0316  00A4               	movwf	___awmod@divisor+1
 14633  0317  0864               	movf	_temp_thresh,w
 14634  0318  00B8               	movwf	??_getSubfieldInfo
 14635  0319  01B9               	clrf	??_getSubfieldInfo+1
 14636  031A  0838               	movf	??_getSubfieldInfo,w
 14637  031B  00A5               	movwf	___awmod@dividend
 14638  031C  0839               	movf	??_getSubfieldInfo+1,w
 14639  031D  00A6               	movwf	___awmod@dividend+1
 14640  031E  318F  2758  3182   	fcall	___awmod
 14641  0321  0020               	movlb	0	; select bank0
 14642  0322  0823               	movf	?___awmod,w
 14643  0323  00BA               	movwf	??_getSubfieldInfo+2
 14644  0324  083A               	movf	??_getSubfieldInfo+2,w
 14645  0325  00C0               	movwf	getSubfieldInfo@temp_thresh_units
 14646                           
 14647                           ;main.c: 429:             switch(mode_field_subfield[1]){
 14648  0326  2B49               	goto	l6838
 14649  0327                     l6832:	
 14650                           
 14651                           ;main.c: 431:                     temp_thresh_tens = increment_subfield(5, temp_thresh_t
      +                          ens);
 14652  0327  083F               	movf	getSubfieldInfo@temp_thresh_tens,w
 14653  0328  00B8               	movwf	??_getSubfieldInfo
 14654  0329  01B9               	clrf	??_getSubfieldInfo+1
 14655  032A  0838               	movf	??_getSubfieldInfo,w
 14656  032B  00B2               	movwf	increment_subfield@init_val
 14657  032C  0839               	movf	??_getSubfieldInfo+1,w
 14658  032D  00B3               	movwf	increment_subfield@init_val+1
 14659  032E  3005               	movlw	5
 14660  032F  318F  27AC  3182   	fcall	_increment_subfield
 14661  0332  0020               	movlb	0	; select bank0
 14662  0333  00BA               	movwf	??_getSubfieldInfo+2
 14663  0334  083A               	movf	??_getSubfieldInfo+2,w
 14664  0335  00BF               	movwf	getSubfieldInfo@temp_thresh_tens
 14665                           
 14666                           ;main.c: 432:                 break;
 14667  0336  2B56               	goto	l6840
 14668  0337                     l6834:	
 14669                           
 14670                           ;main.c: 434:                     temp_thresh_units = increment_subfield(limitTempThresh
      +                          Units(), temp_thresh_units);
 14671  0337  0840               	movf	getSubfieldInfo@temp_thresh_units,w
 14672  0338  00B8               	movwf	??_getSubfieldInfo
 14673  0339  01B9               	clrf	??_getSubfieldInfo+1
 14674  033A  0838               	movf	??_getSubfieldInfo,w
 14675  033B  00B2               	movwf	increment_subfield@init_val
 14676  033C  0839               	movf	??_getSubfieldInfo+1,w
 14677  033D  00B3               	movwf	increment_subfield@init_val+1
 14678  033E  318A  2260  3182   	fcall	_limitTempThreshUnits
 14679  0341  318F  27AC  3182   	fcall	_increment_subfield
 14680  0344  0020               	movlb	0	; select bank0
 14681  0345  00BA               	movwf	??_getSubfieldInfo+2
 14682  0346  083A               	movf	??_getSubfieldInfo+2,w
 14683  0347  00C0               	movwf	getSubfieldInfo@temp_thresh_units
 14684                           
 14685                           ;main.c: 435:                 break;
 14686  0348  2B56               	goto	l6840
 14687  0349                     l6838:	
 14688                           
 14689                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14690                           ; Switch size 1, requested type "simple"
 14691                           ; Number of cases is 1, Range of values is 0 to 0
 14692                           ; switch strategies available:
 14693                           ; Name         Instructions Cycles
 14694                           ; simple_byte            4     3 (average)
 14695                           ; direct_byte            8     6 (fixed)
 14696                           ; jumptable            260     6 (fixed)
 14697                           ;	Chosen strategy is simple_byte
 14698  0349  0862               	movf	_mode_field_subfield+3,w
 14699  034A  3A00               	xorlw	0	; case 0
 14700  034B  1903               	skipnz
 14701  034C  2B4E               	goto	l7870
 14702  034D  2B56               	goto	l6840
 14703  034E                     l7870:	
 14704                           
 14705                           ; Switch size 1, requested type "simple"
 14706                           ; Number of cases is 2, Range of values is 1 to 2
 14707                           ; switch strategies available:
 14708                           ; Name         Instructions Cycles
 14709                           ; simple_byte            7     4 (average)
 14710                           ; direct_byte           13     9 (fixed)
 14711                           ; jumptable            263     9 (fixed)
 14712                           ;	Chosen strategy is simple_byte
 14713  034E  0861               	movf	_mode_field_subfield+2,w
 14714  034F  3A01               	xorlw	1	; case 1
 14715  0350  1903               	skipnz
 14716  0351  2B27               	goto	l6832
 14717  0352  3A03               	xorlw	3	; case 2
 14718  0353  1903               	skipnz
 14719  0354  2B37               	goto	l6834
 14720  0355  2B56               	goto	l6840
 14721  0356                     l6840:	
 14722                           
 14723                           ;main.c: 437:             temp_thresh = 10*temp_thresh_tens + temp_thresh_units;
 14724  0356  300A               	movlw	10
 14725  0357  00B8               	movwf	??_getSubfieldInfo
 14726  0358  0838               	movf	??_getSubfieldInfo,w
 14727  0359  00A3               	movwf	___bmul@multiplicand
 14728  035A  083F               	movf	getSubfieldInfo@temp_thresh_tens,w
 14729  035B  3187  27EA  3182   	fcall	___bmul
 14730  035E  0020               	movlb	0	; select bank0
 14731  035F  0740               	addwf	getSubfieldInfo@temp_thresh_units,w
 14732  0360  00B9               	movwf	??_getSubfieldInfo+1
 14733  0361  0839               	movf	??_getSubfieldInfo+1,w
 14734  0362  00E4               	movwf	_temp_thresh
 14735                           
 14736                           ;main.c: 438:         break;
 14737  0363  2B88               	goto	l1356
 14738  0364                     l6842:	
 14739                           
 14740                           ;main.c: 441:             lum_thresh = increment_subfield(3, lum_thresh);
 14741  0364  0863               	movf	_lum_thresh,w
 14742  0365  00B8               	movwf	??_getSubfieldInfo
 14743  0366  01B9               	clrf	??_getSubfieldInfo+1
 14744  0367  0838               	movf	??_getSubfieldInfo,w
 14745  0368  00B2               	movwf	increment_subfield@init_val
 14746  0369  0839               	movf	??_getSubfieldInfo+1,w
 14747  036A  00B3               	movwf	increment_subfield@init_val+1
 14748  036B  3003               	movlw	3
 14749  036C  318F  27AC  3182   	fcall	_increment_subfield
 14750  036F  0020               	movlb	0	; select bank0
 14751  0370  00BA               	movwf	??_getSubfieldInfo+2
 14752  0371  083A               	movf	??_getSubfieldInfo+2,w
 14753  0372  00E3               	movwf	_lum_thresh
 14754                           
 14755                           ;main.c: 442:         break;
 14756  0373  2B88               	goto	l1356
 14757  0374                     l6846:	
 14758                           
 14759                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14760                           ; Switch size 1, requested type "simple"
 14761                           ; Number of cases is 1, Range of values is 0 to 0
 14762                           ; switch strategies available:
 14763                           ; Name         Instructions Cycles
 14764                           ; simple_byte            4     3 (average)
 14765                           ; direct_byte            8     6 (fixed)
 14766                           ; jumptable            260     6 (fixed)
 14767                           ;	Chosen strategy is simple_byte
 14768  0374  0020               	movlb	0	; select bank0
 14769  0375  0860               	movf	_mode_field_subfield+1,w
 14770  0376  3A00               	xorlw	0	; case 0
 14771  0377  1903               	skipnz
 14772  0378  2B7A               	goto	l7872
 14773  0379  2B88               	goto	l1356
 14774  037A                     l7872:	
 14775                           
 14776                           ; Switch size 1, requested type "simple"
 14777                           ; Number of cases is 4, Range of values is 1 to 4
 14778                           ; switch strategies available:
 14779                           ; Name         Instructions Cycles
 14780                           ; simple_byte           13     7 (average)
 14781                           ; direct_byte           17     9 (fixed)
 14782                           ; jumptable            263     9 (fixed)
 14783                           ;	Chosen strategy is simple_byte
 14784  037A  085F               	movf	_mode_field_subfield,w
 14785  037B  3A01               	xorlw	1	; case 1
 14786  037C  1903               	skipnz
 14787  037D  2A2E               	goto	l1341
 14788  037E  3A03               	xorlw	3	; case 2
 14789  037F  1903               	skipnz
 14790  0380  2AF0               	goto	l6828
 14791  0381  3A01               	xorlw	1	; case 3
 14792  0382  1903               	skipnz
 14793  0383  2B00               	goto	l6830
 14794  0384  3A07               	xorlw	7	; case 4
 14795  0385  1903               	skipnz
 14796  0386  2B64               	goto	l6842
 14797  0387  2B88               	goto	l1356
 14798  0388                     l1356:	
 14799  0388  0008               	return
 14800  0389                     __end_of_getSubfieldInfo:	
 14801                           
 14802                           	psect	text23
 14803  0A60                     __ptext23:	
 14804 ;; *************** function _limitTempThreshUnits *****************
 14805 ;; Defined at:
 14806 ;;		line 475 in file "main.c"
 14807 ;; Parameters:    Size  Location     Type
 14808 ;;		None
 14809 ;; Auto vars:     Size  Location     Type
 14810 ;;		None
 14811 ;; Return value:  Size  Location     Type
 14812 ;;                  1    wreg      unsigned char 
 14813 ;; Registers used:
 14814 ;;		wreg, status,2, status,0, pclath, cstack
 14815 ;; Tracked objects:
 14816 ;;		On entry : 0/0
 14817 ;;		On exit  : 0/0
 14818 ;;		Unchanged: 0/0
 14819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14822 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14823 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14824 ;;Total ram usage:        2 bytes
 14825 ;; Hardware stack levels used:    1
 14826 ;; Hardware stack levels required when called:    7
 14827 ;; This function calls:
 14828 ;;		___awdiv
 14829 ;; This function is called by:
 14830 ;;		_getSubfieldInfo
 14831 ;; This function uses a non-reentrant model
 14832 ;;
 14833                           
 14834                           
 14835                           ;psect for function _limitTempThreshUnits
 14836  0A60                     _limitTempThreshUnits:	
 14837  0A60                     l6672:	
 14838                           ;incstack = 0
 14839                           ; Regs used in _limitTempThreshUnits: [wreg+status,2+status,0+pclath+cstack]
 14840                           
 14841                           
 14842                           ;main.c: 476:      if((temp_thresh / 10) == 5){
 14843  0A60  300A               	movlw	10
 14844  0A61  0020               	movlb	0	; select bank0
 14845  0A62  00A3               	movwf	___awdiv@divisor
 14846  0A63  3000               	movlw	0
 14847  0A64  00A4               	movwf	___awdiv@divisor+1
 14848  0A65  0864               	movf	_temp_thresh,w
 14849  0A66  00AC               	movwf	??_limitTempThreshUnits
 14850  0A67  01AD               	clrf	??_limitTempThreshUnits+1
 14851  0A68  082C               	movf	??_limitTempThreshUnits,w
 14852  0A69  00A5               	movwf	___awdiv@dividend
 14853  0A6A  082D               	movf	??_limitTempThreshUnits+1,w
 14854  0A6B  00A6               	movwf	___awdiv@dividend+1
 14855  0A6C  3186  2621  318A   	fcall	___awdiv
 14856  0A6F  3005               	movlw	5
 14857  0A70  0020               	movlb	0	; select bank0
 14858  0A71  0623               	xorwf	?___awdiv,w
 14859  0A72  0424               	iorwf	?___awdiv+1,w
 14860  0A73  1D03               	btfss	3,2
 14861  0A74  2A76               	goto	u4051
 14862  0A75  2A77               	goto	u4050
 14863  0A76                     u4051:	
 14864  0A76  2A79               	goto	l6680
 14865  0A77                     u4050:	
 14866  0A77                     l6674:	
 14867                           
 14868                           ;main.c: 477:         return 0;
 14869  0A77  3000               	movlw	0
 14870  0A78  2A7A               	goto	l1368
 14871  0A79                     l6680:	
 14872                           
 14873                           ;main.c: 479:         return 9;
 14874  0A79  3009               	movlw	9
 14875  0A7A                     l1368:	
 14876  0A7A  0008               	return
 14877  0A7B                     __end_of_limitTempThreshUnits:	
 14878                           
 14879                           	psect	text24
 14880  0A45                     __ptext24:	
 14881 ;; *************** function _limitHoursUnits *****************
 14882 ;; Defined at:
 14883 ;;		line 490 in file "main.c"
 14884 ;; Parameters:    Size  Location     Type
 14885 ;;		None
 14886 ;; Auto vars:     Size  Location     Type
 14887 ;;		None
 14888 ;; Return value:  Size  Location     Type
 14889 ;;                  1    wreg      unsigned char 
 14890 ;; Registers used:
 14891 ;;		wreg, status,2, status,0, pclath, cstack
 14892 ;; Tracked objects:
 14893 ;;		On entry : 0/0
 14894 ;;		On exit  : 0/0
 14895 ;;		Unchanged: 0/0
 14896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14899 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14900 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14901 ;;Total ram usage:        2 bytes
 14902 ;; Hardware stack levels used:    1
 14903 ;; Hardware stack levels required when called:    7
 14904 ;; This function calls:
 14905 ;;		___awdiv
 14906 ;; This function is called by:
 14907 ;;		_getSubfieldInfo
 14908 ;; This function uses a non-reentrant model
 14909 ;;
 14910                           
 14911                           
 14912                           ;psect for function _limitHoursUnits
 14913  0A45                     _limitHoursUnits:	
 14914  0A45                     l6660:	
 14915                           ;incstack = 0
 14916                           ; Regs used in _limitHoursUnits: [wreg+status,2+status,0+pclath+cstack]
 14917                           
 14918                           
 14919                           ;main.c: 492:     if((clkh / 10) == 2){
 14920  0A45  300A               	movlw	10
 14921  0A46  0020               	movlb	0	; select bank0
 14922  0A47  00A3               	movwf	___awdiv@divisor
 14923  0A48  3000               	movlw	0
 14924  0A49  00A4               	movwf	___awdiv@divisor+1
 14925  0A4A  085C               	movf	_clkh,w	;volatile
 14926  0A4B  00AC               	movwf	??_limitHoursUnits
 14927  0A4C  01AD               	clrf	??_limitHoursUnits+1
 14928  0A4D  082C               	movf	??_limitHoursUnits,w
 14929  0A4E  00A5               	movwf	___awdiv@dividend
 14930  0A4F  082D               	movf	??_limitHoursUnits+1,w
 14931  0A50  00A6               	movwf	___awdiv@dividend+1
 14932  0A51  3186  2621  318A   	fcall	___awdiv
 14933  0A54  3002               	movlw	2
 14934  0A55  0020               	movlb	0	; select bank0
 14935  0A56  0623               	xorwf	?___awdiv,w
 14936  0A57  0424               	iorwf	?___awdiv+1,w
 14937  0A58  1D03               	btfss	3,2
 14938  0A59  2A5B               	goto	u4041
 14939  0A5A  2A5C               	goto	u4040
 14940  0A5B                     u4041:	
 14941  0A5B  2A5E               	goto	l6668
 14942  0A5C                     u4040:	
 14943  0A5C                     l6662:	
 14944                           
 14945                           ;main.c: 493:         return 3;
 14946  0A5C  3003               	movlw	3
 14947  0A5D  2A5F               	goto	l1373
 14948  0A5E                     l6668:	
 14949                           
 14950                           ;main.c: 495:         return 9;
 14951  0A5E  3009               	movlw	9
 14952  0A5F                     l1373:	
 14953  0A5F  0008               	return
 14954  0A60                     __end_of_limitHoursUnits:	
 14955                           
 14956                           	psect	text25
 14957  0621                     __ptext25:	
 14958 ;; *************** function ___awdiv *****************
 14959 ;; Defined at:
 14960 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 14961 ;; Parameters:    Size  Location     Type
 14962 ;;  divisor         2    3[BANK0 ] int 
 14963 ;;  dividend        2    5[BANK0 ] int 
 14964 ;; Auto vars:     Size  Location     Type
 14965 ;;  quotient        2   10[BANK0 ] int 
 14966 ;;  sign            1    9[BANK0 ] unsigned char 
 14967 ;;  counter         1    8[BANK0 ] unsigned char 
 14968 ;; Return value:  Size  Location     Type
 14969 ;;                  2    3[BANK0 ] int 
 14970 ;; Registers used:
 14971 ;;		wreg, status,2, status,0
 14972 ;; Tracked objects:
 14973 ;;		On entry : 0/0
 14974 ;;		On exit  : 0/0
 14975 ;;		Unchanged: 0/0
 14976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14977 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14978 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14979 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14980 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14981 ;;Total ram usage:        9 bytes
 14982 ;; Hardware stack levels used:    1
 14983 ;; Hardware stack levels required when called:    6
 14984 ;; This function calls:
 14985 ;;		Nothing
 14986 ;; This function is called by:
 14987 ;;		_getSubfieldInfo
 14988 ;;		_limitTempThreshUnits
 14989 ;;		_limitHoursUnits
 14990 ;;		_recTempThresh
 14991 ;; This function uses a non-reentrant model
 14992 ;;
 14993                           
 14994                           
 14995                           ;psect for function ___awdiv
 14996  0621                     ___awdiv:	
 14997  0621                     l6538:	
 14998                           ;incstack = 0
 14999                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 15000                           
 15001  0621  0020               	movlb	0	; select bank0
 15002  0622  01A9               	clrf	___awdiv@sign
 15003  0623                     l6540:	
 15004  0623  1FA4               	btfss	___awdiv@divisor+1,7
 15005  0624  2E26               	goto	u3871
 15006  0625  2E27               	goto	u3870
 15007  0626                     u3871:	
 15008  0626  2E2E               	goto	l6546
 15009  0627                     u3870:	
 15010  0627                     l6542:	
 15011  0627  09A3               	comf	___awdiv@divisor,f
 15012  0628  09A4               	comf	___awdiv@divisor+1,f
 15013  0629  0AA3               	incf	___awdiv@divisor,f
 15014  062A  1903               	skipnz
 15015  062B  0AA4               	incf	___awdiv@divisor+1,f
 15016  062C                     l6544:	
 15017  062C  01A9               	clrf	___awdiv@sign
 15018  062D  0AA9               	incf	___awdiv@sign,f
 15019  062E                     l6546:	
 15020  062E  1FA6               	btfss	___awdiv@dividend+1,7
 15021  062F  2E31               	goto	u3881
 15022  0630  2E32               	goto	u3880
 15023  0631                     u3881:	
 15024  0631  2E3B               	goto	l6552
 15025  0632                     u3880:	
 15026  0632                     l6548:	
 15027  0632  09A5               	comf	___awdiv@dividend,f
 15028  0633  09A6               	comf	___awdiv@dividend+1,f
 15029  0634  0AA5               	incf	___awdiv@dividend,f
 15030  0635  1903               	skipnz
 15031  0636  0AA6               	incf	___awdiv@dividend+1,f
 15032  0637                     l6550:	
 15033  0637  3001               	movlw	1
 15034  0638  00A7               	movwf	??___awdiv
 15035  0639  0827               	movf	??___awdiv,w
 15036  063A  06A9               	xorwf	___awdiv@sign,f
 15037  063B                     l6552:	
 15038  063B  01AA               	clrf	___awdiv@quotient
 15039  063C  01AB               	clrf	___awdiv@quotient+1
 15040  063D                     l6554:	
 15041  063D  0823               	movf	___awdiv@divisor,w
 15042  063E  0424               	iorwf	___awdiv@divisor+1,w
 15043  063F  1903               	btfsc	3,2
 15044  0640  2E42               	goto	u3891
 15045  0641  2E43               	goto	u3890
 15046  0642                     u3891:	
 15047  0642  2E72               	goto	l6574
 15048  0643                     u3890:	
 15049  0643                     l6556:	
 15050  0643  01A8               	clrf	___awdiv@counter
 15051  0644  0AA8               	incf	___awdiv@counter,f
 15052  0645  2E4F               	goto	l6562
 15053  0646                     l6558:	
 15054  0646  3001               	movlw	1
 15055  0647                     u3905:	
 15056  0647  35A3               	lslf	___awdiv@divisor,f
 15057  0648  0DA4               	rlf	___awdiv@divisor+1,f
 15058  0649  0B89               	decfsz	9,f
 15059  064A  2E47               	goto	u3905
 15060  064B                     l6560:	
 15061  064B  3001               	movlw	1
 15062  064C  00A7               	movwf	??___awdiv
 15063  064D  0827               	movf	??___awdiv,w
 15064  064E  07A8               	addwf	___awdiv@counter,f
 15065  064F                     l6562:	
 15066  064F  1FA4               	btfss	___awdiv@divisor+1,7
 15067  0650  2E52               	goto	u3911
 15068  0651  2E53               	goto	u3910
 15069  0652                     u3911:	
 15070  0652  2E46               	goto	l6558
 15071  0653                     u3910:	
 15072  0653                     l6564:	
 15073  0653  3001               	movlw	1
 15074  0654                     u3925:	
 15075  0654  35AA               	lslf	___awdiv@quotient,f
 15076  0655  0DAB               	rlf	___awdiv@quotient+1,f
 15077  0656  0B89               	decfsz	9,f
 15078  0657  2E54               	goto	u3925
 15079  0658  0824               	movf	___awdiv@divisor+1,w
 15080  0659  0226               	subwf	___awdiv@dividend+1,w
 15081  065A  1D03               	skipz
 15082  065B  2E5E               	goto	u3935
 15083  065C  0823               	movf	___awdiv@divisor,w
 15084  065D  0225               	subwf	___awdiv@dividend,w
 15085  065E                     u3935:	
 15086  065E  1C03               	skipc
 15087  065F  2E61               	goto	u3931
 15088  0660  2E62               	goto	u3930
 15089  0661                     u3931:	
 15090  0661  2E67               	goto	l6570
 15091  0662                     u3930:	
 15092  0662                     l6566:	
 15093  0662  0823               	movf	___awdiv@divisor,w
 15094  0663  02A5               	subwf	___awdiv@dividend,f
 15095  0664  0824               	movf	___awdiv@divisor+1,w
 15096  0665  3BA6               	subwfb	___awdiv@dividend+1,f
 15097  0666                     l6568:	
 15098  0666  142A               	bsf	___awdiv@quotient,0
 15099  0667                     l6570:	
 15100  0667  3001               	movlw	1
 15101  0668                     u3945:	
 15102  0668  36A4               	lsrf	___awdiv@divisor+1,f
 15103  0669  0CA3               	rrf	___awdiv@divisor,f
 15104  066A  0B89               	decfsz	9,f
 15105  066B  2E68               	goto	u3945
 15106  066C                     l6572:	
 15107  066C  3001               	movlw	1
 15108  066D  02A8               	subwf	___awdiv@counter,f
 15109  066E  1D03               	btfss	3,2
 15110  066F  2E71               	goto	u3951
 15111  0670  2E72               	goto	u3950
 15112  0671                     u3951:	
 15113  0671  2E53               	goto	l6564
 15114  0672                     u3950:	
 15115  0672                     l6574:	
 15116  0672  0829               	movf	___awdiv@sign,w
 15117  0673  1903               	btfsc	3,2
 15118  0674  2E76               	goto	u3961
 15119  0675  2E77               	goto	u3960
 15120  0676                     u3961:	
 15121  0676  2E7C               	goto	l6578
 15122  0677                     u3960:	
 15123  0677                     l6576:	
 15124  0677  09AA               	comf	___awdiv@quotient,f
 15125  0678  09AB               	comf	___awdiv@quotient+1,f
 15126  0679  0AAA               	incf	___awdiv@quotient,f
 15127  067A  1903               	skipnz
 15128  067B  0AAB               	incf	___awdiv@quotient+1,f
 15129  067C                     l6578:	
 15130  067C  082B               	movf	___awdiv@quotient+1,w
 15131  067D  00A4               	movwf	?___awdiv+1
 15132  067E  082A               	movf	___awdiv@quotient,w
 15133  067F  00A3               	movwf	?___awdiv
 15134  0680                     l2009:	
 15135  0680  0008               	return
 15136  0681                     __end_of___awdiv:	
 15137                           
 15138                           	psect	text26
 15139  0FAC                     __ptext26:	
 15140 ;; *************** function _increment_subfield *****************
 15141 ;; Defined at:
 15142 ;;		line 499 in file "main.c"
 15143 ;; Parameters:    Size  Location     Type
 15144 ;;  limit           1    wreg     unsigned char 
 15145 ;;  init_val        2   18[BANK0 ] unsigned int 
 15146 ;; Auto vars:     Size  Location     Type
 15147 ;;  limit           1   22[BANK0 ] unsigned char 
 15148 ;;  _value          1   23[BANK0 ] unsigned char 
 15149 ;;  exit            1   21[BANK0 ] unsigned char 
 15150 ;; Return value:  Size  Location     Type
 15151 ;;                  1    wreg      unsigned char 
 15152 ;; Registers used:
 15153 ;;		wreg, status,2, status,0, pclath, cstack
 15154 ;; Tracked objects:
 15155 ;;		On entry : 0/0
 15156 ;;		On exit  : 0/0
 15157 ;;		Unchanged: 0/0
 15158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15159 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15160 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15161 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15162 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15163 ;;Total ram usage:        6 bytes
 15164 ;; Hardware stack levels used:    1
 15165 ;; Hardware stack levels required when called:    8
 15166 ;; This function calls:
 15167 ;;		_PWM6_LoadDutyValue
 15168 ;;		_checkDebounceSW1
 15169 ;;		_checkDebounceSW2
 15170 ;;		_representLed
 15171 ;; This function is called by:
 15172 ;;		_getSubfieldInfo
 15173 ;; This function uses a non-reentrant model
 15174 ;;
 15175                           
 15176                           
 15177                           ;psect for function _increment_subfield
 15178  0FAC                     _increment_subfield:	
 15179                           
 15180                           ;incstack = 0
 15181                           ; Regs used in _increment_subfield: [wreg+status,2+status,0+pclath+cstack]
 15182                           ;increment_subfield@limit stored from wreg
 15183  0FAC  0020               	movlb	0	; select bank0
 15184  0FAD  00B6               	movwf	increment_subfield@limit
 15185  0FAE                     l6620:	
 15186                           
 15187                           ;main.c: 501:     unsigned char exit = 0;
 15188  0FAE  01B5               	clrf	increment_subfield@exit
 15189  0FAF                     l6622:	
 15190                           
 15191                           ;main.c: 502:     unsigned char _value = init_val;
 15192  0FAF  0832               	movf	increment_subfield@init_val,w
 15193  0FB0  00B4               	movwf	??_increment_subfield
 15194  0FB1  0834               	movf	??_increment_subfield,w
 15195  0FB2  00B7               	movwf	increment_subfield@_value
 15196  0FB3                     l6624:	
 15197                           
 15198                           ;main.c: 504:     PWM6_LoadDutyValue(0);
 15199  0FB3  3000               	movlw	0
 15200  0FB4  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 15201  0FB5  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 15202  0FB6  3189  21F8  318F   	fcall	_PWM6_LoadDutyValue
 15203  0FB9                     l6626:	
 15204                           
 15205                           ;main.c: 505:     LATA = 0;
 15206  0FB9  0020               	movlb	0	; select bank0
 15207  0FBA  0196               	clrf	22	;volatile
 15208  0FBB                     l6628:	
 15209                           
 15210                           ;main.c: 507:     if(_value > limit) _value = 0;
 15211  0FBB  0837               	movf	increment_subfield@_value,w
 15212  0FBC  0236               	subwf	increment_subfield@limit,w
 15213  0FBD  1803               	skipnc
 15214  0FBE  2FC0               	goto	u3971
 15215  0FBF  2FC1               	goto	u3970
 15216  0FC0                     u3971:	
 15217  0FC0  2FF9               	goto	l6654
 15218  0FC1                     u3970:	
 15219  0FC1                     l6630:	
 15220  0FC1  01B7               	clrf	increment_subfield@_value
 15221  0FC2  2FF9               	goto	l6654
 15222  0FC3                     l6632:	
 15223                           
 15224                           ;main.c: 510:      representLed(_value);
 15225  0FC3  0837               	movf	increment_subfield@_value,w
 15226  0FC4  318E  2669  318F   	fcall	_representLed
 15227  0FC7                     l6634:	
 15228                           
 15229                           ;main.c: 511:         if(!PORTCbits.RC5){
 15230  0FC7  0020               	movlb	0	; select bank0
 15231  0FC8  1A8E               	btfsc	14,5	;volatile
 15232  0FC9  2FCB               	goto	u3981
 15233  0FCA  2FCC               	goto	u3980
 15234  0FCB                     u3981:	
 15235  0FCB  2FE5               	goto	l6646
 15236  0FCC                     u3980:	
 15237  0FCC                     l6636:	
 15238                           
 15239                           ;main.c: 512:             if(checkDebounceSW2()){
 15240  0FCC  318E  261C  318F   	fcall	_checkDebounceSW2
 15241  0FCF  3A00               	xorlw	0
 15242  0FD0  1903               	skipnz
 15243  0FD1  2FD3               	goto	u3991
 15244  0FD2  2FD4               	goto	u3990
 15245  0FD3                     u3991:	
 15246  0FD3  2FE0               	goto	l6644
 15247  0FD4                     u3990:	
 15248  0FD4                     l6638:	
 15249                           
 15250                           ;main.c: 513:                 _value++;
 15251  0FD4  3001               	movlw	1
 15252  0FD5  0020               	movlb	0	; select bank0
 15253  0FD6  00B4               	movwf	??_increment_subfield
 15254  0FD7  0834               	movf	??_increment_subfield,w
 15255  0FD8  07B7               	addwf	increment_subfield@_value,f
 15256  0FD9                     l6640:	
 15257                           
 15258                           ;main.c: 514:                 if(_value > limit) _value = 0;
 15259  0FD9  0837               	movf	increment_subfield@_value,w
 15260  0FDA  0236               	subwf	increment_subfield@limit,w
 15261  0FDB  1803               	skipnc
 15262  0FDC  2FDE               	goto	u4001
 15263  0FDD  2FDF               	goto	u4000
 15264  0FDE                     u4001:	
 15265  0FDE  2FE0               	goto	l6644
 15266  0FDF                     u4000:	
 15267  0FDF                     l6642:	
 15268  0FDF  01B7               	clrf	increment_subfield@_value
 15269  0FE0                     l6644:	
 15270                           
 15271                           ;main.c: 516:             last_ms2 = clkms;
 15272  0FE0  087D               	movf	_clkms,w	;volatile
 15273  0FE1  0020               	movlb	0	; select bank0
 15274  0FE2  00B4               	movwf	??_increment_subfield
 15275  0FE3  0834               	movf	??_increment_subfield,w
 15276  0FE4  00D8               	movwf	_last_ms2
 15277  0FE5                     l6646:	
 15278                           
 15279                           ;main.c: 519:         if(!PORTBbits.RB4){
 15280  0FE5  1A0D               	btfsc	13,4	;volatile
 15281  0FE6  2FE8               	goto	u4011
 15282  0FE7  2FE9               	goto	u4010
 15283  0FE8                     u4011:	
 15284  0FE8  2FF9               	goto	l6654
 15285  0FE9                     u4010:	
 15286  0FE9                     l6648:	
 15287                           
 15288                           ;main.c: 520:             if(checkDebounceSW1()){
 15289  0FE9  3187  2736  318F   	fcall	_checkDebounceSW1
 15290  0FEC  3A00               	xorlw	0
 15291  0FED  1903               	skipnz
 15292  0FEE  2FF0               	goto	u4021
 15293  0FEF  2FF1               	goto	u4020
 15294  0FF0                     u4021:	
 15295  0FF0  2FF4               	goto	l6652
 15296  0FF1                     u4020:	
 15297  0FF1                     l6650:	
 15298                           
 15299                           ;main.c: 521:                 exit = 1;
 15300  0FF1  0020               	movlb	0	; select bank0
 15301  0FF2  01B5               	clrf	increment_subfield@exit
 15302  0FF3  0AB5               	incf	increment_subfield@exit,f
 15303  0FF4                     l6652:	
 15304                           
 15305                           ;main.c: 523:             last_ms = clkms;
 15306  0FF4  087D               	movf	_clkms,w	;volatile
 15307  0FF5  0020               	movlb	0	; select bank0
 15308  0FF6  00B4               	movwf	??_increment_subfield
 15309  0FF7  0834               	movf	??_increment_subfield,w
 15310  0FF8  00D9               	movwf	_last_ms
 15311  0FF9                     l6654:	
 15312                           
 15313                           ;main.c: 509:     while(exit == 0){
 15314  0FF9  0835               	movf	increment_subfield@exit,w
 15315  0FFA  1903               	btfsc	3,2
 15316  0FFB  2FFD               	goto	u4031
 15317  0FFC  2FFE               	goto	u4030
 15318  0FFD                     u4031:	
 15319  0FFD  2FC3               	goto	l6632
 15320  0FFE                     u4030:	
 15321  0FFE                     l6656:	
 15322                           
 15323                           ;main.c: 526: return _value;
 15324  0FFE  0837               	movf	increment_subfield@_value,w
 15325  0FFF                     l1386:	
 15326  0FFF  0008               	return
 15327  1000                     __end_of_increment_subfield:	
 15328                           
 15329                           	psect	text27
 15330  0E69                     __ptext27:	
 15331 ;; *************** function _representLed *****************
 15332 ;; Defined at:
 15333 ;;		line 134 in file "leds.c"
 15334 ;; Parameters:    Size  Location     Type
 15335 ;;  val             1    wreg     unsigned char 
 15336 ;; Auto vars:     Size  Location     Type
 15337 ;;  val             1   16[BANK0 ] unsigned char 
 15338 ;;  aux             1   17[BANK0 ] unsigned char 
 15339 ;; Return value:  Size  Location     Type
 15340 ;;                  1    wreg      void 
 15341 ;; Registers used:
 15342 ;;		wreg, status,2, status,0, pclath, cstack
 15343 ;; Tracked objects:
 15344 ;;		On entry : 0/0
 15345 ;;		On exit  : 0/0
 15346 ;;		Unchanged: 0/0
 15347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15349 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15350 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15351 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15352 ;;Total ram usage:        5 bytes
 15353 ;; Hardware stack levels used:    1
 15354 ;; Hardware stack levels required when called:    7
 15355 ;; This function calls:
 15356 ;;		_PWM6_LoadDutyValue
 15357 ;;		___wmul
 15358 ;; This function is called by:
 15359 ;;		_increment_subfield
 15360 ;; This function uses a non-reentrant model
 15361 ;;
 15362                           
 15363                           
 15364                           ;psect for function _representLed
 15365  0E69                     _representLed:	
 15366                           
 15367                           ;incstack = 0
 15368                           ; Regs used in _representLed: [wreg+status,2+status,0+pclath+cstack]
 15369                           ;representLed@val stored from wreg
 15370  0E69  0020               	movlb	0	; select bank0
 15371  0E6A  00B0               	movwf	representLed@val
 15372  0E6B                     l6526:	
 15373                           
 15374                           ;leds.c: 134: void representLed(unsigned char val);leds.c: 135: {;leds.c: 136:     unsig
      +                          ned char aux = val;
 15375  0E6B  0830               	movf	representLed@val,w
 15376  0E6C  00AD               	movwf	??_representLed
 15377  0E6D  082D               	movf	??_representLed,w
 15378  0E6E  00B1               	movwf	representLed@aux
 15379                           
 15380                           ;leds.c: 137:     if(val > 99)
 15381  0E6F  3064               	movlw	100
 15382  0E70  0230               	subwf	representLed@val,w
 15383  0E71  1C03               	skipc
 15384  0E72  2E74               	goto	u3841
 15385  0E73  2E75               	goto	u3840
 15386  0E74                     u3841:	
 15387  0E74  2E76               	goto	l6530
 15388  0E75                     u3840:	
 15389  0E75  2EB5               	goto	l1704
 15390  0E76                     l6530:	
 15391                           
 15392                           ;leds.c: 140:     LATAbits.LATA7 = aux >> 3;
 15393  0E76  0831               	movf	representLed@aux,w
 15394  0E77  00AD               	movwf	??_representLed
 15395  0E78  3003               	movlw	3
 15396  0E79                     u3855:	
 15397  0E79  36AD               	lsrf	??_representLed,f
 15398  0E7A  0B89               	decfsz	9,f
 15399  0E7B  2E79               	goto	u3855
 15400  0E7C  082D               	movf	??_representLed,w
 15401  0E7D  00AE               	movwf	??_representLed+1
 15402  0E7E  0CAE               	rrf	??_representLed+1,f
 15403  0E7F  0CAE               	rrf	??_representLed+1,f
 15404  0E80  0816               	movf	22,w	;volatile
 15405  0E81  062E               	xorwf	??_representLed+1,w
 15406  0E82  397F               	andlw	-129
 15407  0E83  062E               	xorwf	??_representLed+1,w
 15408  0E84  0096               	movwf	22	;volatile
 15409  0E85                     l6532:	
 15410                           
 15411                           ;leds.c: 141:     PWM6_LoadDutyValue(((aux >> 2) & 1)*1023);
 15412  0E85  0831               	movf	representLed@aux,w
 15413  0E86  00AD               	movwf	??_representLed
 15414  0E87  3002               	movlw	2
 15415  0E88                     u3865:	
 15416  0E88  36AD               	lsrf	??_representLed,f
 15417  0E89  0B89               	decfsz	9,f
 15418  0E8A  2E88               	goto	u3865
 15419  0E8B  082D               	movf	??_representLed,w
 15420  0E8C  3901               	andlw	1
 15421  0E8D  00AE               	movwf	??_representLed+1
 15422  0E8E  01AF               	clrf	??_representLed+2
 15423  0E8F  082E               	movf	??_representLed+1,w
 15424  0E90  00A3               	movwf	___wmul@multiplier
 15425  0E91  082F               	movf	??_representLed+2,w
 15426  0E92  00A4               	movwf	___wmul@multiplier+1
 15427  0E93  30FF               	movlw	255
 15428  0E94  00A5               	movwf	___wmul@multiplicand
 15429  0E95  3003               	movlw	3
 15430  0E96  00A6               	movwf	___wmul@multiplicand+1
 15431  0E97  318B  2311  318E   	fcall	___wmul
 15432  0E9A  0020               	movlb	0	; select bank0
 15433  0E9B  0824               	movf	?___wmul+1,w
 15434  0E9C  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 15435  0E9D  0823               	movf	?___wmul,w
 15436  0E9E  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 15437  0E9F  3189  21F8  318E   	fcall	_PWM6_LoadDutyValue
 15438  0EA2                     l6534:	
 15439                           
 15440                           ;leds.c: 142:     LATAbits.LATA5 = aux >> 1;
 15441  0EA2  0020               	movlb	0	; select bank0
 15442  0EA3  3631               	lsrf	representLed@aux,w
 15443  0EA4  00AD               	movwf	??_representLed
 15444  0EA5  0EAD               	swapf	??_representLed,f
 15445  0EA6  0DAD               	rlf	??_representLed,f
 15446  0EA7  0816               	movf	22,w	;volatile
 15447  0EA8  062D               	xorwf	??_representLed,w
 15448  0EA9  39DF               	andlw	-33
 15449  0EAA  062D               	xorwf	??_representLed,w
 15450  0EAB  0096               	movwf	22	;volatile
 15451  0EAC                     l6536:	
 15452                           
 15453                           ;leds.c: 143:     LATAbits.LATA4 = aux & 1;
 15454  0EAC  0831               	movf	representLed@aux,w
 15455  0EAD  3901               	andlw	1
 15456  0EAE  00AD               	movwf	??_representLed
 15457  0EAF  0EAD               	swapf	??_representLed,f
 15458  0EB0  0816               	movf	22,w	;volatile
 15459  0EB1  062D               	xorwf	??_representLed,w
 15460  0EB2  39EF               	andlw	-17
 15461  0EB3  062D               	xorwf	??_representLed,w
 15462  0EB4  0096               	movwf	22	;volatile
 15463  0EB5                     l1704:	
 15464  0EB5  0008               	return
 15465  0EB6                     __end_of_representLed:	
 15466                           
 15467                           	psect	text28
 15468  0B11                     __ptext28:	
 15469 ;; *************** function ___wmul *****************
 15470 ;; Defined at:
 15471 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 15472 ;; Parameters:    Size  Location     Type
 15473 ;;  multiplier      2    3[BANK0 ] unsigned int 
 15474 ;;  multiplicand    2    5[BANK0 ] unsigned int 
 15475 ;; Auto vars:     Size  Location     Type
 15476 ;;  product         2    7[BANK0 ] unsigned int 
 15477 ;; Return value:  Size  Location     Type
 15478 ;;                  2    3[BANK0 ] unsigned int 
 15479 ;; Registers used:
 15480 ;;		wreg, status,2, status,0
 15481 ;; Tracked objects:
 15482 ;;		On entry : 0/0
 15483 ;;		On exit  : 0/0
 15484 ;;		Unchanged: 0/0
 15485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15486 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15487 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15489 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15490 ;;Total ram usage:        6 bytes
 15491 ;; Hardware stack levels used:    1
 15492 ;; Hardware stack levels required when called:    6
 15493 ;; This function calls:
 15494 ;;		Nothing
 15495 ;; This function is called by:
 15496 ;;		_representLed
 15497 ;; This function uses a non-reentrant model
 15498 ;;
 15499                           
 15500                           
 15501                           ;psect for function ___wmul
 15502  0B11                     ___wmul:	
 15503  0B11                     l6466:	
 15504                           ;incstack = 0
 15505                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 15506                           
 15507  0B11  0020               	movlb	0	; select bank0
 15508  0B12  01A7               	clrf	___wmul@product
 15509  0B13  01A8               	clrf	___wmul@product+1
 15510  0B14                     l6468:	
 15511  0B14  1C23               	btfss	___wmul@multiplier,0
 15512  0B15  2B17               	goto	u3741
 15513  0B16  2B18               	goto	u3740
 15514  0B17                     u3741:	
 15515  0B17  2B1C               	goto	l1856
 15516  0B18                     u3740:	
 15517  0B18                     l6470:	
 15518  0B18  0825               	movf	___wmul@multiplicand,w
 15519  0B19  07A7               	addwf	___wmul@product,f
 15520  0B1A  0826               	movf	___wmul@multiplicand+1,w
 15521  0B1B  3DA8               	addwfc	___wmul@product+1,f
 15522  0B1C                     l1856:	
 15523  0B1C  3001               	movlw	1
 15524  0B1D                     u3755:	
 15525  0B1D  35A5               	lslf	___wmul@multiplicand,f
 15526  0B1E  0DA6               	rlf	___wmul@multiplicand+1,f
 15527  0B1F  0B89               	decfsz	9,f
 15528  0B20  2B1D               	goto	u3755
 15529  0B21                     l6472:	
 15530  0B21  3001               	movlw	1
 15531  0B22                     u3765:	
 15532  0B22  36A4               	lsrf	___wmul@multiplier+1,f
 15533  0B23  0CA3               	rrf	___wmul@multiplier,f
 15534  0B24  0B89               	decfsz	9,f
 15535  0B25  2B22               	goto	u3765
 15536  0B26                     l6474:	
 15537  0B26  0823               	movf	___wmul@multiplier,w
 15538  0B27  0424               	iorwf	___wmul@multiplier+1,w
 15539  0B28  1D03               	btfss	3,2
 15540  0B29  2B2B               	goto	u3771
 15541  0B2A  2B2C               	goto	u3770
 15542  0B2B                     u3771:	
 15543  0B2B  2B14               	goto	l6468
 15544  0B2C                     u3770:	
 15545  0B2C                     l6476:	
 15546  0B2C  0828               	movf	___wmul@product+1,w
 15547  0B2D  00A4               	movwf	?___wmul+1
 15548  0B2E  0827               	movf	___wmul@product,w
 15549  0B2F  00A3               	movwf	?___wmul
 15550  0B30                     l1858:	
 15551  0B30  0008               	return
 15552  0B31                     __end_of___wmul:	
 15553                           
 15554                           	psect	text29
 15555  0E1C                     __ptext29:	
 15556 ;; *************** function _checkDebounceSW2 *****************
 15557 ;; Defined at:
 15558 ;;		line 621 in file "main.c"
 15559 ;; Parameters:    Size  Location     Type
 15560 ;;		None
 15561 ;; Auto vars:     Size  Location     Type
 15562 ;;		None
 15563 ;; Return value:  Size  Location     Type
 15564 ;;                  1    wreg      unsigned char 
 15565 ;; Registers used:
 15566 ;;		wreg, status,2, status,0
 15567 ;; Tracked objects:
 15568 ;;		On entry : 0/0
 15569 ;;		On exit  : 0/0
 15570 ;;		Unchanged: 0/0
 15571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15574 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15575 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15576 ;;Total ram usage:        7 bytes
 15577 ;; Hardware stack levels used:    1
 15578 ;; Hardware stack levels required when called:    6
 15579 ;; This function calls:
 15580 ;;		Nothing
 15581 ;; This function is called by:
 15582 ;;		_config_routine
 15583 ;;		_selectSubfield
 15584 ;;		_increment_subfield
 15585 ;; This function uses a non-reentrant model
 15586 ;;
 15587                           
 15588                           
 15589                           ;psect for function _checkDebounceSW2
 15590  0E1C                     _checkDebounceSW2:	
 15591  0E1C                     l6506:	
 15592                           ;incstack = 0
 15593                           ; Regs used in _checkDebounceSW2: [wreg+status,2+status,0]
 15594                           
 15595                           
 15596                           ;main.c: 624:     if(clkms - last_ms2 < 0){
 15597  0E1C  087D               	movf	_clkms,w	;volatile
 15598  0E1D  0020               	movlb	0	; select bank0
 15599  0E1E  00A3               	movwf	??_checkDebounceSW2
 15600  0E1F  01A4               	clrf	??_checkDebounceSW2+1
 15601  0E20  0824               	movf	??_checkDebounceSW2+1,w
 15602  0E21  00A6               	movwf	??_checkDebounceSW2+3
 15603  0E22  0858               	movf	_last_ms2,w
 15604  0E23  0223               	subwf	??_checkDebounceSW2,w
 15605  0E24  00A5               	movwf	??_checkDebounceSW2+2
 15606  0E25  1C03               	skipc
 15607  0E26  03A6               	decf	??_checkDebounceSW2+3,f
 15608  0E27  1FA6               	btfss	??_checkDebounceSW2+3,7
 15609  0E28  2E2A               	goto	u3811
 15610  0E29  2E2B               	goto	u3810
 15611  0E2A                     u3811:	
 15612  0E2A  2E4F               	goto	l6514
 15613  0E2B                     u3810:	
 15614  0E2B                     l6508:	
 15615                           
 15616                           ;main.c: 626:         if ((200 - last_ms2)+ clkms > 15 ){
 15617  0E2B  087D               	movf	_clkms,w	;volatile
 15618  0E2C  00A3               	movwf	??_checkDebounceSW2
 15619  0E2D  01A4               	clrf	??_checkDebounceSW2+1
 15620  0E2E  0824               	movf	??_checkDebounceSW2+1,w
 15621  0E2F  00A6               	movwf	??_checkDebounceSW2+3
 15622  0E30  0858               	movf	_last_ms2,w
 15623  0E31  0223               	subwf	??_checkDebounceSW2,w
 15624  0E32  00A5               	movwf	??_checkDebounceSW2+2
 15625  0E33  1C03               	skipc
 15626  0E34  03A6               	decf	??_checkDebounceSW2+3,f
 15627  0E35  0825               	movf	??_checkDebounceSW2+2,w
 15628  0E36  3EC8               	addlw	200
 15629  0E37  00A7               	movwf	??_checkDebounceSW2+4
 15630  0E38  3000               	movlw	0
 15631  0E39  3D26               	addwfc	??_checkDebounceSW2+3,w
 15632  0E3A  00A8               	movwf	??_checkDebounceSW2+5
 15633  0E3B  0828               	movf	??_checkDebounceSW2+5,w
 15634  0E3C  3A80               	xorlw	128
 15635  0E3D  00A9               	movwf	??_checkDebounceSW2+6
 15636  0E3E  3080               	movlw	128
 15637  0E3F  0229               	subwf	??_checkDebounceSW2+6,w
 15638  0E40  1D03               	skipz
 15639  0E41  2E44               	goto	u3825
 15640  0E42  3010               	movlw	16
 15641  0E43  0227               	subwf	??_checkDebounceSW2+4,w
 15642  0E44                     u3825:	
 15643  0E44  1C03               	skipc
 15644  0E45  2E47               	goto	u3821
 15645  0E46  2E48               	goto	u3820
 15646  0E47                     u3821:	
 15647  0E47  2E4F               	goto	l6514
 15648  0E48                     u3820:	
 15649  0E48                     l6510:	
 15650                           
 15651                           ;main.c: 627:             last_ms2 = clkms;
 15652  0E48  087D               	movf	_clkms,w	;volatile
 15653  0E49  0020               	movlb	0	; select bank0
 15654  0E4A  00A3               	movwf	??_checkDebounceSW2
 15655  0E4B  0823               	movf	??_checkDebounceSW2,w
 15656  0E4C  00D8               	movwf	_last_ms2
 15657                           
 15658                           ;main.c: 628:             return 1;
 15659  0E4D  3001               	movlw	1
 15660  0E4E  2E68               	goto	l1416
 15661  0E4F                     l6514:	
 15662                           
 15663                           ;main.c: 632:     if(clkms - last_ms2 < 15){
 15664  0E4F  087D               	movf	_clkms,w	;volatile
 15665  0E50  0020               	movlb	0	; select bank0
 15666  0E51  00A3               	movwf	??_checkDebounceSW2
 15667  0E52  01A4               	clrf	??_checkDebounceSW2+1
 15668  0E53  0824               	movf	??_checkDebounceSW2+1,w
 15669  0E54  00A6               	movwf	??_checkDebounceSW2+3
 15670  0E55  0858               	movf	_last_ms2,w
 15671  0E56  0223               	subwf	??_checkDebounceSW2,w
 15672  0E57  00A5               	movwf	??_checkDebounceSW2+2
 15673  0E58  1C03               	skipc
 15674  0E59  03A6               	decf	??_checkDebounceSW2+3,f
 15675  0E5A  0826               	movf	??_checkDebounceSW2+3,w
 15676  0E5B  3A80               	xorlw	128
 15677  0E5C  00A7               	movwf	??_checkDebounceSW2+4
 15678  0E5D  3080               	movlw	128
 15679  0E5E  0227               	subwf	??_checkDebounceSW2+4,w
 15680  0E5F  1D03               	skipz
 15681  0E60  2E63               	goto	u3835
 15682  0E61  300F               	movlw	15
 15683  0E62  0225               	subwf	??_checkDebounceSW2+2,w
 15684  0E63                     u3835:	
 15685  0E63  1803               	skipnc
 15686  0E64  2E66               	goto	u3831
 15687  0E65  2E67               	goto	u3830
 15688  0E66                     u3831:	
 15689  0E66  2E48               	goto	l6510
 15690  0E67                     u3830:	
 15691  0E67                     l6516:	
 15692                           
 15693                           ;main.c: 633:         return 0;
 15694  0E67  3000               	movlw	0
 15695  0E68                     l1416:	
 15696  0E68  0008               	return
 15697  0E69                     __end_of_checkDebounceSW2:	
 15698                           
 15699                           	psect	text30
 15700  0736                     __ptext30:	
 15701 ;; *************** function _checkDebounceSW1 *****************
 15702 ;; Defined at:
 15703 ;;		line 592 in file "main.c"
 15704 ;; Parameters:    Size  Location     Type
 15705 ;;		None
 15706 ;; Auto vars:     Size  Location     Type
 15707 ;;		None
 15708 ;; Return value:  Size  Location     Type
 15709 ;;                  1    wreg      unsigned char 
 15710 ;; Registers used:
 15711 ;;		wreg, status,2, status,0
 15712 ;; Tracked objects:
 15713 ;;		On entry : 0/0
 15714 ;;		On exit  : 0/0
 15715 ;;		Unchanged: 0/0
 15716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15719 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15720 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15721 ;;Total ram usage:        7 bytes
 15722 ;; Hardware stack levels used:    1
 15723 ;; Hardware stack levels required when called:    6
 15724 ;; This function calls:
 15725 ;;		Nothing
 15726 ;; This function is called by:
 15727 ;;		_config_routine
 15728 ;;		_selectSubfield
 15729 ;;		_increment_subfield
 15730 ;; This function uses a non-reentrant model
 15731 ;;
 15732                           
 15733                           
 15734                           ;psect for function _checkDebounceSW1
 15735  0736                     _checkDebounceSW1:	
 15736  0736                     l6480:	
 15737                           ;incstack = 0
 15738                           ; Regs used in _checkDebounceSW1: [wreg+status,2+status,0]
 15739                           
 15740                           
 15741                           ;main.c: 593:     PIE4bits.TMR1IE = 0;
 15742  0736  002E               	movlb	14	; select bank14
 15743  0737  101A               	bcf	26,0	;volatile
 15744  0738                     l6482:	
 15745                           
 15746                           ;main.c: 595:     if(clkms - last_ms < 0){
 15747  0738  087D               	movf	_clkms,w	;volatile
 15748  0739  0020               	movlb	0	; select bank0
 15749  073A  00A3               	movwf	??_checkDebounceSW1
 15750  073B  01A4               	clrf	??_checkDebounceSW1+1
 15751  073C  0824               	movf	??_checkDebounceSW1+1,w
 15752  073D  00A6               	movwf	??_checkDebounceSW1+3
 15753  073E  0859               	movf	_last_ms,w
 15754  073F  0223               	subwf	??_checkDebounceSW1,w
 15755  0740  00A5               	movwf	??_checkDebounceSW1+2
 15756  0741  1C03               	skipc
 15757  0742  03A6               	decf	??_checkDebounceSW1+3,f
 15758  0743  1FA6               	btfss	??_checkDebounceSW1+3,7
 15759  0744  2F46               	goto	u3781
 15760  0745  2F47               	goto	u3780
 15761  0746                     u3781:	
 15762  0746  2F6D               	goto	l6492
 15763  0747                     u3780:	
 15764  0747                     l6484:	
 15765                           
 15766                           ;main.c: 597:         if ((200 - last_ms)+ clkms > 15 ){
 15767  0747  087D               	movf	_clkms,w	;volatile
 15768  0748  00A3               	movwf	??_checkDebounceSW1
 15769  0749  01A4               	clrf	??_checkDebounceSW1+1
 15770  074A  0824               	movf	??_checkDebounceSW1+1,w
 15771  074B  00A6               	movwf	??_checkDebounceSW1+3
 15772  074C  0859               	movf	_last_ms,w
 15773  074D  0223               	subwf	??_checkDebounceSW1,w
 15774  074E  00A5               	movwf	??_checkDebounceSW1+2
 15775  074F  1C03               	skipc
 15776  0750  03A6               	decf	??_checkDebounceSW1+3,f
 15777  0751  0825               	movf	??_checkDebounceSW1+2,w
 15778  0752  3EC8               	addlw	200
 15779  0753  00A7               	movwf	??_checkDebounceSW1+4
 15780  0754  3000               	movlw	0
 15781  0755  3D26               	addwfc	??_checkDebounceSW1+3,w
 15782  0756  00A8               	movwf	??_checkDebounceSW1+5
 15783  0757  0828               	movf	??_checkDebounceSW1+5,w
 15784  0758  3A80               	xorlw	128
 15785  0759  00A9               	movwf	??_checkDebounceSW1+6
 15786  075A  3080               	movlw	128
 15787  075B  0229               	subwf	??_checkDebounceSW1+6,w
 15788  075C  1D03               	skipz
 15789  075D  2F60               	goto	u3795
 15790  075E  3010               	movlw	16
 15791  075F  0227               	subwf	??_checkDebounceSW1+4,w
 15792  0760                     u3795:	
 15793  0760  1C03               	skipc
 15794  0761  2F63               	goto	u3791
 15795  0762  2F64               	goto	u3790
 15796  0763                     u3791:	
 15797  0763  2F6D               	goto	l6492
 15798  0764                     u3790:	
 15799  0764                     l6486:	
 15800                           
 15801                           ;main.c: 598:             last_ms = clkms;
 15802  0764  087D               	movf	_clkms,w	;volatile
 15803  0765  0020               	movlb	0	; select bank0
 15804  0766  00A3               	movwf	??_checkDebounceSW1
 15805  0767  0823               	movf	??_checkDebounceSW1,w
 15806  0768  00D9               	movwf	_last_ms
 15807  0769                     l6488:	
 15808                           
 15809                           ;main.c: 599:             PIE4bits.TMR1IE = 1;
 15810  0769  002E               	movlb	14	; select bank14
 15811  076A  141A               	bsf	26,0	;volatile
 15812                           
 15813                           ;main.c: 600:             return 1;
 15814  076B  3001               	movlw	1
 15815  076C  2F8F               	goto	l1409
 15816  076D                     l6492:	
 15817                           
 15818                           ;main.c: 604:     if(clkms - last_ms < 15){
 15819  076D  087D               	movf	_clkms,w	;volatile
 15820  076E  0020               	movlb	0	; select bank0
 15821  076F  00A3               	movwf	??_checkDebounceSW1
 15822  0770  01A4               	clrf	??_checkDebounceSW1+1
 15823  0771  0824               	movf	??_checkDebounceSW1+1,w
 15824  0772  00A6               	movwf	??_checkDebounceSW1+3
 15825  0773  0859               	movf	_last_ms,w
 15826  0774  0223               	subwf	??_checkDebounceSW1,w
 15827  0775  00A5               	movwf	??_checkDebounceSW1+2
 15828  0776  1C03               	skipc
 15829  0777  03A6               	decf	??_checkDebounceSW1+3,f
 15830  0778  0826               	movf	??_checkDebounceSW1+3,w
 15831  0779  3A80               	xorlw	128
 15832  077A  00A7               	movwf	??_checkDebounceSW1+4
 15833  077B  3080               	movlw	128
 15834  077C  0227               	subwf	??_checkDebounceSW1+4,w
 15835  077D  1D03               	skipz
 15836  077E  2F81               	goto	u3805
 15837  077F  300F               	movlw	15
 15838  0780  0225               	subwf	??_checkDebounceSW1+2,w
 15839  0781                     u3805:	
 15840  0781  1803               	skipnc
 15841  0782  2F84               	goto	u3801
 15842  0783  2F85               	goto	u3800
 15843  0784                     u3801:	
 15844  0784  2F87               	goto	l6500
 15845  0785                     u3800:	
 15846  0785                     l6494:	
 15847                           
 15848                           ;main.c: 605:         return 0;
 15849  0785  3000               	movlw	0
 15850  0786  2F8F               	goto	l1409
 15851  0787                     l6500:	
 15852                           
 15853                           ;main.c: 608:         last_ms = clkms;
 15854  0787  087D               	movf	_clkms,w	;volatile
 15855  0788  0020               	movlb	0	; select bank0
 15856  0789  00A3               	movwf	??_checkDebounceSW1
 15857  078A  0823               	movf	??_checkDebounceSW1,w
 15858  078B  00D9               	movwf	_last_ms
 15859  078C                     l6502:	
 15860                           
 15861                           ;main.c: 609:         PIE4bits.TMR1IE = 1;
 15862  078C  002E               	movlb	14	; select bank14
 15863  078D  141A               	bsf	26,0	;volatile
 15864                           
 15865                           ;main.c: 610:         return 1;
 15866  078E  3001               	movlw	1
 15867  078F                     l1409:	
 15868  078F  0008               	return
 15869  0790                     __end_of_checkDebounceSW1:	
 15870                           
 15871                           	psect	text31
 15872  07EA                     __ptext31:	
 15873 ;; *************** function ___bmul *****************
 15874 ;; Defined at:
 15875 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul8.c"
 15876 ;; Parameters:    Size  Location     Type
 15877 ;;  multiplier      1    wreg     unsigned char 
 15878 ;;  multiplicand    1    3[BANK0 ] unsigned char 
 15879 ;; Auto vars:     Size  Location     Type
 15880 ;;  multiplier      1    6[BANK0 ] unsigned char 
 15881 ;;  product         1    5[BANK0 ] unsigned char 
 15882 ;; Return value:  Size  Location     Type
 15883 ;;                  1    wreg      unsigned char 
 15884 ;; Registers used:
 15885 ;;		wreg, status,2, status,0
 15886 ;; Tracked objects:
 15887 ;;		On entry : 0/0
 15888 ;;		On exit  : 0/0
 15889 ;;		Unchanged: 0/0
 15890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15891 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15892 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15893 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15894 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15895 ;;Total ram usage:        4 bytes
 15896 ;; Hardware stack levels used:    1
 15897 ;; Hardware stack levels required when called:    6
 15898 ;; This function calls:
 15899 ;;		Nothing
 15900 ;; This function is called by:
 15901 ;;		_getSubfieldInfo
 15902 ;;		_read_ring
 15903 ;; This function uses a non-reentrant model
 15904 ;;
 15905                           
 15906                           
 15907                           ;psect for function ___bmul
 15908  07EA                     ___bmul:	
 15909                           
 15910                           ;incstack = 0
 15911                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 15912                           ;___bmul@multiplier stored from wreg
 15913  07EA  0020               	movlb	0	; select bank0
 15914  07EB  00A6               	movwf	___bmul@multiplier
 15915  07EC                     l6684:	
 15916  07EC  01A5               	clrf	___bmul@product
 15917  07ED                     l6686:	
 15918  07ED  1C26               	btfss	___bmul@multiplier,0
 15919  07EE  2FF0               	goto	u4061
 15920  07EF  2FF1               	goto	u4060
 15921  07F0                     u4061:	
 15922  07F0  2FF5               	goto	l6690
 15923  07F1                     u4060:	
 15924  07F1                     l6688:	
 15925  07F1  0823               	movf	___bmul@multiplicand,w
 15926  07F2  00A4               	movwf	??___bmul
 15927  07F3  0824               	movf	??___bmul,w
 15928  07F4  07A5               	addwf	___bmul@product,f
 15929  07F5                     l6690:	
 15930  07F5  1003               	clrc
 15931  07F6  0DA3               	rlf	___bmul@multiplicand,f
 15932  07F7                     l6692:	
 15933  07F7  1003               	clrc
 15934  07F8  0CA6               	rrf	___bmul@multiplier,f
 15935  07F9  0826               	movf	___bmul@multiplier,w
 15936  07FA  1D03               	btfss	3,2
 15937  07FB  2FFD               	goto	u4071
 15938  07FC  2FFE               	goto	u4070
 15939  07FD                     u4071:	
 15940  07FD  2FED               	goto	l6686
 15941  07FE                     u4070:	
 15942  07FE                     l6694:	
 15943  07FE  0825               	movf	___bmul@product,w
 15944  07FF                     l1882:	
 15945  07FF  0008               	return
 15946  0800                     __end_of___bmul:	
 15947                           
 15948                           	psect	text32
 15949  0F58                     __ptext32:	
 15950 ;; *************** function ___awmod *****************
 15951 ;; Defined at:
 15952 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 15953 ;; Parameters:    Size  Location     Type
 15954 ;;  divisor         2    3[BANK0 ] int 
 15955 ;;  dividend        2    5[BANK0 ] int 
 15956 ;; Auto vars:     Size  Location     Type
 15957 ;;  sign            1    9[BANK0 ] unsigned char 
 15958 ;;  counter         1    8[BANK0 ] unsigned char 
 15959 ;; Return value:  Size  Location     Type
 15960 ;;                  2    3[BANK0 ] int 
 15961 ;; Registers used:
 15962 ;;		wreg, status,2, status,0
 15963 ;; Tracked objects:
 15964 ;;		On entry : 0/0
 15965 ;;		On exit  : 0/0
 15966 ;;		Unchanged: 0/0
 15967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15968 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15969 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15970 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15971 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15972 ;;Total ram usage:        7 bytes
 15973 ;; Hardware stack levels used:    1
 15974 ;; Hardware stack levels required when called:    6
 15975 ;; This function calls:
 15976 ;;		Nothing
 15977 ;; This function is called by:
 15978 ;;		_getSubfieldInfo
 15979 ;;		_recTempThresh
 15980 ;; This function uses a non-reentrant model
 15981 ;;
 15982                           
 15983                           
 15984                           ;psect for function ___awmod
 15985  0F58                     ___awmod:	
 15986  0F58                     l6698:	
 15987                           ;incstack = 0
 15988                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 15989                           
 15990  0F58  0020               	movlb	0	; select bank0
 15991  0F59  01A9               	clrf	___awmod@sign
 15992  0F5A                     l6700:	
 15993  0F5A  1FA6               	btfss	___awmod@dividend+1,7
 15994  0F5B  2F5D               	goto	u4081
 15995  0F5C  2F5E               	goto	u4080
 15996  0F5D                     u4081:	
 15997  0F5D  2F65               	goto	l6706
 15998  0F5E                     u4080:	
 15999  0F5E                     l6702:	
 16000  0F5E  09A5               	comf	___awmod@dividend,f
 16001  0F5F  09A6               	comf	___awmod@dividend+1,f
 16002  0F60  0AA5               	incf	___awmod@dividend,f
 16003  0F61  1903               	skipnz
 16004  0F62  0AA6               	incf	___awmod@dividend+1,f
 16005  0F63                     l6704:	
 16006  0F63  01A9               	clrf	___awmod@sign
 16007  0F64  0AA9               	incf	___awmod@sign,f
 16008  0F65                     l6706:	
 16009  0F65  1FA4               	btfss	___awmod@divisor+1,7
 16010  0F66  2F68               	goto	u4091
 16011  0F67  2F69               	goto	u4090
 16012  0F68                     u4091:	
 16013  0F68  2F6E               	goto	l6710
 16014  0F69                     u4090:	
 16015  0F69                     l6708:	
 16016  0F69  09A3               	comf	___awmod@divisor,f
 16017  0F6A  09A4               	comf	___awmod@divisor+1,f
 16018  0F6B  0AA3               	incf	___awmod@divisor,f
 16019  0F6C  1903               	skipnz
 16020  0F6D  0AA4               	incf	___awmod@divisor+1,f
 16021  0F6E                     l6710:	
 16022  0F6E  0823               	movf	___awmod@divisor,w
 16023  0F6F  0424               	iorwf	___awmod@divisor+1,w
 16024  0F70  1903               	btfsc	3,2
 16025  0F71  2F73               	goto	u4101
 16026  0F72  2F74               	goto	u4100
 16027  0F73                     u4101:	
 16028  0F73  2F9D               	goto	l6728
 16029  0F74                     u4100:	
 16030  0F74                     l6712:	
 16031  0F74  01A8               	clrf	___awmod@counter
 16032  0F75  0AA8               	incf	___awmod@counter,f
 16033  0F76  2F80               	goto	l6718
 16034  0F77                     l6714:	
 16035  0F77  3001               	movlw	1
 16036  0F78                     u4115:	
 16037  0F78  35A3               	lslf	___awmod@divisor,f
 16038  0F79  0DA4               	rlf	___awmod@divisor+1,f
 16039  0F7A  0B89               	decfsz	9,f
 16040  0F7B  2F78               	goto	u4115
 16041  0F7C                     l6716:	
 16042  0F7C  3001               	movlw	1
 16043  0F7D  00A7               	movwf	??___awmod
 16044  0F7E  0827               	movf	??___awmod,w
 16045  0F7F  07A8               	addwf	___awmod@counter,f
 16046  0F80                     l6718:	
 16047  0F80  1FA4               	btfss	___awmod@divisor+1,7
 16048  0F81  2F83               	goto	u4121
 16049  0F82  2F84               	goto	u4120
 16050  0F83                     u4121:	
 16051  0F83  2F77               	goto	l6714
 16052  0F84                     u4120:	
 16053  0F84                     l6720:	
 16054  0F84  0824               	movf	___awmod@divisor+1,w
 16055  0F85  0226               	subwf	___awmod@dividend+1,w
 16056  0F86  1D03               	skipz
 16057  0F87  2F8A               	goto	u4135
 16058  0F88  0823               	movf	___awmod@divisor,w
 16059  0F89  0225               	subwf	___awmod@dividend,w
 16060  0F8A                     u4135:	
 16061  0F8A  1C03               	skipc
 16062  0F8B  2F8D               	goto	u4131
 16063  0F8C  2F8E               	goto	u4130
 16064  0F8D                     u4131:	
 16065  0F8D  2F92               	goto	l6724
 16066  0F8E                     u4130:	
 16067  0F8E                     l6722:	
 16068  0F8E  0823               	movf	___awmod@divisor,w
 16069  0F8F  02A5               	subwf	___awmod@dividend,f
 16070  0F90  0824               	movf	___awmod@divisor+1,w
 16071  0F91  3BA6               	subwfb	___awmod@dividend+1,f
 16072  0F92                     l6724:	
 16073  0F92  3001               	movlw	1
 16074  0F93                     u4145:	
 16075  0F93  36A4               	lsrf	___awmod@divisor+1,f
 16076  0F94  0CA3               	rrf	___awmod@divisor,f
 16077  0F95  0B89               	decfsz	9,f
 16078  0F96  2F93               	goto	u4145
 16079  0F97                     l6726:	
 16080  0F97  3001               	movlw	1
 16081  0F98  02A8               	subwf	___awmod@counter,f
 16082  0F99  1D03               	btfss	3,2
 16083  0F9A  2F9C               	goto	u4151
 16084  0F9B  2F9D               	goto	u4150
 16085  0F9C                     u4151:	
 16086  0F9C  2F84               	goto	l6720
 16087  0F9D                     u4150:	
 16088  0F9D                     l6728:	
 16089  0F9D  0829               	movf	___awmod@sign,w
 16090  0F9E  1903               	btfsc	3,2
 16091  0F9F  2FA1               	goto	u4161
 16092  0FA0  2FA2               	goto	u4160
 16093  0FA1                     u4161:	
 16094  0FA1  2FA7               	goto	l6732
 16095  0FA2                     u4160:	
 16096  0FA2                     l6730:	
 16097  0FA2  09A5               	comf	___awmod@dividend,f
 16098  0FA3  09A6               	comf	___awmod@dividend+1,f
 16099  0FA4  0AA5               	incf	___awmod@dividend,f
 16100  0FA5  1903               	skipnz
 16101  0FA6  0AA6               	incf	___awmod@dividend+1,f
 16102  0FA7                     l6732:	
 16103  0FA7  0826               	movf	___awmod@dividend+1,w
 16104  0FA8  00A4               	movwf	?___awmod+1
 16105  0FA9  0825               	movf	___awmod@dividend,w
 16106  0FAA  00A3               	movwf	?___awmod
 16107  0FAB                     l2022:	
 16108  0FAB  0008               	return
 16109  0FAC                     __end_of___awmod:	
 16110                           
 16111                           	psect	text33
 16112  0681                     __ptext33:	
 16113 ;; *************** function _all_LED *****************
 16114 ;; Defined at:
 16115 ;;		line 20 in file "leds.c"
 16116 ;; Parameters:    Size  Location     Type
 16117 ;;		None
 16118 ;; Auto vars:     Size  Location     Type
 16119 ;;		None
 16120 ;; Return value:  Size  Location     Type
 16121 ;;                  1    wreg      void 
 16122 ;; Registers used:
 16123 ;;		wreg, status,2, status,0, pclath, cstack
 16124 ;; Tracked objects:
 16125 ;;		On entry : 0/0
 16126 ;;		On exit  : 0/0
 16127 ;;		Unchanged: 0/0
 16128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16131 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16132 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16133 ;;Total ram usage:        1 bytes
 16134 ;; Hardware stack levels used:    1
 16135 ;; Hardware stack levels required when called:    7
 16136 ;; This function calls:
 16137 ;;		_PWM6_LoadDutyValue
 16138 ;; This function is called by:
 16139 ;;		_config_routine
 16140 ;;		_selectSubfield
 16141 ;; This function uses a non-reentrant model
 16142 ;;
 16143                           
 16144                           
 16145                           ;psect for function _all_LED
 16146  0681                     _all_LED:	
 16147  0681                     l1646:	
 16148                           ;incstack = 0
 16149                           ; Regs used in _all_LED: [wreg+status,2+status,0+pclath+cstack]
 16150                           ;leds.c: 22:     do { LATAbits.LATA7 = 1; } while(0);
 16151                           
 16152  0681  0020               	movlb	0	; select bank0
 16153  0682  1796               	bsf	22,7	;volatile
 16154  0683                     l6764:	
 16155                           
 16156                           ;leds.c: 23:     _delay((unsigned long)((100)*(1000000/4000.0)));
 16157  0683  3021               	movlw	33
 16158  0684  0020               	movlb	0	; select bank0
 16159  0685  00AD               	movwf	??_all_LED
 16160  0686  3076               	movlw	118
 16161  0687                     u5137:	
 16162  0687  0B89               	decfsz	9,f
 16163  0688  2E87               	goto	u5137
 16164  0689  0BAD               	decfsz	??_all_LED,f
 16165  068A  2E87               	goto	u5137
 16166  068B  0000               	nop
 16167  068C                     l6766:	
 16168  068C  0020               	movlb	0	; select bank0
 16169  068D  1396               	bcf	22,7	;volatile
 16170  068E                     l1649:	
 16171                           
 16172                           ;leds.c: 25:     _delay((unsigned long)((100)*(1000000/4000.0)));
 16173  068E  3021               	movlw	33
 16174  068F  0020               	movlb	0	; select bank0
 16175  0690  00AD               	movwf	??_all_LED
 16176  0691  3076               	movlw	118
 16177  0692                     u5147:	
 16178  0692  0B89               	decfsz	9,f
 16179  0693  2E92               	goto	u5147
 16180  0694  0BAD               	decfsz	??_all_LED,f
 16181  0695  2E92               	goto	u5147
 16182  0696  0000               	nop
 16183  0697                     l6768:	
 16184                           
 16185                           ;leds.c: 26:     PWM6_LoadDutyValue(1023);
 16186  0697  30FF               	movlw	255
 16187  0698  0020               	movlb	0	; select bank0
 16188  0699  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 16189  069A  3003               	movlw	3
 16190  069B  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 16191  069C  3189  21F8  3186   	fcall	_PWM6_LoadDutyValue
 16192  069F                     l6770:	
 16193                           
 16194                           ;leds.c: 27:     _delay((unsigned long)((100)*(1000000/4000.0)));
 16195  069F  3021               	movlw	33
 16196  06A0  0020               	movlb	0	; select bank0
 16197  06A1  00AD               	movwf	??_all_LED
 16198  06A2  3076               	movlw	118
 16199  06A3                     u5157:	
 16200  06A3  0B89               	decfsz	9,f
 16201  06A4  2EA3               	goto	u5157
 16202  06A5  0BAD               	decfsz	??_all_LED,f
 16203  06A6  2EA3               	goto	u5157
 16204  06A7  0000               	nop
 16205                           
 16206                           ;leds.c: 28:     PWM6_LoadDutyValue(0);
 16207  06A8  3000               	movlw	0
 16208  06A9  0020               	movlb	0	; select bank0
 16209  06AA  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 16210  06AB  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 16211  06AC  3189  21F8  3186   	fcall	_PWM6_LoadDutyValue
 16212  06AF                     l6772:	
 16213                           
 16214                           ;leds.c: 29:     _delay((unsigned long)((100)*(1000000/4000.0)));
 16215  06AF  3021               	movlw	33
 16216  06B0  0020               	movlb	0	; select bank0
 16217  06B1  00AD               	movwf	??_all_LED
 16218  06B2  3076               	movlw	118
 16219  06B3                     u5167:	
 16220  06B3  0B89               	decfsz	9,f
 16221  06B4  2EB3               	goto	u5167
 16222  06B5  0BAD               	decfsz	??_all_LED,f
 16223  06B6  2EB3               	goto	u5167
 16224  06B7  0000               	nop
 16225  06B8                     l6774:	
 16226  06B8  0020               	movlb	0	; select bank0
 16227  06B9  1696               	bsf	22,5	;volatile
 16228  06BA                     l6776:	
 16229                           
 16230                           ;leds.c: 31:     _delay((unsigned long)((100)*(1000000/4000.0)));
 16231  06BA  3021               	movlw	33
 16232  06BB  0020               	movlb	0	; select bank0
 16233  06BC  00AD               	movwf	??_all_LED
 16234  06BD  3076               	movlw	118
 16235  06BE                     u5177:	
 16236  06BE  0B89               	decfsz	9,f
 16237  06BF  2EBE               	goto	u5177
 16238  06C0  0BAD               	decfsz	??_all_LED,f
 16239  06C1  2EBE               	goto	u5177
 16240  06C2  0000               	nop
 16241  06C3                     l6778:	
 16242  06C3  0020               	movlb	0	; select bank0
 16243  06C4  1296               	bcf	22,5	;volatile
 16244  06C5                     l6780:	
 16245                           
 16246                           ;leds.c: 33:     _delay((unsigned long)((100)*(1000000/4000.0)));
 16247  06C5  3021               	movlw	33
 16248  06C6  0020               	movlb	0	; select bank0
 16249  06C7  00AD               	movwf	??_all_LED
 16250  06C8  3076               	movlw	118
 16251  06C9                     u5187:	
 16252  06C9  0B89               	decfsz	9,f
 16253  06CA  2EC9               	goto	u5187
 16254  06CB  0BAD               	decfsz	??_all_LED,f
 16255  06CC  2EC9               	goto	u5187
 16256  06CD  0000               	nop
 16257  06CE                     l6782:	
 16258  06CE  0020               	movlb	0	; select bank0
 16259  06CF  1616               	bsf	22,4	;volatile
 16260  06D0                     l6784:	
 16261                           
 16262                           ;leds.c: 35:     _delay((unsigned long)((100)*(1000000/4000.0)));
 16263  06D0  3021               	movlw	33
 16264  06D1  0020               	movlb	0	; select bank0
 16265  06D2  00AD               	movwf	??_all_LED
 16266  06D3  3076               	movlw	118
 16267  06D4                     u5197:	
 16268  06D4  0B89               	decfsz	9,f
 16269  06D5  2ED4               	goto	u5197
 16270  06D6  0BAD               	decfsz	??_all_LED,f
 16271  06D7  2ED4               	goto	u5197
 16272  06D8  0000               	nop
 16273  06D9                     l6786:	
 16274  06D9  0020               	movlb	0	; select bank0
 16275  06DA  1216               	bcf	22,4	;volatile
 16276  06DB                     l1658:	
 16277  06DB  0008               	return
 16278  06DC                     __end_of_all_LED:	
 16279                           
 16280                           	psect	text34
 16281  0AF1                     __ptext34:	
 16282 ;; *************** function _mode_select_LED *****************
 16283 ;; Defined at:
 16284 ;;		line 98 in file "leds.c"
 16285 ;; Parameters:    Size  Location     Type
 16286 ;;		None
 16287 ;; Auto vars:     Size  Location     Type
 16288 ;;		None
 16289 ;; Return value:  Size  Location     Type
 16290 ;;                  1    wreg      void 
 16291 ;; Registers used:
 16292 ;;		wreg, status,2, status,0, pclath, cstack
 16293 ;; Tracked objects:
 16294 ;;		On entry : 0/0
 16295 ;;		On exit  : 0/0
 16296 ;;		Unchanged: 0/0
 16297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16300 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16301 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16302 ;;Total ram usage:        1 bytes
 16303 ;; Hardware stack levels used:    1
 16304 ;; Hardware stack levels required when called:    7
 16305 ;; This function calls:
 16306 ;;		_PWM6_LoadDutyValue
 16307 ;; This function is called by:
 16308 ;;		_config_routine
 16309 ;; This function uses a non-reentrant model
 16310 ;;
 16311                           
 16312                           
 16313                           ;psect for function _mode_select_LED
 16314  0AF1                     _mode_select_LED:	
 16315  0AF1                     l7018:	
 16316                           ;incstack = 0
 16317                           ; Regs used in _mode_select_LED: [wreg+status,2+status,0+pclath+cstack]
 16318                           
 16319                           
 16320                           ;leds.c: 101:     PWM6_LoadDutyValue(1023);
 16321  0AF1  30FF               	movlw	255
 16322  0AF2  0020               	movlb	0	; select bank0
 16323  0AF3  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 16324  0AF4  3003               	movlw	3
 16325  0AF5  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 16326  0AF6  3189  21F8  318A   	fcall	_PWM6_LoadDutyValue
 16327  0AF9                     l7020:	
 16328  0AF9  0020               	movlb	0	; select bank0
 16329  0AFA  1616               	bsf	22,4	;volatile
 16330  0AFB                     l7022:	
 16331                           
 16332                           ;leds.c: 103:     _delay((unsigned long)((500)*(1000000/4000.0)));
 16333  0AFB  30A3               	movlw	163
 16334  0AFC  0020               	movlb	0	; select bank0
 16335  0AFD  00AD               	movwf	??_mode_select_LED
 16336  0AFE  3055               	movlw	85
 16337  0AFF                     u5207:	
 16338  0AFF  0B89               	decfsz	9,f
 16339  0B00  2AFF               	goto	u5207
 16340  0B01  0BAD               	decfsz	??_mode_select_LED,f
 16341  0B02  2AFF               	goto	u5207
 16342  0B03                     l7024:	
 16343  0B03  0020               	movlb	0	; select bank0
 16344  0B04  1696               	bsf	22,5	;volatile
 16345  0B05                     l7026:	
 16346                           
 16347                           ;leds.c: 105:     _delay((unsigned long)((500)*(1000000/4000.0)));
 16348  0B05  30A3               	movlw	163
 16349  0B06  0020               	movlb	0	; select bank0
 16350  0B07  00AD               	movwf	??_mode_select_LED
 16351  0B08  3055               	movlw	85
 16352  0B09                     u5217:	
 16353  0B09  0B89               	decfsz	9,f
 16354  0B0A  2B09               	goto	u5217
 16355  0B0B  0BAD               	decfsz	??_mode_select_LED,f
 16356  0B0C  2B09               	goto	u5217
 16357  0B0D                     l7028:	
 16358  0B0D  0020               	movlb	0	; select bank0
 16359  0B0E  1216               	bcf	22,4	;volatile
 16360  0B0F                     l7030:	
 16361  0B0F  1296               	bcf	22,5	;volatile
 16362  0B10                     l1690:	
 16363  0B10  0008               	return
 16364  0B11                     __end_of_mode_select_LED:	
 16365                           
 16366                           	psect	text35
 16367  09F8                     __ptext35:	
 16368 ;; *************** function _PWM6_LoadDutyValue *****************
 16369 ;; Defined at:
 16370 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 16371 ;; Parameters:    Size  Location     Type
 16372 ;;  dutyValue       2    9[BANK0 ] unsigned short 
 16373 ;; Auto vars:     Size  Location     Type
 16374 ;;		None
 16375 ;; Return value:  Size  Location     Type
 16376 ;;                  1    wreg      void 
 16377 ;; Registers used:
 16378 ;;		wreg, status,2, status,0
 16379 ;; Tracked objects:
 16380 ;;		On entry : 0/0
 16381 ;;		On exit  : 0/0
 16382 ;;		Unchanged: 0/0
 16383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16384 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16386 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16387 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16388 ;;Total ram usage:        4 bytes
 16389 ;; Hardware stack levels used:    1
 16390 ;; Hardware stack levels required when called:    6
 16391 ;; This function calls:
 16392 ;;		Nothing
 16393 ;; This function is called by:
 16394 ;;		_main
 16395 ;;		_increment_subfield
 16396 ;;		_all_LED
 16397 ;;		_mod1_LED
 16398 ;;		_mod2_LED
 16399 ;;		_mod3_LED
 16400 ;;		_mod4_LED
 16401 ;;		_mode_select_LED
 16402 ;;		_representLed
 16403 ;; This function uses a non-reentrant model
 16404 ;;
 16405                           
 16406                           
 16407                           ;psect for function _PWM6_LoadDutyValue
 16408  09F8                     _PWM6_LoadDutyValue:	
 16409  09F8                     l6464:	
 16410                           ;incstack = 0
 16411                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 16412                           
 16413                           
 16414                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 16415  09F8  0020               	movlb	0	; select bank0
 16416  09F9  082A               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 16417  09FA  00AC               	movwf	??_PWM6_LoadDutyValue+1
 16418  09FB  0829               	movf	PWM6_LoadDutyValue@dutyValue,w
 16419  09FC  00AB               	movwf	??_PWM6_LoadDutyValue
 16420  09FD  36AC               	lsrf	??_PWM6_LoadDutyValue+1,f
 16421  09FE  0CAB               	rrf	??_PWM6_LoadDutyValue,f
 16422  09FF  36AC               	lsrf	??_PWM6_LoadDutyValue+1,f
 16423  0A00  0CAB               	rrf	??_PWM6_LoadDutyValue,f
 16424  0A01  082B               	movf	??_PWM6_LoadDutyValue,w
 16425  0A02  0027               	movlb	7	; select bank7
 16426  0A03  008D               	movwf	13	;volatile
 16427                           
 16428                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 16429  0A04  0020               	movlb	0	; select bank0
 16430  0A05  0829               	movf	PWM6_LoadDutyValue@dutyValue,w
 16431  0A06  3903               	andlw	3
 16432  0A07  00AB               	movwf	??_PWM6_LoadDutyValue
 16433  0A08  3005               	movlw	5
 16434  0A09                     u3735:	
 16435  0A09  35AB               	lslf	??_PWM6_LoadDutyValue,f
 16436  0A0A  3EFF               	addlw	-1
 16437  0A0B  1D03               	skipz
 16438  0A0C  2A09               	goto	u3735
 16439  0A0D  352B               	lslf	??_PWM6_LoadDutyValue,w
 16440  0A0E  0027               	movlb	7	; select bank7
 16441  0A0F  008C               	movwf	12	;volatile
 16442  0A10                     l964:	
 16443  0A10  0008               	return
 16444  0A11                     __end_of_PWM6_LoadDutyValue:	
 16445                           
 16446                           	psect	text36
 16447  1771                     __ptext36:	
 16448 ;; *************** function _TMR0_StartTimer *****************
 16449 ;; Defined at:
 16450 ;;		line 87 in file "mcc_generated_files/tmr0.c"
 16451 ;; Parameters:    Size  Location     Type
 16452 ;;		None
 16453 ;; Auto vars:     Size  Location     Type
 16454 ;;		None
 16455 ;; Return value:  Size  Location     Type
 16456 ;;                  1    wreg      void 
 16457 ;; Registers used:
 16458 ;;		None
 16459 ;; Tracked objects:
 16460 ;;		On entry : 0/0
 16461 ;;		On exit  : 0/0
 16462 ;;		Unchanged: 0/0
 16463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16468 ;;Total ram usage:        0 bytes
 16469 ;; Hardware stack levels used:    1
 16470 ;; Hardware stack levels required when called:    6
 16471 ;; This function calls:
 16472 ;;		Nothing
 16473 ;; This function is called by:
 16474 ;;		_main
 16475 ;; This function uses a non-reentrant model
 16476 ;;
 16477                           
 16478                           
 16479                           ;psect for function _TMR0_StartTimer
 16480  1771                     _TMR0_StartTimer:	
 16481  1771                     l7170:	
 16482                           ;incstack = 0
 16483                           ; Regs used in _TMR0_StartTimer: []
 16484                           
 16485                           
 16486                           ;mcc_generated_files/tmr0.c: 90:     T0CON0bits.T0EN = 1;
 16487  1771  0020               	movlb	0	; select bank0
 16488  1772  179E               	bsf	30,7	;volatile
 16489  1773                     l864:	
 16490  1773  0008               	return
 16491  1774                     __end_of_TMR0_StartTimer:	
 16492                           
 16493                           	psect	text37
 16494  0A7B                     __ptext37:	
 16495 ;; *************** function _SYSTEM_Initialize *****************
 16496 ;; Defined at:
 16497 ;;		line 50 in file "mcc_generated_files/mcc.c"
 16498 ;; Parameters:    Size  Location     Type
 16499 ;;		None
 16500 ;; Auto vars:     Size  Location     Type
 16501 ;;		None
 16502 ;; Return value:  Size  Location     Type
 16503 ;;                  1    wreg      void 
 16504 ;; Registers used:
 16505 ;;		wreg, status,2, status,0, pclath, cstack
 16506 ;; Tracked objects:
 16507 ;;		On entry : 0/0
 16508 ;;		On exit  : 0/0
 16509 ;;		Unchanged: 0/0
 16510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16515 ;;Total ram usage:        0 bytes
 16516 ;; Hardware stack levels used:    1
 16517 ;; Hardware stack levels required when called:    8
 16518 ;; This function calls:
 16519 ;;		_ADCC_Initialize
 16520 ;;		_EXT_INT_Initialize
 16521 ;;		_OSCILLATOR_Initialize
 16522 ;;		_PIN_MANAGER_Initialize
 16523 ;;		_PMD_Initialize
 16524 ;;		_PWM6_Initialize
 16525 ;;		_TMR0_Initialize
 16526 ;;		_TMR1_Initialize
 16527 ;;		_TMR2_Initialize
 16528 ;; This function is called by:
 16529 ;;		_main
 16530 ;; This function uses a non-reentrant model
 16531 ;;
 16532                           
 16533                           
 16534                           ;psect for function _SYSTEM_Initialize
 16535  0A7B                     _SYSTEM_Initialize:	
 16536  0A7B                     l7152:	
 16537                           ;incstack = 0
 16538                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16539                           
 16540                           
 16541                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 16542  0A7B  3197  27E6  318A   	fcall	_PMD_Initialize
 16543  0A7E                     l7154:	
 16544                           
 16545                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 16546  0A7E  318D  2589  318A   	fcall	_PIN_MANAGER_Initialize
 16547  0A81                     l7156:	
 16548                           
 16549                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 16550  0A81  3188  2010  318A   	fcall	_OSCILLATOR_Initialize
 16551  0A84                     l7158:	
 16552                           
 16553                           ;mcc_generated_files/mcc.c: 55:     PWM6_Initialize();
 16554  0A84  3188  209A  318A   	fcall	_PWM6_Initialize
 16555  0A87                     l7160:	
 16556                           
 16557                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 16558  0A87  3189  2182  318A   	fcall	_ADCC_Initialize
 16559  0A8A                     l7162:	
 16560                           
 16561                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
 16562  0A8A  3189  21C7  318A   	fcall	_TMR2_Initialize
 16563  0A8D                     l7164:	
 16564                           
 16565                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
 16566  0A8D  318A  22B3  318A   	fcall	_TMR1_Initialize
 16567  0A90                     l7166:	
 16568                           
 16569                           ;mcc_generated_files/mcc.c: 59:     EXT_INT_Initialize();
 16570  0A90  3188  20A7  318A   	fcall	_EXT_INT_Initialize
 16571  0A93                     l7168:	
 16572                           
 16573                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
 16574  0A93  3189  2157  318A   	fcall	_TMR0_Initialize
 16575  0A96                     l439:	
 16576  0A96  0008               	return
 16577  0A97                     __end_of_SYSTEM_Initialize:	
 16578                           
 16579                           	psect	text38
 16580  09C7                     __ptext38:	
 16581 ;; *************** function _TMR2_Initialize *****************
 16582 ;; Defined at:
 16583 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 16584 ;; Parameters:    Size  Location     Type
 16585 ;;		None
 16586 ;; Auto vars:     Size  Location     Type
 16587 ;;		None
 16588 ;; Return value:  Size  Location     Type
 16589 ;;                  1    wreg      void 
 16590 ;; Registers used:
 16591 ;;		wreg, status,2, status,0, pclath, cstack
 16592 ;; Tracked objects:
 16593 ;;		On entry : 0/0
 16594 ;;		On exit  : 0/0
 16595 ;;		Unchanged: 0/0
 16596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16601 ;;Total ram usage:        0 bytes
 16602 ;; Hardware stack levels used:    1
 16603 ;; Hardware stack levels required when called:    7
 16604 ;; This function calls:
 16605 ;;		_TMR2_SetInterruptHandler
 16606 ;; This function is called by:
 16607 ;;		_SYSTEM_Initialize
 16608 ;; This function uses a non-reentrant model
 16609 ;;
 16610                           
 16611                           
 16612                           ;psect for function _TMR2_Initialize
 16613  09C7                     _TMR2_Initialize:	
 16614  09C7                     l6958:	
 16615                           ;incstack = 0
 16616                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16617                           
 16618                           
 16619                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
 16620  09C7  3001               	movlw	1
 16621  09C8  0025               	movlb	5	; select bank5
 16622  09C9  0090               	movwf	16	;volatile
 16623                           
 16624                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x20;
 16625  09CA  3020               	movlw	32
 16626  09CB  008F               	movwf	15	;volatile
 16627  09CC                     l6960:	
 16628                           
 16629                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
 16630  09CC  0191               	clrf	17	;volatile
 16631  09CD                     l6962:	
 16632                           
 16633                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x9B;
 16634  09CD  309B               	movlw	155
 16635  09CE  008D               	movwf	13	;volatile
 16636                           
 16637                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
 16638  09CF  018C               	clrf	12	;volatile
 16639  09D0                     l6964:	
 16640                           
 16641                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
 16642  09D0  002E               	movlb	14	; select bank14
 16643  09D1  1090               	bcf	16,1	;volatile
 16644  09D2                     l6966:	
 16645                           
 16646                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
 16647  09D2  149A               	bsf	26,1	;volatile
 16648  09D3                     l6968:	
 16649                           
 16650                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 16651  09D3  3053               	movlw	low _TMR2_DefaultInterruptHandler
 16652  09D4  0020               	movlb	0	; select bank0
 16653  09D5  00A3               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 16654  09D6  3017               	movlw	high _TMR2_DefaultInterruptHandler
 16655  09D7  00A4               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 16656  09D8  3188  202B  3189   	fcall	_TMR2_SetInterruptHandler
 16657  09DB                     l6970:	
 16658                           
 16659                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xB1;
 16660  09DB  30B1               	movlw	177
 16661  09DC  0025               	movlb	5	; select bank5
 16662  09DD  008E               	movwf	14	;volatile
 16663  09DE                     l1046:	
 16664  09DE  0008               	return
 16665  09DF                     __end_of_TMR2_Initialize:	
 16666                           
 16667                           	psect	text39
 16668  082B                     __ptext39:	
 16669 ;; *************** function _TMR2_SetInterruptHandler *****************
 16670 ;; Defined at:
 16671 ;;		line 178 in file "mcc_generated_files/tmr2.c"
 16672 ;; Parameters:    Size  Location     Type
 16673 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 16674 ;;		 -> handler_clock_ms(1), TMR2_DefaultInterruptHandler(1), 
 16675 ;; Auto vars:     Size  Location     Type
 16676 ;;		None
 16677 ;; Return value:  Size  Location     Type
 16678 ;;                  1    wreg      void 
 16679 ;; Registers used:
 16680 ;;		wreg
 16681 ;; Tracked objects:
 16682 ;;		On entry : 0/0
 16683 ;;		On exit  : 0/0
 16684 ;;		Unchanged: 0/0
 16685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16686 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16689 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16690 ;;Total ram usage:        2 bytes
 16691 ;; Hardware stack levels used:    1
 16692 ;; Hardware stack levels required when called:    6
 16693 ;; This function calls:
 16694 ;;		Nothing
 16695 ;; This function is called by:
 16696 ;;		_TMR2_Initialize
 16697 ;;		_main
 16698 ;; This function uses a non-reentrant model
 16699 ;;
 16700                           
 16701                           
 16702                           ;psect for function _TMR2_SetInterruptHandler
 16703  082B                     _TMR2_SetInterruptHandler:	
 16704  082B                     l6762:	
 16705                           ;incstack = 0
 16706                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 16707                           
 16708                           
 16709                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
 16710  082B  0020               	movlb	0	; select bank0
 16711  082C  0824               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 16712  082D  0021               	movlb	1	; select bank1
 16713  082E  00D9               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
 16714  082F  0020               	movlb	0	; select bank0
 16715  0830  0823               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 16716  0831  0021               	movlb	1	; select bank1
 16717  0832  00D8               	movwf	_TMR2_InterruptHandler^(0+128)
 16718  0833                     l1089:	
 16719  0833  0008               	return
 16720  0834                     __end_of_TMR2_SetInterruptHandler:	
 16721                           
 16722                           	psect	text40
 16723  0AB3                     __ptext40:	
 16724 ;; *************** function _TMR1_Initialize *****************
 16725 ;; Defined at:
 16726 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 16727 ;; Parameters:    Size  Location     Type
 16728 ;;		None
 16729 ;; Auto vars:     Size  Location     Type
 16730 ;;		None
 16731 ;; Return value:  Size  Location     Type
 16732 ;;                  1    wreg      void 
 16733 ;; Registers used:
 16734 ;;		wreg, status,2, status,0, pclath, cstack
 16735 ;; Tracked objects:
 16736 ;;		On entry : 0/0
 16737 ;;		On exit  : 0/0
 16738 ;;		Unchanged: 0/0
 16739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16744 ;;Total ram usage:        0 bytes
 16745 ;; Hardware stack levels used:    1
 16746 ;; Hardware stack levels required when called:    7
 16747 ;; This function calls:
 16748 ;;		_TMR1_SetInterruptHandler
 16749 ;; This function is called by:
 16750 ;;		_SYSTEM_Initialize
 16751 ;; This function uses a non-reentrant model
 16752 ;;
 16753                           
 16754                           
 16755                           ;psect for function _TMR1_Initialize
 16756  0AB3                     _TMR1_Initialize:	
 16757  0AB3                     l6972:	
 16758                           ;incstack = 0
 16759                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16760                           
 16761                           
 16762                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 16763  0AB3  0024               	movlb	4	; select bank4
 16764  0AB4  018F               	clrf	15	;volatile
 16765                           
 16766                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 16767  0AB5  0190               	clrf	16	;volatile
 16768  0AB6                     l6974:	
 16769                           
 16770                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
 16771  0AB6  3004               	movlw	4
 16772  0AB7  0091               	movwf	17	;volatile
 16773  0AB8                     l6976:	
 16774                           
 16775                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xE1;
 16776  0AB8  30E1               	movlw	225
 16777  0AB9  008D               	movwf	13	;volatile
 16778  0ABA                     l6978:	
 16779                           
 16780                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xBA;
 16781  0ABA  30BA               	movlw	186
 16782  0ABB  008C               	movwf	12	;volatile
 16783  0ABC                     l6980:	
 16784                           
 16785                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 16786  0ABC  080D               	movf	13,w	;volatile
 16787  0ABD  0020               	movlb	0	; select bank0
 16788  0ABE  00E9               	movwf	_timer1ReloadVal+1	;volatile
 16789  0ABF  0024               	movlb	4	; select bank4
 16790  0AC0  080C               	movf	12,w	;volatile
 16791  0AC1  0020               	movlb	0	; select bank0
 16792  0AC2  00E8               	movwf	_timer1ReloadVal	;volatile
 16793  0AC3                     l6982:	
 16794                           
 16795                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
 16796  0AC3  002E               	movlb	14	; select bank14
 16797  0AC4  1010               	bcf	16,0	;volatile
 16798  0AC5                     l6984:	
 16799                           
 16800                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 16801  0AC5  141A               	bsf	26,0	;volatile
 16802  0AC6                     l6986:	
 16803                           
 16804                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 16805  0AC6  3052               	movlw	low _TMR1_DefaultInterruptHandler
 16806  0AC7  0020               	movlb	0	; select bank0
 16807  0AC8  00A3               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 16808  0AC9  3017               	movlw	high _TMR1_DefaultInterruptHandler
 16809  0ACA  00A4               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 16810  0ACB  3188  2022  318A   	fcall	_TMR1_SetInterruptHandler
 16811  0ACE                     l6988:	
 16812                           
 16813                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x15;
 16814  0ACE  3015               	movlw	21
 16815  0ACF  0024               	movlb	4	; select bank4
 16816  0AD0  008E               	movwf	14	;volatile
 16817  0AD1                     l917:	
 16818  0AD1  0008               	return
 16819  0AD2                     __end_of_TMR1_Initialize:	
 16820                           
 16821                           	psect	text41
 16822  0822                     __ptext41:	
 16823 ;; *************** function _TMR1_SetInterruptHandler *****************
 16824 ;; Defined at:
 16825 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 16826 ;; Parameters:    Size  Location     Type
 16827 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 16828 ;;		 -> handler_clock_hms(1), TMR1_DefaultInterruptHandler(1), 
 16829 ;; Auto vars:     Size  Location     Type
 16830 ;;		None
 16831 ;; Return value:  Size  Location     Type
 16832 ;;                  1    wreg      void 
 16833 ;; Registers used:
 16834 ;;		wreg
 16835 ;; Tracked objects:
 16836 ;;		On entry : 0/0
 16837 ;;		On exit  : 0/0
 16838 ;;		Unchanged: 0/0
 16839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16840 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16843 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16844 ;;Total ram usage:        2 bytes
 16845 ;; Hardware stack levels used:    1
 16846 ;; Hardware stack levels required when called:    6
 16847 ;; This function calls:
 16848 ;;		Nothing
 16849 ;; This function is called by:
 16850 ;;		_TMR1_Initialize
 16851 ;;		_main
 16852 ;; This function uses a non-reentrant model
 16853 ;;
 16854                           
 16855                           
 16856                           ;psect for function _TMR1_SetInterruptHandler
 16857  0822                     _TMR1_SetInterruptHandler:	
 16858  0822                     l6740:	
 16859                           ;incstack = 0
 16860                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 16861                           
 16862                           
 16863                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
 16864  0822  0020               	movlb	0	; select bank0
 16865  0823  0824               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 16866  0824  0021               	movlb	1	; select bank1
 16867  0825  00DB               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 16868  0826  0020               	movlb	0	; select bank0
 16869  0827  0823               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 16870  0828  0021               	movlb	1	; select bank1
 16871  0829  00DA               	movwf	_TMR1_InterruptHandler^(0+128)
 16872  082A                     l947:	
 16873  082A  0008               	return
 16874  082B                     __end_of_TMR1_SetInterruptHandler:	
 16875                           
 16876                           	psect	text42
 16877  0957                     __ptext42:	
 16878 ;; *************** function _TMR0_Initialize *****************
 16879 ;; Defined at:
 16880 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 16881 ;; Parameters:    Size  Location     Type
 16882 ;;		None
 16883 ;; Auto vars:     Size  Location     Type
 16884 ;;		None
 16885 ;; Return value:  Size  Location     Type
 16886 ;;                  1    wreg      void 
 16887 ;; Registers used:
 16888 ;;		wreg, status,2, status,0, pclath, cstack
 16889 ;; Tracked objects:
 16890 ;;		On entry : 0/0
 16891 ;;		On exit  : 0/0
 16892 ;;		Unchanged: 0/0
 16893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16898 ;;Total ram usage:        0 bytes
 16899 ;; Hardware stack levels used:    1
 16900 ;; Hardware stack levels required when called:    7
 16901 ;; This function calls:
 16902 ;;		_TMR0_SetInterruptHandler
 16903 ;; This function is called by:
 16904 ;;		_SYSTEM_Initialize
 16905 ;; This function uses a non-reentrant model
 16906 ;;
 16907                           
 16908                           
 16909                           ;psect for function _TMR0_Initialize
 16910  0957                     _TMR0_Initialize:	
 16911  0957                     l6990:	
 16912                           ;incstack = 0
 16913                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16914                           
 16915                           
 16916                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x96;
 16917  0957  3096               	movlw	150
 16918  0958  0020               	movlb	0	; select bank0
 16919  0959  009F               	movwf	31	;volatile
 16920                           
 16921                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0x90;
 16922  095A  3090               	movlw	144
 16923  095B  009D               	movwf	29	;volatile
 16924  095C                     l6992:	
 16925                           
 16926                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 16927  095C  019C               	clrf	28	;volatile
 16928  095D                     l6994:	
 16929                           
 16930                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 16931  095D  002E               	movlb	14	; select bank14
 16932  095E  128C               	bcf	12,5	;volatile
 16933  095F                     l6996:	
 16934                           
 16935                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 16936  095F  1696               	bsf	22,5	;volatile
 16937  0960                     l6998:	
 16938                           
 16939                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 16940  0960  3051               	movlw	low _TMR0_DefaultInterruptHandler
 16941  0961  0020               	movlb	0	; select bank0
 16942  0962  00A3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 16943  0963  3017               	movlw	high _TMR0_DefaultInterruptHandler
 16944  0964  00A4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 16945  0965  3188  2019  3189   	fcall	_TMR0_SetInterruptHandler
 16946  0968                     l7000:	
 16947                           
 16948                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x09;
 16949  0968  3009               	movlw	9
 16950  0969  0020               	movlb	0	; select bank0
 16951  096A  009E               	movwf	30	;volatile
 16952  096B                     l861:	
 16953  096B  0008               	return
 16954  096C                     __end_of_TMR0_Initialize:	
 16955                           
 16956                           	psect	text43
 16957  0819                     __ptext43:	
 16958 ;; *************** function _TMR0_SetInterruptHandler *****************
 16959 ;; Defined at:
 16960 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 16961 ;; Parameters:    Size  Location     Type
 16962 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 16963 ;;		 -> ISR_3s(1), TMR0_DefaultInterruptHandler(1), 
 16964 ;; Auto vars:     Size  Location     Type
 16965 ;;		None
 16966 ;; Return value:  Size  Location     Type
 16967 ;;                  1    wreg      void 
 16968 ;; Registers used:
 16969 ;;		wreg
 16970 ;; Tracked objects:
 16971 ;;		On entry : 0/0
 16972 ;;		On exit  : 0/0
 16973 ;;		Unchanged: 0/0
 16974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16975 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16978 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16979 ;;Total ram usage:        2 bytes
 16980 ;; Hardware stack levels used:    1
 16981 ;; Hardware stack levels required when called:    6
 16982 ;; This function calls:
 16983 ;;		Nothing
 16984 ;; This function is called by:
 16985 ;;		_TMR0_Initialize
 16986 ;;		_main
 16987 ;; This function uses a non-reentrant model
 16988 ;;
 16989                           
 16990                           
 16991                           ;psect for function _TMR0_SetInterruptHandler
 16992  0819                     _TMR0_SetInterruptHandler:	
 16993  0819                     l6738:	
 16994                           ;incstack = 0
 16995                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 16996                           
 16997                           
 16998                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 16999  0819  0020               	movlb	0	; select bank0
 17000  081A  0824               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 17001  081B  0021               	movlb	1	; select bank1
 17002  081C  00DD               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 17003  081D  0020               	movlb	0	; select bank0
 17004  081E  0823               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 17005  081F  0021               	movlb	1	; select bank1
 17006  0820  00DC               	movwf	_TMR0_InterruptHandler^(0+128)
 17007  0821                     l883:	
 17008  0821  0008               	return
 17009  0822                     __end_of_TMR0_SetInterruptHandler:	
 17010                           
 17011                           	psect	text44
 17012  089A                     __ptext44:	
 17013 ;; *************** function _PWM6_Initialize *****************
 17014 ;; Defined at:
 17015 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 17016 ;; Parameters:    Size  Location     Type
 17017 ;;		None
 17018 ;; Auto vars:     Size  Location     Type
 17019 ;;		None
 17020 ;; Return value:  Size  Location     Type
 17021 ;;                  1    wreg      void 
 17022 ;; Registers used:
 17023 ;;		wreg, status,2, status,0
 17024 ;; Tracked objects:
 17025 ;;		On entry : 0/0
 17026 ;;		On exit  : 0/0
 17027 ;;		Unchanged: 0/0
 17028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17033 ;;Total ram usage:        0 bytes
 17034 ;; Hardware stack levels used:    1
 17035 ;; Hardware stack levels required when called:    6
 17036 ;; This function calls:
 17037 ;;		Nothing
 17038 ;; This function is called by:
 17039 ;;		_SYSTEM_Initialize
 17040 ;; This function uses a non-reentrant model
 17041 ;;
 17042                           
 17043                           
 17044                           ;psect for function _PWM6_Initialize
 17045  089A                     _PWM6_Initialize:	
 17046  089A                     l6948:	
 17047                           ;incstack = 0
 17048                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 17049                           
 17050                           
 17051                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 17052  089A  3080               	movlw	128
 17053  089B  0027               	movlb	7	; select bank7
 17054  089C  008E               	movwf	14	;volatile
 17055                           
 17056                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x3E;
 17057  089D  303E               	movlw	62
 17058  089E  008D               	movwf	13	;volatile
 17059                           
 17060                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 17061  089F  3040               	movlw	64
 17062  08A0  008C               	movwf	12	;volatile
 17063  08A1                     l6950:	
 17064                           
 17065                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 17066  08A1  0024               	movlb	4	; select bank4
 17067  08A2  081F               	movf	31,w	;volatile
 17068  08A3  39F3               	andlw	-13
 17069  08A4  3804               	iorlw	4
 17070  08A5  009F               	movwf	31	;volatile
 17071  08A6                     l961:	
 17072  08A6  0008               	return
 17073  08A7                     __end_of_PWM6_Initialize:	
 17074                           
 17075                           	psect	text45
 17076  17E6                     __ptext45:	
 17077 ;; *************** function _PMD_Initialize *****************
 17078 ;; Defined at:
 17079 ;;		line 77 in file "mcc_generated_files/mcc.c"
 17080 ;; Parameters:    Size  Location     Type
 17081 ;;		None
 17082 ;; Auto vars:     Size  Location     Type
 17083 ;;		None
 17084 ;; Return value:  Size  Location     Type
 17085 ;;                  1    wreg      void 
 17086 ;; Registers used:
 17087 ;;		status,2
 17088 ;; Tracked objects:
 17089 ;;		On entry : 0/0
 17090 ;;		On exit  : 0/0
 17091 ;;		Unchanged: 0/0
 17092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17097 ;;Total ram usage:        0 bytes
 17098 ;; Hardware stack levels used:    1
 17099 ;; Hardware stack levels required when called:    6
 17100 ;; This function calls:
 17101 ;;		Nothing
 17102 ;; This function is called by:
 17103 ;;		_SYSTEM_Initialize
 17104 ;; This function uses a non-reentrant model
 17105 ;;
 17106                           
 17107                           
 17108                           ;psect for function _PMD_Initialize
 17109  17E6                     _PMD_Initialize:	
 17110  17E6                     l6884:	
 17111                           ;incstack = 0
 17112                           ; Regs used in _PMD_Initialize: [status,2]
 17113                           
 17114                           
 17115                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 17116  17E6  002F               	movlb	15	; select bank15
 17117  17E7  0196               	clrf	22	;volatile
 17118                           
 17119                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 17120  17E8  0197               	clrf	23	;volatile
 17121                           
 17122                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 17123  17E9  0198               	clrf	24	;volatile
 17124                           
 17125                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 17126  17EA  0199               	clrf	25	;volatile
 17127                           
 17128                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 17129  17EB  019A               	clrf	26	;volatile
 17130                           
 17131                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 17132  17EC  019B               	clrf	27	;volatile
 17133  17ED                     l445:	
 17134  17ED  0008               	return
 17135  17EE                     __end_of_PMD_Initialize:	
 17136                           
 17137                           	psect	text46
 17138  0D89                     __ptext46:	
 17139 ;; *************** function _PIN_MANAGER_Initialize *****************
 17140 ;; Defined at:
 17141 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 17142 ;; Parameters:    Size  Location     Type
 17143 ;;		None
 17144 ;; Auto vars:     Size  Location     Type
 17145 ;;		None
 17146 ;; Return value:  Size  Location     Type
 17147 ;;                  1    wreg      void 
 17148 ;; Registers used:
 17149 ;;		wreg, status,2
 17150 ;; Tracked objects:
 17151 ;;		On entry : 0/0
 17152 ;;		On exit  : 0/0
 17153 ;;		Unchanged: 0/0
 17154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17159 ;;Total ram usage:        0 bytes
 17160 ;; Hardware stack levels used:    1
 17161 ;; Hardware stack levels required when called:    6
 17162 ;; This function calls:
 17163 ;;		Nothing
 17164 ;; This function is called by:
 17165 ;;		_SYSTEM_Initialize
 17166 ;; This function uses a non-reentrant model
 17167 ;;
 17168                           
 17169                           
 17170                           ;psect for function _PIN_MANAGER_Initialize
 17171  0D89                     _PIN_MANAGER_Initialize:	
 17172  0D89                     l6886:	
 17173                           ;incstack = 0
 17174                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 17175                           
 17176                           
 17177                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 17178  0D89  0020               	movlb	0	; select bank0
 17179  0D8A  019A               	clrf	26	;volatile
 17180                           
 17181                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 17182  0D8B  0199               	clrf	25	;volatile
 17183                           
 17184                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 17185  0D8C  0196               	clrf	22	;volatile
 17186                           
 17187                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 17188  0D8D  0197               	clrf	23	;volatile
 17189                           
 17190                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 17191  0D8E  0198               	clrf	24	;volatile
 17192  0D8F                     l6888:	
 17193                           
 17194                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 17195  0D8F  3007               	movlw	7
 17196  0D90  0095               	movwf	21	;volatile
 17197  0D91                     l6890:	
 17198                           
 17199                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
 17200  0D91  300F               	movlw	15
 17201  0D92  0091               	movwf	17	;volatile
 17202  0D93                     l6892:	
 17203                           
 17204                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 17205  0D93  30FF               	movlw	255
 17206  0D94  0092               	movwf	18	;volatile
 17207  0D95                     l6894:	
 17208                           
 17209                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 17210  0D95  30FF               	movlw	255
 17211  0D96  0093               	movwf	19	;volatile
 17212  0D97                     l6896:	
 17213                           
 17214                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 17215  0D97  30FF               	movlw	255
 17216  0D98  0094               	movwf	20	;volatile
 17217  0D99                     l6898:	
 17218                           
 17219                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 17220  0D99  30FF               	movlw	255
 17221  0D9A  003E               	movlb	30	; select bank30
 17222  0D9B  00D9               	movwf	89	;volatile
 17223  0D9C                     l6900:	
 17224                           
 17225                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC7;
 17226  0D9C  30C7               	movlw	199
 17227  0D9D  00CE               	movwf	78	;volatile
 17228  0D9E                     l6902:	
 17229                           
 17230                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
 17231  0D9E  30EF               	movlw	239
 17232  0D9F  00C3               	movwf	67	;volatile
 17233  0DA0                     l6904:	
 17234                           
 17235                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 17236  0DA0  3007               	movlw	7
 17237  0DA1  00E4               	movwf	100	;volatile
 17238  0DA2                     l6906:	
 17239                           
 17240                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
 17241  0DA2  30FF               	movlw	255
 17242  0DA3  00B8               	movwf	56	;volatile
 17243                           
 17244                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 17245  0DA4  01DA               	clrf	90	;volatile
 17246                           
 17247                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 17248  0DA5  01E5               	clrf	101	;volatile
 17249                           
 17250                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 17251  0DA6  01C4               	clrf	68	;volatile
 17252                           
 17253                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 17254  0DA7  01B9               	clrf	57	;volatile
 17255                           
 17256                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 17257  0DA8  01CF               	clrf	79	;volatile
 17258                           
 17259                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 17260  0DA9  01E6               	clrf	102	;volatile
 17261                           
 17262                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 17263  0DAA  01BA               	clrf	58	;volatile
 17264                           
 17265                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 17266  0DAB  01C5               	clrf	69	;volatile
 17267                           
 17268                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 17269  0DAC  01D0               	clrf	80	;volatile
 17270                           
 17271                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 17272  0DAD  01DB               	clrf	91	;volatile
 17273  0DAE                     l6908:	
 17274                           
 17275                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 17276  0DAE  30FF               	movlw	255
 17277  0DAF  00BB               	movwf	59	;volatile
 17278  0DB0                     l6910:	
 17279                           
 17280                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 17281  0DB0  30FF               	movlw	255
 17282  0DB1  00C6               	movwf	70	;volatile
 17283  0DB2                     l6912:	
 17284                           
 17285                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 17286  0DB2  30FF               	movlw	255
 17287  0DB3  00D1               	movwf	81	;volatile
 17288  0DB4                     l6914:	
 17289                           
 17290                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 17291  0DB4  30FF               	movlw	255
 17292  0DB5  00DC               	movwf	92	;volatile
 17293  0DB6                     l6916:	
 17294                           
 17295                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 17296  0DB6  3007               	movlw	7
 17297  0DB7  00E7               	movwf	103	;volatile
 17298  0DB8                     l6918:	
 17299                           
 17300                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 17301  0DB8  30FF               	movlw	255
 17302  0DB9  00BC               	movwf	60	;volatile
 17303  0DBA                     l6920:	
 17304                           
 17305                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 17306  0DBA  30FF               	movlw	255
 17307  0DBB  00C7               	movwf	71	;volatile
 17308  0DBC                     l6922:	
 17309                           
 17310                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 17311  0DBC  30FF               	movlw	255
 17312  0DBD  00D2               	movwf	82	;volatile
 17313  0DBE                     l6924:	
 17314                           
 17315                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 17316  0DBE  30FF               	movlw	255
 17317  0DBF  00DD               	movwf	93	;volatile
 17318  0DC0                     l6926:	
 17319                           
 17320                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 17321  0DC0  3007               	movlw	7
 17322  0DC1  00E8               	movwf	104	;volatile
 17323  0DC2                     l6928:	
 17324                           
 17325                           ;mcc_generated_files/pin_manager.c: 127:     INTPPS = 0x0C;
 17326  0DC2  300C               	movlw	12
 17327  0DC3  003D               	movlb	29	; select bank29
 17328  0DC4  0090               	movwf	16	;volatile
 17329  0DC5                     l6930:	
 17330                           
 17331                           ;mcc_generated_files/pin_manager.c: 128:     SSP1CLKPPS = 0x13;
 17332  0DC5  3013               	movlw	19
 17333  0DC6  00C5               	movwf	69	;volatile
 17334  0DC7                     l6932:	
 17335                           
 17336                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x14;
 17337  0DC7  3014               	movlw	20
 17338  0DC8  003E               	movlb	30	; select bank30
 17339  0DC9  00A3               	movwf	35	;volatile
 17340  0DCA                     l6934:	
 17341                           
 17342                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x15;
 17343  0DCA  3015               	movlw	21
 17344  0DCB  00A4               	movwf	36	;volatile
 17345  0DCC                     l6936:	
 17346                           
 17347                           ;mcc_generated_files/pin_manager.c: 131:     RA6PPS = 0x0E;
 17348  0DCC  300E               	movlw	14
 17349  0DCD  0096               	movwf	22	;volatile
 17350  0DCE                     l6938:	
 17351                           
 17352                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 17353  0DCE  3014               	movlw	20
 17354  0DCF  003D               	movlb	29	; select bank29
 17355  0DD0  00C6               	movwf	70	;volatile
 17356  0DD1                     l675:	
 17357  0DD1  0008               	return
 17358  0DD2                     __end_of_PIN_MANAGER_Initialize:	
 17359                           
 17360                           	psect	text47
 17361  0810                     __ptext47:	
 17362 ;; *************** function _OSCILLATOR_Initialize *****************
 17363 ;; Defined at:
 17364 ;;		line 63 in file "mcc_generated_files/mcc.c"
 17365 ;; Parameters:    Size  Location     Type
 17366 ;;		None
 17367 ;; Auto vars:     Size  Location     Type
 17368 ;;		None
 17369 ;; Return value:  Size  Location     Type
 17370 ;;                  1    wreg      void 
 17371 ;; Registers used:
 17372 ;;		wreg, status,2
 17373 ;; Tracked objects:
 17374 ;;		On entry : 0/0
 17375 ;;		On exit  : 0/0
 17376 ;;		Unchanged: 0/0
 17377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17382 ;;Total ram usage:        0 bytes
 17383 ;; Hardware stack levels used:    1
 17384 ;; Hardware stack levels required when called:    6
 17385 ;; This function calls:
 17386 ;;		Nothing
 17387 ;; This function is called by:
 17388 ;;		_SYSTEM_Initialize
 17389 ;; This function uses a non-reentrant model
 17390 ;;
 17391                           
 17392                           
 17393                           ;psect for function _OSCILLATOR_Initialize
 17394  0810                     _OSCILLATOR_Initialize:	
 17395  0810                     l6940:	
 17396                           ;incstack = 0
 17397                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 17398                           
 17399                           
 17400                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x62;
 17401  0810  3062               	movlw	98
 17402  0811  0031               	movlb	17	; select bank17
 17403  0812  008D               	movwf	13	;volatile
 17404  0813                     l6942:	
 17405                           
 17406                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
 17407  0813  018F               	clrf	15	;volatile
 17408  0814                     l6944:	
 17409                           
 17410                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
 17411  0814  0191               	clrf	17	;volatile
 17412                           
 17413                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x02;
 17414  0815  3002               	movlw	2
 17415  0816  0093               	movwf	19	;volatile
 17416  0817                     l6946:	
 17417                           
 17418                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 17419  0817  0192               	clrf	18	;volatile
 17420  0818                     l442:	
 17421  0818  0008               	return
 17422  0819                     __end_of_OSCILLATOR_Initialize:	
 17423                           
 17424                           	psect	text48
 17425  08A7                     __ptext48:	
 17426 ;; *************** function _EXT_INT_Initialize *****************
 17427 ;; Defined at:
 17428 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 17429 ;; Parameters:    Size  Location     Type
 17430 ;;		None
 17431 ;; Auto vars:     Size  Location     Type
 17432 ;;		None
 17433 ;; Return value:  Size  Location     Type
 17434 ;;                  1    wreg      void 
 17435 ;; Registers used:
 17436 ;;		wreg, status,2, status,0, pclath, cstack
 17437 ;; Tracked objects:
 17438 ;;		On entry : 0/0
 17439 ;;		On exit  : 0/0
 17440 ;;		Unchanged: 0/0
 17441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17446 ;;Total ram usage:        0 bytes
 17447 ;; Hardware stack levels used:    1
 17448 ;; Hardware stack levels required when called:    7
 17449 ;; This function calls:
 17450 ;;		_INT_SetInterruptHandler
 17451 ;; This function is called by:
 17452 ;;		_SYSTEM_Initialize
 17453 ;; This function uses a non-reentrant model
 17454 ;;
 17455                           
 17456                           
 17457                           ;psect for function _EXT_INT_Initialize
 17458  08A7                     _EXT_INT_Initialize:	
 17459  08A7                     l6878:	
 17460                           ;incstack = 0
 17461                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17462                           
 17463                           
 17464                           ;mcc_generated_files/ext_int.c: 64:     (PIR0bits.INTF = 0);
 17465  08A7  002E               	movlb	14	; select bank14
 17466  08A8  100C               	bcf	12,0	;volatile
 17467                           
 17468                           ;mcc_generated_files/ext_int.c: 65:     (INTCONbits.INTEDG = 1);
 17469  08A9  140B               	bsf	11,0	;volatile
 17470  08AA                     l6880:	
 17471                           
 17472                           ;mcc_generated_files/ext_int.c: 67:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
 17473  08AA  3050               	movlw	low _INT_DefaultInterruptHandler
 17474  08AB  0020               	movlb	0	; select bank0
 17475  08AC  00A3               	movwf	INT_SetInterruptHandler@InterruptHandler
 17476  08AD  3017               	movlw	high _INT_DefaultInterruptHandler
 17477  08AE  00A4               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 17478  08AF  3188  2007  3188   	fcall	_INT_SetInterruptHandler
 17479  08B2                     l6882:	
 17480                           
 17481                           ;mcc_generated_files/ext_int.c: 68:     (PIE0bits.INTE = 1);
 17482  08B2  002E               	movlb	14	; select bank14
 17483  08B3  1416               	bsf	22,0	;volatile
 17484  08B4                     l347:	
 17485  08B4  0008               	return
 17486  08B5                     __end_of_EXT_INT_Initialize:	
 17487                           
 17488                           	psect	text49
 17489  0807                     __ptext49:	
 17490 ;; *************** function _INT_SetInterruptHandler *****************
 17491 ;; Defined at:
 17492 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 17493 ;; Parameters:    Size  Location     Type
 17494 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 17495 ;;		 -> sw1_EXT(1), INT_DefaultInterruptHandler(1), 
 17496 ;; Auto vars:     Size  Location     Type
 17497 ;;		None
 17498 ;; Return value:  Size  Location     Type
 17499 ;;                  1    wreg      void 
 17500 ;; Registers used:
 17501 ;;		wreg
 17502 ;; Tracked objects:
 17503 ;;		On entry : 0/0
 17504 ;;		On exit  : 0/0
 17505 ;;		Unchanged: 0/0
 17506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17507 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17510 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17511 ;;Total ram usage:        2 bytes
 17512 ;; Hardware stack levels used:    1
 17513 ;; Hardware stack levels required when called:    6
 17514 ;; This function calls:
 17515 ;;		Nothing
 17516 ;; This function is called by:
 17517 ;;		_EXT_INT_Initialize
 17518 ;;		_main
 17519 ;; This function uses a non-reentrant model
 17520 ;;
 17521                           
 17522                           
 17523                           ;psect for function _INT_SetInterruptHandler
 17524  0807                     _INT_SetInterruptHandler:	
 17525  0807                     l6736:	
 17526                           ;incstack = 0
 17527                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 17528                           
 17529                           
 17530                           ;mcc_generated_files/ext_int.c: 51:     INT_InterruptHandler = InterruptHandler;
 17531  0807  0020               	movlb	0	; select bank0
 17532  0808  0824               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
 17533  0809  0021               	movlb	1	; select bank1
 17534  080A  00DF               	movwf	(_INT_InterruptHandler+1)^(0+128)
 17535  080B  0020               	movlb	0	; select bank0
 17536  080C  0823               	movf	INT_SetInterruptHandler@InterruptHandler,w
 17537  080D  0021               	movlb	1	; select bank1
 17538  080E  00DE               	movwf	_INT_InterruptHandler^(0+128)
 17539  080F                     l341:	
 17540  080F  0008               	return
 17541  0810                     __end_of_INT_SetInterruptHandler:	
 17542                           
 17543                           	psect	text50
 17544  0982                     __ptext50:	
 17545 ;; *************** function _ADCC_Initialize *****************
 17546 ;; Defined at:
 17547 ;;		line 63 in file "mcc_generated_files/adcc.c"
 17548 ;; Parameters:    Size  Location     Type
 17549 ;;		None
 17550 ;; Auto vars:     Size  Location     Type
 17551 ;;		None
 17552 ;; Return value:  Size  Location     Type
 17553 ;;                  1    wreg      void 
 17554 ;; Registers used:
 17555 ;;		wreg, status,2
 17556 ;; Tracked objects:
 17557 ;;		On entry : 0/0
 17558 ;;		On exit  : 0/0
 17559 ;;		Unchanged: 0/0
 17560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17565 ;;Total ram usage:        0 bytes
 17566 ;; Hardware stack levels used:    1
 17567 ;; Hardware stack levels required when called:    6
 17568 ;; This function calls:
 17569 ;;		Nothing
 17570 ;; This function is called by:
 17571 ;;		_SYSTEM_Initialize
 17572 ;; This function uses a non-reentrant model
 17573 ;;
 17574                           
 17575                           
 17576                           ;psect for function _ADCC_Initialize
 17577  0982                     _ADCC_Initialize:	
 17578  0982                     l6952:	
 17579                           ;incstack = 0
 17580                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 17581                           
 17582                           
 17583                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 17584  0982  0022               	movlb	2	; select bank2
 17585  0983  018E               	clrf	14	;volatile
 17586                           
 17587                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 17588  0984  018F               	clrf	15	;volatile
 17589                           
 17590                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 17591  0985  0190               	clrf	16	;volatile
 17592                           
 17593                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 17594  0986  0191               	clrf	17	;volatile
 17595                           
 17596                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 17597  0987  0192               	clrf	18	;volatile
 17598                           
 17599                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 17600  0988  0193               	clrf	19	;volatile
 17601                           
 17602                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 17603  0989  018D               	clrf	13	;volatile
 17604                           
 17605                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 17606  098A  0021               	movlb	1	; select bank1
 17607  098B  019E               	clrf	30	;volatile
 17608                           
 17609                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 17610  098C  019B               	clrf	27	;volatile
 17611                           
 17612                           ;mcc_generated_files/adcc.c: 85:     ADCON1 = 0x00;
 17613  098D  0194               	clrf	20	;volatile
 17614                           
 17615                           ;mcc_generated_files/adcc.c: 87:     ADCON2 = 0x00;
 17616  098E  0195               	clrf	21	;volatile
 17617                           
 17618                           ;mcc_generated_files/adcc.c: 89:     ADCON3 = 0x00;
 17619  098F  0196               	clrf	22	;volatile
 17620                           
 17621                           ;mcc_generated_files/adcc.c: 91:     ADSTAT = 0x00;
 17622  0990  0197               	clrf	23	;volatile
 17623                           
 17624                           ;mcc_generated_files/adcc.c: 93:     ADREF = 0x00;
 17625  0991  019A               	clrf	26	;volatile
 17626                           
 17627                           ;mcc_generated_files/adcc.c: 95:     ADACT = 0x00;
 17628  0992  0199               	clrf	25	;volatile
 17629                           
 17630                           ;mcc_generated_files/adcc.c: 97:     ADCLK = 0x00;
 17631  0993  0198               	clrf	24	;volatile
 17632  0994                     l6954:	
 17633                           
 17634                           ;mcc_generated_files/adcc.c: 99:     ADCON0 = 0x84;
 17635  0994  3084               	movlw	132
 17636  0995  0093               	movwf	19	;volatile
 17637  0996                     l6956:	
 17638                           
 17639                           ;mcc_generated_files/adcc.c: 101:     ADACQ = 0x00;
 17640  0996  019D               	clrf	29	;volatile
 17641  0997                     l757:	
 17642  0997  0008               	return
 17643  0998                     __end_of_ADCC_Initialize:	
 17644                           
 17645                           	psect	text51
 17646  0A2B                     __ptext51:	
 17647 ;; *************** function _LED_bin *****************
 17648 ;; Defined at:
 17649 ;;		line 48 in file "leds.c"
 17650 ;; Parameters:    Size  Location     Type
 17651 ;;  value           2    3[BANK0 ] unsigned int 
 17652 ;; Auto vars:     Size  Location     Type
 17653 ;;		None
 17654 ;; Return value:  Size  Location     Type
 17655 ;;                  1    wreg      void 
 17656 ;; Registers used:
 17657 ;;		wreg, status,2, status,0
 17658 ;; Tracked objects:
 17659 ;;		On entry : 0/0
 17660 ;;		On exit  : 0/0
 17661 ;;		Unchanged: 0/0
 17662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17663 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17665 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17666 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17667 ;;Total ram usage:        5 bytes
 17668 ;; Hardware stack levels used:    1
 17669 ;; Hardware stack levels required when called:    6
 17670 ;; This function calls:
 17671 ;;		Nothing
 17672 ;; This function is called by:
 17673 ;;		_main
 17674 ;; This function uses a non-reentrant model
 17675 ;;
 17676                           
 17677                           
 17678                           ;psect for function _LED_bin
 17679  0A2B                     _LED_bin:	
 17680  0A2B                     l7204:	
 17681                           ;incstack = 0
 17682                           ; Regs used in _LED_bin: [wreg+status,2+status,0]
 17683                           
 17684                           
 17685                           ;leds.c: 50:     LATAbits.LATA4 = (value & 1);
 17686  0A2B  0020               	movlb	0	; select bank0
 17687  0A2C  0823               	movf	LED_bin@value,w
 17688  0A2D  3901               	andlw	1
 17689  0A2E  00A5               	movwf	??_LED_bin
 17690  0A2F  0EA5               	swapf	??_LED_bin,f
 17691  0A30  0816               	movf	22,w	;volatile
 17692  0A31  0625               	xorwf	??_LED_bin,w
 17693  0A32  39EF               	andlw	-17
 17694  0A33  0625               	xorwf	??_LED_bin,w
 17695  0A34  0096               	movwf	22	;volatile
 17696                           
 17697                           ;leds.c: 51:     LATAbits.LATA5 = (value >>1);
 17698  0A35  0824               	movf	LED_bin@value+1,w
 17699  0A36  00A6               	movwf	??_LED_bin+1
 17700  0A37  0823               	movf	LED_bin@value,w
 17701  0A38  00A5               	movwf	??_LED_bin
 17702  0A39  36A6               	lsrf	??_LED_bin+1,f
 17703  0A3A  0CA5               	rrf	??_LED_bin,f
 17704  0A3B  0825               	movf	??_LED_bin,w
 17705  0A3C  00A7               	movwf	??_LED_bin+2
 17706  0A3D  0EA7               	swapf	??_LED_bin+2,f
 17707  0A3E  0DA7               	rlf	??_LED_bin+2,f
 17708  0A3F  0816               	movf	22,w	;volatile
 17709  0A40  0627               	xorwf	??_LED_bin+2,w
 17710  0A41  39DF               	andlw	-33
 17711  0A42  0627               	xorwf	??_LED_bin+2,w
 17712  0A43  0096               	movwf	22	;volatile
 17713  0A44                     l1661:	
 17714  0A44  0008               	return
 17715  0A45                     __end_of_LED_bin:	
 17716                           
 17717                           	psect	text52
 17718  0A11                     __ptext52:	
 17719 ;; *************** function _ADC_read *****************
 17720 ;; Defined at:
 17721 ;;		line 535 in file "main.c"
 17722 ;; Parameters:    Size  Location     Type
 17723 ;;		None
 17724 ;; Auto vars:     Size  Location     Type
 17725 ;;		None
 17726 ;; Return value:  Size  Location     Type
 17727 ;;                  2    5[BANK0 ] unsigned int 
 17728 ;; Registers used:
 17729 ;;		wreg, status,2, status,0, pclath, cstack
 17730 ;; Tracked objects:
 17731 ;;		On entry : 0/0
 17732 ;;		On exit  : 0/0
 17733 ;;		Unchanged: 0/0
 17734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17735 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17738 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17739 ;;Total ram usage:        2 bytes
 17740 ;; Hardware stack levels used:    1
 17741 ;; Hardware stack levels required when called:    7
 17742 ;; This function calls:
 17743 ;;		_ADCC_GetConversionResult
 17744 ;;		_ADCC_IsConversionDone
 17745 ;;		_ADCC_StartConversion
 17746 ;; This function is called by:
 17747 ;;		_main
 17748 ;; This function uses a non-reentrant model
 17749 ;;
 17750                           
 17751                           
 17752                           ;psect for function _ADC_read
 17753  0A11                     _ADC_read:	
 17754  0A11                     l7194:	
 17755                           ;incstack = 0
 17756                           ; Regs used in _ADC_read: [wreg+status,2+status,0+pclath+cstack]
 17757                           
 17758                           
 17759                           ;main.c: 537:     ADCC_StartConversion(channel_ANA0);
 17760  0A11  3000               	movlw	0
 17761  0A12  3197  27DE  318A   	fcall	_ADCC_StartConversion
 17762                           
 17763                           ;main.c: 538:     while(!ADCC_IsConversionDone()){
 17764  0A15  2A1A               	goto	l7198
 17765  0A16                     l7196:	
 17766                           
 17767                           ;main.c: 539:         _delay((unsigned long)((1)*(1000000/4000.0)));
 17768  0A16  3053               	movlw	83
 17769  0A17                     u5227:	
 17770  0A17  0B89               	decfsz	9,f
 17771  0A18  2A17               	goto	u5227
 17772  0A19  0000               	nop
 17773  0A1A                     l7198:	
 17774                           
 17775                           ;main.c: 538:     while(!ADCC_IsConversionDone()){
 17776  0A1A  3188  2000  318A   	fcall	_ADCC_IsConversionDone
 17777  0A1D  3A00               	xorlw	0
 17778  0A1E  1903               	skipnz
 17779  0A1F  2A21               	goto	u4411
 17780  0A20  2A22               	goto	u4410
 17781  0A21                     u4411:	
 17782  0A21  2A16               	goto	l7196
 17783  0A22                     u4410:	
 17784  0A22                     l7200:	
 17785                           
 17786                           ;main.c: 542:     return ADCC_GetConversionResult();
 17787  0A22  3197  27F7  318A   	fcall	_ADCC_GetConversionResult
 17788  0A25  0020               	movlb	0	; select bank0
 17789  0A26  0824               	movf	?_ADCC_GetConversionResult+1,w
 17790  0A27  00A6               	movwf	?_ADC_read+1
 17791  0A28  0823               	movf	?_ADCC_GetConversionResult,w
 17792  0A29  00A5               	movwf	?_ADC_read
 17793  0A2A                     l1392:	
 17794  0A2A  0008               	return
 17795  0A2B                     __end_of_ADC_read:	
 17796                           
 17797                           	psect	text53
 17798  17DE                     __ptext53:	
 17799 ;; *************** function _ADCC_StartConversion *****************
 17800 ;; Defined at:
 17801 ;;		line 106 in file "mcc_generated_files/adcc.c"
 17802 ;; Parameters:    Size  Location     Type
 17803 ;;  channel         1    wreg     enum E12246
 17804 ;; Auto vars:     Size  Location     Type
 17805 ;;  channel         1    3[BANK0 ] enum E12246
 17806 ;; Return value:  Size  Location     Type
 17807 ;;                  1    wreg      void 
 17808 ;; Registers used:
 17809 ;;		wreg
 17810 ;; Tracked objects:
 17811 ;;		On entry : 0/0
 17812 ;;		On exit  : 0/0
 17813 ;;		Unchanged: 0/0
 17814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17816 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17818 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17819 ;;Total ram usage:        1 bytes
 17820 ;; Hardware stack levels used:    1
 17821 ;; Hardware stack levels required when called:    6
 17822 ;; This function calls:
 17823 ;;		Nothing
 17824 ;; This function is called by:
 17825 ;;		_ADC_read
 17826 ;; This function uses a non-reentrant model
 17827 ;;
 17828                           
 17829                           
 17830                           ;psect for function _ADCC_StartConversion
 17831  17DE                     _ADCC_StartConversion:	
 17832                           
 17833                           ;incstack = 0
 17834                           ; Regs used in _ADCC_StartConversion: [wreg]
 17835                           ;ADCC_StartConversion@channel stored from wreg
 17836  17DE  0020               	movlb	0	; select bank0
 17837  17DF  00A3               	movwf	ADCC_StartConversion@channel
 17838  17E0                     l7002:	
 17839                           
 17840                           ;mcc_generated_files/adcc.c: 106: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 107: {;mcc_generated_files/adcc.c: 109:     ADPCH = channel;
 17841  17E0  0823               	movf	ADCC_StartConversion@channel,w
 17842  17E1  0021               	movlb	1	; select bank1
 17843  17E2  009E               	movwf	30	;volatile
 17844  17E3                     l7004:	
 17845                           
 17846                           ;mcc_generated_files/adcc.c: 112:     ADCON0bits.ADON = 1;
 17847  17E3  1793               	bsf	19,7	;volatile
 17848  17E4                     l7006:	
 17849                           
 17850                           ;mcc_generated_files/adcc.c: 115:     ADCON0bits.ADGO = 1;
 17851  17E4  1413               	bsf	19,0	;volatile
 17852  17E5                     l760:	
 17853  17E5  0008               	return
 17854  17E6                     __end_of_ADCC_StartConversion:	
 17855                           
 17856                           	psect	text54
 17857  0800                     __ptext54:	
 17858 ;; *************** function _ADCC_IsConversionDone *****************
 17859 ;; Defined at:
 17860 ;;		line 118 in file "mcc_generated_files/adcc.c"
 17861 ;; Parameters:    Size  Location     Type
 17862 ;;		None
 17863 ;; Auto vars:     Size  Location     Type
 17864 ;;		None
 17865 ;; Return value:  Size  Location     Type
 17866 ;;                  1    wreg      _Bool 
 17867 ;; Registers used:
 17868 ;;		wreg, status,0
 17869 ;; Tracked objects:
 17870 ;;		On entry : 0/0
 17871 ;;		On exit  : 0/0
 17872 ;;		Unchanged: 0/0
 17873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17878 ;;Total ram usage:        0 bytes
 17879 ;; Hardware stack levels used:    1
 17880 ;; Hardware stack levels required when called:    6
 17881 ;; This function calls:
 17882 ;;		Nothing
 17883 ;; This function is called by:
 17884 ;;		_ADC_read
 17885 ;; This function uses a non-reentrant model
 17886 ;;
 17887                           
 17888                           
 17889                           ;psect for function _ADCC_IsConversionDone
 17890  0800                     _ADCC_IsConversionDone:	
 17891  0800                     l7008:	
 17892                           ;incstack = 0
 17893                           ; Regs used in _ADCC_IsConversionDone: [wreg+status,0]
 17894                           
 17895                           
 17896                           ;mcc_generated_files/adcc.c: 121:     return ((unsigned char)(!ADCON0bits.ADGO));
 17897  0800  1003               	clrc
 17898  0801  0021               	movlb	1	; select bank1
 17899  0802  1C13               	btfss	19,0	;volatile
 17900  0803  1403               	setc
 17901  0804  3000               	movlw	0
 17902  0805  3D09               	addwfc	9,w
 17903  0806                     l763:	
 17904  0806  0008               	return
 17905  0807                     __end_of_ADCC_IsConversionDone:	
 17906                           
 17907                           	psect	text55
 17908  17F7                     __ptext55:	
 17909 ;; *************** function _ADCC_GetConversionResult *****************
 17910 ;; Defined at:
 17911 ;;		line 124 in file "mcc_generated_files/adcc.c"
 17912 ;; Parameters:    Size  Location     Type
 17913 ;;		None
 17914 ;; Auto vars:     Size  Location     Type
 17915 ;;		None
 17916 ;; Return value:  Size  Location     Type
 17917 ;;                  2    3[BANK0 ] unsigned short 
 17918 ;; Registers used:
 17919 ;;		wreg
 17920 ;; Tracked objects:
 17921 ;;		On entry : 0/0
 17922 ;;		On exit  : 0/0
 17923 ;;		Unchanged: 0/0
 17924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17925 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17928 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17929 ;;Total ram usage:        2 bytes
 17930 ;; Hardware stack levels used:    1
 17931 ;; Hardware stack levels required when called:    6
 17932 ;; This function calls:
 17933 ;;		Nothing
 17934 ;; This function is called by:
 17935 ;;		_ADC_read
 17936 ;; This function uses a non-reentrant model
 17937 ;;
 17938                           
 17939                           
 17940                           ;psect for function _ADCC_GetConversionResult
 17941  17F7                     _ADCC_GetConversionResult:	
 17942  17F7                     l7012:	
 17943                           ;incstack = 0
 17944                           ; Regs used in _ADCC_GetConversionResult: [wreg]
 17945                           
 17946                           
 17947                           ;mcc_generated_files/adcc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 17948  17F7  0021               	movlb	1	; select bank1
 17949  17F8  080D               	movf	13,w	;volatile
 17950  17F9  0020               	movlb	0	; select bank0
 17951  17FA  00A4               	movwf	?_ADCC_GetConversionResult+1
 17952  17FB  0021               	movlb	1	; select bank1
 17953  17FC  080C               	movf	12,w	;volatile
 17954  17FD  0020               	movlb	0	; select bank0
 17955  17FE  00A3               	movwf	?_ADCC_GetConversionResult
 17956  17FF                     l766:	
 17957  17FF  0008               	return
 17958  1800                     __end_of_ADCC_GetConversionResult:	
 17959                           
 17960                           	psect	intentry
 17961  0004                     __pintentry:	
 17962 ;; *************** function _INTERRUPT_InterruptManager *****************
 17963 ;; Defined at:
 17964 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17965 ;; Parameters:    Size  Location     Type
 17966 ;;		None
 17967 ;; Auto vars:     Size  Location     Type
 17968 ;;		None
 17969 ;; Return value:  Size  Location     Type
 17970 ;;                  1    wreg      void 
 17971 ;; Registers used:
 17972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17973 ;; Tracked objects:
 17974 ;;		On entry : 0/0
 17975 ;;		On exit  : 0/0
 17976 ;;		Unchanged: 0/0
 17977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17982 ;;Total ram usage:        0 bytes
 17983 ;; Hardware stack levels used:    1
 17984 ;; Hardware stack levels required when called:    5
 17985 ;; This function calls:
 17986 ;;		Absolute function
 17987 ;;		_INT_ISR
 17988 ;;		_TMR0_ISR
 17989 ;;		_TMR1_ISR
 17990 ;;		_TMR2_ISR
 17991 ;;		_i2c_ISR
 17992 ;;		_i2c_busCollisionISR
 17993 ;; This function is called by:
 17994 ;;		Interrupt level 1
 17995 ;; This function uses a non-reentrant model
 17996 ;;
 17997                           
 17998  0004                     _INTERRUPT_InterruptManager:	
 17999                           
 18000                           ;incstack = 0
 18001  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 18002                           
 18003                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18004  0005  3180               	pagesel	$
 18005  0006                     i1l6052:	
 18006                           
 18007                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.INTE == 1 && PIR0bits.INTF
      +                           == 1)
 18008  0006  002E               	movlb	14	; select bank14
 18009  0007  1C16               	btfss	22,0	;volatile
 18010  0008  280A               	goto	u346_21
 18011  0009  280B               	goto	u346_20
 18012  000A                     u346_21:	
 18013  000A  2813               	goto	i1l378
 18014  000B                     u346_20:	
 18015  000B                     i1l6054:	
 18016  000B  1C0C               	btfss	12,0	;volatile
 18017  000C  280E               	goto	u347_21
 18018  000D  280F               	goto	u347_20
 18019  000E                     u347_21:	
 18020  000E  2813               	goto	i1l378
 18021  000F                     u347_20:	
 18022  000F                     i1l6056:	
 18023                           
 18024                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         INT_ISR();
 18025  000F  3197  27AD  3180   	fcall	_INT_ISR
 18026                           
 18027                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 18028  0012  2859               	goto	i1l392
 18029  0013                     i1l378:	
 18030                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.TMR0IE == 1 && PIR0bi
      +                          ts.TMR0IF == 1)
 18031                           
 18032  0013  1E96               	btfss	22,5	;volatile
 18033  0014  2816               	goto	u348_21
 18034  0015  2817               	goto	u348_20
 18035  0016                     u348_21:	
 18036  0016  281F               	goto	i1l380
 18037  0017                     u348_20:	
 18038  0017                     i1l6058:	
 18039  0017  1E8C               	btfss	12,5	;volatile
 18040  0018  281A               	goto	u349_21
 18041  0019  281B               	goto	u349_20
 18042  001A                     u349_21:	
 18043  001A  281F               	goto	i1l380
 18044  001B                     u349_20:	
 18045  001B                     i1l6060:	
 18046                           
 18047                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
 18048  001B  3188  20B5  3180   	fcall	_TMR0_ISR
 18049                           
 18050                           ;mcc_generated_files/interrupt_manager.c: 62:     }
 18051  001E  2859               	goto	i1l392
 18052  001F                     i1l380:	
 18053                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
 18054                           
 18055  001F  1F0B               	btfss	11,6	;volatile
 18056  0020  2822               	goto	u350_21
 18057  0021  2823               	goto	u350_20
 18058  0022                     u350_21:	
 18059  0022  2859               	goto	i1l386
 18060  0023                     u350_20:	
 18061  0023                     i1l6062:	
 18062                           
 18063                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 18064  0023  1C99               	btfss	25,1	;volatile
 18065  0024  2826               	goto	u351_21
 18066  0025  2827               	goto	u351_20
 18067  0026                     u351_21:	
 18068  0026  2832               	goto	i1l383
 18069  0027                     u351_20:	
 18070  0027                     i1l6064:	
 18071  0027  1C8F               	btfss	15,1	;volatile
 18072  0028  282A               	goto	u352_21
 18073  0029  282B               	goto	u352_20
 18074  002A                     u352_21:	
 18075  002A  2832               	goto	i1l383
 18076  002B                     u352_20:	
 18077  002B                     i1l6066:	
 18078                           
 18079                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             i2c1_driver_busCollisionISR();
 18080  002B  0021               	movlb	1	; select bank1
 18081  002C  0852               	movf	(_i2c1_driver_busCollisionISR+1)^(0+128),w
 18082  002D  008A               	movwf	10
 18083  002E  0851               	movf	_i2c1_driver_busCollisionISR^(0+128),w
 18084  002F  000A               	callw
 18085  0030  3180               	pagesel	$
 18086                           
 18087                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 18088  0031  2859               	goto	i1l392
 18089  0032                     i1l383:	
 18090                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 18091                           
 18092  0032  1C19               	btfss	25,0	;volatile
 18093  0033  2835               	goto	u353_21
 18094  0034  2836               	goto	u353_20
 18095  0035                     u353_21:	
 18096  0035  2841               	goto	i1l385
 18097  0036                     u353_20:	
 18098  0036                     i1l6068:	
 18099  0036  1C0F               	btfss	15,0	;volatile
 18100  0037  2839               	goto	u354_21
 18101  0038  283A               	goto	u354_20
 18102  0039                     u354_21:	
 18103  0039  2841               	goto	i1l385
 18104  003A                     u354_20:	
 18105  003A                     i1l6070:	
 18106                           
 18107                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             i2c1_driver_i2cISR();
 18108  003A  0021               	movlb	1	; select bank1
 18109  003B  0850               	movf	(_i2c1_driver_i2cISR+1)^(0+128),w
 18110  003C  008A               	movwf	10
 18111  003D  084F               	movf	_i2c1_driver_i2cISR^(0+128),w
 18112  003E  000A               	callw
 18113  003F  3180               	pagesel	$
 18114                           
 18115                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 18116  0040  2859               	goto	i1l392
 18117  0041                     i1l385:	
 18118                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE4bits.TMR1IE == 1 && PI
      +                          R4bits.TMR1IF == 1)
 18119                           
 18120  0041  1C1A               	btfss	26,0	;volatile
 18121  0042  2844               	goto	u355_21
 18122  0043  2845               	goto	u355_20
 18123  0044                     u355_21:	
 18124  0044  284D               	goto	i1l387
 18125  0045                     u355_20:	
 18126  0045                     i1l6072:	
 18127  0045  1C10               	btfss	16,0	;volatile
 18128  0046  2848               	goto	u356_21
 18129  0047  2849               	goto	u356_20
 18130  0048                     u356_21:	
 18131  0048  284D               	goto	i1l387
 18132  0049                     u356_20:	
 18133  0049                     i1l6074:	
 18134                           
 18135                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             TMR1_ISR();
 18136  0049  3189  2198  3180   	fcall	_TMR1_ISR
 18137                           
 18138                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 18139  004C  2859               	goto	i1l392
 18140  004D                     i1l387:	
 18141                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE4bits.TMR2IE == 1 && PI
      +                          R4bits.TMR2IF == 1)
 18142                           
 18143  004D  1C9A               	btfss	26,1	;volatile
 18144  004E  2850               	goto	u357_21
 18145  004F  2851               	goto	u357_20
 18146  0050                     u357_21:	
 18147  0050  2859               	goto	i1l386
 18148  0051                     u357_20:	
 18149  0051                     i1l6076:	
 18150  0051  1C90               	btfss	16,1	;volatile
 18151  0052  2854               	goto	u358_21
 18152  0053  2855               	goto	u358_20
 18153  0054                     u358_21:	
 18154  0054  2859               	goto	i1l386
 18155  0055                     u358_20:	
 18156  0055                     i1l6078:	
 18157                           
 18158                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             TMR2_ISR();
 18159  0055  3188  20C4  3180   	fcall	_TMR2_ISR
 18160                           
 18161                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 18162  0058  2859               	goto	i1l392
 18163  0059                     i1l386:	
 18164  0059                     i1l392:	
 18165  0059  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 18166  005A  0009               	retfie
 18167  005B                     __end_of_INTERRUPT_InterruptManager:	
 18168                           
 18169                           	psect	text57
 18170  177C                     __ptext57:	
 18171 ;; *************** function _i2c_busCollisionISR *****************
 18172 ;; Defined at:
 18173 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 18174 ;; Parameters:    Size  Location     Type
 18175 ;;		None
 18176 ;; Auto vars:     Size  Location     Type
 18177 ;;		None
 18178 ;; Return value:  Size  Location     Type
 18179 ;;                  1    wreg      void 
 18180 ;; Registers used:
 18181 ;;		status,2, status,0, pclath, cstack
 18182 ;; Tracked objects:
 18183 ;;		On entry : 0/0
 18184 ;;		On exit  : 0/0
 18185 ;;		Unchanged: 0/0
 18186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18191 ;;Total ram usage:        0 bytes
 18192 ;; Hardware stack levels used:    1
 18193 ;; Hardware stack levels required when called:    1
 18194 ;; This function calls:
 18195 ;;		_i2c1_driver_clearBusCollision
 18196 ;; This function is called by:
 18197 ;;		_i2c_open
 18198 ;;		_INTERRUPT_InterruptManager
 18199 ;; This function uses a non-reentrant model
 18200 ;;
 18201                           
 18202                           
 18203                           ;psect for function _i2c_busCollisionISR
 18204  177C                     _i2c_busCollisionISR:	
 18205  177C                     i1l5660:	
 18206                           ;incstack = 0
 18207                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 18208                           
 18209                           
 18210                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
 18211  177C  3197  276E  3197   	fcall	_i2c1_driver_clearBusCollision
 18212  177F                     i1l213:	
 18213  177F  0008               	return
 18214  1780                     __end_of_i2c_busCollisionISR:	
 18215                           
 18216                           	psect	text58
 18217  176E                     __ptext58:	
 18218 ;; *************** function _i2c1_driver_clearBusCollision *****************
 18219 ;; Defined at:
 18220 ;;		line 254 in file "mcc_generated_files/i2c1_driver.c"
 18221 ;; Parameters:    Size  Location     Type
 18222 ;;		None
 18223 ;; Auto vars:     Size  Location     Type
 18224 ;;		None
 18225 ;; Return value:  Size  Location     Type
 18226 ;;                  1    wreg      void 
 18227 ;; Registers used:
 18228 ;;		None
 18229 ;; Tracked objects:
 18230 ;;		On entry : 0/0
 18231 ;;		On exit  : 0/0
 18232 ;;		Unchanged: 0/0
 18233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18238 ;;Total ram usage:        0 bytes
 18239 ;; Hardware stack levels used:    1
 18240 ;; This function calls:
 18241 ;;		Nothing
 18242 ;; This function is called by:
 18243 ;;		_i2c_busCollisionISR
 18244 ;; This function uses a non-reentrant model
 18245 ;;
 18246                           
 18247                           
 18248                           ;psect for function _i2c1_driver_clearBusCollision
 18249  176E                     _i2c1_driver_clearBusCollision:	
 18250  176E                     i1l5300:	
 18251                           ;incstack = 0
 18252                           ; Regs used in _i2c1_driver_clearBusCollision: []
 18253                           
 18254                           
 18255                           ;mcc_generated_files/i2c1_driver.c: 256:     PIR3bits.BCL1IF = 0;
 18256  176E  002E               	movlb	14	; select bank14
 18257  176F  108F               	bcf	15,1	;volatile
 18258  1770                     i1l584:	
 18259  1770  0008               	return
 18260  1771                     __end_of_i2c1_driver_clearBusCollision:	
 18261                           
 18262                           	psect	text59
 18263  0C40                     __ptext59:	
 18264 ;; *************** function _i2c_ISR *****************
 18265 ;; Defined at:
 18266 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 18267 ;; Parameters:    Size  Location     Type
 18268 ;;		None
 18269 ;; Auto vars:     Size  Location     Type
 18270 ;;		None
 18271 ;; Return value:  Size  Location     Type
 18272 ;;                  1    wreg      void 
 18273 ;; Registers used:
 18274 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18275 ;; Tracked objects:
 18276 ;;		On entry : 0/0
 18277 ;;		On exit  : 0/0
 18278 ;;		Unchanged: 0/0
 18279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18282 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18283 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18284 ;;Total ram usage:        3 bytes
 18285 ;; Hardware stack levels used:    1
 18286 ;; Hardware stack levels required when called:    4
 18287 ;; This function calls:
 18288 ;;		_do_I2C_DO_ACK
 18289 ;;		_do_I2C_DO_ADDRESS_NACK
 18290 ;;		_do_I2C_DO_NACK_RESTART
 18291 ;;		_do_I2C_DO_NACK_STOP
 18292 ;;		_do_I2C_IDLE
 18293 ;;		_do_I2C_RCEN
 18294 ;;		_do_I2C_RESET
 18295 ;;		_do_I2C_RX
 18296 ;;		_do_I2C_SEND_ADR_READ
 18297 ;;		_do_I2C_SEND_ADR_WRITE
 18298 ;;		_do_I2C_SEND_RESTART
 18299 ;;		_do_I2C_SEND_RESTART_READ
 18300 ;;		_do_I2C_SEND_RESTART_WRITE
 18301 ;;		_do_I2C_SEND_STOP
 18302 ;;		_do_I2C_TX
 18303 ;;		_do_I2C_TX_EMPTY
 18304 ;;		_i2c1_driver_isNACK
 18305 ;;		_mssp1_clearIRQ
 18306 ;; This function is called by:
 18307 ;;		_i2c_open
 18308 ;;		_i2c_poller
 18309 ;;		_INTERRUPT_InterruptManager
 18310 ;; This function uses a non-reentrant model
 18311 ;;
 18312                           
 18313                           
 18314                           ;psect for function _i2c_ISR
 18315  0C40                     _i2c_ISR:	
 18316  0C40                     i1l5650:	
 18317                           ;incstack = 0
 18318                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18319                           
 18320                           
 18321                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
 18322  0C40  3197  276B  318C   	fcall	_mssp1_clearIRQ
 18323  0C43                     i1l5652:	
 18324                           
 18325                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
 18326  0C43  0021               	movlb	1	; select bank1
 18327  0C44  1DA0               	btfss	_i2c_status^(0+128),3
 18328  0C45  2C47               	goto	u282_21
 18329  0C46  2C48               	goto	u282_20
 18330  0C47                     u282_21:	
 18331  0C47  2C55               	goto	i1l5658
 18332  0C48                     u282_20:	
 18333  0C48                     i1l5654:	
 18334  0C48  3197  27C6  318C   	fcall	_i2c1_driver_isNACK
 18335  0C4B  1C03               	btfss	3,0
 18336  0C4C  2C4E               	goto	u283_21
 18337  0C4D  2C4F               	goto	u283_20
 18338  0C4E                     u283_21:	
 18339  0C4E  2C55               	goto	i1l5658
 18340  0C4F                     u283_20:	
 18341  0C4F                     i1l5656:	
 18342                           
 18343                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
 18344  0C4F  300F               	movlw	15
 18345  0C50  0020               	movlb	0	; select bank0
 18346  0C51  00A0               	movwf	??_i2c_ISR
 18347  0C52  0820               	movf	??_i2c_ISR,w
 18348  0C53  0021               	movlb	1	; select bank1
 18349  0C54  00A9               	movwf	(_i2c_status^(0+128)+9)
 18350  0C55                     i1l5658:	
 18351                           
 18352                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
 18353  0C55  0021               	movlb	1	; select bank1
 18354  0C56  0829               	movf	(_i2c_status^(0+128)+9),w
 18355  0C57  0020               	movlb	0	; select bank0
 18356  0C58  00A0               	movwf	??_i2c_ISR
 18357  0C59  01A1               	clrf	??_i2c_ISR+1
 18358  0C5A  35A0               	lslf	??_i2c_ISR,f
 18359  0C5B  0DA1               	rlf	??_i2c_ISR+1,f
 18360  0C5C  3000               	movlw	low (_fsmStateTable| (0+32768))
 18361  0C5D  0720               	addwf	??_i2c_ISR,w
 18362  0C5E  0084               	movwf	4
 18363  0C5F  3090               	movlw	high (_fsmStateTable| (0+32768))
 18364  0C60  3D21               	addwfc	??_i2c_ISR+1,w
 18365  0C61  0085               	movwf	5
 18366  0C62  3F01               	moviw [1]fsr0
 18367  0C63  008A               	movwf	10
 18368  0C64  3F00               	moviw [0]fsr0
 18369  0C65  000A               	callw
 18370  0C66  318C               	pagesel	$
 18371  0C67  0020               	movlb	0	; select bank0
 18372  0C68  00A2               	movwf	??_i2c_ISR+2
 18373  0C69  0822               	movf	??_i2c_ISR+2,w
 18374  0C6A  0021               	movlb	1	; select bank1
 18375  0C6B  00A9               	movwf	(_i2c_status^(0+128)+9)
 18376  0C6C                     i1l210:	
 18377  0C6C  0008               	return
 18378  0C6D                     __end_of_i2c_ISR:	
 18379                           
 18380                           	psect	text60
 18381  176B                     __ptext60:	
 18382 ;; *************** function _mssp1_clearIRQ *****************
 18383 ;; Defined at:
 18384 ;;		line 54 in file "mcc_generated_files/i2c1_driver.c"
 18385 ;; Parameters:    Size  Location     Type
 18386 ;;		None
 18387 ;; Auto vars:     Size  Location     Type
 18388 ;;		None
 18389 ;; Return value:  Size  Location     Type
 18390 ;;                  1    wreg      void 
 18391 ;; Registers used:
 18392 ;;		None
 18393 ;; Tracked objects:
 18394 ;;		On entry : 0/0
 18395 ;;		On exit  : 0/0
 18396 ;;		Unchanged: 0/0
 18397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18402 ;;Total ram usage:        0 bytes
 18403 ;; Hardware stack levels used:    1
 18404 ;; This function calls:
 18405 ;;		Nothing
 18406 ;; This function is called by:
 18407 ;;		_i2c_ISR
 18408 ;;		_i2c_open
 18409 ;;		_i2c_close
 18410 ;; This function uses a non-reentrant model
 18411 ;;
 18412                           
 18413                           
 18414                           ;psect for function _mssp1_clearIRQ
 18415  176B                     _mssp1_clearIRQ:	
 18416  176B                     i1l5116:	
 18417                           ;incstack = 0
 18418                           ; Regs used in _mssp1_clearIRQ: []
 18419                           
 18420                           
 18421                           ;mcc_generated_files/i2c1_driver.c: 56:         SSP1CON1 = 0x28;
 18422  176B  002E               	movlb	14	; select bank14
 18423  176C  100F               	bcf	15,0	;volatile
 18424  176D                     i1l488:	
 18425  176D  0008               	return
 18426  176E                     __end_of_mssp1_clearIRQ:	
 18427                           
 18428                           	psect	text61
 18429  0DD2                     __ptext61:	
 18430 ;; *************** function _do_I2C_RX *****************
 18431 ;; Defined at:
 18432 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 18433 ;; Parameters:    Size  Location     Type
 18434 ;;		None
 18435 ;; Auto vars:     Size  Location     Type
 18436 ;;		None
 18437 ;; Return value:  Size  Location     Type
 18438 ;;                  1    wreg      enum E12722
 18439 ;; Registers used:
 18440 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18441 ;; Tracked objects:
 18442 ;;		On entry : 0/0
 18443 ;;		On exit  : 0/0
 18444 ;;		Unchanged: 0/0
 18445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18448 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18449 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18450 ;;Total ram usage:        3 bytes
 18451 ;; Hardware stack levels used:    1
 18452 ;; Hardware stack levels required when called:    3
 18453 ;; This function calls:
 18454 ;;		Absolute function
 18455 ;;		_do_I2C_DO_NACK_RESTART
 18456 ;;		_do_I2C_DO_NACK_STOP
 18457 ;;		_i2c1_driver_getRXData
 18458 ;;		_i2c1_driver_sendACK
 18459 ;;		_i2c_restartWrite
 18460 ;;		_rd1RegCompleteHandler
 18461 ;;		_rd2RegCompleteHandler
 18462 ;;		_rdBlkRegCompleteHandler
 18463 ;;		_returnReset
 18464 ;;		_returnStop
 18465 ;;		_wr1RegCompleteHandler
 18466 ;;		_wr2RegCompleteHandler
 18467 ;; This function is called by:
 18468 ;;		_i2c_ISR
 18469 ;; This function uses a non-reentrant model
 18470 ;;
 18471                           
 18472                           
 18473                           ;psect for function _do_I2C_RX
 18474  0DD2                     _do_I2C_RX:	
 18475  0DD2                     i1l5242:	
 18476                           ;incstack = 0
 18477                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18478                           
 18479                           
 18480                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
 18481  0DD2  3197  2765  318D   	fcall	_i2c1_driver_getRXData
 18482  0DD5  00FA               	movwf	??_do_I2C_RX
 18483  0DD6  0021               	movlb	1	; select bank1
 18484  0DD7  0822               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 18485  0DD8  0086               	movwf	6
 18486  0DD9  0187               	clrf	7
 18487  0DDA  087A               	movf	??_do_I2C_RX,w
 18488  0DDB  0081               	movwf	1
 18489  0DDC                     i1l5244:	
 18490  0DDC  3001               	movlw	1
 18491  0DDD  00FA               	movwf	??_do_I2C_RX
 18492  0DDE  087A               	movf	??_do_I2C_RX,w
 18493  0DDF  07A2               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 18494  0DE0                     i1l5246:	
 18495                           
 18496                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
 18497  0DE0  3001               	movlw	1
 18498  0DE1  02A3               	subwf	(_i2c_status^(0+128)+3),f
 18499  0DE2  3000               	movlw	0
 18500  0DE3  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 18501  0DE4  0823               	movf	(_i2c_status^(0+128)+3),w
 18502  0DE5  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 18503  0DE6  1903               	btfsc	3,2
 18504  0DE7  2DE9               	goto	u251_21
 18505  0DE8  2DEA               	goto	u251_20
 18506  0DE9                     u251_21:	
 18507  0DE9  2DEF               	goto	i1l185
 18508  0DEA                     u251_20:	
 18509  0DEA                     i1l5248:	
 18510                           
 18511                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
 18512  0DEA  3197  2774  318D   	fcall	_i2c1_driver_sendACK
 18513  0DED                     i1l5250:	
 18514                           
 18515                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
 18516  0DED  3005               	movlw	5
 18517  0DEE  2E1B               	goto	i1l186
 18518  0DEF                     i1l185:	
 18519                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
 18520                           
 18521                           
 18522                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
 18523  0DEF  1520               	bsf	_i2c_status^(0+128),2
 18524                           
 18525                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 18526  0DF0  2DF9               	goto	i1l5266
 18527  0DF1                     i1l5256:	
 18528                           
 18529                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
 18530  0DF1  3197  27A8  318D   	fcall	_do_I2C_DO_NACK_RESTART
 18531  0DF4  2E1B               	goto	i1l186
 18532  0DF5                     i1l5260:	
 18533                           
 18534                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
 18535  0DF5  3197  27A3  318D   	fcall	_do_I2C_DO_NACK_STOP
 18536  0DF8  2E1B               	goto	i1l186
 18537  0DF9                     i1l5266:	
 18538  0DF9  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 18539  0DFA  00FA               	movwf	??_do_I2C_RX
 18540  0DFB  087A               	movf	??_do_I2C_RX,w
 18541  0DFC  00F9               	movwf	rdBlkRegCompleteHandler@p
 18542  0DFD  300B               	movlw	11
 18543  0DFE  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 18544  0DFF  0086               	movwf	6
 18545  0E00  0187               	clrf	7
 18546  0E01  3F41               	moviw [1]fsr1
 18547  0E02  008A               	movwf	10
 18548  0E03  3F40               	moviw [0]fsr1
 18549  0E04  000A               	callw
 18550  0E05  318D               	pagesel	$
 18551  0E06  00FB               	movwf	??_do_I2C_RX+1
 18552  0E07  01FC               	clrf	??_do_I2C_RX+2
 18553                           
 18554                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18555                           ; Switch size 1, requested type "simple"
 18556                           ; Number of cases is 1, Range of values is 0 to 0
 18557                           ; switch strategies available:
 18558                           ; Name         Instructions Cycles
 18559                           ; simple_byte            4     3 (average)
 18560                           ; direct_byte            8     6 (fixed)
 18561                           ; jumptable            260     6 (fixed)
 18562                           ;	Chosen strategy is simple_byte
 18563  0E08  087C               	movf	??_do_I2C_RX+2,w
 18564  0E09  3A00               	xorlw	0	; case 0
 18565  0E0A  1903               	skipnz
 18566  0E0B  2E0D               	goto	i1l7874
 18567  0E0C  2DF5               	goto	i1l5260
 18568  0E0D                     i1l7874:	
 18569                           
 18570                           ; Switch size 1, requested type "simple"
 18571                           ; Number of cases is 4, Range of values is 1 to 4
 18572                           ; switch strategies available:
 18573                           ; Name         Instructions Cycles
 18574                           ; simple_byte           13     7 (average)
 18575                           ; direct_byte           17     9 (fixed)
 18576                           ; jumptable            263     9 (fixed)
 18577                           ;	Chosen strategy is simple_byte
 18578  0E0D  087B               	movf	??_do_I2C_RX+1,w
 18579  0E0E  3A01               	xorlw	1	; case 1
 18580  0E0F  1903               	skipnz
 18581  0E10  2DF5               	goto	i1l5260
 18582  0E11  3A03               	xorlw	3	; case 2
 18583  0E12  1903               	skipnz
 18584  0E13  2DF1               	goto	i1l5256
 18585  0E14  3A01               	xorlw	1	; case 3
 18586  0E15  1903               	skipnz
 18587  0E16  2DF1               	goto	i1l5256
 18588  0E17  3A07               	xorlw	7	; case 4
 18589  0E18  1903               	skipnz
 18590  0E19  2DF5               	goto	i1l5260
 18591  0E1A  2DF5               	goto	i1l5260
 18592  0E1B                     i1l186:	
 18593  0E1B  0008               	return
 18594  0E1C                     __end_of_do_I2C_RX:	
 18595                           
 18596                           	psect	text62
 18597  0F04                     __ptext62:	
 18598 ;; *************** function _do_I2C_TX *****************
 18599 ;; Defined at:
 18600 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 18601 ;; Parameters:    Size  Location     Type
 18602 ;;		None
 18603 ;; Auto vars:     Size  Location     Type
 18604 ;;		None
 18605 ;; Return value:  Size  Location     Type
 18606 ;;                  1    wreg      enum E12722
 18607 ;; Registers used:
 18608 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18609 ;; Tracked objects:
 18610 ;;		On entry : 0/0
 18611 ;;		On exit  : 0/0
 18612 ;;		Unchanged: 0/0
 18613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18616 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18617 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18618 ;;Total ram usage:        3 bytes
 18619 ;; Hardware stack levels used:    1
 18620 ;; Hardware stack levels required when called:    3
 18621 ;; This function calls:
 18622 ;;		Absolute function
 18623 ;;		_do_I2C_SEND_RESTART_READ
 18624 ;;		_do_I2C_SEND_RESTART_WRITE
 18625 ;;		_do_I2C_SEND_STOP
 18626 ;;		_i2c1_driver_TXData
 18627 ;;		_i2c1_driver_isNACK
 18628 ;;		_i2c_restartWrite
 18629 ;;		_rd1RegCompleteHandler
 18630 ;;		_rd2RegCompleteHandler
 18631 ;;		_rdBlkRegCompleteHandler
 18632 ;;		_returnReset
 18633 ;;		_returnStop
 18634 ;;		_wr1RegCompleteHandler
 18635 ;;		_wr2RegCompleteHandler
 18636 ;; This function is called by:
 18637 ;;		_i2c_ISR
 18638 ;; This function uses a non-reentrant model
 18639 ;;
 18640                           
 18641                           
 18642                           ;psect for function _do_I2C_TX
 18643  0F04                     _do_I2C_TX:	
 18644  0F04                     i1l5208:	
 18645                           ;incstack = 0
 18646                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18647                           
 18648                           
 18649                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
 18650  0F04  3197  27C6  318F   	fcall	_i2c1_driver_isNACK
 18651  0F07  1C03               	btfss	3,0
 18652  0F08  2F0A               	goto	u249_21
 18653  0F09  2F0B               	goto	u249_20
 18654  0F0A                     u249_21:	
 18655  0F0A  2F3B               	goto	i1l169
 18656  0F0B                     u249_20:	
 18657  0F0B  2F18               	goto	i1l5226
 18658  0F0C                     i1l5212:	
 18659                           
 18660                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
 18661  0F0C  3197  278A  318F   	fcall	_do_I2C_SEND_RESTART_READ
 18662  0F0F  2F57               	goto	i1l172
 18663  0F10                     i1l5216:	
 18664                           
 18665                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
 18666  0F10  3197  278F  318F   	fcall	_do_I2C_SEND_RESTART_WRITE
 18667  0F13  2F57               	goto	i1l172
 18668  0F14                     i1l5220:	
 18669                           
 18670                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
 18671  0F14  3197  2799  318F   	fcall	_do_I2C_SEND_STOP
 18672  0F17  2F57               	goto	i1l172
 18673  0F18                     i1l5226:	
 18674  0F18  0021               	movlb	1	; select bank1
 18675  0F19  083A               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 18676  0F1A  00FA               	movwf	??_do_I2C_TX
 18677  0F1B  087A               	movf	??_do_I2C_TX,w
 18678  0F1C  00F9               	movwf	rdBlkRegCompleteHandler@p
 18679  0F1D  3011               	movlw	17
 18680  0F1E  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 18681  0F1F  0086               	movwf	6
 18682  0F20  0187               	clrf	7
 18683  0F21  3F41               	moviw [1]fsr1
 18684  0F22  008A               	movwf	10
 18685  0F23  3F40               	moviw [0]fsr1
 18686  0F24  000A               	callw
 18687  0F25  318F               	pagesel	$
 18688  0F26  00FB               	movwf	??_do_I2C_TX+1
 18689  0F27  01FC               	clrf	??_do_I2C_TX+2
 18690                           
 18691                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18692                           ; Switch size 1, requested type "simple"
 18693                           ; Number of cases is 1, Range of values is 0 to 0
 18694                           ; switch strategies available:
 18695                           ; Name         Instructions Cycles
 18696                           ; simple_byte            4     3 (average)
 18697                           ; direct_byte            8     6 (fixed)
 18698                           ; jumptable            260     6 (fixed)
 18699                           ;	Chosen strategy is simple_byte
 18700  0F28  087C               	movf	??_do_I2C_TX+2,w
 18701  0F29  3A00               	xorlw	0	; case 0
 18702  0F2A  1903               	skipnz
 18703  0F2B  2F2D               	goto	i1l7876
 18704  0F2C  2F14               	goto	i1l5220
 18705  0F2D                     i1l7876:	
 18706                           
 18707                           ; Switch size 1, requested type "simple"
 18708                           ; Number of cases is 4, Range of values is 1 to 4
 18709                           ; switch strategies available:
 18710                           ; Name         Instructions Cycles
 18711                           ; simple_byte           13     7 (average)
 18712                           ; direct_byte           17     9 (fixed)
 18713                           ; jumptable            263     9 (fixed)
 18714                           ;	Chosen strategy is simple_byte
 18715  0F2D  087B               	movf	??_do_I2C_TX+1,w
 18716  0F2E  3A01               	xorlw	1	; case 1
 18717  0F2F  1903               	skipnz
 18718  0F30  2F14               	goto	i1l5220
 18719  0F31  3A03               	xorlw	3	; case 2
 18720  0F32  1903               	skipnz
 18721  0F33  2F0C               	goto	i1l5212
 18722  0F34  3A01               	xorlw	1	; case 3
 18723  0F35  1903               	skipnz
 18724  0F36  2F10               	goto	i1l5216
 18725  0F37  3A07               	xorlw	7	; case 4
 18726  0F38  1903               	skipnz
 18727  0F39  2F14               	goto	i1l5220
 18728  0F3A  2F14               	goto	i1l5220
 18729  0F3B                     i1l169:	
 18730                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
 18731                           
 18732                           
 18733                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
 18734  0F3B  0021               	movlb	1	; select bank1
 18735  0F3C  11A0               	bcf	_i2c_status^(0+128),3
 18736  0F3D                     i1l5228:	
 18737                           
 18738                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
 18739  0F3D  3002               	movlw	2
 18740  0F3E  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 18741  0F3F  0086               	movwf	6
 18742  0F40  0187               	clrf	7
 18743  0F41  3F40               	moviw [0]fsr1
 18744  0F42  0084               	movwf	4
 18745  0F43  0185               	clrf	5
 18746  0F44  0A81               	incf	1,f
 18747  0F45  0800               	movf	0,w
 18748  0F46  3197  2780  318F   	fcall	_i2c1_driver_TXData
 18749  0F49                     i1l5230:	
 18750                           
 18751                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
 18752  0F49  3001               	movlw	1
 18753  0F4A  0021               	movlb	1	; select bank1
 18754  0F4B  02A3               	subwf	(_i2c_status^(0+128)+3),f
 18755  0F4C  3000               	movlw	0
 18756  0F4D  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 18757  0F4E  0823               	movf	(_i2c_status^(0+128)+3),w
 18758  0F4F  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 18759  0F50  1D03               	btfss	3,2
 18760  0F51  2F53               	goto	u250_21
 18761  0F52  2F54               	goto	u250_20
 18762  0F53                     u250_21:	
 18763  0F53  2F56               	goto	i1l5234
 18764  0F54                     u250_20:	
 18765  0F54                     i1l5232:	
 18766  0F54  3006               	movlw	6
 18767  0F55  2F57               	goto	i1l172
 18768  0F56                     i1l5234:	
 18769  0F56  3003               	movlw	3
 18770  0F57                     i1l172:	
 18771  0F57  0008               	return
 18772  0F58                     __end_of_do_I2C_TX:	
 18773                           
 18774                           	psect	text63
 18775  0C14                     __ptext63:	
 18776 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 18777 ;; Defined at:
 18778 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 18779 ;; Parameters:    Size  Location     Type
 18780 ;;		None
 18781 ;; Auto vars:     Size  Location     Type
 18782 ;;		None
 18783 ;; Return value:  Size  Location     Type
 18784 ;;                  1    wreg      enum E12722
 18785 ;; Registers used:
 18786 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18787 ;; Tracked objects:
 18788 ;;		On entry : 0/0
 18789 ;;		On exit  : 0/0
 18790 ;;		Unchanged: 0/0
 18791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18794 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18795 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18796 ;;Total ram usage:        3 bytes
 18797 ;; Hardware stack levels used:    1
 18798 ;; Hardware stack levels required when called:    3
 18799 ;; This function calls:
 18800 ;;		Absolute function
 18801 ;;		_do_I2C_SEND_RESTART
 18802 ;;		_do_I2C_SEND_STOP
 18803 ;;		_i2c_restartWrite
 18804 ;;		_rd1RegCompleteHandler
 18805 ;;		_rd2RegCompleteHandler
 18806 ;;		_rdBlkRegCompleteHandler
 18807 ;;		_returnReset
 18808 ;;		_returnStop
 18809 ;;		_wr1RegCompleteHandler
 18810 ;;		_wr2RegCompleteHandler
 18811 ;; This function is called by:
 18812 ;;		_i2c_ISR
 18813 ;; This function uses a non-reentrant model
 18814 ;;
 18815                           
 18816                           
 18817                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 18818  0C14                     _do_I2C_DO_ADDRESS_NACK:	
 18819  0C14                     i1l5186:	
 18820                           ;incstack = 0
 18821                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18822                           
 18823                           
 18824                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
 18825  0C14  0021               	movlb	1	; select bank1
 18826  0C15  11A0               	bcf	_i2c_status^(0+128),3
 18827  0C16                     i1l5188:	
 18828                           
 18829                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
 18830  0C16  3002               	movlw	2
 18831  0C17  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 18832  0C18  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 18833  0C19  00AA               	movwf	(_i2c_status^(0+128)+10)
 18834                           
 18835                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
 18836  0C1A  2C23               	goto	i1l5200
 18837  0C1B                     i1l5190:	
 18838                           
 18839                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
 18840  0C1B  3197  2794  318C   	fcall	_do_I2C_SEND_RESTART
 18841  0C1E  2C3F               	goto	i1l164
 18842  0C1F                     i1l5194:	
 18843                           
 18844                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
 18845  0C1F  3197  2799  318C   	fcall	_do_I2C_SEND_STOP
 18846  0C22  2C3F               	goto	i1l164
 18847  0C23                     i1l5200:	
 18848  0C23  0839               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 18849  0C24  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 18850  0C25  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 18851  0C26  00F9               	movwf	rdBlkRegCompleteHandler@p
 18852  0C27  300F               	movlw	15
 18853  0C28  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 18854  0C29  0086               	movwf	6
 18855  0C2A  0187               	clrf	7
 18856  0C2B  3F41               	moviw [1]fsr1
 18857  0C2C  008A               	movwf	10
 18858  0C2D  3F40               	moviw [0]fsr1
 18859  0C2E  000A               	callw
 18860  0C2F  318C               	pagesel	$
 18861  0C30  00FB               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
 18862  0C31  01FC               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
 18863                           
 18864                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18865                           ; Switch size 1, requested type "simple"
 18866                           ; Number of cases is 1, Range of values is 0 to 0
 18867                           ; switch strategies available:
 18868                           ; Name         Instructions Cycles
 18869                           ; simple_byte            4     3 (average)
 18870                           ; direct_byte            8     6 (fixed)
 18871                           ; jumptable            260     6 (fixed)
 18872                           ;	Chosen strategy is simple_byte
 18873  0C32  087C               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
 18874  0C33  3A00               	xorlw	0	; case 0
 18875  0C34  1903               	skipnz
 18876  0C35  2C37               	goto	i1l7878
 18877  0C36  2C1F               	goto	i1l5194
 18878  0C37                     i1l7878:	
 18879                           
 18880                           ; Switch size 1, requested type "simple"
 18881                           ; Number of cases is 2, Range of values is 2 to 3
 18882                           ; switch strategies available:
 18883                           ; Name         Instructions Cycles
 18884                           ; simple_byte            7     4 (average)
 18885                           ; direct_byte           13     9 (fixed)
 18886                           ; jumptable            263     9 (fixed)
 18887                           ;	Chosen strategy is simple_byte
 18888  0C37  087B               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
 18889  0C38  3A02               	xorlw	2	; case 2
 18890  0C39  1903               	skipnz
 18891  0C3A  2C1B               	goto	i1l5190
 18892  0C3B  3A01               	xorlw	1	; case 3
 18893  0C3C  1903               	skipnz
 18894  0C3D  2C1B               	goto	i1l5190
 18895  0C3E  2C1F               	goto	i1l5194
 18896  0C3F                     i1l164:	
 18897  0C3F  0008               	return
 18898  0C40                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 18899                           
 18900                           	psect	text64
 18901  17A8                     __ptext64:	
 18902 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 18903 ;; Defined at:
 18904 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 18905 ;; Parameters:    Size  Location     Type
 18906 ;;		None
 18907 ;; Auto vars:     Size  Location     Type
 18908 ;;		None
 18909 ;; Return value:  Size  Location     Type
 18910 ;;                  1    wreg      enum E12722
 18911 ;; Registers used:
 18912 ;;		wreg, status,2, status,0, pclath, cstack
 18913 ;; Tracked objects:
 18914 ;;		On entry : 0/0
 18915 ;;		On exit  : 0/0
 18916 ;;		Unchanged: 0/0
 18917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18922 ;;Total ram usage:        0 bytes
 18923 ;; Hardware stack levels used:    1
 18924 ;; Hardware stack levels required when called:    1
 18925 ;; This function calls:
 18926 ;;		_i2c1_driver_sendNACK
 18927 ;; This function is called by:
 18928 ;;		_do_I2C_RX
 18929 ;;		_i2c_ISR
 18930 ;; This function uses a non-reentrant model
 18931 ;;
 18932                           
 18933                           
 18934                           ;psect for function _do_I2C_DO_NACK_RESTART
 18935  17A8                     _do_I2C_DO_NACK_RESTART:	
 18936  17A8                     i1l4896:	
 18937                           ;incstack = 0
 18938                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 18939                           
 18940                           
 18941                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
 18942  17A8  3197  2778  3197   	fcall	_i2c1_driver_sendNACK
 18943  17AB                     i1l4898:	
 18944                           
 18945                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
 18946  17AB  3009               	movlw	9
 18947  17AC                     i1l158:	
 18948  17AC  0008               	return
 18949  17AD                     __end_of_do_I2C_DO_NACK_RESTART:	
 18950                           
 18951                           	psect	text65
 18952  17A3                     __ptext65:	
 18953 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 18954 ;; Defined at:
 18955 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 18956 ;; Parameters:    Size  Location     Type
 18957 ;;		None
 18958 ;; Auto vars:     Size  Location     Type
 18959 ;;		None
 18960 ;; Return value:  Size  Location     Type
 18961 ;;                  1    wreg      enum E12722
 18962 ;; Registers used:
 18963 ;;		wreg, status,2, status,0, pclath, cstack
 18964 ;; Tracked objects:
 18965 ;;		On entry : 0/0
 18966 ;;		On exit  : 0/0
 18967 ;;		Unchanged: 0/0
 18968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18973 ;;Total ram usage:        0 bytes
 18974 ;; Hardware stack levels used:    1
 18975 ;; Hardware stack levels required when called:    1
 18976 ;; This function calls:
 18977 ;;		_i2c1_driver_sendNACK
 18978 ;; This function is called by:
 18979 ;;		_do_I2C_RX
 18980 ;;		_i2c_ISR
 18981 ;; This function uses a non-reentrant model
 18982 ;;
 18983                           
 18984                           
 18985                           ;psect for function _do_I2C_DO_NACK_STOP
 18986  17A3                     _do_I2C_DO_NACK_STOP:	
 18987  17A3                     i1l4890:	
 18988                           ;incstack = 0
 18989                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 18990                           
 18991                           
 18992                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
 18993  17A3  3197  2778  3197   	fcall	_i2c1_driver_sendNACK
 18994  17A6                     i1l4892:	
 18995                           
 18996                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
 18997  17A6  300A               	movlw	10
 18998  17A7                     i1l155:	
 18999  17A7  0008               	return
 19000  17A8                     __end_of_do_I2C_DO_NACK_STOP:	
 19001                           
 19002                           	psect	text66
 19003  179E                     __ptext66:	
 19004 ;; *************** function _do_I2C_DO_ACK *****************
 19005 ;; Defined at:
 19006 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 19007 ;; Parameters:    Size  Location     Type
 19008 ;;		None
 19009 ;; Auto vars:     Size  Location     Type
 19010 ;;		None
 19011 ;; Return value:  Size  Location     Type
 19012 ;;                  1    wreg      enum E12722
 19013 ;; Registers used:
 19014 ;;		wreg, status,2, status,0, pclath, cstack
 19015 ;; Tracked objects:
 19016 ;;		On entry : 0/0
 19017 ;;		On exit  : 0/0
 19018 ;;		Unchanged: 0/0
 19019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19024 ;;Total ram usage:        0 bytes
 19025 ;; Hardware stack levels used:    1
 19026 ;; Hardware stack levels required when called:    1
 19027 ;; This function calls:
 19028 ;;		_i2c1_driver_sendACK
 19029 ;; This function is called by:
 19030 ;;		_i2c_ISR
 19031 ;; This function uses a non-reentrant model
 19032 ;;
 19033                           
 19034                           
 19035                           ;psect for function _do_I2C_DO_ACK
 19036  179E                     _do_I2C_DO_ACK:	
 19037  179E                     i1l5180:	
 19038                           ;incstack = 0
 19039                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 19040                           
 19041                           
 19042                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
 19043  179E  3197  2774  3197   	fcall	_i2c1_driver_sendACK
 19044  17A1                     i1l5182:	
 19045                           
 19046                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
 19047  17A1  3005               	movlw	5
 19048  17A2                     i1l152:	
 19049  17A2  0008               	return
 19050  17A3                     __end_of_do_I2C_DO_ACK:	
 19051                           
 19052                           	psect	text67
 19053  17BF                     __ptext67:	
 19054 ;; *************** function _do_I2C_RCEN *****************
 19055 ;; Defined at:
 19056 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 19057 ;; Parameters:    Size  Location     Type
 19058 ;;		None
 19059 ;; Auto vars:     Size  Location     Type
 19060 ;;		None
 19061 ;; Return value:  Size  Location     Type
 19062 ;;                  1    wreg      enum E12722
 19063 ;; Registers used:
 19064 ;;		wreg, status,2, status,0, pclath, cstack
 19065 ;; Tracked objects:
 19066 ;;		On entry : 0/0
 19067 ;;		On exit  : 0/0
 19068 ;;		Unchanged: 0/0
 19069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19074 ;;Total ram usage:        0 bytes
 19075 ;; Hardware stack levels used:    1
 19076 ;; Hardware stack levels required when called:    1
 19077 ;; This function calls:
 19078 ;;		_i2c1_driver_startRX
 19079 ;; This function is called by:
 19080 ;;		_i2c_ISR
 19081 ;; This function uses a non-reentrant model
 19082 ;;
 19083                           
 19084                           
 19085                           ;psect for function _do_I2C_RCEN
 19086  17BF                     _do_I2C_RCEN:	
 19087  17BF                     i1l5172:	
 19088                           ;incstack = 0
 19089                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 19090                           
 19091                           
 19092                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
 19093  17BF  0021               	movlb	1	; select bank1
 19094  17C0  11A0               	bcf	_i2c_status^(0+128),3
 19095  17C1                     i1l5174:	
 19096                           
 19097                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
 19098  17C1  3197  2762  3197   	fcall	_i2c1_driver_startRX
 19099  17C4                     i1l5176:	
 19100                           
 19101                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
 19102  17C4  3004               	movlw	4
 19103  17C5                     i1l149:	
 19104  17C5  0008               	return
 19105  17C6                     __end_of_do_I2C_RCEN:	
 19106                           
 19107                           	psect	text68
 19108  17D6                     __ptext68:	
 19109 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 19110 ;; Defined at:
 19111 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 19112 ;; Parameters:    Size  Location     Type
 19113 ;;		None
 19114 ;; Auto vars:     Size  Location     Type
 19115 ;;		None
 19116 ;; Return value:  Size  Location     Type
 19117 ;;                  1    wreg      enum E12722
 19118 ;; Registers used:
 19119 ;;		wreg, status,2, status,0, pclath, cstack
 19120 ;; Tracked objects:
 19121 ;;		On entry : 0/0
 19122 ;;		On exit  : 0/0
 19123 ;;		Unchanged: 0/0
 19124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19129 ;;Total ram usage:        0 bytes
 19130 ;; Hardware stack levels used:    1
 19131 ;; Hardware stack levels required when called:    1
 19132 ;; This function calls:
 19133 ;;		_i2c1_driver_TXData
 19134 ;; This function is called by:
 19135 ;;		_i2c_ISR
 19136 ;; This function uses a non-reentrant model
 19137 ;;
 19138                           
 19139                           
 19140                           ;psect for function _do_I2C_SEND_ADR_WRITE
 19141  17D6                     _do_I2C_SEND_ADR_WRITE:	
 19142  17D6                     i1l5164:	
 19143                           ;incstack = 0
 19144                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 19145                           
 19146                           
 19147                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
 19148  17D6  0021               	movlb	1	; select bank1
 19149  17D7  15A0               	bsf	_i2c_status^(0+128),3
 19150  17D8                     i1l5166:	
 19151                           
 19152                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
 19153  17D8  3521               	lslf	(_i2c_status^(0+128)+1),w
 19154  17D9  3197  2780  3197   	fcall	_i2c1_driver_TXData
 19155  17DC                     i1l5168:	
 19156                           
 19157                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
 19158  17DC  3003               	movlw	3
 19159  17DD                     i1l146:	
 19160  17DD  0008               	return
 19161  17DE                     __end_of_do_I2C_SEND_ADR_WRITE:	
 19162                           
 19163                           	psect	text69
 19164  17EE                     __ptext69:	
 19165 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 19166 ;; Defined at:
 19167 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 19168 ;; Parameters:    Size  Location     Type
 19169 ;;		None
 19170 ;; Auto vars:     Size  Location     Type
 19171 ;;		None
 19172 ;; Return value:  Size  Location     Type
 19173 ;;                  1    wreg      enum E12722
 19174 ;; Registers used:
 19175 ;;		wreg, status,2, status,0, pclath, cstack
 19176 ;; Tracked objects:
 19177 ;;		On entry : 0/0
 19178 ;;		On exit  : 0/0
 19179 ;;		Unchanged: 0/0
 19180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19185 ;;Total ram usage:        0 bytes
 19186 ;; Hardware stack levels used:    1
 19187 ;; Hardware stack levels required when called:    1
 19188 ;; This function calls:
 19189 ;;		_i2c1_driver_TXData
 19190 ;; This function is called by:
 19191 ;;		_i2c_ISR
 19192 ;; This function uses a non-reentrant model
 19193 ;;
 19194                           
 19195                           
 19196                           ;psect for function _do_I2C_SEND_ADR_READ
 19197  17EE                     _do_I2C_SEND_ADR_READ:	
 19198  17EE                     i1l5156:	
 19199                           ;incstack = 0
 19200                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 19201                           
 19202                           
 19203                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
 19204  17EE  0021               	movlb	1	; select bank1
 19205  17EF  15A0               	bsf	_i2c_status^(0+128),3
 19206  17F0                     i1l5158:	
 19207                           
 19208                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
 19209  17F0  1403               	setc
 19210  17F1  0D21               	rlf	(_i2c_status^(0+128)+1),w
 19211  17F2  3197  2780  3197   	fcall	_i2c1_driver_TXData
 19212  17F5                     i1l5160:	
 19213                           
 19214                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
 19215  17F5  3005               	movlw	5
 19216  17F6                     i1l143:	
 19217  17F6  0008               	return
 19218  17F7                     __end_of_do_I2C_SEND_ADR_READ:	
 19219                           
 19220                           	psect	text70
 19221  1799                     __ptext70:	
 19222 ;; *************** function _do_I2C_SEND_STOP *****************
 19223 ;; Defined at:
 19224 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 19225 ;; Parameters:    Size  Location     Type
 19226 ;;		None
 19227 ;; Auto vars:     Size  Location     Type
 19228 ;;		None
 19229 ;; Return value:  Size  Location     Type
 19230 ;;                  1    wreg      enum E12722
 19231 ;; Registers used:
 19232 ;;		wreg, status,2, status,0, pclath, cstack
 19233 ;; Tracked objects:
 19234 ;;		On entry : 0/0
 19235 ;;		On exit  : 0/0
 19236 ;;		Unchanged: 0/0
 19237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19242 ;;Total ram usage:        0 bytes
 19243 ;; Hardware stack levels used:    1
 19244 ;; Hardware stack levels required when called:    1
 19245 ;; This function calls:
 19246 ;;		_i2c1_driver_stop
 19247 ;; This function is called by:
 19248 ;;		_do_I2C_DO_ADDRESS_NACK
 19249 ;;		_do_I2C_TX
 19250 ;;		_do_I2C_TX_EMPTY
 19251 ;;		_i2c_ISR
 19252 ;; This function uses a non-reentrant model
 19253 ;;
 19254                           
 19255                           
 19256                           ;psect for function _do_I2C_SEND_STOP
 19257  1799                     _do_I2C_SEND_STOP:	
 19258  1799                     i1l4878:	
 19259                           ;incstack = 0
 19260                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 19261                           
 19262                           
 19263                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
 19264  1799  3197  275F  3197   	fcall	_i2c1_driver_stop
 19265  179C                     i1l4880:	
 19266                           
 19267                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
 19268  179C  3000               	movlw	0
 19269  179D                     i1l140:	
 19270  179D  0008               	return
 19271  179E                     __end_of_do_I2C_SEND_STOP:	
 19272                           
 19273                           	psect	text71
 19274  1794                     __ptext71:	
 19275 ;; *************** function _do_I2C_SEND_RESTART *****************
 19276 ;; Defined at:
 19277 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 19278 ;; Parameters:    Size  Location     Type
 19279 ;;		None
 19280 ;; Auto vars:     Size  Location     Type
 19281 ;;		None
 19282 ;; Return value:  Size  Location     Type
 19283 ;;                  1    wreg      enum E12722
 19284 ;; Registers used:
 19285 ;;		wreg, status,2, status,0, pclath, cstack
 19286 ;; Tracked objects:
 19287 ;;		On entry : 0/0
 19288 ;;		On exit  : 0/0
 19289 ;;		Unchanged: 0/0
 19290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19295 ;;Total ram usage:        0 bytes
 19296 ;; Hardware stack levels used:    1
 19297 ;; Hardware stack levels required when called:    1
 19298 ;; This function calls:
 19299 ;;		_i2c1_driver_restart
 19300 ;; This function is called by:
 19301 ;;		_do_I2C_DO_ADDRESS_NACK
 19302 ;;		_do_I2C_TX_EMPTY
 19303 ;;		_i2c_ISR
 19304 ;; This function uses a non-reentrant model
 19305 ;;
 19306                           
 19307                           
 19308                           ;psect for function _do_I2C_SEND_RESTART
 19309  1794                     _do_I2C_SEND_RESTART:	
 19310  1794                     i1l4872:	
 19311                           ;incstack = 0
 19312                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 19313                           
 19314                           
 19315                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
 19316  1794  3197  275C  3197   	fcall	_i2c1_driver_restart
 19317  1797                     i1l4874:	
 19318                           
 19319                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
 19320  1797  3001               	movlw	1
 19321  1798                     i1l137:	
 19322  1798  0008               	return
 19323  1799                     __end_of_do_I2C_SEND_RESTART:	
 19324                           
 19325                           	psect	text72
 19326  178F                     __ptext72:	
 19327 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 19328 ;; Defined at:
 19329 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 19330 ;; Parameters:    Size  Location     Type
 19331 ;;		None
 19332 ;; Auto vars:     Size  Location     Type
 19333 ;;		None
 19334 ;; Return value:  Size  Location     Type
 19335 ;;                  1    wreg      enum E12722
 19336 ;; Registers used:
 19337 ;;		wreg, status,2, status,0, pclath, cstack
 19338 ;; Tracked objects:
 19339 ;;		On entry : 0/0
 19340 ;;		On exit  : 0/0
 19341 ;;		Unchanged: 0/0
 19342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19347 ;;Total ram usage:        0 bytes
 19348 ;; Hardware stack levels used:    1
 19349 ;; Hardware stack levels required when called:    1
 19350 ;; This function calls:
 19351 ;;		_i2c1_driver_restart
 19352 ;; This function is called by:
 19353 ;;		_do_I2C_TX
 19354 ;;		_i2c_ISR
 19355 ;; This function uses a non-reentrant model
 19356 ;;
 19357                           
 19358                           
 19359                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 19360  178F                     _do_I2C_SEND_RESTART_WRITE:	
 19361  178F                     i1l4866:	
 19362                           ;incstack = 0
 19363                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 19364                           
 19365                           
 19366                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
 19367  178F  3197  275C  3197   	fcall	_i2c1_driver_restart
 19368  1792                     i1l4868:	
 19369                           
 19370                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
 19371  1792  3002               	movlw	2
 19372  1793                     i1l134:	
 19373  1793  0008               	return
 19374  1794                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 19375                           
 19376                           	psect	text73
 19377  178A                     __ptext73:	
 19378 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 19379 ;; Defined at:
 19380 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 19381 ;; Parameters:    Size  Location     Type
 19382 ;;		None
 19383 ;; Auto vars:     Size  Location     Type
 19384 ;;		None
 19385 ;; Return value:  Size  Location     Type
 19386 ;;                  1    wreg      enum E12722
 19387 ;; Registers used:
 19388 ;;		wreg, status,2, status,0, pclath, cstack
 19389 ;; Tracked objects:
 19390 ;;		On entry : 0/0
 19391 ;;		On exit  : 0/0
 19392 ;;		Unchanged: 0/0
 19393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19398 ;;Total ram usage:        0 bytes
 19399 ;; Hardware stack levels used:    1
 19400 ;; Hardware stack levels required when called:    1
 19401 ;; This function calls:
 19402 ;;		_i2c1_driver_restart
 19403 ;; This function is called by:
 19404 ;;		_do_I2C_TX
 19405 ;;		_i2c_ISR
 19406 ;; This function uses a non-reentrant model
 19407 ;;
 19408                           
 19409                           
 19410                           ;psect for function _do_I2C_SEND_RESTART_READ
 19411  178A                     _do_I2C_SEND_RESTART_READ:	
 19412  178A                     i1l4860:	
 19413                           ;incstack = 0
 19414                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 19415                           
 19416                           
 19417                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
 19418  178A  3197  275C  3197   	fcall	_i2c1_driver_restart
 19419  178D                     i1l4862:	
 19420                           
 19421                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
 19422  178D  3001               	movlw	1
 19423  178E                     i1l131:	
 19424  178E  0008               	return
 19425  178F                     __end_of_do_I2C_SEND_RESTART_READ:	
 19426                           
 19427                           	psect	text74
 19428  1785                     __ptext74:	
 19429 ;; *************** function _do_I2C_IDLE *****************
 19430 ;; Defined at:
 19431 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 19432 ;; Parameters:    Size  Location     Type
 19433 ;;		None
 19434 ;; Auto vars:     Size  Location     Type
 19435 ;;		None
 19436 ;; Return value:  Size  Location     Type
 19437 ;;                  1    wreg      enum E12722
 19438 ;; Registers used:
 19439 ;;		wreg, status,2
 19440 ;; Tracked objects:
 19441 ;;		On entry : 0/0
 19442 ;;		On exit  : 0/0
 19443 ;;		Unchanged: 0/0
 19444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19449 ;;Total ram usage:        0 bytes
 19450 ;; Hardware stack levels used:    1
 19451 ;; This function calls:
 19452 ;;		Nothing
 19453 ;; This function is called by:
 19454 ;;		_i2c_ISR
 19455 ;; This function uses a non-reentrant model
 19456 ;;
 19457                           
 19458                           
 19459                           ;psect for function _do_I2C_IDLE
 19460  1785                     _do_I2C_IDLE:	
 19461  1785                     i1l5148:	
 19462                           ;incstack = 0
 19463                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 19464                           
 19465                           
 19466                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
 19467  1785  0021               	movlb	1	; select bank1
 19468  1786  1020               	bcf	_i2c_status^(0+128),0
 19469  1787                     i1l5150:	
 19470                           
 19471                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
 19472  1787  01AA               	clrf	(_i2c_status^(0+128)+10)
 19473  1788                     i1l5152:	
 19474                           
 19475                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
 19476  1788  300E               	movlw	14
 19477  1789                     i1l128:	
 19478  1789  0008               	return
 19479  178A                     __end_of_do_I2C_IDLE:	
 19480                           
 19481                           	psect	text75
 19482  17CE                     __ptext75:	
 19483 ;; *************** function _do_I2C_RESET *****************
 19484 ;; Defined at:
 19485 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 19486 ;; Parameters:    Size  Location     Type
 19487 ;;		None
 19488 ;; Auto vars:     Size  Location     Type
 19489 ;;		None
 19490 ;; Return value:  Size  Location     Type
 19491 ;;                  1    wreg      enum E12722
 19492 ;; Registers used:
 19493 ;;		wreg, status,2, status,0, pclath, cstack
 19494 ;; Tracked objects:
 19495 ;;		On entry : 0/0
 19496 ;;		On exit  : 0/0
 19497 ;;		Unchanged: 0/0
 19498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19503 ;;Total ram usage:        0 bytes
 19504 ;; Hardware stack levels used:    1
 19505 ;; Hardware stack levels required when called:    1
 19506 ;; This function calls:
 19507 ;;		_i2c1_driver_resetBus
 19508 ;; This function is called by:
 19509 ;;		_i2c_ISR
 19510 ;; This function uses a non-reentrant model
 19511 ;;
 19512                           
 19513                           
 19514                           ;psect for function _do_I2C_RESET
 19515  17CE                     _do_I2C_RESET:	
 19516  17CE                     i1l5138:	
 19517                           ;incstack = 0
 19518                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 19519                           
 19520                           
 19521                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
 19522  17CE  3197  2754  3197   	fcall	_i2c1_driver_resetBus
 19523  17D1                     i1l5140:	
 19524                           
 19525                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
 19526  17D1  0021               	movlb	1	; select bank1
 19527  17D2  1020               	bcf	_i2c_status^(0+128),0
 19528  17D3                     i1l5142:	
 19529                           
 19530                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
 19531  17D3  01AA               	clrf	(_i2c_status^(0+128)+10)
 19532  17D4                     i1l5144:	
 19533                           
 19534                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
 19535  17D4  300E               	movlw	14
 19536  17D5                     i1l125:	
 19537  17D5  0008               	return
 19538  17D6                     __end_of_do_I2C_RESET:	
 19539                           
 19540                           	psect	text76
 19541  0C9C                     __ptext76:	
 19542 ;; *************** function _do_I2C_TX_EMPTY *****************
 19543 ;; Defined at:
 19544 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 19545 ;; Parameters:    Size  Location     Type
 19546 ;;		None
 19547 ;; Auto vars:     Size  Location     Type
 19548 ;;		None
 19549 ;; Return value:  Size  Location     Type
 19550 ;;                  1    wreg      enum E12722
 19551 ;; Registers used:
 19552 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19553 ;; Tracked objects:
 19554 ;;		On entry : 0/0
 19555 ;;		On exit  : 0/0
 19556 ;;		Unchanged: 0/0
 19557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19560 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19561 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19562 ;;Total ram usage:        3 bytes
 19563 ;; Hardware stack levels used:    1
 19564 ;; Hardware stack levels required when called:    3
 19565 ;; This function calls:
 19566 ;;		Absolute function
 19567 ;;		_do_I2C_SEND_RESTART
 19568 ;;		_do_I2C_SEND_STOP
 19569 ;;		_i2c_restartWrite
 19570 ;;		_mssp1_setIRQ
 19571 ;;		_rd1RegCompleteHandler
 19572 ;;		_rd2RegCompleteHandler
 19573 ;;		_rdBlkRegCompleteHandler
 19574 ;;		_returnReset
 19575 ;;		_returnStop
 19576 ;;		_wr1RegCompleteHandler
 19577 ;;		_wr2RegCompleteHandler
 19578 ;; This function is called by:
 19579 ;;		_i2c_ISR
 19580 ;; This function uses a non-reentrant model
 19581 ;;
 19582                           
 19583                           
 19584                           ;psect for function _do_I2C_TX_EMPTY
 19585  0C9C                     _do_I2C_TX_EMPTY:	
 19586  0C9C                     i1l5274:	
 19587                           ;incstack = 0
 19588                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19589                           
 19590                           
 19591                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
 19592  0C9C  0021               	movlb	1	; select bank1
 19593  0C9D  1520               	bsf	_i2c_status^(0+128),2
 19594                           
 19595                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 19596  0C9E  2CAC               	goto	i1l5292
 19597  0C9F                     i1l5276:	
 19598                           
 19599                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
 19600  0C9F  3197  2794  318C   	fcall	_do_I2C_SEND_RESTART
 19601  0CA2  2CCE               	goto	i1l200
 19602  0CA3                     i1l5280:	
 19603                           
 19604                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
 19605  0CA3  3197  2768  318C   	fcall	_mssp1_setIRQ
 19606  0CA6                     i1l5282:	
 19607                           
 19608                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
 19609  0CA6  3003               	movlw	3
 19610  0CA7  2CCE               	goto	i1l200
 19611  0CA8                     i1l5286:	
 19612                           
 19613                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
 19614  0CA8  3197  2799  318C   	fcall	_do_I2C_SEND_STOP
 19615  0CAB  2CCE               	goto	i1l200
 19616  0CAC                     i1l5292:	
 19617  0CAC  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 19618  0CAD  00FA               	movwf	??_do_I2C_TX_EMPTY
 19619  0CAE  087A               	movf	??_do_I2C_TX_EMPTY,w
 19620  0CAF  00F9               	movwf	rdBlkRegCompleteHandler@p
 19621  0CB0  300B               	movlw	11
 19622  0CB1  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 19623  0CB2  0086               	movwf	6
 19624  0CB3  0187               	clrf	7
 19625  0CB4  3F41               	moviw [1]fsr1
 19626  0CB5  008A               	movwf	10
 19627  0CB6  3F40               	moviw [0]fsr1
 19628  0CB7  000A               	callw
 19629  0CB8  318C               	pagesel	$
 19630  0CB9  00FB               	movwf	??_do_I2C_TX_EMPTY+1
 19631  0CBA  01FC               	clrf	??_do_I2C_TX_EMPTY+2
 19632                           
 19633                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19634                           ; Switch size 1, requested type "simple"
 19635                           ; Number of cases is 1, Range of values is 0 to 0
 19636                           ; switch strategies available:
 19637                           ; Name         Instructions Cycles
 19638                           ; simple_byte            4     3 (average)
 19639                           ; direct_byte            8     6 (fixed)
 19640                           ; jumptable            260     6 (fixed)
 19641                           ;	Chosen strategy is simple_byte
 19642  0CBB  087C               	movf	??_do_I2C_TX_EMPTY+2,w
 19643  0CBC  3A00               	xorlw	0	; case 0
 19644  0CBD  1903               	skipnz
 19645  0CBE  2CC0               	goto	i1l7880
 19646  0CBF  2CA8               	goto	i1l5286
 19647  0CC0                     i1l7880:	
 19648                           
 19649                           ; Switch size 1, requested type "simple"
 19650                           ; Number of cases is 4, Range of values is 1 to 4
 19651                           ; switch strategies available:
 19652                           ; Name         Instructions Cycles
 19653                           ; simple_byte           13     7 (average)
 19654                           ; direct_byte           17     9 (fixed)
 19655                           ; jumptable            263     9 (fixed)
 19656                           ;	Chosen strategy is simple_byte
 19657  0CC0  087B               	movf	??_do_I2C_TX_EMPTY+1,w
 19658  0CC1  3A01               	xorlw	1	; case 1
 19659  0CC2  1903               	skipnz
 19660  0CC3  2CA8               	goto	i1l5286
 19661  0CC4  3A03               	xorlw	3	; case 2
 19662  0CC5  1903               	skipnz
 19663  0CC6  2C9F               	goto	i1l5276
 19664  0CC7  3A01               	xorlw	1	; case 3
 19665  0CC8  1903               	skipnz
 19666  0CC9  2C9F               	goto	i1l5276
 19667  0CCA  3A07               	xorlw	7	; case 4
 19668  0CCB  1903               	skipnz
 19669  0CCC  2CA3               	goto	i1l5280
 19670  0CCD  2CA8               	goto	i1l5286
 19671  0CCE                     i1l200:	
 19672  0CCE  0008               	return
 19673  0CCF                     __end_of_do_I2C_TX_EMPTY:	
 19674                           
 19675                           	psect	text77
 19676  1768                     __ptext77:	
 19677 ;; *************** function _mssp1_setIRQ *****************
 19678 ;; Defined at:
 19679 ;;		line 59 in file "mcc_generated_files/i2c1_driver.c"
 19680 ;; Parameters:    Size  Location     Type
 19681 ;;		None
 19682 ;; Auto vars:     Size  Location     Type
 19683 ;;		None
 19684 ;; Return value:  Size  Location     Type
 19685 ;;                  1    wreg      void 
 19686 ;; Registers used:
 19687 ;;		None
 19688 ;; Tracked objects:
 19689 ;;		On entry : 0/0
 19690 ;;		On exit  : 0/0
 19691 ;;		Unchanged: 0/0
 19692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19697 ;;Total ram usage:        0 bytes
 19698 ;; Hardware stack levels used:    1
 19699 ;; This function calls:
 19700 ;;		Nothing
 19701 ;; This function is called by:
 19702 ;;		_do_I2C_TX_EMPTY
 19703 ;; This function uses a non-reentrant model
 19704 ;;
 19705                           
 19706                           
 19707                           ;psect for function _mssp1_setIRQ
 19708  1768                     _mssp1_setIRQ:	
 19709  1768                     i1l4910:	
 19710                           ;incstack = 0
 19711                           ; Regs used in _mssp1_setIRQ: []
 19712                           
 19713                           
 19714                           ;mcc_generated_files/i2c1_driver.c: 61:     else
 19715  1768  002E               	movlb	14	; select bank14
 19716  1769  140F               	bsf	15,0	;volatile
 19717  176A                     i1l491:	
 19718  176A  0008               	return
 19719  176B                     __end_of_mssp1_setIRQ:	
 19720                           
 19721                           	psect	text78
 19722  17C6                     __ptext78:	
 19723 ;; *************** function _i2c1_driver_isNACK *****************
 19724 ;; Defined at:
 19725 ;;		line 162 in file "mcc_generated_files/i2c1_driver.c"
 19726 ;; Parameters:    Size  Location     Type
 19727 ;;		None
 19728 ;; Auto vars:     Size  Location     Type
 19729 ;;		None
 19730 ;; Return value:  Size  Location     Type
 19731 ;;		None               void
 19732 ;; Registers used:
 19733 ;;		wreg, status,2, status,0
 19734 ;; Tracked objects:
 19735 ;;		On entry : 0/0
 19736 ;;		On exit  : 0/0
 19737 ;;		Unchanged: 0/0
 19738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19741 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19742 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19743 ;;Total ram usage:        1 bytes
 19744 ;; Hardware stack levels used:    1
 19745 ;; This function calls:
 19746 ;;		Nothing
 19747 ;; This function is called by:
 19748 ;;		_do_I2C_TX
 19749 ;;		_i2c_ISR
 19750 ;; This function uses a non-reentrant model
 19751 ;;
 19752                           
 19753                           
 19754                           ;psect for function _i2c1_driver_isNACK
 19755  17C6                     _i2c1_driver_isNACK:	
 19756  17C6                     i1l4902:	
 19757                           ;incstack = 0
 19758                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 19759                           
 19760                           
 19761                           ;mcc_generated_files/i2c1_driver.c: 164:     return SSP1CON2bits.ACKSTAT;
 19762  17C6  0023               	movlb	3	; select bank3
 19763  17C7  0E11               	swapf	17,w	;volatile
 19764  17C8  0C89               	rrf	9,f
 19765  17C9  0C89               	rrf	9,f
 19766  17CA  3901               	andlw	1
 19767  17CB  00F0               	movwf	??_i2c1_driver_isNACK
 19768  17CC  0C70               	rrf	??_i2c1_driver_isNACK,w
 19769  17CD                     i1l526:	
 19770  17CD  0008               	return
 19771  17CE                     __end_of_i2c1_driver_isNACK:	
 19772                           
 19773                           	psect	text79
 19774  1780                     __ptext79:	
 19775 ;; *************** function _i2c1_driver_TXData *****************
 19776 ;; Defined at:
 19777 ;;		line 187 in file "mcc_generated_files/i2c1_driver.c"
 19778 ;; Parameters:    Size  Location     Type
 19779 ;;  d               1    wreg     unsigned char 
 19780 ;; Auto vars:     Size  Location     Type
 19781 ;;  d               1    0[COMMON] unsigned char 
 19782 ;; Return value:  Size  Location     Type
 19783 ;;                  1    wreg      void 
 19784 ;; Registers used:
 19785 ;;		wreg
 19786 ;; Tracked objects:
 19787 ;;		On entry : 0/0
 19788 ;;		On exit  : 0/0
 19789 ;;		Unchanged: 0/0
 19790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19792 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19794 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19795 ;;Total ram usage:        1 bytes
 19796 ;; Hardware stack levels used:    1
 19797 ;; This function calls:
 19798 ;;		Nothing
 19799 ;; This function is called by:
 19800 ;;		_do_I2C_SEND_ADR_READ
 19801 ;;		_do_I2C_SEND_ADR_WRITE
 19802 ;;		_do_I2C_TX
 19803 ;; This function uses a non-reentrant model
 19804 ;;
 19805                           
 19806                           
 19807                           ;psect for function _i2c1_driver_TXData
 19808  1780                     _i2c1_driver_TXData:	
 19809                           
 19810                           ;incstack = 0
 19811                           ; Regs used in _i2c1_driver_TXData: [wreg]
 19812                           ;i2c1_driver_TXData@d stored from wreg
 19813  1780  00F0               	movwf	i2c1_driver_TXData@d
 19814  1781                     i1l4884:	
 19815                           
 19816                           ;mcc_generated_files/i2c1_driver.c: 187: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 188: {;mcc_generated_files/i2c1_driver.c: 18
      +                          9:     SSP1BUF = d;
 19817  1781  0870               	movf	i2c1_driver_TXData@d,w
 19818  1782  0023               	movlb	3	; select bank3
 19819  1783  008C               	movwf	12	;volatile
 19820  1784                     i1l541:	
 19821  1784  0008               	return
 19822  1785                     __end_of_i2c1_driver_TXData:	
 19823                           
 19824                           	psect	text80
 19825  1765                     __ptext80:	
 19826 ;; *************** function _i2c1_driver_getRXData *****************
 19827 ;; Defined at:
 19828 ;;		line 172 in file "mcc_generated_files/i2c1_driver.c"
 19829 ;; Parameters:    Size  Location     Type
 19830 ;;		None
 19831 ;; Auto vars:     Size  Location     Type
 19832 ;;		None
 19833 ;; Return value:  Size  Location     Type
 19834 ;;                  1    wreg      unsigned char 
 19835 ;; Registers used:
 19836 ;;		wreg
 19837 ;; Tracked objects:
 19838 ;;		On entry : 0/0
 19839 ;;		On exit  : 0/0
 19840 ;;		Unchanged: 0/0
 19841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19846 ;;Total ram usage:        0 bytes
 19847 ;; Hardware stack levels used:    1
 19848 ;; This function calls:
 19849 ;;		Nothing
 19850 ;; This function is called by:
 19851 ;;		_do_I2C_RX
 19852 ;; This function uses a non-reentrant model
 19853 ;;
 19854                           
 19855                           
 19856                           ;psect for function _i2c1_driver_getRXData
 19857  1765                     _i2c1_driver_getRXData:	
 19858  1765                     i1l4906:	
 19859                           ;incstack = 0
 19860                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 19861                           
 19862                           
 19863                           ;mcc_generated_files/i2c1_driver.c: 174:     return SSP1BUF;
 19864  1765  0023               	movlb	3	; select bank3
 19865  1766  080C               	movf	12,w	;volatile
 19866  1767                     i1l532:	
 19867  1767  0008               	return
 19868  1768                     __end_of_i2c1_driver_getRXData:	
 19869                           
 19870                           	psect	text81
 19871  1778                     __ptext81:	
 19872 ;; *************** function _i2c1_driver_sendNACK *****************
 19873 ;; Defined at:
 19874 ;;		line 203 in file "mcc_generated_files/i2c1_driver.c"
 19875 ;; Parameters:    Size  Location     Type
 19876 ;;		None
 19877 ;; Auto vars:     Size  Location     Type
 19878 ;;		None
 19879 ;; Return value:  Size  Location     Type
 19880 ;;                  1    wreg      void 
 19881 ;; Registers used:
 19882 ;;		None
 19883 ;; Tracked objects:
 19884 ;;		On entry : 0/0
 19885 ;;		On exit  : 0/0
 19886 ;;		Unchanged: 0/0
 19887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19892 ;;Total ram usage:        0 bytes
 19893 ;; Hardware stack levels used:    1
 19894 ;; This function calls:
 19895 ;;		Nothing
 19896 ;; This function is called by:
 19897 ;;		_do_I2C_DO_NACK_STOP
 19898 ;;		_do_I2C_DO_NACK_RESTART
 19899 ;; This function uses a non-reentrant model
 19900 ;;
 19901                           
 19902                           
 19903                           ;psect for function _i2c1_driver_sendNACK
 19904  1778                     _i2c1_driver_sendNACK:	
 19905  1778                     i1l4664:	
 19906                           ;incstack = 0
 19907                           ; Regs used in _i2c1_driver_sendNACK: []
 19908                           
 19909                           
 19910                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKDT = 1;
 19911  1778  0023               	movlb	3	; select bank3
 19912  1779  1691               	bsf	17,5	;volatile
 19913                           
 19914                           ;mcc_generated_files/i2c1_driver.c: 206:     SSP1CON2bits.ACKEN = 1;
 19915  177A  1611               	bsf	17,4	;volatile
 19916  177B                     i1l550:	
 19917  177B  0008               	return
 19918  177C                     __end_of_i2c1_driver_sendNACK:	
 19919                           
 19920                           	psect	text82
 19921  1754                     __ptext82:	
 19922 ;; *************** function _i2c1_driver_resetBus *****************
 19923 ;; Defined at:
 19924 ;;		line 142 in file "mcc_generated_files/i2c1_driver.c"
 19925 ;; Parameters:    Size  Location     Type
 19926 ;;		None
 19927 ;; Auto vars:     Size  Location     Type
 19928 ;;		None
 19929 ;; Return value:  Size  Location     Type
 19930 ;;                  1    wreg      void 
 19931 ;; Registers used:
 19932 ;;		None
 19933 ;; Tracked objects:
 19934 ;;		On entry : 0/0
 19935 ;;		On exit  : 0/0
 19936 ;;		Unchanged: 0/0
 19937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19942 ;;Total ram usage:        0 bytes
 19943 ;; Hardware stack levels used:    1
 19944 ;; This function calls:
 19945 ;;		Nothing
 19946 ;; This function is called by:
 19947 ;;		_do_I2C_RESET
 19948 ;; This function uses a non-reentrant model
 19949 ;;
 19950                           
 19951                           
 19952                           ;psect for function _i2c1_driver_resetBus
 19953  1754                     _i2c1_driver_resetBus:	
 19954  1754                     i1l514:	
 19955                           ;incstack = 0
 19956                           ; Regs used in _i2c1_driver_resetBus: []
 19957                           
 19958  1754  0008               	return
 19959  1755                     __end_of_i2c1_driver_resetBus:	
 19960                           
 19961                           	psect	text83
 19962  1762                     __ptext83:	
 19963 ;; *************** function _i2c1_driver_startRX *****************
 19964 ;; Defined at:
 19965 ;;		line 167 in file "mcc_generated_files/i2c1_driver.c"
 19966 ;; Parameters:    Size  Location     Type
 19967 ;;		None
 19968 ;; Auto vars:     Size  Location     Type
 19969 ;;		None
 19970 ;; Return value:  Size  Location     Type
 19971 ;;                  1    wreg      void 
 19972 ;; Registers used:
 19973 ;;		None
 19974 ;; Tracked objects:
 19975 ;;		On entry : 0/0
 19976 ;;		On exit  : 0/0
 19977 ;;		Unchanged: 0/0
 19978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19983 ;;Total ram usage:        0 bytes
 19984 ;; Hardware stack levels used:    1
 19985 ;; This function calls:
 19986 ;;		Nothing
 19987 ;; This function is called by:
 19988 ;;		_do_I2C_RCEN
 19989 ;; This function uses a non-reentrant model
 19990 ;;
 19991                           
 19992                           
 19993                           ;psect for function _i2c1_driver_startRX
 19994  1762                     _i2c1_driver_startRX:	
 19995  1762                     i1l4886:	
 19996                           ;incstack = 0
 19997                           ; Regs used in _i2c1_driver_startRX: []
 19998                           
 19999                           
 20000                           ;mcc_generated_files/i2c1_driver.c: 169:     SSP1CON2bits.RCEN = 1;
 20001  1762  0023               	movlb	3	; select bank3
 20002  1763  1591               	bsf	17,3	;volatile
 20003  1764                     i1l529:	
 20004  1764  0008               	return
 20005  1765                     __end_of_i2c1_driver_startRX:	
 20006                           
 20007                           	psect	text84
 20008  09AF                     __ptext84:	
 20009 ;; *************** function _rdBlkRegCompleteHandler *****************
 20010 ;; Defined at:
 20011 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 20012 ;; Parameters:    Size  Location     Type
 20013 ;;  p               1    9[COMMON] PTR void 
 20014 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20015 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20016 ;; Auto vars:     Size  Location     Type
 20017 ;;		None
 20018 ;; Return value:  Size  Location     Type
 20019 ;;                  1    wreg      enum E358
 20020 ;; Registers used:
 20021 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20022 ;; Tracked objects:
 20023 ;;		On entry : 0/0
 20024 ;;		On exit  : 0/0
 20025 ;;		Unchanged: 0/0
 20026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20027 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20030 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20031 ;;Total ram usage:        1 bytes
 20032 ;; Hardware stack levels used:    1
 20033 ;; Hardware stack levels required when called:    2
 20034 ;; This function calls:
 20035 ;;		_i2c_setBuffer
 20036 ;;		_i2c_setDataCompleteCallback
 20037 ;; This function is called by:
 20038 ;;		_i2c_readDataBlock
 20039 ;;		_do_I2C_DO_ADDRESS_NACK
 20040 ;;		_do_I2C_TX
 20041 ;;		_do_I2C_RX
 20042 ;;		_do_I2C_TX_EMPTY
 20043 ;; This function uses a non-reentrant model
 20044 ;;
 20045                           
 20046                           
 20047                           ;psect for function _rdBlkRegCompleteHandler
 20048  09AF                     _rdBlkRegCompleteHandler:	
 20049  09AF                     i1l4952:	
 20050                           ;incstack = 0
 20051                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20052                           
 20053                           
 20054                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
 20055  09AF  0879               	movf	rdBlkRegCompleteHandler@p,w
 20056  09B0  0086               	movwf	6
 20057  09B1  0187               	clrf	7
 20058  09B2  3F40               	moviw [0]fsr1
 20059  09B3  00F0               	movwf	i2c_setBuffer@bufferSize
 20060  09B4  3F41               	moviw [1]fsr1
 20061  09B5  00F1               	movwf	i2c_setBuffer@bufferSize+1
 20062  09B6  0879               	movf	rdBlkRegCompleteHandler@p,w
 20063  09B7  3E02               	addlw	2
 20064  09B8  0086               	movwf	6
 20065  09B9  0187               	clrf	7
 20066  09BA  0801               	movf	1,w
 20067  09BB  3188  20E2  3189   	fcall	_i2c_setBuffer
 20068                           
 20069                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 20070  09BE  3000               	movlw	0
 20071  09BF  00F5               	movwf	i2c_setDataCompleteCallback@cb
 20072  09C0  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 20073  09C1  01F7               	clrf	i2c_setDataCompleteCallback@p
 20074  09C2  3188  208D  3189   	fcall	_i2c_setDataCompleteCallback
 20075  09C5                     i1l4954:	
 20076                           
 20077                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
 20078  09C5  3002               	movlw	2
 20079  09C6                     i1l303:	
 20080  09C6  0008               	return
 20081  09C7                     __end_of_rdBlkRegCompleteHandler:	
 20082                           
 20083                           	psect	text85
 20084  0946                     __ptext85:	
 20085 ;; *************** function _rd2RegCompleteHandler *****************
 20086 ;; Defined at:
 20087 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 20088 ;; Parameters:    Size  Location     Type
 20089 ;;  p               1    9[COMMON] PTR void 
 20090 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20091 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20092 ;; Auto vars:     Size  Location     Type
 20093 ;;		None
 20094 ;; Return value:  Size  Location     Type
 20095 ;;                  1    wreg      enum E358
 20096 ;; Registers used:
 20097 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20098 ;; Tracked objects:
 20099 ;;		On entry : 0/0
 20100 ;;		On exit  : 0/0
 20101 ;;		Unchanged: 0/0
 20102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20103 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20106 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20107 ;;Total ram usage:        1 bytes
 20108 ;; Hardware stack levels used:    1
 20109 ;; Hardware stack levels required when called:    2
 20110 ;; This function calls:
 20111 ;;		_i2c_setBuffer
 20112 ;;		_i2c_setDataCompleteCallback
 20113 ;; This function is called by:
 20114 ;;		_i2c_read2ByteRegister
 20115 ;;		_do_I2C_DO_ADDRESS_NACK
 20116 ;;		_do_I2C_TX
 20117 ;;		_do_I2C_RX
 20118 ;;		_do_I2C_TX_EMPTY
 20119 ;; This function uses a non-reentrant model
 20120 ;;
 20121                           
 20122                           
 20123                           ;psect for function _rd2RegCompleteHandler
 20124  0946                     _rd2RegCompleteHandler:	
 20125  0946                     i1l4936:	
 20126                           ;incstack = 0
 20127                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 20128                           
 20129                           
 20130                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
 20131  0946  3002               	movlw	2
 20132  0947  00F0               	movwf	i2c_setBuffer@bufferSize
 20133  0948  3000               	movlw	0
 20134  0949  00F1               	movwf	i2c_setBuffer@bufferSize+1
 20135  094A  0879               	movf	rd2RegCompleteHandler@p,w
 20136  094B  3188  20E2  3189   	fcall	_i2c_setBuffer
 20137  094E                     i1l4938:	
 20138                           
 20139                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 20140  094E  3000               	movlw	0
 20141  094F  00F5               	movwf	i2c_setDataCompleteCallback@cb
 20142  0950  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 20143  0951  01F7               	clrf	i2c_setDataCompleteCallback@p
 20144  0952  3188  208D  3189   	fcall	_i2c_setDataCompleteCallback
 20145  0955                     i1l4940:	
 20146                           
 20147                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
 20148  0955  3002               	movlw	2
 20149  0956                     i1l279:	
 20150  0956  0008               	return
 20151  0957                     __end_of_rd2RegCompleteHandler:	
 20152                           
 20153                           	psect	text86
 20154  0935                     __ptext86:	
 20155 ;; *************** function _rd1RegCompleteHandler *****************
 20156 ;; Defined at:
 20157 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 20158 ;; Parameters:    Size  Location     Type
 20159 ;;  p               1    9[COMMON] PTR void 
 20160 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20161 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20162 ;; Auto vars:     Size  Location     Type
 20163 ;;		None
 20164 ;; Return value:  Size  Location     Type
 20165 ;;                  1    wreg      enum E358
 20166 ;; Registers used:
 20167 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20168 ;; Tracked objects:
 20169 ;;		On entry : 0/0
 20170 ;;		On exit  : 0/0
 20171 ;;		Unchanged: 0/0
 20172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20173 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20176 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20177 ;;Total ram usage:        1 bytes
 20178 ;; Hardware stack levels used:    1
 20179 ;; Hardware stack levels required when called:    2
 20180 ;; This function calls:
 20181 ;;		_i2c_setBuffer
 20182 ;;		_i2c_setDataCompleteCallback
 20183 ;; This function is called by:
 20184 ;;		_i2c_read1ByteRegister
 20185 ;;		_do_I2C_DO_ADDRESS_NACK
 20186 ;;		_do_I2C_TX
 20187 ;;		_do_I2C_RX
 20188 ;;		_do_I2C_TX_EMPTY
 20189 ;; This function uses a non-reentrant model
 20190 ;;
 20191                           
 20192                           
 20193                           ;psect for function _rd1RegCompleteHandler
 20194  0935                     _rd1RegCompleteHandler:	
 20195  0935                     i1l4928:	
 20196                           ;incstack = 0
 20197                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 20198                           
 20199                           
 20200                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
 20201  0935  3001               	movlw	1
 20202  0936  00F0               	movwf	i2c_setBuffer@bufferSize
 20203  0937  3000               	movlw	0
 20204  0938  00F1               	movwf	i2c_setBuffer@bufferSize+1
 20205  0939  0879               	movf	rd1RegCompleteHandler@p,w
 20206  093A  3188  20E2  3189   	fcall	_i2c_setBuffer
 20207  093D                     i1l4930:	
 20208                           
 20209                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 20210  093D  3000               	movlw	0
 20211  093E  00F5               	movwf	i2c_setDataCompleteCallback@cb
 20212  093F  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 20213  0940  01F7               	clrf	i2c_setDataCompleteCallback@p
 20214  0941  3188  208D  3189   	fcall	_i2c_setDataCompleteCallback
 20215  0944                     i1l4932:	
 20216                           
 20217                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
 20218  0944  3002               	movlw	2
 20219  0945                     i1l264:	
 20220  0945  0008               	return
 20221  0946                     __end_of_rd1RegCompleteHandler:	
 20222                           
 20223                           	psect	text87
 20224  0924                     __ptext87:	
 20225 ;; *************** function _wr1RegCompleteHandler *****************
 20226 ;; Defined at:
 20227 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 20228 ;; Parameters:    Size  Location     Type
 20229 ;;  p               1    9[COMMON] PTR void 
 20230 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20231 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20232 ;; Auto vars:     Size  Location     Type
 20233 ;;		None
 20234 ;; Return value:  Size  Location     Type
 20235 ;;                  1    wreg      enum E358
 20236 ;; Registers used:
 20237 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20238 ;; Tracked objects:
 20239 ;;		On entry : 0/0
 20240 ;;		On exit  : 0/0
 20241 ;;		Unchanged: 0/0
 20242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20243 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20246 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20247 ;;Total ram usage:        1 bytes
 20248 ;; Hardware stack levels used:    1
 20249 ;; Hardware stack levels required when called:    2
 20250 ;; This function calls:
 20251 ;;		_i2c_setBuffer
 20252 ;;		_i2c_setDataCompleteCallback
 20253 ;; This function is called by:
 20254 ;;		_i2c_write1ByteRegister
 20255 ;;		_do_I2C_DO_ADDRESS_NACK
 20256 ;;		_do_I2C_TX
 20257 ;;		_do_I2C_RX
 20258 ;;		_do_I2C_TX_EMPTY
 20259 ;; This function uses a non-reentrant model
 20260 ;;
 20261                           
 20262                           
 20263                           ;psect for function _wr1RegCompleteHandler
 20264  0924                     _wr1RegCompleteHandler:	
 20265  0924                     i1l4920:	
 20266                           ;incstack = 0
 20267                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 20268                           
 20269                           
 20270                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
 20271  0924  3001               	movlw	1
 20272  0925  00F0               	movwf	i2c_setBuffer@bufferSize
 20273  0926  3000               	movlw	0
 20274  0927  00F1               	movwf	i2c_setBuffer@bufferSize+1
 20275  0928  0879               	movf	wr1RegCompleteHandler@p,w
 20276  0929  3188  20E2  3189   	fcall	_i2c_setBuffer
 20277  092C                     i1l4922:	
 20278                           
 20279                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 20280  092C  3000               	movlw	0
 20281  092D  00F5               	movwf	i2c_setDataCompleteCallback@cb
 20282  092E  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 20283  092F  01F7               	clrf	i2c_setDataCompleteCallback@p
 20284  0930  3188  208D  3189   	fcall	_i2c_setDataCompleteCallback
 20285  0933                     i1l4924:	
 20286                           
 20287                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
 20288  0933  3004               	movlw	4
 20289  0934                     i1l243:	
 20290  0934  0008               	return
 20291  0935                     __end_of_wr1RegCompleteHandler:	
 20292                           
 20293                           	psect	text88
 20294  0002                     __ptext88:	
 20295 ;; *************** function _returnReset *****************
 20296 ;; Defined at:
 20297 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 20298 ;; Parameters:    Size  Location     Type
 20299 ;;  p               1    9[COMMON] PTR void 
 20300 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20301 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20302 ;; Auto vars:     Size  Location     Type
 20303 ;;		None
 20304 ;; Return value:  Size  Location     Type
 20305 ;;                  1    wreg      enum E12568
 20306 ;; Registers used:
 20307 ;;		wreg
 20308 ;; Tracked objects:
 20309 ;;		On entry : 0/0
 20310 ;;		On exit  : 0/0
 20311 ;;		Unchanged: 0/0
 20312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20313 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20316 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20317 ;;Total ram usage:        1 bytes
 20318 ;; Hardware stack levels used:    1
 20319 ;; This function calls:
 20320 ;;		Nothing
 20321 ;; This function is called by:
 20322 ;;		_i2c_open
 20323 ;;		_do_I2C_DO_ADDRESS_NACK
 20324 ;;		_do_I2C_TX
 20325 ;;		_do_I2C_RX
 20326 ;;		_do_I2C_TX_EMPTY
 20327 ;; This function uses a non-reentrant model
 20328 ;;
 20329                           
 20330                           
 20331                           ;psect for function _returnReset
 20332  0002                     _returnReset:	
 20333  0002                     i1l4916:	
 20334                           ;incstack = 0
 20335                           ; Regs used in _returnReset: [wreg]
 20336                           
 20337                           
 20338                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 20339  0002  3005               	movlw	5
 20340  0003                     i1l219:	
 20341  0003  0008               	return
 20342  0004                     __end_of_returnReset:	
 20343                           
 20344                           	psect	text89
 20345  1757                     __ptext89:	
 20346 ;; *************** function _returnStop *****************
 20347 ;; Defined at:
 20348 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 20349 ;; Parameters:    Size  Location     Type
 20350 ;;  p               1    9[COMMON] PTR void 
 20351 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20352 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20353 ;; Auto vars:     Size  Location     Type
 20354 ;;		None
 20355 ;; Return value:  Size  Location     Type
 20356 ;;                  1    wreg      enum E12568
 20357 ;; Registers used:
 20358 ;;		wreg
 20359 ;; Tracked objects:
 20360 ;;		On entry : 0/0
 20361 ;;		On exit  : 0/0
 20362 ;;		Unchanged: 0/0
 20363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20364 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20367 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20368 ;;Total ram usage:        1 bytes
 20369 ;; Hardware stack levels used:    1
 20370 ;; This function calls:
 20371 ;;		Nothing
 20372 ;; This function is called by:
 20373 ;;		_setCallBack
 20374 ;;		_i2c_open
 20375 ;;		_do_I2C_DO_ADDRESS_NACK
 20376 ;;		_do_I2C_TX
 20377 ;;		_do_I2C_RX
 20378 ;;		_do_I2C_TX_EMPTY
 20379 ;; This function uses a non-reentrant model
 20380 ;;
 20381                           
 20382                           
 20383                           ;psect for function _returnStop
 20384  1757                     _returnStop:	
 20385  1757                     i1l4912:	
 20386                           ;incstack = 0
 20387                           ; Regs used in _returnStop: [wreg]
 20388                           
 20389                           
 20390                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
 20391  1757  3001               	movlw	1
 20392  1758                     i1l216:	
 20393  1758  0008               	return
 20394  1759                     __end_of_returnStop:	
 20395                           
 20396                           	psect	text90
 20397  1755                     __ptext90:	
 20398 ;; *************** function _i2c_restartWrite *****************
 20399 ;; Defined at:
 20400 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 20401 ;; Parameters:    Size  Location     Type
 20402 ;;  p               1    9[COMMON] PTR void 
 20403 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20404 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20405 ;; Auto vars:     Size  Location     Type
 20406 ;;		None
 20407 ;; Return value:  Size  Location     Type
 20408 ;;                  1    wreg      enum E358
 20409 ;; Registers used:
 20410 ;;		wreg
 20411 ;; Tracked objects:
 20412 ;;		On entry : 0/0
 20413 ;;		On exit  : 0/0
 20414 ;;		Unchanged: 0/0
 20415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20416 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20419 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20420 ;;Total ram usage:        1 bytes
 20421 ;; Hardware stack levels used:    1
 20422 ;; This function calls:
 20423 ;;		Nothing
 20424 ;; This function is called by:
 20425 ;;		_i2c_write1ByteRegister
 20426 ;;		_i2c_writeNBytes
 20427 ;;		_i2c_read1ByteRegister
 20428 ;;		_i2c_read2ByteRegister
 20429 ;;		_i2c_write2ByteRegister
 20430 ;;		_i2c_readDataBlock
 20431 ;;		_do_I2C_DO_ADDRESS_NACK
 20432 ;;		_do_I2C_TX
 20433 ;;		_do_I2C_RX
 20434 ;;		_do_I2C_TX_EMPTY
 20435 ;; This function uses a non-reentrant model
 20436 ;;
 20437                           
 20438                           
 20439                           ;psect for function _i2c_restartWrite
 20440  1755                     _i2c_restartWrite:	
 20441  1755                     i1l4848:	
 20442                           ;incstack = 0
 20443                           ; Regs used in _i2c_restartWrite: [wreg]
 20444                           
 20445                           
 20446                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
 20447  1755  3003               	movlw	3
 20448  1756                     i1l9:	
 20449  1756  0008               	return
 20450  1757                     __end_of_i2c_restartWrite:	
 20451                           
 20452                           	psect	text91
 20453  0913                     __ptext91:	
 20454 ;; *************** function _wr2RegCompleteHandler *****************
 20455 ;; Defined at:
 20456 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 20457 ;; Parameters:    Size  Location     Type
 20458 ;;  p               1    9[COMMON] PTR void 
 20459 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20460 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20461 ;; Auto vars:     Size  Location     Type
 20462 ;;		None
 20463 ;; Return value:  Size  Location     Type
 20464 ;;                  1    wreg      enum E358
 20465 ;; Registers used:
 20466 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20467 ;; Tracked objects:
 20468 ;;		On entry : 0/0
 20469 ;;		On exit  : 0/0
 20470 ;;		Unchanged: 0/0
 20471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20472 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20475 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20476 ;;Total ram usage:        1 bytes
 20477 ;; Hardware stack levels used:    1
 20478 ;; Hardware stack levels required when called:    2
 20479 ;; This function calls:
 20480 ;;		_i2c_setBuffer
 20481 ;;		_i2c_setDataCompleteCallback
 20482 ;; This function is called by:
 20483 ;;		_i2c_write2ByteRegister
 20484 ;;		_do_I2C_DO_ADDRESS_NACK
 20485 ;;		_do_I2C_TX
 20486 ;;		_do_I2C_RX
 20487 ;;		_do_I2C_TX_EMPTY
 20488 ;; This function uses a non-reentrant model
 20489 ;;
 20490                           
 20491                           
 20492                           ;psect for function _wr2RegCompleteHandler
 20493  0913                     _wr2RegCompleteHandler:	
 20494  0913                     i1l4944:	
 20495                           ;incstack = 0
 20496                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 20497                           
 20498                           
 20499                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
 20500  0913  3002               	movlw	2
 20501  0914  00F0               	movwf	i2c_setBuffer@bufferSize
 20502  0915  3000               	movlw	0
 20503  0916  00F1               	movwf	i2c_setBuffer@bufferSize+1
 20504  0917  0879               	movf	wr2RegCompleteHandler@p,w
 20505  0918  3188  20E2  3189   	fcall	_i2c_setBuffer
 20506  091B                     i1l4946:	
 20507                           
 20508                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 20509  091B  3000               	movlw	0
 20510  091C  00F5               	movwf	i2c_setDataCompleteCallback@cb
 20511  091D  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 20512  091E  01F7               	clrf	i2c_setDataCompleteCallback@p
 20513  091F  3188  208D  3189   	fcall	_i2c_setDataCompleteCallback
 20514  0922                     i1l4948:	
 20515                           
 20516                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
 20517  0922  3004               	movlw	4
 20518  0923                     i1l291:	
 20519  0923  0008               	return
 20520  0924                     __end_of_wr2RegCompleteHandler:	
 20521                           
 20522                           	psect	text92
 20523  088D                     __ptext92:	
 20524 ;; *************** function _i2c_setDataCompleteCallback *****************
 20525 ;; Defined at:
 20526 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 20527 ;; Parameters:    Size  Location     Type
 20528 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 20529 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 20530 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 20531 ;;  p               1    7[COMMON] PTR void 
 20532 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20533 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20534 ;; Auto vars:     Size  Location     Type
 20535 ;;		None
 20536 ;; Return value:  Size  Location     Type
 20537 ;;                  1    wreg      void 
 20538 ;; Registers used:
 20539 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20540 ;; Tracked objects:
 20541 ;;		On entry : 0/0
 20542 ;;		On exit  : 0/0
 20543 ;;		Unchanged: 0/0
 20544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20545 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20547 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20548 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20549 ;;Total ram usage:        4 bytes
 20550 ;; Hardware stack levels used:    1
 20551 ;; Hardware stack levels required when called:    1
 20552 ;; This function calls:
 20553 ;;		_setCallBack
 20554 ;; This function is called by:
 20555 ;;		_wr1RegCompleteHandler
 20556 ;;		_rd1RegCompleteHandler
 20557 ;;		_rd2RegCompleteHandler
 20558 ;;		_wr2RegCompleteHandler
 20559 ;;		_rdBlkRegCompleteHandler
 20560 ;;		_i2c_write1ByteRegister
 20561 ;;		_i2c_read1ByteRegister
 20562 ;;		_i2c_read2ByteRegister
 20563 ;;		_i2c_write2ByteRegister
 20564 ;;		_i2c_readDataBlock
 20565 ;; This function uses a non-reentrant model
 20566 ;;
 20567                           
 20568                           
 20569                           ;psect for function _i2c_setDataCompleteCallback
 20570  088D                     _i2c_setDataCompleteCallback:	
 20571  088D                     i1l4652:	
 20572                           ;incstack = 0
 20573                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 20574                           
 20575                           
 20576                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
 20577  088D  0876               	movf	i2c_setDataCompleteCallback@cb+1,w
 20578  088E  00F1               	movwf	setCallBack@cb+1
 20579  088F  0875               	movf	i2c_setDataCompleteCallback@cb,w
 20580  0890  00F0               	movwf	setCallBack@cb
 20581  0891  0877               	movf	i2c_setDataCompleteCallback@p,w
 20582  0892  00F8               	movwf	??_i2c_setDataCompleteCallback
 20583  0893  0878               	movf	??_i2c_setDataCompleteCallback,w
 20584  0894  00F2               	movwf	setCallBack@p
 20585  0895  3000               	movlw	0
 20586  0896  318B  239A  3188   	fcall	_setCallBack
 20587  0899                     i1l73:	
 20588  0899  0008               	return
 20589  089A                     __end_of_i2c_setDataCompleteCallback:	
 20590                           
 20591                           	psect	text93
 20592  0B9A                     __ptext93:	
 20593 ;; *************** function _setCallBack *****************
 20594 ;; Defined at:
 20595 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 20596 ;; Parameters:    Size  Location     Type
 20597 ;;  idx             1    wreg     enum E12740
 20598 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 20599 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 20600 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), i2c_restartWrite(1), 
 20601 ;;  p               1    2[COMMON] PTR void 
 20602 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 20603 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 20604 ;; Auto vars:     Size  Location     Type
 20605 ;;  idx             1    4[COMMON] enum E12740
 20606 ;; Return value:  Size  Location     Type
 20607 ;;                  1    wreg      void 
 20608 ;; Registers used:
 20609 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20610 ;; Tracked objects:
 20611 ;;		On entry : 0/0
 20612 ;;		On exit  : 0/0
 20613 ;;		Unchanged: 0/0
 20614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20615 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20617 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20618 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20619 ;;Total ram usage:        5 bytes
 20620 ;; Hardware stack levels used:    1
 20621 ;; This function calls:
 20622 ;;		Nothing
 20623 ;; This function is called by:
 20624 ;;		_i2c_setDataCompleteCallback
 20625 ;;		_i2c_setWriteCollisionCallback
 20626 ;;		_i2c_setAddressNACKCallback
 20627 ;;		_i2c_setDataNACKCallback
 20628 ;;		_i2c_setTimeOutCallback
 20629 ;; This function uses a non-reentrant model
 20630 ;;
 20631                           
 20632                           
 20633                           ;psect for function _setCallBack
 20634  0B9A                     _setCallBack:	
 20635                           
 20636                           ;incstack = 0
 20637                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 20638                           ;setCallBack@idx stored from wreg
 20639  0B9A  00F4               	movwf	setCallBack@idx
 20640  0B9B                     i1l4544:	
 20641                           
 20642                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
 20643  0B9B  0870               	movf	setCallBack@cb,w
 20644  0B9C  0471               	iorwf	setCallBack@cb+1,w
 20645  0B9D  1903               	btfsc	3,2
 20646  0B9E  2BA0               	goto	u195_21
 20647  0B9F  2BA1               	goto	u195_20
 20648  0BA0                     u195_21:	
 20649  0BA0  2BB2               	goto	i1l4548
 20650  0BA1                     u195_20:	
 20651  0BA1                     i1l4546:	
 20652                           
 20653                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
 20654  0BA1  3574               	lslf	setCallBack@idx,w
 20655  0BA2  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 20656  0BA3  0086               	movwf	6
 20657  0BA4  0187               	clrf	7
 20658  0BA5  0870               	movf	setCallBack@cb,w
 20659  0BA6  3FC0               	movwi [0]fsr1
 20660  0BA7  0871               	movf	setCallBack@cb+1,w
 20661  0BA8  3FC1               	movwi [1]fsr1
 20662                           
 20663                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
 20664  0BA9  0872               	movf	setCallBack@p,w
 20665  0BAA  00F3               	movwf	??_setCallBack
 20666  0BAB  0874               	movf	setCallBack@idx,w
 20667  0BAC  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 20668  0BAD  0086               	movwf	6
 20669  0BAE  0187               	clrf	7
 20670  0BAF  0873               	movf	??_setCallBack,w
 20671  0BB0  0081               	movwf	1
 20672                           
 20673                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
 20674  0BB1  2BBF               	goto	i1l224
 20675  0BB2                     i1l4548:	
 20676                           
 20677                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
 20678  0BB2  3574               	lslf	setCallBack@idx,w
 20679  0BB3  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 20680  0BB4  0086               	movwf	6
 20681  0BB5  0187               	clrf	7
 20682  0BB6  3057               	movlw	low _returnStop
 20683  0BB7  3FC0               	movwi [0]fsr1
 20684  0BB8  3017               	movlw	high _returnStop
 20685  0BB9  3FC1               	movwi [1]fsr1
 20686                           
 20687                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
 20688  0BBA  0874               	movf	setCallBack@idx,w
 20689  0BBB  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 20690  0BBC  0086               	movwf	6
 20691  0BBD  0187               	clrf	7
 20692  0BBE  0181               	clrf	1
 20693  0BBF                     i1l224:	
 20694  0BBF  0008               	return
 20695  0BC0                     __end_of_setCallBack:	
 20696                           
 20697                           	psect	text94
 20698  08E2                     __ptext94:	
 20699 ;; *************** function _i2c_setBuffer *****************
 20700 ;; Defined at:
 20701 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 20702 ;; Parameters:    Size  Location     Type
 20703 ;;  buffer          1    wreg     PTR void 
 20704 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 20705 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 20706 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 20707 ;;  bufferSize      2    0[COMMON] unsigned int 
 20708 ;; Auto vars:     Size  Location     Type
 20709 ;;  buffer          1    3[COMMON] PTR void 
 20710 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 20711 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 20712 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 20713 ;; Return value:  Size  Location     Type
 20714 ;;                  1    wreg      void 
 20715 ;; Registers used:
 20716 ;;		wreg
 20717 ;; Tracked objects:
 20718 ;;		On entry : 0/0
 20719 ;;		On exit  : 0/0
 20720 ;;		Unchanged: 0/0
 20721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20722 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20723 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20724 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20725 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20726 ;;Total ram usage:        4 bytes
 20727 ;; Hardware stack levels used:    1
 20728 ;; This function calls:
 20729 ;;		Nothing
 20730 ;; This function is called by:
 20731 ;;		_wr1RegCompleteHandler
 20732 ;;		_rd1RegCompleteHandler
 20733 ;;		_rd2RegCompleteHandler
 20734 ;;		_wr2RegCompleteHandler
 20735 ;;		_rdBlkRegCompleteHandler
 20736 ;;		_i2c_write1ByteRegister
 20737 ;;		_i2c_writeNBytes
 20738 ;;		_i2c_read1ByteRegister
 20739 ;;		_i2c_read2ByteRegister
 20740 ;;		_i2c_write2ByteRegister
 20741 ;;		_i2c_readDataBlock
 20742 ;;		_i2c_readNBytes
 20743 ;; This function uses a non-reentrant model
 20744 ;;
 20745                           
 20746                           
 20747                           ;psect for function _i2c_setBuffer
 20748  08E2                     _i2c_setBuffer:	
 20749                           
 20750                           ;incstack = 0
 20751                           ; Regs used in _i2c_setBuffer: [wreg]
 20752                           ;i2c_setBuffer@buffer stored from wreg
 20753  08E2  00F3               	movwf	i2c_setBuffer@buffer
 20754  08E3                     i1l4654:	
 20755                           
 20756                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
 20757  08E3  0021               	movlb	1	; select bank1
 20758  08E4  1D20               	btfss	_i2c_status^(0+128),2
 20759  08E5  28E7               	goto	u215_21
 20760  08E6  28E8               	goto	u215_20
 20761  08E7                     u215_21:	
 20762  08E7  28F1               	goto	i1l103
 20763  08E8                     u215_20:	
 20764  08E8                     i1l4656:	
 20765                           
 20766                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
 20767  08E8  0873               	movf	i2c_setBuffer@buffer,w
 20768  08E9  00F2               	movwf	??_i2c_setBuffer
 20769  08EA  0872               	movf	??_i2c_setBuffer,w
 20770  08EB  00A2               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 20771                           
 20772                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
 20773  08EC  0871               	movf	i2c_setBuffer@bufferSize+1,w
 20774  08ED  00A4               	movwf	((_i2c_status+1)^(0+128)+3)
 20775  08EE  0870               	movf	i2c_setBuffer@bufferSize,w
 20776  08EF  00A3               	movwf	(_i2c_status^(0+128)+3)
 20777  08F0                     i1l4658:	
 20778                           
 20779                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
 20780  08F0  1120               	bcf	_i2c_status^(0+128),2
 20781  08F1                     i1l103:	
 20782  08F1  0008               	return
 20783  08F2                     __end_of_i2c_setBuffer:	
 20784                           
 20785                           	psect	text95
 20786  175F                     __ptext95:	
 20787 ;; *************** function _i2c1_driver_stop *****************
 20788 ;; Defined at:
 20789 ;;		line 157 in file "mcc_generated_files/i2c1_driver.c"
 20790 ;; Parameters:    Size  Location     Type
 20791 ;;		None
 20792 ;; Auto vars:     Size  Location     Type
 20793 ;;		None
 20794 ;; Return value:  Size  Location     Type
 20795 ;;                  1    wreg      void 
 20796 ;; Registers used:
 20797 ;;		None
 20798 ;; Tracked objects:
 20799 ;;		On entry : 0/0
 20800 ;;		On exit  : 0/0
 20801 ;;		Unchanged: 0/0
 20802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20807 ;;Total ram usage:        0 bytes
 20808 ;; Hardware stack levels used:    1
 20809 ;; This function calls:
 20810 ;;		Nothing
 20811 ;; This function is called by:
 20812 ;;		_do_I2C_SEND_STOP
 20813 ;; This function uses a non-reentrant model
 20814 ;;
 20815                           
 20816                           
 20817                           ;psect for function _i2c1_driver_stop
 20818  175F                     _i2c1_driver_stop:	
 20819  175F                     i1l4662:	
 20820                           ;incstack = 0
 20821                           ; Regs used in _i2c1_driver_stop: []
 20822                           
 20823                           
 20824                           ;mcc_generated_files/i2c1_driver.c: 159:     SSP1CON2bits.PEN = 1;
 20825  175F  0023               	movlb	3	; select bank3
 20826  1760  1511               	bsf	17,2	;volatile
 20827  1761                     i1l523:	
 20828  1761  0008               	return
 20829  1762                     __end_of_i2c1_driver_stop:	
 20830                           
 20831                           	psect	text96
 20832  175C                     __ptext96:	
 20833 ;; *************** function _i2c1_driver_restart *****************
 20834 ;; Defined at:
 20835 ;;		line 152 in file "mcc_generated_files/i2c1_driver.c"
 20836 ;; Parameters:    Size  Location     Type
 20837 ;;		None
 20838 ;; Auto vars:     Size  Location     Type
 20839 ;;		None
 20840 ;; Return value:  Size  Location     Type
 20841 ;;                  1    wreg      void 
 20842 ;; Registers used:
 20843 ;;		None
 20844 ;; Tracked objects:
 20845 ;;		On entry : 0/0
 20846 ;;		On exit  : 0/0
 20847 ;;		Unchanged: 0/0
 20848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20853 ;;Total ram usage:        0 bytes
 20854 ;; Hardware stack levels used:    1
 20855 ;; This function calls:
 20856 ;;		Nothing
 20857 ;; This function is called by:
 20858 ;;		_do_I2C_SEND_RESTART_READ
 20859 ;;		_do_I2C_SEND_RESTART_WRITE
 20860 ;;		_do_I2C_SEND_RESTART
 20861 ;; This function uses a non-reentrant model
 20862 ;;
 20863                           
 20864                           
 20865                           ;psect for function _i2c1_driver_restart
 20866  175C                     _i2c1_driver_restart:	
 20867  175C                     i1l4660:	
 20868                           ;incstack = 0
 20869                           ; Regs used in _i2c1_driver_restart: []
 20870                           
 20871                           
 20872                           ;mcc_generated_files/i2c1_driver.c: 154:     SSP1CON2bits.RSEN = 1;
 20873  175C  0023               	movlb	3	; select bank3
 20874  175D  1491               	bsf	17,1	;volatile
 20875  175E                     i1l520:	
 20876  175E  0008               	return
 20877  175F                     __end_of_i2c1_driver_restart:	
 20878                           
 20879                           	psect	text97
 20880  1774                     __ptext97:	
 20881 ;; *************** function _i2c1_driver_sendACK *****************
 20882 ;; Defined at:
 20883 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
 20884 ;; Parameters:    Size  Location     Type
 20885 ;;		None
 20886 ;; Auto vars:     Size  Location     Type
 20887 ;;		None
 20888 ;; Return value:  Size  Location     Type
 20889 ;;                  1    wreg      void 
 20890 ;; Registers used:
 20891 ;;		None
 20892 ;; Tracked objects:
 20893 ;;		On entry : 0/0
 20894 ;;		On exit  : 0/0
 20895 ;;		Unchanged: 0/0
 20896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20901 ;;Total ram usage:        0 bytes
 20902 ;; Hardware stack levels used:    1
 20903 ;; This function calls:
 20904 ;;		Nothing
 20905 ;; This function is called by:
 20906 ;;		_do_I2C_DO_ACK
 20907 ;;		_do_I2C_RX
 20908 ;; This function uses a non-reentrant model
 20909 ;;
 20910                           
 20911                           
 20912                           ;psect for function _i2c1_driver_sendACK
 20913  1774                     _i2c1_driver_sendACK:	
 20914  1774                     i1l4888:	
 20915                           ;incstack = 0
 20916                           ; Regs used in _i2c1_driver_sendACK: []
 20917                           
 20918                           
 20919                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKDT = 0;
 20920  1774  0023               	movlb	3	; select bank3
 20921  1775  1291               	bcf	17,5	;volatile
 20922                           
 20923                           ;mcc_generated_files/i2c1_driver.c: 200:     SSP1CON2bits.ACKEN = 1;
 20924  1776  1611               	bsf	17,4	;volatile
 20925  1777                     i1l547:	
 20926  1777  0008               	return
 20927  1778                     __end_of_i2c1_driver_sendACK:	
 20928                           
 20929                           	psect	text98
 20930  08C4                     __ptext98:	
 20931 ;; *************** function _TMR2_ISR *****************
 20932 ;; Defined at:
 20933 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 20934 ;; Parameters:    Size  Location     Type
 20935 ;;		None
 20936 ;; Auto vars:     Size  Location     Type
 20937 ;;		None
 20938 ;; Return value:  Size  Location     Type
 20939 ;;                  1    wreg      void 
 20940 ;; Registers used:
 20941 ;;		wreg, status,2, status,0, pclath, cstack
 20942 ;; Tracked objects:
 20943 ;;		On entry : 0/0
 20944 ;;		On exit  : 0/0
 20945 ;;		Unchanged: 0/0
 20946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20951 ;;Total ram usage:        0 bytes
 20952 ;; Hardware stack levels used:    1
 20953 ;; Hardware stack levels required when called:    1
 20954 ;; This function calls:
 20955 ;;		Absolute function
 20956 ;;		_TMR2_DefaultInterruptHandler
 20957 ;;		_handler_clock_ms
 20958 ;; This function is called by:
 20959 ;;		_INTERRUPT_InterruptManager
 20960 ;; This function uses a non-reentrant model
 20961 ;;
 20962                           
 20963                           
 20964                           ;psect for function _TMR2_ISR
 20965  08C4                     _TMR2_ISR:	
 20966  08C4                     i1l5680:	
 20967                           ;incstack = 0
 20968                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 20969                           
 20970                           
 20971                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
 20972  08C4  002E               	movlb	14	; select bank14
 20973  08C5  1090               	bcf	16,1	;volatile
 20974  08C6                     i1l5682:	
 20975                           
 20976                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
 20977  08C6  0021               	movlb	1	; select bank1
 20978  08C7  0858               	movf	_TMR2_InterruptHandler^(0+128),w
 20979  08C8  0459               	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
 20980  08C9  1903               	btfsc	3,2
 20981  08CA  28CC               	goto	u286_21
 20982  08CB  28CD               	goto	u286_20
 20983  08CC                     u286_21:	
 20984  08CC  28D2               	goto	i1l1086
 20985  08CD                     u286_20:	
 20986  08CD                     i1l5684:	
 20987                           
 20988                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
 20989  08CD  0859               	movf	(_TMR2_InterruptHandler+1)^(0+128),w
 20990  08CE  008A               	movwf	10
 20991  08CF  0858               	movf	_TMR2_InterruptHandler^(0+128),w
 20992  08D0  000A               	callw
 20993  08D1  3188               	pagesel	$
 20994  08D2                     i1l1086:	
 20995  08D2  0008               	return
 20996  08D3                     __end_of_TMR2_ISR:	
 20997                           
 20998                           	psect	text99
 20999  1753                     __ptext99:	
 21000 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 21001 ;; Defined at:
 21002 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 21003 ;; Parameters:    Size  Location     Type
 21004 ;;		None
 21005 ;; Auto vars:     Size  Location     Type
 21006 ;;		None
 21007 ;; Return value:  Size  Location     Type
 21008 ;;                  1    wreg      void 
 21009 ;; Registers used:
 21010 ;;		None
 21011 ;; Tracked objects:
 21012 ;;		On entry : 0/0
 21013 ;;		On exit  : 0/0
 21014 ;;		Unchanged: 0/0
 21015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21020 ;;Total ram usage:        0 bytes
 21021 ;; Hardware stack levels used:    1
 21022 ;; This function calls:
 21023 ;;		Nothing
 21024 ;; This function is called by:
 21025 ;;		_TMR2_Initialize
 21026 ;;		_TMR2_ISR
 21027 ;; This function uses a non-reentrant model
 21028 ;;
 21029                           
 21030                           
 21031                           ;psect for function _TMR2_DefaultInterruptHandler
 21032  1753                     _TMR2_DefaultInterruptHandler:	
 21033  1753                     i1l1092:	
 21034                           ;incstack = 0
 21035                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 21036                           
 21037  1753  0008               	return
 21038  1754                     __end_of_TMR2_DefaultInterruptHandler:	
 21039                           
 21040                           	psect	text100
 21041  0868                     __ptext100:	
 21042 ;; *************** function _handler_clock_ms *****************
 21043 ;; Defined at:
 21044 ;;		line 577 in file "main.c"
 21045 ;; Parameters:    Size  Location     Type
 21046 ;;		None
 21047 ;; Auto vars:     Size  Location     Type
 21048 ;;		None
 21049 ;; Return value:  Size  Location     Type
 21050 ;;                  1    wreg      void 
 21051 ;; Registers used:
 21052 ;;		wreg, status,2, status,0
 21053 ;; Tracked objects:
 21054 ;;		On entry : 0/0
 21055 ;;		On exit  : 0/0
 21056 ;;		Unchanged: 0/0
 21057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21060 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21061 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21062 ;;Total ram usage:        1 bytes
 21063 ;; Hardware stack levels used:    1
 21064 ;; This function calls:
 21065 ;;		Nothing
 21066 ;; This function is called by:
 21067 ;;		_main
 21068 ;;		_TMR2_ISR
 21069 ;; This function uses a non-reentrant model
 21070 ;;
 21071                           
 21072                           
 21073                           ;psect for function _handler_clock_ms
 21074  0868                     _handler_clock_ms:	
 21075  0868                     i1l5526:	
 21076                           ;incstack = 0
 21077                           ; Regs used in _handler_clock_ms: [wreg+status,2+status,0]
 21078                           
 21079                           
 21080                           ;main.c: 578:     clkms++;
 21081  0868  3001               	movlw	1
 21082  0869  00F0               	movwf	??_handler_clock_ms
 21083  086A  0870               	movf	??_handler_clock_ms,w
 21084  086B  07FD               	addwf	_clkms,f	;volatile
 21085  086C                     i1l5528:	
 21086                           
 21087                           ;main.c: 580:     if(clkms > 200){
 21088  086C  30C9               	movlw	201
 21089  086D  027D               	subwf	_clkms,w	;volatile
 21090  086E  1C03               	skipc
 21091  086F  2871               	goto	u265_21
 21092  0870  2872               	goto	u265_20
 21093  0871                     u265_21:	
 21094  0871  2873               	goto	i1l1404
 21095  0872                     u265_20:	
 21096  0872                     i1l5530:	
 21097                           
 21098                           ;main.c: 581:         clkms = 0;
 21099  0872  01FD               	clrf	_clkms	;volatile
 21100  0873                     i1l1404:	
 21101  0873  0008               	return
 21102  0874                     __end_of_handler_clock_ms:	
 21103                           
 21104                           	psect	text101
 21105  0998                     __ptext101:	
 21106 ;; *************** function _TMR1_ISR *****************
 21107 ;; Defined at:
 21108 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 21109 ;; Parameters:    Size  Location     Type
 21110 ;;		None
 21111 ;; Auto vars:     Size  Location     Type
 21112 ;;		None
 21113 ;; Return value:  Size  Location     Type
 21114 ;;                  1    wreg      void 
 21115 ;; Registers used:
 21116 ;;		wreg, status,2, status,0, pclath, cstack
 21117 ;; Tracked objects:
 21118 ;;		On entry : 0/0
 21119 ;;		On exit  : 0/0
 21120 ;;		Unchanged: 0/0
 21121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21126 ;;Total ram usage:        0 bytes
 21127 ;; Hardware stack levels used:    1
 21128 ;; Hardware stack levels required when called:    1
 21129 ;; This function calls:
 21130 ;;		Absolute function
 21131 ;;		_TMR1_DefaultInterruptHandler
 21132 ;;		_TMR1_WriteTimer
 21133 ;;		_handler_clock_hms
 21134 ;; This function is called by:
 21135 ;;		_INTERRUPT_InterruptManager
 21136 ;; This function uses a non-reentrant model
 21137 ;;
 21138                           
 21139                           
 21140                           ;psect for function _TMR1_ISR
 21141  0998                     _TMR1_ISR:	
 21142  0998                     i1l5672:	
 21143                           ;incstack = 0
 21144                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 21145                           
 21146                           
 21147                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 21148  0998  002E               	movlb	14	; select bank14
 21149  0999  1010               	bcf	16,0	;volatile
 21150  099A                     i1l5674:	
 21151                           
 21152                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 21153  099A  0020               	movlb	0	; select bank0
 21154  099B  0869               	movf	_timer1ReloadVal+1,w	;volatile
 21155  099C  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 21156  099D  0868               	movf	_timer1ReloadVal,w	;volatile
 21157  099E  00F0               	movwf	TMR1_WriteTimer@timerVal
 21158  099F  3189  2102  3189   	fcall	_TMR1_WriteTimer
 21159  09A2                     i1l5676:	
 21160                           
 21161                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 21162  09A2  0021               	movlb	1	; select bank1
 21163  09A3  085A               	movf	_TMR1_InterruptHandler^(0+128),w
 21164  09A4  045B               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 21165  09A5  1903               	btfsc	3,2
 21166  09A6  29A8               	goto	u285_21
 21167  09A7  29A9               	goto	u285_20
 21168  09A8                     u285_21:	
 21169  09A8  29AE               	goto	i1l944
 21170  09A9                     u285_20:	
 21171  09A9                     i1l5678:	
 21172                           
 21173                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 21174  09A9  085B               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 21175  09AA  008A               	movwf	10
 21176  09AB  085A               	movf	_TMR1_InterruptHandler^(0+128),w
 21177  09AC  000A               	callw
 21178  09AD  3189               	pagesel	$
 21179  09AE                     i1l944:	
 21180  09AE  0008               	return
 21181  09AF                     __end_of_TMR1_ISR:	
 21182                           
 21183                           	psect	text102
 21184  1752                     __ptext102:	
 21185 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 21186 ;; Defined at:
 21187 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 21188 ;; Parameters:    Size  Location     Type
 21189 ;;		None
 21190 ;; Auto vars:     Size  Location     Type
 21191 ;;		None
 21192 ;; Return value:  Size  Location     Type
 21193 ;;                  1    wreg      void 
 21194 ;; Registers used:
 21195 ;;		None
 21196 ;; Tracked objects:
 21197 ;;		On entry : 0/0
 21198 ;;		On exit  : 0/0
 21199 ;;		Unchanged: 0/0
 21200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21205 ;;Total ram usage:        0 bytes
 21206 ;; Hardware stack levels used:    1
 21207 ;; This function calls:
 21208 ;;		Nothing
 21209 ;; This function is called by:
 21210 ;;		_TMR1_Initialize
 21211 ;;		_TMR1_ISR
 21212 ;; This function uses a non-reentrant model
 21213 ;;
 21214                           
 21215                           
 21216                           ;psect for function _TMR1_DefaultInterruptHandler
 21217  1752                     _TMR1_DefaultInterruptHandler:	
 21218  1752                     i1l950:	
 21219                           ;incstack = 0
 21220                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 21221                           
 21222  1752  0008               	return
 21223  1753                     __end_of_TMR1_DefaultInterruptHandler:	
 21224                           
 21225                           	psect	text103
 21226  0CCF                     __ptext103:	
 21227 ;; *************** function _handler_clock_hms *****************
 21228 ;; Defined at:
 21229 ;;		line 551 in file "main.c"
 21230 ;; Parameters:    Size  Location     Type
 21231 ;;		None
 21232 ;; Auto vars:     Size  Location     Type
 21233 ;;		None
 21234 ;; Return value:  Size  Location     Type
 21235 ;;                  1    wreg      void 
 21236 ;; Registers used:
 21237 ;;		wreg, status,2, status,0
 21238 ;; Tracked objects:
 21239 ;;		On entry : 0/0
 21240 ;;		On exit  : 0/0
 21241 ;;		Unchanged: 0/0
 21242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21245 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21246 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21247 ;;Total ram usage:        1 bytes
 21248 ;; Hardware stack levels used:    1
 21249 ;; This function calls:
 21250 ;;		Nothing
 21251 ;; This function is called by:
 21252 ;;		_main
 21253 ;;		_TMR1_ISR
 21254 ;; This function uses a non-reentrant model
 21255 ;;
 21256                           
 21257                           
 21258                           ;psect for function _handler_clock_hms
 21259  0CCF                     _handler_clock_hms:	
 21260  0CCF                     i1l5506:	
 21261                           ;incstack = 0
 21262                           ; Regs used in _handler_clock_hms: [wreg+status,2+status,0]
 21263                           
 21264                           
 21265                           ;main.c: 553:     if(!config_mode){
 21266  0CCF  0020               	movlb	0	; select bank0
 21267  0CD0  0854               	movf	_config_mode,w	;volatile
 21268  0CD1  1D03               	btfss	3,2
 21269  0CD2  2CD4               	goto	u260_21
 21270  0CD3  2CD5               	goto	u260_20
 21271  0CD4                     u260_21:	
 21272  0CD4  2CE0               	goto	i1l5510
 21273  0CD5                     u260_20:	
 21274  0CD5                     i1l5508:	
 21275  0CD5  1003               	clrc
 21276  0CD6  1F96               	btfss	22,7	;volatile
 21277  0CD7  1403               	setc
 21278  0CD8  1803               	btfsc	3,0
 21279  0CD9  2CDB               	goto	u261_21
 21280  0CDA  2CDE               	goto	u261_20
 21281  0CDB                     u261_21:	
 21282  0CDB  0020               	movlb	0	; select bank0
 21283  0CDC  1796               	bsf	22,7	;volatile
 21284  0CDD  2CE0               	goto	u262_24
 21285  0CDE                     u261_20:	
 21286  0CDE  0020               	movlb	0	; select bank0
 21287  0CDF  1396               	bcf	22,7	;volatile
 21288  0CE0                     u262_24:	
 21289  0CE0                     i1l5510:	
 21290                           
 21291                           ;main.c: 557:     last5s++;
 21292  0CE0  3001               	movlw	1
 21293  0CE1  00F0               	movwf	??_handler_clock_hms
 21294  0CE2  0870               	movf	??_handler_clock_hms,w
 21295  0CE3  07D7               	addwf	_last5s,f	;volatile
 21296  0CE4                     i1l5512:	
 21297                           
 21298                           ;main.c: 558:     seg++;
 21299  0CE4  3001               	movlw	1
 21300  0CE5  00F0               	movwf	??_handler_clock_hms
 21301  0CE6  0870               	movf	??_handler_clock_hms,w
 21302  0CE7  07DA               	addwf	_seg,f	;volatile
 21303  0CE8                     i1l5514:	
 21304                           
 21305                           ;main.c: 559:     if(seg >= 60) {
 21306  0CE8  303C               	movlw	60
 21307  0CE9  025A               	subwf	_seg,w	;volatile
 21308  0CEA  1C03               	skipc
 21309  0CEB  2CED               	goto	u263_21
 21310  0CEC  2CEE               	goto	u263_20
 21311  0CED                     u263_21:	
 21312  0CED  2D02               	goto	i1l1400
 21313  0CEE                     u263_20:	
 21314  0CEE                     i1l5516:	
 21315                           
 21316                           ;main.c: 560:         clkm++;
 21317  0CEE  3001               	movlw	1
 21318  0CEF  00F0               	movwf	??_handler_clock_hms
 21319  0CF0  0870               	movf	??_handler_clock_hms,w
 21320  0CF1  07DB               	addwf	_clkm,f	;volatile
 21321                           
 21322                           ;main.c: 561:         last1m++;
 21323  0CF2  3001               	movlw	1
 21324  0CF3  00F0               	movwf	??_handler_clock_hms
 21325  0CF4  0870               	movf	??_handler_clock_hms,w
 21326  0CF5  07D6               	addwf	_last1m,f	;volatile
 21327  0CF6                     i1l5518:	
 21328                           
 21329                           ;main.c: 562:         seg = 0;
 21330  0CF6  01DA               	clrf	_seg	;volatile
 21331  0CF7                     i1l5520:	
 21332                           
 21333                           ;main.c: 563:         if(clkm >= 60) {
 21334  0CF7  303C               	movlw	60
 21335  0CF8  025B               	subwf	_clkm,w	;volatile
 21336  0CF9  1C03               	skipc
 21337  0CFA  2CFC               	goto	u264_21
 21338  0CFB  2CFD               	goto	u264_20
 21339  0CFC                     u264_21:	
 21340  0CFC  2D02               	goto	i1l1400
 21341  0CFD                     u264_20:	
 21342  0CFD                     i1l5522:	
 21343                           
 21344                           ;main.c: 564:             clkh++;
 21345  0CFD  3001               	movlw	1
 21346  0CFE  00F0               	movwf	??_handler_clock_hms
 21347  0CFF  0870               	movf	??_handler_clock_hms,w
 21348  0D00  07DC               	addwf	_clkh,f	;volatile
 21349  0D01                     i1l5524:	
 21350                           
 21351                           ;main.c: 565:             clkm = 0;
 21352  0D01  01DB               	clrf	_clkm	;volatile
 21353  0D02                     i1l1400:	
 21354  0D02  0008               	return
 21355  0D03                     __end_of_handler_clock_hms:	
 21356                           
 21357                           	psect	text104
 21358  0902                     __ptext104:	
 21359 ;; *************** function _TMR1_WriteTimer *****************
 21360 ;; Defined at:
 21361 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 21362 ;; Parameters:    Size  Location     Type
 21363 ;;  timerVal        2    0[COMMON] unsigned short 
 21364 ;; Auto vars:     Size  Location     Type
 21365 ;;		None
 21366 ;; Return value:  Size  Location     Type
 21367 ;;                  1    wreg      void 
 21368 ;; Registers used:
 21369 ;;		wreg, status,2
 21370 ;; Tracked objects:
 21371 ;;		On entry : 0/0
 21372 ;;		On exit  : 0/0
 21373 ;;		Unchanged: 0/0
 21374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21375 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21378 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21379 ;;Total ram usage:        2 bytes
 21380 ;; Hardware stack levels used:    1
 21381 ;; This function calls:
 21382 ;;		Nothing
 21383 ;; This function is called by:
 21384 ;;		_TMR1_ISR
 21385 ;;		_TMR1_Reload
 21386 ;; This function uses a non-reentrant model
 21387 ;;
 21388                           
 21389                           
 21390                           ;psect for function _TMR1_WriteTimer
 21391  0902                     _TMR1_WriteTimer:	
 21392  0902                     i1l5444:	
 21393                           ;incstack = 0
 21394                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 21395                           
 21396                           
 21397                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 21398  0902  0024               	movlb	4	; select bank4
 21399  0903  1D0E               	btfss	14,2	;volatile
 21400  0904  2906               	goto	u253_21
 21401  0905  2907               	goto	u253_20
 21402  0906                     u253_21:	
 21403  0906  290E               	goto	i1l5454
 21404  0907                     u253_20:	
 21405  0907                     i1l5446:	
 21406                           
 21407                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 21408  0907  100E               	bcf	14,0	;volatile
 21409  0908                     i1l5448:	
 21410                           
 21411                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 21412  0908  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 21413  0909  008D               	movwf	13	;volatile
 21414  090A                     i1l5450:	
 21415                           
 21416                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 21417  090A  0870               	movf	TMR1_WriteTimer@timerVal,w
 21418  090B  008C               	movwf	12	;volatile
 21419  090C                     i1l5452:	
 21420                           
 21421                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 21422  090C  140E               	bsf	14,0	;volatile
 21423                           
 21424                           ;mcc_generated_files/tmr1.c: 140:     }
 21425  090D  2912               	goto	i1l931
 21426  090E                     i1l5454:	
 21427                           
 21428                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 21429  090E  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 21430  090F  008D               	movwf	13	;volatile
 21431  0910                     i1l5456:	
 21432                           
 21433                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 21434  0910  0870               	movf	TMR1_WriteTimer@timerVal,w
 21435  0911  008C               	movwf	12	;volatile
 21436  0912                     i1l931:	
 21437  0912  0008               	return
 21438  0913                     __end_of_TMR1_WriteTimer:	
 21439                           
 21440                           	psect	text105
 21441  08B5                     __ptext105:	
 21442 ;; *************** function _TMR0_ISR *****************
 21443 ;; Defined at:
 21444 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 21445 ;; Parameters:    Size  Location     Type
 21446 ;;		None
 21447 ;; Auto vars:     Size  Location     Type
 21448 ;;		None
 21449 ;; Return value:  Size  Location     Type
 21450 ;;                  1    wreg      void 
 21451 ;; Registers used:
 21452 ;;		wreg, status,2, status,0, pclath, cstack
 21453 ;; Tracked objects:
 21454 ;;		On entry : 0/0
 21455 ;;		On exit  : 0/0
 21456 ;;		Unchanged: 0/0
 21457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21462 ;;Total ram usage:        0 bytes
 21463 ;; Hardware stack levels used:    1
 21464 ;; Hardware stack levels required when called:    2
 21465 ;; This function calls:
 21466 ;;		Absolute function
 21467 ;;		_ISR_3s
 21468 ;;		_TMR0_DefaultInterruptHandler
 21469 ;; This function is called by:
 21470 ;;		_INTERRUPT_InterruptManager
 21471 ;; This function uses a non-reentrant model
 21472 ;;
 21473                           
 21474                           
 21475                           ;psect for function _TMR0_ISR
 21476  08B5                     _TMR0_ISR:	
 21477  08B5                     i1l5666:	
 21478                           ;incstack = 0
 21479                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 21480                           
 21481                           
 21482                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 21483  08B5  002E               	movlb	14	; select bank14
 21484  08B6  128C               	bcf	12,5	;volatile
 21485  08B7                     i1l5668:	
 21486                           
 21487                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 21488  08B7  0021               	movlb	1	; select bank1
 21489  08B8  085C               	movf	_TMR0_InterruptHandler^(0+128),w
 21490  08B9  045D               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 21491  08BA  1903               	btfsc	3,2
 21492  08BB  28BD               	goto	u284_21
 21493  08BC  28BE               	goto	u284_20
 21494  08BD                     u284_21:	
 21495  08BD  28C3               	goto	i1l880
 21496  08BE                     u284_20:	
 21497  08BE                     i1l5670:	
 21498                           
 21499                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 21500  08BE  085D               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 21501  08BF  008A               	movwf	10
 21502  08C0  085C               	movf	_TMR0_InterruptHandler^(0+128),w
 21503  08C1  000A               	callw
 21504  08C2  3188               	pagesel	$
 21505  08C3                     i1l880:	
 21506  08C3  0008               	return
 21507  08C4                     __end_of_TMR0_ISR:	
 21508                           
 21509                           	psect	text106
 21510  09DF                     __ptext106:	
 21511 ;; *************** function _ISR_3s *****************
 21512 ;; Defined at:
 21513 ;;		line 150 in file "main.c"
 21514 ;; Parameters:    Size  Location     Type
 21515 ;;		None
 21516 ;; Auto vars:     Size  Location     Type
 21517 ;;		None
 21518 ;; Return value:  Size  Location     Type
 21519 ;;                  1    wreg      void 
 21520 ;; Registers used:
 21521 ;;		wreg, status,2, status,0, pclath, cstack
 21522 ;; Tracked objects:
 21523 ;;		On entry : 0/0
 21524 ;;		On exit  : 0/0
 21525 ;;		Unchanged: 0/0
 21526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21529 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21530 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21531 ;;Total ram usage:        1 bytes
 21532 ;; Hardware stack levels used:    1
 21533 ;; Hardware stack levels required when called:    1
 21534 ;; This function calls:
 21535 ;;		_TMR0_StopTimer
 21536 ;;		i1_PWM6_LoadDutyValue
 21537 ;; This function is called by:
 21538 ;;		_main
 21539 ;;		_TMR0_ISR
 21540 ;; This function uses a non-reentrant model
 21541 ;;
 21542                           
 21543                           
 21544                           ;psect for function _ISR_3s
 21545  09DF                     _ISR_3s:	
 21546  09DF                     i1l5458:	
 21547                           ;incstack = 0
 21548                           ; Regs used in _ISR_3s: [wreg+status,2+status,0+pclath+cstack]
 21549                           
 21550                           
 21551                           ;main.c: 152:     if (threshold){
 21552  09DF  0020               	movlb	0	; select bank0
 21553  09E0  084D               	movf	_threshold,w
 21554  09E1  044E               	iorwf	_threshold+1,w
 21555  09E2  1903               	btfsc	3,2
 21556  09E3  29E5               	goto	u254_21
 21557  09E4  29E6               	goto	u254_20
 21558  09E5                     u254_21:	
 21559  09E5  29F2               	goto	i1l1278
 21560  09E6                     u254_20:	
 21561  09E6                     i1l5460:	
 21562                           
 21563                           ;main.c: 153:         PWM6_LoadDutyValue(1023);
 21564  09E6  30FF               	movlw	255
 21565  09E7  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 21566  09E8  3003               	movlw	3
 21567  09E9  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 21568  09EA  3189  216C  3189   	fcall	i1_PWM6_LoadDutyValue
 21569  09ED                     i1l5462:	
 21570                           
 21571                           ;main.c: 154:         alarm = 1;
 21572  09ED  3001               	movlw	1
 21573  09EE  00F4               	movwf	??_ISR_3s
 21574  09EF  0874               	movf	??_ISR_3s,w
 21575  09F0  0020               	movlb	0	; select bank0
 21576  09F1  00D3               	movwf	_alarm	;volatile
 21577  09F2                     i1l1278:	
 21578                           ;main.c: 156:     }
 21579                           
 21580                           
 21581                           ;main.c: 158:     TMR0_StopTimer();
 21582  09F2  3197  2759  3189   	fcall	_TMR0_StopTimer
 21583  09F5                     i1l5464:	
 21584                           
 21585                           ;main.c: 159:     PIE0bits.TMR0IE = 0;
 21586  09F5  002E               	movlb	14	; select bank14
 21587  09F6  1296               	bcf	22,5	;volatile
 21588  09F7                     i1l1279:	
 21589  09F7  0008               	return
 21590  09F8                     __end_of_ISR_3s:	
 21591                           
 21592                           	psect	text107
 21593  1751                     __ptext107:	
 21594 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 21595 ;; Defined at:
 21596 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 21597 ;; Parameters:    Size  Location     Type
 21598 ;;		None
 21599 ;; Auto vars:     Size  Location     Type
 21600 ;;		None
 21601 ;; Return value:  Size  Location     Type
 21602 ;;                  1    wreg      void 
 21603 ;; Registers used:
 21604 ;;		None
 21605 ;; Tracked objects:
 21606 ;;		On entry : 0/0
 21607 ;;		On exit  : 0/0
 21608 ;;		Unchanged: 0/0
 21609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21614 ;;Total ram usage:        0 bytes
 21615 ;; Hardware stack levels used:    1
 21616 ;; This function calls:
 21617 ;;		Nothing
 21618 ;; This function is called by:
 21619 ;;		_TMR0_Initialize
 21620 ;;		_TMR0_ISR
 21621 ;; This function uses a non-reentrant model
 21622 ;;
 21623                           
 21624                           
 21625                           ;psect for function _TMR0_DefaultInterruptHandler
 21626  1751                     _TMR0_DefaultInterruptHandler:	
 21627  1751                     i1l886:	
 21628                           ;incstack = 0
 21629                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 21630                           
 21631  1751  0008               	return
 21632  1752                     __end_of_TMR0_DefaultInterruptHandler:	
 21633                           
 21634                           	psect	text108
 21635  1759                     __ptext108:	
 21636 ;; *************** function _TMR0_StopTimer *****************
 21637 ;; Defined at:
 21638 ;;		line 93 in file "mcc_generated_files/tmr0.c"
 21639 ;; Parameters:    Size  Location     Type
 21640 ;;		None
 21641 ;; Auto vars:     Size  Location     Type
 21642 ;;		None
 21643 ;; Return value:  Size  Location     Type
 21644 ;;                  1    wreg      void 
 21645 ;; Registers used:
 21646 ;;		None
 21647 ;; Tracked objects:
 21648 ;;		On entry : 0/0
 21649 ;;		On exit  : 0/0
 21650 ;;		Unchanged: 0/0
 21651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21656 ;;Total ram usage:        0 bytes
 21657 ;; Hardware stack levels used:    1
 21658 ;; This function calls:
 21659 ;;		Nothing
 21660 ;; This function is called by:
 21661 ;;		_ISR_3s
 21662 ;; This function uses a non-reentrant model
 21663 ;;
 21664                           
 21665                           
 21666                           ;psect for function _TMR0_StopTimer
 21667  1759                     _TMR0_StopTimer:	
 21668  1759                     i1l4962:	
 21669                           ;incstack = 0
 21670                           ; Regs used in _TMR0_StopTimer: []
 21671                           
 21672                           
 21673                           ;mcc_generated_files/tmr0.c: 96:     T0CON0bits.T0EN = 0;
 21674  1759  0020               	movlb	0	; select bank0
 21675  175A  139E               	bcf	30,7	;volatile
 21676  175B                     i1l867:	
 21677  175B  0008               	return
 21678  175C                     __end_of_TMR0_StopTimer:	
 21679                           
 21680                           	psect	text109
 21681  17AD                     __ptext109:	
 21682 ;; *************** function _INT_ISR *****************
 21683 ;; Defined at:
 21684 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 21685 ;; Parameters:    Size  Location     Type
 21686 ;;		None
 21687 ;; Auto vars:     Size  Location     Type
 21688 ;;		None
 21689 ;; Return value:  Size  Location     Type
 21690 ;;                  1    wreg      void 
 21691 ;; Registers used:
 21692 ;;		wreg, status,2, status,0, pclath, cstack
 21693 ;; Tracked objects:
 21694 ;;		On entry : 0/0
 21695 ;;		On exit  : 0/0
 21696 ;;		Unchanged: 0/0
 21697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21702 ;;Total ram usage:        0 bytes
 21703 ;; Hardware stack levels used:    1
 21704 ;; Hardware stack levels required when called:    3
 21705 ;; This function calls:
 21706 ;;		_INT_CallBack
 21707 ;; This function is called by:
 21708 ;;		_INTERRUPT_InterruptManager
 21709 ;; This function uses a non-reentrant model
 21710 ;;
 21711                           
 21712                           
 21713                           ;psect for function _INT_ISR
 21714  17AD                     _INT_ISR:	
 21715  17AD                     i1l5662:	
 21716                           ;incstack = 0
 21717                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 21718                           
 21719                           
 21720                           ;mcc_generated_files/ext_int.c: 34:     (PIR0bits.INTF = 0);
 21721  17AD  002E               	movlb	14	; select bank14
 21722  17AE  100C               	bcf	12,0	;volatile
 21723  17AF                     i1l5664:	
 21724                           
 21725                           ;mcc_generated_files/ext_int.c: 37:     INT_CallBack();
 21726  17AF  3188  2080  3197   	fcall	_INT_CallBack
 21727  17B2                     i1l334:	
 21728  17B2  0008               	return
 21729  17B3                     __end_of_INT_ISR:	
 21730                           
 21731                           	psect	text110
 21732  0880                     __ptext110:	
 21733 ;; *************** function _INT_CallBack *****************
 21734 ;; Defined at:
 21735 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 21736 ;; Parameters:    Size  Location     Type
 21737 ;;		None
 21738 ;; Auto vars:     Size  Location     Type
 21739 ;;		None
 21740 ;; Return value:  Size  Location     Type
 21741 ;;                  1    wreg      void 
 21742 ;; Registers used:
 21743 ;;		wreg, status,2, status,0, pclath, cstack
 21744 ;; Tracked objects:
 21745 ;;		On entry : 0/0
 21746 ;;		On exit  : 0/0
 21747 ;;		Unchanged: 0/0
 21748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21753 ;;Total ram usage:        0 bytes
 21754 ;; Hardware stack levels used:    1
 21755 ;; Hardware stack levels required when called:    2
 21756 ;; This function calls:
 21757 ;;		Absolute function
 21758 ;;		_INT_DefaultInterruptHandler
 21759 ;;		_sw1_EXT
 21760 ;; This function is called by:
 21761 ;;		_INT_ISR
 21762 ;; This function uses a non-reentrant model
 21763 ;;
 21764                           
 21765                           
 21766                           ;psect for function _INT_CallBack
 21767  0880                     _INT_CallBack:	
 21768  0880                     i1l5302:	
 21769                           ;incstack = 0
 21770                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 21771                           
 21772                           
 21773                           ;mcc_generated_files/ext_int.c: 44:     if(INT_InterruptHandler)
 21774  0880  0021               	movlb	1	; select bank1
 21775  0881  085E               	movf	_INT_InterruptHandler^(0+128),w
 21776  0882  045F               	iorwf	(_INT_InterruptHandler+1)^(0+128),w
 21777  0883  1903               	btfsc	3,2
 21778  0884  2886               	goto	u252_21
 21779  0885  2887               	goto	u252_20
 21780  0886                     u252_21:	
 21781  0886  288C               	goto	i1l338
 21782  0887                     u252_20:	
 21783  0887                     i1l5304:	
 21784                           
 21785                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          _InterruptHandler();
 21786  0887  085F               	movf	(_INT_InterruptHandler+1)^(0+128),w
 21787  0888  008A               	movwf	10
 21788  0889  085E               	movf	_INT_InterruptHandler^(0+128),w
 21789  088A  000A               	callw
 21790  088B  3188               	pagesel	$
 21791  088C                     i1l338:	
 21792  088C  0008               	return
 21793  088D                     __end_of_INT_CallBack:	
 21794                           
 21795                           	psect	text111
 21796  1750                     __ptext111:	
 21797 ;; *************** function _INT_DefaultInterruptHandler *****************
 21798 ;; Defined at:
 21799 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 21800 ;; Parameters:    Size  Location     Type
 21801 ;;		None
 21802 ;; Auto vars:     Size  Location     Type
 21803 ;;		None
 21804 ;; Return value:  Size  Location     Type
 21805 ;;                  1    wreg      void 
 21806 ;; Registers used:
 21807 ;;		None
 21808 ;; Tracked objects:
 21809 ;;		On entry : 0/0
 21810 ;;		On exit  : 0/0
 21811 ;;		Unchanged: 0/0
 21812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21817 ;;Total ram usage:        0 bytes
 21818 ;; Hardware stack levels used:    1
 21819 ;; This function calls:
 21820 ;;		Nothing
 21821 ;; This function is called by:
 21822 ;;		_EXT_INT_Initialize
 21823 ;;		_INT_CallBack
 21824 ;; This function uses a non-reentrant model
 21825 ;;
 21826                           
 21827                           
 21828                           ;psect for function _INT_DefaultInterruptHandler
 21829  1750                     _INT_DefaultInterruptHandler:	
 21830  1750                     i1l344:	
 21831                           ;incstack = 0
 21832                           ; Regs used in _INT_DefaultInterruptHandler: []
 21833                           
 21834  1750  0008               	return
 21835  1751                     __end_of_INT_DefaultInterruptHandler:	
 21836                           
 21837                           	psect	text112
 21838  0B75                     __ptext112:	
 21839 ;; *************** function _sw1_EXT *****************
 21840 ;; Defined at:
 21841 ;;		line 128 in file "main.c"
 21842 ;; Parameters:    Size  Location     Type
 21843 ;;		None
 21844 ;; Auto vars:     Size  Location     Type
 21845 ;;		None
 21846 ;; Return value:  Size  Location     Type
 21847 ;;                  1    wreg      void 
 21848 ;; Registers used:
 21849 ;;		wreg, status,2, status,0, pclath, cstack
 21850 ;; Tracked objects:
 21851 ;;		On entry : 0/0
 21852 ;;		On exit  : 0/0
 21853 ;;		Unchanged: 0/0
 21854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21857 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21858 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21859 ;;Total ram usage:        1 bytes
 21860 ;; Hardware stack levels used:    1
 21861 ;; Hardware stack levels required when called:    1
 21862 ;; This function calls:
 21863 ;;		i1_PWM6_LoadDutyValue
 21864 ;;		i1_checkDebounceSW1
 21865 ;; This function is called by:
 21866 ;;		_main
 21867 ;;		_INT_CallBack
 21868 ;; This function uses a non-reentrant model
 21869 ;;
 21870                           
 21871                           
 21872                           ;psect for function _sw1_EXT
 21873  0B75                     _sw1_EXT:	
 21874  0B75                     i1l4988:	
 21875                           ;incstack = 0
 21876                           ; Regs used in _sw1_EXT: [wreg+status,2+status,0+pclath+cstack]
 21877                           
 21878                           
 21879                           ;main.c: 130:     if(checkDebounceSW1()){
 21880  0B75  3187  2790  318B   	fcall	i1_checkDebounceSW1
 21881  0B78  3A00               	xorlw	0
 21882  0B79  1903               	skipnz
 21883  0B7A  2B7C               	goto	u242_21
 21884  0B7B  2B7D               	goto	u242_20
 21885  0B7C                     u242_21:	
 21886  0B7C  2B99               	goto	i1l1275
 21887  0B7D                     u242_20:	
 21888  0B7D                     i1l4990:	
 21889                           
 21890                           ;main.c: 131:         if (alarm == 1){
 21891  0B7D  0020               	movlb	0	; select bank0
 21892  0B7E  0353               	decf	_alarm,w	;volatile
 21893  0B7F  1D03               	btfss	3,2
 21894  0B80  2B82               	goto	u243_21
 21895  0B81  2B83               	goto	u243_20
 21896  0B82                     u243_21:	
 21897  0B82  2B90               	goto	i1l4998
 21898  0B83                     u243_20:	
 21899  0B83                     i1l4992:	
 21900                           
 21901                           ;main.c: 132:             alarm = 0;
 21902  0B83  01D3               	clrf	_alarm	;volatile
 21903  0B84                     i1l4994:	
 21904                           
 21905                           ;main.c: 133:             PWM6_LoadDutyValue(0);
 21906  0B84  3000               	movlw	0
 21907  0B85  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 21908  0B86  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 21909  0B87  3189  216C  318B   	fcall	i1_PWM6_LoadDutyValue
 21910  0B8A                     i1l4996:	
 21911                           
 21912                           ;main.c: 134:             last_ms = clkms;
 21913  0B8A  087D               	movf	_clkms,w	;volatile
 21914  0B8B  00F7               	movwf	??_sw1_EXT
 21915  0B8C  0877               	movf	??_sw1_EXT,w
 21916  0B8D  0020               	movlb	0	; select bank0
 21917  0B8E  00D9               	movwf	_last_ms
 21918                           
 21919                           ;main.c: 135:         }
 21920  0B8F  2B99               	goto	i1l1275
 21921  0B90                     i1l4998:	
 21922                           
 21923                           ;main.c: 137:             if(config_mode == 0){
 21924  0B90  0854               	movf	_config_mode,w	;volatile
 21925  0B91  1D03               	btfss	3,2
 21926  0B92  2B94               	goto	u244_21
 21927  0B93  2B95               	goto	u244_20
 21928  0B94                     u244_21:	
 21929  0B94  2B99               	goto	i1l1275
 21930  0B95                     u244_20:	
 21931  0B95                     i1l5000:	
 21932                           
 21933                           ;main.c: 138:                 config_mode = 1;
 21934  0B95  3001               	movlw	1
 21935  0B96  00F7               	movwf	??_sw1_EXT
 21936  0B97  0877               	movf	??_sw1_EXT,w
 21937  0B98  00D4               	movwf	_config_mode	;volatile
 21938  0B99                     i1l1275:	
 21939  0B99  0008               	return
 21940  0B9A                     __end_of_sw1_EXT:	
 21941                           
 21942                           	psect	text113
 21943  0790                     __ptext113:	
 21944 ;; *************** function i1_checkDebounceSW1 *****************
 21945 ;; Defined at:
 21946 ;;		line 592 in file "main.c"
 21947 ;; Parameters:    Size  Location     Type
 21948 ;;		None
 21949 ;; Auto vars:     Size  Location     Type
 21950 ;;		None
 21951 ;; Return value:  Size  Location     Type
 21952 ;;                  1    wreg      unsigned char 
 21953 ;; Registers used:
 21954 ;;		wreg, status,2, status,0
 21955 ;; Tracked objects:
 21956 ;;		On entry : 0/0
 21957 ;;		On exit  : 0/0
 21958 ;;		Unchanged: 0/0
 21959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21962 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21963 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21964 ;;Total ram usage:        7 bytes
 21965 ;; Hardware stack levels used:    1
 21966 ;; This function calls:
 21967 ;;		Nothing
 21968 ;; This function is called by:
 21969 ;;		_sw1_EXT
 21970 ;; This function uses a non-reentrant model
 21971 ;;
 21972                           
 21973                           
 21974                           ;psect for function i1_checkDebounceSW1
 21975  0790                     i1_checkDebounceSW1:	
 21976  0790                     i1l4822:	
 21977                           ;incstack = 0
 21978                           ; Regs used in i1_checkDebounceSW1: [wreg+status,2+status,0]
 21979                           
 21980                           
 21981                           ;main.c: 593:     PIE4bits.TMR1IE = 0;
 21982  0790  002E               	movlb	14	; select bank14
 21983  0791  101A               	bcf	26,0	;volatile
 21984  0792                     i1l4824:	
 21985                           
 21986                           ;main.c: 595:     if(clkms - last_ms < 0){
 21987  0792  087D               	movf	_clkms,w	;volatile
 21988  0793  00F0               	movwf	??i1_checkDebounceSW1
 21989  0794  01F1               	clrf	??i1_checkDebounceSW1+1
 21990  0795  0871               	movf	??i1_checkDebounceSW1+1,w
 21991  0796  00F3               	movwf	??i1_checkDebounceSW1+3
 21992  0797  0020               	movlb	0	; select bank0
 21993  0798  0859               	movf	_last_ms,w
 21994  0799  0270               	subwf	??i1_checkDebounceSW1,w
 21995  079A  00F2               	movwf	??i1_checkDebounceSW1+2
 21996  079B  1C03               	skipc
 21997  079C  03F3               	decf	??i1_checkDebounceSW1+3,f
 21998  079D  1FF3               	btfss	??i1_checkDebounceSW1+3,7
 21999  079E  2FA0               	goto	u237_21
 22000  079F  2FA1               	goto	u237_20
 22001  07A0                     u237_21:	
 22002  07A0  2FC7               	goto	i1l4834
 22003  07A1                     u237_20:	
 22004  07A1                     i1l4826:	
 22005                           
 22006                           ;main.c: 597:         if ((200 - last_ms)+ clkms > 15 ){
 22007  07A1  087D               	movf	_clkms,w	;volatile
 22008  07A2  00F0               	movwf	??i1_checkDebounceSW1
 22009  07A3  01F1               	clrf	??i1_checkDebounceSW1+1
 22010  07A4  0871               	movf	??i1_checkDebounceSW1+1,w
 22011  07A5  00F3               	movwf	??i1_checkDebounceSW1+3
 22012  07A6  0859               	movf	_last_ms,w
 22013  07A7  0270               	subwf	??i1_checkDebounceSW1,w
 22014  07A8  00F2               	movwf	??i1_checkDebounceSW1+2
 22015  07A9  1C03               	skipc
 22016  07AA  03F3               	decf	??i1_checkDebounceSW1+3,f
 22017  07AB  0872               	movf	??i1_checkDebounceSW1+2,w
 22018  07AC  3EC8               	addlw	200
 22019  07AD  00F4               	movwf	??i1_checkDebounceSW1+4
 22020  07AE  3000               	movlw	0
 22021  07AF  3D73               	addwfc	??i1_checkDebounceSW1+3,w
 22022  07B0  00F5               	movwf	??i1_checkDebounceSW1+5
 22023  07B1  0875               	movf	??i1_checkDebounceSW1+5,w
 22024  07B2  3A80               	xorlw	128
 22025  07B3  00F6               	movwf	??i1_checkDebounceSW1+6
 22026  07B4  3080               	movlw	128
 22027  07B5  0276               	subwf	??i1_checkDebounceSW1+6,w
 22028  07B6  1D03               	skipz
 22029  07B7  2FBA               	goto	u238_25
 22030  07B8  3010               	movlw	16
 22031  07B9  0274               	subwf	??i1_checkDebounceSW1+4,w
 22032  07BA                     u238_25:	
 22033  07BA  1C03               	skipc
 22034  07BB  2FBD               	goto	u238_21
 22035  07BC  2FBE               	goto	u238_20
 22036  07BD                     u238_21:	
 22037  07BD  2FC7               	goto	i1l4834
 22038  07BE                     u238_20:	
 22039  07BE                     i1l4828:	
 22040                           
 22041                           ;main.c: 598:             last_ms = clkms;
 22042  07BE  087D               	movf	_clkms,w	;volatile
 22043  07BF  00F0               	movwf	??i1_checkDebounceSW1
 22044  07C0  0870               	movf	??i1_checkDebounceSW1,w
 22045  07C1  0020               	movlb	0	; select bank0
 22046  07C2  00D9               	movwf	_last_ms
 22047  07C3                     i1l4830:	
 22048                           
 22049                           ;main.c: 599:             PIE4bits.TMR1IE = 1;
 22050  07C3  002E               	movlb	14	; select bank14
 22051  07C4  141A               	bsf	26,0	;volatile
 22052                           
 22053                           ;main.c: 600:             return 1;
 22054  07C5  3001               	movlw	1
 22055  07C6  2FE9               	goto	i1l1409
 22056  07C7                     i1l4834:	
 22057                           
 22058                           ;main.c: 604:     if(clkms - last_ms < 15){
 22059  07C7  087D               	movf	_clkms,w	;volatile
 22060  07C8  00F0               	movwf	??i1_checkDebounceSW1
 22061  07C9  01F1               	clrf	??i1_checkDebounceSW1+1
 22062  07CA  0871               	movf	??i1_checkDebounceSW1+1,w
 22063  07CB  00F3               	movwf	??i1_checkDebounceSW1+3
 22064  07CC  0020               	movlb	0	; select bank0
 22065  07CD  0859               	movf	_last_ms,w
 22066  07CE  0270               	subwf	??i1_checkDebounceSW1,w
 22067  07CF  00F2               	movwf	??i1_checkDebounceSW1+2
 22068  07D0  1C03               	skipc
 22069  07D1  03F3               	decf	??i1_checkDebounceSW1+3,f
 22070  07D2  0873               	movf	??i1_checkDebounceSW1+3,w
 22071  07D3  3A80               	xorlw	128
 22072  07D4  00F4               	movwf	??i1_checkDebounceSW1+4
 22073  07D5  3080               	movlw	128
 22074  07D6  0274               	subwf	??i1_checkDebounceSW1+4,w
 22075  07D7  1D03               	skipz
 22076  07D8  2FDB               	goto	u239_25
 22077  07D9  300F               	movlw	15
 22078  07DA  0272               	subwf	??i1_checkDebounceSW1+2,w
 22079  07DB                     u239_25:	
 22080  07DB  1803               	skipnc
 22081  07DC  2FDE               	goto	u239_21
 22082  07DD  2FDF               	goto	u239_20
 22083  07DE                     u239_21:	
 22084  07DE  2FE1               	goto	i1l4842
 22085  07DF                     u239_20:	
 22086  07DF                     i1l4836:	
 22087                           
 22088                           ;main.c: 605:         return 0;
 22089  07DF  3000               	movlw	0
 22090  07E0  2FE9               	goto	i1l1409
 22091  07E1                     i1l4842:	
 22092                           
 22093                           ;main.c: 608:         last_ms = clkms;
 22094  07E1  087D               	movf	_clkms,w	;volatile
 22095  07E2  00F0               	movwf	??i1_checkDebounceSW1
 22096  07E3  0870               	movf	??i1_checkDebounceSW1,w
 22097  07E4  0020               	movlb	0	; select bank0
 22098  07E5  00D9               	movwf	_last_ms
 22099  07E6                     i1l4844:	
 22100                           
 22101                           ;main.c: 609:         PIE4bits.TMR1IE = 1;
 22102  07E6  002E               	movlb	14	; select bank14
 22103  07E7  141A               	bsf	26,0	;volatile
 22104                           
 22105                           ;main.c: 610:         return 1;
 22106  07E8  3001               	movlw	1
 22107  07E9                     i1l1409:	
 22108  07E9  0008               	return
 22109  07EA                     __end_ofi1_checkDebounceSW1:	
 22110                           
 22111                           	psect	text114
 22112  096C                     __ptext114:	
 22113 ;; *************** function i1_PWM6_LoadDutyValue *****************
 22114 ;; Defined at:
 22115 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 22116 ;; Parameters:    Size  Location     Type
 22117 ;;  dutyValue       2    0[COMMON] unsigned short 
 22118 ;; Auto vars:     Size  Location     Type
 22119 ;;		None
 22120 ;; Return value:  Size  Location     Type
 22121 ;;                  1    wreg      void 
 22122 ;; Registers used:
 22123 ;;		wreg, status,2, status,0
 22124 ;; Tracked objects:
 22125 ;;		On entry : 0/0
 22126 ;;		On exit  : 0/0
 22127 ;;		Unchanged: 0/0
 22128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22129 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22131 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22132 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22133 ;;Total ram usage:        4 bytes
 22134 ;; Hardware stack levels used:    1
 22135 ;; This function calls:
 22136 ;;		Nothing
 22137 ;; This function is called by:
 22138 ;;		_sw1_EXT
 22139 ;;		_ISR_3s
 22140 ;; This function uses a non-reentrant model
 22141 ;;
 22142                           
 22143                           
 22144                           ;psect for function i1_PWM6_LoadDutyValue
 22145  096C                     i1_PWM6_LoadDutyValue:	
 22146  096C                     i1l4820:	
 22147                           ;incstack = 0
 22148                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 22149                           
 22150                           
 22151                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22152  096C  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 22153  096D  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 22154  096E  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 22155  096F  00F2               	movwf	??i1_PWM6_LoadDutyValue
 22156  0970  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 22157  0971  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 22158  0972  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 22159  0973  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 22160  0974  0872               	movf	??i1_PWM6_LoadDutyValue,w
 22161  0975  0027               	movlb	7	; select bank7
 22162  0976  008D               	movwf	13	;volatile
 22163                           
 22164                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 22165  0977  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 22166  0978  3903               	andlw	3
 22167  0979  00F2               	movwf	??i1_PWM6_LoadDutyValue
 22168  097A  3005               	movlw	5
 22169  097B                     u236_25:	
 22170  097B  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 22171  097C  3EFF               	addlw	-1
 22172  097D  1D03               	skipz
 22173  097E  297B               	goto	u236_25
 22174  097F  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 22175  0980  008C               	movwf	12	;volatile
 22176  0981                     i1l964:	
 22177  0981  0008               	return
 22178  0982                     __end_ofi1_PWM6_LoadDutyValue:	
 22179  007E                     btemp	set	126	;btemp
 22180  007E                     int$flags	set	126
 22181  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    37
    Data        9
    BSS         75
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     45      74
    BANK1            80      5      69
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$3742$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$3748	const PTR FTN()enum E12722 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX$3747	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$3742	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    push_ring@ring_byte	PTR unsigned char  size(1) Largest target is 5
		 -> ring_byte(BANK1[5]), 

    push_ring@nreg_pt	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_pt(BANK0[1]), 

    push_ring@nreg_init	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_init(BANK0[1]), 

    ring_buffer@_ring_byte	PTR unsigned char  size(1) Largest target is 5
		 -> ring_byte(BANK1[5]), 

    S2082Subfield_Info_Struct$reconstruct_subfield	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    subfield_info.reconstruct_subfield	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S2082Subfield_Info_Struct$limit	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    subfield_info.limit	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ISR_3s(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ISR_3s(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), Absolute function(), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S383$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), i2c_restartWrite(), 

    fsmStateTable	const PTR FTN()enum E12722[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S66$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    S66$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _i2c_ISR->_do_I2C_DO_ADDRESS_NACK
    _i2c_ISR->_do_I2C_RX
    _i2c_ISR->_do_I2C_TX
    _i2c_ISR->_do_I2C_TX_EMPTY
    _do_I2C_TX_EMPTY->_i2c_restartWrite
    _do_I2C_TX_EMPTY->_rd1RegCompleteHandler
    _do_I2C_TX_EMPTY->_rd2RegCompleteHandler
    _do_I2C_TX_EMPTY->_rdBlkRegCompleteHandler
    _do_I2C_TX_EMPTY->_returnReset
    _do_I2C_TX_EMPTY->_returnStop
    _do_I2C_TX_EMPTY->_wr1RegCompleteHandler
    _do_I2C_TX_EMPTY->_wr2RegCompleteHandler
    _do_I2C_TX->_i2c_restartWrite
    _do_I2C_TX->_rd1RegCompleteHandler
    _do_I2C_TX->_rd2RegCompleteHandler
    _do_I2C_TX->_rdBlkRegCompleteHandler
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_TX->_wr1RegCompleteHandler
    _do_I2C_TX->_wr2RegCompleteHandler
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_RX->_i2c_restartWrite
    _do_I2C_RX->_rd1RegCompleteHandler
    _do_I2C_RX->_rd2RegCompleteHandler
    _do_I2C_RX->_rdBlkRegCompleteHandler
    _do_I2C_RX->_returnReset
    _do_I2C_RX->_returnStop
    _do_I2C_RX->_wr1RegCompleteHandler
    _do_I2C_RX->_wr2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_i2c_restartWrite
    _do_I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_returnReset
    _do_I2C_DO_ADDRESS_NACK->_returnStop
    _do_I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _TMR2_ISR->_handler_clock_ms
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR0_ISR->_ISR_3s
    _ISR_3s->i1_PWM6_LoadDutyValue
    _INT_CallBack->_sw1_EXT
    _sw1_EXT->i1_checkDebounceSW1

Critical Paths under _main in BANK0

    _main->_config_routine
    _tsttc->_WriteI2C
    _save_recovery_params->_cksum_w
    _recoverData->_reset_recv
    _reset_recv->_DATAEE_WriteByte
    _cksum_w->_DATAEE_WriteByte
    _cksum->_DATAEE_ReadByte
    _read_ring->___bmul
    _push_ring->_DATAEE_WriteByte
    _DATAEE_WriteByte->_cksum
    _config_routine->_selectSubfield
    _selectSubfield->_getSubfieldInfo
    _mod4_LED->_PWM6_LoadDutyValue
    _mod3_LED->_PWM6_LoadDutyValue
    _mod2_LED->_PWM6_LoadDutyValue
    _mod1_LED->_PWM6_LoadDutyValue
    _getSubfieldInfo->_increment_subfield
    _limitTempThreshUnits->___awdiv
    _limitHoursUnits->___awdiv
    _increment_subfield->_representLed
    _representLed->_PWM6_LoadDutyValue
    _all_LED->_PWM6_LoadDutyValue
    _mode_select_LED->_PWM6_LoadDutyValue
    _PWM6_LoadDutyValue->___wmul
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _ADC_read->_ADCC_GetConversionResult

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_i2c_ISR

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   60810
                                             40 BANK0      5     5      0
                                              0 BANK1      5     5      0
                           _ADC_read
                   _DATAEE_WriteByte
            _INT_SetInterruptHandler
                            _LED_bin
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
           _TMR1_SetInterruptHandler
           _TMR2_SetInterruptHandler
                            _cksum_w
                     _config_routine
                   _i2c1_driver_open
                          _push_ring
                          _read_ring
                        _recoverData
                        _ring_buffer
               _save_recovery_params
                              _tsttc
 ---------------------------------------------------------------------------------
 (1) _tsttc                                                2     2      0      99
                                              5 BANK0      2     2      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      31
                                              3 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _save_recovery_params                                 3     3      0    6640
                                             14 BANK0      3     3      0
                   _DATAEE_WriteByte
                            _cksum_w
 ---------------------------------------------------------------------------------
 (1) _ring_buffer                                          7     2      5     796
                                              3 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (1) _recoverData                                          1     1      0   11738
                                             15 BANK0      1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                              _cksum
                            _cksum_w
                         _reset_recv
 ---------------------------------------------------------------------------------
 (2) _reset_recv                                           2     2      0    2746
                                             13 BANK0      2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _cksum_w                                              1     1      0    3925
                                             13 BANK0      1     1      0
                   _DATAEE_WriteByte
                              _cksum
 ---------------------------------------------------------------------------------
 (3) _cksum                                                4     4      0    1278
                                              5 BANK0      4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (1) _read_ring                                            9     5      4    2773
                                              7 BANK0      9     5      4
                    _DATAEE_ReadByte
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2    1142
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _push_ring                                            7     4      3    3300
                                             13 BANK0      7     4      3
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3    2647
                                              9 BANK0      4     1      3
                              _cksum (ARG)
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_routine                                       3     3      0   25621
                                             37 BANK0      3     3      0
                            _all_LED
                   _checkDebounceSW1
                   _checkDebounceSW2
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
                    _mode_select_LED
                     _selectSubfield
 ---------------------------------------------------------------------------------
 (2) _selectSubfield                                       4     4      0   18007
                                             33 BANK0      4     4      0
                            _all_LED
                   _checkDebounceSW1
                   _checkDebounceSW2
                    _getSubfieldInfo
                           _mode_LED
 ---------------------------------------------------------------------------------
 (3) _mode_LED                                             3     3      0    5039
                                             13 BANK0      3     3      0
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
 ---------------------------------------------------------------------------------
 (4) _mod4_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _mod3_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _mod2_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _mod1_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _getSubfieldInfo                                      9     9      0   11617
                                             24 BANK0      9     9      0
                            ___awdiv
                            ___awmod
                             ___bmul
                 _increment_subfield
                    _limitHoursUnits
               _limitTempThreshUnits
 ---------------------------------------------------------------------------------
 (4) _limitTempThreshUnits                                 2     2      0    1525
                                             12 BANK0      2     2      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _limitHoursUnits                                      2     2      0    1525
                                             12 BANK0      2     2      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4    1525
                                              3 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) _increment_subfield                                   6     4      2    4985
                                             18 BANK0      6     4      2
                 _PWM6_LoadDutyValue
                   _checkDebounceSW1
                   _checkDebounceSW2
                    _limitHoursUnits (ARG)
               _limitTempThreshUnits (ARG)
                       _representLed
 ---------------------------------------------------------------------------------
 (5) _representLed                                         5     5      0    2747
                                             13 BANK0      5     5      0
                 _PWM6_LoadDutyValue
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1306
                                              3 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _checkDebounceSW2                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (5) _checkDebounceSW1                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     496
                                              3 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1153
                                              3 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _all_LED                                              1     1      0    1252
                                             13 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_select_LED                                      1     1      0    1252
                                             13 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (5) _PWM6_LoadDutyValue                                   4     2      2    1252
                                              9 BANK0      4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     844
                    _ADCC_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_bin                                              5     3      2     152
                                              3 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             2     0      2      31
                                              5 BANK0      2     0      2
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             2     0      2       0
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0   78474
                   Absolute function *
                            _INT_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (8) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _i2c_ISR                                              3     3      0   78042
                                              0 BANK0      3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (9) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_TX_EMPTY                                      3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _mssp1_setIRQ                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_TX                                            3     3      0   19516
                                             10 COMMON     3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART_WRITE                           0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART_READ                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_TXData                                  1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RX                                            3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_getRXData                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_NACK_STOP                                 0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_NACK_RESTART                              0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_sendNACK                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_resetBus                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_startRX                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_DO_ADDRESS_NACK                               3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _returnStop                                          1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _returnReset                                         1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             1     0      1    4086
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _i2c_setDataCompleteCallback                         4     1      3    2478
                                              5 COMMON     4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (12) _setCallBack                                         5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (11) _i2c_setBuffer                                       4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (10) _i2c_restartWrite                                    1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_STOP                                    0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_stop                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART                                 0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_restart                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_sendACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                   _handler_clock_ms *
 ---------------------------------------------------------------------------------
 (9) _handler_clock_ms                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _handler_clock_hms *
 ---------------------------------------------------------------------------------
 (9) _handler_clock_hms                                    1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (9) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0      96
                   Absolute function *
                             _ISR_3s *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ISR_3s                                               1     1      0      96
                                              4 COMMON     1     1      0
                     _TMR0_StopTimer
               i1_PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (10) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT_ISR                                              0     0      0      96
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (9) _INT_CallBack                                         0     0      0      96
                   Absolute function *
        _INT_DefaultInterruptHandler *
                            _sw1_EXT *
 ---------------------------------------------------------------------------------
 (10) _sw1_EXT                                             1     1      0      96
                                              7 COMMON     1     1      0
               i1_PWM6_LoadDutyValue
                 i1_checkDebounceSW1
 ---------------------------------------------------------------------------------
 (11) i1_checkDebounceSW1                                  7     7      0       0
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (10) i1_PWM6_LoadDutyValue                                4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (10) _INT_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_read
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
   _DATAEE_WriteByte
     _cksum (ARG)
       _DATAEE_ReadByte
   _INT_SetInterruptHandler
   _LED_bin
   _PWM6_LoadDutyValue
     ___wmul (ARG)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _TMR1_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _cksum_w
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
   _config_routine
     _all_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _checkDebounceSW1
     _checkDebounceSW2
     _mod1_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _mod2_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _mod3_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _mod4_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _mode_select_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _selectSubfield
       _all_LED
         _PWM6_LoadDutyValue
           ___wmul (ARG)
       _checkDebounceSW1
       _checkDebounceSW2
       _getSubfieldInfo
         ___awdiv
         ___awmod
         ___bmul
         _increment_subfield
           _PWM6_LoadDutyValue
             ___wmul (ARG)
           _checkDebounceSW1
           _checkDebounceSW2
           _limitHoursUnits (ARG)
             ___awdiv
           _limitTempThreshUnits (ARG)
             ___awdiv
           _representLed (ARG)
             _PWM6_LoadDutyValue
               ___wmul (ARG)
             ___wmul
         _limitHoursUnits
           ___awdiv
         _limitTempThreshUnits
           ___awdiv
       _mode_LED
         _mod1_LED
           _PWM6_LoadDutyValue
             ___wmul (ARG)
         _mod2_LED
           _PWM6_LoadDutyValue
             ___wmul (ARG)
         _mod3_LED
           _PWM6_LoadDutyValue
             ___wmul (ARG)
         _mod4_LED
           _PWM6_LoadDutyValue
             ___wmul (ARG)
   _i2c1_driver_open
   _push_ring
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
   _read_ring
     _DATAEE_ReadByte
     ___bmul
   _recoverData
     _DATAEE_ReadByte
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
     _cksum_w
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
       _cksum
         _DATAEE_ReadByte
     _reset_recv
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
   _ring_buffer
   _save_recovery_params
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum_w
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
       _cksum
         _DATAEE_ReadByte
   _tsttc
     _ReadI2C
     _WriteI2C

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _INT_ISR *
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _sw1_EXT *
         i1_PWM6_LoadDutyValue
         i1_checkDebounceSW1
   _TMR0_ISR *
     Absolute function(Fake) *
     _ISR_3s *
       _TMR0_StopTimer
       i1_PWM6_LoadDutyValue
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _handler_clock_hms *
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _handler_clock_ms *
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c1_driver_sendNACK
       _i2c1_driver_getRXData *
       _i2c1_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c1_driver_restart
     _do_I2C_SEND_STOP *
       _i2c1_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c1_driver_TXData *
       _i2c1_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _mssp1_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      4A       5       92.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      5      45       7       86.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      9D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      9D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 29 13:39:21 2019

                            returnReset@p 0079          __end_of_TMR2_SetInterruptHandler 0834  
                          ___bmul@product 0025                               __CFG_CP$OFF 0000  
                            ___awdiv@sign 0029                      __size_of_do_I2C_IDLE 0005  
                           _subfield_info 00BD                       _do_I2C_SEND_RESTART 1794  
                    __size_of_do_I2C_RCEN 0007                       ___wmul@multiplicand 0025  
             __size_of_PWM6_LoadDutyValue 0019                    increment_subfield@exit 0035  
                             __CFG_LVP$ON 0000                                       l341 080F  
                                     l442 0818                                       l506 087F  
                                     l347 08B4                                       l445 17ED  
                                     l439 0A96                                       l760 17E5  
                                     l763 0806                                       l675 0DD1  
                                     l757 0997                                       l861 096B  
                                     l917 0AD1                                       l766 17FF  
                                     l864 1773                                       l961 08A6  
                                     l883 0821                                       l947 082A  
                                     l964 0A10                                       _PR2 028D  
                            __CFG_CPD$OFF 0000                                       i1l9 1756  
                         _timer1ReloadVal 0068                                       _seg 005A  
           i2c_setDataCompleteCallback@cb 0075                   __size_of_PMD_Initialize 0008  
                            ___awmod@sign 0029                           _TMR2_Initialize 09C7  
                   __size_of_do_I2C_RESET 0008                              __CFG_BORV$LO 0000  
                                     wreg 0009                   increment_subfield@limit 0036  
                            __CFG_ZCD$OFF 0000                           __end_of_LED_bin 0A45  
                                    l1011 08E1                                      l1005 0B69  
                                    l1007 0B6D                                      l1008 0B74  
                 ??_rd2RegCompleteHandler 007A                                      l1046 09DE  
                                    l2022 0FAB                                      l1303 01E2  
                                    l2009 0680                                      l1316 05F6  
                                    l1500 0441                                      l1341 022E  
                                    l1421 0C13                                      l1501 0443  
                                    l1416 0E68                                      l1328 0620  
                                    l1424 0C9B                                      l1512 047C  
                                    l1089 0833                                      l1409 078F  
                                    l1337 0F03                                      l1513 047E  
                                    l1530 04D0                                      l1290 00CD  
                                    l1611 0D88                                      l1531 04D2  
                                    l1291 0217                                      l1356 0388  
                                    l1700 0BE9                                      l1604 059E  
                                    l1524 04BA                                      l1460 0389  
                                    l1373 0A5F                                      l1621 0901  
                                    l1525 04BD                                      l1542 0AE8  
                                    l1550 0735                                      l1534 04D8  
                                    l1631 0AB2                                      l1543 0AEA  
                                    l1463 0398                                      l1287 00A1  
                                    l1392 0A2A                                      l1704 0EB5  
                                    l1368 0A7A                                      l1464 039A  
                                    l1553 06FD                                      l1386 0FFF  
                                    l1618 0D41                                      l1626 0B50  
                                    l1546 0AF0                                      l1562 071F  
                                    l1555 0702                                      l1475 03D3  
                                    l1476 03D5                                      l1661 0A44  
                                    l1493 0427                                      l1646 0681  
                                    l1494 0429                                      l1567 0733  
                                    l1487 0411                                      l1496 042D  
                                    l1488 0414                                      l1649 068E  
                                    l1690 0B10                                      l1658 06DB  
                                    l1666 0851                                      l1674 085C  
                                    l1669 0846                      _ADCC_StartConversion 17DE  
                                    l1679 0867                                      l7000 0968  
                                    l1856 0B1C                                      l7002 17E0  
                                    l1882 07FF                                      l1858 0B30  
                                    l7012 17F7                                      l7004 17E3  
                                    l7020 0AF9                                      l7100 0AA4  
                                    l7006 17E4                                      l7030 0B0F  
                                    l7022 0AFB                                      l7102 0AA9  
                                    l7008 0800                                      l7200 0A22  
                                    l7024 0B03                                      l7040 0ECC  
                                    l7032 0EB6                                      l7016 08F2  
                                    l7026 0B05                                      l7018 0AF1  
                                    l7050 0EE6                                      l7042 0ED1  
                                    l7034 0EBB                                      l7210 03AD  
                                    l7204 0A2B                                      l7028 0B0D  
                                    l6500 0787                                      l7044 0ED6  
                                    l7052 0EE9                                      l7036 0EBF  
                                    l7140 0874                                      l7220 03E8  
                                    l7212 03B1                                      l6502 078C  
                                    l6510 0E48                                      l7054 0EED  
                                    l7046 0EDE                                      l7038 0EC7  
                                    l7142 0879                                      l7310 0D7E  
                                    l7302 0D52                                      l7070 0707  
                                    l7230 0432                                      l7222 03EC  
                                    l7214 03C0                                      l7206 0389  
                                    l7160 0A87                                      l7152 0A7B  
                                    l6600 0849                                      l7048 0EE3  
                                    l7320 05AA                                      l7144 087A  
                                    l7312 0D82                                      l7304 0D5B  
                                    l7080 0724                                      l7064 06E6  
                                    l7056 06DE                                      l7240 046D  
                                    l7232 0447                                      l7224 03FB  
                                    l7216 03C4                                      l7208 039E  
                                    l7162 0A8A                                      l7154 0A7E  
                                    l7170 1771                                      l6514 0E4F  
                                    l6506 0E1C                                      l6530 0E76  
                                    l6602 084F                                      l6610 0854  
                                    l7330 05C8                                      l7322 05B2  
                                    l7314 059F                                      l7146 087C  
                                    l7306 0D5F                                      l7090 0AEF  
                                    l7066 06F0                                      l7058 06E1  
                                    l7250 04AB                                      l7242 0482  
                                    l7234 0456                                      l7226 0402  
                                    l7218 03D9                                      l7164 0A8D  
                                    l7156 0A81                                      l6700 0F5A  
                                    l6516 0E67                                      l6508 0E2B  
                                    l6532 0E85                                      l6620 0FAE  
                                    l6540 0623                                      l6604 083D  
                                    l6612 085A                                      l7340 05DE  
                                    l7332 05CE                                      l7324 05B8  
                                    l7316 05A2                                      l7308 0D76  
                                    l7260 0D05                                      l7180 0553  
                                    l7172 04D9                                      l7068 06FB  
                                    l7076 0709                                      l7252 04C1  
                                    l7244 0491                                      l7236 045A  
                                    l7228 0418                                      l7500 00AA  
                                    l7166 0A90                                      l7158 0A84  
                                    l6710 0F6E                                      l6702 0F5E  
                                    l6470 0B18                                      l6534 0EA2  
                                    l6526 0E6B                                      l6630 0FC1  
                                    l6622 0FAF                                      l6550 0637  
                                    l6542 0627                                      l6606 083F  
                                    l6614 085D                                      l7350 0608  
                                    l7334 05D2                                      l7326 05BB  
                                    l7318 05A6                                      l7270 0D2A  
                                    l7262 0D0B                                      l7094 0A97  
                                    l7190 058F                                      l7182 055F  
                                    l7174 04E6                                      l7086 0AD2  
                                    l7078 0714                                      l7254 04D6  
                                    l7246 0495                                      l7238 0469  
                                    l7510 00B4                                      l7502 00AB  
                                    l7168 0A93                                      l6464 09F8  
                                    l6720 0F84                                      l6712 0F74  
                                    l6704 0F63                                      l6480 0736  
                                    l6472 0B21                                      l6536 0EAC  
                                    l6640 0FD9                                      l6632 0FC3  
                                    l6624 0FB3                                      l6560 064B  
                                    l6552 063B                                      l6544 062C  
                                    l6608 0852                                      l6616 085F  
                                    l6800 0BD3                                      l7352 060B  
                                    l7336 05D6                                      l7344 05E3  
                                    l7328 05C0                                      l7264 0D10  
                                    l7272 0D35                                      l7192 059B  
                                    l7184 056B                                      l7176 04F8  
                                    l7280 0C6F                                      l7088 0ADD  
                                    l7248 04A4                                      l7600 01D9  
                                    l7520 00BD                                      l7512 00B7  
                                    l7504 00AD                                      l7194 0A11  
                                    l6730 0FA2                                      l6722 0F8E  
                                    l6714 0F77                                      l6706 0F65  
                                    l6482 0738                                      l6474 0B26  
                                    l6466 0B11                                      l6650 0FF1  
                                    l6642 0FDF                                      l6634 0FC7  
                                    l6626 0FB9                                      l6570 0667  
                                    l6562 064F                                      l6554 063D  
                                    l6546 062E                                      l6538 0621  
                                    l6810 0230                                      l6618 0865  
                                    l7346 05FB                                      l7354 060E  
                                    l7338 05DA                                      l7266 0D1D  
                                    l7258 0D05                                      l7098 0A9C  
                                    l7186 0577                                      l7178 0550  
                                    l7290 0C93                                      l7282 0C71  
                                    l7370 0BF2                                      l7610 01ED  
                                    l7602 01DF                                      l7530 00CC  
                                    l7522 00C0                                      l7514 00B9  
                                    l7506 00AF                                      l7196 0A16  
                                    l6900 0D9C                                      l6740 0822  
                                    l6732 0FA7                                      l6724 0F92  
                                    l6716 0F7C                                      l6708 0F69  
                                    l6484 0747                                      l6492 076D  
                                    l6476 0B2C                                      l6468 0B14  
                                    l6652 0FF4                                      l6644 0FE0  
                                    l6636 0FCC                                      l6628 0FBB  
                                    l6572 066C                                      l6564 0653  
                                    l6556 0643                                      l6548 0632  
                                    l6660 0A45                                      l6812 027E  
                                    l7356 0612                                      l7348 0603  
                                    l7292 0D44                                      l7276 0D37  
                                    l7268 0D23                                      l7188 0583  
                                    l7284 0C80                                      l7372 0BF6  
                                    l7364 0BEA                                      l7620 0219  
                                    l7612 01EF                                      l7604 01E3  
                                    l7540 00D9                                      l7532 00CE  
                                    l7524 00C7                                      l7516 00BA  
                                    l7508 00B2                                      l7198 0A1A  
                                    l6910 0DB0                                      l6902 0D9E  
                                    l6726 0F97                                      l6718 0F80  
                                    l6494 0785                                      l6486 0764  
                                    l6638 0FD4                                      l6646 0FE5  
                                    l6654 0FF9                                      l6566 0662  
                                    l6558 0646                                      l6574 0672  
                                    l6662 0A5C                                      l6830 0300  
                                    l6814 028E                                      l6822 02C0  
                                    l7358 0618                                      l6750 0B62  
                                    l6742 0B51                                      l7294 0D4C  
                                    l6590 08DD                                      l6582 08D3  
                                    l7286 0C88                                      l7374 0BF8  
                                    l7366 0BEC                                      l7622 021F  
                                    l7614 01FB                                      l7606 01E8  
                                    l7550 00ED                                      l7542 00E1  
                                    l7534 00CF                                      l7526 00C9  
                                    l7518 00BC                                      l6736 0807  
                                    l6920 0DBA                                      l6912 0DB2  
                                    l6904 0DA0                                      l6728 0F9D  
                                    l6488 0769                                      l6656 0FFE  
                                    l6648 0FE9                                      l6576 0677  
                                    l6568 0666                                      l6680 0A79  
                                    l6672 0A60                                      l6840 0356  
                                    l6832 0327                                      l6816 02A0  
                                    l6824 02D3                                      l6808 022D  
                                    l6760 0B6E                                      l6752 0B63  
                                    l6744 0B59                                      l7296 0D51  
                                    l6592 08DE                                      l6584 08D7  
                                    l7288 0C8A                                      l7376 0C04  
                                    l7368 0BEE                                      l7624 0221  
                                    l7608 01EA                                      l7616 0207  
                                    l7560 0115                                      l7552 00F8  
                                    l7544 00E3                                      l7536 00D1  
                                    l7528 00CB                                      l6930 0DC5  
                                    l6922 0DBC                                      l6914 0DB4  
                                    l6906 0DA2                                      l6738 0819  
                                    l6762 082B                                      l6770 069F  
                                    l6690 07F5                                      l6578 067C  
                                    l6674 0A77                                      l6842 0364  
                                    l6834 0337                                      l6826 02ED  
                                    l6818 02B0                                      l6754 0B64  
                                    l6746 0B5D                                      l6594 08DF  
                                    l6586 08DB                                      l7378 0C10  
                                    l7626 0227                                      l7618 0210  
                                    l7570 0181                                      l7562 0116  
                                    l7554 0106                                      l7546 00E5  
                                    l7538 00D7                                      l7490 00A1  
                                    l6940 0810                                      l6932 0DC7  
                                    l6924 0DBE                                      l6916 0DB6  
                                    l6908 0DAE                                      l6780 06C5  
                                    l6772 06AF                                      l6764 0683  
                                    l6692 07F7                                      l6684 07EC  
                                    l6668 0A5E                                      l6828 02F0  
                                    l6756 0B66                                      l6748 0B61  
                                    l6588 08DC                                      l6860 0B31  
                                    l7580 019D                                      l7572 0184  
                                    l7564 012E                                      l7556 010D  
                                    l7548 00E7                                      l7484 007E  
                                    l6942 0813                                      l6934 0DCA  
                                    l6926 0DC0                                      l6918 0DB8  
                                    l6950 08A1                                      l6782 06CE  
                                    l6774 06B8                                      l6766 068C  
                                    l6694 07FE                                      l6686 07ED  
                                    l6838 0349                                      l6846 0374  
                                    l6598 0847                                      l6790 0BC3  
                                    l6758 0B68                                      l6870 0B42  
                                    l6862 0B33                                      l7590 01C3  
                                    l7582 01A7                                      l7574 0187  
                                    l7566 014C                                      l7558 010E  
                                    l7494 00A6                                      l7486 00A1  
                                    l6952 0982                                      l6880 08AA  
                                    l6944 0814                                      l6936 0DCC  
                                    l6928 0DC2                                      l6960 09CC  
                                    l6784 06D0                                      l6776 06BA  
                                    l6768 0697                                      l6688 07F1  
                                    l6792 0BC7                                      l6872 0B46  
                                    l7592 01C8                                      l7584 01AD  
                                    l7576 0195                                      l7568 0175  
                                    l7496 00A7                                      l7488 00A1  
                                    l6954 0994                                      l6882 08B2  
                                    l6946 0817                                      l6938 0DCE  
                                    l6890 0D91                                      l6970 09DB  
                                    l6962 09CD                                      l6786 06D9  
                                    l6778 06C3                                      l6698 0F58  
                                    l6794 0BCB                                      l6874 0B4F  
                                    l7594 01CA                                      l7586 01B3  
                                    l7578 019B                                      l7498 00A8  
                                    l6956 0996                                      l6892 0D93  
                                    l6884 17E6                                      l6948 089A  
                                    l6980 0ABC                                      l6972 0AB3  
                                    l6964 09D0                                      l6796 0BCF  
                                    l6788 0BC2                                      l6868 0B37  
                                    l7596 01CD                                      l7588 01B8  
                                    l6878 08A7                                      l6894 0D95  
                                    l6886 0D89                                      l6990 0957  
                                    l6982 0AC3                                      l6974 0AB6  
                                    l6966 09D2                                      l6958 09C7  
                                    l7870 034E                                      l7598 01D3  
                                    l6896 0D97                                      l6888 0D8F  
                                    l6992 095C                                      l6984 0AC5  
                                    l6976 0AB8                                      l6968 09D3  
                                    l7872 037A                                      l7864 05E8  
                                    l6898 0D99                                      l6994 095D  
                                    l6986 0AC6                                      l6978 0ABA  
                                    l7866 0BDB                                      l6996 095F  
                                    l6988 0ACE                                      l7868 02C5  
                                    l6998 0960                                      _LATA 0016  
                                    _LATB 0017                           __end_of_INT_ISR 17B3  
                                    _LATC 0018                                      u4000 0FDF  
                                    _LATD 0019                                      u4001 0FDE  
                                    _LATE 001A                                      u4010 0FE9  
                                    u4011 0FE8                                      u4100 0F74  
                                    u4020 0FF1                                      u4101 0F73  
                                    u4021 0FF0                                      u4030 0FFE  
                                    u4031 0FFD                                      u4120 0F84  
                                    u4040 0A5C                                      u4200 0EC7  
                                    u5000 0195                                      u4121 0F83  
                                    u4041 0A5B                                      u4201 0EC6  
                 __size_of_selectSubfield 004E                                      u5001 0194  
                                    u4130 0F8E                                      u4050 0A77  
                                    u4210 0ED6                                      u5010 019B  
                                    _T2PR 028D                                      u4131 0F8D  
                                    u4115 0F78                                      u4051 0A76  
                                    u4211 0ED5                                      u5011 019A  
                                    u4060 07F1                                      u4220 0EDE  
                                    u4300 071F                                      u5020 01AD  
                                    u4061 07F0                                      u4221 0EDD  
                                    u4301 071E                                      u5021 01AC  
                                    u5005 0191                                      u4150 0F9D  
                                    u4070 07FE                                      u4230 0F03  
                                    u4310 0724                                      u5030 01B3  
                                    u4151 0F9C                                      u4135 0F8A  
                                    u4071 07FD                                      u4231 0F02  
                                    u4311 0723                                      u5031 01B2  
                                    u4160 0FA2                                      u4080 0F5E  
                                    u4400 04F8                                      u4320 0733  
                                    u4240 06E5                                      u5040 01C8  
                                    u4161 0FA1                                      u4145 0F93  
                                    u4081 0F5D                                      u4401 04F7  
                                    u4321 0732                                      u4241 06E4  
                                    u5041 01C7                                      u4410 0A22  
                                    u4090 0F69                                      u4170 0B6D  
                                    u4330 0ADD                                      u4250 06F0  
                                    u5050 01D9                                      u4411 0A21  
                                    u4091 0F68                                      u4235 0EFF  
                                    u4171 0B6C                                      u4331 0ADC  
                                    u4251 06EF                                      u5107 020B  
                                    u5051 01D8                                      u4180 0B4F  
                                    u4340 0AE8                                      u4260 06FB  
                                    u4500 0411                                      u4420 0398  
                                    u5060 01E8                                      u5117 060F  
                                    u4181 0B4E                                      u4341 0AE7  
                                    u4261 06FA                                      u4501 0410  
                                    u4421 0397                                      u5061 01E7  
                                    u4190 0EBF                                      u4350 0AEF  
                                    u4270 0702                                      u4510 0418  
                                    u4430 039E                                      u5070 0217  
                                    u5207 0AFF                                      u5127 0EEA  
                                    u4191 0EBE                                      u4351 0AEE  
                                    u4271 0701                                      u4511 0417  
                                    u4431 039D                                      u5071 0216  
                                    u3800 0785                                      u4360 0AB2  
                                    u4280 0707                                      u4600 0482  
                                    u4520 0427                                      u4440 03AD  
                                    u5080 0227                                      u5217 0B09  
                                    u5137 0687                                      u3801 0784  
                                    u4361 0AB1                                      u4281 0706  
                                    u4601 0481                                      u4521 0426  
                                    u4441 03AC                                      u5081 0226  
                                    u3810 0E2B                                      u4290 0714  
                                    u4610 0491                                      u4530 042D  
                                    u4450 03C0                                      u5227 0A17  
                                    u5147 0692                                      u3811 0E2A  
                                    u4291 0713                                      u4611 0490  
                                    u4531 042C                                      u4451 03BF  
                                    u3820 0E48                                      u3740 0B18  
                                    u4380 0879                                      u4700 0D4C  
                                    u4620 04A4                                      u4540 0432  
                                    u4460 03D3                                      _PMD0 0796  
                                    u5157 06A3                                      u3805 0781  
                                    u3821 0E47                                      u3741 0B17  
                                    u4381 0878                                      u4701 0D4B  
                                    u4621 04A3                                      u4541 0431  
                                    u4461 03D2                                      _PMD1 0797  
                                    u3830 0E67                                      u3910 0653  
                                    u4710 0D5B                                      u4390 04E6  
                                    u4630 04BA                                      u4550 0441  
                                    u4470 03D9                                      _PMD2 0798  
                                    u3735 0A09                                      u5167 06B3  
                                    u3831 0E66                                      u3911 0652  
                                    u4711 0D5A                                      u4391 04E5  
                                    u4631 04B9                                      u4551 0440  
                                    u4471 03D8                                      _PMD3 0799  
                                    u3840 0E75                                      u4720 0D88  
                                    u4640 04C1                                      u4560 0447  
                                    u4480 03E8                                      _PMD4 079A  
                                    u5177 06BE                                      u3825 0E44  
                                    u3841 0E74                                      u3905 0647  
                                    u4721 0D87                                      u4641 04C0  
                                    u4561 0446                                      u4481 03E7  
                                    _PMD5 079B                                      u3770 0B2C  
                                    u3930 0662                                      u4730 05B2  
                                    u4650 04D0                                      u4570 0456  
                                    u4490 03FB                                      u5187 06C9  
                                    u3835 0E63                                      u3771 0B2B  
                                    u3755 0B1D                                      u3931 0661  
                                    u4731 05B1                                      u4651 04CF  
                                    u4571 0455                                      u4491 03FA  
                                    u3780 0747                                      u4740 05B8  
                                    u4660 04D6                                      u4580 0469  
                                    u5197 06D4                                      u3781 0746  
                                    u3765 0B22                                      u3925 0654  
                                    u4741 05B7                                      u4661 04D5  
                                    u4581 0468                                      u3790 0764  
                                    u3950 0672                                      u3870 0627  
                                    u4750 05C0                                      u4670 0D0B  
                                    u4590 047C                                      u3791 0763  
                                    u3855 0E79                                      u3951 0671  
                                    u3935 065E                                      u3871 0626  
                                    u4751 05BF                                      u4671 0D0A  
                                    u4591 047B                                      u3960 0677  
                                    u3880 0632                                      u4760 05C8  
                                    u4680 0D10                                      i1l73 0899  
                                    u3865 0E88                                      u3961 0676  
                                    u3945 0668                                      u3881 0631  
                                    u4761 05C7                                      u4681 0D0F  
                                    u3970 0FC1                                      u3890 0643  
                                    u4770 05FB                                      u4690 0D23  
                                    u3795 0760                                      u3971 0FC0  
                                    u3891 0642                                      u4771 05FA  
                                    u4691 0D22                                      u3980 0FCC  
                                    u4780 0603                                      u3981 0FCB  
                                    u4781 0602                                      u3990 0FD4  
                                    u4790 0618                                      u3991 0FD3  
                                    u4791 0617                                      u4960 00E1  
                                    u4961 00E0                                      u4970 00ED  
                                    u4971 00EC                                      u4980 012E  
                                    u4981 012D                                      u4990 014C  
                    ?_do_I2C_SEND_RESTART 0070                                      u4991 014B  
                                    u4995 0148                                      _TMR2 028C  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                                      _WPUD 0F5A  
                                    _WPUE 0F65                   ??_wr2RegCompleteHandler 007A  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
       __size_of_do_I2C_SEND_RESTART_READ 0005                                      _alaf 0051  
                                    _clkh 005C                 ?_do_I2C_SEND_RESTART_READ 0070  
                                    _clkm 005B                                      _main 007E  
                                    _tala 0065                 __size_of_do_I2C_SEND_STOP 0005  
                  __size_of_do_I2C_DO_ACK 0005                                      _nreg 0067  
                         _TMR0_StartTimer 1771                increment_subfield@init_val 0032  
                                    _temp 0052                                      _pmon 0066  
                      _increment_subfield 0FAC                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                           __CFG_BOREN$ON 0000       __end_of_INT_DefaultInterruptHandler 1751  
             _INT_DefaultInterruptHandler 1750                     ?_do_I2C_SEND_ADR_READ 0070  
         ??_i2c1_driver_clearBusCollision 0070                                      start 005B  
                        __end_of_ADC_read 0A2B           __end_of_INT_SetInterruptHandler 0810  
                           _i2c_setBuffer 08E2                ??_TMR1_SetInterruptHandler 0025  
                           __CFG_CSWEN$ON 0000                         ___bmul@multiplier 0026  
                           __CFG_MCLRE$ON 0000                  increment_subfield@_value 0037  
                         __end_of_i2c_ISR 0C6D                           __end_of_ReadI2C 0AF1  
                     ?_increment_subfield 0032          __size_of_rdBlkRegCompleteHandler 0018  
                ??_do_I2C_DO_NACK_RESTART 0070                 config_routine@select_mode 0046  
               __size_of_DATAEE_WriteByte 0024                   __end_of_TMR0_Initialize 096C  
                            _do_I2C_RESET 17CE            ??_TMR0_DefaultInterruptHandler 0070  
          __size_of_OSCILLATOR_Initialize 0009             __end_of_OSCILLATOR_Initialize 0819  
                                   _ADACQ 009D                                     _ADCAP 009B  
                                   _ADACT 0099                  __end_of_i2c1_driver_open 0880  
                                   ?_main 0070                                     _ADCLK 0098  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                           __end_of___awdiv 0681  
                __end_of_i2c1_driver_stop 1762                                     _ADPRE 009C  
                           __CFG_WDTE$OFF 0000                           __end_of___awmod 0FAC  
                                   _ADRPT 010D                                     _T1CLK 0211  
                         ___awdiv@divisor 0023                                     _T1CON 020E  
                                   _T2CON 028E                                     _T2HLT 028F  
              __end_of_i2c1_driver_TXData 1785                            __CFG_DEBUG$OFF 0000  
                                   i1l103 08F1                                     i1l200 0CCE  
                                   i1l210 0C6C                                     i1l131 178E  
                                   i1l140 179D                                     _T2TMR 028C  
                                   i1l125 17D5                                     i1l213 177F  
                                   i1l134 1793                                     i1l303 09C6  
                                   i1l143 17F6                                     i1l224 0BBF  
                                   i1l216 1758                                     i1l128 1789  
                                   i1l152 17A2                                     i1l137 1798  
                                   i1l146 17DD                                     _T2RST 0291  
                                   i1l219 0003                                     i1l243 0934  
                                   i1l155 17A7                                     i1l164 0C3F  
                                   i1l172 0F57                                     i1l149 17C5  
                                   i1l334 17B2                                     i1l158 17AC  
                                   i1l344 1750                                     i1l520 175E  
                                   i1l264 0945                                     i1l169 0F3B  
                                   i1l185 0DEF                                     i1l338 088C  
                                   i1l514 1754                                     i1l186 0E1B  
                                   i1l523 1761                                     i1l291 0923  
                                   i1l532 1767                                     i1l380 001F  
                                   i1l541 1784                                     i1l550 177B  
                                   i1l526 17CD                                     i1l279 0956  
                                   i1l383 0032                                     i1l392 0059  
                                   i1l529 1764                                     i1l385 0041  
                                   i1l386 0059                                     i1l378 0013  
                                   i1l547 1777                                     i1l491 176A  
                                   i1l387 004D                                     i1l488 176D  
                                   i1l584 1770                                     i1l931 0912  
                                   i1l950 1752                                     i1l880 08C3  
                                   i1l944 09AE                                     i1l867 175B  
                                   i1l964 0981                                     i1l886 1751  
                         ___awdiv@counter 0028                                     _OSCEN 0891  
                         __end_of_all_LED 06DC                                     _TMR0H 001D  
                                   _TMR1H 020D                                     _TMR0L 001C  
                                   _TMR1L 020C                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                                   _WPUC3 7A7B                                     _WPUC4 7A7C  
       __size_of_TMR0_SetInterruptHandler 0009                           _PWM6_Initialize 089A  
               ?_TMR0_SetInterruptHandler 0023                   ??_ADCC_IsConversionDone 0023  
                        __end_of_TMR0_ISR 08C4                          __end_of_TMR1_ISR 09AF  
                        __end_of_TMR2_ISR 08D3                           __end_of_sw1_EXT 0B9A  
                         __end_of_cksum_w 0902                      ??_increment_subfield 0034  
                         _DATAEE_ReadByte 08D3                                     _alarm 0053  
                                   _clkms 007D                __end_of_i2c1_driver_isNACK 17CE  
                                   _cksum 0B31                     ?_ADCC_StartConversion 0070  
                         representLed@aux 0031                           representLed@val 0030  
              ?_do_I2C_SEND_RESTART_WRITE 0070                                     _value 00CD  
                       ?_checkDebounceSW1 0070                         ?_checkDebounceSW2 0070  
                   ??_do_I2C_SEND_RESTART 0070                                     _tsttc 0389  
                 __end_of_TMR1_Initialize 0AD2                                     pclath 000A  
                 __size_of_mssp1_clearIRQ 0003                        ??_checkDebounceSW1 0023  
                      ??_checkDebounceSW2 0023                    ?_do_I2C_SEND_ADR_WRITE 0070  
                                   status 0003                                     wtemp0 007E  
                         _TMR1_WriteTimer 0902                            ?_i2c_setBuffer 0070  
                            ?_setCallBack 0070                      _save_recovery_params 0BEA  
                       ??_getSubfieldInfo 0038                             _fsmStateTable 1000  
                         __initialization 005D                                _i2c_status 00A0  
                            __end_of_main 022D                         ??_limitHoursUnits 002C  
                 __end_of_TMR2_Initialize 09DF               ?_INTERRUPT_InterruptManager 0070  
                            ?_recoverData 0070                             setCallBack@cb 0070  
                           _do_I2C_DO_ACK 179E                  _TMR2_SetInterruptHandler 082B  
                                  ??_main 0048                         ?_i2c_restartWrite 0079  
           __size_of_i2c1_driver_sendNACK 0004           getSubfieldInfo@temp_thresh_tens 003F  
                               ??_LED_bin 0025                        ??_i2c_restartWrite 007A  
               __size_of_handler_clock_ms 000C             __size_of_i2c1_driver_resetBus 0001  
                               ??_INT_ISR 0078                   ?_do_I2C_DO_ADDRESS_NACK 0070  
                          _convertedValue 00C3                                    _ADACCH 0091  
                                  _ADACCL 0090                   __end_of_TMR0_StartTimer 1774  
             __size_ofi1_checkDebounceSW1 005A                                    _ADCON0 0093  
                                  _ADCON1 0094                                    _ADCON2 0095  
                                  _ADCON3 0096                                    ?_cksum 0070  
                                  _ADERRH 0117                                    _ADERRL 0116  
            __end_of_limitTempThreshUnits 0A7B                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    _ADRESH 008D  
                                  _ADRESL 008C                                    _ADSTAT 0097  
                                  _ADUTHH 0111                          ___awdiv@dividend 0025  
                                  _ADUTHL 0110                          __end_of_WriteI2C 0736  
                                  _ANSELA 0F38                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                                    _ANSELD 0F59  
                                  _ANSELE 0F64                        __CFG_RSTOSC$HFINT1 0000  
                                  _T0CON0 001E                                    _T0CON1 001F  
                                  _T1GATE 0210                                    _T1GCON 020F  
                                  ?_tsttc 0070                                    _RA6PPS 0F16  
                                  _RC3PPS 0F23                   TMR1_WriteTimer@timerVal 0070  
                                  _RC4PPS 0F24                                    i1l1400 0D02  
                                  i1l1404 0873                                    i1l1092 1753  
                                  i1l1086 08D2                                    i1l1409 07E9  
                                  _ODCONA 0F3A                                    _ODCONB 0F45  
                                  i1l1275 0B99                                    _ODCONC 0F50  
                                  _ODCOND 0F5B                                    _ODCONE 0F66  
                                  i1l1278 09F2                                    i1l1279 09F7  
                                  i1l5000 0B95                                    i1l5200 0C23  
                                  i1l5140 17D1                                    i1l5220 0F14  
                                  i1l5212 0F0C                                    i1l5116 176B  
                                  i1l5300 176E                                    i1l5302 0880  
                                  i1l5142 17D3                                    i1l5150 1787  
                                  i1l5230 0F49                                    i1l5304 0887  
                                  i1l5144 17D4                                    i1l5152 1788  
                                  i1l5160 17F5                                    i1l5232 0F54  
                                  i1l5216 0F10                                    i1l5208 0F04  
                                  i1l5138 17CE                                    i1l5234 0F56  
                                  i1l5226 0F18                                    i1l5250 0DED  
                                  i1l5242 0DD2                                    i1l5148 1785  
                                  i1l5156 17EE                                    i1l5164 17D6  
                                  i1l5172 17BF                                    i1l5180 179E  
                                  i1l5228 0F3D                                    i1l5260 0DF5  
                                  i1l5244 0DDC                                    i1l6060 001B  
                                  i1l6052 0006                                    i1l5510 0CE0  
                                  i1l5158 17F0                                    i1l5166 17D8  
                                  i1l5174 17C1                                    i1l5182 17A1  
                                  i1l5190 0C1B                                    i1l5246 0DE0  
                                  i1l6070 003A                                    i1l6062 0023  
                                  i1l6054 000B                                    i1l5520 0CF7  
                                  i1l5512 0CE4                                    i1l4544 0B9B  
                                  i1l5280 0CA3                                    i1l5168 17DC  
                                  i1l5176 17C4                                    i1l5256 0DF1  
                                  i1l5248 0DEA                                    i1l6072 0045  
                                  i1l6064 0027                                    i1l6056 000F  
                                  i1l5450 090A                                    i1l5522 0CFD  
                                  i1l5514 0CE8                                    i1l5506 0CCF  
                                  i1l5530 0872                                    i1l4546 0BA1  
                                  i1l5282 0CA6                                    i1l5274 0C9C  
                                  i1l5194 0C1F                                    i1l5186 0C14  
                                  i1l5266 0DF9                                    i1l6074 0049  
                                  i1l6066 002B                                    i1l6058 0017  
                                  i1l4820 096C                                    i1l5460 09E6  
                                  i1l5452 090C                                    i1l5444 0902  
                                  i1l5524 0D01                                    i1l5516 0CEE  
                                  i1l5508 0CD5                                    i1l4660 175C  
                                  i1l4548 0BB2                                    i1l4652 088D  
                                  i1l5276 0C9F                                    i1l5292 0CAC  
                                  i1l5188 0C16                                    i1l6076 0051  
                                  i1l6068 0036                                    i1l4830 07C3  
                                  i1l4822 0790                                    i1l5462 09ED  
                                  i1l5446 0907                                    i1l5454 090E  
                                  i1l5518 0CF6                                    i1l5526 0868  
                                  i1l4662 175F                                    i1l4654 08E3  
                                  i1l4902 17C6                                    i1l4910 1768  
                                  i1l5286 0CA8                                    i1l6078 0055  
                                  i1l4824 0792                                    i1l5464 09F5  
                                  i1l5456 0910                                    i1l5448 0908  
                                  i1l5528 086C                                    i1l4656 08E8  
                                  i1l4912 1757                                    i1l4920 0924  
                                  i1l4664 1778                                    i1l4842 07E1  
                                  i1l4826 07A1                                    i1l4834 07C7  
                                  i1l5458 09DF                                    i1l4658 08F0  
                                  i1l4922 092C                                    i1l4930 093D  
                                  i1l4906 1765                                    i1l5650 0C40  
                                  i1l4844 07E6                                    i1l4836 07DF  
                                  i1l4828 07BE                                    i1l4916 0002  
                                  i1l4924 0933                                    i1l4932 0944  
                                  i1l4940 0955                                    i1l4860 178A  
                                  i1l5652 0C43                                    i1l5660 177C  
                                  i1l5662 17AD                                    i1l5670 08BE  
                                  i1l4862 178D                                    i1l5654 0C48  
                                  i1l5664 17AF                                    i1l5672 0998  
                                  i1l5680 08C4                                    i1l4944 0913  
                                  i1l4848 1755                                    i1l4928 0935  
                                  i1l4936 0946                                    i1l4952 09AF  
                                  i1l4872 1794                                    i1l4880 179C  
                                  i1l5656 0C4F                                    i1l4962 1759  
                                  i1l5666 08B5                                    i1l5674 099A  
                                  i1l5682 08C6                                    i1l4946 091B  
                                  i1l4938 094E                                    i1l4954 09C5  
                                  i1l4866 178F                                    i1l4874 1797  
                                  i1l4890 17A3                                    i1l5658 0C55  
                                  i1l5668 08B7                                    i1l5676 09A2  
                                  i1l5684 08CD                                    i1l4948 0922  
                                  i1l4884 1781                                    i1l4868 1792  
                                  i1l4892 17A6                                    i1l4990 0B7D  
                                  i1l5678 09A9                                    i1l4886 1762  
                                  i1l4878 1799                                    i1l4992 0B83  
                                  i1l4888 1774                                    u215_20 08E8  
                                  i1l4896 17A8                                    u215_21 08E7  
                                  i1l4994 0B84                                    i1l4898 17AB  
                                  i1l4996 0B8A                                    i1l4988 0B75  
                                  i1l4998 0B90                                    _INLVLA 0F3C  
                                  _INLVLB 0F47                                    _INLVLC 0F52  
                                  _INLVLD 0F5D                                    _INLVLE 0F68  
                                  i1l7880 0CC0                                    i1l7874 0E0D  
                                  i1l7876 0F2D                                    i1l7878 0C37  
                                  u242_20 0B7D                                    u250_20 0F54  
                                  u242_21 0B7C                                    u250_21 0F53  
                                  u243_20 0B83                                    u251_20 0DEA  
                                  u243_21 0B82                                    u251_21 0DE9  
                                  u244_20 0B95                                    u252_20 0887  
                                  u260_20 0CD5                                    u244_21 0B94  
                                  u252_21 0886                                    u260_21 0CD4  
                                  u236_25 097B                                    u237_20 07A1  
                                  u253_20 0907                                    u261_20 0CDE  
                                  u237_21 07A0                                    u253_21 0906  
                                  u261_21 0CDB                                    u238_20 07BE  
                                  u254_20 09E6                                    u350_20 0023  
                                  u238_21 07BD                                    u254_21 09E5  
                                  u350_21 0022                                    u262_24 0CE0  
                                  u238_25 07BA                                    u239_20 07DF  
                                  u263_20 0CEE                                    u351_20 0027  
                                  u239_21 07DE                                    u263_21 0CED  
                                  u351_21 0026                                    u239_25 07DB  
                                  u264_20 0CFD                                    u352_20 002B  
                                  u264_21 0CFC                                    u352_21 002A  
                                  _INTPPS 0E90                                    u265_20 0872  
                                  u249_20 0F0B                                    u353_20 0036  
                                  u265_21 0871                                    u249_21 0F0A  
                                  u353_21 0035                                    u282_20 0C48  
                                  u354_20 003A                                    u346_20 000B  
                                  u282_21 0C47                                    u354_21 0039  
                                  u346_21 000A                                    u195_20 0BA1  
                                  u283_20 0C4F                                    u355_20 0045  
                                  u347_20 000F                                    u195_21 0BA0  
                                  u283_21 0C4E                                    u355_21 0044  
                                  u347_21 000E                                    u284_20 08BE  
                                  u356_20 0049                                    u348_20 0017  
                                  u284_21 08BD                                    u356_21 0048  
                                  u348_21 0016                                    u285_20 09A9  
                                  u357_20 0051                                    u349_20 001B  
                                  u285_21 09A8                                    u357_21 0050  
                                  u349_21 001A                                    u286_20 08CD  
                                  u358_20 0055                                    u286_21 08CC  
                                  u358_21 0054                                    _OSCFRQ 0893  
                                  _ISR_3s 09DF                    ??_do_I2C_SEND_ADR_READ 0070  
                rdBlkRegCompleteHandler@p 0079                                 ??_i2c_ISR 0020  
                               ??_ReadI2C 0023                ??_ADCC_GetConversionResult 0025  
                   ?_save_recovery_params 0070                              ?_ring_buffer 0023  
                          __CFG_PWRTE$OFF 0000              __end_ofi1_PWM6_LoadDutyValue 0982  
                   _i2c1_driver_getRXData 1765                          __end_of_mod1_LED 0852  
                        __end_of_mod2_LED 0847                          __end_of_mod3_LED 085D  
                        __end_of_mod4_LED 0868      __end_of_TMR1_DefaultInterruptHandler 1753  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 1752  
                            _CCPTMRS1bits 021F                                    ___bmul 07EA  
             __end_of_do_I2C_DO_NACK_STOP 17A8       __end_of_i2c_setDataCompleteCallback 089A  
             _i2c_setDataCompleteCallback 088D                                    ___wmul 0B11  
                               ??___awdiv 0027     __end_of_i2c1_driver_clearBusCollision 1771  
  __size_of_i2c1_driver_clearBusCollision 0003             _i2c1_driver_clearBusCollision 176E  
                          __CFG_STVREN$ON 0000                                 ??___awmod 0027  
         __size_of_do_I2C_DO_NACK_RESTART 0005                                    _last1m 0056  
                                  _last5s 0057                                 ??_all_LED 002D  
                        __end_of_mode_LED 0BEA                          ?_TMR0_Initialize 0070  
                 __end_of_PWM6_Initialize 08A7                          ___awdiv@quotient 002A  
                   ring_buffer@_ring_byte 0029                            ?_do_I2C_DO_ACK 0070  
                         ___awmod@divisor 0023                           ___awmod@counter 0028  
                                  cksum@i 0027                             ?_INT_CallBack 0070  
                 __end_of_DATAEE_ReadByte 08E2                                 ??_sw1_EXT 0077  
                               ??_cksum_w 002D                           _ADCC_Initialize 0982  
             __end_of_i2c1_driver_sendACK 1778                            _PMD_Initialize 17E6  
          __end_of_do_I2C_DO_ADDRESS_NACK 0C40               __end_of_i2c1_driver_restart 175F  
                            ?_returnReset 0079                                 ?_ADC_read 0025  
                  ??_ADCC_StartConversion 0023               __end_of_i2c1_driver_startRX 1765  
        __size_of_INT_SetInterruptHandler 0009  TMR2_SetInterruptHandler@InterruptHandler 0023  
TMR1_SetInterruptHandler@InterruptHandler 0023  TMR0_SetInterruptHandler@InterruptHandler 0023  
 INT_SetInterruptHandler@InterruptHandler 0023                   __end_of_TMR1_WriteTimer 0913  
                          _selectSubfield 0EB6                          ??_config_routine 0045  
                        ?_TMR1_Initialize 0070                         _SYSTEM_Initialize 0A7B  
                 __end_of__initialization 007A                           ??_i2c_setBuffer 0072  
                        _do_I2C_SEND_STOP 1799                        __size_of_do_I2C_RX 004A  
                      __size_of_do_I2C_TX 0054                        ?_SYSTEM_Initialize 0070  
                __size_of_mode_select_LED 0020                  __size_of_do_I2C_TX_EMPTY 0033  
                save_recovery_params@aux1 0030                       ___bmul@multiplicand 0023  
                 _rdBlkRegCompleteHandler 09AF                            __pcstackCOMMON 0070  
                            __pidataBANK0 0834                       ??_SYSTEM_Initialize 0025  
                               ?_TMR0_ISR 0070                                 ?_TMR1_ISR 0070  
                               ?_TMR2_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                           __end_of_cksum 0B51                          _DATAEE_WriteByte 0B51  
                      ring_buffer@clock_h 0023                        ring_buffer@clock_m 0024  
                      ring_buffer@clock_s 0025                             __end_of_tsttc 04D9  
                        ?_TMR2_Initialize 0070                     getSubfieldInfo@h_tens 003B  
                            LED_bin@value 0023                            ??_INT_CallBack 0078  
                  __end_of_PMD_Initialize 17EE                     getSubfieldInfo@m_tens 003D  
             __size_of_EXT_INT_Initialize 000E                                ??_ADC_read 0027  
                  __end_of_selectSubfield 0F04               ADCC_StartConversion@channel 0023  
                          setCallBack@idx 0074                                   ??_cksum 0025  
                        ?_TMR0_StartTimer 0070                    _do_I2C_DO_NACK_RESTART 17A8  
               __end_of_SYSTEM_Initialize 0A97                                   ??_tsttc 0025  
                          _mssp1_clearIRQ 176B                                __pbssBANK0 004D  
                              __pbssBANK1 00A0          getSubfieldInfo@temp_thresh_units 0040  
          __size_of_rd2RegCompleteHandler 0011                                   ?_ISR_3s 0070  
           __end_of_rd2RegCompleteHandler 0957                        read_ring@nreg_init 0028  
                  ??_save_recovery_params 002E            __size_of_wr2RegCompleteHandler 0011  
           __end_of_wr2RegCompleteHandler 0924                     _rd1RegCompleteHandler 0935  
                  ?_i2c1_driver_getRXData 0070                        __size_of_read_ring 003F  
                   _wr1RegCompleteHandler 0924              __size_of_i2c_busCollisionISR 0004  
                              __pmaintext 007E                             ??_do_I2C_IDLE 0070  
                    __size_of_setCallBack 0026                             ??_do_I2C_RCEN 0070  
                                 ?___bmul 0023          __end_of_TMR0_SetInterruptHandler 0822  
                 __size_of_TMR0_StopTimer 0003                                   ?___wmul 0023  
                              ??_TMR0_ISR 0075                                ??_TMR1_ISR 0072  
                         __CFG_PPS1WAY$ON 0000                                ??_TMR2_ISR 0071  
                 __end_of_ADCC_Initialize 0998                __end_of_PWM6_LoadDutyValue 0A11  
                         ??_do_I2C_DO_ACK 0070                                __pintentry 0004  
                    _limitTempThreshUnits 0A60                                   _ADFLTRH 0115  
                                 _ADFLTRL 0114                                   _ADPREVH 008F  
                                 _ADPREVL 008E                                 ?_WriteI2C 0070  
                        ?_PWM6_Initialize 0070                       i2c_setBuffer@buffer 0073  
                                 _ADSTPTH 0113                                   _ADSTPTL 0112  
                         ?_PMD_Initialize 0070            ?_i2c1_driver_clearBusCollision 0070  
                        ?_DATAEE_ReadByte 0023                         ?_i2c1_driver_open 0070  
                       __end_of_do_I2C_RX 0E1C                         __end_of_do_I2C_TX 0F58  
                       ?_i2c1_driver_stop 0070             i1PWM6_LoadDutyValue@dutyValue 0070  
                    __size_of_recoverData 00C6                                   _LED_bin 0A2B  
                        _handler_clock_ms 0868                        ??_i2c1_driver_open 0023  
                                 _INT_ISR 17AD                        ??_i2c1_driver_stop 0070  
                                 _OSCCON1 088D                                   _OSCCON3 088F  
                           ?_mssp1_setIRQ 0070                      i1_PWM6_LoadDutyValue 096C  
                                 _NVMADRH 081B                                   _NVMADRL 081A  
                                 _NVMDATH 081D                                   _OSCTUNE 0892  
                                 _NVMDATL 081C                    selectSubfield@subfield 0043  
                                 _NVMCON2 081F                           ?_selectSubfield 0070  
                                 _PWM6DCH 038D                                   _PWM6DCL 038C  
                                 _PWM6CON 038E                                   _SSP1ADD 018D  
                                 _SLRCONA 0F3B                                   _SLRCONB 0F46  
                                 _SLRCONC 0F51                                   _SLRCOND 0F5C  
                                 _SLRCONE 0F67                                   _SSP1BUF 018C  
                  __end_of_mssp1_clearIRQ 176E                                   _SSP1MSK 018E  
          __size_of_ADCC_IsConversionDone 0007                                 ?_mod1_LED 0070  
                               ?_mod2_LED 0070                                 ?_mod3_LED 0070  
                               ?_mod4_LED 0070             __end_of_ADCC_IsConversionDone 0807  
                 ??_do_I2C_SEND_ADR_WRITE 0071                        __size_of_push_ring 0047  
                         _getSubfieldInfo 022D                          ?_TMR1_WriteTimer 0070  
             ??_do_I2C_SEND_RESTART_WRITE 0070                        _i2c1_driver_TXData 1780  
                    DATAEE_WriteByte@bAdd 0029                        _i2c1_driver_i2cISR 00CF  
                               ?_mode_LED 0070                           __size_of_ISR_3s 0019  
                                 _i2c_ISR 0C40                           _limitHoursUnits 0A45  
               ??_rdBlkRegCompleteHandler 007A                                   _ReadI2C 0AD2  
                          ring_buffer@lum 0027                            ring_buffer@tem 0026  
                      _i2c1_driver_isNACK 17C6                       ?_i2c1_driver_TXData 0070  
              ??_TMR2_SetInterruptHandler 0025                     __end_of_num_subfields 1805  
                    __size_of_ring_buffer 002F                      __CFG_SCANE$available 0000  
               __size_of_checkDebounceSW1 005A                 __size_of_checkDebounceSW2 004D  
                         __size_of___bmul 0016                                   ___awdiv 0621  
                                 ___awmod 0F58                     ?_limitTempThreshUnits 0070  
                           ?_representLed 0070                           __size_of___wmul 0020  
                       ??_mode_select_LED 002D                         ??_do_I2C_TX_EMPTY 007A  
                                 _all_LED 0681                       ?_i2c1_driver_isNACK 0070  
                              ??_WriteI2C 0023                                   __ptext1 0389  
                                 __ptext2 06DC                                   __ptext3 0AD2  
                                 __ptext4 0BEA                                   __ptext5 0C6D  
                                 __ptext6 04D9                                   __ptext7 0A97  
                                 __ptext8 08F2                                   __ptext9 0B31  
                     __end_of_do_I2C_IDLE 178A                       __end_of_do_I2C_RCEN 17C6  
                                 _sw1_EXT 0B75            ??_TMR1_DefaultInterruptHandler 0070  
                                 _cksum_w 08F2                                 _T1CONbits 020E  
                   _OSCILLATOR_Initialize 0810                                   _last_ms 0059  
                               _T2CONbits 028E               __end_of_do_I2C_SEND_RESTART 1799  
                          ??_mssp1_setIRQ 0070                          ___awmod@dividend 0025  
                              _duty_cycle 00C1                               reset_recv@i 002D  
       __size_of_TMR1_SetInterruptHandler 0009                     ?i1_PWM6_LoadDutyValue 0070  
                    ??_i2c1_driver_TXData 0070                         __end_of_read_ring 0D42  
                ??_PIN_MANAGER_Initialize 0023                 ?_TMR1_SetInterruptHandler 0023  
                               _T2HLTbits 028F                                   _nreg_pt 005D  
                 _INT_SetInterruptHandler 0807                                   _lum_bin 004F  
             __size_of_increment_subfield 0054                           ?_mssp1_clearIRQ 0070  
                              ??_mod1_LED 002D                                ??_mod2_LED 002D  
                              ??_mod3_LED 002D                                ??_mod4_LED 002D  
                                 main@t1m 00E3                                   main@t5s 00E2  
                _do_I2C_SEND_RESTART_READ 178A                __size_of_SYSTEM_Initialize 001C  
                                 clrloop0 17B4                                _hours_tens 00CB  
                    __size_of_returnReset 0002                      end_of_initialization 007A  
                               _T2RSTbits 0291                      ??_i2c1_driver_isNACK 0070  
               __size_of_i2c_restartWrite 0002                                   init_ram 17B9  
                              ??_mode_LED 002D              __end_of_i2c1_driver_sendNACK 177C  
                  ?_rd1RegCompleteHandler 0079                                   initloop 17BA  
                    __end_of_INT_CallBack 088D                    ?_wr1RegCompleteHandler 0079  
            __end_of_i2c1_driver_resetBus 1755                                _reset_recv 0A97  
                              _lum_thresh 0063                             push_ring@nreg 002D  
                        mode_LED@subfield 002F                            ??_representLed 002D  
               _do_I2C_SEND_RESTART_WRITE 178F                          ?_ADCC_Initialize 0070  
                       __end_of_push_ring 0D89                     __CFG_WDTCPS$WDTCPS_14 0000  
                              _returnStop 1757                  _TMR0_SetInterruptHandler 0819  
                               _PORTBbits 000D                                 _PORTCbits 000E  
         __end_of_rdBlkRegCompleteHandler 09C7                  __end_of_do_I2C_SEND_STOP 179E  
                    __CFG_WDTCCS$HFINTOSC 0000                   __end_of_getSubfieldInfo 0389  
              __end_ofi1_checkDebounceSW1 07EA                                 _TRISCbits 0013  
    __size_of_i2c_setDataCompleteCallback 000D                   __end_of_limitHoursUnits 0A60  
                             returnStop@p 0079                          __CFG_FEXTOSC$OFF 0000  
                       __size_of_ADC_read 001A                  __end_of_DATAEE_WriteByte 0B75  
            i2c_setDataCompleteCallback@p 0077                            __end_of_ISR_3s 09F8  
           __size_of_do_I2C_SEND_ADR_READ 0009                            _TMR0_StopTimer 1759  
                  ??_limitTempThreshUnits 002C                               _do_I2C_IDLE 1785  
                             _do_I2C_RCEN 17BF      __end_of_TMR2_DefaultInterruptHandler 1754  
   __size_of_TMR2_DefaultInterruptHandler 0001              _TMR2_DefaultInterruptHandler 1753  
                          __end_of___bmul 0800                            __end_of___wmul 0B31  
                       __size_of_TMR0_ISR 000F                         __size_of_TMR1_ISR 0017  
                       __size_of_TMR2_ISR 000F                    ?_OSCILLATOR_Initialize 0070  
       __size_of_ADCC_GetConversionResult 0009                 ??_INT_SetInterruptHandler 0025  
            __size_of_do_I2C_DO_NACK_STOP 0005                 ?_ADCC_GetConversionResult 0023  
                  ??i1_PWM6_LoadDutyValue 0072                   ?_do_I2C_DO_NACK_RESTART 0070  
                     start_initialization 005D                    getSubfieldInfo@h_units 003C  
                     _i2c_busCollisionISR 177C                  __size_of_TMR0_Initialize 0015  
         __size_of_PIN_MANAGER_Initialize 0049                    getSubfieldInfo@m_units 003E  
                        WriteI2C@data_out 0024             __size_of_ADCC_StartConversion 0008  
                            setCallBack@p 0072              __size_of_i2c1_driver_sendACK 0004  
                 i2c_setBuffer@bufferSize 0070                   ??_i2c1_driver_getRXData 0070  
                  rd1RegCompleteHandler@p 0079                                  ??_ISR_3s 0074  
            __size_of_i2c1_driver_restart 0003              __size_of_i2c1_driver_startRX 0003  
                     DATAEE_ReadByte@bAdd 0023                     __end_of_i2c_setBuffer 08F2  
            ?_INT_DefaultInterruptHandler 0070                    __end_of_TMR0_StopTimer 175C  
                __end_of_handler_clock_ms 0874                      ?_i2c_busCollisionISR 0070  
                        __CFG_LPBOREN$OFF 0000                               ?_reset_recv 0070  
                    __end_of_mssp1_setIRQ 176B                  __size_of_TMR1_Initialize 001F  
                                ??___bmul 0024                          ??_PMD_Initialize 0023  
                        _checkDebounceSW1 0736                          _checkDebounceSW2 0E1C  
                                ??___wmul 0027                    wr1RegCompleteHandler@p 0079  
                           ?_do_I2C_RESET 0070                               __pdataBANK0 005F  
              __end_of_EXT_INT_Initialize 08B5             ?_TMR2_DefaultInterruptHandler 0070  
                             ?_returnStop 0079                          ??_selectSubfield 0041  
          __end_of_do_I2C_DO_NACK_RESTART 17AD                                read_ring@i 002D  
                    _i2c1_driver_sendNACK 1778                         read_ring@absindex 002F  
                       __size_of_WriteI2C 005A                          ?_getSubfieldInfo 0070  
                                ?_LED_bin 0023                               __pbssCOMMON 007D  
                               ___latbits 0002                      _i2c1_driver_resetBus 1754  
                                ?_INT_ISR 0070                   save_recovery_params@aux 002F  
                           __pcstackBANK0 0020                             __pcstackBANK1 00E0  
                      _PWM6_LoadDutyValue 09F8                  __size_of_TMR2_Initialize 0018  
                               _do_I2C_RX 0DD2                                 _do_I2C_TX 0F04  
                   __size_of_INT_CallBack 000D                          ?_limitHoursUnits 0070  
                    __end_of_representLed 0EB6            __size_of_do_I2C_SEND_ADR_WRITE 0008  
                       __size_of_mod1_LED 000B                         __size_of_mod2_LED 000A  
           __end_of_do_I2C_SEND_ADR_WRITE 17DE                         __size_of_mod3_LED 000B  
                       __size_of_mod4_LED 000B                       ?_PWM6_LoadDutyValue 0029  
                        _i2c_restartWrite 1755                 __size_of_i2c1_driver_open 000C  
                         _mode_select_LED 0AF1                 __size_of_i2c1_driver_stop 0003  
                                ?_i2c_ISR 0070                           _do_I2C_TX_EMPTY 0C9C  
                                ?_ReadI2C 0070                     _TMR0_InterruptHandler 00DC  
                           ??_setCallBack 0073                                 __pnvBANK0 0068  
                               __pnvBANK1 00D8                     _rd2RegCompleteHandler 0946  
                __size_of_TMR0_StartTimer 0003                           ?_TMR0_StopTimer 0070  
                   ??_i2c_busCollisionISR 0070                         __size_of_mode_LED 002A  
                   __end_of_fsmStateTable 1020             __size_of_save_recovery_params 002A  
                               _main$2446 00E4                    _PIN_MANAGER_Initialize 0D89  
                   _wr2RegCompleteHandler 0913             ??_INT_DefaultInterruptHandler 0070  
                 __size_of_config_routine 0082          __end_of_TMR1_SetInterruptHandler 082B  
                       read_ring@subindex 002A                            ??_do_I2C_RESET 0070  
                                ?___awdiv 0023                                 __ptext100 0868  
                               __ptext101 0998                                 __ptext110 0880  
                               __ptext102 1752                                 __ptext111 1750  
                               __ptext103 0CCF                                 __ptext112 0B75  
                               __ptext104 0902                                 __ptext113 0790  
                               __ptext105 08B5                                 __ptext114 096C  
                               __ptext106 09DF                                 __ptext107 1751  
                               __ptext108 1759                                 __ptext109 17AD  
                                ?___awmod 0023                  ??_do_I2C_DO_ADDRESS_NACK 007A  
             _i2c1_driver_busCollisionISR 00D1                                  ?_all_LED 0070  
                   __end_of_do_I2C_DO_ACK 17A3                      ??_PWM6_LoadDutyValue 002B  
                           ??_recoverData 002F              ??_INTERRUPT_InterruptManager 007D  
              ??_do_I2C_SEND_RESTART_READ 0070                     ?_i2c1_driver_sendNACK 0070  
                                ?_sw1_EXT 0070                                  ?_cksum_w 0070  
                            _INT_CallBack 0880                          ??_mssp1_clearIRQ 0070  
                   ?_i2c1_driver_resetBus 0070        __size_of_do_I2C_SEND_RESTART_WRITE 0005  
                                _ADC_read 0A11                                ?_do_I2C_RX 0070  
                              ?_do_I2C_TX 0070                  __size_of_PWM6_Initialize 000D  
                     __size_of_reset_recv 001C                            __size_of_cksum 0020  
                                _T2CLKCON 0290                  __size_of_DATAEE_ReadByte 000F  
                 ??_rd1RegCompleteHandler 007A                                 _read_ring 0D03  
                          __size_of_tsttc 0150                                 _min_units 00C5  
                 ??_wr1RegCompleteHandler 007A                     _ADCC_IsConversionDone 0800  
                       ??_TMR0_Initialize 0025                            ___wmul@product 0027  
                                _LATAbits 0016                       __size_of_returnStop 0002  
                               clear_ram0 17B3                                  _PIE0bits 0716  
                       _handler_clock_hms 0CCF                                 _nreg_init 005E  
                           ??_ring_buffer 0028                                  _PIE3bits 0719  
                                _PIE4bits 071A                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 0057                ??_TMR0_SetInterruptHandler 0025  
                                _PIR0bits 070C                               _config_mode 0054  
                                _PIR3bits 070F                                 _ring_byte 00D3  
                                _PIR4bits 0710                        ?_handler_clock_hms 0070  
                                _SSP1CON1 0190                                  _SSP1CON2 0191  
                                _TMR0_ISR 08B5                                  _TMR1_ISR 0998  
                                _TMR2_ISR 08C4              ?_i2c_setDataCompleteCallback 0075  
                                _SSP1STAT 018F                       __end_of_setCallBack 0BC0  
                        push_ring@nreg_pt 0033                                 _threshold 004D  
                     ??_handler_clock_hms 0070                         ??_TMR1_Initialize 0025  
                              _ADCON0bits 0093                                _ADCON1bits 0094  
                              _ADCON2bits 0095                                _ADCON3bits 0096  
                       ___wmul@multiplier 0023                                 _push_ring 0D42  
                       ?_do_I2C_SEND_STOP 0070                                  _WPUBbits 0F44  
              __end_of_increment_subfield 1000      __size_of_INT_DefaultInterruptHandler 0001  
          ??_TMR2_DefaultInterruptHandler 0070         __size_of_TMR2_SetInterruptHandler 0009  
                           ??_returnReset 007A                 ?_TMR2_SetInterruptHandler 0023  
                      ??_do_I2C_SEND_STOP 0070               __size_of_i2c1_driver_TXData 0005  
                        __size_of_LED_bin 001A                     DATAEE_WriteByte@bData 002B  
                     __end_of_recoverData 059F         __end_of_do_I2C_SEND_RESTART_WRITE 1794  
                        __size_of_INT_ISR 0006                   __end_of_mode_select_LED 0B11  
                 __end_of_do_I2C_TX_EMPTY 0CCF                                ?_read_ring 0027  
                ?_rdBlkRegCompleteHandler 0079                         ?_DATAEE_WriteByte 0029  
            __size_of_do_I2C_SEND_RESTART 0005               __size_of_i2c1_driver_isNACK 0008  
               __end_of_handler_clock_hms 0D03                     __size_of_mssp1_setIRQ 0003  
                       ??_TMR2_Initialize 0025                    ?_rd2RegCompleteHandler 0079  
                      ??_DATAEE_WriteByte 002C                        i1_checkDebounceSW1 0790  
                     _do_I2C_DO_NACK_STOP 17A3                          __size_of_i2c_ISR 002D  
                  ?_wr2RegCompleteHandler 0079                          __size_of_ReadI2C 001F  
                              _ADSTATbits 0097          __end_of_ADCC_GetConversionResult 1800  
                            ?_do_I2C_IDLE 0070                       ?i1_checkDebounceSW1 0070  
                            ?_do_I2C_RCEN 0070                                push_ring@i 0032  
                 ??_OSCILLATOR_Initialize 0023                         ??_TMR0_StartTimer 0023  
                     __end_of_ring_buffer 0C9C                       _i2c1_driver_sendACK 1774  
                        __size_of___awdiv 0060                          __size_of___awmod 0054  
         __size_of_do_I2C_DO_ADDRESS_NACK 002C                       i2c1_driver_TXData@d 0070  
                  ??_i2c1_driver_sendNACK 0070             ??_i2c_setDataCompleteCallback 0078  
                                _WriteI2C 06DC                          __size_of_all_LED 005B  
                     _i2c1_driver_restart 175C                  _TMR1_SetInterruptHandler 0822  
                    ?_do_I2C_DO_NACK_STOP 0070                       _i2c1_driver_startRX 1762  
            __end_of_do_I2C_SEND_ADR_READ 17F7                                ?_push_ring 002D  
                  ??_i2c1_driver_resetBus 0070                     _TMR1_InterruptHandler 00DA  
                        __size_of_sw1_EXT 0025                          __size_of_cksum_w 0010  
                   __size_of_representLed 004D                                _T0CON0bits 001E  
                __size_of_ADCC_Initialize 0016                          read_ring@nreg_pt 002E  
                            _mssp1_setIRQ 1768                               ??_do_I2C_RX 007A  
                             ??_do_I2C_TX 007A                      ??i1_checkDebounceSW1 0070  
                                __ptext10 0D03                                  __ptext11 08D3  
                                __ptext20 083D                                  __ptext12 0D42  
                                __ptext21 0847                                  __ptext13 0B51  
                              _T1GCONbits 020F                                  __ptext30 0736  
                                __ptext22 022D                                  __ptext14 0874  
                                __ptext31 07EA                                  __ptext23 0A60  
                                __ptext15 059F                                  __ptext40 0AB3  
                                __ptext32 0F58                                  __ptext24 0A45  
                                __ptext16 0EB6                                  __ptext41 0822  
                                __ptext33 0681                                  __ptext25 0621  
                                __ptext17 0BC0                                  __ptext50 0982  
                                __ptext42 0957                                  __ptext34 0AF1  
                                __ptext26 0FAC                                  __ptext18 085D  
                                __ptext51 0A2B                                  __ptext43 0819  
                                __ptext35 09F8                                  __ptext27 0E69  
                                __ptext19 0852                                  __ptext60 176B  
                                __ptext52 0A11                                  __ptext44 089A  
                                __ptext36 1771                                  __ptext28 0B11  
                                __ptext61 0DD2                                  __ptext53 17DE  
                                __ptext45 17E6                                  __ptext37 0A7B  
                                __ptext29 0E1C                                  __ptext70 1799  
                                __ptext62 0F04                                  __ptext54 0800  
                                __ptext46 0D89                                  __ptext38 09C7  
                                __ptext71 1794                                  __ptext63 0C14  
                                __ptext55 17F7                                  __ptext47 0810  
                                __ptext39 082B                                  __ptext80 1765  
                                __ptext72 178F                                  __ptext64 17A8  
                                __ptext48 08A7                                  __ptext81 1778  
                                __ptext73 178A                                  __ptext65 17A3  
                                __ptext57 177C                                  __ptext49 0807  
                                __ptext90 1755                                  __ptext82 1754  
                                __ptext74 1785                                  __ptext66 179E  
                                __ptext58 176E                                  __ptext91 0913  
                                __ptext83 1762                                  __ptext75 17CE  
                                __ptext67 17BF                                  __ptext59 0C40  
                                __ptext92 088D                                  __ptext84 09AF  
                                __ptext76 0C9C                                  __ptext68 17D6  
                                __ptext93 0B9A                                  __ptext85 0946  
                                __ptext77 1768                                  __ptext69 17EE  
                                __ptext94 08E2                                  __ptext86 0935  
                                __ptext78 17C6                                  __ptext95 175F  
                                __ptext87 0924                                  __ptext79 1780  
                                __ptext96 175C                                  __ptext88 0002  
                                __ptext97 1774                                  __ptext89 1757  
                                __ptext98 08C4                                  __ptext99 1753  
                                _mod1_LED 0847                              _SSP1CON1bits 0190  
                                _mod2_LED 083D                  __end_of_checkDebounceSW1 0790  
                            _SSP1CON2bits 0191                  __end_of_checkDebounceSW2 0E69  
                                _mod3_LED 0852                                  _mod4_LED 085D  
                  ?_ADCC_IsConversionDone 0070                      ?_i2c1_driver_sendACK 0070  
                    __end_of_do_I2C_RESET 17D6               DATAEE_WriteByte@GIEBitValue 002C  
                    ?_i2c1_driver_restart 0070                       __end_of_returnReset 0004  
                                _last_ms2 0058                          _i2c1_driver_open 0874  
                                _mode_LED 0BC0                         ??_PWM6_Initialize 0023  
                        _i2c1_driver_stop 175F                             __size_of_main 01AF  
                    ?_i2c1_driver_startRX 0070            __size_of_i2c1_driver_getRXData 0003  
                                _min_tens 00C7             __end_of_i2c1_driver_getRXData 1768  
    __end_of_TMR0_DefaultInterruptHandler 1752     __size_of_TMR0_DefaultInterruptHandler 0001  
            _TMR0_DefaultInterruptHandler 1751                         ??_DATAEE_ReadByte 0025  
                    __CFG_WDTCWS$WDTCWS_7 0000                               _setCallBack 0B9A  
                            ??_reset_recv 002D                         ?_handler_clock_ms 0070  
                                _set_mode 0055                            _config_routine 059F  
                              tsttc@value 0026                             _num_subfields 1800  
            __end_of_ADCC_StartConversion 17E6                                  int$flags 007E  
                      ??_handler_clock_ms 0070                              _representLed 0E69  
           __size_of_limitTempThreshUnits 001B        __end_of_INTERRUPT_InterruptManager 005B  
              _INTERRUPT_InterruptManager 0004                       _mode_field_subfield 005F  
                            _SSP1STATbits 018F                         ??_TMR1_WriteTimer 0072  
                                cksum@res 0026          __end_of_do_I2C_SEND_RESTART_READ 178F  
                            ??_returnStop 007A                               _hours_units 00C9  
                __end_of_i2c_restartWrite 1757                     ??_do_I2C_DO_NACK_STOP 0070  
                             _recoverData 04D9                                _INTCONbits 000B  
                             _NVMCON1bits 081E             __size_ofi1_PWM6_LoadDutyValue 0016  
                    _INT_InterruptHandler 00DE                          ?_mode_select_LED 0070  
                      __end_of_reset_recv 0AB3                     ??_i2c1_driver_sendACK 0070  
                      _EXT_INT_Initialize 08A7                          ?_do_I2C_TX_EMPTY 0070  
                             ??_read_ring 002B                    _do_I2C_DO_ADDRESS_NACK 0C14  
                                intlevel1 0000                          ??_TMR0_StopTimer 0070  
                   ??_i2c1_driver_restart 0070                __size_of_handler_clock_hms 0034  
                  rd2RegCompleteHandler@p 0079                     ??_i2c1_driver_startRX 0070  
                 ?_PIN_MANAGER_Initialize 0070                         i2c_restartWrite@p 0079  
                       __CFG_CLKOUTEN$OFF 0000                       ?_EXT_INT_Initialize 0070  
                      __end_of_returnStop 1759                    __end_of_config_routine 0621  
                             _ring_buffer 0C6D             ?_TMR0_DefaultInterruptHandler 0070  
                  wr2RegCompleteHandler@p 0079                  ?_INT_SetInterruptHandler 0023  
                _ADCC_GetConversionResult 17F7                               _temp_thresh 0064  
                           __pstringtext1 1000                             __pstringtext2 1800  
                    ??_EXT_INT_Initialize 0025                            read_ring@index 0029  
                             ??_push_ring 0030                                _SSP1DATPPS 0EC6  
            __end_of_save_recovery_params 0C14                                _SSP1CLKPPS 0EC5  
                         _TMR0_Initialize 0957                    __size_of_i2c_setBuffer 0010  
                             _returnReset 0002               PWM6_LoadDutyValue@dutyValue 0029  
                           read_ring@nreg 0027            __end_of_PIN_MANAGER_Initialize 0DD2  
                       ??_ADCC_Initialize 0023               __end_of_i2c_busCollisionISR 1780  
                __size_of_getSubfieldInfo 015C            __size_of_rd1RegCompleteHandler 0011  
           __end_of_rd1RegCompleteHandler 0946                        push_ring@nreg_init 002E  
          __size_of_wr1RegCompleteHandler 0011             __end_of_wr1RegCompleteHandler 0935  
                   _TMR2_InterruptHandler 00D8                     _do_I2C_SEND_ADR_WRITE 17D6  
                      push_ring@ring_byte 002F                  __size_of_limitHoursUnits 001B  
                    _do_I2C_SEND_ADR_READ 17EE                           ?_config_routine 0070  
                         _TMR1_Initialize 0AB3  
