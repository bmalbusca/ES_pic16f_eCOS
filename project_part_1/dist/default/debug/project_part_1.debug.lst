

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Dec 09 12:22:38 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	stringtext3,global,class=STRCODE,delta=2
    12                           	psect	stringtext4,global,class=STRCODE,delta=2
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	inittext,global,class=CODE,delta=2
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text36,local,class=CODE,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,delta=2
    63                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    64                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text40,local,class=CODE,merge=1,delta=2
    66                           	psect	text41,local,class=CODE,merge=1,delta=2
    67                           	psect	text42,local,class=CODE,merge=1,delta=2
    68                           	psect	text43,local,class=CODE,merge=1,delta=2
    69                           	psect	text44,local,class=CODE,merge=1,delta=2
    70                           	psect	text45,local,class=CODE,merge=1,delta=2
    71                           	psect	text46,local,class=CODE,merge=1,delta=2
    72                           	psect	text47,local,class=CODE,merge=1,delta=2
    73                           	psect	text48,local,class=CODE,merge=1,delta=2
    74                           	psect	text49,local,class=CODE,merge=1,delta=2
    75                           	psect	text50,local,class=CODE,merge=1,delta=2
    76                           	psect	text51,local,class=CODE,merge=1,delta=2
    77                           	psect	text52,local,class=CODE,merge=1,delta=2
    78                           	psect	text53,local,class=CODE,merge=1,delta=2
    79                           	psect	text54,local,class=CODE,merge=1,delta=2
    80                           	psect	text55,local,class=CODE,merge=1,delta=2
    81                           	psect	text56,local,class=CODE,merge=1,delta=2
    82                           	psect	text57,local,class=CODE,merge=1,delta=2
    83                           	psect	text58,local,class=CODE,merge=1,delta=2
    84                           	psect	text59,local,class=CODE,merge=1,delta=2
    85                           	psect	text60,local,class=CODE,merge=1,delta=2
    86                           	psect	text61,local,class=CODE,merge=1,delta=2
    87                           	psect	text62,local,class=CODE,merge=1,delta=2
    88                           	psect	text63,local,class=CODE,merge=1,delta=2
    89                           	psect	text64,local,class=CODE,merge=1,delta=2
    90                           	psect	text65,local,class=CODE,merge=1,delta=2
    91                           	psect	text66,local,class=CODE,merge=1,delta=2
    92                           	psect	text67,local,class=CODE,merge=1,delta=2
    93                           	psect	text68,local,class=CODE,merge=1,delta=2
    94                           	psect	text69,local,class=CODE,merge=1,delta=2
    95                           	psect	intentry,global,class=CODE,delta=2
    96                           	psect	text71,local,class=CODE,merge=1,delta=2
    97                           	psect	text72,local,class=CODE,merge=1,inline,delta=2
    98                           	psect	text73,local,class=CODE,merge=1,delta=2
    99                           	psect	text74,local,class=CODE,merge=1,inline,delta=2
   100                           	psect	text75,local,class=CODE,merge=1,delta=2
   101                           	psect	text76,local,class=CODE,merge=1,delta=2
   102                           	psect	text77,local,class=CODE,merge=1,delta=2
   103                           	psect	text78,local,class=CODE,merge=1,delta=2
   104                           	psect	text79,local,class=CODE,merge=1,delta=2
   105                           	psect	text80,local,class=CODE,merge=1,delta=2
   106                           	psect	text81,local,class=CODE,merge=1,delta=2
   107                           	psect	text82,local,class=CODE,merge=1,delta=2
   108                           	psect	text83,local,class=CODE,merge=1,delta=2
   109                           	psect	text84,local,class=CODE,merge=1,delta=2
   110                           	psect	text85,local,class=CODE,merge=1,delta=2
   111                           	psect	text86,local,class=CODE,merge=1,delta=2
   112                           	psect	text87,local,class=CODE,merge=1,delta=2
   113                           	psect	text88,local,class=CODE,merge=1,delta=2
   114                           	psect	text89,local,class=CODE,merge=1,delta=2
   115                           	psect	text90,local,class=CODE,merge=1,delta=2
   116                           	psect	text91,local,class=CODE,merge=1,inline,delta=2
   117                           	psect	text92,local,class=CODE,merge=1,inline,delta=2
   118                           	psect	text93,local,class=CODE,merge=1,inline,delta=2
   119                           	psect	text94,local,class=CODE,merge=1,inline,delta=2
   120                           	psect	text95,local,class=CODE,merge=1,inline,delta=2
   121                           	psect	text96,local,class=CODE,merge=1,inline,delta=2
   122                           	psect	text97,local,class=CODE,merge=1,inline,delta=2
   123                           	psect	text98,local,class=CODE,merge=1,delta=2
   124                           	psect	text99,local,class=CODE,merge=1,delta=2
   125                           	psect	text100,local,class=CODE,merge=1,delta=2
   126                           	psect	text101,local,class=CODE,merge=1,delta=2
   127                           	psect	text102,local,class=CODE,merge=1,delta=2
   128                           	psect	text103,local,class=CODE,merge=1,delta=2
   129                           	psect	text104,local,class=CODE,merge=1,delta=2
   130                           	psect	text105,local,class=CODE,merge=1,delta=2
   131                           	psect	text106,local,class=CODE,merge=1,delta=2
   132                           	psect	text107,local,class=CODE,merge=1,delta=2
   133                           	psect	text108,local,class=CODE,merge=1,delta=2
   134                           	psect	text109,local,class=CODE,merge=1,inline,delta=2
   135                           	psect	text110,local,class=CODE,merge=1,inline,delta=2
   136                           	psect	text111,local,class=CODE,merge=1,inline,delta=2
   137                           	psect	text112,local,class=CODE,merge=1,delta=2
   138                           	psect	text113,local,class=CODE,merge=1,delta=2
   139                           	psect	text114,local,class=CODE,merge=1,delta=2
   140                           	psect	text115,local,class=CODE,merge=1,delta=2
   141                           	psect	text116,local,class=CODE,merge=1,delta=2
   142                           	psect	text117,local,class=CODE,merge=1,delta=2
   143                           	psect	text118,local,class=CODE,merge=1,delta=2
   144                           	psect	text119,local,class=CODE,merge=1,delta=2
   145                           	psect	text120,local,class=CODE,merge=1,delta=2
   146                           	psect	text121,local,class=CODE,merge=1,delta=2
   147                           	psect	text122,local,class=CODE,merge=1,delta=2
   148                           	psect	text123,local,class=CODE,merge=1,delta=2
   149                           	psect	text124,local,class=CODE,merge=1,delta=2
   150                           	psect	text125,local,class=CODE,merge=1,delta=2
   151                           	psect	text126,local,class=CODE,merge=1,delta=2
   152                           	psect	text127,local,class=CODE,merge=1,delta=2
   153                           	psect	text128,local,class=CODE,merge=1,delta=2
   154                           	psect	text129,local,class=CODE,merge=1,delta=2
   155                           	psect	text130,local,class=CODE,merge=1,delta=2
   156                           	psect	text131,local,class=CODE,merge=1,delta=2
   157                           	psect	text132,local,class=CODE,merge=1,delta=2
   158                           	psect	text133,local,class=CODE,merge=1,delta=2
   159                           	psect	text134,local,class=CODE,merge=1,delta=2
   160                           	dabs	1,0x7E,2
   161  0000                     
   162                           ; Version 2.10
   163                           ; Generated 31/07/2019 GMT
   164                           ; 
   165                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   166                           ; All rights reserved.
   167                           ; 
   168                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   169                           ; 
   170                           ; Redistribution and use in source and binary forms, with or without modification, are
   171                           ; permitted provided that the following conditions are met:
   172                           ; 
   173                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   174                           ;        conditions and the following disclaimer.
   175                           ; 
   176                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   177                           ;        of conditions and the following disclaimer in the documentation and/or other
   178                           ;        materials provided with the distribution.
   179                           ; 
   180                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   181                           ;        software without specific prior written permission.
   182                           ; 
   183                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   184                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   185                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   186                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   187                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   188                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   189                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   190                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   191                           ; 
   192                           ; 
   193                           ; Code-generator required, PIC16F18875 Definitions
   194                           ; 
   195                           ; SFR Addresses
   196  0000                     	;# 
   197  0001                     	;# 
   198  0002                     	;# 
   199  0003                     	;# 
   200  0004                     	;# 
   201  0005                     	;# 
   202  0006                     	;# 
   203  0007                     	;# 
   204  0008                     	;# 
   205  0009                     	;# 
   206  000A                     	;# 
   207  000B                     	;# 
   208  000C                     	;# 
   209  000D                     	;# 
   210  000E                     	;# 
   211  000F                     	;# 
   212  0010                     	;# 
   213  0011                     	;# 
   214  0012                     	;# 
   215  0013                     	;# 
   216  0014                     	;# 
   217  0015                     	;# 
   218  0016                     	;# 
   219  0017                     	;# 
   220  0018                     	;# 
   221  0019                     	;# 
   222  001A                     	;# 
   223  001C                     	;# 
   224  001C                     	;# 
   225  001D                     	;# 
   226  001D                     	;# 
   227  001E                     	;# 
   228  001F                     	;# 
   229  008C                     	;# 
   230  008C                     	;# 
   231  008D                     	;# 
   232  008E                     	;# 
   233  008E                     	;# 
   234  008F                     	;# 
   235  0090                     	;# 
   236  0090                     	;# 
   237  0091                     	;# 
   238  0093                     	;# 
   239  0094                     	;# 
   240  0095                     	;# 
   241  0096                     	;# 
   242  0097                     	;# 
   243  0098                     	;# 
   244  0099                     	;# 
   245  009A                     	;# 
   246  009B                     	;# 
   247  009C                     	;# 
   248  009D                     	;# 
   249  009E                     	;# 
   250  010C                     	;# 
   251  010D                     	;# 
   252  010E                     	;# 
   253  010E                     	;# 
   254  010F                     	;# 
   255  0110                     	;# 
   256  0110                     	;# 
   257  0111                     	;# 
   258  0112                     	;# 
   259  0112                     	;# 
   260  0113                     	;# 
   261  0114                     	;# 
   262  0114                     	;# 
   263  0115                     	;# 
   264  0116                     	;# 
   265  0116                     	;# 
   266  0117                     	;# 
   267  0119                     	;# 
   268  0119                     	;# 
   269  0119                     	;# 
   270  011A                     	;# 
   271  011A                     	;# 
   272  011A                     	;# 
   273  011B                     	;# 
   274  011B                     	;# 
   275  011B                     	;# 
   276  011B                     	;# 
   277  011B                     	;# 
   278  011C                     	;# 
   279  011C                     	;# 
   280  011C                     	;# 
   281  011D                     	;# 
   282  011D                     	;# 
   283  011D                     	;# 
   284  011E                     	;# 
   285  011E                     	;# 
   286  011E                     	;# 
   287  011F                     	;# 
   288  011F                     	;# 
   289  011F                     	;# 
   290  011F                     	;# 
   291  011F                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  018E                     	;# 
   295  018F                     	;# 
   296  0190                     	;# 
   297  0191                     	;# 
   298  0192                     	;# 
   299  0196                     	;# 
   300  0197                     	;# 
   301  0198                     	;# 
   302  0199                     	;# 
   303  019A                     	;# 
   304  019B                     	;# 
   305  019C                     	;# 
   306  020C                     	;# 
   307  020C                     	;# 
   308  020D                     	;# 
   309  020E                     	;# 
   310  020F                     	;# 
   311  020F                     	;# 
   312  0210                     	;# 
   313  0210                     	;# 
   314  0211                     	;# 
   315  0211                     	;# 
   316  0212                     	;# 
   317  0212                     	;# 
   318  0213                     	;# 
   319  0214                     	;# 
   320  0215                     	;# 
   321  0215                     	;# 
   322  0216                     	;# 
   323  0216                     	;# 
   324  0217                     	;# 
   325  0217                     	;# 
   326  0218                     	;# 
   327  0218                     	;# 
   328  0219                     	;# 
   329  021A                     	;# 
   330  021B                     	;# 
   331  021B                     	;# 
   332  021C                     	;# 
   333  021C                     	;# 
   334  021D                     	;# 
   335  021D                     	;# 
   336  021E                     	;# 
   337  021F                     	;# 
   338  028C                     	;# 
   339  028C                     	;# 
   340  028D                     	;# 
   341  028D                     	;# 
   342  028E                     	;# 
   343  028F                     	;# 
   344  0290                     	;# 
   345  0290                     	;# 
   346  0291                     	;# 
   347  0292                     	;# 
   348  0292                     	;# 
   349  0293                     	;# 
   350  0293                     	;# 
   351  0294                     	;# 
   352  0295                     	;# 
   353  0296                     	;# 
   354  0296                     	;# 
   355  0297                     	;# 
   356  0298                     	;# 
   357  0298                     	;# 
   358  0299                     	;# 
   359  0299                     	;# 
   360  029A                     	;# 
   361  029B                     	;# 
   362  029C                     	;# 
   363  029C                     	;# 
   364  029D                     	;# 
   365  030C                     	;# 
   366  030C                     	;# 
   367  030D                     	;# 
   368  030E                     	;# 
   369  030F                     	;# 
   370  0310                     	;# 
   371  0310                     	;# 
   372  0311                     	;# 
   373  0312                     	;# 
   374  0313                     	;# 
   375  0314                     	;# 
   376  0314                     	;# 
   377  0315                     	;# 
   378  0316                     	;# 
   379  0317                     	;# 
   380  0318                     	;# 
   381  0318                     	;# 
   382  0319                     	;# 
   383  031A                     	;# 
   384  031B                     	;# 
   385  031C                     	;# 
   386  031C                     	;# 
   387  031D                     	;# 
   388  031E                     	;# 
   389  031F                     	;# 
   390  038C                     	;# 
   391  038C                     	;# 
   392  038D                     	;# 
   393  038E                     	;# 
   394  0390                     	;# 
   395  0390                     	;# 
   396  0391                     	;# 
   397  0392                     	;# 
   398  040C                     	;# 
   399  040D                     	;# 
   400  040E                     	;# 
   401  040F                     	;# 
   402  0410                     	;# 
   403  0411                     	;# 
   404  0416                     	;# 
   405  0416                     	;# 
   406  0417                     	;# 
   407  0418                     	;# 
   408  0418                     	;# 
   409  0419                     	;# 
   410  041A                     	;# 
   411  041A                     	;# 
   412  041B                     	;# 
   413  041C                     	;# 
   414  041C                     	;# 
   415  041D                     	;# 
   416  041E                     	;# 
   417  041F                     	;# 
   418  048C                     	;# 
   419  048C                     	;# 
   420  048D                     	;# 
   421  048E                     	;# 
   422  048F                     	;# 
   423  048F                     	;# 
   424  0490                     	;# 
   425  0491                     	;# 
   426  0492                     	;# 
   427  0492                     	;# 
   428  0493                     	;# 
   429  0494                     	;# 
   430  0495                     	;# 
   431  0495                     	;# 
   432  0496                     	;# 
   433  0497                     	;# 
   434  0498                     	;# 
   435  0499                     	;# 
   436  049A                     	;# 
   437  049B                     	;# 
   438  049C                     	;# 
   439  049D                     	;# 
   440  050C                     	;# 
   441  050C                     	;# 
   442  050D                     	;# 
   443  050E                     	;# 
   444  050F                     	;# 
   445  050F                     	;# 
   446  0510                     	;# 
   447  0511                     	;# 
   448  0512                     	;# 
   449  0512                     	;# 
   450  0513                     	;# 
   451  0514                     	;# 
   452  0515                     	;# 
   453  0515                     	;# 
   454  0516                     	;# 
   455  0517                     	;# 
   456  0518                     	;# 
   457  0519                     	;# 
   458  051A                     	;# 
   459  051B                     	;# 
   460  051C                     	;# 
   461  051D                     	;# 
   462  058C                     	;# 
   463  058C                     	;# 
   464  058D                     	;# 
   465  058E                     	;# 
   466  058F                     	;# 
   467  058F                     	;# 
   468  0590                     	;# 
   469  0591                     	;# 
   470  0592                     	;# 
   471  0593                     	;# 
   472  060C                     	;# 
   473  060D                     	;# 
   474  060E                     	;# 
   475  060F                     	;# 
   476  0610                     	;# 
   477  0611                     	;# 
   478  0612                     	;# 
   479  0613                     	;# 
   480  0614                     	;# 
   481  0616                     	;# 
   482  0617                     	;# 
   483  0618                     	;# 
   484  0619                     	;# 
   485  061A                     	;# 
   486  061B                     	;# 
   487  061C                     	;# 
   488  061D                     	;# 
   489  061E                     	;# 
   490  068C                     	;# 
   491  068D                     	;# 
   492  068E                     	;# 
   493  068F                     	;# 
   494  0690                     	;# 
   495  0691                     	;# 
   496  0692                     	;# 
   497  0693                     	;# 
   498  0694                     	;# 
   499  070C                     	;# 
   500  070D                     	;# 
   501  070E                     	;# 
   502  070F                     	;# 
   503  0710                     	;# 
   504  0711                     	;# 
   505  0712                     	;# 
   506  0713                     	;# 
   507  0714                     	;# 
   508  0716                     	;# 
   509  0717                     	;# 
   510  0718                     	;# 
   511  0719                     	;# 
   512  071A                     	;# 
   513  071B                     	;# 
   514  071C                     	;# 
   515  071D                     	;# 
   516  071E                     	;# 
   517  0796                     	;# 
   518  0797                     	;# 
   519  0798                     	;# 
   520  0799                     	;# 
   521  079A                     	;# 
   522  079B                     	;# 
   523  080C                     	;# 
   524  080D                     	;# 
   525  080E                     	;# 
   526  080F                     	;# 
   527  0810                     	;# 
   528  0811                     	;# 
   529  0812                     	;# 
   530  0813                     	;# 
   531  0814                     	;# 
   532  081A                     	;# 
   533  081B                     	;# 
   534  081C                     	;# 
   535  081D                     	;# 
   536  081E                     	;# 
   537  081F                     	;# 
   538  088C                     	;# 
   539  088D                     	;# 
   540  088E                     	;# 
   541  088F                     	;# 
   542  0890                     	;# 
   543  0891                     	;# 
   544  0892                     	;# 
   545  0893                     	;# 
   546  0895                     	;# 
   547  0896                     	;# 
   548  0897                     	;# 
   549  0898                     	;# 
   550  0899                     	;# 
   551  089A                     	;# 
   552  089B                     	;# 
   553  090C                     	;# 
   554  090E                     	;# 
   555  090F                     	;# 
   556  091F                     	;# 
   557  091F                     	;# 
   558  098F                     	;# 
   559  098F                     	;# 
   560  0990                     	;# 
   561  0991                     	;# 
   562  0992                     	;# 
   563  0993                     	;# 
   564  0994                     	;# 
   565  0995                     	;# 
   566  0996                     	;# 
   567  0997                     	;# 
   568  0E0F                     	;# 
   569  0E10                     	;# 
   570  0E11                     	;# 
   571  0E12                     	;# 
   572  0E13                     	;# 
   573  0E14                     	;# 
   574  0E15                     	;# 
   575  0E16                     	;# 
   576  0E17                     	;# 
   577  0E18                     	;# 
   578  0E19                     	;# 
   579  0E1A                     	;# 
   580  0E1B                     	;# 
   581  0E1C                     	;# 
   582  0E1D                     	;# 
   583  0E1E                     	;# 
   584  0E1F                     	;# 
   585  0E20                     	;# 
   586  0E21                     	;# 
   587  0E22                     	;# 
   588  0E23                     	;# 
   589  0E24                     	;# 
   590  0E25                     	;# 
   591  0E26                     	;# 
   592  0E27                     	;# 
   593  0E28                     	;# 
   594  0E29                     	;# 
   595  0E2A                     	;# 
   596  0E2B                     	;# 
   597  0E2C                     	;# 
   598  0E2D                     	;# 
   599  0E2E                     	;# 
   600  0E2F                     	;# 
   601  0E30                     	;# 
   602  0E31                     	;# 
   603  0E32                     	;# 
   604  0E33                     	;# 
   605  0E34                     	;# 
   606  0E35                     	;# 
   607  0E36                     	;# 
   608  0E37                     	;# 
   609  0E8F                     	;# 
   610  0E90                     	;# 
   611  0E91                     	;# 
   612  0E92                     	;# 
   613  0E93                     	;# 
   614  0E94                     	;# 
   615  0E95                     	;# 
   616  0E96                     	;# 
   617  0E97                     	;# 
   618  0E9C                     	;# 
   619  0E9D                     	;# 
   620  0E9E                     	;# 
   621  0EA1                     	;# 
   622  0EA2                     	;# 
   623  0EA3                     	;# 
   624  0EA4                     	;# 
   625  0EA5                     	;# 
   626  0EA9                     	;# 
   627  0EAA                     	;# 
   628  0EAB                     	;# 
   629  0EAC                     	;# 
   630  0EB1                     	;# 
   631  0EB2                     	;# 
   632  0EB3                     	;# 
   633  0EB8                     	;# 
   634  0EB9                     	;# 
   635  0EBA                     	;# 
   636  0EBB                     	;# 
   637  0EBC                     	;# 
   638  0EBD                     	;# 
   639  0EBE                     	;# 
   640  0EC3                     	;# 
   641  0EC5                     	;# 
   642  0EC6                     	;# 
   643  0EC7                     	;# 
   644  0EC8                     	;# 
   645  0EC9                     	;# 
   646  0ECA                     	;# 
   647  0ECB                     	;# 
   648  0ECC                     	;# 
   649  0F10                     	;# 
   650  0F11                     	;# 
   651  0F12                     	;# 
   652  0F13                     	;# 
   653  0F14                     	;# 
   654  0F15                     	;# 
   655  0F16                     	;# 
   656  0F17                     	;# 
   657  0F18                     	;# 
   658  0F19                     	;# 
   659  0F1A                     	;# 
   660  0F1B                     	;# 
   661  0F1C                     	;# 
   662  0F1D                     	;# 
   663  0F1E                     	;# 
   664  0F1F                     	;# 
   665  0F20                     	;# 
   666  0F21                     	;# 
   667  0F22                     	;# 
   668  0F23                     	;# 
   669  0F24                     	;# 
   670  0F25                     	;# 
   671  0F26                     	;# 
   672  0F27                     	;# 
   673  0F28                     	;# 
   674  0F29                     	;# 
   675  0F2A                     	;# 
   676  0F2B                     	;# 
   677  0F2C                     	;# 
   678  0F2D                     	;# 
   679  0F2E                     	;# 
   680  0F2F                     	;# 
   681  0F30                     	;# 
   682  0F31                     	;# 
   683  0F32                     	;# 
   684  0F38                     	;# 
   685  0F39                     	;# 
   686  0F3A                     	;# 
   687  0F3B                     	;# 
   688  0F3C                     	;# 
   689  0F3D                     	;# 
   690  0F3E                     	;# 
   691  0F3F                     	;# 
   692  0F40                     	;# 
   693  0F41                     	;# 
   694  0F43                     	;# 
   695  0F44                     	;# 
   696  0F45                     	;# 
   697  0F46                     	;# 
   698  0F47                     	;# 
   699  0F48                     	;# 
   700  0F49                     	;# 
   701  0F4A                     	;# 
   702  0F4B                     	;# 
   703  0F4C                     	;# 
   704  0F4E                     	;# 
   705  0F4F                     	;# 
   706  0F50                     	;# 
   707  0F51                     	;# 
   708  0F52                     	;# 
   709  0F53                     	;# 
   710  0F54                     	;# 
   711  0F55                     	;# 
   712  0F56                     	;# 
   713  0F57                     	;# 
   714  0F59                     	;# 
   715  0F5A                     	;# 
   716  0F5B                     	;# 
   717  0F5C                     	;# 
   718  0F5D                     	;# 
   719  0F61                     	;# 
   720  0F62                     	;# 
   721  0F64                     	;# 
   722  0F65                     	;# 
   723  0F66                     	;# 
   724  0F67                     	;# 
   725  0F68                     	;# 
   726  0F69                     	;# 
   727  0F6A                     	;# 
   728  0F6B                     	;# 
   729  0F6C                     	;# 
   730  0F6D                     	;# 
   731  0FE4                     	;# 
   732  0FE5                     	;# 
   733  0FE6                     	;# 
   734  0FE7                     	;# 
   735  0FE8                     	;# 
   736  0FE9                     	;# 
   737  0FEA                     	;# 
   738  0FEB                     	;# 
   739  0FED                     	;# 
   740  0FEE                     	;# 
   741  0FEF                     	;# 
   742  0000                     	;# 
   743  0001                     	;# 
   744  0002                     	;# 
   745  0003                     	;# 
   746  0004                     	;# 
   747  0005                     	;# 
   748  0006                     	;# 
   749  0007                     	;# 
   750  0008                     	;# 
   751  0009                     	;# 
   752  000A                     	;# 
   753  000B                     	;# 
   754  000C                     	;# 
   755  000D                     	;# 
   756  000E                     	;# 
   757  000F                     	;# 
   758  0010                     	;# 
   759  0011                     	;# 
   760  0012                     	;# 
   761  0013                     	;# 
   762  0014                     	;# 
   763  0015                     	;# 
   764  0016                     	;# 
   765  0017                     	;# 
   766  0018                     	;# 
   767  0019                     	;# 
   768  001A                     	;# 
   769  001C                     	;# 
   770  001C                     	;# 
   771  001D                     	;# 
   772  001D                     	;# 
   773  001E                     	;# 
   774  001F                     	;# 
   775  008C                     	;# 
   776  008C                     	;# 
   777  008D                     	;# 
   778  008E                     	;# 
   779  008E                     	;# 
   780  008F                     	;# 
   781  0090                     	;# 
   782  0090                     	;# 
   783  0091                     	;# 
   784  0093                     	;# 
   785  0094                     	;# 
   786  0095                     	;# 
   787  0096                     	;# 
   788  0097                     	;# 
   789  0098                     	;# 
   790  0099                     	;# 
   791  009A                     	;# 
   792  009B                     	;# 
   793  009C                     	;# 
   794  009D                     	;# 
   795  009E                     	;# 
   796  010C                     	;# 
   797  010D                     	;# 
   798  010E                     	;# 
   799  010E                     	;# 
   800  010F                     	;# 
   801  0110                     	;# 
   802  0110                     	;# 
   803  0111                     	;# 
   804  0112                     	;# 
   805  0112                     	;# 
   806  0113                     	;# 
   807  0114                     	;# 
   808  0114                     	;# 
   809  0115                     	;# 
   810  0116                     	;# 
   811  0116                     	;# 
   812  0117                     	;# 
   813  0119                     	;# 
   814  0119                     	;# 
   815  0119                     	;# 
   816  011A                     	;# 
   817  011A                     	;# 
   818  011A                     	;# 
   819  011B                     	;# 
   820  011B                     	;# 
   821  011B                     	;# 
   822  011B                     	;# 
   823  011B                     	;# 
   824  011C                     	;# 
   825  011C                     	;# 
   826  011C                     	;# 
   827  011D                     	;# 
   828  011D                     	;# 
   829  011D                     	;# 
   830  011E                     	;# 
   831  011E                     	;# 
   832  011E                     	;# 
   833  011F                     	;# 
   834  011F                     	;# 
   835  011F                     	;# 
   836  011F                     	;# 
   837  011F                     	;# 
   838  018C                     	;# 
   839  018D                     	;# 
   840  018E                     	;# 
   841  018F                     	;# 
   842  0190                     	;# 
   843  0191                     	;# 
   844  0192                     	;# 
   845  0196                     	;# 
   846  0197                     	;# 
   847  0198                     	;# 
   848  0199                     	;# 
   849  019A                     	;# 
   850  019B                     	;# 
   851  019C                     	;# 
   852  020C                     	;# 
   853  020C                     	;# 
   854  020D                     	;# 
   855  020E                     	;# 
   856  020F                     	;# 
   857  020F                     	;# 
   858  0210                     	;# 
   859  0210                     	;# 
   860  0211                     	;# 
   861  0211                     	;# 
   862  0212                     	;# 
   863  0212                     	;# 
   864  0213                     	;# 
   865  0214                     	;# 
   866  0215                     	;# 
   867  0215                     	;# 
   868  0216                     	;# 
   869  0216                     	;# 
   870  0217                     	;# 
   871  0217                     	;# 
   872  0218                     	;# 
   873  0218                     	;# 
   874  0219                     	;# 
   875  021A                     	;# 
   876  021B                     	;# 
   877  021B                     	;# 
   878  021C                     	;# 
   879  021C                     	;# 
   880  021D                     	;# 
   881  021D                     	;# 
   882  021E                     	;# 
   883  021F                     	;# 
   884  028C                     	;# 
   885  028C                     	;# 
   886  028D                     	;# 
   887  028D                     	;# 
   888  028E                     	;# 
   889  028F                     	;# 
   890  0290                     	;# 
   891  0290                     	;# 
   892  0291                     	;# 
   893  0292                     	;# 
   894  0292                     	;# 
   895  0293                     	;# 
   896  0293                     	;# 
   897  0294                     	;# 
   898  0295                     	;# 
   899  0296                     	;# 
   900  0296                     	;# 
   901  0297                     	;# 
   902  0298                     	;# 
   903  0298                     	;# 
   904  0299                     	;# 
   905  0299                     	;# 
   906  029A                     	;# 
   907  029B                     	;# 
   908  029C                     	;# 
   909  029C                     	;# 
   910  029D                     	;# 
   911  030C                     	;# 
   912  030C                     	;# 
   913  030D                     	;# 
   914  030E                     	;# 
   915  030F                     	;# 
   916  0310                     	;# 
   917  0310                     	;# 
   918  0311                     	;# 
   919  0312                     	;# 
   920  0313                     	;# 
   921  0314                     	;# 
   922  0314                     	;# 
   923  0315                     	;# 
   924  0316                     	;# 
   925  0317                     	;# 
   926  0318                     	;# 
   927  0318                     	;# 
   928  0319                     	;# 
   929  031A                     	;# 
   930  031B                     	;# 
   931  031C                     	;# 
   932  031C                     	;# 
   933  031D                     	;# 
   934  031E                     	;# 
   935  031F                     	;# 
   936  038C                     	;# 
   937  038C                     	;# 
   938  038D                     	;# 
   939  038E                     	;# 
   940  0390                     	;# 
   941  0390                     	;# 
   942  0391                     	;# 
   943  0392                     	;# 
   944  040C                     	;# 
   945  040D                     	;# 
   946  040E                     	;# 
   947  040F                     	;# 
   948  0410                     	;# 
   949  0411                     	;# 
   950  0416                     	;# 
   951  0416                     	;# 
   952  0417                     	;# 
   953  0418                     	;# 
   954  0418                     	;# 
   955  0419                     	;# 
   956  041A                     	;# 
   957  041A                     	;# 
   958  041B                     	;# 
   959  041C                     	;# 
   960  041C                     	;# 
   961  041D                     	;# 
   962  041E                     	;# 
   963  041F                     	;# 
   964  048C                     	;# 
   965  048C                     	;# 
   966  048D                     	;# 
   967  048E                     	;# 
   968  048F                     	;# 
   969  048F                     	;# 
   970  0490                     	;# 
   971  0491                     	;# 
   972  0492                     	;# 
   973  0492                     	;# 
   974  0493                     	;# 
   975  0494                     	;# 
   976  0495                     	;# 
   977  0495                     	;# 
   978  0496                     	;# 
   979  0497                     	;# 
   980  0498                     	;# 
   981  0499                     	;# 
   982  049A                     	;# 
   983  049B                     	;# 
   984  049C                     	;# 
   985  049D                     	;# 
   986  050C                     	;# 
   987  050C                     	;# 
   988  050D                     	;# 
   989  050E                     	;# 
   990  050F                     	;# 
   991  050F                     	;# 
   992  0510                     	;# 
   993  0511                     	;# 
   994  0512                     	;# 
   995  0512                     	;# 
   996  0513                     	;# 
   997  0514                     	;# 
   998  0515                     	;# 
   999  0515                     	;# 
  1000  0516                     	;# 
  1001  0517                     	;# 
  1002  0518                     	;# 
  1003  0519                     	;# 
  1004  051A                     	;# 
  1005  051B                     	;# 
  1006  051C                     	;# 
  1007  051D                     	;# 
  1008  058C                     	;# 
  1009  058C                     	;# 
  1010  058D                     	;# 
  1011  058E                     	;# 
  1012  058F                     	;# 
  1013  058F                     	;# 
  1014  0590                     	;# 
  1015  0591                     	;# 
  1016  0592                     	;# 
  1017  0593                     	;# 
  1018  060C                     	;# 
  1019  060D                     	;# 
  1020  060E                     	;# 
  1021  060F                     	;# 
  1022  0610                     	;# 
  1023  0611                     	;# 
  1024  0612                     	;# 
  1025  0613                     	;# 
  1026  0614                     	;# 
  1027  0616                     	;# 
  1028  0617                     	;# 
  1029  0618                     	;# 
  1030  0619                     	;# 
  1031  061A                     	;# 
  1032  061B                     	;# 
  1033  061C                     	;# 
  1034  061D                     	;# 
  1035  061E                     	;# 
  1036  068C                     	;# 
  1037  068D                     	;# 
  1038  068E                     	;# 
  1039  068F                     	;# 
  1040  0690                     	;# 
  1041  0691                     	;# 
  1042  0692                     	;# 
  1043  0693                     	;# 
  1044  0694                     	;# 
  1045  070C                     	;# 
  1046  070D                     	;# 
  1047  070E                     	;# 
  1048  070F                     	;# 
  1049  0710                     	;# 
  1050  0711                     	;# 
  1051  0712                     	;# 
  1052  0713                     	;# 
  1053  0714                     	;# 
  1054  0716                     	;# 
  1055  0717                     	;# 
  1056  0718                     	;# 
  1057  0719                     	;# 
  1058  071A                     	;# 
  1059  071B                     	;# 
  1060  071C                     	;# 
  1061  071D                     	;# 
  1062  071E                     	;# 
  1063  0796                     	;# 
  1064  0797                     	;# 
  1065  0798                     	;# 
  1066  0799                     	;# 
  1067  079A                     	;# 
  1068  079B                     	;# 
  1069  080C                     	;# 
  1070  080D                     	;# 
  1071  080E                     	;# 
  1072  080F                     	;# 
  1073  0810                     	;# 
  1074  0811                     	;# 
  1075  0812                     	;# 
  1076  0813                     	;# 
  1077  0814                     	;# 
  1078  081A                     	;# 
  1079  081B                     	;# 
  1080  081C                     	;# 
  1081  081D                     	;# 
  1082  081E                     	;# 
  1083  081F                     	;# 
  1084  088C                     	;# 
  1085  088D                     	;# 
  1086  088E                     	;# 
  1087  088F                     	;# 
  1088  0890                     	;# 
  1089  0891                     	;# 
  1090  0892                     	;# 
  1091  0893                     	;# 
  1092  0895                     	;# 
  1093  0896                     	;# 
  1094  0897                     	;# 
  1095  0898                     	;# 
  1096  0899                     	;# 
  1097  089A                     	;# 
  1098  089B                     	;# 
  1099  090C                     	;# 
  1100  090E                     	;# 
  1101  090F                     	;# 
  1102  091F                     	;# 
  1103  091F                     	;# 
  1104  098F                     	;# 
  1105  098F                     	;# 
  1106  0990                     	;# 
  1107  0991                     	;# 
  1108  0992                     	;# 
  1109  0993                     	;# 
  1110  0994                     	;# 
  1111  0995                     	;# 
  1112  0996                     	;# 
  1113  0997                     	;# 
  1114  0E0F                     	;# 
  1115  0E10                     	;# 
  1116  0E11                     	;# 
  1117  0E12                     	;# 
  1118  0E13                     	;# 
  1119  0E14                     	;# 
  1120  0E15                     	;# 
  1121  0E16                     	;# 
  1122  0E17                     	;# 
  1123  0E18                     	;# 
  1124  0E19                     	;# 
  1125  0E1A                     	;# 
  1126  0E1B                     	;# 
  1127  0E1C                     	;# 
  1128  0E1D                     	;# 
  1129  0E1E                     	;# 
  1130  0E1F                     	;# 
  1131  0E20                     	;# 
  1132  0E21                     	;# 
  1133  0E22                     	;# 
  1134  0E23                     	;# 
  1135  0E24                     	;# 
  1136  0E25                     	;# 
  1137  0E26                     	;# 
  1138  0E27                     	;# 
  1139  0E28                     	;# 
  1140  0E29                     	;# 
  1141  0E2A                     	;# 
  1142  0E2B                     	;# 
  1143  0E2C                     	;# 
  1144  0E2D                     	;# 
  1145  0E2E                     	;# 
  1146  0E2F                     	;# 
  1147  0E30                     	;# 
  1148  0E31                     	;# 
  1149  0E32                     	;# 
  1150  0E33                     	;# 
  1151  0E34                     	;# 
  1152  0E35                     	;# 
  1153  0E36                     	;# 
  1154  0E37                     	;# 
  1155  0E8F                     	;# 
  1156  0E90                     	;# 
  1157  0E91                     	;# 
  1158  0E92                     	;# 
  1159  0E93                     	;# 
  1160  0E94                     	;# 
  1161  0E95                     	;# 
  1162  0E96                     	;# 
  1163  0E97                     	;# 
  1164  0E9C                     	;# 
  1165  0E9D                     	;# 
  1166  0E9E                     	;# 
  1167  0EA1                     	;# 
  1168  0EA2                     	;# 
  1169  0EA3                     	;# 
  1170  0EA4                     	;# 
  1171  0EA5                     	;# 
  1172  0EA9                     	;# 
  1173  0EAA                     	;# 
  1174  0EAB                     	;# 
  1175  0EAC                     	;# 
  1176  0EB1                     	;# 
  1177  0EB2                     	;# 
  1178  0EB3                     	;# 
  1179  0EB8                     	;# 
  1180  0EB9                     	;# 
  1181  0EBA                     	;# 
  1182  0EBB                     	;# 
  1183  0EBC                     	;# 
  1184  0EBD                     	;# 
  1185  0EBE                     	;# 
  1186  0EC3                     	;# 
  1187  0EC5                     	;# 
  1188  0EC6                     	;# 
  1189  0EC7                     	;# 
  1190  0EC8                     	;# 
  1191  0EC9                     	;# 
  1192  0ECA                     	;# 
  1193  0ECB                     	;# 
  1194  0ECC                     	;# 
  1195  0F10                     	;# 
  1196  0F11                     	;# 
  1197  0F12                     	;# 
  1198  0F13                     	;# 
  1199  0F14                     	;# 
  1200  0F15                     	;# 
  1201  0F16                     	;# 
  1202  0F17                     	;# 
  1203  0F18                     	;# 
  1204  0F19                     	;# 
  1205  0F1A                     	;# 
  1206  0F1B                     	;# 
  1207  0F1C                     	;# 
  1208  0F1D                     	;# 
  1209  0F1E                     	;# 
  1210  0F1F                     	;# 
  1211  0F20                     	;# 
  1212  0F21                     	;# 
  1213  0F22                     	;# 
  1214  0F23                     	;# 
  1215  0F24                     	;# 
  1216  0F25                     	;# 
  1217  0F26                     	;# 
  1218  0F27                     	;# 
  1219  0F28                     	;# 
  1220  0F29                     	;# 
  1221  0F2A                     	;# 
  1222  0F2B                     	;# 
  1223  0F2C                     	;# 
  1224  0F2D                     	;# 
  1225  0F2E                     	;# 
  1226  0F2F                     	;# 
  1227  0F30                     	;# 
  1228  0F31                     	;# 
  1229  0F32                     	;# 
  1230  0F38                     	;# 
  1231  0F39                     	;# 
  1232  0F3A                     	;# 
  1233  0F3B                     	;# 
  1234  0F3C                     	;# 
  1235  0F3D                     	;# 
  1236  0F3E                     	;# 
  1237  0F3F                     	;# 
  1238  0F40                     	;# 
  1239  0F41                     	;# 
  1240  0F43                     	;# 
  1241  0F44                     	;# 
  1242  0F45                     	;# 
  1243  0F46                     	;# 
  1244  0F47                     	;# 
  1245  0F48                     	;# 
  1246  0F49                     	;# 
  1247  0F4A                     	;# 
  1248  0F4B                     	;# 
  1249  0F4C                     	;# 
  1250  0F4E                     	;# 
  1251  0F4F                     	;# 
  1252  0F50                     	;# 
  1253  0F51                     	;# 
  1254  0F52                     	;# 
  1255  0F53                     	;# 
  1256  0F54                     	;# 
  1257  0F55                     	;# 
  1258  0F56                     	;# 
  1259  0F57                     	;# 
  1260  0F59                     	;# 
  1261  0F5A                     	;# 
  1262  0F5B                     	;# 
  1263  0F5C                     	;# 
  1264  0F5D                     	;# 
  1265  0F61                     	;# 
  1266  0F62                     	;# 
  1267  0F64                     	;# 
  1268  0F65                     	;# 
  1269  0F66                     	;# 
  1270  0F67                     	;# 
  1271  0F68                     	;# 
  1272  0F69                     	;# 
  1273  0F6A                     	;# 
  1274  0F6B                     	;# 
  1275  0F6C                     	;# 
  1276  0F6D                     	;# 
  1277  0FE4                     	;# 
  1278  0FE5                     	;# 
  1279  0FE6                     	;# 
  1280  0FE7                     	;# 
  1281  0FE8                     	;# 
  1282  0FE9                     	;# 
  1283  0FEA                     	;# 
  1284  0FEB                     	;# 
  1285  0FED                     	;# 
  1286  0FEE                     	;# 
  1287  0FEF                     	;# 
  1288  0000                     	;# 
  1289  0001                     	;# 
  1290  0002                     	;# 
  1291  0003                     	;# 
  1292  0004                     	;# 
  1293  0005                     	;# 
  1294  0006                     	;# 
  1295  0007                     	;# 
  1296  0008                     	;# 
  1297  0009                     	;# 
  1298  000A                     	;# 
  1299  000B                     	;# 
  1300  000C                     	;# 
  1301  000D                     	;# 
  1302  000E                     	;# 
  1303  000F                     	;# 
  1304  0010                     	;# 
  1305  0011                     	;# 
  1306  0012                     	;# 
  1307  0013                     	;# 
  1308  0014                     	;# 
  1309  0015                     	;# 
  1310  0016                     	;# 
  1311  0017                     	;# 
  1312  0018                     	;# 
  1313  0019                     	;# 
  1314  001A                     	;# 
  1315  001C                     	;# 
  1316  001C                     	;# 
  1317  001D                     	;# 
  1318  001D                     	;# 
  1319  001E                     	;# 
  1320  001F                     	;# 
  1321  008C                     	;# 
  1322  008C                     	;# 
  1323  008D                     	;# 
  1324  008E                     	;# 
  1325  008E                     	;# 
  1326  008F                     	;# 
  1327  0090                     	;# 
  1328  0090                     	;# 
  1329  0091                     	;# 
  1330  0093                     	;# 
  1331  0094                     	;# 
  1332  0095                     	;# 
  1333  0096                     	;# 
  1334  0097                     	;# 
  1335  0098                     	;# 
  1336  0099                     	;# 
  1337  009A                     	;# 
  1338  009B                     	;# 
  1339  009C                     	;# 
  1340  009D                     	;# 
  1341  009E                     	;# 
  1342  010C                     	;# 
  1343  010D                     	;# 
  1344  010E                     	;# 
  1345  010E                     	;# 
  1346  010F                     	;# 
  1347  0110                     	;# 
  1348  0110                     	;# 
  1349  0111                     	;# 
  1350  0112                     	;# 
  1351  0112                     	;# 
  1352  0113                     	;# 
  1353  0114                     	;# 
  1354  0114                     	;# 
  1355  0115                     	;# 
  1356  0116                     	;# 
  1357  0116                     	;# 
  1358  0117                     	;# 
  1359  0119                     	;# 
  1360  0119                     	;# 
  1361  0119                     	;# 
  1362  011A                     	;# 
  1363  011A                     	;# 
  1364  011A                     	;# 
  1365  011B                     	;# 
  1366  011B                     	;# 
  1367  011B                     	;# 
  1368  011B                     	;# 
  1369  011B                     	;# 
  1370  011C                     	;# 
  1371  011C                     	;# 
  1372  011C                     	;# 
  1373  011D                     	;# 
  1374  011D                     	;# 
  1375  011D                     	;# 
  1376  011E                     	;# 
  1377  011E                     	;# 
  1378  011E                     	;# 
  1379  011F                     	;# 
  1380  011F                     	;# 
  1381  011F                     	;# 
  1382  011F                     	;# 
  1383  011F                     	;# 
  1384  018C                     	;# 
  1385  018D                     	;# 
  1386  018E                     	;# 
  1387  018F                     	;# 
  1388  0190                     	;# 
  1389  0191                     	;# 
  1390  0192                     	;# 
  1391  0196                     	;# 
  1392  0197                     	;# 
  1393  0198                     	;# 
  1394  0199                     	;# 
  1395  019A                     	;# 
  1396  019B                     	;# 
  1397  019C                     	;# 
  1398  020C                     	;# 
  1399  020C                     	;# 
  1400  020D                     	;# 
  1401  020E                     	;# 
  1402  020F                     	;# 
  1403  020F                     	;# 
  1404  0210                     	;# 
  1405  0210                     	;# 
  1406  0211                     	;# 
  1407  0211                     	;# 
  1408  0212                     	;# 
  1409  0212                     	;# 
  1410  0213                     	;# 
  1411  0214                     	;# 
  1412  0215                     	;# 
  1413  0215                     	;# 
  1414  0216                     	;# 
  1415  0216                     	;# 
  1416  0217                     	;# 
  1417  0217                     	;# 
  1418  0218                     	;# 
  1419  0218                     	;# 
  1420  0219                     	;# 
  1421  021A                     	;# 
  1422  021B                     	;# 
  1423  021B                     	;# 
  1424  021C                     	;# 
  1425  021C                     	;# 
  1426  021D                     	;# 
  1427  021D                     	;# 
  1428  021E                     	;# 
  1429  021F                     	;# 
  1430  028C                     	;# 
  1431  028C                     	;# 
  1432  028D                     	;# 
  1433  028D                     	;# 
  1434  028E                     	;# 
  1435  028F                     	;# 
  1436  0290                     	;# 
  1437  0290                     	;# 
  1438  0291                     	;# 
  1439  0292                     	;# 
  1440  0292                     	;# 
  1441  0293                     	;# 
  1442  0293                     	;# 
  1443  0294                     	;# 
  1444  0295                     	;# 
  1445  0296                     	;# 
  1446  0296                     	;# 
  1447  0297                     	;# 
  1448  0298                     	;# 
  1449  0298                     	;# 
  1450  0299                     	;# 
  1451  0299                     	;# 
  1452  029A                     	;# 
  1453  029B                     	;# 
  1454  029C                     	;# 
  1455  029C                     	;# 
  1456  029D                     	;# 
  1457  030C                     	;# 
  1458  030C                     	;# 
  1459  030D                     	;# 
  1460  030E                     	;# 
  1461  030F                     	;# 
  1462  0310                     	;# 
  1463  0310                     	;# 
  1464  0311                     	;# 
  1465  0312                     	;# 
  1466  0313                     	;# 
  1467  0314                     	;# 
  1468  0314                     	;# 
  1469  0315                     	;# 
  1470  0316                     	;# 
  1471  0317                     	;# 
  1472  0318                     	;# 
  1473  0318                     	;# 
  1474  0319                     	;# 
  1475  031A                     	;# 
  1476  031B                     	;# 
  1477  031C                     	;# 
  1478  031C                     	;# 
  1479  031D                     	;# 
  1480  031E                     	;# 
  1481  031F                     	;# 
  1482  038C                     	;# 
  1483  038C                     	;# 
  1484  038D                     	;# 
  1485  038E                     	;# 
  1486  0390                     	;# 
  1487  0390                     	;# 
  1488  0391                     	;# 
  1489  0392                     	;# 
  1490  040C                     	;# 
  1491  040D                     	;# 
  1492  040E                     	;# 
  1493  040F                     	;# 
  1494  0410                     	;# 
  1495  0411                     	;# 
  1496  0416                     	;# 
  1497  0416                     	;# 
  1498  0417                     	;# 
  1499  0418                     	;# 
  1500  0418                     	;# 
  1501  0419                     	;# 
  1502  041A                     	;# 
  1503  041A                     	;# 
  1504  041B                     	;# 
  1505  041C                     	;# 
  1506  041C                     	;# 
  1507  041D                     	;# 
  1508  041E                     	;# 
  1509  041F                     	;# 
  1510  048C                     	;# 
  1511  048C                     	;# 
  1512  048D                     	;# 
  1513  048E                     	;# 
  1514  048F                     	;# 
  1515  048F                     	;# 
  1516  0490                     	;# 
  1517  0491                     	;# 
  1518  0492                     	;# 
  1519  0492                     	;# 
  1520  0493                     	;# 
  1521  0494                     	;# 
  1522  0495                     	;# 
  1523  0495                     	;# 
  1524  0496                     	;# 
  1525  0497                     	;# 
  1526  0498                     	;# 
  1527  0499                     	;# 
  1528  049A                     	;# 
  1529  049B                     	;# 
  1530  049C                     	;# 
  1531  049D                     	;# 
  1532  050C                     	;# 
  1533  050C                     	;# 
  1534  050D                     	;# 
  1535  050E                     	;# 
  1536  050F                     	;# 
  1537  050F                     	;# 
  1538  0510                     	;# 
  1539  0511                     	;# 
  1540  0512                     	;# 
  1541  0512                     	;# 
  1542  0513                     	;# 
  1543  0514                     	;# 
  1544  0515                     	;# 
  1545  0515                     	;# 
  1546  0516                     	;# 
  1547  0517                     	;# 
  1548  0518                     	;# 
  1549  0519                     	;# 
  1550  051A                     	;# 
  1551  051B                     	;# 
  1552  051C                     	;# 
  1553  051D                     	;# 
  1554  058C                     	;# 
  1555  058C                     	;# 
  1556  058D                     	;# 
  1557  058E                     	;# 
  1558  058F                     	;# 
  1559  058F                     	;# 
  1560  0590                     	;# 
  1561  0591                     	;# 
  1562  0592                     	;# 
  1563  0593                     	;# 
  1564  060C                     	;# 
  1565  060D                     	;# 
  1566  060E                     	;# 
  1567  060F                     	;# 
  1568  0610                     	;# 
  1569  0611                     	;# 
  1570  0612                     	;# 
  1571  0613                     	;# 
  1572  0614                     	;# 
  1573  0616                     	;# 
  1574  0617                     	;# 
  1575  0618                     	;# 
  1576  0619                     	;# 
  1577  061A                     	;# 
  1578  061B                     	;# 
  1579  061C                     	;# 
  1580  061D                     	;# 
  1581  061E                     	;# 
  1582  068C                     	;# 
  1583  068D                     	;# 
  1584  068E                     	;# 
  1585  068F                     	;# 
  1586  0690                     	;# 
  1587  0691                     	;# 
  1588  0692                     	;# 
  1589  0693                     	;# 
  1590  0694                     	;# 
  1591  070C                     	;# 
  1592  070D                     	;# 
  1593  070E                     	;# 
  1594  070F                     	;# 
  1595  0710                     	;# 
  1596  0711                     	;# 
  1597  0712                     	;# 
  1598  0713                     	;# 
  1599  0714                     	;# 
  1600  0716                     	;# 
  1601  0717                     	;# 
  1602  0718                     	;# 
  1603  0719                     	;# 
  1604  071A                     	;# 
  1605  071B                     	;# 
  1606  071C                     	;# 
  1607  071D                     	;# 
  1608  071E                     	;# 
  1609  0796                     	;# 
  1610  0797                     	;# 
  1611  0798                     	;# 
  1612  0799                     	;# 
  1613  079A                     	;# 
  1614  079B                     	;# 
  1615  080C                     	;# 
  1616  080D                     	;# 
  1617  080E                     	;# 
  1618  080F                     	;# 
  1619  0810                     	;# 
  1620  0811                     	;# 
  1621  0812                     	;# 
  1622  0813                     	;# 
  1623  0814                     	;# 
  1624  081A                     	;# 
  1625  081B                     	;# 
  1626  081C                     	;# 
  1627  081D                     	;# 
  1628  081E                     	;# 
  1629  081F                     	;# 
  1630  088C                     	;# 
  1631  088D                     	;# 
  1632  088E                     	;# 
  1633  088F                     	;# 
  1634  0890                     	;# 
  1635  0891                     	;# 
  1636  0892                     	;# 
  1637  0893                     	;# 
  1638  0895                     	;# 
  1639  0896                     	;# 
  1640  0897                     	;# 
  1641  0898                     	;# 
  1642  0899                     	;# 
  1643  089A                     	;# 
  1644  089B                     	;# 
  1645  090C                     	;# 
  1646  090E                     	;# 
  1647  090F                     	;# 
  1648  091F                     	;# 
  1649  091F                     	;# 
  1650  098F                     	;# 
  1651  098F                     	;# 
  1652  0990                     	;# 
  1653  0991                     	;# 
  1654  0992                     	;# 
  1655  0993                     	;# 
  1656  0994                     	;# 
  1657  0995                     	;# 
  1658  0996                     	;# 
  1659  0997                     	;# 
  1660  0E0F                     	;# 
  1661  0E10                     	;# 
  1662  0E11                     	;# 
  1663  0E12                     	;# 
  1664  0E13                     	;# 
  1665  0E14                     	;# 
  1666  0E15                     	;# 
  1667  0E16                     	;# 
  1668  0E17                     	;# 
  1669  0E18                     	;# 
  1670  0E19                     	;# 
  1671  0E1A                     	;# 
  1672  0E1B                     	;# 
  1673  0E1C                     	;# 
  1674  0E1D                     	;# 
  1675  0E1E                     	;# 
  1676  0E1F                     	;# 
  1677  0E20                     	;# 
  1678  0E21                     	;# 
  1679  0E22                     	;# 
  1680  0E23                     	;# 
  1681  0E24                     	;# 
  1682  0E25                     	;# 
  1683  0E26                     	;# 
  1684  0E27                     	;# 
  1685  0E28                     	;# 
  1686  0E29                     	;# 
  1687  0E2A                     	;# 
  1688  0E2B                     	;# 
  1689  0E2C                     	;# 
  1690  0E2D                     	;# 
  1691  0E2E                     	;# 
  1692  0E2F                     	;# 
  1693  0E30                     	;# 
  1694  0E31                     	;# 
  1695  0E32                     	;# 
  1696  0E33                     	;# 
  1697  0E34                     	;# 
  1698  0E35                     	;# 
  1699  0E36                     	;# 
  1700  0E37                     	;# 
  1701  0E8F                     	;# 
  1702  0E90                     	;# 
  1703  0E91                     	;# 
  1704  0E92                     	;# 
  1705  0E93                     	;# 
  1706  0E94                     	;# 
  1707  0E95                     	;# 
  1708  0E96                     	;# 
  1709  0E97                     	;# 
  1710  0E9C                     	;# 
  1711  0E9D                     	;# 
  1712  0E9E                     	;# 
  1713  0EA1                     	;# 
  1714  0EA2                     	;# 
  1715  0EA3                     	;# 
  1716  0EA4                     	;# 
  1717  0EA5                     	;# 
  1718  0EA9                     	;# 
  1719  0EAA                     	;# 
  1720  0EAB                     	;# 
  1721  0EAC                     	;# 
  1722  0EB1                     	;# 
  1723  0EB2                     	;# 
  1724  0EB3                     	;# 
  1725  0EB8                     	;# 
  1726  0EB9                     	;# 
  1727  0EBA                     	;# 
  1728  0EBB                     	;# 
  1729  0EBC                     	;# 
  1730  0EBD                     	;# 
  1731  0EBE                     	;# 
  1732  0EC3                     	;# 
  1733  0EC5                     	;# 
  1734  0EC6                     	;# 
  1735  0EC7                     	;# 
  1736  0EC8                     	;# 
  1737  0EC9                     	;# 
  1738  0ECA                     	;# 
  1739  0ECB                     	;# 
  1740  0ECC                     	;# 
  1741  0F10                     	;# 
  1742  0F11                     	;# 
  1743  0F12                     	;# 
  1744  0F13                     	;# 
  1745  0F14                     	;# 
  1746  0F15                     	;# 
  1747  0F16                     	;# 
  1748  0F17                     	;# 
  1749  0F18                     	;# 
  1750  0F19                     	;# 
  1751  0F1A                     	;# 
  1752  0F1B                     	;# 
  1753  0F1C                     	;# 
  1754  0F1D                     	;# 
  1755  0F1E                     	;# 
  1756  0F1F                     	;# 
  1757  0F20                     	;# 
  1758  0F21                     	;# 
  1759  0F22                     	;# 
  1760  0F23                     	;# 
  1761  0F24                     	;# 
  1762  0F25                     	;# 
  1763  0F26                     	;# 
  1764  0F27                     	;# 
  1765  0F28                     	;# 
  1766  0F29                     	;# 
  1767  0F2A                     	;# 
  1768  0F2B                     	;# 
  1769  0F2C                     	;# 
  1770  0F2D                     	;# 
  1771  0F2E                     	;# 
  1772  0F2F                     	;# 
  1773  0F30                     	;# 
  1774  0F31                     	;# 
  1775  0F32                     	;# 
  1776  0F38                     	;# 
  1777  0F39                     	;# 
  1778  0F3A                     	;# 
  1779  0F3B                     	;# 
  1780  0F3C                     	;# 
  1781  0F3D                     	;# 
  1782  0F3E                     	;# 
  1783  0F3F                     	;# 
  1784  0F40                     	;# 
  1785  0F41                     	;# 
  1786  0F43                     	;# 
  1787  0F44                     	;# 
  1788  0F45                     	;# 
  1789  0F46                     	;# 
  1790  0F47                     	;# 
  1791  0F48                     	;# 
  1792  0F49                     	;# 
  1793  0F4A                     	;# 
  1794  0F4B                     	;# 
  1795  0F4C                     	;# 
  1796  0F4E                     	;# 
  1797  0F4F                     	;# 
  1798  0F50                     	;# 
  1799  0F51                     	;# 
  1800  0F52                     	;# 
  1801  0F53                     	;# 
  1802  0F54                     	;# 
  1803  0F55                     	;# 
  1804  0F56                     	;# 
  1805  0F57                     	;# 
  1806  0F59                     	;# 
  1807  0F5A                     	;# 
  1808  0F5B                     	;# 
  1809  0F5C                     	;# 
  1810  0F5D                     	;# 
  1811  0F61                     	;# 
  1812  0F62                     	;# 
  1813  0F64                     	;# 
  1814  0F65                     	;# 
  1815  0F66                     	;# 
  1816  0F67                     	;# 
  1817  0F68                     	;# 
  1818  0F69                     	;# 
  1819  0F6A                     	;# 
  1820  0F6B                     	;# 
  1821  0F6C                     	;# 
  1822  0F6D                     	;# 
  1823  0FE4                     	;# 
  1824  0FE5                     	;# 
  1825  0FE6                     	;# 
  1826  0FE7                     	;# 
  1827  0FE8                     	;# 
  1828  0FE9                     	;# 
  1829  0FEA                     	;# 
  1830  0FEB                     	;# 
  1831  0FED                     	;# 
  1832  0FEE                     	;# 
  1833  0FEF                     	;# 
  1834  0000                     	;# 
  1835  0001                     	;# 
  1836  0002                     	;# 
  1837  0003                     	;# 
  1838  0004                     	;# 
  1839  0005                     	;# 
  1840  0006                     	;# 
  1841  0007                     	;# 
  1842  0008                     	;# 
  1843  0009                     	;# 
  1844  000A                     	;# 
  1845  000B                     	;# 
  1846  000C                     	;# 
  1847  000D                     	;# 
  1848  000E                     	;# 
  1849  000F                     	;# 
  1850  0010                     	;# 
  1851  0011                     	;# 
  1852  0012                     	;# 
  1853  0013                     	;# 
  1854  0014                     	;# 
  1855  0015                     	;# 
  1856  0016                     	;# 
  1857  0017                     	;# 
  1858  0018                     	;# 
  1859  0019                     	;# 
  1860  001A                     	;# 
  1861  001C                     	;# 
  1862  001C                     	;# 
  1863  001D                     	;# 
  1864  001D                     	;# 
  1865  001E                     	;# 
  1866  001F                     	;# 
  1867  008C                     	;# 
  1868  008C                     	;# 
  1869  008D                     	;# 
  1870  008E                     	;# 
  1871  008E                     	;# 
  1872  008F                     	;# 
  1873  0090                     	;# 
  1874  0090                     	;# 
  1875  0091                     	;# 
  1876  0093                     	;# 
  1877  0094                     	;# 
  1878  0095                     	;# 
  1879  0096                     	;# 
  1880  0097                     	;# 
  1881  0098                     	;# 
  1882  0099                     	;# 
  1883  009A                     	;# 
  1884  009B                     	;# 
  1885  009C                     	;# 
  1886  009D                     	;# 
  1887  009E                     	;# 
  1888  010C                     	;# 
  1889  010D                     	;# 
  1890  010E                     	;# 
  1891  010E                     	;# 
  1892  010F                     	;# 
  1893  0110                     	;# 
  1894  0110                     	;# 
  1895  0111                     	;# 
  1896  0112                     	;# 
  1897  0112                     	;# 
  1898  0113                     	;# 
  1899  0114                     	;# 
  1900  0114                     	;# 
  1901  0115                     	;# 
  1902  0116                     	;# 
  1903  0116                     	;# 
  1904  0117                     	;# 
  1905  0119                     	;# 
  1906  0119                     	;# 
  1907  0119                     	;# 
  1908  011A                     	;# 
  1909  011A                     	;# 
  1910  011A                     	;# 
  1911  011B                     	;# 
  1912  011B                     	;# 
  1913  011B                     	;# 
  1914  011B                     	;# 
  1915  011B                     	;# 
  1916  011C                     	;# 
  1917  011C                     	;# 
  1918  011C                     	;# 
  1919  011D                     	;# 
  1920  011D                     	;# 
  1921  011D                     	;# 
  1922  011E                     	;# 
  1923  011E                     	;# 
  1924  011E                     	;# 
  1925  011F                     	;# 
  1926  011F                     	;# 
  1927  011F                     	;# 
  1928  011F                     	;# 
  1929  011F                     	;# 
  1930  018C                     	;# 
  1931  018D                     	;# 
  1932  018E                     	;# 
  1933  018F                     	;# 
  1934  0190                     	;# 
  1935  0191                     	;# 
  1936  0192                     	;# 
  1937  0196                     	;# 
  1938  0197                     	;# 
  1939  0198                     	;# 
  1940  0199                     	;# 
  1941  019A                     	;# 
  1942  019B                     	;# 
  1943  019C                     	;# 
  1944  020C                     	;# 
  1945  020C                     	;# 
  1946  020D                     	;# 
  1947  020E                     	;# 
  1948  020F                     	;# 
  1949  020F                     	;# 
  1950  0210                     	;# 
  1951  0210                     	;# 
  1952  0211                     	;# 
  1953  0211                     	;# 
  1954  0212                     	;# 
  1955  0212                     	;# 
  1956  0213                     	;# 
  1957  0214                     	;# 
  1958  0215                     	;# 
  1959  0215                     	;# 
  1960  0216                     	;# 
  1961  0216                     	;# 
  1962  0217                     	;# 
  1963  0217                     	;# 
  1964  0218                     	;# 
  1965  0218                     	;# 
  1966  0219                     	;# 
  1967  021A                     	;# 
  1968  021B                     	;# 
  1969  021B                     	;# 
  1970  021C                     	;# 
  1971  021C                     	;# 
  1972  021D                     	;# 
  1973  021D                     	;# 
  1974  021E                     	;# 
  1975  021F                     	;# 
  1976  028C                     	;# 
  1977  028C                     	;# 
  1978  028D                     	;# 
  1979  028D                     	;# 
  1980  028E                     	;# 
  1981  028F                     	;# 
  1982  0290                     	;# 
  1983  0290                     	;# 
  1984  0291                     	;# 
  1985  0292                     	;# 
  1986  0292                     	;# 
  1987  0293                     	;# 
  1988  0293                     	;# 
  1989  0294                     	;# 
  1990  0295                     	;# 
  1991  0296                     	;# 
  1992  0296                     	;# 
  1993  0297                     	;# 
  1994  0298                     	;# 
  1995  0298                     	;# 
  1996  0299                     	;# 
  1997  0299                     	;# 
  1998  029A                     	;# 
  1999  029B                     	;# 
  2000  029C                     	;# 
  2001  029C                     	;# 
  2002  029D                     	;# 
  2003  030C                     	;# 
  2004  030C                     	;# 
  2005  030D                     	;# 
  2006  030E                     	;# 
  2007  030F                     	;# 
  2008  0310                     	;# 
  2009  0310                     	;# 
  2010  0311                     	;# 
  2011  0312                     	;# 
  2012  0313                     	;# 
  2013  0314                     	;# 
  2014  0314                     	;# 
  2015  0315                     	;# 
  2016  0316                     	;# 
  2017  0317                     	;# 
  2018  0318                     	;# 
  2019  0318                     	;# 
  2020  0319                     	;# 
  2021  031A                     	;# 
  2022  031B                     	;# 
  2023  031C                     	;# 
  2024  031C                     	;# 
  2025  031D                     	;# 
  2026  031E                     	;# 
  2027  031F                     	;# 
  2028  038C                     	;# 
  2029  038C                     	;# 
  2030  038D                     	;# 
  2031  038E                     	;# 
  2032  0390                     	;# 
  2033  0390                     	;# 
  2034  0391                     	;# 
  2035  0392                     	;# 
  2036  040C                     	;# 
  2037  040D                     	;# 
  2038  040E                     	;# 
  2039  040F                     	;# 
  2040  0410                     	;# 
  2041  0411                     	;# 
  2042  0416                     	;# 
  2043  0416                     	;# 
  2044  0417                     	;# 
  2045  0418                     	;# 
  2046  0418                     	;# 
  2047  0419                     	;# 
  2048  041A                     	;# 
  2049  041A                     	;# 
  2050  041B                     	;# 
  2051  041C                     	;# 
  2052  041C                     	;# 
  2053  041D                     	;# 
  2054  041E                     	;# 
  2055  041F                     	;# 
  2056  048C                     	;# 
  2057  048C                     	;# 
  2058  048D                     	;# 
  2059  048E                     	;# 
  2060  048F                     	;# 
  2061  048F                     	;# 
  2062  0490                     	;# 
  2063  0491                     	;# 
  2064  0492                     	;# 
  2065  0492                     	;# 
  2066  0493                     	;# 
  2067  0494                     	;# 
  2068  0495                     	;# 
  2069  0495                     	;# 
  2070  0496                     	;# 
  2071  0497                     	;# 
  2072  0498                     	;# 
  2073  0499                     	;# 
  2074  049A                     	;# 
  2075  049B                     	;# 
  2076  049C                     	;# 
  2077  049D                     	;# 
  2078  050C                     	;# 
  2079  050C                     	;# 
  2080  050D                     	;# 
  2081  050E                     	;# 
  2082  050F                     	;# 
  2083  050F                     	;# 
  2084  0510                     	;# 
  2085  0511                     	;# 
  2086  0512                     	;# 
  2087  0512                     	;# 
  2088  0513                     	;# 
  2089  0514                     	;# 
  2090  0515                     	;# 
  2091  0515                     	;# 
  2092  0516                     	;# 
  2093  0517                     	;# 
  2094  0518                     	;# 
  2095  0519                     	;# 
  2096  051A                     	;# 
  2097  051B                     	;# 
  2098  051C                     	;# 
  2099  051D                     	;# 
  2100  058C                     	;# 
  2101  058C                     	;# 
  2102  058D                     	;# 
  2103  058E                     	;# 
  2104  058F                     	;# 
  2105  058F                     	;# 
  2106  0590                     	;# 
  2107  0591                     	;# 
  2108  0592                     	;# 
  2109  0593                     	;# 
  2110  060C                     	;# 
  2111  060D                     	;# 
  2112  060E                     	;# 
  2113  060F                     	;# 
  2114  0610                     	;# 
  2115  0611                     	;# 
  2116  0612                     	;# 
  2117  0613                     	;# 
  2118  0614                     	;# 
  2119  0616                     	;# 
  2120  0617                     	;# 
  2121  0618                     	;# 
  2122  0619                     	;# 
  2123  061A                     	;# 
  2124  061B                     	;# 
  2125  061C                     	;# 
  2126  061D                     	;# 
  2127  061E                     	;# 
  2128  068C                     	;# 
  2129  068D                     	;# 
  2130  068E                     	;# 
  2131  068F                     	;# 
  2132  0690                     	;# 
  2133  0691                     	;# 
  2134  0692                     	;# 
  2135  0693                     	;# 
  2136  0694                     	;# 
  2137  070C                     	;# 
  2138  070D                     	;# 
  2139  070E                     	;# 
  2140  070F                     	;# 
  2141  0710                     	;# 
  2142  0711                     	;# 
  2143  0712                     	;# 
  2144  0713                     	;# 
  2145  0714                     	;# 
  2146  0716                     	;# 
  2147  0717                     	;# 
  2148  0718                     	;# 
  2149  0719                     	;# 
  2150  071A                     	;# 
  2151  071B                     	;# 
  2152  071C                     	;# 
  2153  071D                     	;# 
  2154  071E                     	;# 
  2155  0796                     	;# 
  2156  0797                     	;# 
  2157  0798                     	;# 
  2158  0799                     	;# 
  2159  079A                     	;# 
  2160  079B                     	;# 
  2161  080C                     	;# 
  2162  080D                     	;# 
  2163  080E                     	;# 
  2164  080F                     	;# 
  2165  0810                     	;# 
  2166  0811                     	;# 
  2167  0812                     	;# 
  2168  0813                     	;# 
  2169  0814                     	;# 
  2170  081A                     	;# 
  2171  081B                     	;# 
  2172  081C                     	;# 
  2173  081D                     	;# 
  2174  081E                     	;# 
  2175  081F                     	;# 
  2176  088C                     	;# 
  2177  088D                     	;# 
  2178  088E                     	;# 
  2179  088F                     	;# 
  2180  0890                     	;# 
  2181  0891                     	;# 
  2182  0892                     	;# 
  2183  0893                     	;# 
  2184  0895                     	;# 
  2185  0896                     	;# 
  2186  0897                     	;# 
  2187  0898                     	;# 
  2188  0899                     	;# 
  2189  089A                     	;# 
  2190  089B                     	;# 
  2191  090C                     	;# 
  2192  090E                     	;# 
  2193  090F                     	;# 
  2194  091F                     	;# 
  2195  091F                     	;# 
  2196  098F                     	;# 
  2197  098F                     	;# 
  2198  0990                     	;# 
  2199  0991                     	;# 
  2200  0992                     	;# 
  2201  0993                     	;# 
  2202  0994                     	;# 
  2203  0995                     	;# 
  2204  0996                     	;# 
  2205  0997                     	;# 
  2206  0E0F                     	;# 
  2207  0E10                     	;# 
  2208  0E11                     	;# 
  2209  0E12                     	;# 
  2210  0E13                     	;# 
  2211  0E14                     	;# 
  2212  0E15                     	;# 
  2213  0E16                     	;# 
  2214  0E17                     	;# 
  2215  0E18                     	;# 
  2216  0E19                     	;# 
  2217  0E1A                     	;# 
  2218  0E1B                     	;# 
  2219  0E1C                     	;# 
  2220  0E1D                     	;# 
  2221  0E1E                     	;# 
  2222  0E1F                     	;# 
  2223  0E20                     	;# 
  2224  0E21                     	;# 
  2225  0E22                     	;# 
  2226  0E23                     	;# 
  2227  0E24                     	;# 
  2228  0E25                     	;# 
  2229  0E26                     	;# 
  2230  0E27                     	;# 
  2231  0E28                     	;# 
  2232  0E29                     	;# 
  2233  0E2A                     	;# 
  2234  0E2B                     	;# 
  2235  0E2C                     	;# 
  2236  0E2D                     	;# 
  2237  0E2E                     	;# 
  2238  0E2F                     	;# 
  2239  0E30                     	;# 
  2240  0E31                     	;# 
  2241  0E32                     	;# 
  2242  0E33                     	;# 
  2243  0E34                     	;# 
  2244  0E35                     	;# 
  2245  0E36                     	;# 
  2246  0E37                     	;# 
  2247  0E8F                     	;# 
  2248  0E90                     	;# 
  2249  0E91                     	;# 
  2250  0E92                     	;# 
  2251  0E93                     	;# 
  2252  0E94                     	;# 
  2253  0E95                     	;# 
  2254  0E96                     	;# 
  2255  0E97                     	;# 
  2256  0E9C                     	;# 
  2257  0E9D                     	;# 
  2258  0E9E                     	;# 
  2259  0EA1                     	;# 
  2260  0EA2                     	;# 
  2261  0EA3                     	;# 
  2262  0EA4                     	;# 
  2263  0EA5                     	;# 
  2264  0EA9                     	;# 
  2265  0EAA                     	;# 
  2266  0EAB                     	;# 
  2267  0EAC                     	;# 
  2268  0EB1                     	;# 
  2269  0EB2                     	;# 
  2270  0EB3                     	;# 
  2271  0EB8                     	;# 
  2272  0EB9                     	;# 
  2273  0EBA                     	;# 
  2274  0EBB                     	;# 
  2275  0EBC                     	;# 
  2276  0EBD                     	;# 
  2277  0EBE                     	;# 
  2278  0EC3                     	;# 
  2279  0EC5                     	;# 
  2280  0EC6                     	;# 
  2281  0EC7                     	;# 
  2282  0EC8                     	;# 
  2283  0EC9                     	;# 
  2284  0ECA                     	;# 
  2285  0ECB                     	;# 
  2286  0ECC                     	;# 
  2287  0F10                     	;# 
  2288  0F11                     	;# 
  2289  0F12                     	;# 
  2290  0F13                     	;# 
  2291  0F14                     	;# 
  2292  0F15                     	;# 
  2293  0F16                     	;# 
  2294  0F17                     	;# 
  2295  0F18                     	;# 
  2296  0F19                     	;# 
  2297  0F1A                     	;# 
  2298  0F1B                     	;# 
  2299  0F1C                     	;# 
  2300  0F1D                     	;# 
  2301  0F1E                     	;# 
  2302  0F1F                     	;# 
  2303  0F20                     	;# 
  2304  0F21                     	;# 
  2305  0F22                     	;# 
  2306  0F23                     	;# 
  2307  0F24                     	;# 
  2308  0F25                     	;# 
  2309  0F26                     	;# 
  2310  0F27                     	;# 
  2311  0F28                     	;# 
  2312  0F29                     	;# 
  2313  0F2A                     	;# 
  2314  0F2B                     	;# 
  2315  0F2C                     	;# 
  2316  0F2D                     	;# 
  2317  0F2E                     	;# 
  2318  0F2F                     	;# 
  2319  0F30                     	;# 
  2320  0F31                     	;# 
  2321  0F32                     	;# 
  2322  0F38                     	;# 
  2323  0F39                     	;# 
  2324  0F3A                     	;# 
  2325  0F3B                     	;# 
  2326  0F3C                     	;# 
  2327  0F3D                     	;# 
  2328  0F3E                     	;# 
  2329  0F3F                     	;# 
  2330  0F40                     	;# 
  2331  0F41                     	;# 
  2332  0F43                     	;# 
  2333  0F44                     	;# 
  2334  0F45                     	;# 
  2335  0F46                     	;# 
  2336  0F47                     	;# 
  2337  0F48                     	;# 
  2338  0F49                     	;# 
  2339  0F4A                     	;# 
  2340  0F4B                     	;# 
  2341  0F4C                     	;# 
  2342  0F4E                     	;# 
  2343  0F4F                     	;# 
  2344  0F50                     	;# 
  2345  0F51                     	;# 
  2346  0F52                     	;# 
  2347  0F53                     	;# 
  2348  0F54                     	;# 
  2349  0F55                     	;# 
  2350  0F56                     	;# 
  2351  0F57                     	;# 
  2352  0F59                     	;# 
  2353  0F5A                     	;# 
  2354  0F5B                     	;# 
  2355  0F5C                     	;# 
  2356  0F5D                     	;# 
  2357  0F61                     	;# 
  2358  0F62                     	;# 
  2359  0F64                     	;# 
  2360  0F65                     	;# 
  2361  0F66                     	;# 
  2362  0F67                     	;# 
  2363  0F68                     	;# 
  2364  0F69                     	;# 
  2365  0F6A                     	;# 
  2366  0F6B                     	;# 
  2367  0F6C                     	;# 
  2368  0F6D                     	;# 
  2369  0FE4                     	;# 
  2370  0FE5                     	;# 
  2371  0FE6                     	;# 
  2372  0FE7                     	;# 
  2373  0FE8                     	;# 
  2374  0FE9                     	;# 
  2375  0FEA                     	;# 
  2376  0FEB                     	;# 
  2377  0FED                     	;# 
  2378  0FEE                     	;# 
  2379  0FEF                     	;# 
  2380  0000                     	;# 
  2381  0001                     	;# 
  2382  0002                     	;# 
  2383  0003                     	;# 
  2384  0004                     	;# 
  2385  0005                     	;# 
  2386  0006                     	;# 
  2387  0007                     	;# 
  2388  0008                     	;# 
  2389  0009                     	;# 
  2390  000A                     	;# 
  2391  000B                     	;# 
  2392  000C                     	;# 
  2393  000D                     	;# 
  2394  000E                     	;# 
  2395  000F                     	;# 
  2396  0010                     	;# 
  2397  0011                     	;# 
  2398  0012                     	;# 
  2399  0013                     	;# 
  2400  0014                     	;# 
  2401  0015                     	;# 
  2402  0016                     	;# 
  2403  0017                     	;# 
  2404  0018                     	;# 
  2405  0019                     	;# 
  2406  001A                     	;# 
  2407  001C                     	;# 
  2408  001C                     	;# 
  2409  001D                     	;# 
  2410  001D                     	;# 
  2411  001E                     	;# 
  2412  001F                     	;# 
  2413  008C                     	;# 
  2414  008C                     	;# 
  2415  008D                     	;# 
  2416  008E                     	;# 
  2417  008E                     	;# 
  2418  008F                     	;# 
  2419  0090                     	;# 
  2420  0090                     	;# 
  2421  0091                     	;# 
  2422  0093                     	;# 
  2423  0094                     	;# 
  2424  0095                     	;# 
  2425  0096                     	;# 
  2426  0097                     	;# 
  2427  0098                     	;# 
  2428  0099                     	;# 
  2429  009A                     	;# 
  2430  009B                     	;# 
  2431  009C                     	;# 
  2432  009D                     	;# 
  2433  009E                     	;# 
  2434  010C                     	;# 
  2435  010D                     	;# 
  2436  010E                     	;# 
  2437  010E                     	;# 
  2438  010F                     	;# 
  2439  0110                     	;# 
  2440  0110                     	;# 
  2441  0111                     	;# 
  2442  0112                     	;# 
  2443  0112                     	;# 
  2444  0113                     	;# 
  2445  0114                     	;# 
  2446  0114                     	;# 
  2447  0115                     	;# 
  2448  0116                     	;# 
  2449  0116                     	;# 
  2450  0117                     	;# 
  2451  0119                     	;# 
  2452  0119                     	;# 
  2453  0119                     	;# 
  2454  011A                     	;# 
  2455  011A                     	;# 
  2456  011A                     	;# 
  2457  011B                     	;# 
  2458  011B                     	;# 
  2459  011B                     	;# 
  2460  011B                     	;# 
  2461  011B                     	;# 
  2462  011C                     	;# 
  2463  011C                     	;# 
  2464  011C                     	;# 
  2465  011D                     	;# 
  2466  011D                     	;# 
  2467  011D                     	;# 
  2468  011E                     	;# 
  2469  011E                     	;# 
  2470  011E                     	;# 
  2471  011F                     	;# 
  2472  011F                     	;# 
  2473  011F                     	;# 
  2474  011F                     	;# 
  2475  011F                     	;# 
  2476  018C                     	;# 
  2477  018D                     	;# 
  2478  018E                     	;# 
  2479  018F                     	;# 
  2480  0190                     	;# 
  2481  0191                     	;# 
  2482  0192                     	;# 
  2483  0196                     	;# 
  2484  0197                     	;# 
  2485  0198                     	;# 
  2486  0199                     	;# 
  2487  019A                     	;# 
  2488  019B                     	;# 
  2489  019C                     	;# 
  2490  020C                     	;# 
  2491  020C                     	;# 
  2492  020D                     	;# 
  2493  020E                     	;# 
  2494  020F                     	;# 
  2495  020F                     	;# 
  2496  0210                     	;# 
  2497  0210                     	;# 
  2498  0211                     	;# 
  2499  0211                     	;# 
  2500  0212                     	;# 
  2501  0212                     	;# 
  2502  0213                     	;# 
  2503  0214                     	;# 
  2504  0215                     	;# 
  2505  0215                     	;# 
  2506  0216                     	;# 
  2507  0216                     	;# 
  2508  0217                     	;# 
  2509  0217                     	;# 
  2510  0218                     	;# 
  2511  0218                     	;# 
  2512  0219                     	;# 
  2513  021A                     	;# 
  2514  021B                     	;# 
  2515  021B                     	;# 
  2516  021C                     	;# 
  2517  021C                     	;# 
  2518  021D                     	;# 
  2519  021D                     	;# 
  2520  021E                     	;# 
  2521  021F                     	;# 
  2522  028C                     	;# 
  2523  028C                     	;# 
  2524  028D                     	;# 
  2525  028D                     	;# 
  2526  028E                     	;# 
  2527  028F                     	;# 
  2528  0290                     	;# 
  2529  0290                     	;# 
  2530  0291                     	;# 
  2531  0292                     	;# 
  2532  0292                     	;# 
  2533  0293                     	;# 
  2534  0293                     	;# 
  2535  0294                     	;# 
  2536  0295                     	;# 
  2537  0296                     	;# 
  2538  0296                     	;# 
  2539  0297                     	;# 
  2540  0298                     	;# 
  2541  0298                     	;# 
  2542  0299                     	;# 
  2543  0299                     	;# 
  2544  029A                     	;# 
  2545  029B                     	;# 
  2546  029C                     	;# 
  2547  029C                     	;# 
  2548  029D                     	;# 
  2549  030C                     	;# 
  2550  030C                     	;# 
  2551  030D                     	;# 
  2552  030E                     	;# 
  2553  030F                     	;# 
  2554  0310                     	;# 
  2555  0310                     	;# 
  2556  0311                     	;# 
  2557  0312                     	;# 
  2558  0313                     	;# 
  2559  0314                     	;# 
  2560  0314                     	;# 
  2561  0315                     	;# 
  2562  0316                     	;# 
  2563  0317                     	;# 
  2564  0318                     	;# 
  2565  0318                     	;# 
  2566  0319                     	;# 
  2567  031A                     	;# 
  2568  031B                     	;# 
  2569  031C                     	;# 
  2570  031C                     	;# 
  2571  031D                     	;# 
  2572  031E                     	;# 
  2573  031F                     	;# 
  2574  038C                     	;# 
  2575  038C                     	;# 
  2576  038D                     	;# 
  2577  038E                     	;# 
  2578  0390                     	;# 
  2579  0390                     	;# 
  2580  0391                     	;# 
  2581  0392                     	;# 
  2582  040C                     	;# 
  2583  040D                     	;# 
  2584  040E                     	;# 
  2585  040F                     	;# 
  2586  0410                     	;# 
  2587  0411                     	;# 
  2588  0416                     	;# 
  2589  0416                     	;# 
  2590  0417                     	;# 
  2591  0418                     	;# 
  2592  0418                     	;# 
  2593  0419                     	;# 
  2594  041A                     	;# 
  2595  041A                     	;# 
  2596  041B                     	;# 
  2597  041C                     	;# 
  2598  041C                     	;# 
  2599  041D                     	;# 
  2600  041E                     	;# 
  2601  041F                     	;# 
  2602  048C                     	;# 
  2603  048C                     	;# 
  2604  048D                     	;# 
  2605  048E                     	;# 
  2606  048F                     	;# 
  2607  048F                     	;# 
  2608  0490                     	;# 
  2609  0491                     	;# 
  2610  0492                     	;# 
  2611  0492                     	;# 
  2612  0493                     	;# 
  2613  0494                     	;# 
  2614  0495                     	;# 
  2615  0495                     	;# 
  2616  0496                     	;# 
  2617  0497                     	;# 
  2618  0498                     	;# 
  2619  0499                     	;# 
  2620  049A                     	;# 
  2621  049B                     	;# 
  2622  049C                     	;# 
  2623  049D                     	;# 
  2624  050C                     	;# 
  2625  050C                     	;# 
  2626  050D                     	;# 
  2627  050E                     	;# 
  2628  050F                     	;# 
  2629  050F                     	;# 
  2630  0510                     	;# 
  2631  0511                     	;# 
  2632  0512                     	;# 
  2633  0512                     	;# 
  2634  0513                     	;# 
  2635  0514                     	;# 
  2636  0515                     	;# 
  2637  0515                     	;# 
  2638  0516                     	;# 
  2639  0517                     	;# 
  2640  0518                     	;# 
  2641  0519                     	;# 
  2642  051A                     	;# 
  2643  051B                     	;# 
  2644  051C                     	;# 
  2645  051D                     	;# 
  2646  058C                     	;# 
  2647  058C                     	;# 
  2648  058D                     	;# 
  2649  058E                     	;# 
  2650  058F                     	;# 
  2651  058F                     	;# 
  2652  0590                     	;# 
  2653  0591                     	;# 
  2654  0592                     	;# 
  2655  0593                     	;# 
  2656  060C                     	;# 
  2657  060D                     	;# 
  2658  060E                     	;# 
  2659  060F                     	;# 
  2660  0610                     	;# 
  2661  0611                     	;# 
  2662  0612                     	;# 
  2663  0613                     	;# 
  2664  0614                     	;# 
  2665  0616                     	;# 
  2666  0617                     	;# 
  2667  0618                     	;# 
  2668  0619                     	;# 
  2669  061A                     	;# 
  2670  061B                     	;# 
  2671  061C                     	;# 
  2672  061D                     	;# 
  2673  061E                     	;# 
  2674  068C                     	;# 
  2675  068D                     	;# 
  2676  068E                     	;# 
  2677  068F                     	;# 
  2678  0690                     	;# 
  2679  0691                     	;# 
  2680  0692                     	;# 
  2681  0693                     	;# 
  2682  0694                     	;# 
  2683  070C                     	;# 
  2684  070D                     	;# 
  2685  070E                     	;# 
  2686  070F                     	;# 
  2687  0710                     	;# 
  2688  0711                     	;# 
  2689  0712                     	;# 
  2690  0713                     	;# 
  2691  0714                     	;# 
  2692  0716                     	;# 
  2693  0717                     	;# 
  2694  0718                     	;# 
  2695  0719                     	;# 
  2696  071A                     	;# 
  2697  071B                     	;# 
  2698  071C                     	;# 
  2699  071D                     	;# 
  2700  071E                     	;# 
  2701  0796                     	;# 
  2702  0797                     	;# 
  2703  0798                     	;# 
  2704  0799                     	;# 
  2705  079A                     	;# 
  2706  079B                     	;# 
  2707  080C                     	;# 
  2708  080D                     	;# 
  2709  080E                     	;# 
  2710  080F                     	;# 
  2711  0810                     	;# 
  2712  0811                     	;# 
  2713  0812                     	;# 
  2714  0813                     	;# 
  2715  0814                     	;# 
  2716  081A                     	;# 
  2717  081B                     	;# 
  2718  081C                     	;# 
  2719  081D                     	;# 
  2720  081E                     	;# 
  2721  081F                     	;# 
  2722  088C                     	;# 
  2723  088D                     	;# 
  2724  088E                     	;# 
  2725  088F                     	;# 
  2726  0890                     	;# 
  2727  0891                     	;# 
  2728  0892                     	;# 
  2729  0893                     	;# 
  2730  0895                     	;# 
  2731  0896                     	;# 
  2732  0897                     	;# 
  2733  0898                     	;# 
  2734  0899                     	;# 
  2735  089A                     	;# 
  2736  089B                     	;# 
  2737  090C                     	;# 
  2738  090E                     	;# 
  2739  090F                     	;# 
  2740  091F                     	;# 
  2741  091F                     	;# 
  2742  098F                     	;# 
  2743  098F                     	;# 
  2744  0990                     	;# 
  2745  0991                     	;# 
  2746  0992                     	;# 
  2747  0993                     	;# 
  2748  0994                     	;# 
  2749  0995                     	;# 
  2750  0996                     	;# 
  2751  0997                     	;# 
  2752  0E0F                     	;# 
  2753  0E10                     	;# 
  2754  0E11                     	;# 
  2755  0E12                     	;# 
  2756  0E13                     	;# 
  2757  0E14                     	;# 
  2758  0E15                     	;# 
  2759  0E16                     	;# 
  2760  0E17                     	;# 
  2761  0E18                     	;# 
  2762  0E19                     	;# 
  2763  0E1A                     	;# 
  2764  0E1B                     	;# 
  2765  0E1C                     	;# 
  2766  0E1D                     	;# 
  2767  0E1E                     	;# 
  2768  0E1F                     	;# 
  2769  0E20                     	;# 
  2770  0E21                     	;# 
  2771  0E22                     	;# 
  2772  0E23                     	;# 
  2773  0E24                     	;# 
  2774  0E25                     	;# 
  2775  0E26                     	;# 
  2776  0E27                     	;# 
  2777  0E28                     	;# 
  2778  0E29                     	;# 
  2779  0E2A                     	;# 
  2780  0E2B                     	;# 
  2781  0E2C                     	;# 
  2782  0E2D                     	;# 
  2783  0E2E                     	;# 
  2784  0E2F                     	;# 
  2785  0E30                     	;# 
  2786  0E31                     	;# 
  2787  0E32                     	;# 
  2788  0E33                     	;# 
  2789  0E34                     	;# 
  2790  0E35                     	;# 
  2791  0E36                     	;# 
  2792  0E37                     	;# 
  2793  0E8F                     	;# 
  2794  0E90                     	;# 
  2795  0E91                     	;# 
  2796  0E92                     	;# 
  2797  0E93                     	;# 
  2798  0E94                     	;# 
  2799  0E95                     	;# 
  2800  0E96                     	;# 
  2801  0E97                     	;# 
  2802  0E9C                     	;# 
  2803  0E9D                     	;# 
  2804  0E9E                     	;# 
  2805  0EA1                     	;# 
  2806  0EA2                     	;# 
  2807  0EA3                     	;# 
  2808  0EA4                     	;# 
  2809  0EA5                     	;# 
  2810  0EA9                     	;# 
  2811  0EAA                     	;# 
  2812  0EAB                     	;# 
  2813  0EAC                     	;# 
  2814  0EB1                     	;# 
  2815  0EB2                     	;# 
  2816  0EB3                     	;# 
  2817  0EB8                     	;# 
  2818  0EB9                     	;# 
  2819  0EBA                     	;# 
  2820  0EBB                     	;# 
  2821  0EBC                     	;# 
  2822  0EBD                     	;# 
  2823  0EBE                     	;# 
  2824  0EC3                     	;# 
  2825  0EC5                     	;# 
  2826  0EC6                     	;# 
  2827  0EC7                     	;# 
  2828  0EC8                     	;# 
  2829  0EC9                     	;# 
  2830  0ECA                     	;# 
  2831  0ECB                     	;# 
  2832  0ECC                     	;# 
  2833  0F10                     	;# 
  2834  0F11                     	;# 
  2835  0F12                     	;# 
  2836  0F13                     	;# 
  2837  0F14                     	;# 
  2838  0F15                     	;# 
  2839  0F16                     	;# 
  2840  0F17                     	;# 
  2841  0F18                     	;# 
  2842  0F19                     	;# 
  2843  0F1A                     	;# 
  2844  0F1B                     	;# 
  2845  0F1C                     	;# 
  2846  0F1D                     	;# 
  2847  0F1E                     	;# 
  2848  0F1F                     	;# 
  2849  0F20                     	;# 
  2850  0F21                     	;# 
  2851  0F22                     	;# 
  2852  0F23                     	;# 
  2853  0F24                     	;# 
  2854  0F25                     	;# 
  2855  0F26                     	;# 
  2856  0F27                     	;# 
  2857  0F28                     	;# 
  2858  0F29                     	;# 
  2859  0F2A                     	;# 
  2860  0F2B                     	;# 
  2861  0F2C                     	;# 
  2862  0F2D                     	;# 
  2863  0F2E                     	;# 
  2864  0F2F                     	;# 
  2865  0F30                     	;# 
  2866  0F31                     	;# 
  2867  0F32                     	;# 
  2868  0F38                     	;# 
  2869  0F39                     	;# 
  2870  0F3A                     	;# 
  2871  0F3B                     	;# 
  2872  0F3C                     	;# 
  2873  0F3D                     	;# 
  2874  0F3E                     	;# 
  2875  0F3F                     	;# 
  2876  0F40                     	;# 
  2877  0F41                     	;# 
  2878  0F43                     	;# 
  2879  0F44                     	;# 
  2880  0F45                     	;# 
  2881  0F46                     	;# 
  2882  0F47                     	;# 
  2883  0F48                     	;# 
  2884  0F49                     	;# 
  2885  0F4A                     	;# 
  2886  0F4B                     	;# 
  2887  0F4C                     	;# 
  2888  0F4E                     	;# 
  2889  0F4F                     	;# 
  2890  0F50                     	;# 
  2891  0F51                     	;# 
  2892  0F52                     	;# 
  2893  0F53                     	;# 
  2894  0F54                     	;# 
  2895  0F55                     	;# 
  2896  0F56                     	;# 
  2897  0F57                     	;# 
  2898  0F59                     	;# 
  2899  0F5A                     	;# 
  2900  0F5B                     	;# 
  2901  0F5C                     	;# 
  2902  0F5D                     	;# 
  2903  0F61                     	;# 
  2904  0F62                     	;# 
  2905  0F64                     	;# 
  2906  0F65                     	;# 
  2907  0F66                     	;# 
  2908  0F67                     	;# 
  2909  0F68                     	;# 
  2910  0F69                     	;# 
  2911  0F6A                     	;# 
  2912  0F6B                     	;# 
  2913  0F6C                     	;# 
  2914  0F6D                     	;# 
  2915  0FE4                     	;# 
  2916  0FE5                     	;# 
  2917  0FE6                     	;# 
  2918  0FE7                     	;# 
  2919  0FE8                     	;# 
  2920  0FE9                     	;# 
  2921  0FEA                     	;# 
  2922  0FEB                     	;# 
  2923  0FED                     	;# 
  2924  0FEE                     	;# 
  2925  0FEF                     	;# 
  2926  0000                     	;# 
  2927  0001                     	;# 
  2928  0002                     	;# 
  2929  0003                     	;# 
  2930  0004                     	;# 
  2931  0005                     	;# 
  2932  0006                     	;# 
  2933  0007                     	;# 
  2934  0008                     	;# 
  2935  0009                     	;# 
  2936  000A                     	;# 
  2937  000B                     	;# 
  2938  000C                     	;# 
  2939  000D                     	;# 
  2940  000E                     	;# 
  2941  000F                     	;# 
  2942  0010                     	;# 
  2943  0011                     	;# 
  2944  0012                     	;# 
  2945  0013                     	;# 
  2946  0014                     	;# 
  2947  0015                     	;# 
  2948  0016                     	;# 
  2949  0017                     	;# 
  2950  0018                     	;# 
  2951  0019                     	;# 
  2952  001A                     	;# 
  2953  001C                     	;# 
  2954  001C                     	;# 
  2955  001D                     	;# 
  2956  001D                     	;# 
  2957  001E                     	;# 
  2958  001F                     	;# 
  2959  008C                     	;# 
  2960  008C                     	;# 
  2961  008D                     	;# 
  2962  008E                     	;# 
  2963  008E                     	;# 
  2964  008F                     	;# 
  2965  0090                     	;# 
  2966  0090                     	;# 
  2967  0091                     	;# 
  2968  0093                     	;# 
  2969  0094                     	;# 
  2970  0095                     	;# 
  2971  0096                     	;# 
  2972  0097                     	;# 
  2973  0098                     	;# 
  2974  0099                     	;# 
  2975  009A                     	;# 
  2976  009B                     	;# 
  2977  009C                     	;# 
  2978  009D                     	;# 
  2979  009E                     	;# 
  2980  010C                     	;# 
  2981  010D                     	;# 
  2982  010E                     	;# 
  2983  010E                     	;# 
  2984  010F                     	;# 
  2985  0110                     	;# 
  2986  0110                     	;# 
  2987  0111                     	;# 
  2988  0112                     	;# 
  2989  0112                     	;# 
  2990  0113                     	;# 
  2991  0114                     	;# 
  2992  0114                     	;# 
  2993  0115                     	;# 
  2994  0116                     	;# 
  2995  0116                     	;# 
  2996  0117                     	;# 
  2997  0119                     	;# 
  2998  0119                     	;# 
  2999  0119                     	;# 
  3000  011A                     	;# 
  3001  011A                     	;# 
  3002  011A                     	;# 
  3003  011B                     	;# 
  3004  011B                     	;# 
  3005  011B                     	;# 
  3006  011B                     	;# 
  3007  011B                     	;# 
  3008  011C                     	;# 
  3009  011C                     	;# 
  3010  011C                     	;# 
  3011  011D                     	;# 
  3012  011D                     	;# 
  3013  011D                     	;# 
  3014  011E                     	;# 
  3015  011E                     	;# 
  3016  011E                     	;# 
  3017  011F                     	;# 
  3018  011F                     	;# 
  3019  011F                     	;# 
  3020  011F                     	;# 
  3021  011F                     	;# 
  3022  018C                     	;# 
  3023  018D                     	;# 
  3024  018E                     	;# 
  3025  018F                     	;# 
  3026  0190                     	;# 
  3027  0191                     	;# 
  3028  0192                     	;# 
  3029  0196                     	;# 
  3030  0197                     	;# 
  3031  0198                     	;# 
  3032  0199                     	;# 
  3033  019A                     	;# 
  3034  019B                     	;# 
  3035  019C                     	;# 
  3036  020C                     	;# 
  3037  020C                     	;# 
  3038  020D                     	;# 
  3039  020E                     	;# 
  3040  020F                     	;# 
  3041  020F                     	;# 
  3042  0210                     	;# 
  3043  0210                     	;# 
  3044  0211                     	;# 
  3045  0211                     	;# 
  3046  0212                     	;# 
  3047  0212                     	;# 
  3048  0213                     	;# 
  3049  0214                     	;# 
  3050  0215                     	;# 
  3051  0215                     	;# 
  3052  0216                     	;# 
  3053  0216                     	;# 
  3054  0217                     	;# 
  3055  0217                     	;# 
  3056  0218                     	;# 
  3057  0218                     	;# 
  3058  0219                     	;# 
  3059  021A                     	;# 
  3060  021B                     	;# 
  3061  021B                     	;# 
  3062  021C                     	;# 
  3063  021C                     	;# 
  3064  021D                     	;# 
  3065  021D                     	;# 
  3066  021E                     	;# 
  3067  021F                     	;# 
  3068  028C                     	;# 
  3069  028C                     	;# 
  3070  028D                     	;# 
  3071  028D                     	;# 
  3072  028E                     	;# 
  3073  028F                     	;# 
  3074  0290                     	;# 
  3075  0290                     	;# 
  3076  0291                     	;# 
  3077  0292                     	;# 
  3078  0292                     	;# 
  3079  0293                     	;# 
  3080  0293                     	;# 
  3081  0294                     	;# 
  3082  0295                     	;# 
  3083  0296                     	;# 
  3084  0296                     	;# 
  3085  0297                     	;# 
  3086  0298                     	;# 
  3087  0298                     	;# 
  3088  0299                     	;# 
  3089  0299                     	;# 
  3090  029A                     	;# 
  3091  029B                     	;# 
  3092  029C                     	;# 
  3093  029C                     	;# 
  3094  029D                     	;# 
  3095  030C                     	;# 
  3096  030C                     	;# 
  3097  030D                     	;# 
  3098  030E                     	;# 
  3099  030F                     	;# 
  3100  0310                     	;# 
  3101  0310                     	;# 
  3102  0311                     	;# 
  3103  0312                     	;# 
  3104  0313                     	;# 
  3105  0314                     	;# 
  3106  0314                     	;# 
  3107  0315                     	;# 
  3108  0316                     	;# 
  3109  0317                     	;# 
  3110  0318                     	;# 
  3111  0318                     	;# 
  3112  0319                     	;# 
  3113  031A                     	;# 
  3114  031B                     	;# 
  3115  031C                     	;# 
  3116  031C                     	;# 
  3117  031D                     	;# 
  3118  031E                     	;# 
  3119  031F                     	;# 
  3120  038C                     	;# 
  3121  038C                     	;# 
  3122  038D                     	;# 
  3123  038E                     	;# 
  3124  0390                     	;# 
  3125  0390                     	;# 
  3126  0391                     	;# 
  3127  0392                     	;# 
  3128  040C                     	;# 
  3129  040D                     	;# 
  3130  040E                     	;# 
  3131  040F                     	;# 
  3132  0410                     	;# 
  3133  0411                     	;# 
  3134  0416                     	;# 
  3135  0416                     	;# 
  3136  0417                     	;# 
  3137  0418                     	;# 
  3138  0418                     	;# 
  3139  0419                     	;# 
  3140  041A                     	;# 
  3141  041A                     	;# 
  3142  041B                     	;# 
  3143  041C                     	;# 
  3144  041C                     	;# 
  3145  041D                     	;# 
  3146  041E                     	;# 
  3147  041F                     	;# 
  3148  048C                     	;# 
  3149  048C                     	;# 
  3150  048D                     	;# 
  3151  048E                     	;# 
  3152  048F                     	;# 
  3153  048F                     	;# 
  3154  0490                     	;# 
  3155  0491                     	;# 
  3156  0492                     	;# 
  3157  0492                     	;# 
  3158  0493                     	;# 
  3159  0494                     	;# 
  3160  0495                     	;# 
  3161  0495                     	;# 
  3162  0496                     	;# 
  3163  0497                     	;# 
  3164  0498                     	;# 
  3165  0499                     	;# 
  3166  049A                     	;# 
  3167  049B                     	;# 
  3168  049C                     	;# 
  3169  049D                     	;# 
  3170  050C                     	;# 
  3171  050C                     	;# 
  3172  050D                     	;# 
  3173  050E                     	;# 
  3174  050F                     	;# 
  3175  050F                     	;# 
  3176  0510                     	;# 
  3177  0511                     	;# 
  3178  0512                     	;# 
  3179  0512                     	;# 
  3180  0513                     	;# 
  3181  0514                     	;# 
  3182  0515                     	;# 
  3183  0515                     	;# 
  3184  0516                     	;# 
  3185  0517                     	;# 
  3186  0518                     	;# 
  3187  0519                     	;# 
  3188  051A                     	;# 
  3189  051B                     	;# 
  3190  051C                     	;# 
  3191  051D                     	;# 
  3192  058C                     	;# 
  3193  058C                     	;# 
  3194  058D                     	;# 
  3195  058E                     	;# 
  3196  058F                     	;# 
  3197  058F                     	;# 
  3198  0590                     	;# 
  3199  0591                     	;# 
  3200  0592                     	;# 
  3201  0593                     	;# 
  3202  060C                     	;# 
  3203  060D                     	;# 
  3204  060E                     	;# 
  3205  060F                     	;# 
  3206  0610                     	;# 
  3207  0611                     	;# 
  3208  0612                     	;# 
  3209  0613                     	;# 
  3210  0614                     	;# 
  3211  0616                     	;# 
  3212  0617                     	;# 
  3213  0618                     	;# 
  3214  0619                     	;# 
  3215  061A                     	;# 
  3216  061B                     	;# 
  3217  061C                     	;# 
  3218  061D                     	;# 
  3219  061E                     	;# 
  3220  068C                     	;# 
  3221  068D                     	;# 
  3222  068E                     	;# 
  3223  068F                     	;# 
  3224  0690                     	;# 
  3225  0691                     	;# 
  3226  0692                     	;# 
  3227  0693                     	;# 
  3228  0694                     	;# 
  3229  070C                     	;# 
  3230  070D                     	;# 
  3231  070E                     	;# 
  3232  070F                     	;# 
  3233  0710                     	;# 
  3234  0711                     	;# 
  3235  0712                     	;# 
  3236  0713                     	;# 
  3237  0714                     	;# 
  3238  0716                     	;# 
  3239  0717                     	;# 
  3240  0718                     	;# 
  3241  0719                     	;# 
  3242  071A                     	;# 
  3243  071B                     	;# 
  3244  071C                     	;# 
  3245  071D                     	;# 
  3246  071E                     	;# 
  3247  0796                     	;# 
  3248  0797                     	;# 
  3249  0798                     	;# 
  3250  0799                     	;# 
  3251  079A                     	;# 
  3252  079B                     	;# 
  3253  080C                     	;# 
  3254  080D                     	;# 
  3255  080E                     	;# 
  3256  080F                     	;# 
  3257  0810                     	;# 
  3258  0811                     	;# 
  3259  0812                     	;# 
  3260  0813                     	;# 
  3261  0814                     	;# 
  3262  081A                     	;# 
  3263  081B                     	;# 
  3264  081C                     	;# 
  3265  081D                     	;# 
  3266  081E                     	;# 
  3267  081F                     	;# 
  3268  088C                     	;# 
  3269  088D                     	;# 
  3270  088E                     	;# 
  3271  088F                     	;# 
  3272  0890                     	;# 
  3273  0891                     	;# 
  3274  0892                     	;# 
  3275  0893                     	;# 
  3276  0895                     	;# 
  3277  0896                     	;# 
  3278  0897                     	;# 
  3279  0898                     	;# 
  3280  0899                     	;# 
  3281  089A                     	;# 
  3282  089B                     	;# 
  3283  090C                     	;# 
  3284  090E                     	;# 
  3285  090F                     	;# 
  3286  091F                     	;# 
  3287  091F                     	;# 
  3288  098F                     	;# 
  3289  098F                     	;# 
  3290  0990                     	;# 
  3291  0991                     	;# 
  3292  0992                     	;# 
  3293  0993                     	;# 
  3294  0994                     	;# 
  3295  0995                     	;# 
  3296  0996                     	;# 
  3297  0997                     	;# 
  3298  0E0F                     	;# 
  3299  0E10                     	;# 
  3300  0E11                     	;# 
  3301  0E12                     	;# 
  3302  0E13                     	;# 
  3303  0E14                     	;# 
  3304  0E15                     	;# 
  3305  0E16                     	;# 
  3306  0E17                     	;# 
  3307  0E18                     	;# 
  3308  0E19                     	;# 
  3309  0E1A                     	;# 
  3310  0E1B                     	;# 
  3311  0E1C                     	;# 
  3312  0E1D                     	;# 
  3313  0E1E                     	;# 
  3314  0E1F                     	;# 
  3315  0E20                     	;# 
  3316  0E21                     	;# 
  3317  0E22                     	;# 
  3318  0E23                     	;# 
  3319  0E24                     	;# 
  3320  0E25                     	;# 
  3321  0E26                     	;# 
  3322  0E27                     	;# 
  3323  0E28                     	;# 
  3324  0E29                     	;# 
  3325  0E2A                     	;# 
  3326  0E2B                     	;# 
  3327  0E2C                     	;# 
  3328  0E2D                     	;# 
  3329  0E2E                     	;# 
  3330  0E2F                     	;# 
  3331  0E30                     	;# 
  3332  0E31                     	;# 
  3333  0E32                     	;# 
  3334  0E33                     	;# 
  3335  0E34                     	;# 
  3336  0E35                     	;# 
  3337  0E36                     	;# 
  3338  0E37                     	;# 
  3339  0E8F                     	;# 
  3340  0E90                     	;# 
  3341  0E91                     	;# 
  3342  0E92                     	;# 
  3343  0E93                     	;# 
  3344  0E94                     	;# 
  3345  0E95                     	;# 
  3346  0E96                     	;# 
  3347  0E97                     	;# 
  3348  0E9C                     	;# 
  3349  0E9D                     	;# 
  3350  0E9E                     	;# 
  3351  0EA1                     	;# 
  3352  0EA2                     	;# 
  3353  0EA3                     	;# 
  3354  0EA4                     	;# 
  3355  0EA5                     	;# 
  3356  0EA9                     	;# 
  3357  0EAA                     	;# 
  3358  0EAB                     	;# 
  3359  0EAC                     	;# 
  3360  0EB1                     	;# 
  3361  0EB2                     	;# 
  3362  0EB3                     	;# 
  3363  0EB8                     	;# 
  3364  0EB9                     	;# 
  3365  0EBA                     	;# 
  3366  0EBB                     	;# 
  3367  0EBC                     	;# 
  3368  0EBD                     	;# 
  3369  0EBE                     	;# 
  3370  0EC3                     	;# 
  3371  0EC5                     	;# 
  3372  0EC6                     	;# 
  3373  0EC7                     	;# 
  3374  0EC8                     	;# 
  3375  0EC9                     	;# 
  3376  0ECA                     	;# 
  3377  0ECB                     	;# 
  3378  0ECC                     	;# 
  3379  0F10                     	;# 
  3380  0F11                     	;# 
  3381  0F12                     	;# 
  3382  0F13                     	;# 
  3383  0F14                     	;# 
  3384  0F15                     	;# 
  3385  0F16                     	;# 
  3386  0F17                     	;# 
  3387  0F18                     	;# 
  3388  0F19                     	;# 
  3389  0F1A                     	;# 
  3390  0F1B                     	;# 
  3391  0F1C                     	;# 
  3392  0F1D                     	;# 
  3393  0F1E                     	;# 
  3394  0F1F                     	;# 
  3395  0F20                     	;# 
  3396  0F21                     	;# 
  3397  0F22                     	;# 
  3398  0F23                     	;# 
  3399  0F24                     	;# 
  3400  0F25                     	;# 
  3401  0F26                     	;# 
  3402  0F27                     	;# 
  3403  0F28                     	;# 
  3404  0F29                     	;# 
  3405  0F2A                     	;# 
  3406  0F2B                     	;# 
  3407  0F2C                     	;# 
  3408  0F2D                     	;# 
  3409  0F2E                     	;# 
  3410  0F2F                     	;# 
  3411  0F30                     	;# 
  3412  0F31                     	;# 
  3413  0F32                     	;# 
  3414  0F38                     	;# 
  3415  0F39                     	;# 
  3416  0F3A                     	;# 
  3417  0F3B                     	;# 
  3418  0F3C                     	;# 
  3419  0F3D                     	;# 
  3420  0F3E                     	;# 
  3421  0F3F                     	;# 
  3422  0F40                     	;# 
  3423  0F41                     	;# 
  3424  0F43                     	;# 
  3425  0F44                     	;# 
  3426  0F45                     	;# 
  3427  0F46                     	;# 
  3428  0F47                     	;# 
  3429  0F48                     	;# 
  3430  0F49                     	;# 
  3431  0F4A                     	;# 
  3432  0F4B                     	;# 
  3433  0F4C                     	;# 
  3434  0F4E                     	;# 
  3435  0F4F                     	;# 
  3436  0F50                     	;# 
  3437  0F51                     	;# 
  3438  0F52                     	;# 
  3439  0F53                     	;# 
  3440  0F54                     	;# 
  3441  0F55                     	;# 
  3442  0F56                     	;# 
  3443  0F57                     	;# 
  3444  0F59                     	;# 
  3445  0F5A                     	;# 
  3446  0F5B                     	;# 
  3447  0F5C                     	;# 
  3448  0F5D                     	;# 
  3449  0F61                     	;# 
  3450  0F62                     	;# 
  3451  0F64                     	;# 
  3452  0F65                     	;# 
  3453  0F66                     	;# 
  3454  0F67                     	;# 
  3455  0F68                     	;# 
  3456  0F69                     	;# 
  3457  0F6A                     	;# 
  3458  0F6B                     	;# 
  3459  0F6C                     	;# 
  3460  0F6D                     	;# 
  3461  0FE4                     	;# 
  3462  0FE5                     	;# 
  3463  0FE6                     	;# 
  3464  0FE7                     	;# 
  3465  0FE8                     	;# 
  3466  0FE9                     	;# 
  3467  0FEA                     	;# 
  3468  0FEB                     	;# 
  3469  0FED                     	;# 
  3470  0FEE                     	;# 
  3471  0FEF                     	;# 
  3472  0000                     	;# 
  3473  0001                     	;# 
  3474  0002                     	;# 
  3475  0003                     	;# 
  3476  0004                     	;# 
  3477  0005                     	;# 
  3478  0006                     	;# 
  3479  0007                     	;# 
  3480  0008                     	;# 
  3481  0009                     	;# 
  3482  000A                     	;# 
  3483  000B                     	;# 
  3484  000C                     	;# 
  3485  000D                     	;# 
  3486  000E                     	;# 
  3487  000F                     	;# 
  3488  0010                     	;# 
  3489  0011                     	;# 
  3490  0012                     	;# 
  3491  0013                     	;# 
  3492  0014                     	;# 
  3493  0015                     	;# 
  3494  0016                     	;# 
  3495  0017                     	;# 
  3496  0018                     	;# 
  3497  0019                     	;# 
  3498  001A                     	;# 
  3499  001C                     	;# 
  3500  001C                     	;# 
  3501  001D                     	;# 
  3502  001D                     	;# 
  3503  001E                     	;# 
  3504  001F                     	;# 
  3505  008C                     	;# 
  3506  008C                     	;# 
  3507  008D                     	;# 
  3508  008E                     	;# 
  3509  008E                     	;# 
  3510  008F                     	;# 
  3511  0090                     	;# 
  3512  0090                     	;# 
  3513  0091                     	;# 
  3514  0093                     	;# 
  3515  0094                     	;# 
  3516  0095                     	;# 
  3517  0096                     	;# 
  3518  0097                     	;# 
  3519  0098                     	;# 
  3520  0099                     	;# 
  3521  009A                     	;# 
  3522  009B                     	;# 
  3523  009C                     	;# 
  3524  009D                     	;# 
  3525  009E                     	;# 
  3526  010C                     	;# 
  3527  010D                     	;# 
  3528  010E                     	;# 
  3529  010E                     	;# 
  3530  010F                     	;# 
  3531  0110                     	;# 
  3532  0110                     	;# 
  3533  0111                     	;# 
  3534  0112                     	;# 
  3535  0112                     	;# 
  3536  0113                     	;# 
  3537  0114                     	;# 
  3538  0114                     	;# 
  3539  0115                     	;# 
  3540  0116                     	;# 
  3541  0116                     	;# 
  3542  0117                     	;# 
  3543  0119                     	;# 
  3544  0119                     	;# 
  3545  0119                     	;# 
  3546  011A                     	;# 
  3547  011A                     	;# 
  3548  011A                     	;# 
  3549  011B                     	;# 
  3550  011B                     	;# 
  3551  011B                     	;# 
  3552  011B                     	;# 
  3553  011B                     	;# 
  3554  011C                     	;# 
  3555  011C                     	;# 
  3556  011C                     	;# 
  3557  011D                     	;# 
  3558  011D                     	;# 
  3559  011D                     	;# 
  3560  011E                     	;# 
  3561  011E                     	;# 
  3562  011E                     	;# 
  3563  011F                     	;# 
  3564  011F                     	;# 
  3565  011F                     	;# 
  3566  011F                     	;# 
  3567  011F                     	;# 
  3568  018C                     	;# 
  3569  018D                     	;# 
  3570  018E                     	;# 
  3571  018F                     	;# 
  3572  0190                     	;# 
  3573  0191                     	;# 
  3574  0192                     	;# 
  3575  0196                     	;# 
  3576  0197                     	;# 
  3577  0198                     	;# 
  3578  0199                     	;# 
  3579  019A                     	;# 
  3580  019B                     	;# 
  3581  019C                     	;# 
  3582  020C                     	;# 
  3583  020C                     	;# 
  3584  020D                     	;# 
  3585  020E                     	;# 
  3586  020F                     	;# 
  3587  020F                     	;# 
  3588  0210                     	;# 
  3589  0210                     	;# 
  3590  0211                     	;# 
  3591  0211                     	;# 
  3592  0212                     	;# 
  3593  0212                     	;# 
  3594  0213                     	;# 
  3595  0214                     	;# 
  3596  0215                     	;# 
  3597  0215                     	;# 
  3598  0216                     	;# 
  3599  0216                     	;# 
  3600  0217                     	;# 
  3601  0217                     	;# 
  3602  0218                     	;# 
  3603  0218                     	;# 
  3604  0219                     	;# 
  3605  021A                     	;# 
  3606  021B                     	;# 
  3607  021B                     	;# 
  3608  021C                     	;# 
  3609  021C                     	;# 
  3610  021D                     	;# 
  3611  021D                     	;# 
  3612  021E                     	;# 
  3613  021F                     	;# 
  3614  028C                     	;# 
  3615  028C                     	;# 
  3616  028D                     	;# 
  3617  028D                     	;# 
  3618  028E                     	;# 
  3619  028F                     	;# 
  3620  0290                     	;# 
  3621  0290                     	;# 
  3622  0291                     	;# 
  3623  0292                     	;# 
  3624  0292                     	;# 
  3625  0293                     	;# 
  3626  0293                     	;# 
  3627  0294                     	;# 
  3628  0295                     	;# 
  3629  0296                     	;# 
  3630  0296                     	;# 
  3631  0297                     	;# 
  3632  0298                     	;# 
  3633  0298                     	;# 
  3634  0299                     	;# 
  3635  0299                     	;# 
  3636  029A                     	;# 
  3637  029B                     	;# 
  3638  029C                     	;# 
  3639  029C                     	;# 
  3640  029D                     	;# 
  3641  030C                     	;# 
  3642  030C                     	;# 
  3643  030D                     	;# 
  3644  030E                     	;# 
  3645  030F                     	;# 
  3646  0310                     	;# 
  3647  0310                     	;# 
  3648  0311                     	;# 
  3649  0312                     	;# 
  3650  0313                     	;# 
  3651  0314                     	;# 
  3652  0314                     	;# 
  3653  0315                     	;# 
  3654  0316                     	;# 
  3655  0317                     	;# 
  3656  0318                     	;# 
  3657  0318                     	;# 
  3658  0319                     	;# 
  3659  031A                     	;# 
  3660  031B                     	;# 
  3661  031C                     	;# 
  3662  031C                     	;# 
  3663  031D                     	;# 
  3664  031E                     	;# 
  3665  031F                     	;# 
  3666  038C                     	;# 
  3667  038C                     	;# 
  3668  038D                     	;# 
  3669  038E                     	;# 
  3670  0390                     	;# 
  3671  0390                     	;# 
  3672  0391                     	;# 
  3673  0392                     	;# 
  3674  040C                     	;# 
  3675  040D                     	;# 
  3676  040E                     	;# 
  3677  040F                     	;# 
  3678  0410                     	;# 
  3679  0411                     	;# 
  3680  0416                     	;# 
  3681  0416                     	;# 
  3682  0417                     	;# 
  3683  0418                     	;# 
  3684  0418                     	;# 
  3685  0419                     	;# 
  3686  041A                     	;# 
  3687  041A                     	;# 
  3688  041B                     	;# 
  3689  041C                     	;# 
  3690  041C                     	;# 
  3691  041D                     	;# 
  3692  041E                     	;# 
  3693  041F                     	;# 
  3694  048C                     	;# 
  3695  048C                     	;# 
  3696  048D                     	;# 
  3697  048E                     	;# 
  3698  048F                     	;# 
  3699  048F                     	;# 
  3700  0490                     	;# 
  3701  0491                     	;# 
  3702  0492                     	;# 
  3703  0492                     	;# 
  3704  0493                     	;# 
  3705  0494                     	;# 
  3706  0495                     	;# 
  3707  0495                     	;# 
  3708  0496                     	;# 
  3709  0497                     	;# 
  3710  0498                     	;# 
  3711  0499                     	;# 
  3712  049A                     	;# 
  3713  049B                     	;# 
  3714  049C                     	;# 
  3715  049D                     	;# 
  3716  050C                     	;# 
  3717  050C                     	;# 
  3718  050D                     	;# 
  3719  050E                     	;# 
  3720  050F                     	;# 
  3721  050F                     	;# 
  3722  0510                     	;# 
  3723  0511                     	;# 
  3724  0512                     	;# 
  3725  0512                     	;# 
  3726  0513                     	;# 
  3727  0514                     	;# 
  3728  0515                     	;# 
  3729  0515                     	;# 
  3730  0516                     	;# 
  3731  0517                     	;# 
  3732  0518                     	;# 
  3733  0519                     	;# 
  3734  051A                     	;# 
  3735  051B                     	;# 
  3736  051C                     	;# 
  3737  051D                     	;# 
  3738  058C                     	;# 
  3739  058C                     	;# 
  3740  058D                     	;# 
  3741  058E                     	;# 
  3742  058F                     	;# 
  3743  058F                     	;# 
  3744  0590                     	;# 
  3745  0591                     	;# 
  3746  0592                     	;# 
  3747  0593                     	;# 
  3748  060C                     	;# 
  3749  060D                     	;# 
  3750  060E                     	;# 
  3751  060F                     	;# 
  3752  0610                     	;# 
  3753  0611                     	;# 
  3754  0612                     	;# 
  3755  0613                     	;# 
  3756  0614                     	;# 
  3757  0616                     	;# 
  3758  0617                     	;# 
  3759  0618                     	;# 
  3760  0619                     	;# 
  3761  061A                     	;# 
  3762  061B                     	;# 
  3763  061C                     	;# 
  3764  061D                     	;# 
  3765  061E                     	;# 
  3766  068C                     	;# 
  3767  068D                     	;# 
  3768  068E                     	;# 
  3769  068F                     	;# 
  3770  0690                     	;# 
  3771  0691                     	;# 
  3772  0692                     	;# 
  3773  0693                     	;# 
  3774  0694                     	;# 
  3775  070C                     	;# 
  3776  070D                     	;# 
  3777  070E                     	;# 
  3778  070F                     	;# 
  3779  0710                     	;# 
  3780  0711                     	;# 
  3781  0712                     	;# 
  3782  0713                     	;# 
  3783  0714                     	;# 
  3784  0716                     	;# 
  3785  0717                     	;# 
  3786  0718                     	;# 
  3787  0719                     	;# 
  3788  071A                     	;# 
  3789  071B                     	;# 
  3790  071C                     	;# 
  3791  071D                     	;# 
  3792  071E                     	;# 
  3793  0796                     	;# 
  3794  0797                     	;# 
  3795  0798                     	;# 
  3796  0799                     	;# 
  3797  079A                     	;# 
  3798  079B                     	;# 
  3799  080C                     	;# 
  3800  080D                     	;# 
  3801  080E                     	;# 
  3802  080F                     	;# 
  3803  0810                     	;# 
  3804  0811                     	;# 
  3805  0812                     	;# 
  3806  0813                     	;# 
  3807  0814                     	;# 
  3808  081A                     	;# 
  3809  081B                     	;# 
  3810  081C                     	;# 
  3811  081D                     	;# 
  3812  081E                     	;# 
  3813  081F                     	;# 
  3814  088C                     	;# 
  3815  088D                     	;# 
  3816  088E                     	;# 
  3817  088F                     	;# 
  3818  0890                     	;# 
  3819  0891                     	;# 
  3820  0892                     	;# 
  3821  0893                     	;# 
  3822  0895                     	;# 
  3823  0896                     	;# 
  3824  0897                     	;# 
  3825  0898                     	;# 
  3826  0899                     	;# 
  3827  089A                     	;# 
  3828  089B                     	;# 
  3829  090C                     	;# 
  3830  090E                     	;# 
  3831  090F                     	;# 
  3832  091F                     	;# 
  3833  091F                     	;# 
  3834  098F                     	;# 
  3835  098F                     	;# 
  3836  0990                     	;# 
  3837  0991                     	;# 
  3838  0992                     	;# 
  3839  0993                     	;# 
  3840  0994                     	;# 
  3841  0995                     	;# 
  3842  0996                     	;# 
  3843  0997                     	;# 
  3844  0E0F                     	;# 
  3845  0E10                     	;# 
  3846  0E11                     	;# 
  3847  0E12                     	;# 
  3848  0E13                     	;# 
  3849  0E14                     	;# 
  3850  0E15                     	;# 
  3851  0E16                     	;# 
  3852  0E17                     	;# 
  3853  0E18                     	;# 
  3854  0E19                     	;# 
  3855  0E1A                     	;# 
  3856  0E1B                     	;# 
  3857  0E1C                     	;# 
  3858  0E1D                     	;# 
  3859  0E1E                     	;# 
  3860  0E1F                     	;# 
  3861  0E20                     	;# 
  3862  0E21                     	;# 
  3863  0E22                     	;# 
  3864  0E23                     	;# 
  3865  0E24                     	;# 
  3866  0E25                     	;# 
  3867  0E26                     	;# 
  3868  0E27                     	;# 
  3869  0E28                     	;# 
  3870  0E29                     	;# 
  3871  0E2A                     	;# 
  3872  0E2B                     	;# 
  3873  0E2C                     	;# 
  3874  0E2D                     	;# 
  3875  0E2E                     	;# 
  3876  0E2F                     	;# 
  3877  0E30                     	;# 
  3878  0E31                     	;# 
  3879  0E32                     	;# 
  3880  0E33                     	;# 
  3881  0E34                     	;# 
  3882  0E35                     	;# 
  3883  0E36                     	;# 
  3884  0E37                     	;# 
  3885  0E8F                     	;# 
  3886  0E90                     	;# 
  3887  0E91                     	;# 
  3888  0E92                     	;# 
  3889  0E93                     	;# 
  3890  0E94                     	;# 
  3891  0E95                     	;# 
  3892  0E96                     	;# 
  3893  0E97                     	;# 
  3894  0E9C                     	;# 
  3895  0E9D                     	;# 
  3896  0E9E                     	;# 
  3897  0EA1                     	;# 
  3898  0EA2                     	;# 
  3899  0EA3                     	;# 
  3900  0EA4                     	;# 
  3901  0EA5                     	;# 
  3902  0EA9                     	;# 
  3903  0EAA                     	;# 
  3904  0EAB                     	;# 
  3905  0EAC                     	;# 
  3906  0EB1                     	;# 
  3907  0EB2                     	;# 
  3908  0EB3                     	;# 
  3909  0EB8                     	;# 
  3910  0EB9                     	;# 
  3911  0EBA                     	;# 
  3912  0EBB                     	;# 
  3913  0EBC                     	;# 
  3914  0EBD                     	;# 
  3915  0EBE                     	;# 
  3916  0EC3                     	;# 
  3917  0EC5                     	;# 
  3918  0EC6                     	;# 
  3919  0EC7                     	;# 
  3920  0EC8                     	;# 
  3921  0EC9                     	;# 
  3922  0ECA                     	;# 
  3923  0ECB                     	;# 
  3924  0ECC                     	;# 
  3925  0F10                     	;# 
  3926  0F11                     	;# 
  3927  0F12                     	;# 
  3928  0F13                     	;# 
  3929  0F14                     	;# 
  3930  0F15                     	;# 
  3931  0F16                     	;# 
  3932  0F17                     	;# 
  3933  0F18                     	;# 
  3934  0F19                     	;# 
  3935  0F1A                     	;# 
  3936  0F1B                     	;# 
  3937  0F1C                     	;# 
  3938  0F1D                     	;# 
  3939  0F1E                     	;# 
  3940  0F1F                     	;# 
  3941  0F20                     	;# 
  3942  0F21                     	;# 
  3943  0F22                     	;# 
  3944  0F23                     	;# 
  3945  0F24                     	;# 
  3946  0F25                     	;# 
  3947  0F26                     	;# 
  3948  0F27                     	;# 
  3949  0F28                     	;# 
  3950  0F29                     	;# 
  3951  0F2A                     	;# 
  3952  0F2B                     	;# 
  3953  0F2C                     	;# 
  3954  0F2D                     	;# 
  3955  0F2E                     	;# 
  3956  0F2F                     	;# 
  3957  0F30                     	;# 
  3958  0F31                     	;# 
  3959  0F32                     	;# 
  3960  0F38                     	;# 
  3961  0F39                     	;# 
  3962  0F3A                     	;# 
  3963  0F3B                     	;# 
  3964  0F3C                     	;# 
  3965  0F3D                     	;# 
  3966  0F3E                     	;# 
  3967  0F3F                     	;# 
  3968  0F40                     	;# 
  3969  0F41                     	;# 
  3970  0F43                     	;# 
  3971  0F44                     	;# 
  3972  0F45                     	;# 
  3973  0F46                     	;# 
  3974  0F47                     	;# 
  3975  0F48                     	;# 
  3976  0F49                     	;# 
  3977  0F4A                     	;# 
  3978  0F4B                     	;# 
  3979  0F4C                     	;# 
  3980  0F4E                     	;# 
  3981  0F4F                     	;# 
  3982  0F50                     	;# 
  3983  0F51                     	;# 
  3984  0F52                     	;# 
  3985  0F53                     	;# 
  3986  0F54                     	;# 
  3987  0F55                     	;# 
  3988  0F56                     	;# 
  3989  0F57                     	;# 
  3990  0F59                     	;# 
  3991  0F5A                     	;# 
  3992  0F5B                     	;# 
  3993  0F5C                     	;# 
  3994  0F5D                     	;# 
  3995  0F61                     	;# 
  3996  0F62                     	;# 
  3997  0F64                     	;# 
  3998  0F65                     	;# 
  3999  0F66                     	;# 
  4000  0F67                     	;# 
  4001  0F68                     	;# 
  4002  0F69                     	;# 
  4003  0F6A                     	;# 
  4004  0F6B                     	;# 
  4005  0F6C                     	;# 
  4006  0F6D                     	;# 
  4007  0FE4                     	;# 
  4008  0FE5                     	;# 
  4009  0FE6                     	;# 
  4010  0FE7                     	;# 
  4011  0FE8                     	;# 
  4012  0FE9                     	;# 
  4013  0FEA                     	;# 
  4014  0FEB                     	;# 
  4015  0FED                     	;# 
  4016  0FEE                     	;# 
  4017  0FEF                     	;# 
  4018  0000                     	;# 
  4019  0001                     	;# 
  4020  0002                     	;# 
  4021  0003                     	;# 
  4022  0004                     	;# 
  4023  0005                     	;# 
  4024  0006                     	;# 
  4025  0007                     	;# 
  4026  0008                     	;# 
  4027  0009                     	;# 
  4028  000A                     	;# 
  4029  000B                     	;# 
  4030  000C                     	;# 
  4031  000D                     	;# 
  4032  000E                     	;# 
  4033  000F                     	;# 
  4034  0010                     	;# 
  4035  0011                     	;# 
  4036  0012                     	;# 
  4037  0013                     	;# 
  4038  0014                     	;# 
  4039  0015                     	;# 
  4040  0016                     	;# 
  4041  0017                     	;# 
  4042  0018                     	;# 
  4043  0019                     	;# 
  4044  001A                     	;# 
  4045  001C                     	;# 
  4046  001C                     	;# 
  4047  001D                     	;# 
  4048  001D                     	;# 
  4049  001E                     	;# 
  4050  001F                     	;# 
  4051  008C                     	;# 
  4052  008C                     	;# 
  4053  008D                     	;# 
  4054  008E                     	;# 
  4055  008E                     	;# 
  4056  008F                     	;# 
  4057  0090                     	;# 
  4058  0090                     	;# 
  4059  0091                     	;# 
  4060  0093                     	;# 
  4061  0094                     	;# 
  4062  0095                     	;# 
  4063  0096                     	;# 
  4064  0097                     	;# 
  4065  0098                     	;# 
  4066  0099                     	;# 
  4067  009A                     	;# 
  4068  009B                     	;# 
  4069  009C                     	;# 
  4070  009D                     	;# 
  4071  009E                     	;# 
  4072  010C                     	;# 
  4073  010D                     	;# 
  4074  010E                     	;# 
  4075  010E                     	;# 
  4076  010F                     	;# 
  4077  0110                     	;# 
  4078  0110                     	;# 
  4079  0111                     	;# 
  4080  0112                     	;# 
  4081  0112                     	;# 
  4082  0113                     	;# 
  4083  0114                     	;# 
  4084  0114                     	;# 
  4085  0115                     	;# 
  4086  0116                     	;# 
  4087  0116                     	;# 
  4088  0117                     	;# 
  4089  0119                     	;# 
  4090  0119                     	;# 
  4091  0119                     	;# 
  4092  011A                     	;# 
  4093  011A                     	;# 
  4094  011A                     	;# 
  4095  011B                     	;# 
  4096  011B                     	;# 
  4097  011B                     	;# 
  4098  011B                     	;# 
  4099  011B                     	;# 
  4100  011C                     	;# 
  4101  011C                     	;# 
  4102  011C                     	;# 
  4103  011D                     	;# 
  4104  011D                     	;# 
  4105  011D                     	;# 
  4106  011E                     	;# 
  4107  011E                     	;# 
  4108  011E                     	;# 
  4109  011F                     	;# 
  4110  011F                     	;# 
  4111  011F                     	;# 
  4112  011F                     	;# 
  4113  011F                     	;# 
  4114  018C                     	;# 
  4115  018D                     	;# 
  4116  018E                     	;# 
  4117  018F                     	;# 
  4118  0190                     	;# 
  4119  0191                     	;# 
  4120  0192                     	;# 
  4121  0196                     	;# 
  4122  0197                     	;# 
  4123  0198                     	;# 
  4124  0199                     	;# 
  4125  019A                     	;# 
  4126  019B                     	;# 
  4127  019C                     	;# 
  4128  020C                     	;# 
  4129  020C                     	;# 
  4130  020D                     	;# 
  4131  020E                     	;# 
  4132  020F                     	;# 
  4133  020F                     	;# 
  4134  0210                     	;# 
  4135  0210                     	;# 
  4136  0211                     	;# 
  4137  0211                     	;# 
  4138  0212                     	;# 
  4139  0212                     	;# 
  4140  0213                     	;# 
  4141  0214                     	;# 
  4142  0215                     	;# 
  4143  0215                     	;# 
  4144  0216                     	;# 
  4145  0216                     	;# 
  4146  0217                     	;# 
  4147  0217                     	;# 
  4148  0218                     	;# 
  4149  0218                     	;# 
  4150  0219                     	;# 
  4151  021A                     	;# 
  4152  021B                     	;# 
  4153  021B                     	;# 
  4154  021C                     	;# 
  4155  021C                     	;# 
  4156  021D                     	;# 
  4157  021D                     	;# 
  4158  021E                     	;# 
  4159  021F                     	;# 
  4160  028C                     	;# 
  4161  028C                     	;# 
  4162  028D                     	;# 
  4163  028D                     	;# 
  4164  028E                     	;# 
  4165  028F                     	;# 
  4166  0290                     	;# 
  4167  0290                     	;# 
  4168  0291                     	;# 
  4169  0292                     	;# 
  4170  0292                     	;# 
  4171  0293                     	;# 
  4172  0293                     	;# 
  4173  0294                     	;# 
  4174  0295                     	;# 
  4175  0296                     	;# 
  4176  0296                     	;# 
  4177  0297                     	;# 
  4178  0298                     	;# 
  4179  0298                     	;# 
  4180  0299                     	;# 
  4181  0299                     	;# 
  4182  029A                     	;# 
  4183  029B                     	;# 
  4184  029C                     	;# 
  4185  029C                     	;# 
  4186  029D                     	;# 
  4187  030C                     	;# 
  4188  030C                     	;# 
  4189  030D                     	;# 
  4190  030E                     	;# 
  4191  030F                     	;# 
  4192  0310                     	;# 
  4193  0310                     	;# 
  4194  0311                     	;# 
  4195  0312                     	;# 
  4196  0313                     	;# 
  4197  0314                     	;# 
  4198  0314                     	;# 
  4199  0315                     	;# 
  4200  0316                     	;# 
  4201  0317                     	;# 
  4202  0318                     	;# 
  4203  0318                     	;# 
  4204  0319                     	;# 
  4205  031A                     	;# 
  4206  031B                     	;# 
  4207  031C                     	;# 
  4208  031C                     	;# 
  4209  031D                     	;# 
  4210  031E                     	;# 
  4211  031F                     	;# 
  4212  038C                     	;# 
  4213  038C                     	;# 
  4214  038D                     	;# 
  4215  038E                     	;# 
  4216  0390                     	;# 
  4217  0390                     	;# 
  4218  0391                     	;# 
  4219  0392                     	;# 
  4220  040C                     	;# 
  4221  040D                     	;# 
  4222  040E                     	;# 
  4223  040F                     	;# 
  4224  0410                     	;# 
  4225  0411                     	;# 
  4226  0416                     	;# 
  4227  0416                     	;# 
  4228  0417                     	;# 
  4229  0418                     	;# 
  4230  0418                     	;# 
  4231  0419                     	;# 
  4232  041A                     	;# 
  4233  041A                     	;# 
  4234  041B                     	;# 
  4235  041C                     	;# 
  4236  041C                     	;# 
  4237  041D                     	;# 
  4238  041E                     	;# 
  4239  041F                     	;# 
  4240  048C                     	;# 
  4241  048C                     	;# 
  4242  048D                     	;# 
  4243  048E                     	;# 
  4244  048F                     	;# 
  4245  048F                     	;# 
  4246  0490                     	;# 
  4247  0491                     	;# 
  4248  0492                     	;# 
  4249  0492                     	;# 
  4250  0493                     	;# 
  4251  0494                     	;# 
  4252  0495                     	;# 
  4253  0495                     	;# 
  4254  0496                     	;# 
  4255  0497                     	;# 
  4256  0498                     	;# 
  4257  0499                     	;# 
  4258  049A                     	;# 
  4259  049B                     	;# 
  4260  049C                     	;# 
  4261  049D                     	;# 
  4262  050C                     	;# 
  4263  050C                     	;# 
  4264  050D                     	;# 
  4265  050E                     	;# 
  4266  050F                     	;# 
  4267  050F                     	;# 
  4268  0510                     	;# 
  4269  0511                     	;# 
  4270  0512                     	;# 
  4271  0512                     	;# 
  4272  0513                     	;# 
  4273  0514                     	;# 
  4274  0515                     	;# 
  4275  0515                     	;# 
  4276  0516                     	;# 
  4277  0517                     	;# 
  4278  0518                     	;# 
  4279  0519                     	;# 
  4280  051A                     	;# 
  4281  051B                     	;# 
  4282  051C                     	;# 
  4283  051D                     	;# 
  4284  058C                     	;# 
  4285  058C                     	;# 
  4286  058D                     	;# 
  4287  058E                     	;# 
  4288  058F                     	;# 
  4289  058F                     	;# 
  4290  0590                     	;# 
  4291  0591                     	;# 
  4292  0592                     	;# 
  4293  0593                     	;# 
  4294  060C                     	;# 
  4295  060D                     	;# 
  4296  060E                     	;# 
  4297  060F                     	;# 
  4298  0610                     	;# 
  4299  0611                     	;# 
  4300  0612                     	;# 
  4301  0613                     	;# 
  4302  0614                     	;# 
  4303  0616                     	;# 
  4304  0617                     	;# 
  4305  0618                     	;# 
  4306  0619                     	;# 
  4307  061A                     	;# 
  4308  061B                     	;# 
  4309  061C                     	;# 
  4310  061D                     	;# 
  4311  061E                     	;# 
  4312  068C                     	;# 
  4313  068D                     	;# 
  4314  068E                     	;# 
  4315  068F                     	;# 
  4316  0690                     	;# 
  4317  0691                     	;# 
  4318  0692                     	;# 
  4319  0693                     	;# 
  4320  0694                     	;# 
  4321  070C                     	;# 
  4322  070D                     	;# 
  4323  070E                     	;# 
  4324  070F                     	;# 
  4325  0710                     	;# 
  4326  0711                     	;# 
  4327  0712                     	;# 
  4328  0713                     	;# 
  4329  0714                     	;# 
  4330  0716                     	;# 
  4331  0717                     	;# 
  4332  0718                     	;# 
  4333  0719                     	;# 
  4334  071A                     	;# 
  4335  071B                     	;# 
  4336  071C                     	;# 
  4337  071D                     	;# 
  4338  071E                     	;# 
  4339  0796                     	;# 
  4340  0797                     	;# 
  4341  0798                     	;# 
  4342  0799                     	;# 
  4343  079A                     	;# 
  4344  079B                     	;# 
  4345  080C                     	;# 
  4346  080D                     	;# 
  4347  080E                     	;# 
  4348  080F                     	;# 
  4349  0810                     	;# 
  4350  0811                     	;# 
  4351  0812                     	;# 
  4352  0813                     	;# 
  4353  0814                     	;# 
  4354  081A                     	;# 
  4355  081B                     	;# 
  4356  081C                     	;# 
  4357  081D                     	;# 
  4358  081E                     	;# 
  4359  081F                     	;# 
  4360  088C                     	;# 
  4361  088D                     	;# 
  4362  088E                     	;# 
  4363  088F                     	;# 
  4364  0890                     	;# 
  4365  0891                     	;# 
  4366  0892                     	;# 
  4367  0893                     	;# 
  4368  0895                     	;# 
  4369  0896                     	;# 
  4370  0897                     	;# 
  4371  0898                     	;# 
  4372  0899                     	;# 
  4373  089A                     	;# 
  4374  089B                     	;# 
  4375  090C                     	;# 
  4376  090E                     	;# 
  4377  090F                     	;# 
  4378  091F                     	;# 
  4379  091F                     	;# 
  4380  098F                     	;# 
  4381  098F                     	;# 
  4382  0990                     	;# 
  4383  0991                     	;# 
  4384  0992                     	;# 
  4385  0993                     	;# 
  4386  0994                     	;# 
  4387  0995                     	;# 
  4388  0996                     	;# 
  4389  0997                     	;# 
  4390  0E0F                     	;# 
  4391  0E10                     	;# 
  4392  0E11                     	;# 
  4393  0E12                     	;# 
  4394  0E13                     	;# 
  4395  0E14                     	;# 
  4396  0E15                     	;# 
  4397  0E16                     	;# 
  4398  0E17                     	;# 
  4399  0E18                     	;# 
  4400  0E19                     	;# 
  4401  0E1A                     	;# 
  4402  0E1B                     	;# 
  4403  0E1C                     	;# 
  4404  0E1D                     	;# 
  4405  0E1E                     	;# 
  4406  0E1F                     	;# 
  4407  0E20                     	;# 
  4408  0E21                     	;# 
  4409  0E22                     	;# 
  4410  0E23                     	;# 
  4411  0E24                     	;# 
  4412  0E25                     	;# 
  4413  0E26                     	;# 
  4414  0E27                     	;# 
  4415  0E28                     	;# 
  4416  0E29                     	;# 
  4417  0E2A                     	;# 
  4418  0E2B                     	;# 
  4419  0E2C                     	;# 
  4420  0E2D                     	;# 
  4421  0E2E                     	;# 
  4422  0E2F                     	;# 
  4423  0E30                     	;# 
  4424  0E31                     	;# 
  4425  0E32                     	;# 
  4426  0E33                     	;# 
  4427  0E34                     	;# 
  4428  0E35                     	;# 
  4429  0E36                     	;# 
  4430  0E37                     	;# 
  4431  0E8F                     	;# 
  4432  0E90                     	;# 
  4433  0E91                     	;# 
  4434  0E92                     	;# 
  4435  0E93                     	;# 
  4436  0E94                     	;# 
  4437  0E95                     	;# 
  4438  0E96                     	;# 
  4439  0E97                     	;# 
  4440  0E9C                     	;# 
  4441  0E9D                     	;# 
  4442  0E9E                     	;# 
  4443  0EA1                     	;# 
  4444  0EA2                     	;# 
  4445  0EA3                     	;# 
  4446  0EA4                     	;# 
  4447  0EA5                     	;# 
  4448  0EA9                     	;# 
  4449  0EAA                     	;# 
  4450  0EAB                     	;# 
  4451  0EAC                     	;# 
  4452  0EB1                     	;# 
  4453  0EB2                     	;# 
  4454  0EB3                     	;# 
  4455  0EB8                     	;# 
  4456  0EB9                     	;# 
  4457  0EBA                     	;# 
  4458  0EBB                     	;# 
  4459  0EBC                     	;# 
  4460  0EBD                     	;# 
  4461  0EBE                     	;# 
  4462  0EC3                     	;# 
  4463  0EC5                     	;# 
  4464  0EC6                     	;# 
  4465  0EC7                     	;# 
  4466  0EC8                     	;# 
  4467  0EC9                     	;# 
  4468  0ECA                     	;# 
  4469  0ECB                     	;# 
  4470  0ECC                     	;# 
  4471  0F10                     	;# 
  4472  0F11                     	;# 
  4473  0F12                     	;# 
  4474  0F13                     	;# 
  4475  0F14                     	;# 
  4476  0F15                     	;# 
  4477  0F16                     	;# 
  4478  0F17                     	;# 
  4479  0F18                     	;# 
  4480  0F19                     	;# 
  4481  0F1A                     	;# 
  4482  0F1B                     	;# 
  4483  0F1C                     	;# 
  4484  0F1D                     	;# 
  4485  0F1E                     	;# 
  4486  0F1F                     	;# 
  4487  0F20                     	;# 
  4488  0F21                     	;# 
  4489  0F22                     	;# 
  4490  0F23                     	;# 
  4491  0F24                     	;# 
  4492  0F25                     	;# 
  4493  0F26                     	;# 
  4494  0F27                     	;# 
  4495  0F28                     	;# 
  4496  0F29                     	;# 
  4497  0F2A                     	;# 
  4498  0F2B                     	;# 
  4499  0F2C                     	;# 
  4500  0F2D                     	;# 
  4501  0F2E                     	;# 
  4502  0F2F                     	;# 
  4503  0F30                     	;# 
  4504  0F31                     	;# 
  4505  0F32                     	;# 
  4506  0F38                     	;# 
  4507  0F39                     	;# 
  4508  0F3A                     	;# 
  4509  0F3B                     	;# 
  4510  0F3C                     	;# 
  4511  0F3D                     	;# 
  4512  0F3E                     	;# 
  4513  0F3F                     	;# 
  4514  0F40                     	;# 
  4515  0F41                     	;# 
  4516  0F43                     	;# 
  4517  0F44                     	;# 
  4518  0F45                     	;# 
  4519  0F46                     	;# 
  4520  0F47                     	;# 
  4521  0F48                     	;# 
  4522  0F49                     	;# 
  4523  0F4A                     	;# 
  4524  0F4B                     	;# 
  4525  0F4C                     	;# 
  4526  0F4E                     	;# 
  4527  0F4F                     	;# 
  4528  0F50                     	;# 
  4529  0F51                     	;# 
  4530  0F52                     	;# 
  4531  0F53                     	;# 
  4532  0F54                     	;# 
  4533  0F55                     	;# 
  4534  0F56                     	;# 
  4535  0F57                     	;# 
  4536  0F59                     	;# 
  4537  0F5A                     	;# 
  4538  0F5B                     	;# 
  4539  0F5C                     	;# 
  4540  0F5D                     	;# 
  4541  0F61                     	;# 
  4542  0F62                     	;# 
  4543  0F64                     	;# 
  4544  0F65                     	;# 
  4545  0F66                     	;# 
  4546  0F67                     	;# 
  4547  0F68                     	;# 
  4548  0F69                     	;# 
  4549  0F6A                     	;# 
  4550  0F6B                     	;# 
  4551  0F6C                     	;# 
  4552  0F6D                     	;# 
  4553  0FE4                     	;# 
  4554  0FE5                     	;# 
  4555  0FE6                     	;# 
  4556  0FE7                     	;# 
  4557  0FE8                     	;# 
  4558  0FE9                     	;# 
  4559  0FEA                     	;# 
  4560  0FEB                     	;# 
  4561  0FED                     	;# 
  4562  0FEE                     	;# 
  4563  0FEF                     	;# 
  4564  0000                     	;# 
  4565  0001                     	;# 
  4566  0002                     	;# 
  4567  0003                     	;# 
  4568  0004                     	;# 
  4569  0005                     	;# 
  4570  0006                     	;# 
  4571  0007                     	;# 
  4572  0008                     	;# 
  4573  0009                     	;# 
  4574  000A                     	;# 
  4575  000B                     	;# 
  4576  000C                     	;# 
  4577  000D                     	;# 
  4578  000E                     	;# 
  4579  000F                     	;# 
  4580  0010                     	;# 
  4581  0011                     	;# 
  4582  0012                     	;# 
  4583  0013                     	;# 
  4584  0014                     	;# 
  4585  0015                     	;# 
  4586  0016                     	;# 
  4587  0017                     	;# 
  4588  0018                     	;# 
  4589  0019                     	;# 
  4590  001A                     	;# 
  4591  001C                     	;# 
  4592  001C                     	;# 
  4593  001D                     	;# 
  4594  001D                     	;# 
  4595  001E                     	;# 
  4596  001F                     	;# 
  4597  008C                     	;# 
  4598  008C                     	;# 
  4599  008D                     	;# 
  4600  008E                     	;# 
  4601  008E                     	;# 
  4602  008F                     	;# 
  4603  0090                     	;# 
  4604  0090                     	;# 
  4605  0091                     	;# 
  4606  0093                     	;# 
  4607  0094                     	;# 
  4608  0095                     	;# 
  4609  0096                     	;# 
  4610  0097                     	;# 
  4611  0098                     	;# 
  4612  0099                     	;# 
  4613  009A                     	;# 
  4614  009B                     	;# 
  4615  009C                     	;# 
  4616  009D                     	;# 
  4617  009E                     	;# 
  4618  010C                     	;# 
  4619  010D                     	;# 
  4620  010E                     	;# 
  4621  010E                     	;# 
  4622  010F                     	;# 
  4623  0110                     	;# 
  4624  0110                     	;# 
  4625  0111                     	;# 
  4626  0112                     	;# 
  4627  0112                     	;# 
  4628  0113                     	;# 
  4629  0114                     	;# 
  4630  0114                     	;# 
  4631  0115                     	;# 
  4632  0116                     	;# 
  4633  0116                     	;# 
  4634  0117                     	;# 
  4635  0119                     	;# 
  4636  0119                     	;# 
  4637  0119                     	;# 
  4638  011A                     	;# 
  4639  011A                     	;# 
  4640  011A                     	;# 
  4641  011B                     	;# 
  4642  011B                     	;# 
  4643  011B                     	;# 
  4644  011B                     	;# 
  4645  011B                     	;# 
  4646  011C                     	;# 
  4647  011C                     	;# 
  4648  011C                     	;# 
  4649  011D                     	;# 
  4650  011D                     	;# 
  4651  011D                     	;# 
  4652  011E                     	;# 
  4653  011E                     	;# 
  4654  011E                     	;# 
  4655  011F                     	;# 
  4656  011F                     	;# 
  4657  011F                     	;# 
  4658  011F                     	;# 
  4659  011F                     	;# 
  4660  018C                     	;# 
  4661  018D                     	;# 
  4662  018E                     	;# 
  4663  018F                     	;# 
  4664  0190                     	;# 
  4665  0191                     	;# 
  4666  0192                     	;# 
  4667  0196                     	;# 
  4668  0197                     	;# 
  4669  0198                     	;# 
  4670  0199                     	;# 
  4671  019A                     	;# 
  4672  019B                     	;# 
  4673  019C                     	;# 
  4674  020C                     	;# 
  4675  020C                     	;# 
  4676  020D                     	;# 
  4677  020E                     	;# 
  4678  020F                     	;# 
  4679  020F                     	;# 
  4680  0210                     	;# 
  4681  0210                     	;# 
  4682  0211                     	;# 
  4683  0211                     	;# 
  4684  0212                     	;# 
  4685  0212                     	;# 
  4686  0213                     	;# 
  4687  0214                     	;# 
  4688  0215                     	;# 
  4689  0215                     	;# 
  4690  0216                     	;# 
  4691  0216                     	;# 
  4692  0217                     	;# 
  4693  0217                     	;# 
  4694  0218                     	;# 
  4695  0218                     	;# 
  4696  0219                     	;# 
  4697  021A                     	;# 
  4698  021B                     	;# 
  4699  021B                     	;# 
  4700  021C                     	;# 
  4701  021C                     	;# 
  4702  021D                     	;# 
  4703  021D                     	;# 
  4704  021E                     	;# 
  4705  021F                     	;# 
  4706  028C                     	;# 
  4707  028C                     	;# 
  4708  028D                     	;# 
  4709  028D                     	;# 
  4710  028E                     	;# 
  4711  028F                     	;# 
  4712  0290                     	;# 
  4713  0290                     	;# 
  4714  0291                     	;# 
  4715  0292                     	;# 
  4716  0292                     	;# 
  4717  0293                     	;# 
  4718  0293                     	;# 
  4719  0294                     	;# 
  4720  0295                     	;# 
  4721  0296                     	;# 
  4722  0296                     	;# 
  4723  0297                     	;# 
  4724  0298                     	;# 
  4725  0298                     	;# 
  4726  0299                     	;# 
  4727  0299                     	;# 
  4728  029A                     	;# 
  4729  029B                     	;# 
  4730  029C                     	;# 
  4731  029C                     	;# 
  4732  029D                     	;# 
  4733  030C                     	;# 
  4734  030C                     	;# 
  4735  030D                     	;# 
  4736  030E                     	;# 
  4737  030F                     	;# 
  4738  0310                     	;# 
  4739  0310                     	;# 
  4740  0311                     	;# 
  4741  0312                     	;# 
  4742  0313                     	;# 
  4743  0314                     	;# 
  4744  0314                     	;# 
  4745  0315                     	;# 
  4746  0316                     	;# 
  4747  0317                     	;# 
  4748  0318                     	;# 
  4749  0318                     	;# 
  4750  0319                     	;# 
  4751  031A                     	;# 
  4752  031B                     	;# 
  4753  031C                     	;# 
  4754  031C                     	;# 
  4755  031D                     	;# 
  4756  031E                     	;# 
  4757  031F                     	;# 
  4758  038C                     	;# 
  4759  038C                     	;# 
  4760  038D                     	;# 
  4761  038E                     	;# 
  4762  0390                     	;# 
  4763  0390                     	;# 
  4764  0391                     	;# 
  4765  0392                     	;# 
  4766  040C                     	;# 
  4767  040D                     	;# 
  4768  040E                     	;# 
  4769  040F                     	;# 
  4770  0410                     	;# 
  4771  0411                     	;# 
  4772  0416                     	;# 
  4773  0416                     	;# 
  4774  0417                     	;# 
  4775  0418                     	;# 
  4776  0418                     	;# 
  4777  0419                     	;# 
  4778  041A                     	;# 
  4779  041A                     	;# 
  4780  041B                     	;# 
  4781  041C                     	;# 
  4782  041C                     	;# 
  4783  041D                     	;# 
  4784  041E                     	;# 
  4785  041F                     	;# 
  4786  048C                     	;# 
  4787  048C                     	;# 
  4788  048D                     	;# 
  4789  048E                     	;# 
  4790  048F                     	;# 
  4791  048F                     	;# 
  4792  0490                     	;# 
  4793  0491                     	;# 
  4794  0492                     	;# 
  4795  0492                     	;# 
  4796  0493                     	;# 
  4797  0494                     	;# 
  4798  0495                     	;# 
  4799  0495                     	;# 
  4800  0496                     	;# 
  4801  0497                     	;# 
  4802  0498                     	;# 
  4803  0499                     	;# 
  4804  049A                     	;# 
  4805  049B                     	;# 
  4806  049C                     	;# 
  4807  049D                     	;# 
  4808  050C                     	;# 
  4809  050C                     	;# 
  4810  050D                     	;# 
  4811  050E                     	;# 
  4812  050F                     	;# 
  4813  050F                     	;# 
  4814  0510                     	;# 
  4815  0511                     	;# 
  4816  0512                     	;# 
  4817  0512                     	;# 
  4818  0513                     	;# 
  4819  0514                     	;# 
  4820  0515                     	;# 
  4821  0515                     	;# 
  4822  0516                     	;# 
  4823  0517                     	;# 
  4824  0518                     	;# 
  4825  0519                     	;# 
  4826  051A                     	;# 
  4827  051B                     	;# 
  4828  051C                     	;# 
  4829  051D                     	;# 
  4830  058C                     	;# 
  4831  058C                     	;# 
  4832  058D                     	;# 
  4833  058E                     	;# 
  4834  058F                     	;# 
  4835  058F                     	;# 
  4836  0590                     	;# 
  4837  0591                     	;# 
  4838  0592                     	;# 
  4839  0593                     	;# 
  4840  060C                     	;# 
  4841  060D                     	;# 
  4842  060E                     	;# 
  4843  060F                     	;# 
  4844  0610                     	;# 
  4845  0611                     	;# 
  4846  0612                     	;# 
  4847  0613                     	;# 
  4848  0614                     	;# 
  4849  0616                     	;# 
  4850  0617                     	;# 
  4851  0618                     	;# 
  4852  0619                     	;# 
  4853  061A                     	;# 
  4854  061B                     	;# 
  4855  061C                     	;# 
  4856  061D                     	;# 
  4857  061E                     	;# 
  4858  068C                     	;# 
  4859  068D                     	;# 
  4860  068E                     	;# 
  4861  068F                     	;# 
  4862  0690                     	;# 
  4863  0691                     	;# 
  4864  0692                     	;# 
  4865  0693                     	;# 
  4866  0694                     	;# 
  4867  070C                     	;# 
  4868  070D                     	;# 
  4869  070E                     	;# 
  4870  070F                     	;# 
  4871  0710                     	;# 
  4872  0711                     	;# 
  4873  0712                     	;# 
  4874  0713                     	;# 
  4875  0714                     	;# 
  4876  0716                     	;# 
  4877  0717                     	;# 
  4878  0718                     	;# 
  4879  0719                     	;# 
  4880  071A                     	;# 
  4881  071B                     	;# 
  4882  071C                     	;# 
  4883  071D                     	;# 
  4884  071E                     	;# 
  4885  0796                     	;# 
  4886  0797                     	;# 
  4887  0798                     	;# 
  4888  0799                     	;# 
  4889  079A                     	;# 
  4890  079B                     	;# 
  4891  080C                     	;# 
  4892  080D                     	;# 
  4893  080E                     	;# 
  4894  080F                     	;# 
  4895  0810                     	;# 
  4896  0811                     	;# 
  4897  0812                     	;# 
  4898  0813                     	;# 
  4899  0814                     	;# 
  4900  081A                     	;# 
  4901  081B                     	;# 
  4902  081C                     	;# 
  4903  081D                     	;# 
  4904  081E                     	;# 
  4905  081F                     	;# 
  4906  088C                     	;# 
  4907  088D                     	;# 
  4908  088E                     	;# 
  4909  088F                     	;# 
  4910  0890                     	;# 
  4911  0891                     	;# 
  4912  0892                     	;# 
  4913  0893                     	;# 
  4914  0895                     	;# 
  4915  0896                     	;# 
  4916  0897                     	;# 
  4917  0898                     	;# 
  4918  0899                     	;# 
  4919  089A                     	;# 
  4920  089B                     	;# 
  4921  090C                     	;# 
  4922  090E                     	;# 
  4923  090F                     	;# 
  4924  091F                     	;# 
  4925  091F                     	;# 
  4926  098F                     	;# 
  4927  098F                     	;# 
  4928  0990                     	;# 
  4929  0991                     	;# 
  4930  0992                     	;# 
  4931  0993                     	;# 
  4932  0994                     	;# 
  4933  0995                     	;# 
  4934  0996                     	;# 
  4935  0997                     	;# 
  4936  0E0F                     	;# 
  4937  0E10                     	;# 
  4938  0E11                     	;# 
  4939  0E12                     	;# 
  4940  0E13                     	;# 
  4941  0E14                     	;# 
  4942  0E15                     	;# 
  4943  0E16                     	;# 
  4944  0E17                     	;# 
  4945  0E18                     	;# 
  4946  0E19                     	;# 
  4947  0E1A                     	;# 
  4948  0E1B                     	;# 
  4949  0E1C                     	;# 
  4950  0E1D                     	;# 
  4951  0E1E                     	;# 
  4952  0E1F                     	;# 
  4953  0E20                     	;# 
  4954  0E21                     	;# 
  4955  0E22                     	;# 
  4956  0E23                     	;# 
  4957  0E24                     	;# 
  4958  0E25                     	;# 
  4959  0E26                     	;# 
  4960  0E27                     	;# 
  4961  0E28                     	;# 
  4962  0E29                     	;# 
  4963  0E2A                     	;# 
  4964  0E2B                     	;# 
  4965  0E2C                     	;# 
  4966  0E2D                     	;# 
  4967  0E2E                     	;# 
  4968  0E2F                     	;# 
  4969  0E30                     	;# 
  4970  0E31                     	;# 
  4971  0E32                     	;# 
  4972  0E33                     	;# 
  4973  0E34                     	;# 
  4974  0E35                     	;# 
  4975  0E36                     	;# 
  4976  0E37                     	;# 
  4977  0E8F                     	;# 
  4978  0E90                     	;# 
  4979  0E91                     	;# 
  4980  0E92                     	;# 
  4981  0E93                     	;# 
  4982  0E94                     	;# 
  4983  0E95                     	;# 
  4984  0E96                     	;# 
  4985  0E97                     	;# 
  4986  0E9C                     	;# 
  4987  0E9D                     	;# 
  4988  0E9E                     	;# 
  4989  0EA1                     	;# 
  4990  0EA2                     	;# 
  4991  0EA3                     	;# 
  4992  0EA4                     	;# 
  4993  0EA5                     	;# 
  4994  0EA9                     	;# 
  4995  0EAA                     	;# 
  4996  0EAB                     	;# 
  4997  0EAC                     	;# 
  4998  0EB1                     	;# 
  4999  0EB2                     	;# 
  5000  0EB3                     	;# 
  5001  0EB8                     	;# 
  5002  0EB9                     	;# 
  5003  0EBA                     	;# 
  5004  0EBB                     	;# 
  5005  0EBC                     	;# 
  5006  0EBD                     	;# 
  5007  0EBE                     	;# 
  5008  0EC3                     	;# 
  5009  0EC5                     	;# 
  5010  0EC6                     	;# 
  5011  0EC7                     	;# 
  5012  0EC8                     	;# 
  5013  0EC9                     	;# 
  5014  0ECA                     	;# 
  5015  0ECB                     	;# 
  5016  0ECC                     	;# 
  5017  0F10                     	;# 
  5018  0F11                     	;# 
  5019  0F12                     	;# 
  5020  0F13                     	;# 
  5021  0F14                     	;# 
  5022  0F15                     	;# 
  5023  0F16                     	;# 
  5024  0F17                     	;# 
  5025  0F18                     	;# 
  5026  0F19                     	;# 
  5027  0F1A                     	;# 
  5028  0F1B                     	;# 
  5029  0F1C                     	;# 
  5030  0F1D                     	;# 
  5031  0F1E                     	;# 
  5032  0F1F                     	;# 
  5033  0F20                     	;# 
  5034  0F21                     	;# 
  5035  0F22                     	;# 
  5036  0F23                     	;# 
  5037  0F24                     	;# 
  5038  0F25                     	;# 
  5039  0F26                     	;# 
  5040  0F27                     	;# 
  5041  0F28                     	;# 
  5042  0F29                     	;# 
  5043  0F2A                     	;# 
  5044  0F2B                     	;# 
  5045  0F2C                     	;# 
  5046  0F2D                     	;# 
  5047  0F2E                     	;# 
  5048  0F2F                     	;# 
  5049  0F30                     	;# 
  5050  0F31                     	;# 
  5051  0F32                     	;# 
  5052  0F38                     	;# 
  5053  0F39                     	;# 
  5054  0F3A                     	;# 
  5055  0F3B                     	;# 
  5056  0F3C                     	;# 
  5057  0F3D                     	;# 
  5058  0F3E                     	;# 
  5059  0F3F                     	;# 
  5060  0F40                     	;# 
  5061  0F41                     	;# 
  5062  0F43                     	;# 
  5063  0F44                     	;# 
  5064  0F45                     	;# 
  5065  0F46                     	;# 
  5066  0F47                     	;# 
  5067  0F48                     	;# 
  5068  0F49                     	;# 
  5069  0F4A                     	;# 
  5070  0F4B                     	;# 
  5071  0F4C                     	;# 
  5072  0F4E                     	;# 
  5073  0F4F                     	;# 
  5074  0F50                     	;# 
  5075  0F51                     	;# 
  5076  0F52                     	;# 
  5077  0F53                     	;# 
  5078  0F54                     	;# 
  5079  0F55                     	;# 
  5080  0F56                     	;# 
  5081  0F57                     	;# 
  5082  0F59                     	;# 
  5083  0F5A                     	;# 
  5084  0F5B                     	;# 
  5085  0F5C                     	;# 
  5086  0F5D                     	;# 
  5087  0F61                     	;# 
  5088  0F62                     	;# 
  5089  0F64                     	;# 
  5090  0F65                     	;# 
  5091  0F66                     	;# 
  5092  0F67                     	;# 
  5093  0F68                     	;# 
  5094  0F69                     	;# 
  5095  0F6A                     	;# 
  5096  0F6B                     	;# 
  5097  0F6C                     	;# 
  5098  0F6D                     	;# 
  5099  0FE4                     	;# 
  5100  0FE5                     	;# 
  5101  0FE6                     	;# 
  5102  0FE7                     	;# 
  5103  0FE8                     	;# 
  5104  0FE9                     	;# 
  5105  0FEA                     	;# 
  5106  0FEB                     	;# 
  5107  0FED                     	;# 
  5108  0FEE                     	;# 
  5109  0FEF                     	;# 
  5110  0000                     	;# 
  5111  0001                     	;# 
  5112  0002                     	;# 
  5113  0003                     	;# 
  5114  0004                     	;# 
  5115  0005                     	;# 
  5116  0006                     	;# 
  5117  0007                     	;# 
  5118  0008                     	;# 
  5119  0009                     	;# 
  5120  000A                     	;# 
  5121  000B                     	;# 
  5122  000C                     	;# 
  5123  000D                     	;# 
  5124  000E                     	;# 
  5125  000F                     	;# 
  5126  0010                     	;# 
  5127  0011                     	;# 
  5128  0012                     	;# 
  5129  0013                     	;# 
  5130  0014                     	;# 
  5131  0015                     	;# 
  5132  0016                     	;# 
  5133  0017                     	;# 
  5134  0018                     	;# 
  5135  0019                     	;# 
  5136  001A                     	;# 
  5137  001C                     	;# 
  5138  001C                     	;# 
  5139  001D                     	;# 
  5140  001D                     	;# 
  5141  001E                     	;# 
  5142  001F                     	;# 
  5143  008C                     	;# 
  5144  008C                     	;# 
  5145  008D                     	;# 
  5146  008E                     	;# 
  5147  008E                     	;# 
  5148  008F                     	;# 
  5149  0090                     	;# 
  5150  0090                     	;# 
  5151  0091                     	;# 
  5152  0093                     	;# 
  5153  0094                     	;# 
  5154  0095                     	;# 
  5155  0096                     	;# 
  5156  0097                     	;# 
  5157  0098                     	;# 
  5158  0099                     	;# 
  5159  009A                     	;# 
  5160  009B                     	;# 
  5161  009C                     	;# 
  5162  009D                     	;# 
  5163  009E                     	;# 
  5164  010C                     	;# 
  5165  010D                     	;# 
  5166  010E                     	;# 
  5167  010E                     	;# 
  5168  010F                     	;# 
  5169  0110                     	;# 
  5170  0110                     	;# 
  5171  0111                     	;# 
  5172  0112                     	;# 
  5173  0112                     	;# 
  5174  0113                     	;# 
  5175  0114                     	;# 
  5176  0114                     	;# 
  5177  0115                     	;# 
  5178  0116                     	;# 
  5179  0116                     	;# 
  5180  0117                     	;# 
  5181  0119                     	;# 
  5182  0119                     	;# 
  5183  0119                     	;# 
  5184  011A                     	;# 
  5185  011A                     	;# 
  5186  011A                     	;# 
  5187  011B                     	;# 
  5188  011B                     	;# 
  5189  011B                     	;# 
  5190  011B                     	;# 
  5191  011B                     	;# 
  5192  011C                     	;# 
  5193  011C                     	;# 
  5194  011C                     	;# 
  5195  011D                     	;# 
  5196  011D                     	;# 
  5197  011D                     	;# 
  5198  011E                     	;# 
  5199  011E                     	;# 
  5200  011E                     	;# 
  5201  011F                     	;# 
  5202  011F                     	;# 
  5203  011F                     	;# 
  5204  011F                     	;# 
  5205  011F                     	;# 
  5206  018C                     	;# 
  5207  018D                     	;# 
  5208  018E                     	;# 
  5209  018F                     	;# 
  5210  0190                     	;# 
  5211  0191                     	;# 
  5212  0192                     	;# 
  5213  0196                     	;# 
  5214  0197                     	;# 
  5215  0198                     	;# 
  5216  0199                     	;# 
  5217  019A                     	;# 
  5218  019B                     	;# 
  5219  019C                     	;# 
  5220  020C                     	;# 
  5221  020C                     	;# 
  5222  020D                     	;# 
  5223  020E                     	;# 
  5224  020F                     	;# 
  5225  020F                     	;# 
  5226  0210                     	;# 
  5227  0210                     	;# 
  5228  0211                     	;# 
  5229  0211                     	;# 
  5230  0212                     	;# 
  5231  0212                     	;# 
  5232  0213                     	;# 
  5233  0214                     	;# 
  5234  0215                     	;# 
  5235  0215                     	;# 
  5236  0216                     	;# 
  5237  0216                     	;# 
  5238  0217                     	;# 
  5239  0217                     	;# 
  5240  0218                     	;# 
  5241  0218                     	;# 
  5242  0219                     	;# 
  5243  021A                     	;# 
  5244  021B                     	;# 
  5245  021B                     	;# 
  5246  021C                     	;# 
  5247  021C                     	;# 
  5248  021D                     	;# 
  5249  021D                     	;# 
  5250  021E                     	;# 
  5251  021F                     	;# 
  5252  028C                     	;# 
  5253  028C                     	;# 
  5254  028D                     	;# 
  5255  028D                     	;# 
  5256  028E                     	;# 
  5257  028F                     	;# 
  5258  0290                     	;# 
  5259  0290                     	;# 
  5260  0291                     	;# 
  5261  0292                     	;# 
  5262  0292                     	;# 
  5263  0293                     	;# 
  5264  0293                     	;# 
  5265  0294                     	;# 
  5266  0295                     	;# 
  5267  0296                     	;# 
  5268  0296                     	;# 
  5269  0297                     	;# 
  5270  0298                     	;# 
  5271  0298                     	;# 
  5272  0299                     	;# 
  5273  0299                     	;# 
  5274  029A                     	;# 
  5275  029B                     	;# 
  5276  029C                     	;# 
  5277  029C                     	;# 
  5278  029D                     	;# 
  5279  030C                     	;# 
  5280  030C                     	;# 
  5281  030D                     	;# 
  5282  030E                     	;# 
  5283  030F                     	;# 
  5284  0310                     	;# 
  5285  0310                     	;# 
  5286  0311                     	;# 
  5287  0312                     	;# 
  5288  0313                     	;# 
  5289  0314                     	;# 
  5290  0314                     	;# 
  5291  0315                     	;# 
  5292  0316                     	;# 
  5293  0317                     	;# 
  5294  0318                     	;# 
  5295  0318                     	;# 
  5296  0319                     	;# 
  5297  031A                     	;# 
  5298  031B                     	;# 
  5299  031C                     	;# 
  5300  031C                     	;# 
  5301  031D                     	;# 
  5302  031E                     	;# 
  5303  031F                     	;# 
  5304  038C                     	;# 
  5305  038C                     	;# 
  5306  038D                     	;# 
  5307  038E                     	;# 
  5308  0390                     	;# 
  5309  0390                     	;# 
  5310  0391                     	;# 
  5311  0392                     	;# 
  5312  040C                     	;# 
  5313  040D                     	;# 
  5314  040E                     	;# 
  5315  040F                     	;# 
  5316  0410                     	;# 
  5317  0411                     	;# 
  5318  0416                     	;# 
  5319  0416                     	;# 
  5320  0417                     	;# 
  5321  0418                     	;# 
  5322  0418                     	;# 
  5323  0419                     	;# 
  5324  041A                     	;# 
  5325  041A                     	;# 
  5326  041B                     	;# 
  5327  041C                     	;# 
  5328  041C                     	;# 
  5329  041D                     	;# 
  5330  041E                     	;# 
  5331  041F                     	;# 
  5332  048C                     	;# 
  5333  048C                     	;# 
  5334  048D                     	;# 
  5335  048E                     	;# 
  5336  048F                     	;# 
  5337  048F                     	;# 
  5338  0490                     	;# 
  5339  0491                     	;# 
  5340  0492                     	;# 
  5341  0492                     	;# 
  5342  0493                     	;# 
  5343  0494                     	;# 
  5344  0495                     	;# 
  5345  0495                     	;# 
  5346  0496                     	;# 
  5347  0497                     	;# 
  5348  0498                     	;# 
  5349  0499                     	;# 
  5350  049A                     	;# 
  5351  049B                     	;# 
  5352  049C                     	;# 
  5353  049D                     	;# 
  5354  050C                     	;# 
  5355  050C                     	;# 
  5356  050D                     	;# 
  5357  050E                     	;# 
  5358  050F                     	;# 
  5359  050F                     	;# 
  5360  0510                     	;# 
  5361  0511                     	;# 
  5362  0512                     	;# 
  5363  0512                     	;# 
  5364  0513                     	;# 
  5365  0514                     	;# 
  5366  0515                     	;# 
  5367  0515                     	;# 
  5368  0516                     	;# 
  5369  0517                     	;# 
  5370  0518                     	;# 
  5371  0519                     	;# 
  5372  051A                     	;# 
  5373  051B                     	;# 
  5374  051C                     	;# 
  5375  051D                     	;# 
  5376  058C                     	;# 
  5377  058C                     	;# 
  5378  058D                     	;# 
  5379  058E                     	;# 
  5380  058F                     	;# 
  5381  058F                     	;# 
  5382  0590                     	;# 
  5383  0591                     	;# 
  5384  0592                     	;# 
  5385  0593                     	;# 
  5386  060C                     	;# 
  5387  060D                     	;# 
  5388  060E                     	;# 
  5389  060F                     	;# 
  5390  0610                     	;# 
  5391  0611                     	;# 
  5392  0612                     	;# 
  5393  0613                     	;# 
  5394  0614                     	;# 
  5395  0616                     	;# 
  5396  0617                     	;# 
  5397  0618                     	;# 
  5398  0619                     	;# 
  5399  061A                     	;# 
  5400  061B                     	;# 
  5401  061C                     	;# 
  5402  061D                     	;# 
  5403  061E                     	;# 
  5404  068C                     	;# 
  5405  068D                     	;# 
  5406  068E                     	;# 
  5407  068F                     	;# 
  5408  0690                     	;# 
  5409  0691                     	;# 
  5410  0692                     	;# 
  5411  0693                     	;# 
  5412  0694                     	;# 
  5413  070C                     	;# 
  5414  070D                     	;# 
  5415  070E                     	;# 
  5416  070F                     	;# 
  5417  0710                     	;# 
  5418  0711                     	;# 
  5419  0712                     	;# 
  5420  0713                     	;# 
  5421  0714                     	;# 
  5422  0716                     	;# 
  5423  0717                     	;# 
  5424  0718                     	;# 
  5425  0719                     	;# 
  5426  071A                     	;# 
  5427  071B                     	;# 
  5428  071C                     	;# 
  5429  071D                     	;# 
  5430  071E                     	;# 
  5431  0796                     	;# 
  5432  0797                     	;# 
  5433  0798                     	;# 
  5434  0799                     	;# 
  5435  079A                     	;# 
  5436  079B                     	;# 
  5437  080C                     	;# 
  5438  080D                     	;# 
  5439  080E                     	;# 
  5440  080F                     	;# 
  5441  0810                     	;# 
  5442  0811                     	;# 
  5443  0812                     	;# 
  5444  0813                     	;# 
  5445  0814                     	;# 
  5446  081A                     	;# 
  5447  081B                     	;# 
  5448  081C                     	;# 
  5449  081D                     	;# 
  5450  081E                     	;# 
  5451  081F                     	;# 
  5452  088C                     	;# 
  5453  088D                     	;# 
  5454  088E                     	;# 
  5455  088F                     	;# 
  5456  0890                     	;# 
  5457  0891                     	;# 
  5458  0892                     	;# 
  5459  0893                     	;# 
  5460  0895                     	;# 
  5461  0896                     	;# 
  5462  0897                     	;# 
  5463  0898                     	;# 
  5464  0899                     	;# 
  5465  089A                     	;# 
  5466  089B                     	;# 
  5467  090C                     	;# 
  5468  090E                     	;# 
  5469  090F                     	;# 
  5470  091F                     	;# 
  5471  091F                     	;# 
  5472  098F                     	;# 
  5473  098F                     	;# 
  5474  0990                     	;# 
  5475  0991                     	;# 
  5476  0992                     	;# 
  5477  0993                     	;# 
  5478  0994                     	;# 
  5479  0995                     	;# 
  5480  0996                     	;# 
  5481  0997                     	;# 
  5482  0E0F                     	;# 
  5483  0E10                     	;# 
  5484  0E11                     	;# 
  5485  0E12                     	;# 
  5486  0E13                     	;# 
  5487  0E14                     	;# 
  5488  0E15                     	;# 
  5489  0E16                     	;# 
  5490  0E17                     	;# 
  5491  0E18                     	;# 
  5492  0E19                     	;# 
  5493  0E1A                     	;# 
  5494  0E1B                     	;# 
  5495  0E1C                     	;# 
  5496  0E1D                     	;# 
  5497  0E1E                     	;# 
  5498  0E1F                     	;# 
  5499  0E20                     	;# 
  5500  0E21                     	;# 
  5501  0E22                     	;# 
  5502  0E23                     	;# 
  5503  0E24                     	;# 
  5504  0E25                     	;# 
  5505  0E26                     	;# 
  5506  0E27                     	;# 
  5507  0E28                     	;# 
  5508  0E29                     	;# 
  5509  0E2A                     	;# 
  5510  0E2B                     	;# 
  5511  0E2C                     	;# 
  5512  0E2D                     	;# 
  5513  0E2E                     	;# 
  5514  0E2F                     	;# 
  5515  0E30                     	;# 
  5516  0E31                     	;# 
  5517  0E32                     	;# 
  5518  0E33                     	;# 
  5519  0E34                     	;# 
  5520  0E35                     	;# 
  5521  0E36                     	;# 
  5522  0E37                     	;# 
  5523  0E8F                     	;# 
  5524  0E90                     	;# 
  5525  0E91                     	;# 
  5526  0E92                     	;# 
  5527  0E93                     	;# 
  5528  0E94                     	;# 
  5529  0E95                     	;# 
  5530  0E96                     	;# 
  5531  0E97                     	;# 
  5532  0E9C                     	;# 
  5533  0E9D                     	;# 
  5534  0E9E                     	;# 
  5535  0EA1                     	;# 
  5536  0EA2                     	;# 
  5537  0EA3                     	;# 
  5538  0EA4                     	;# 
  5539  0EA5                     	;# 
  5540  0EA9                     	;# 
  5541  0EAA                     	;# 
  5542  0EAB                     	;# 
  5543  0EAC                     	;# 
  5544  0EB1                     	;# 
  5545  0EB2                     	;# 
  5546  0EB3                     	;# 
  5547  0EB8                     	;# 
  5548  0EB9                     	;# 
  5549  0EBA                     	;# 
  5550  0EBB                     	;# 
  5551  0EBC                     	;# 
  5552  0EBD                     	;# 
  5553  0EBE                     	;# 
  5554  0EC3                     	;# 
  5555  0EC5                     	;# 
  5556  0EC6                     	;# 
  5557  0EC7                     	;# 
  5558  0EC8                     	;# 
  5559  0EC9                     	;# 
  5560  0ECA                     	;# 
  5561  0ECB                     	;# 
  5562  0ECC                     	;# 
  5563  0F10                     	;# 
  5564  0F11                     	;# 
  5565  0F12                     	;# 
  5566  0F13                     	;# 
  5567  0F14                     	;# 
  5568  0F15                     	;# 
  5569  0F16                     	;# 
  5570  0F17                     	;# 
  5571  0F18                     	;# 
  5572  0F19                     	;# 
  5573  0F1A                     	;# 
  5574  0F1B                     	;# 
  5575  0F1C                     	;# 
  5576  0F1D                     	;# 
  5577  0F1E                     	;# 
  5578  0F1F                     	;# 
  5579  0F20                     	;# 
  5580  0F21                     	;# 
  5581  0F22                     	;# 
  5582  0F23                     	;# 
  5583  0F24                     	;# 
  5584  0F25                     	;# 
  5585  0F26                     	;# 
  5586  0F27                     	;# 
  5587  0F28                     	;# 
  5588  0F29                     	;# 
  5589  0F2A                     	;# 
  5590  0F2B                     	;# 
  5591  0F2C                     	;# 
  5592  0F2D                     	;# 
  5593  0F2E                     	;# 
  5594  0F2F                     	;# 
  5595  0F30                     	;# 
  5596  0F31                     	;# 
  5597  0F32                     	;# 
  5598  0F38                     	;# 
  5599  0F39                     	;# 
  5600  0F3A                     	;# 
  5601  0F3B                     	;# 
  5602  0F3C                     	;# 
  5603  0F3D                     	;# 
  5604  0F3E                     	;# 
  5605  0F3F                     	;# 
  5606  0F40                     	;# 
  5607  0F41                     	;# 
  5608  0F43                     	;# 
  5609  0F44                     	;# 
  5610  0F45                     	;# 
  5611  0F46                     	;# 
  5612  0F47                     	;# 
  5613  0F48                     	;# 
  5614  0F49                     	;# 
  5615  0F4A                     	;# 
  5616  0F4B                     	;# 
  5617  0F4C                     	;# 
  5618  0F4E                     	;# 
  5619  0F4F                     	;# 
  5620  0F50                     	;# 
  5621  0F51                     	;# 
  5622  0F52                     	;# 
  5623  0F53                     	;# 
  5624  0F54                     	;# 
  5625  0F55                     	;# 
  5626  0F56                     	;# 
  5627  0F57                     	;# 
  5628  0F59                     	;# 
  5629  0F5A                     	;# 
  5630  0F5B                     	;# 
  5631  0F5C                     	;# 
  5632  0F5D                     	;# 
  5633  0F61                     	;# 
  5634  0F62                     	;# 
  5635  0F64                     	;# 
  5636  0F65                     	;# 
  5637  0F66                     	;# 
  5638  0F67                     	;# 
  5639  0F68                     	;# 
  5640  0F69                     	;# 
  5641  0F6A                     	;# 
  5642  0F6B                     	;# 
  5643  0F6C                     	;# 
  5644  0F6D                     	;# 
  5645  0FE4                     	;# 
  5646  0FE5                     	;# 
  5647  0FE6                     	;# 
  5648  0FE7                     	;# 
  5649  0FE8                     	;# 
  5650  0FE9                     	;# 
  5651  0FEA                     	;# 
  5652  0FEB                     	;# 
  5653  0FED                     	;# 
  5654  0FEE                     	;# 
  5655  0FEF                     	;# 
  5656  0000                     	;# 
  5657  0001                     	;# 
  5658  0002                     	;# 
  5659  0003                     	;# 
  5660  0004                     	;# 
  5661  0005                     	;# 
  5662  0006                     	;# 
  5663  0007                     	;# 
  5664  0008                     	;# 
  5665  0009                     	;# 
  5666  000A                     	;# 
  5667  000B                     	;# 
  5668  000C                     	;# 
  5669  000D                     	;# 
  5670  000E                     	;# 
  5671  000F                     	;# 
  5672  0010                     	;# 
  5673  0011                     	;# 
  5674  0012                     	;# 
  5675  0013                     	;# 
  5676  0014                     	;# 
  5677  0015                     	;# 
  5678  0016                     	;# 
  5679  0017                     	;# 
  5680  0018                     	;# 
  5681  0019                     	;# 
  5682  001A                     	;# 
  5683  001C                     	;# 
  5684  001C                     	;# 
  5685  001D                     	;# 
  5686  001D                     	;# 
  5687  001E                     	;# 
  5688  001F                     	;# 
  5689  008C                     	;# 
  5690  008C                     	;# 
  5691  008D                     	;# 
  5692  008E                     	;# 
  5693  008E                     	;# 
  5694  008F                     	;# 
  5695  0090                     	;# 
  5696  0090                     	;# 
  5697  0091                     	;# 
  5698  0093                     	;# 
  5699  0094                     	;# 
  5700  0095                     	;# 
  5701  0096                     	;# 
  5702  0097                     	;# 
  5703  0098                     	;# 
  5704  0099                     	;# 
  5705  009A                     	;# 
  5706  009B                     	;# 
  5707  009C                     	;# 
  5708  009D                     	;# 
  5709  009E                     	;# 
  5710  010C                     	;# 
  5711  010D                     	;# 
  5712  010E                     	;# 
  5713  010E                     	;# 
  5714  010F                     	;# 
  5715  0110                     	;# 
  5716  0110                     	;# 
  5717  0111                     	;# 
  5718  0112                     	;# 
  5719  0112                     	;# 
  5720  0113                     	;# 
  5721  0114                     	;# 
  5722  0114                     	;# 
  5723  0115                     	;# 
  5724  0116                     	;# 
  5725  0116                     	;# 
  5726  0117                     	;# 
  5727  0119                     	;# 
  5728  0119                     	;# 
  5729  0119                     	;# 
  5730  011A                     	;# 
  5731  011A                     	;# 
  5732  011A                     	;# 
  5733  011B                     	;# 
  5734  011B                     	;# 
  5735  011B                     	;# 
  5736  011B                     	;# 
  5737  011B                     	;# 
  5738  011C                     	;# 
  5739  011C                     	;# 
  5740  011C                     	;# 
  5741  011D                     	;# 
  5742  011D                     	;# 
  5743  011D                     	;# 
  5744  011E                     	;# 
  5745  011E                     	;# 
  5746  011E                     	;# 
  5747  011F                     	;# 
  5748  011F                     	;# 
  5749  011F                     	;# 
  5750  011F                     	;# 
  5751  011F                     	;# 
  5752  018C                     	;# 
  5753  018D                     	;# 
  5754  018E                     	;# 
  5755  018F                     	;# 
  5756  0190                     	;# 
  5757  0191                     	;# 
  5758  0192                     	;# 
  5759  0196                     	;# 
  5760  0197                     	;# 
  5761  0198                     	;# 
  5762  0199                     	;# 
  5763  019A                     	;# 
  5764  019B                     	;# 
  5765  019C                     	;# 
  5766  020C                     	;# 
  5767  020C                     	;# 
  5768  020D                     	;# 
  5769  020E                     	;# 
  5770  020F                     	;# 
  5771  020F                     	;# 
  5772  0210                     	;# 
  5773  0210                     	;# 
  5774  0211                     	;# 
  5775  0211                     	;# 
  5776  0212                     	;# 
  5777  0212                     	;# 
  5778  0213                     	;# 
  5779  0214                     	;# 
  5780  0215                     	;# 
  5781  0215                     	;# 
  5782  0216                     	;# 
  5783  0216                     	;# 
  5784  0217                     	;# 
  5785  0217                     	;# 
  5786  0218                     	;# 
  5787  0218                     	;# 
  5788  0219                     	;# 
  5789  021A                     	;# 
  5790  021B                     	;# 
  5791  021B                     	;# 
  5792  021C                     	;# 
  5793  021C                     	;# 
  5794  021D                     	;# 
  5795  021D                     	;# 
  5796  021E                     	;# 
  5797  021F                     	;# 
  5798  028C                     	;# 
  5799  028C                     	;# 
  5800  028D                     	;# 
  5801  028D                     	;# 
  5802  028E                     	;# 
  5803  028F                     	;# 
  5804  0290                     	;# 
  5805  0290                     	;# 
  5806  0291                     	;# 
  5807  0292                     	;# 
  5808  0292                     	;# 
  5809  0293                     	;# 
  5810  0293                     	;# 
  5811  0294                     	;# 
  5812  0295                     	;# 
  5813  0296                     	;# 
  5814  0296                     	;# 
  5815  0297                     	;# 
  5816  0298                     	;# 
  5817  0298                     	;# 
  5818  0299                     	;# 
  5819  0299                     	;# 
  5820  029A                     	;# 
  5821  029B                     	;# 
  5822  029C                     	;# 
  5823  029C                     	;# 
  5824  029D                     	;# 
  5825  030C                     	;# 
  5826  030C                     	;# 
  5827  030D                     	;# 
  5828  030E                     	;# 
  5829  030F                     	;# 
  5830  0310                     	;# 
  5831  0310                     	;# 
  5832  0311                     	;# 
  5833  0312                     	;# 
  5834  0313                     	;# 
  5835  0314                     	;# 
  5836  0314                     	;# 
  5837  0315                     	;# 
  5838  0316                     	;# 
  5839  0317                     	;# 
  5840  0318                     	;# 
  5841  0318                     	;# 
  5842  0319                     	;# 
  5843  031A                     	;# 
  5844  031B                     	;# 
  5845  031C                     	;# 
  5846  031C                     	;# 
  5847  031D                     	;# 
  5848  031E                     	;# 
  5849  031F                     	;# 
  5850  038C                     	;# 
  5851  038C                     	;# 
  5852  038D                     	;# 
  5853  038E                     	;# 
  5854  0390                     	;# 
  5855  0390                     	;# 
  5856  0391                     	;# 
  5857  0392                     	;# 
  5858  040C                     	;# 
  5859  040D                     	;# 
  5860  040E                     	;# 
  5861  040F                     	;# 
  5862  0410                     	;# 
  5863  0411                     	;# 
  5864  0416                     	;# 
  5865  0416                     	;# 
  5866  0417                     	;# 
  5867  0418                     	;# 
  5868  0418                     	;# 
  5869  0419                     	;# 
  5870  041A                     	;# 
  5871  041A                     	;# 
  5872  041B                     	;# 
  5873  041C                     	;# 
  5874  041C                     	;# 
  5875  041D                     	;# 
  5876  041E                     	;# 
  5877  041F                     	;# 
  5878  048C                     	;# 
  5879  048C                     	;# 
  5880  048D                     	;# 
  5881  048E                     	;# 
  5882  048F                     	;# 
  5883  048F                     	;# 
  5884  0490                     	;# 
  5885  0491                     	;# 
  5886  0492                     	;# 
  5887  0492                     	;# 
  5888  0493                     	;# 
  5889  0494                     	;# 
  5890  0495                     	;# 
  5891  0495                     	;# 
  5892  0496                     	;# 
  5893  0497                     	;# 
  5894  0498                     	;# 
  5895  0499                     	;# 
  5896  049A                     	;# 
  5897  049B                     	;# 
  5898  049C                     	;# 
  5899  049D                     	;# 
  5900  050C                     	;# 
  5901  050C                     	;# 
  5902  050D                     	;# 
  5903  050E                     	;# 
  5904  050F                     	;# 
  5905  050F                     	;# 
  5906  0510                     	;# 
  5907  0511                     	;# 
  5908  0512                     	;# 
  5909  0512                     	;# 
  5910  0513                     	;# 
  5911  0514                     	;# 
  5912  0515                     	;# 
  5913  0515                     	;# 
  5914  0516                     	;# 
  5915  0517                     	;# 
  5916  0518                     	;# 
  5917  0519                     	;# 
  5918  051A                     	;# 
  5919  051B                     	;# 
  5920  051C                     	;# 
  5921  051D                     	;# 
  5922  058C                     	;# 
  5923  058C                     	;# 
  5924  058D                     	;# 
  5925  058E                     	;# 
  5926  058F                     	;# 
  5927  058F                     	;# 
  5928  0590                     	;# 
  5929  0591                     	;# 
  5930  0592                     	;# 
  5931  0593                     	;# 
  5932  060C                     	;# 
  5933  060D                     	;# 
  5934  060E                     	;# 
  5935  060F                     	;# 
  5936  0610                     	;# 
  5937  0611                     	;# 
  5938  0612                     	;# 
  5939  0613                     	;# 
  5940  0614                     	;# 
  5941  0616                     	;# 
  5942  0617                     	;# 
  5943  0618                     	;# 
  5944  0619                     	;# 
  5945  061A                     	;# 
  5946  061B                     	;# 
  5947  061C                     	;# 
  5948  061D                     	;# 
  5949  061E                     	;# 
  5950  068C                     	;# 
  5951  068D                     	;# 
  5952  068E                     	;# 
  5953  068F                     	;# 
  5954  0690                     	;# 
  5955  0691                     	;# 
  5956  0692                     	;# 
  5957  0693                     	;# 
  5958  0694                     	;# 
  5959  070C                     	;# 
  5960  070D                     	;# 
  5961  070E                     	;# 
  5962  070F                     	;# 
  5963  0710                     	;# 
  5964  0711                     	;# 
  5965  0712                     	;# 
  5966  0713                     	;# 
  5967  0714                     	;# 
  5968  0716                     	;# 
  5969  0717                     	;# 
  5970  0718                     	;# 
  5971  0719                     	;# 
  5972  071A                     	;# 
  5973  071B                     	;# 
  5974  071C                     	;# 
  5975  071D                     	;# 
  5976  071E                     	;# 
  5977  0796                     	;# 
  5978  0797                     	;# 
  5979  0798                     	;# 
  5980  0799                     	;# 
  5981  079A                     	;# 
  5982  079B                     	;# 
  5983  080C                     	;# 
  5984  080D                     	;# 
  5985  080E                     	;# 
  5986  080F                     	;# 
  5987  0810                     	;# 
  5988  0811                     	;# 
  5989  0812                     	;# 
  5990  0813                     	;# 
  5991  0814                     	;# 
  5992  081A                     	;# 
  5993  081B                     	;# 
  5994  081C                     	;# 
  5995  081D                     	;# 
  5996  081E                     	;# 
  5997  081F                     	;# 
  5998  088C                     	;# 
  5999  088D                     	;# 
  6000  088E                     	;# 
  6001  088F                     	;# 
  6002  0890                     	;# 
  6003  0891                     	;# 
  6004  0892                     	;# 
  6005  0893                     	;# 
  6006  0895                     	;# 
  6007  0896                     	;# 
  6008  0897                     	;# 
  6009  0898                     	;# 
  6010  0899                     	;# 
  6011  089A                     	;# 
  6012  089B                     	;# 
  6013  090C                     	;# 
  6014  090E                     	;# 
  6015  090F                     	;# 
  6016  091F                     	;# 
  6017  091F                     	;# 
  6018  098F                     	;# 
  6019  098F                     	;# 
  6020  0990                     	;# 
  6021  0991                     	;# 
  6022  0992                     	;# 
  6023  0993                     	;# 
  6024  0994                     	;# 
  6025  0995                     	;# 
  6026  0996                     	;# 
  6027  0997                     	;# 
  6028  0E0F                     	;# 
  6029  0E10                     	;# 
  6030  0E11                     	;# 
  6031  0E12                     	;# 
  6032  0E13                     	;# 
  6033  0E14                     	;# 
  6034  0E15                     	;# 
  6035  0E16                     	;# 
  6036  0E17                     	;# 
  6037  0E18                     	;# 
  6038  0E19                     	;# 
  6039  0E1A                     	;# 
  6040  0E1B                     	;# 
  6041  0E1C                     	;# 
  6042  0E1D                     	;# 
  6043  0E1E                     	;# 
  6044  0E1F                     	;# 
  6045  0E20                     	;# 
  6046  0E21                     	;# 
  6047  0E22                     	;# 
  6048  0E23                     	;# 
  6049  0E24                     	;# 
  6050  0E25                     	;# 
  6051  0E26                     	;# 
  6052  0E27                     	;# 
  6053  0E28                     	;# 
  6054  0E29                     	;# 
  6055  0E2A                     	;# 
  6056  0E2B                     	;# 
  6057  0E2C                     	;# 
  6058  0E2D                     	;# 
  6059  0E2E                     	;# 
  6060  0E2F                     	;# 
  6061  0E30                     	;# 
  6062  0E31                     	;# 
  6063  0E32                     	;# 
  6064  0E33                     	;# 
  6065  0E34                     	;# 
  6066  0E35                     	;# 
  6067  0E36                     	;# 
  6068  0E37                     	;# 
  6069  0E8F                     	;# 
  6070  0E90                     	;# 
  6071  0E91                     	;# 
  6072  0E92                     	;# 
  6073  0E93                     	;# 
  6074  0E94                     	;# 
  6075  0E95                     	;# 
  6076  0E96                     	;# 
  6077  0E97                     	;# 
  6078  0E9C                     	;# 
  6079  0E9D                     	;# 
  6080  0E9E                     	;# 
  6081  0EA1                     	;# 
  6082  0EA2                     	;# 
  6083  0EA3                     	;# 
  6084  0EA4                     	;# 
  6085  0EA5                     	;# 
  6086  0EA9                     	;# 
  6087  0EAA                     	;# 
  6088  0EAB                     	;# 
  6089  0EAC                     	;# 
  6090  0EB1                     	;# 
  6091  0EB2                     	;# 
  6092  0EB3                     	;# 
  6093  0EB8                     	;# 
  6094  0EB9                     	;# 
  6095  0EBA                     	;# 
  6096  0EBB                     	;# 
  6097  0EBC                     	;# 
  6098  0EBD                     	;# 
  6099  0EBE                     	;# 
  6100  0EC3                     	;# 
  6101  0EC5                     	;# 
  6102  0EC6                     	;# 
  6103  0EC7                     	;# 
  6104  0EC8                     	;# 
  6105  0EC9                     	;# 
  6106  0ECA                     	;# 
  6107  0ECB                     	;# 
  6108  0ECC                     	;# 
  6109  0F10                     	;# 
  6110  0F11                     	;# 
  6111  0F12                     	;# 
  6112  0F13                     	;# 
  6113  0F14                     	;# 
  6114  0F15                     	;# 
  6115  0F16                     	;# 
  6116  0F17                     	;# 
  6117  0F18                     	;# 
  6118  0F19                     	;# 
  6119  0F1A                     	;# 
  6120  0F1B                     	;# 
  6121  0F1C                     	;# 
  6122  0F1D                     	;# 
  6123  0F1E                     	;# 
  6124  0F1F                     	;# 
  6125  0F20                     	;# 
  6126  0F21                     	;# 
  6127  0F22                     	;# 
  6128  0F23                     	;# 
  6129  0F24                     	;# 
  6130  0F25                     	;# 
  6131  0F26                     	;# 
  6132  0F27                     	;# 
  6133  0F28                     	;# 
  6134  0F29                     	;# 
  6135  0F2A                     	;# 
  6136  0F2B                     	;# 
  6137  0F2C                     	;# 
  6138  0F2D                     	;# 
  6139  0F2E                     	;# 
  6140  0F2F                     	;# 
  6141  0F30                     	;# 
  6142  0F31                     	;# 
  6143  0F32                     	;# 
  6144  0F38                     	;# 
  6145  0F39                     	;# 
  6146  0F3A                     	;# 
  6147  0F3B                     	;# 
  6148  0F3C                     	;# 
  6149  0F3D                     	;# 
  6150  0F3E                     	;# 
  6151  0F3F                     	;# 
  6152  0F40                     	;# 
  6153  0F41                     	;# 
  6154  0F43                     	;# 
  6155  0F44                     	;# 
  6156  0F45                     	;# 
  6157  0F46                     	;# 
  6158  0F47                     	;# 
  6159  0F48                     	;# 
  6160  0F49                     	;# 
  6161  0F4A                     	;# 
  6162  0F4B                     	;# 
  6163  0F4C                     	;# 
  6164  0F4E                     	;# 
  6165  0F4F                     	;# 
  6166  0F50                     	;# 
  6167  0F51                     	;# 
  6168  0F52                     	;# 
  6169  0F53                     	;# 
  6170  0F54                     	;# 
  6171  0F55                     	;# 
  6172  0F56                     	;# 
  6173  0F57                     	;# 
  6174  0F59                     	;# 
  6175  0F5A                     	;# 
  6176  0F5B                     	;# 
  6177  0F5C                     	;# 
  6178  0F5D                     	;# 
  6179  0F61                     	;# 
  6180  0F62                     	;# 
  6181  0F64                     	;# 
  6182  0F65                     	;# 
  6183  0F66                     	;# 
  6184  0F67                     	;# 
  6185  0F68                     	;# 
  6186  0F69                     	;# 
  6187  0F6A                     	;# 
  6188  0F6B                     	;# 
  6189  0F6C                     	;# 
  6190  0F6D                     	;# 
  6191  0FE4                     	;# 
  6192  0FE5                     	;# 
  6193  0FE6                     	;# 
  6194  0FE7                     	;# 
  6195  0FE8                     	;# 
  6196  0FE9                     	;# 
  6197  0FEA                     	;# 
  6198  0FEB                     	;# 
  6199  0FED                     	;# 
  6200  0FEE                     	;# 
  6201  0FEF                     	;# 
  6202  0000                     	;# 
  6203  0001                     	;# 
  6204  0002                     	;# 
  6205  0003                     	;# 
  6206  0004                     	;# 
  6207  0005                     	;# 
  6208  0006                     	;# 
  6209  0007                     	;# 
  6210  0008                     	;# 
  6211  0009                     	;# 
  6212  000A                     	;# 
  6213  000B                     	;# 
  6214  000C                     	;# 
  6215  000D                     	;# 
  6216  000E                     	;# 
  6217  000F                     	;# 
  6218  0010                     	;# 
  6219  0011                     	;# 
  6220  0012                     	;# 
  6221  0013                     	;# 
  6222  0014                     	;# 
  6223  0015                     	;# 
  6224  0016                     	;# 
  6225  0017                     	;# 
  6226  0018                     	;# 
  6227  0019                     	;# 
  6228  001A                     	;# 
  6229  001C                     	;# 
  6230  001C                     	;# 
  6231  001D                     	;# 
  6232  001D                     	;# 
  6233  001E                     	;# 
  6234  001F                     	;# 
  6235  008C                     	;# 
  6236  008C                     	;# 
  6237  008D                     	;# 
  6238  008E                     	;# 
  6239  008E                     	;# 
  6240  008F                     	;# 
  6241  0090                     	;# 
  6242  0090                     	;# 
  6243  0091                     	;# 
  6244  0093                     	;# 
  6245  0094                     	;# 
  6246  0095                     	;# 
  6247  0096                     	;# 
  6248  0097                     	;# 
  6249  0098                     	;# 
  6250  0099                     	;# 
  6251  009A                     	;# 
  6252  009B                     	;# 
  6253  009C                     	;# 
  6254  009D                     	;# 
  6255  009E                     	;# 
  6256  010C                     	;# 
  6257  010D                     	;# 
  6258  010E                     	;# 
  6259  010E                     	;# 
  6260  010F                     	;# 
  6261  0110                     	;# 
  6262  0110                     	;# 
  6263  0111                     	;# 
  6264  0112                     	;# 
  6265  0112                     	;# 
  6266  0113                     	;# 
  6267  0114                     	;# 
  6268  0114                     	;# 
  6269  0115                     	;# 
  6270  0116                     	;# 
  6271  0116                     	;# 
  6272  0117                     	;# 
  6273  0119                     	;# 
  6274  0119                     	;# 
  6275  0119                     	;# 
  6276  011A                     	;# 
  6277  011A                     	;# 
  6278  011A                     	;# 
  6279  011B                     	;# 
  6280  011B                     	;# 
  6281  011B                     	;# 
  6282  011B                     	;# 
  6283  011B                     	;# 
  6284  011C                     	;# 
  6285  011C                     	;# 
  6286  011C                     	;# 
  6287  011D                     	;# 
  6288  011D                     	;# 
  6289  011D                     	;# 
  6290  011E                     	;# 
  6291  011E                     	;# 
  6292  011E                     	;# 
  6293  011F                     	;# 
  6294  011F                     	;# 
  6295  011F                     	;# 
  6296  011F                     	;# 
  6297  011F                     	;# 
  6298  018C                     	;# 
  6299  018D                     	;# 
  6300  018E                     	;# 
  6301  018F                     	;# 
  6302  0190                     	;# 
  6303  0191                     	;# 
  6304  0192                     	;# 
  6305  0196                     	;# 
  6306  0197                     	;# 
  6307  0198                     	;# 
  6308  0199                     	;# 
  6309  019A                     	;# 
  6310  019B                     	;# 
  6311  019C                     	;# 
  6312  020C                     	;# 
  6313  020C                     	;# 
  6314  020D                     	;# 
  6315  020E                     	;# 
  6316  020F                     	;# 
  6317  020F                     	;# 
  6318  0210                     	;# 
  6319  0210                     	;# 
  6320  0211                     	;# 
  6321  0211                     	;# 
  6322  0212                     	;# 
  6323  0212                     	;# 
  6324  0213                     	;# 
  6325  0214                     	;# 
  6326  0215                     	;# 
  6327  0215                     	;# 
  6328  0216                     	;# 
  6329  0216                     	;# 
  6330  0217                     	;# 
  6331  0217                     	;# 
  6332  0218                     	;# 
  6333  0218                     	;# 
  6334  0219                     	;# 
  6335  021A                     	;# 
  6336  021B                     	;# 
  6337  021B                     	;# 
  6338  021C                     	;# 
  6339  021C                     	;# 
  6340  021D                     	;# 
  6341  021D                     	;# 
  6342  021E                     	;# 
  6343  021F                     	;# 
  6344  028C                     	;# 
  6345  028C                     	;# 
  6346  028D                     	;# 
  6347  028D                     	;# 
  6348  028E                     	;# 
  6349  028F                     	;# 
  6350  0290                     	;# 
  6351  0290                     	;# 
  6352  0291                     	;# 
  6353  0292                     	;# 
  6354  0292                     	;# 
  6355  0293                     	;# 
  6356  0293                     	;# 
  6357  0294                     	;# 
  6358  0295                     	;# 
  6359  0296                     	;# 
  6360  0296                     	;# 
  6361  0297                     	;# 
  6362  0298                     	;# 
  6363  0298                     	;# 
  6364  0299                     	;# 
  6365  0299                     	;# 
  6366  029A                     	;# 
  6367  029B                     	;# 
  6368  029C                     	;# 
  6369  029C                     	;# 
  6370  029D                     	;# 
  6371  030C                     	;# 
  6372  030C                     	;# 
  6373  030D                     	;# 
  6374  030E                     	;# 
  6375  030F                     	;# 
  6376  0310                     	;# 
  6377  0310                     	;# 
  6378  0311                     	;# 
  6379  0312                     	;# 
  6380  0313                     	;# 
  6381  0314                     	;# 
  6382  0314                     	;# 
  6383  0315                     	;# 
  6384  0316                     	;# 
  6385  0317                     	;# 
  6386  0318                     	;# 
  6387  0318                     	;# 
  6388  0319                     	;# 
  6389  031A                     	;# 
  6390  031B                     	;# 
  6391  031C                     	;# 
  6392  031C                     	;# 
  6393  031D                     	;# 
  6394  031E                     	;# 
  6395  031F                     	;# 
  6396  038C                     	;# 
  6397  038C                     	;# 
  6398  038D                     	;# 
  6399  038E                     	;# 
  6400  0390                     	;# 
  6401  0390                     	;# 
  6402  0391                     	;# 
  6403  0392                     	;# 
  6404  040C                     	;# 
  6405  040D                     	;# 
  6406  040E                     	;# 
  6407  040F                     	;# 
  6408  0410                     	;# 
  6409  0411                     	;# 
  6410  0416                     	;# 
  6411  0416                     	;# 
  6412  0417                     	;# 
  6413  0418                     	;# 
  6414  0418                     	;# 
  6415  0419                     	;# 
  6416  041A                     	;# 
  6417  041A                     	;# 
  6418  041B                     	;# 
  6419  041C                     	;# 
  6420  041C                     	;# 
  6421  041D                     	;# 
  6422  041E                     	;# 
  6423  041F                     	;# 
  6424  048C                     	;# 
  6425  048C                     	;# 
  6426  048D                     	;# 
  6427  048E                     	;# 
  6428  048F                     	;# 
  6429  048F                     	;# 
  6430  0490                     	;# 
  6431  0491                     	;# 
  6432  0492                     	;# 
  6433  0492                     	;# 
  6434  0493                     	;# 
  6435  0494                     	;# 
  6436  0495                     	;# 
  6437  0495                     	;# 
  6438  0496                     	;# 
  6439  0497                     	;# 
  6440  0498                     	;# 
  6441  0499                     	;# 
  6442  049A                     	;# 
  6443  049B                     	;# 
  6444  049C                     	;# 
  6445  049D                     	;# 
  6446  050C                     	;# 
  6447  050C                     	;# 
  6448  050D                     	;# 
  6449  050E                     	;# 
  6450  050F                     	;# 
  6451  050F                     	;# 
  6452  0510                     	;# 
  6453  0511                     	;# 
  6454  0512                     	;# 
  6455  0512                     	;# 
  6456  0513                     	;# 
  6457  0514                     	;# 
  6458  0515                     	;# 
  6459  0515                     	;# 
  6460  0516                     	;# 
  6461  0517                     	;# 
  6462  0518                     	;# 
  6463  0519                     	;# 
  6464  051A                     	;# 
  6465  051B                     	;# 
  6466  051C                     	;# 
  6467  051D                     	;# 
  6468  058C                     	;# 
  6469  058C                     	;# 
  6470  058D                     	;# 
  6471  058E                     	;# 
  6472  058F                     	;# 
  6473  058F                     	;# 
  6474  0590                     	;# 
  6475  0591                     	;# 
  6476  0592                     	;# 
  6477  0593                     	;# 
  6478  060C                     	;# 
  6479  060D                     	;# 
  6480  060E                     	;# 
  6481  060F                     	;# 
  6482  0610                     	;# 
  6483  0611                     	;# 
  6484  0612                     	;# 
  6485  0613                     	;# 
  6486  0614                     	;# 
  6487  0616                     	;# 
  6488  0617                     	;# 
  6489  0618                     	;# 
  6490  0619                     	;# 
  6491  061A                     	;# 
  6492  061B                     	;# 
  6493  061C                     	;# 
  6494  061D                     	;# 
  6495  061E                     	;# 
  6496  068C                     	;# 
  6497  068D                     	;# 
  6498  068E                     	;# 
  6499  068F                     	;# 
  6500  0690                     	;# 
  6501  0691                     	;# 
  6502  0692                     	;# 
  6503  0693                     	;# 
  6504  0694                     	;# 
  6505  070C                     	;# 
  6506  070D                     	;# 
  6507  070E                     	;# 
  6508  070F                     	;# 
  6509  0710                     	;# 
  6510  0711                     	;# 
  6511  0712                     	;# 
  6512  0713                     	;# 
  6513  0714                     	;# 
  6514  0716                     	;# 
  6515  0717                     	;# 
  6516  0718                     	;# 
  6517  0719                     	;# 
  6518  071A                     	;# 
  6519  071B                     	;# 
  6520  071C                     	;# 
  6521  071D                     	;# 
  6522  071E                     	;# 
  6523  0796                     	;# 
  6524  0797                     	;# 
  6525  0798                     	;# 
  6526  0799                     	;# 
  6527  079A                     	;# 
  6528  079B                     	;# 
  6529  080C                     	;# 
  6530  080D                     	;# 
  6531  080E                     	;# 
  6532  080F                     	;# 
  6533  0810                     	;# 
  6534  0811                     	;# 
  6535  0812                     	;# 
  6536  0813                     	;# 
  6537  0814                     	;# 
  6538  081A                     	;# 
  6539  081B                     	;# 
  6540  081C                     	;# 
  6541  081D                     	;# 
  6542  081E                     	;# 
  6543  081F                     	;# 
  6544  088C                     	;# 
  6545  088D                     	;# 
  6546  088E                     	;# 
  6547  088F                     	;# 
  6548  0890                     	;# 
  6549  0891                     	;# 
  6550  0892                     	;# 
  6551  0893                     	;# 
  6552  0895                     	;# 
  6553  0896                     	;# 
  6554  0897                     	;# 
  6555  0898                     	;# 
  6556  0899                     	;# 
  6557  089A                     	;# 
  6558  089B                     	;# 
  6559  090C                     	;# 
  6560  090E                     	;# 
  6561  090F                     	;# 
  6562  091F                     	;# 
  6563  091F                     	;# 
  6564  098F                     	;# 
  6565  098F                     	;# 
  6566  0990                     	;# 
  6567  0991                     	;# 
  6568  0992                     	;# 
  6569  0993                     	;# 
  6570  0994                     	;# 
  6571  0995                     	;# 
  6572  0996                     	;# 
  6573  0997                     	;# 
  6574  0E0F                     	;# 
  6575  0E10                     	;# 
  6576  0E11                     	;# 
  6577  0E12                     	;# 
  6578  0E13                     	;# 
  6579  0E14                     	;# 
  6580  0E15                     	;# 
  6581  0E16                     	;# 
  6582  0E17                     	;# 
  6583  0E18                     	;# 
  6584  0E19                     	;# 
  6585  0E1A                     	;# 
  6586  0E1B                     	;# 
  6587  0E1C                     	;# 
  6588  0E1D                     	;# 
  6589  0E1E                     	;# 
  6590  0E1F                     	;# 
  6591  0E20                     	;# 
  6592  0E21                     	;# 
  6593  0E22                     	;# 
  6594  0E23                     	;# 
  6595  0E24                     	;# 
  6596  0E25                     	;# 
  6597  0E26                     	;# 
  6598  0E27                     	;# 
  6599  0E28                     	;# 
  6600  0E29                     	;# 
  6601  0E2A                     	;# 
  6602  0E2B                     	;# 
  6603  0E2C                     	;# 
  6604  0E2D                     	;# 
  6605  0E2E                     	;# 
  6606  0E2F                     	;# 
  6607  0E30                     	;# 
  6608  0E31                     	;# 
  6609  0E32                     	;# 
  6610  0E33                     	;# 
  6611  0E34                     	;# 
  6612  0E35                     	;# 
  6613  0E36                     	;# 
  6614  0E37                     	;# 
  6615  0E8F                     	;# 
  6616  0E90                     	;# 
  6617  0E91                     	;# 
  6618  0E92                     	;# 
  6619  0E93                     	;# 
  6620  0E94                     	;# 
  6621  0E95                     	;# 
  6622  0E96                     	;# 
  6623  0E97                     	;# 
  6624  0E9C                     	;# 
  6625  0E9D                     	;# 
  6626  0E9E                     	;# 
  6627  0EA1                     	;# 
  6628  0EA2                     	;# 
  6629  0EA3                     	;# 
  6630  0EA4                     	;# 
  6631  0EA5                     	;# 
  6632  0EA9                     	;# 
  6633  0EAA                     	;# 
  6634  0EAB                     	;# 
  6635  0EAC                     	;# 
  6636  0EB1                     	;# 
  6637  0EB2                     	;# 
  6638  0EB3                     	;# 
  6639  0EB8                     	;# 
  6640  0EB9                     	;# 
  6641  0EBA                     	;# 
  6642  0EBB                     	;# 
  6643  0EBC                     	;# 
  6644  0EBD                     	;# 
  6645  0EBE                     	;# 
  6646  0EC3                     	;# 
  6647  0EC5                     	;# 
  6648  0EC6                     	;# 
  6649  0EC7                     	;# 
  6650  0EC8                     	;# 
  6651  0EC9                     	;# 
  6652  0ECA                     	;# 
  6653  0ECB                     	;# 
  6654  0ECC                     	;# 
  6655  0F10                     	;# 
  6656  0F11                     	;# 
  6657  0F12                     	;# 
  6658  0F13                     	;# 
  6659  0F14                     	;# 
  6660  0F15                     	;# 
  6661  0F16                     	;# 
  6662  0F17                     	;# 
  6663  0F18                     	;# 
  6664  0F19                     	;# 
  6665  0F1A                     	;# 
  6666  0F1B                     	;# 
  6667  0F1C                     	;# 
  6668  0F1D                     	;# 
  6669  0F1E                     	;# 
  6670  0F1F                     	;# 
  6671  0F20                     	;# 
  6672  0F21                     	;# 
  6673  0F22                     	;# 
  6674  0F23                     	;# 
  6675  0F24                     	;# 
  6676  0F25                     	;# 
  6677  0F26                     	;# 
  6678  0F27                     	;# 
  6679  0F28                     	;# 
  6680  0F29                     	;# 
  6681  0F2A                     	;# 
  6682  0F2B                     	;# 
  6683  0F2C                     	;# 
  6684  0F2D                     	;# 
  6685  0F2E                     	;# 
  6686  0F2F                     	;# 
  6687  0F30                     	;# 
  6688  0F31                     	;# 
  6689  0F32                     	;# 
  6690  0F38                     	;# 
  6691  0F39                     	;# 
  6692  0F3A                     	;# 
  6693  0F3B                     	;# 
  6694  0F3C                     	;# 
  6695  0F3D                     	;# 
  6696  0F3E                     	;# 
  6697  0F3F                     	;# 
  6698  0F40                     	;# 
  6699  0F41                     	;# 
  6700  0F43                     	;# 
  6701  0F44                     	;# 
  6702  0F45                     	;# 
  6703  0F46                     	;# 
  6704  0F47                     	;# 
  6705  0F48                     	;# 
  6706  0F49                     	;# 
  6707  0F4A                     	;# 
  6708  0F4B                     	;# 
  6709  0F4C                     	;# 
  6710  0F4E                     	;# 
  6711  0F4F                     	;# 
  6712  0F50                     	;# 
  6713  0F51                     	;# 
  6714  0F52                     	;# 
  6715  0F53                     	;# 
  6716  0F54                     	;# 
  6717  0F55                     	;# 
  6718  0F56                     	;# 
  6719  0F57                     	;# 
  6720  0F59                     	;# 
  6721  0F5A                     	;# 
  6722  0F5B                     	;# 
  6723  0F5C                     	;# 
  6724  0F5D                     	;# 
  6725  0F61                     	;# 
  6726  0F62                     	;# 
  6727  0F64                     	;# 
  6728  0F65                     	;# 
  6729  0F66                     	;# 
  6730  0F67                     	;# 
  6731  0F68                     	;# 
  6732  0F69                     	;# 
  6733  0F6A                     	;# 
  6734  0F6B                     	;# 
  6735  0F6C                     	;# 
  6736  0F6D                     	;# 
  6737  0FE4                     	;# 
  6738  0FE5                     	;# 
  6739  0FE6                     	;# 
  6740  0FE7                     	;# 
  6741  0FE8                     	;# 
  6742  0FE9                     	;# 
  6743  0FEA                     	;# 
  6744  0FEB                     	;# 
  6745  0FED                     	;# 
  6746  0FEE                     	;# 
  6747  0FEF                     	;# 
  6748  0000                     	;# 
  6749  0001                     	;# 
  6750  0002                     	;# 
  6751  0003                     	;# 
  6752  0004                     	;# 
  6753  0005                     	;# 
  6754  0006                     	;# 
  6755  0007                     	;# 
  6756  0008                     	;# 
  6757  0009                     	;# 
  6758  000A                     	;# 
  6759  000B                     	;# 
  6760  000C                     	;# 
  6761  000D                     	;# 
  6762  000E                     	;# 
  6763  000F                     	;# 
  6764  0010                     	;# 
  6765  0011                     	;# 
  6766  0012                     	;# 
  6767  0013                     	;# 
  6768  0014                     	;# 
  6769  0015                     	;# 
  6770  0016                     	;# 
  6771  0017                     	;# 
  6772  0018                     	;# 
  6773  0019                     	;# 
  6774  001A                     	;# 
  6775  001C                     	;# 
  6776  001C                     	;# 
  6777  001D                     	;# 
  6778  001D                     	;# 
  6779  001E                     	;# 
  6780  001F                     	;# 
  6781  008C                     	;# 
  6782  008C                     	;# 
  6783  008D                     	;# 
  6784  008E                     	;# 
  6785  008E                     	;# 
  6786  008F                     	;# 
  6787  0090                     	;# 
  6788  0090                     	;# 
  6789  0091                     	;# 
  6790  0093                     	;# 
  6791  0094                     	;# 
  6792  0095                     	;# 
  6793  0096                     	;# 
  6794  0097                     	;# 
  6795  0098                     	;# 
  6796  0099                     	;# 
  6797  009A                     	;# 
  6798  009B                     	;# 
  6799  009C                     	;# 
  6800  009D                     	;# 
  6801  009E                     	;# 
  6802  010C                     	;# 
  6803  010D                     	;# 
  6804  010E                     	;# 
  6805  010E                     	;# 
  6806  010F                     	;# 
  6807  0110                     	;# 
  6808  0110                     	;# 
  6809  0111                     	;# 
  6810  0112                     	;# 
  6811  0112                     	;# 
  6812  0113                     	;# 
  6813  0114                     	;# 
  6814  0114                     	;# 
  6815  0115                     	;# 
  6816  0116                     	;# 
  6817  0116                     	;# 
  6818  0117                     	;# 
  6819  0119                     	;# 
  6820  0119                     	;# 
  6821  0119                     	;# 
  6822  011A                     	;# 
  6823  011A                     	;# 
  6824  011A                     	;# 
  6825  011B                     	;# 
  6826  011B                     	;# 
  6827  011B                     	;# 
  6828  011B                     	;# 
  6829  011B                     	;# 
  6830  011C                     	;# 
  6831  011C                     	;# 
  6832  011C                     	;# 
  6833  011D                     	;# 
  6834  011D                     	;# 
  6835  011D                     	;# 
  6836  011E                     	;# 
  6837  011E                     	;# 
  6838  011E                     	;# 
  6839  011F                     	;# 
  6840  011F                     	;# 
  6841  011F                     	;# 
  6842  011F                     	;# 
  6843  011F                     	;# 
  6844  018C                     	;# 
  6845  018D                     	;# 
  6846  018E                     	;# 
  6847  018F                     	;# 
  6848  0190                     	;# 
  6849  0191                     	;# 
  6850  0192                     	;# 
  6851  0196                     	;# 
  6852  0197                     	;# 
  6853  0198                     	;# 
  6854  0199                     	;# 
  6855  019A                     	;# 
  6856  019B                     	;# 
  6857  019C                     	;# 
  6858  020C                     	;# 
  6859  020C                     	;# 
  6860  020D                     	;# 
  6861  020E                     	;# 
  6862  020F                     	;# 
  6863  020F                     	;# 
  6864  0210                     	;# 
  6865  0210                     	;# 
  6866  0211                     	;# 
  6867  0211                     	;# 
  6868  0212                     	;# 
  6869  0212                     	;# 
  6870  0213                     	;# 
  6871  0214                     	;# 
  6872  0215                     	;# 
  6873  0215                     	;# 
  6874  0216                     	;# 
  6875  0216                     	;# 
  6876  0217                     	;# 
  6877  0217                     	;# 
  6878  0218                     	;# 
  6879  0218                     	;# 
  6880  0219                     	;# 
  6881  021A                     	;# 
  6882  021B                     	;# 
  6883  021B                     	;# 
  6884  021C                     	;# 
  6885  021C                     	;# 
  6886  021D                     	;# 
  6887  021D                     	;# 
  6888  021E                     	;# 
  6889  021F                     	;# 
  6890  028C                     	;# 
  6891  028C                     	;# 
  6892  028D                     	;# 
  6893  028D                     	;# 
  6894  028E                     	;# 
  6895  028F                     	;# 
  6896  0290                     	;# 
  6897  0290                     	;# 
  6898  0291                     	;# 
  6899  0292                     	;# 
  6900  0292                     	;# 
  6901  0293                     	;# 
  6902  0293                     	;# 
  6903  0294                     	;# 
  6904  0295                     	;# 
  6905  0296                     	;# 
  6906  0296                     	;# 
  6907  0297                     	;# 
  6908  0298                     	;# 
  6909  0298                     	;# 
  6910  0299                     	;# 
  6911  0299                     	;# 
  6912  029A                     	;# 
  6913  029B                     	;# 
  6914  029C                     	;# 
  6915  029C                     	;# 
  6916  029D                     	;# 
  6917  030C                     	;# 
  6918  030C                     	;# 
  6919  030D                     	;# 
  6920  030E                     	;# 
  6921  030F                     	;# 
  6922  0310                     	;# 
  6923  0310                     	;# 
  6924  0311                     	;# 
  6925  0312                     	;# 
  6926  0313                     	;# 
  6927  0314                     	;# 
  6928  0314                     	;# 
  6929  0315                     	;# 
  6930  0316                     	;# 
  6931  0317                     	;# 
  6932  0318                     	;# 
  6933  0318                     	;# 
  6934  0319                     	;# 
  6935  031A                     	;# 
  6936  031B                     	;# 
  6937  031C                     	;# 
  6938  031C                     	;# 
  6939  031D                     	;# 
  6940  031E                     	;# 
  6941  031F                     	;# 
  6942  038C                     	;# 
  6943  038C                     	;# 
  6944  038D                     	;# 
  6945  038E                     	;# 
  6946  0390                     	;# 
  6947  0390                     	;# 
  6948  0391                     	;# 
  6949  0392                     	;# 
  6950  040C                     	;# 
  6951  040D                     	;# 
  6952  040E                     	;# 
  6953  040F                     	;# 
  6954  0410                     	;# 
  6955  0411                     	;# 
  6956  0416                     	;# 
  6957  0416                     	;# 
  6958  0417                     	;# 
  6959  0418                     	;# 
  6960  0418                     	;# 
  6961  0419                     	;# 
  6962  041A                     	;# 
  6963  041A                     	;# 
  6964  041B                     	;# 
  6965  041C                     	;# 
  6966  041C                     	;# 
  6967  041D                     	;# 
  6968  041E                     	;# 
  6969  041F                     	;# 
  6970  048C                     	;# 
  6971  048C                     	;# 
  6972  048D                     	;# 
  6973  048E                     	;# 
  6974  048F                     	;# 
  6975  048F                     	;# 
  6976  0490                     	;# 
  6977  0491                     	;# 
  6978  0492                     	;# 
  6979  0492                     	;# 
  6980  0493                     	;# 
  6981  0494                     	;# 
  6982  0495                     	;# 
  6983  0495                     	;# 
  6984  0496                     	;# 
  6985  0497                     	;# 
  6986  0498                     	;# 
  6987  0499                     	;# 
  6988  049A                     	;# 
  6989  049B                     	;# 
  6990  049C                     	;# 
  6991  049D                     	;# 
  6992  050C                     	;# 
  6993  050C                     	;# 
  6994  050D                     	;# 
  6995  050E                     	;# 
  6996  050F                     	;# 
  6997  050F                     	;# 
  6998  0510                     	;# 
  6999  0511                     	;# 
  7000  0512                     	;# 
  7001  0512                     	;# 
  7002  0513                     	;# 
  7003  0514                     	;# 
  7004  0515                     	;# 
  7005  0515                     	;# 
  7006  0516                     	;# 
  7007  0517                     	;# 
  7008  0518                     	;# 
  7009  0519                     	;# 
  7010  051A                     	;# 
  7011  051B                     	;# 
  7012  051C                     	;# 
  7013  051D                     	;# 
  7014  058C                     	;# 
  7015  058C                     	;# 
  7016  058D                     	;# 
  7017  058E                     	;# 
  7018  058F                     	;# 
  7019  058F                     	;# 
  7020  0590                     	;# 
  7021  0591                     	;# 
  7022  0592                     	;# 
  7023  0593                     	;# 
  7024  060C                     	;# 
  7025  060D                     	;# 
  7026  060E                     	;# 
  7027  060F                     	;# 
  7028  0610                     	;# 
  7029  0611                     	;# 
  7030  0612                     	;# 
  7031  0613                     	;# 
  7032  0614                     	;# 
  7033  0616                     	;# 
  7034  0617                     	;# 
  7035  0618                     	;# 
  7036  0619                     	;# 
  7037  061A                     	;# 
  7038  061B                     	;# 
  7039  061C                     	;# 
  7040  061D                     	;# 
  7041  061E                     	;# 
  7042  068C                     	;# 
  7043  068D                     	;# 
  7044  068E                     	;# 
  7045  068F                     	;# 
  7046  0690                     	;# 
  7047  0691                     	;# 
  7048  0692                     	;# 
  7049  0693                     	;# 
  7050  0694                     	;# 
  7051  070C                     	;# 
  7052  070D                     	;# 
  7053  070E                     	;# 
  7054  070F                     	;# 
  7055  0710                     	;# 
  7056  0711                     	;# 
  7057  0712                     	;# 
  7058  0713                     	;# 
  7059  0714                     	;# 
  7060  0716                     	;# 
  7061  0717                     	;# 
  7062  0718                     	;# 
  7063  0719                     	;# 
  7064  071A                     	;# 
  7065  071B                     	;# 
  7066  071C                     	;# 
  7067  071D                     	;# 
  7068  071E                     	;# 
  7069  0796                     	;# 
  7070  0797                     	;# 
  7071  0798                     	;# 
  7072  0799                     	;# 
  7073  079A                     	;# 
  7074  079B                     	;# 
  7075  080C                     	;# 
  7076  080D                     	;# 
  7077  080E                     	;# 
  7078  080F                     	;# 
  7079  0810                     	;# 
  7080  0811                     	;# 
  7081  0812                     	;# 
  7082  0813                     	;# 
  7083  0814                     	;# 
  7084  081A                     	;# 
  7085  081B                     	;# 
  7086  081C                     	;# 
  7087  081D                     	;# 
  7088  081E                     	;# 
  7089  081F                     	;# 
  7090  088C                     	;# 
  7091  088D                     	;# 
  7092  088E                     	;# 
  7093  088F                     	;# 
  7094  0890                     	;# 
  7095  0891                     	;# 
  7096  0892                     	;# 
  7097  0893                     	;# 
  7098  0895                     	;# 
  7099  0896                     	;# 
  7100  0897                     	;# 
  7101  0898                     	;# 
  7102  0899                     	;# 
  7103  089A                     	;# 
  7104  089B                     	;# 
  7105  090C                     	;# 
  7106  090E                     	;# 
  7107  090F                     	;# 
  7108  091F                     	;# 
  7109  091F                     	;# 
  7110  098F                     	;# 
  7111  098F                     	;# 
  7112  0990                     	;# 
  7113  0991                     	;# 
  7114  0992                     	;# 
  7115  0993                     	;# 
  7116  0994                     	;# 
  7117  0995                     	;# 
  7118  0996                     	;# 
  7119  0997                     	;# 
  7120  0E0F                     	;# 
  7121  0E10                     	;# 
  7122  0E11                     	;# 
  7123  0E12                     	;# 
  7124  0E13                     	;# 
  7125  0E14                     	;# 
  7126  0E15                     	;# 
  7127  0E16                     	;# 
  7128  0E17                     	;# 
  7129  0E18                     	;# 
  7130  0E19                     	;# 
  7131  0E1A                     	;# 
  7132  0E1B                     	;# 
  7133  0E1C                     	;# 
  7134  0E1D                     	;# 
  7135  0E1E                     	;# 
  7136  0E1F                     	;# 
  7137  0E20                     	;# 
  7138  0E21                     	;# 
  7139  0E22                     	;# 
  7140  0E23                     	;# 
  7141  0E24                     	;# 
  7142  0E25                     	;# 
  7143  0E26                     	;# 
  7144  0E27                     	;# 
  7145  0E28                     	;# 
  7146  0E29                     	;# 
  7147  0E2A                     	;# 
  7148  0E2B                     	;# 
  7149  0E2C                     	;# 
  7150  0E2D                     	;# 
  7151  0E2E                     	;# 
  7152  0E2F                     	;# 
  7153  0E30                     	;# 
  7154  0E31                     	;# 
  7155  0E32                     	;# 
  7156  0E33                     	;# 
  7157  0E34                     	;# 
  7158  0E35                     	;# 
  7159  0E36                     	;# 
  7160  0E37                     	;# 
  7161  0E8F                     	;# 
  7162  0E90                     	;# 
  7163  0E91                     	;# 
  7164  0E92                     	;# 
  7165  0E93                     	;# 
  7166  0E94                     	;# 
  7167  0E95                     	;# 
  7168  0E96                     	;# 
  7169  0E97                     	;# 
  7170  0E9C                     	;# 
  7171  0E9D                     	;# 
  7172  0E9E                     	;# 
  7173  0EA1                     	;# 
  7174  0EA2                     	;# 
  7175  0EA3                     	;# 
  7176  0EA4                     	;# 
  7177  0EA5                     	;# 
  7178  0EA9                     	;# 
  7179  0EAA                     	;# 
  7180  0EAB                     	;# 
  7181  0EAC                     	;# 
  7182  0EB1                     	;# 
  7183  0EB2                     	;# 
  7184  0EB3                     	;# 
  7185  0EB8                     	;# 
  7186  0EB9                     	;# 
  7187  0EBA                     	;# 
  7188  0EBB                     	;# 
  7189  0EBC                     	;# 
  7190  0EBD                     	;# 
  7191  0EBE                     	;# 
  7192  0EC3                     	;# 
  7193  0EC5                     	;# 
  7194  0EC6                     	;# 
  7195  0EC7                     	;# 
  7196  0EC8                     	;# 
  7197  0EC9                     	;# 
  7198  0ECA                     	;# 
  7199  0ECB                     	;# 
  7200  0ECC                     	;# 
  7201  0F10                     	;# 
  7202  0F11                     	;# 
  7203  0F12                     	;# 
  7204  0F13                     	;# 
  7205  0F14                     	;# 
  7206  0F15                     	;# 
  7207  0F16                     	;# 
  7208  0F17                     	;# 
  7209  0F18                     	;# 
  7210  0F19                     	;# 
  7211  0F1A                     	;# 
  7212  0F1B                     	;# 
  7213  0F1C                     	;# 
  7214  0F1D                     	;# 
  7215  0F1E                     	;# 
  7216  0F1F                     	;# 
  7217  0F20                     	;# 
  7218  0F21                     	;# 
  7219  0F22                     	;# 
  7220  0F23                     	;# 
  7221  0F24                     	;# 
  7222  0F25                     	;# 
  7223  0F26                     	;# 
  7224  0F27                     	;# 
  7225  0F28                     	;# 
  7226  0F29                     	;# 
  7227  0F2A                     	;# 
  7228  0F2B                     	;# 
  7229  0F2C                     	;# 
  7230  0F2D                     	;# 
  7231  0F2E                     	;# 
  7232  0F2F                     	;# 
  7233  0F30                     	;# 
  7234  0F31                     	;# 
  7235  0F32                     	;# 
  7236  0F38                     	;# 
  7237  0F39                     	;# 
  7238  0F3A                     	;# 
  7239  0F3B                     	;# 
  7240  0F3C                     	;# 
  7241  0F3D                     	;# 
  7242  0F3E                     	;# 
  7243  0F3F                     	;# 
  7244  0F40                     	;# 
  7245  0F41                     	;# 
  7246  0F43                     	;# 
  7247  0F44                     	;# 
  7248  0F45                     	;# 
  7249  0F46                     	;# 
  7250  0F47                     	;# 
  7251  0F48                     	;# 
  7252  0F49                     	;# 
  7253  0F4A                     	;# 
  7254  0F4B                     	;# 
  7255  0F4C                     	;# 
  7256  0F4E                     	;# 
  7257  0F4F                     	;# 
  7258  0F50                     	;# 
  7259  0F51                     	;# 
  7260  0F52                     	;# 
  7261  0F53                     	;# 
  7262  0F54                     	;# 
  7263  0F55                     	;# 
  7264  0F56                     	;# 
  7265  0F57                     	;# 
  7266  0F59                     	;# 
  7267  0F5A                     	;# 
  7268  0F5B                     	;# 
  7269  0F5C                     	;# 
  7270  0F5D                     	;# 
  7271  0F61                     	;# 
  7272  0F62                     	;# 
  7273  0F64                     	;# 
  7274  0F65                     	;# 
  7275  0F66                     	;# 
  7276  0F67                     	;# 
  7277  0F68                     	;# 
  7278  0F69                     	;# 
  7279  0F6A                     	;# 
  7280  0F6B                     	;# 
  7281  0F6C                     	;# 
  7282  0F6D                     	;# 
  7283  0FE4                     	;# 
  7284  0FE5                     	;# 
  7285  0FE6                     	;# 
  7286  0FE7                     	;# 
  7287  0FE8                     	;# 
  7288  0FE9                     	;# 
  7289  0FEA                     	;# 
  7290  0FEB                     	;# 
  7291  0FED                     	;# 
  7292  0FEE                     	;# 
  7293  0FEF                     	;# 
  7294  0000                     	;# 
  7295  0001                     	;# 
  7296  0002                     	;# 
  7297  0003                     	;# 
  7298  0004                     	;# 
  7299  0005                     	;# 
  7300  0006                     	;# 
  7301  0007                     	;# 
  7302  0008                     	;# 
  7303  0009                     	;# 
  7304  000A                     	;# 
  7305  000B                     	;# 
  7306  000C                     	;# 
  7307  000D                     	;# 
  7308  000E                     	;# 
  7309  000F                     	;# 
  7310  0010                     	;# 
  7311  0011                     	;# 
  7312  0012                     	;# 
  7313  0013                     	;# 
  7314  0014                     	;# 
  7315  0015                     	;# 
  7316  0016                     	;# 
  7317  0017                     	;# 
  7318  0018                     	;# 
  7319  0019                     	;# 
  7320  001A                     	;# 
  7321  001C                     	;# 
  7322  001C                     	;# 
  7323  001D                     	;# 
  7324  001D                     	;# 
  7325  001E                     	;# 
  7326  001F                     	;# 
  7327  008C                     	;# 
  7328  008C                     	;# 
  7329  008D                     	;# 
  7330  008E                     	;# 
  7331  008E                     	;# 
  7332  008F                     	;# 
  7333  0090                     	;# 
  7334  0090                     	;# 
  7335  0091                     	;# 
  7336  0093                     	;# 
  7337  0094                     	;# 
  7338  0095                     	;# 
  7339  0096                     	;# 
  7340  0097                     	;# 
  7341  0098                     	;# 
  7342  0099                     	;# 
  7343  009A                     	;# 
  7344  009B                     	;# 
  7345  009C                     	;# 
  7346  009D                     	;# 
  7347  009E                     	;# 
  7348  010C                     	;# 
  7349  010D                     	;# 
  7350  010E                     	;# 
  7351  010E                     	;# 
  7352  010F                     	;# 
  7353  0110                     	;# 
  7354  0110                     	;# 
  7355  0111                     	;# 
  7356  0112                     	;# 
  7357  0112                     	;# 
  7358  0113                     	;# 
  7359  0114                     	;# 
  7360  0114                     	;# 
  7361  0115                     	;# 
  7362  0116                     	;# 
  7363  0116                     	;# 
  7364  0117                     	;# 
  7365  0119                     	;# 
  7366  0119                     	;# 
  7367  0119                     	;# 
  7368  011A                     	;# 
  7369  011A                     	;# 
  7370  011A                     	;# 
  7371  011B                     	;# 
  7372  011B                     	;# 
  7373  011B                     	;# 
  7374  011B                     	;# 
  7375  011B                     	;# 
  7376  011C                     	;# 
  7377  011C                     	;# 
  7378  011C                     	;# 
  7379  011D                     	;# 
  7380  011D                     	;# 
  7381  011D                     	;# 
  7382  011E                     	;# 
  7383  011E                     	;# 
  7384  011E                     	;# 
  7385  011F                     	;# 
  7386  011F                     	;# 
  7387  011F                     	;# 
  7388  011F                     	;# 
  7389  011F                     	;# 
  7390  018C                     	;# 
  7391  018D                     	;# 
  7392  018E                     	;# 
  7393  018F                     	;# 
  7394  0190                     	;# 
  7395  0191                     	;# 
  7396  0192                     	;# 
  7397  0196                     	;# 
  7398  0197                     	;# 
  7399  0198                     	;# 
  7400  0199                     	;# 
  7401  019A                     	;# 
  7402  019B                     	;# 
  7403  019C                     	;# 
  7404  020C                     	;# 
  7405  020C                     	;# 
  7406  020D                     	;# 
  7407  020E                     	;# 
  7408  020F                     	;# 
  7409  020F                     	;# 
  7410  0210                     	;# 
  7411  0210                     	;# 
  7412  0211                     	;# 
  7413  0211                     	;# 
  7414  0212                     	;# 
  7415  0212                     	;# 
  7416  0213                     	;# 
  7417  0214                     	;# 
  7418  0215                     	;# 
  7419  0215                     	;# 
  7420  0216                     	;# 
  7421  0216                     	;# 
  7422  0217                     	;# 
  7423  0217                     	;# 
  7424  0218                     	;# 
  7425  0218                     	;# 
  7426  0219                     	;# 
  7427  021A                     	;# 
  7428  021B                     	;# 
  7429  021B                     	;# 
  7430  021C                     	;# 
  7431  021C                     	;# 
  7432  021D                     	;# 
  7433  021D                     	;# 
  7434  021E                     	;# 
  7435  021F                     	;# 
  7436  028C                     	;# 
  7437  028C                     	;# 
  7438  028D                     	;# 
  7439  028D                     	;# 
  7440  028E                     	;# 
  7441  028F                     	;# 
  7442  0290                     	;# 
  7443  0290                     	;# 
  7444  0291                     	;# 
  7445  0292                     	;# 
  7446  0292                     	;# 
  7447  0293                     	;# 
  7448  0293                     	;# 
  7449  0294                     	;# 
  7450  0295                     	;# 
  7451  0296                     	;# 
  7452  0296                     	;# 
  7453  0297                     	;# 
  7454  0298                     	;# 
  7455  0298                     	;# 
  7456  0299                     	;# 
  7457  0299                     	;# 
  7458  029A                     	;# 
  7459  029B                     	;# 
  7460  029C                     	;# 
  7461  029C                     	;# 
  7462  029D                     	;# 
  7463  030C                     	;# 
  7464  030C                     	;# 
  7465  030D                     	;# 
  7466  030E                     	;# 
  7467  030F                     	;# 
  7468  0310                     	;# 
  7469  0310                     	;# 
  7470  0311                     	;# 
  7471  0312                     	;# 
  7472  0313                     	;# 
  7473  0314                     	;# 
  7474  0314                     	;# 
  7475  0315                     	;# 
  7476  0316                     	;# 
  7477  0317                     	;# 
  7478  0318                     	;# 
  7479  0318                     	;# 
  7480  0319                     	;# 
  7481  031A                     	;# 
  7482  031B                     	;# 
  7483  031C                     	;# 
  7484  031C                     	;# 
  7485  031D                     	;# 
  7486  031E                     	;# 
  7487  031F                     	;# 
  7488  038C                     	;# 
  7489  038C                     	;# 
  7490  038D                     	;# 
  7491  038E                     	;# 
  7492  0390                     	;# 
  7493  0390                     	;# 
  7494  0391                     	;# 
  7495  0392                     	;# 
  7496  040C                     	;# 
  7497  040D                     	;# 
  7498  040E                     	;# 
  7499  040F                     	;# 
  7500  0410                     	;# 
  7501  0411                     	;# 
  7502  0416                     	;# 
  7503  0416                     	;# 
  7504  0417                     	;# 
  7505  0418                     	;# 
  7506  0418                     	;# 
  7507  0419                     	;# 
  7508  041A                     	;# 
  7509  041A                     	;# 
  7510  041B                     	;# 
  7511  041C                     	;# 
  7512  041C                     	;# 
  7513  041D                     	;# 
  7514  041E                     	;# 
  7515  041F                     	;# 
  7516  048C                     	;# 
  7517  048C                     	;# 
  7518  048D                     	;# 
  7519  048E                     	;# 
  7520  048F                     	;# 
  7521  048F                     	;# 
  7522  0490                     	;# 
  7523  0491                     	;# 
  7524  0492                     	;# 
  7525  0492                     	;# 
  7526  0493                     	;# 
  7527  0494                     	;# 
  7528  0495                     	;# 
  7529  0495                     	;# 
  7530  0496                     	;# 
  7531  0497                     	;# 
  7532  0498                     	;# 
  7533  0499                     	;# 
  7534  049A                     	;# 
  7535  049B                     	;# 
  7536  049C                     	;# 
  7537  049D                     	;# 
  7538  050C                     	;# 
  7539  050C                     	;# 
  7540  050D                     	;# 
  7541  050E                     	;# 
  7542  050F                     	;# 
  7543  050F                     	;# 
  7544  0510                     	;# 
  7545  0511                     	;# 
  7546  0512                     	;# 
  7547  0512                     	;# 
  7548  0513                     	;# 
  7549  0514                     	;# 
  7550  0515                     	;# 
  7551  0515                     	;# 
  7552  0516                     	;# 
  7553  0517                     	;# 
  7554  0518                     	;# 
  7555  0519                     	;# 
  7556  051A                     	;# 
  7557  051B                     	;# 
  7558  051C                     	;# 
  7559  051D                     	;# 
  7560  058C                     	;# 
  7561  058C                     	;# 
  7562  058D                     	;# 
  7563  058E                     	;# 
  7564  058F                     	;# 
  7565  058F                     	;# 
  7566  0590                     	;# 
  7567  0591                     	;# 
  7568  0592                     	;# 
  7569  0593                     	;# 
  7570  060C                     	;# 
  7571  060D                     	;# 
  7572  060E                     	;# 
  7573  060F                     	;# 
  7574  0610                     	;# 
  7575  0611                     	;# 
  7576  0612                     	;# 
  7577  0613                     	;# 
  7578  0614                     	;# 
  7579  0616                     	;# 
  7580  0617                     	;# 
  7581  0618                     	;# 
  7582  0619                     	;# 
  7583  061A                     	;# 
  7584  061B                     	;# 
  7585  061C                     	;# 
  7586  061D                     	;# 
  7587  061E                     	;# 
  7588  068C                     	;# 
  7589  068D                     	;# 
  7590  068E                     	;# 
  7591  068F                     	;# 
  7592  0690                     	;# 
  7593  0691                     	;# 
  7594  0692                     	;# 
  7595  0693                     	;# 
  7596  0694                     	;# 
  7597  070C                     	;# 
  7598  070D                     	;# 
  7599  070E                     	;# 
  7600  070F                     	;# 
  7601  0710                     	;# 
  7602  0711                     	;# 
  7603  0712                     	;# 
  7604  0713                     	;# 
  7605  0714                     	;# 
  7606  0716                     	;# 
  7607  0717                     	;# 
  7608  0718                     	;# 
  7609  0719                     	;# 
  7610  071A                     	;# 
  7611  071B                     	;# 
  7612  071C                     	;# 
  7613  071D                     	;# 
  7614  071E                     	;# 
  7615  0796                     	;# 
  7616  0797                     	;# 
  7617  0798                     	;# 
  7618  0799                     	;# 
  7619  079A                     	;# 
  7620  079B                     	;# 
  7621  080C                     	;# 
  7622  080D                     	;# 
  7623  080E                     	;# 
  7624  080F                     	;# 
  7625  0810                     	;# 
  7626  0811                     	;# 
  7627  0812                     	;# 
  7628  0813                     	;# 
  7629  0814                     	;# 
  7630  081A                     	;# 
  7631  081B                     	;# 
  7632  081C                     	;# 
  7633  081D                     	;# 
  7634  081E                     	;# 
  7635  081F                     	;# 
  7636  088C                     	;# 
  7637  088D                     	;# 
  7638  088E                     	;# 
  7639  088F                     	;# 
  7640  0890                     	;# 
  7641  0891                     	;# 
  7642  0892                     	;# 
  7643  0893                     	;# 
  7644  0895                     	;# 
  7645  0896                     	;# 
  7646  0897                     	;# 
  7647  0898                     	;# 
  7648  0899                     	;# 
  7649  089A                     	;# 
  7650  089B                     	;# 
  7651  090C                     	;# 
  7652  090E                     	;# 
  7653  090F                     	;# 
  7654  091F                     	;# 
  7655  091F                     	;# 
  7656  098F                     	;# 
  7657  098F                     	;# 
  7658  0990                     	;# 
  7659  0991                     	;# 
  7660  0992                     	;# 
  7661  0993                     	;# 
  7662  0994                     	;# 
  7663  0995                     	;# 
  7664  0996                     	;# 
  7665  0997                     	;# 
  7666  0E0F                     	;# 
  7667  0E10                     	;# 
  7668  0E11                     	;# 
  7669  0E12                     	;# 
  7670  0E13                     	;# 
  7671  0E14                     	;# 
  7672  0E15                     	;# 
  7673  0E16                     	;# 
  7674  0E17                     	;# 
  7675  0E18                     	;# 
  7676  0E19                     	;# 
  7677  0E1A                     	;# 
  7678  0E1B                     	;# 
  7679  0E1C                     	;# 
  7680  0E1D                     	;# 
  7681  0E1E                     	;# 
  7682  0E1F                     	;# 
  7683  0E20                     	;# 
  7684  0E21                     	;# 
  7685  0E22                     	;# 
  7686  0E23                     	;# 
  7687  0E24                     	;# 
  7688  0E25                     	;# 
  7689  0E26                     	;# 
  7690  0E27                     	;# 
  7691  0E28                     	;# 
  7692  0E29                     	;# 
  7693  0E2A                     	;# 
  7694  0E2B                     	;# 
  7695  0E2C                     	;# 
  7696  0E2D                     	;# 
  7697  0E2E                     	;# 
  7698  0E2F                     	;# 
  7699  0E30                     	;# 
  7700  0E31                     	;# 
  7701  0E32                     	;# 
  7702  0E33                     	;# 
  7703  0E34                     	;# 
  7704  0E35                     	;# 
  7705  0E36                     	;# 
  7706  0E37                     	;# 
  7707  0E8F                     	;# 
  7708  0E90                     	;# 
  7709  0E91                     	;# 
  7710  0E92                     	;# 
  7711  0E93                     	;# 
  7712  0E94                     	;# 
  7713  0E95                     	;# 
  7714  0E96                     	;# 
  7715  0E97                     	;# 
  7716  0E9C                     	;# 
  7717  0E9D                     	;# 
  7718  0E9E                     	;# 
  7719  0EA1                     	;# 
  7720  0EA2                     	;# 
  7721  0EA3                     	;# 
  7722  0EA4                     	;# 
  7723  0EA5                     	;# 
  7724  0EA9                     	;# 
  7725  0EAA                     	;# 
  7726  0EAB                     	;# 
  7727  0EAC                     	;# 
  7728  0EB1                     	;# 
  7729  0EB2                     	;# 
  7730  0EB3                     	;# 
  7731  0EB8                     	;# 
  7732  0EB9                     	;# 
  7733  0EBA                     	;# 
  7734  0EBB                     	;# 
  7735  0EBC                     	;# 
  7736  0EBD                     	;# 
  7737  0EBE                     	;# 
  7738  0EC3                     	;# 
  7739  0EC5                     	;# 
  7740  0EC6                     	;# 
  7741  0EC7                     	;# 
  7742  0EC8                     	;# 
  7743  0EC9                     	;# 
  7744  0ECA                     	;# 
  7745  0ECB                     	;# 
  7746  0ECC                     	;# 
  7747  0F10                     	;# 
  7748  0F11                     	;# 
  7749  0F12                     	;# 
  7750  0F13                     	;# 
  7751  0F14                     	;# 
  7752  0F15                     	;# 
  7753  0F16                     	;# 
  7754  0F17                     	;# 
  7755  0F18                     	;# 
  7756  0F19                     	;# 
  7757  0F1A                     	;# 
  7758  0F1B                     	;# 
  7759  0F1C                     	;# 
  7760  0F1D                     	;# 
  7761  0F1E                     	;# 
  7762  0F1F                     	;# 
  7763  0F20                     	;# 
  7764  0F21                     	;# 
  7765  0F22                     	;# 
  7766  0F23                     	;# 
  7767  0F24                     	;# 
  7768  0F25                     	;# 
  7769  0F26                     	;# 
  7770  0F27                     	;# 
  7771  0F28                     	;# 
  7772  0F29                     	;# 
  7773  0F2A                     	;# 
  7774  0F2B                     	;# 
  7775  0F2C                     	;# 
  7776  0F2D                     	;# 
  7777  0F2E                     	;# 
  7778  0F2F                     	;# 
  7779  0F30                     	;# 
  7780  0F31                     	;# 
  7781  0F32                     	;# 
  7782  0F38                     	;# 
  7783  0F39                     	;# 
  7784  0F3A                     	;# 
  7785  0F3B                     	;# 
  7786  0F3C                     	;# 
  7787  0F3D                     	;# 
  7788  0F3E                     	;# 
  7789  0F3F                     	;# 
  7790  0F40                     	;# 
  7791  0F41                     	;# 
  7792  0F43                     	;# 
  7793  0F44                     	;# 
  7794  0F45                     	;# 
  7795  0F46                     	;# 
  7796  0F47                     	;# 
  7797  0F48                     	;# 
  7798  0F49                     	;# 
  7799  0F4A                     	;# 
  7800  0F4B                     	;# 
  7801  0F4C                     	;# 
  7802  0F4E                     	;# 
  7803  0F4F                     	;# 
  7804  0F50                     	;# 
  7805  0F51                     	;# 
  7806  0F52                     	;# 
  7807  0F53                     	;# 
  7808  0F54                     	;# 
  7809  0F55                     	;# 
  7810  0F56                     	;# 
  7811  0F57                     	;# 
  7812  0F59                     	;# 
  7813  0F5A                     	;# 
  7814  0F5B                     	;# 
  7815  0F5C                     	;# 
  7816  0F5D                     	;# 
  7817  0F61                     	;# 
  7818  0F62                     	;# 
  7819  0F64                     	;# 
  7820  0F65                     	;# 
  7821  0F66                     	;# 
  7822  0F67                     	;# 
  7823  0F68                     	;# 
  7824  0F69                     	;# 
  7825  0F6A                     	;# 
  7826  0F6B                     	;# 
  7827  0F6C                     	;# 
  7828  0F6D                     	;# 
  7829  0FE4                     	;# 
  7830  0FE5                     	;# 
  7831  0FE6                     	;# 
  7832  0FE7                     	;# 
  7833  0FE8                     	;# 
  7834  0FE9                     	;# 
  7835  0FEA                     	;# 
  7836  0FEB                     	;# 
  7837  0FED                     	;# 
  7838  0FEE                     	;# 
  7839  0FEF                     	;# 
  7840  0000                     	;# 
  7841  0001                     	;# 
  7842  0002                     	;# 
  7843  0003                     	;# 
  7844  0004                     	;# 
  7845  0005                     	;# 
  7846  0006                     	;# 
  7847  0007                     	;# 
  7848  0008                     	;# 
  7849  0009                     	;# 
  7850  000A                     	;# 
  7851  000B                     	;# 
  7852  000C                     	;# 
  7853  000D                     	;# 
  7854  000E                     	;# 
  7855  000F                     	;# 
  7856  0010                     	;# 
  7857  0011                     	;# 
  7858  0012                     	;# 
  7859  0013                     	;# 
  7860  0014                     	;# 
  7861  0015                     	;# 
  7862  0016                     	;# 
  7863  0017                     	;# 
  7864  0018                     	;# 
  7865  0019                     	;# 
  7866  001A                     	;# 
  7867  001C                     	;# 
  7868  001C                     	;# 
  7869  001D                     	;# 
  7870  001D                     	;# 
  7871  001E                     	;# 
  7872  001F                     	;# 
  7873  008C                     	;# 
  7874  008C                     	;# 
  7875  008D                     	;# 
  7876  008E                     	;# 
  7877  008E                     	;# 
  7878  008F                     	;# 
  7879  0090                     	;# 
  7880  0090                     	;# 
  7881  0091                     	;# 
  7882  0093                     	;# 
  7883  0094                     	;# 
  7884  0095                     	;# 
  7885  0096                     	;# 
  7886  0097                     	;# 
  7887  0098                     	;# 
  7888  0099                     	;# 
  7889  009A                     	;# 
  7890  009B                     	;# 
  7891  009C                     	;# 
  7892  009D                     	;# 
  7893  009E                     	;# 
  7894  010C                     	;# 
  7895  010D                     	;# 
  7896  010E                     	;# 
  7897  010E                     	;# 
  7898  010F                     	;# 
  7899  0110                     	;# 
  7900  0110                     	;# 
  7901  0111                     	;# 
  7902  0112                     	;# 
  7903  0112                     	;# 
  7904  0113                     	;# 
  7905  0114                     	;# 
  7906  0114                     	;# 
  7907  0115                     	;# 
  7908  0116                     	;# 
  7909  0116                     	;# 
  7910  0117                     	;# 
  7911  0119                     	;# 
  7912  0119                     	;# 
  7913  0119                     	;# 
  7914  011A                     	;# 
  7915  011A                     	;# 
  7916  011A                     	;# 
  7917  011B                     	;# 
  7918  011B                     	;# 
  7919  011B                     	;# 
  7920  011B                     	;# 
  7921  011B                     	;# 
  7922  011C                     	;# 
  7923  011C                     	;# 
  7924  011C                     	;# 
  7925  011D                     	;# 
  7926  011D                     	;# 
  7927  011D                     	;# 
  7928  011E                     	;# 
  7929  011E                     	;# 
  7930  011E                     	;# 
  7931  011F                     	;# 
  7932  011F                     	;# 
  7933  011F                     	;# 
  7934  011F                     	;# 
  7935  011F                     	;# 
  7936  018C                     	;# 
  7937  018D                     	;# 
  7938  018E                     	;# 
  7939  018F                     	;# 
  7940  0190                     	;# 
  7941  0191                     	;# 
  7942  0192                     	;# 
  7943  0196                     	;# 
  7944  0197                     	;# 
  7945  0198                     	;# 
  7946  0199                     	;# 
  7947  019A                     	;# 
  7948  019B                     	;# 
  7949  019C                     	;# 
  7950  020C                     	;# 
  7951  020C                     	;# 
  7952  020D                     	;# 
  7953  020E                     	;# 
  7954  020F                     	;# 
  7955  020F                     	;# 
  7956  0210                     	;# 
  7957  0210                     	;# 
  7958  0211                     	;# 
  7959  0211                     	;# 
  7960  0212                     	;# 
  7961  0212                     	;# 
  7962  0213                     	;# 
  7963  0214                     	;# 
  7964  0215                     	;# 
  7965  0215                     	;# 
  7966  0216                     	;# 
  7967  0216                     	;# 
  7968  0217                     	;# 
  7969  0217                     	;# 
  7970  0218                     	;# 
  7971  0218                     	;# 
  7972  0219                     	;# 
  7973  021A                     	;# 
  7974  021B                     	;# 
  7975  021B                     	;# 
  7976  021C                     	;# 
  7977  021C                     	;# 
  7978  021D                     	;# 
  7979  021D                     	;# 
  7980  021E                     	;# 
  7981  021F                     	;# 
  7982  028C                     	;# 
  7983  028C                     	;# 
  7984  028D                     	;# 
  7985  028D                     	;# 
  7986  028E                     	;# 
  7987  028F                     	;# 
  7988  0290                     	;# 
  7989  0290                     	;# 
  7990  0291                     	;# 
  7991  0292                     	;# 
  7992  0292                     	;# 
  7993  0293                     	;# 
  7994  0293                     	;# 
  7995  0294                     	;# 
  7996  0295                     	;# 
  7997  0296                     	;# 
  7998  0296                     	;# 
  7999  0297                     	;# 
  8000  0298                     	;# 
  8001  0298                     	;# 
  8002  0299                     	;# 
  8003  0299                     	;# 
  8004  029A                     	;# 
  8005  029B                     	;# 
  8006  029C                     	;# 
  8007  029C                     	;# 
  8008  029D                     	;# 
  8009  030C                     	;# 
  8010  030C                     	;# 
  8011  030D                     	;# 
  8012  030E                     	;# 
  8013  030F                     	;# 
  8014  0310                     	;# 
  8015  0310                     	;# 
  8016  0311                     	;# 
  8017  0312                     	;# 
  8018  0313                     	;# 
  8019  0314                     	;# 
  8020  0314                     	;# 
  8021  0315                     	;# 
  8022  0316                     	;# 
  8023  0317                     	;# 
  8024  0318                     	;# 
  8025  0318                     	;# 
  8026  0319                     	;# 
  8027  031A                     	;# 
  8028  031B                     	;# 
  8029  031C                     	;# 
  8030  031C                     	;# 
  8031  031D                     	;# 
  8032  031E                     	;# 
  8033  031F                     	;# 
  8034  038C                     	;# 
  8035  038C                     	;# 
  8036  038D                     	;# 
  8037  038E                     	;# 
  8038  0390                     	;# 
  8039  0390                     	;# 
  8040  0391                     	;# 
  8041  0392                     	;# 
  8042  040C                     	;# 
  8043  040D                     	;# 
  8044  040E                     	;# 
  8045  040F                     	;# 
  8046  0410                     	;# 
  8047  0411                     	;# 
  8048  0416                     	;# 
  8049  0416                     	;# 
  8050  0417                     	;# 
  8051  0418                     	;# 
  8052  0418                     	;# 
  8053  0419                     	;# 
  8054  041A                     	;# 
  8055  041A                     	;# 
  8056  041B                     	;# 
  8057  041C                     	;# 
  8058  041C                     	;# 
  8059  041D                     	;# 
  8060  041E                     	;# 
  8061  041F                     	;# 
  8062  048C                     	;# 
  8063  048C                     	;# 
  8064  048D                     	;# 
  8065  048E                     	;# 
  8066  048F                     	;# 
  8067  048F                     	;# 
  8068  0490                     	;# 
  8069  0491                     	;# 
  8070  0492                     	;# 
  8071  0492                     	;# 
  8072  0493                     	;# 
  8073  0494                     	;# 
  8074  0495                     	;# 
  8075  0495                     	;# 
  8076  0496                     	;# 
  8077  0497                     	;# 
  8078  0498                     	;# 
  8079  0499                     	;# 
  8080  049A                     	;# 
  8081  049B                     	;# 
  8082  049C                     	;# 
  8083  049D                     	;# 
  8084  050C                     	;# 
  8085  050C                     	;# 
  8086  050D                     	;# 
  8087  050E                     	;# 
  8088  050F                     	;# 
  8089  050F                     	;# 
  8090  0510                     	;# 
  8091  0511                     	;# 
  8092  0512                     	;# 
  8093  0512                     	;# 
  8094  0513                     	;# 
  8095  0514                     	;# 
  8096  0515                     	;# 
  8097  0515                     	;# 
  8098  0516                     	;# 
  8099  0517                     	;# 
  8100  0518                     	;# 
  8101  0519                     	;# 
  8102  051A                     	;# 
  8103  051B                     	;# 
  8104  051C                     	;# 
  8105  051D                     	;# 
  8106  058C                     	;# 
  8107  058C                     	;# 
  8108  058D                     	;# 
  8109  058E                     	;# 
  8110  058F                     	;# 
  8111  058F                     	;# 
  8112  0590                     	;# 
  8113  0591                     	;# 
  8114  0592                     	;# 
  8115  0593                     	;# 
  8116  060C                     	;# 
  8117  060D                     	;# 
  8118  060E                     	;# 
  8119  060F                     	;# 
  8120  0610                     	;# 
  8121  0611                     	;# 
  8122  0612                     	;# 
  8123  0613                     	;# 
  8124  0614                     	;# 
  8125  0616                     	;# 
  8126  0617                     	;# 
  8127  0618                     	;# 
  8128  0619                     	;# 
  8129  061A                     	;# 
  8130  061B                     	;# 
  8131  061C                     	;# 
  8132  061D                     	;# 
  8133  061E                     	;# 
  8134  068C                     	;# 
  8135  068D                     	;# 
  8136  068E                     	;# 
  8137  068F                     	;# 
  8138  0690                     	;# 
  8139  0691                     	;# 
  8140  0692                     	;# 
  8141  0693                     	;# 
  8142  0694                     	;# 
  8143  070C                     	;# 
  8144  070D                     	;# 
  8145  070E                     	;# 
  8146  070F                     	;# 
  8147  0710                     	;# 
  8148  0711                     	;# 
  8149  0712                     	;# 
  8150  0713                     	;# 
  8151  0714                     	;# 
  8152  0716                     	;# 
  8153  0717                     	;# 
  8154  0718                     	;# 
  8155  0719                     	;# 
  8156  071A                     	;# 
  8157  071B                     	;# 
  8158  071C                     	;# 
  8159  071D                     	;# 
  8160  071E                     	;# 
  8161  0796                     	;# 
  8162  0797                     	;# 
  8163  0798                     	;# 
  8164  0799                     	;# 
  8165  079A                     	;# 
  8166  079B                     	;# 
  8167  080C                     	;# 
  8168  080D                     	;# 
  8169  080E                     	;# 
  8170  080F                     	;# 
  8171  0810                     	;# 
  8172  0811                     	;# 
  8173  0812                     	;# 
  8174  0813                     	;# 
  8175  0814                     	;# 
  8176  081A                     	;# 
  8177  081B                     	;# 
  8178  081C                     	;# 
  8179  081D                     	;# 
  8180  081E                     	;# 
  8181  081F                     	;# 
  8182  088C                     	;# 
  8183  088D                     	;# 
  8184  088E                     	;# 
  8185  088F                     	;# 
  8186  0890                     	;# 
  8187  0891                     	;# 
  8188  0892                     	;# 
  8189  0893                     	;# 
  8190  0895                     	;# 
  8191  0896                     	;# 
  8192  0897                     	;# 
  8193  0898                     	;# 
  8194  0899                     	;# 
  8195  089A                     	;# 
  8196  089B                     	;# 
  8197  090C                     	;# 
  8198  090E                     	;# 
  8199  090F                     	;# 
  8200  091F                     	;# 
  8201  091F                     	;# 
  8202  098F                     	;# 
  8203  098F                     	;# 
  8204  0990                     	;# 
  8205  0991                     	;# 
  8206  0992                     	;# 
  8207  0993                     	;# 
  8208  0994                     	;# 
  8209  0995                     	;# 
  8210  0996                     	;# 
  8211  0997                     	;# 
  8212  0E0F                     	;# 
  8213  0E10                     	;# 
  8214  0E11                     	;# 
  8215  0E12                     	;# 
  8216  0E13                     	;# 
  8217  0E14                     	;# 
  8218  0E15                     	;# 
  8219  0E16                     	;# 
  8220  0E17                     	;# 
  8221  0E18                     	;# 
  8222  0E19                     	;# 
  8223  0E1A                     	;# 
  8224  0E1B                     	;# 
  8225  0E1C                     	;# 
  8226  0E1D                     	;# 
  8227  0E1E                     	;# 
  8228  0E1F                     	;# 
  8229  0E20                     	;# 
  8230  0E21                     	;# 
  8231  0E22                     	;# 
  8232  0E23                     	;# 
  8233  0E24                     	;# 
  8234  0E25                     	;# 
  8235  0E26                     	;# 
  8236  0E27                     	;# 
  8237  0E28                     	;# 
  8238  0E29                     	;# 
  8239  0E2A                     	;# 
  8240  0E2B                     	;# 
  8241  0E2C                     	;# 
  8242  0E2D                     	;# 
  8243  0E2E                     	;# 
  8244  0E2F                     	;# 
  8245  0E30                     	;# 
  8246  0E31                     	;# 
  8247  0E32                     	;# 
  8248  0E33                     	;# 
  8249  0E34                     	;# 
  8250  0E35                     	;# 
  8251  0E36                     	;# 
  8252  0E37                     	;# 
  8253  0E8F                     	;# 
  8254  0E90                     	;# 
  8255  0E91                     	;# 
  8256  0E92                     	;# 
  8257  0E93                     	;# 
  8258  0E94                     	;# 
  8259  0E95                     	;# 
  8260  0E96                     	;# 
  8261  0E97                     	;# 
  8262  0E9C                     	;# 
  8263  0E9D                     	;# 
  8264  0E9E                     	;# 
  8265  0EA1                     	;# 
  8266  0EA2                     	;# 
  8267  0EA3                     	;# 
  8268  0EA4                     	;# 
  8269  0EA5                     	;# 
  8270  0EA9                     	;# 
  8271  0EAA                     	;# 
  8272  0EAB                     	;# 
  8273  0EAC                     	;# 
  8274  0EB1                     	;# 
  8275  0EB2                     	;# 
  8276  0EB3                     	;# 
  8277  0EB8                     	;# 
  8278  0EB9                     	;# 
  8279  0EBA                     	;# 
  8280  0EBB                     	;# 
  8281  0EBC                     	;# 
  8282  0EBD                     	;# 
  8283  0EBE                     	;# 
  8284  0EC3                     	;# 
  8285  0EC5                     	;# 
  8286  0EC6                     	;# 
  8287  0EC7                     	;# 
  8288  0EC8                     	;# 
  8289  0EC9                     	;# 
  8290  0ECA                     	;# 
  8291  0ECB                     	;# 
  8292  0ECC                     	;# 
  8293  0F10                     	;# 
  8294  0F11                     	;# 
  8295  0F12                     	;# 
  8296  0F13                     	;# 
  8297  0F14                     	;# 
  8298  0F15                     	;# 
  8299  0F16                     	;# 
  8300  0F17                     	;# 
  8301  0F18                     	;# 
  8302  0F19                     	;# 
  8303  0F1A                     	;# 
  8304  0F1B                     	;# 
  8305  0F1C                     	;# 
  8306  0F1D                     	;# 
  8307  0F1E                     	;# 
  8308  0F1F                     	;# 
  8309  0F20                     	;# 
  8310  0F21                     	;# 
  8311  0F22                     	;# 
  8312  0F23                     	;# 
  8313  0F24                     	;# 
  8314  0F25                     	;# 
  8315  0F26                     	;# 
  8316  0F27                     	;# 
  8317  0F28                     	;# 
  8318  0F29                     	;# 
  8319  0F2A                     	;# 
  8320  0F2B                     	;# 
  8321  0F2C                     	;# 
  8322  0F2D                     	;# 
  8323  0F2E                     	;# 
  8324  0F2F                     	;# 
  8325  0F30                     	;# 
  8326  0F31                     	;# 
  8327  0F32                     	;# 
  8328  0F38                     	;# 
  8329  0F39                     	;# 
  8330  0F3A                     	;# 
  8331  0F3B                     	;# 
  8332  0F3C                     	;# 
  8333  0F3D                     	;# 
  8334  0F3E                     	;# 
  8335  0F3F                     	;# 
  8336  0F40                     	;# 
  8337  0F41                     	;# 
  8338  0F43                     	;# 
  8339  0F44                     	;# 
  8340  0F45                     	;# 
  8341  0F46                     	;# 
  8342  0F47                     	;# 
  8343  0F48                     	;# 
  8344  0F49                     	;# 
  8345  0F4A                     	;# 
  8346  0F4B                     	;# 
  8347  0F4C                     	;# 
  8348  0F4E                     	;# 
  8349  0F4F                     	;# 
  8350  0F50                     	;# 
  8351  0F51                     	;# 
  8352  0F52                     	;# 
  8353  0F53                     	;# 
  8354  0F54                     	;# 
  8355  0F55                     	;# 
  8356  0F56                     	;# 
  8357  0F57                     	;# 
  8358  0F59                     	;# 
  8359  0F5A                     	;# 
  8360  0F5B                     	;# 
  8361  0F5C                     	;# 
  8362  0F5D                     	;# 
  8363  0F61                     	;# 
  8364  0F62                     	;# 
  8365  0F64                     	;# 
  8366  0F65                     	;# 
  8367  0F66                     	;# 
  8368  0F67                     	;# 
  8369  0F68                     	;# 
  8370  0F69                     	;# 
  8371  0F6A                     	;# 
  8372  0F6B                     	;# 
  8373  0F6C                     	;# 
  8374  0F6D                     	;# 
  8375  0FE4                     	;# 
  8376  0FE5                     	;# 
  8377  0FE6                     	;# 
  8378  0FE7                     	;# 
  8379  0FE8                     	;# 
  8380  0FE9                     	;# 
  8381  0FEA                     	;# 
  8382  0FEB                     	;# 
  8383  0FED                     	;# 
  8384  0FEE                     	;# 
  8385  0FEF                     	;# 
  8386  0000                     	;# 
  8387  0001                     	;# 
  8388  0002                     	;# 
  8389  0003                     	;# 
  8390  0004                     	;# 
  8391  0005                     	;# 
  8392  0006                     	;# 
  8393  0007                     	;# 
  8394  0008                     	;# 
  8395  0009                     	;# 
  8396  000A                     	;# 
  8397  000B                     	;# 
  8398  000C                     	;# 
  8399  000D                     	;# 
  8400  000E                     	;# 
  8401  000F                     	;# 
  8402  0010                     	;# 
  8403  0011                     	;# 
  8404  0012                     	;# 
  8405  0013                     	;# 
  8406  0014                     	;# 
  8407  0015                     	;# 
  8408  0016                     	;# 
  8409  0017                     	;# 
  8410  0018                     	;# 
  8411  0019                     	;# 
  8412  001A                     	;# 
  8413  001C                     	;# 
  8414  001C                     	;# 
  8415  001D                     	;# 
  8416  001D                     	;# 
  8417  001E                     	;# 
  8418  001F                     	;# 
  8419  008C                     	;# 
  8420  008C                     	;# 
  8421  008D                     	;# 
  8422  008E                     	;# 
  8423  008E                     	;# 
  8424  008F                     	;# 
  8425  0090                     	;# 
  8426  0090                     	;# 
  8427  0091                     	;# 
  8428  0093                     	;# 
  8429  0094                     	;# 
  8430  0095                     	;# 
  8431  0096                     	;# 
  8432  0097                     	;# 
  8433  0098                     	;# 
  8434  0099                     	;# 
  8435  009A                     	;# 
  8436  009B                     	;# 
  8437  009C                     	;# 
  8438  009D                     	;# 
  8439  009E                     	;# 
  8440  010C                     	;# 
  8441  010D                     	;# 
  8442  010E                     	;# 
  8443  010E                     	;# 
  8444  010F                     	;# 
  8445  0110                     	;# 
  8446  0110                     	;# 
  8447  0111                     	;# 
  8448  0112                     	;# 
  8449  0112                     	;# 
  8450  0113                     	;# 
  8451  0114                     	;# 
  8452  0114                     	;# 
  8453  0115                     	;# 
  8454  0116                     	;# 
  8455  0116                     	;# 
  8456  0117                     	;# 
  8457  0119                     	;# 
  8458  0119                     	;# 
  8459  0119                     	;# 
  8460  011A                     	;# 
  8461  011A                     	;# 
  8462  011A                     	;# 
  8463  011B                     	;# 
  8464  011B                     	;# 
  8465  011B                     	;# 
  8466  011B                     	;# 
  8467  011B                     	;# 
  8468  011C                     	;# 
  8469  011C                     	;# 
  8470  011C                     	;# 
  8471  011D                     	;# 
  8472  011D                     	;# 
  8473  011D                     	;# 
  8474  011E                     	;# 
  8475  011E                     	;# 
  8476  011E                     	;# 
  8477  011F                     	;# 
  8478  011F                     	;# 
  8479  011F                     	;# 
  8480  011F                     	;# 
  8481  011F                     	;# 
  8482  018C                     	;# 
  8483  018D                     	;# 
  8484  018E                     	;# 
  8485  018F                     	;# 
  8486  0190                     	;# 
  8487  0191                     	;# 
  8488  0192                     	;# 
  8489  0196                     	;# 
  8490  0197                     	;# 
  8491  0198                     	;# 
  8492  0199                     	;# 
  8493  019A                     	;# 
  8494  019B                     	;# 
  8495  019C                     	;# 
  8496  020C                     	;# 
  8497  020C                     	;# 
  8498  020D                     	;# 
  8499  020E                     	;# 
  8500  020F                     	;# 
  8501  020F                     	;# 
  8502  0210                     	;# 
  8503  0210                     	;# 
  8504  0211                     	;# 
  8505  0211                     	;# 
  8506  0212                     	;# 
  8507  0212                     	;# 
  8508  0213                     	;# 
  8509  0214                     	;# 
  8510  0215                     	;# 
  8511  0215                     	;# 
  8512  0216                     	;# 
  8513  0216                     	;# 
  8514  0217                     	;# 
  8515  0217                     	;# 
  8516  0218                     	;# 
  8517  0218                     	;# 
  8518  0219                     	;# 
  8519  021A                     	;# 
  8520  021B                     	;# 
  8521  021B                     	;# 
  8522  021C                     	;# 
  8523  021C                     	;# 
  8524  021D                     	;# 
  8525  021D                     	;# 
  8526  021E                     	;# 
  8527  021F                     	;# 
  8528  028C                     	;# 
  8529  028C                     	;# 
  8530  028D                     	;# 
  8531  028D                     	;# 
  8532  028E                     	;# 
  8533  028F                     	;# 
  8534  0290                     	;# 
  8535  0290                     	;# 
  8536  0291                     	;# 
  8537  0292                     	;# 
  8538  0292                     	;# 
  8539  0293                     	;# 
  8540  0293                     	;# 
  8541  0294                     	;# 
  8542  0295                     	;# 
  8543  0296                     	;# 
  8544  0296                     	;# 
  8545  0297                     	;# 
  8546  0298                     	;# 
  8547  0298                     	;# 
  8548  0299                     	;# 
  8549  0299                     	;# 
  8550  029A                     	;# 
  8551  029B                     	;# 
  8552  029C                     	;# 
  8553  029C                     	;# 
  8554  029D                     	;# 
  8555  030C                     	;# 
  8556  030C                     	;# 
  8557  030D                     	;# 
  8558  030E                     	;# 
  8559  030F                     	;# 
  8560  0310                     	;# 
  8561  0310                     	;# 
  8562  0311                     	;# 
  8563  0312                     	;# 
  8564  0313                     	;# 
  8565  0314                     	;# 
  8566  0314                     	;# 
  8567  0315                     	;# 
  8568  0316                     	;# 
  8569  0317                     	;# 
  8570  0318                     	;# 
  8571  0318                     	;# 
  8572  0319                     	;# 
  8573  031A                     	;# 
  8574  031B                     	;# 
  8575  031C                     	;# 
  8576  031C                     	;# 
  8577  031D                     	;# 
  8578  031E                     	;# 
  8579  031F                     	;# 
  8580  038C                     	;# 
  8581  038C                     	;# 
  8582  038D                     	;# 
  8583  038E                     	;# 
  8584  0390                     	;# 
  8585  0390                     	;# 
  8586  0391                     	;# 
  8587  0392                     	;# 
  8588  040C                     	;# 
  8589  040D                     	;# 
  8590  040E                     	;# 
  8591  040F                     	;# 
  8592  0410                     	;# 
  8593  0411                     	;# 
  8594  0416                     	;# 
  8595  0416                     	;# 
  8596  0417                     	;# 
  8597  0418                     	;# 
  8598  0418                     	;# 
  8599  0419                     	;# 
  8600  041A                     	;# 
  8601  041A                     	;# 
  8602  041B                     	;# 
  8603  041C                     	;# 
  8604  041C                     	;# 
  8605  041D                     	;# 
  8606  041E                     	;# 
  8607  041F                     	;# 
  8608  048C                     	;# 
  8609  048C                     	;# 
  8610  048D                     	;# 
  8611  048E                     	;# 
  8612  048F                     	;# 
  8613  048F                     	;# 
  8614  0490                     	;# 
  8615  0491                     	;# 
  8616  0492                     	;# 
  8617  0492                     	;# 
  8618  0493                     	;# 
  8619  0494                     	;# 
  8620  0495                     	;# 
  8621  0495                     	;# 
  8622  0496                     	;# 
  8623  0497                     	;# 
  8624  0498                     	;# 
  8625  0499                     	;# 
  8626  049A                     	;# 
  8627  049B                     	;# 
  8628  049C                     	;# 
  8629  049D                     	;# 
  8630  050C                     	;# 
  8631  050C                     	;# 
  8632  050D                     	;# 
  8633  050E                     	;# 
  8634  050F                     	;# 
  8635  050F                     	;# 
  8636  0510                     	;# 
  8637  0511                     	;# 
  8638  0512                     	;# 
  8639  0512                     	;# 
  8640  0513                     	;# 
  8641  0514                     	;# 
  8642  0515                     	;# 
  8643  0515                     	;# 
  8644  0516                     	;# 
  8645  0517                     	;# 
  8646  0518                     	;# 
  8647  0519                     	;# 
  8648  051A                     	;# 
  8649  051B                     	;# 
  8650  051C                     	;# 
  8651  051D                     	;# 
  8652  058C                     	;# 
  8653  058C                     	;# 
  8654  058D                     	;# 
  8655  058E                     	;# 
  8656  058F                     	;# 
  8657  058F                     	;# 
  8658  0590                     	;# 
  8659  0591                     	;# 
  8660  0592                     	;# 
  8661  0593                     	;# 
  8662  060C                     	;# 
  8663  060D                     	;# 
  8664  060E                     	;# 
  8665  060F                     	;# 
  8666  0610                     	;# 
  8667  0611                     	;# 
  8668  0612                     	;# 
  8669  0613                     	;# 
  8670  0614                     	;# 
  8671  0616                     	;# 
  8672  0617                     	;# 
  8673  0618                     	;# 
  8674  0619                     	;# 
  8675  061A                     	;# 
  8676  061B                     	;# 
  8677  061C                     	;# 
  8678  061D                     	;# 
  8679  061E                     	;# 
  8680  068C                     	;# 
  8681  068D                     	;# 
  8682  068E                     	;# 
  8683  068F                     	;# 
  8684  0690                     	;# 
  8685  0691                     	;# 
  8686  0692                     	;# 
  8687  0693                     	;# 
  8688  0694                     	;# 
  8689  070C                     	;# 
  8690  070D                     	;# 
  8691  070E                     	;# 
  8692  070F                     	;# 
  8693  0710                     	;# 
  8694  0711                     	;# 
  8695  0712                     	;# 
  8696  0713                     	;# 
  8697  0714                     	;# 
  8698  0716                     	;# 
  8699  0717                     	;# 
  8700  0718                     	;# 
  8701  0719                     	;# 
  8702  071A                     	;# 
  8703  071B                     	;# 
  8704  071C                     	;# 
  8705  071D                     	;# 
  8706  071E                     	;# 
  8707  0796                     	;# 
  8708  0797                     	;# 
  8709  0798                     	;# 
  8710  0799                     	;# 
  8711  079A                     	;# 
  8712  079B                     	;# 
  8713  080C                     	;# 
  8714  080D                     	;# 
  8715  080E                     	;# 
  8716  080F                     	;# 
  8717  0810                     	;# 
  8718  0811                     	;# 
  8719  0812                     	;# 
  8720  0813                     	;# 
  8721  0814                     	;# 
  8722  081A                     	;# 
  8723  081B                     	;# 
  8724  081C                     	;# 
  8725  081D                     	;# 
  8726  081E                     	;# 
  8727  081F                     	;# 
  8728  088C                     	;# 
  8729  088D                     	;# 
  8730  088E                     	;# 
  8731  088F                     	;# 
  8732  0890                     	;# 
  8733  0891                     	;# 
  8734  0892                     	;# 
  8735  0893                     	;# 
  8736  0895                     	;# 
  8737  0896                     	;# 
  8738  0897                     	;# 
  8739  0898                     	;# 
  8740  0899                     	;# 
  8741  089A                     	;# 
  8742  089B                     	;# 
  8743  090C                     	;# 
  8744  090E                     	;# 
  8745  090F                     	;# 
  8746  091F                     	;# 
  8747  091F                     	;# 
  8748  098F                     	;# 
  8749  098F                     	;# 
  8750  0990                     	;# 
  8751  0991                     	;# 
  8752  0992                     	;# 
  8753  0993                     	;# 
  8754  0994                     	;# 
  8755  0995                     	;# 
  8756  0996                     	;# 
  8757  0997                     	;# 
  8758  0E0F                     	;# 
  8759  0E10                     	;# 
  8760  0E11                     	;# 
  8761  0E12                     	;# 
  8762  0E13                     	;# 
  8763  0E14                     	;# 
  8764  0E15                     	;# 
  8765  0E16                     	;# 
  8766  0E17                     	;# 
  8767  0E18                     	;# 
  8768  0E19                     	;# 
  8769  0E1A                     	;# 
  8770  0E1B                     	;# 
  8771  0E1C                     	;# 
  8772  0E1D                     	;# 
  8773  0E1E                     	;# 
  8774  0E1F                     	;# 
  8775  0E20                     	;# 
  8776  0E21                     	;# 
  8777  0E22                     	;# 
  8778  0E23                     	;# 
  8779  0E24                     	;# 
  8780  0E25                     	;# 
  8781  0E26                     	;# 
  8782  0E27                     	;# 
  8783  0E28                     	;# 
  8784  0E29                     	;# 
  8785  0E2A                     	;# 
  8786  0E2B                     	;# 
  8787  0E2C                     	;# 
  8788  0E2D                     	;# 
  8789  0E2E                     	;# 
  8790  0E2F                     	;# 
  8791  0E30                     	;# 
  8792  0E31                     	;# 
  8793  0E32                     	;# 
  8794  0E33                     	;# 
  8795  0E34                     	;# 
  8796  0E35                     	;# 
  8797  0E36                     	;# 
  8798  0E37                     	;# 
  8799  0E8F                     	;# 
  8800  0E90                     	;# 
  8801  0E91                     	;# 
  8802  0E92                     	;# 
  8803  0E93                     	;# 
  8804  0E94                     	;# 
  8805  0E95                     	;# 
  8806  0E96                     	;# 
  8807  0E97                     	;# 
  8808  0E9C                     	;# 
  8809  0E9D                     	;# 
  8810  0E9E                     	;# 
  8811  0EA1                     	;# 
  8812  0EA2                     	;# 
  8813  0EA3                     	;# 
  8814  0EA4                     	;# 
  8815  0EA5                     	;# 
  8816  0EA9                     	;# 
  8817  0EAA                     	;# 
  8818  0EAB                     	;# 
  8819  0EAC                     	;# 
  8820  0EB1                     	;# 
  8821  0EB2                     	;# 
  8822  0EB3                     	;# 
  8823  0EB8                     	;# 
  8824  0EB9                     	;# 
  8825  0EBA                     	;# 
  8826  0EBB                     	;# 
  8827  0EBC                     	;# 
  8828  0EBD                     	;# 
  8829  0EBE                     	;# 
  8830  0EC3                     	;# 
  8831  0EC5                     	;# 
  8832  0EC6                     	;# 
  8833  0EC7                     	;# 
  8834  0EC8                     	;# 
  8835  0EC9                     	;# 
  8836  0ECA                     	;# 
  8837  0ECB                     	;# 
  8838  0ECC                     	;# 
  8839  0F10                     	;# 
  8840  0F11                     	;# 
  8841  0F12                     	;# 
  8842  0F13                     	;# 
  8843  0F14                     	;# 
  8844  0F15                     	;# 
  8845  0F16                     	;# 
  8846  0F17                     	;# 
  8847  0F18                     	;# 
  8848  0F19                     	;# 
  8849  0F1A                     	;# 
  8850  0F1B                     	;# 
  8851  0F1C                     	;# 
  8852  0F1D                     	;# 
  8853  0F1E                     	;# 
  8854  0F1F                     	;# 
  8855  0F20                     	;# 
  8856  0F21                     	;# 
  8857  0F22                     	;# 
  8858  0F23                     	;# 
  8859  0F24                     	;# 
  8860  0F25                     	;# 
  8861  0F26                     	;# 
  8862  0F27                     	;# 
  8863  0F28                     	;# 
  8864  0F29                     	;# 
  8865  0F2A                     	;# 
  8866  0F2B                     	;# 
  8867  0F2C                     	;# 
  8868  0F2D                     	;# 
  8869  0F2E                     	;# 
  8870  0F2F                     	;# 
  8871  0F30                     	;# 
  8872  0F31                     	;# 
  8873  0F32                     	;# 
  8874  0F38                     	;# 
  8875  0F39                     	;# 
  8876  0F3A                     	;# 
  8877  0F3B                     	;# 
  8878  0F3C                     	;# 
  8879  0F3D                     	;# 
  8880  0F3E                     	;# 
  8881  0F3F                     	;# 
  8882  0F40                     	;# 
  8883  0F41                     	;# 
  8884  0F43                     	;# 
  8885  0F44                     	;# 
  8886  0F45                     	;# 
  8887  0F46                     	;# 
  8888  0F47                     	;# 
  8889  0F48                     	;# 
  8890  0F49                     	;# 
  8891  0F4A                     	;# 
  8892  0F4B                     	;# 
  8893  0F4C                     	;# 
  8894  0F4E                     	;# 
  8895  0F4F                     	;# 
  8896  0F50                     	;# 
  8897  0F51                     	;# 
  8898  0F52                     	;# 
  8899  0F53                     	;# 
  8900  0F54                     	;# 
  8901  0F55                     	;# 
  8902  0F56                     	;# 
  8903  0F57                     	;# 
  8904  0F59                     	;# 
  8905  0F5A                     	;# 
  8906  0F5B                     	;# 
  8907  0F5C                     	;# 
  8908  0F5D                     	;# 
  8909  0F61                     	;# 
  8910  0F62                     	;# 
  8911  0F64                     	;# 
  8912  0F65                     	;# 
  8913  0F66                     	;# 
  8914  0F67                     	;# 
  8915  0F68                     	;# 
  8916  0F69                     	;# 
  8917  0F6A                     	;# 
  8918  0F6B                     	;# 
  8919  0F6C                     	;# 
  8920  0F6D                     	;# 
  8921  0FE4                     	;# 
  8922  0FE5                     	;# 
  8923  0FE6                     	;# 
  8924  0FE7                     	;# 
  8925  0FE8                     	;# 
  8926  0FE9                     	;# 
  8927  0FEA                     	;# 
  8928  0FEB                     	;# 
  8929  0FED                     	;# 
  8930  0FEE                     	;# 
  8931  0FEF                     	;# 
  8932  0000                     	;# 
  8933  0001                     	;# 
  8934  0002                     	;# 
  8935  0003                     	;# 
  8936  0004                     	;# 
  8937  0005                     	;# 
  8938  0006                     	;# 
  8939  0007                     	;# 
  8940  0008                     	;# 
  8941  0009                     	;# 
  8942  000A                     	;# 
  8943  000B                     	;# 
  8944  000C                     	;# 
  8945  000D                     	;# 
  8946  000E                     	;# 
  8947  000F                     	;# 
  8948  0010                     	;# 
  8949  0011                     	;# 
  8950  0012                     	;# 
  8951  0013                     	;# 
  8952  0014                     	;# 
  8953  0015                     	;# 
  8954  0016                     	;# 
  8955  0017                     	;# 
  8956  0018                     	;# 
  8957  0019                     	;# 
  8958  001A                     	;# 
  8959  001C                     	;# 
  8960  001C                     	;# 
  8961  001D                     	;# 
  8962  001D                     	;# 
  8963  001E                     	;# 
  8964  001F                     	;# 
  8965  008C                     	;# 
  8966  008C                     	;# 
  8967  008D                     	;# 
  8968  008E                     	;# 
  8969  008E                     	;# 
  8970  008F                     	;# 
  8971  0090                     	;# 
  8972  0090                     	;# 
  8973  0091                     	;# 
  8974  0093                     	;# 
  8975  0094                     	;# 
  8976  0095                     	;# 
  8977  0096                     	;# 
  8978  0097                     	;# 
  8979  0098                     	;# 
  8980  0099                     	;# 
  8981  009A                     	;# 
  8982  009B                     	;# 
  8983  009C                     	;# 
  8984  009D                     	;# 
  8985  009E                     	;# 
  8986  010C                     	;# 
  8987  010D                     	;# 
  8988  010E                     	;# 
  8989  010E                     	;# 
  8990  010F                     	;# 
  8991  0110                     	;# 
  8992  0110                     	;# 
  8993  0111                     	;# 
  8994  0112                     	;# 
  8995  0112                     	;# 
  8996  0113                     	;# 
  8997  0114                     	;# 
  8998  0114                     	;# 
  8999  0115                     	;# 
  9000  0116                     	;# 
  9001  0116                     	;# 
  9002  0117                     	;# 
  9003  0119                     	;# 
  9004  0119                     	;# 
  9005  0119                     	;# 
  9006  011A                     	;# 
  9007  011A                     	;# 
  9008  011A                     	;# 
  9009  011B                     	;# 
  9010  011B                     	;# 
  9011  011B                     	;# 
  9012  011B                     	;# 
  9013  011B                     	;# 
  9014  011C                     	;# 
  9015  011C                     	;# 
  9016  011C                     	;# 
  9017  011D                     	;# 
  9018  011D                     	;# 
  9019  011D                     	;# 
  9020  011E                     	;# 
  9021  011E                     	;# 
  9022  011E                     	;# 
  9023  011F                     	;# 
  9024  011F                     	;# 
  9025  011F                     	;# 
  9026  011F                     	;# 
  9027  011F                     	;# 
  9028  018C                     	;# 
  9029  018D                     	;# 
  9030  018E                     	;# 
  9031  018F                     	;# 
  9032  0190                     	;# 
  9033  0191                     	;# 
  9034  0192                     	;# 
  9035  0196                     	;# 
  9036  0197                     	;# 
  9037  0198                     	;# 
  9038  0199                     	;# 
  9039  019A                     	;# 
  9040  019B                     	;# 
  9041  019C                     	;# 
  9042  020C                     	;# 
  9043  020C                     	;# 
  9044  020D                     	;# 
  9045  020E                     	;# 
  9046  020F                     	;# 
  9047  020F                     	;# 
  9048  0210                     	;# 
  9049  0210                     	;# 
  9050  0211                     	;# 
  9051  0211                     	;# 
  9052  0212                     	;# 
  9053  0212                     	;# 
  9054  0213                     	;# 
  9055  0214                     	;# 
  9056  0215                     	;# 
  9057  0215                     	;# 
  9058  0216                     	;# 
  9059  0216                     	;# 
  9060  0217                     	;# 
  9061  0217                     	;# 
  9062  0218                     	;# 
  9063  0218                     	;# 
  9064  0219                     	;# 
  9065  021A                     	;# 
  9066  021B                     	;# 
  9067  021B                     	;# 
  9068  021C                     	;# 
  9069  021C                     	;# 
  9070  021D                     	;# 
  9071  021D                     	;# 
  9072  021E                     	;# 
  9073  021F                     	;# 
  9074  028C                     	;# 
  9075  028C                     	;# 
  9076  028D                     	;# 
  9077  028D                     	;# 
  9078  028E                     	;# 
  9079  028F                     	;# 
  9080  0290                     	;# 
  9081  0290                     	;# 
  9082  0291                     	;# 
  9083  0292                     	;# 
  9084  0292                     	;# 
  9085  0293                     	;# 
  9086  0293                     	;# 
  9087  0294                     	;# 
  9088  0295                     	;# 
  9089  0296                     	;# 
  9090  0296                     	;# 
  9091  0297                     	;# 
  9092  0298                     	;# 
  9093  0298                     	;# 
  9094  0299                     	;# 
  9095  0299                     	;# 
  9096  029A                     	;# 
  9097  029B                     	;# 
  9098  029C                     	;# 
  9099  029C                     	;# 
  9100  029D                     	;# 
  9101  030C                     	;# 
  9102  030C                     	;# 
  9103  030D                     	;# 
  9104  030E                     	;# 
  9105  030F                     	;# 
  9106  0310                     	;# 
  9107  0310                     	;# 
  9108  0311                     	;# 
  9109  0312                     	;# 
  9110  0313                     	;# 
  9111  0314                     	;# 
  9112  0314                     	;# 
  9113  0315                     	;# 
  9114  0316                     	;# 
  9115  0317                     	;# 
  9116  0318                     	;# 
  9117  0318                     	;# 
  9118  0319                     	;# 
  9119  031A                     	;# 
  9120  031B                     	;# 
  9121  031C                     	;# 
  9122  031C                     	;# 
  9123  031D                     	;# 
  9124  031E                     	;# 
  9125  031F                     	;# 
  9126  038C                     	;# 
  9127  038C                     	;# 
  9128  038D                     	;# 
  9129  038E                     	;# 
  9130  0390                     	;# 
  9131  0390                     	;# 
  9132  0391                     	;# 
  9133  0392                     	;# 
  9134  040C                     	;# 
  9135  040D                     	;# 
  9136  040E                     	;# 
  9137  040F                     	;# 
  9138  0410                     	;# 
  9139  0411                     	;# 
  9140  0416                     	;# 
  9141  0416                     	;# 
  9142  0417                     	;# 
  9143  0418                     	;# 
  9144  0418                     	;# 
  9145  0419                     	;# 
  9146  041A                     	;# 
  9147  041A                     	;# 
  9148  041B                     	;# 
  9149  041C                     	;# 
  9150  041C                     	;# 
  9151  041D                     	;# 
  9152  041E                     	;# 
  9153  041F                     	;# 
  9154  048C                     	;# 
  9155  048C                     	;# 
  9156  048D                     	;# 
  9157  048E                     	;# 
  9158  048F                     	;# 
  9159  048F                     	;# 
  9160  0490                     	;# 
  9161  0491                     	;# 
  9162  0492                     	;# 
  9163  0492                     	;# 
  9164  0493                     	;# 
  9165  0494                     	;# 
  9166  0495                     	;# 
  9167  0495                     	;# 
  9168  0496                     	;# 
  9169  0497                     	;# 
  9170  0498                     	;# 
  9171  0499                     	;# 
  9172  049A                     	;# 
  9173  049B                     	;# 
  9174  049C                     	;# 
  9175  049D                     	;# 
  9176  050C                     	;# 
  9177  050C                     	;# 
  9178  050D                     	;# 
  9179  050E                     	;# 
  9180  050F                     	;# 
  9181  050F                     	;# 
  9182  0510                     	;# 
  9183  0511                     	;# 
  9184  0512                     	;# 
  9185  0512                     	;# 
  9186  0513                     	;# 
  9187  0514                     	;# 
  9188  0515                     	;# 
  9189  0515                     	;# 
  9190  0516                     	;# 
  9191  0517                     	;# 
  9192  0518                     	;# 
  9193  0519                     	;# 
  9194  051A                     	;# 
  9195  051B                     	;# 
  9196  051C                     	;# 
  9197  051D                     	;# 
  9198  058C                     	;# 
  9199  058C                     	;# 
  9200  058D                     	;# 
  9201  058E                     	;# 
  9202  058F                     	;# 
  9203  058F                     	;# 
  9204  0590                     	;# 
  9205  0591                     	;# 
  9206  0592                     	;# 
  9207  0593                     	;# 
  9208  060C                     	;# 
  9209  060D                     	;# 
  9210  060E                     	;# 
  9211  060F                     	;# 
  9212  0610                     	;# 
  9213  0611                     	;# 
  9214  0612                     	;# 
  9215  0613                     	;# 
  9216  0614                     	;# 
  9217  0616                     	;# 
  9218  0617                     	;# 
  9219  0618                     	;# 
  9220  0619                     	;# 
  9221  061A                     	;# 
  9222  061B                     	;# 
  9223  061C                     	;# 
  9224  061D                     	;# 
  9225  061E                     	;# 
  9226  068C                     	;# 
  9227  068D                     	;# 
  9228  068E                     	;# 
  9229  068F                     	;# 
  9230  0690                     	;# 
  9231  0691                     	;# 
  9232  0692                     	;# 
  9233  0693                     	;# 
  9234  0694                     	;# 
  9235  070C                     	;# 
  9236  070D                     	;# 
  9237  070E                     	;# 
  9238  070F                     	;# 
  9239  0710                     	;# 
  9240  0711                     	;# 
  9241  0712                     	;# 
  9242  0713                     	;# 
  9243  0714                     	;# 
  9244  0716                     	;# 
  9245  0717                     	;# 
  9246  0718                     	;# 
  9247  0719                     	;# 
  9248  071A                     	;# 
  9249  071B                     	;# 
  9250  071C                     	;# 
  9251  071D                     	;# 
  9252  071E                     	;# 
  9253  0796                     	;# 
  9254  0797                     	;# 
  9255  0798                     	;# 
  9256  0799                     	;# 
  9257  079A                     	;# 
  9258  079B                     	;# 
  9259  080C                     	;# 
  9260  080D                     	;# 
  9261  080E                     	;# 
  9262  080F                     	;# 
  9263  0810                     	;# 
  9264  0811                     	;# 
  9265  0812                     	;# 
  9266  0813                     	;# 
  9267  0814                     	;# 
  9268  081A                     	;# 
  9269  081B                     	;# 
  9270  081C                     	;# 
  9271  081D                     	;# 
  9272  081E                     	;# 
  9273  081F                     	;# 
  9274  088C                     	;# 
  9275  088D                     	;# 
  9276  088E                     	;# 
  9277  088F                     	;# 
  9278  0890                     	;# 
  9279  0891                     	;# 
  9280  0892                     	;# 
  9281  0893                     	;# 
  9282  0895                     	;# 
  9283  0896                     	;# 
  9284  0897                     	;# 
  9285  0898                     	;# 
  9286  0899                     	;# 
  9287  089A                     	;# 
  9288  089B                     	;# 
  9289  090C                     	;# 
  9290  090E                     	;# 
  9291  090F                     	;# 
  9292  091F                     	;# 
  9293  091F                     	;# 
  9294  098F                     	;# 
  9295  098F                     	;# 
  9296  0990                     	;# 
  9297  0991                     	;# 
  9298  0992                     	;# 
  9299  0993                     	;# 
  9300  0994                     	;# 
  9301  0995                     	;# 
  9302  0996                     	;# 
  9303  0997                     	;# 
  9304  0E0F                     	;# 
  9305  0E10                     	;# 
  9306  0E11                     	;# 
  9307  0E12                     	;# 
  9308  0E13                     	;# 
  9309  0E14                     	;# 
  9310  0E15                     	;# 
  9311  0E16                     	;# 
  9312  0E17                     	;# 
  9313  0E18                     	;# 
  9314  0E19                     	;# 
  9315  0E1A                     	;# 
  9316  0E1B                     	;# 
  9317  0E1C                     	;# 
  9318  0E1D                     	;# 
  9319  0E1E                     	;# 
  9320  0E1F                     	;# 
  9321  0E20                     	;# 
  9322  0E21                     	;# 
  9323  0E22                     	;# 
  9324  0E23                     	;# 
  9325  0E24                     	;# 
  9326  0E25                     	;# 
  9327  0E26                     	;# 
  9328  0E27                     	;# 
  9329  0E28                     	;# 
  9330  0E29                     	;# 
  9331  0E2A                     	;# 
  9332  0E2B                     	;# 
  9333  0E2C                     	;# 
  9334  0E2D                     	;# 
  9335  0E2E                     	;# 
  9336  0E2F                     	;# 
  9337  0E30                     	;# 
  9338  0E31                     	;# 
  9339  0E32                     	;# 
  9340  0E33                     	;# 
  9341  0E34                     	;# 
  9342  0E35                     	;# 
  9343  0E36                     	;# 
  9344  0E37                     	;# 
  9345  0E8F                     	;# 
  9346  0E90                     	;# 
  9347  0E91                     	;# 
  9348  0E92                     	;# 
  9349  0E93                     	;# 
  9350  0E94                     	;# 
  9351  0E95                     	;# 
  9352  0E96                     	;# 
  9353  0E97                     	;# 
  9354  0E9C                     	;# 
  9355  0E9D                     	;# 
  9356  0E9E                     	;# 
  9357  0EA1                     	;# 
  9358  0EA2                     	;# 
  9359  0EA3                     	;# 
  9360  0EA4                     	;# 
  9361  0EA5                     	;# 
  9362  0EA9                     	;# 
  9363  0EAA                     	;# 
  9364  0EAB                     	;# 
  9365  0EAC                     	;# 
  9366  0EB1                     	;# 
  9367  0EB2                     	;# 
  9368  0EB3                     	;# 
  9369  0EB8                     	;# 
  9370  0EB9                     	;# 
  9371  0EBA                     	;# 
  9372  0EBB                     	;# 
  9373  0EBC                     	;# 
  9374  0EBD                     	;# 
  9375  0EBE                     	;# 
  9376  0EC3                     	;# 
  9377  0EC5                     	;# 
  9378  0EC6                     	;# 
  9379  0EC7                     	;# 
  9380  0EC8                     	;# 
  9381  0EC9                     	;# 
  9382  0ECA                     	;# 
  9383  0ECB                     	;# 
  9384  0ECC                     	;# 
  9385  0F10                     	;# 
  9386  0F11                     	;# 
  9387  0F12                     	;# 
  9388  0F13                     	;# 
  9389  0F14                     	;# 
  9390  0F15                     	;# 
  9391  0F16                     	;# 
  9392  0F17                     	;# 
  9393  0F18                     	;# 
  9394  0F19                     	;# 
  9395  0F1A                     	;# 
  9396  0F1B                     	;# 
  9397  0F1C                     	;# 
  9398  0F1D                     	;# 
  9399  0F1E                     	;# 
  9400  0F1F                     	;# 
  9401  0F20                     	;# 
  9402  0F21                     	;# 
  9403  0F22                     	;# 
  9404  0F23                     	;# 
  9405  0F24                     	;# 
  9406  0F25                     	;# 
  9407  0F26                     	;# 
  9408  0F27                     	;# 
  9409  0F28                     	;# 
  9410  0F29                     	;# 
  9411  0F2A                     	;# 
  9412  0F2B                     	;# 
  9413  0F2C                     	;# 
  9414  0F2D                     	;# 
  9415  0F2E                     	;# 
  9416  0F2F                     	;# 
  9417  0F30                     	;# 
  9418  0F31                     	;# 
  9419  0F32                     	;# 
  9420  0F38                     	;# 
  9421  0F39                     	;# 
  9422  0F3A                     	;# 
  9423  0F3B                     	;# 
  9424  0F3C                     	;# 
  9425  0F3D                     	;# 
  9426  0F3E                     	;# 
  9427  0F3F                     	;# 
  9428  0F40                     	;# 
  9429  0F41                     	;# 
  9430  0F43                     	;# 
  9431  0F44                     	;# 
  9432  0F45                     	;# 
  9433  0F46                     	;# 
  9434  0F47                     	;# 
  9435  0F48                     	;# 
  9436  0F49                     	;# 
  9437  0F4A                     	;# 
  9438  0F4B                     	;# 
  9439  0F4C                     	;# 
  9440  0F4E                     	;# 
  9441  0F4F                     	;# 
  9442  0F50                     	;# 
  9443  0F51                     	;# 
  9444  0F52                     	;# 
  9445  0F53                     	;# 
  9446  0F54                     	;# 
  9447  0F55                     	;# 
  9448  0F56                     	;# 
  9449  0F57                     	;# 
  9450  0F59                     	;# 
  9451  0F5A                     	;# 
  9452  0F5B                     	;# 
  9453  0F5C                     	;# 
  9454  0F5D                     	;# 
  9455  0F61                     	;# 
  9456  0F62                     	;# 
  9457  0F64                     	;# 
  9458  0F65                     	;# 
  9459  0F66                     	;# 
  9460  0F67                     	;# 
  9461  0F68                     	;# 
  9462  0F69                     	;# 
  9463  0F6A                     	;# 
  9464  0F6B                     	;# 
  9465  0F6C                     	;# 
  9466  0F6D                     	;# 
  9467  0FE4                     	;# 
  9468  0FE5                     	;# 
  9469  0FE6                     	;# 
  9470  0FE7                     	;# 
  9471  0FE8                     	;# 
  9472  0FE9                     	;# 
  9473  0FEA                     	;# 
  9474  0FEB                     	;# 
  9475  0FED                     	;# 
  9476  0FEE                     	;# 
  9477  0FEF                     	;# 
  9478  0000                     	;# 
  9479  0001                     	;# 
  9480  0002                     	;# 
  9481  0003                     	;# 
  9482  0004                     	;# 
  9483  0005                     	;# 
  9484  0006                     	;# 
  9485  0007                     	;# 
  9486  0008                     	;# 
  9487  0009                     	;# 
  9488  000A                     	;# 
  9489  000B                     	;# 
  9490  000C                     	;# 
  9491  000D                     	;# 
  9492  000E                     	;# 
  9493  000F                     	;# 
  9494  0010                     	;# 
  9495  0011                     	;# 
  9496  0012                     	;# 
  9497  0013                     	;# 
  9498  0014                     	;# 
  9499  0015                     	;# 
  9500  0016                     	;# 
  9501  0017                     	;# 
  9502  0018                     	;# 
  9503  0019                     	;# 
  9504  001A                     	;# 
  9505  001C                     	;# 
  9506  001C                     	;# 
  9507  001D                     	;# 
  9508  001D                     	;# 
  9509  001E                     	;# 
  9510  001F                     	;# 
  9511  008C                     	;# 
  9512  008C                     	;# 
  9513  008D                     	;# 
  9514  008E                     	;# 
  9515  008E                     	;# 
  9516  008F                     	;# 
  9517  0090                     	;# 
  9518  0090                     	;# 
  9519  0091                     	;# 
  9520  0093                     	;# 
  9521  0094                     	;# 
  9522  0095                     	;# 
  9523  0096                     	;# 
  9524  0097                     	;# 
  9525  0098                     	;# 
  9526  0099                     	;# 
  9527  009A                     	;# 
  9528  009B                     	;# 
  9529  009C                     	;# 
  9530  009D                     	;# 
  9531  009E                     	;# 
  9532  010C                     	;# 
  9533  010D                     	;# 
  9534  010E                     	;# 
  9535  010E                     	;# 
  9536  010F                     	;# 
  9537  0110                     	;# 
  9538  0110                     	;# 
  9539  0111                     	;# 
  9540  0112                     	;# 
  9541  0112                     	;# 
  9542  0113                     	;# 
  9543  0114                     	;# 
  9544  0114                     	;# 
  9545  0115                     	;# 
  9546  0116                     	;# 
  9547  0116                     	;# 
  9548  0117                     	;# 
  9549  0119                     	;# 
  9550  0119                     	;# 
  9551  0119                     	;# 
  9552  011A                     	;# 
  9553  011A                     	;# 
  9554  011A                     	;# 
  9555  011B                     	;# 
  9556  011B                     	;# 
  9557  011B                     	;# 
  9558  011B                     	;# 
  9559  011B                     	;# 
  9560  011C                     	;# 
  9561  011C                     	;# 
  9562  011C                     	;# 
  9563  011D                     	;# 
  9564  011D                     	;# 
  9565  011D                     	;# 
  9566  011E                     	;# 
  9567  011E                     	;# 
  9568  011E                     	;# 
  9569  011F                     	;# 
  9570  011F                     	;# 
  9571  011F                     	;# 
  9572  011F                     	;# 
  9573  011F                     	;# 
  9574  018C                     	;# 
  9575  018D                     	;# 
  9576  018E                     	;# 
  9577  018F                     	;# 
  9578  0190                     	;# 
  9579  0191                     	;# 
  9580  0192                     	;# 
  9581  0196                     	;# 
  9582  0197                     	;# 
  9583  0198                     	;# 
  9584  0199                     	;# 
  9585  019A                     	;# 
  9586  019B                     	;# 
  9587  019C                     	;# 
  9588  020C                     	;# 
  9589  020C                     	;# 
  9590  020D                     	;# 
  9591  020E                     	;# 
  9592  020F                     	;# 
  9593  020F                     	;# 
  9594  0210                     	;# 
  9595  0210                     	;# 
  9596  0211                     	;# 
  9597  0211                     	;# 
  9598  0212                     	;# 
  9599  0212                     	;# 
  9600  0213                     	;# 
  9601  0214                     	;# 
  9602  0215                     	;# 
  9603  0215                     	;# 
  9604  0216                     	;# 
  9605  0216                     	;# 
  9606  0217                     	;# 
  9607  0217                     	;# 
  9608  0218                     	;# 
  9609  0218                     	;# 
  9610  0219                     	;# 
  9611  021A                     	;# 
  9612  021B                     	;# 
  9613  021B                     	;# 
  9614  021C                     	;# 
  9615  021C                     	;# 
  9616  021D                     	;# 
  9617  021D                     	;# 
  9618  021E                     	;# 
  9619  021F                     	;# 
  9620  028C                     	;# 
  9621  028C                     	;# 
  9622  028D                     	;# 
  9623  028D                     	;# 
  9624  028E                     	;# 
  9625  028F                     	;# 
  9626  0290                     	;# 
  9627  0290                     	;# 
  9628  0291                     	;# 
  9629  0292                     	;# 
  9630  0292                     	;# 
  9631  0293                     	;# 
  9632  0293                     	;# 
  9633  0294                     	;# 
  9634  0295                     	;# 
  9635  0296                     	;# 
  9636  0296                     	;# 
  9637  0297                     	;# 
  9638  0298                     	;# 
  9639  0298                     	;# 
  9640  0299                     	;# 
  9641  0299                     	;# 
  9642  029A                     	;# 
  9643  029B                     	;# 
  9644  029C                     	;# 
  9645  029C                     	;# 
  9646  029D                     	;# 
  9647  030C                     	;# 
  9648  030C                     	;# 
  9649  030D                     	;# 
  9650  030E                     	;# 
  9651  030F                     	;# 
  9652  0310                     	;# 
  9653  0310                     	;# 
  9654  0311                     	;# 
  9655  0312                     	;# 
  9656  0313                     	;# 
  9657  0314                     	;# 
  9658  0314                     	;# 
  9659  0315                     	;# 
  9660  0316                     	;# 
  9661  0317                     	;# 
  9662  0318                     	;# 
  9663  0318                     	;# 
  9664  0319                     	;# 
  9665  031A                     	;# 
  9666  031B                     	;# 
  9667  031C                     	;# 
  9668  031C                     	;# 
  9669  031D                     	;# 
  9670  031E                     	;# 
  9671  031F                     	;# 
  9672  038C                     	;# 
  9673  038C                     	;# 
  9674  038D                     	;# 
  9675  038E                     	;# 
  9676  0390                     	;# 
  9677  0390                     	;# 
  9678  0391                     	;# 
  9679  0392                     	;# 
  9680  040C                     	;# 
  9681  040D                     	;# 
  9682  040E                     	;# 
  9683  040F                     	;# 
  9684  0410                     	;# 
  9685  0411                     	;# 
  9686  0416                     	;# 
  9687  0416                     	;# 
  9688  0417                     	;# 
  9689  0418                     	;# 
  9690  0418                     	;# 
  9691  0419                     	;# 
  9692  041A                     	;# 
  9693  041A                     	;# 
  9694  041B                     	;# 
  9695  041C                     	;# 
  9696  041C                     	;# 
  9697  041D                     	;# 
  9698  041E                     	;# 
  9699  041F                     	;# 
  9700  048C                     	;# 
  9701  048C                     	;# 
  9702  048D                     	;# 
  9703  048E                     	;# 
  9704  048F                     	;# 
  9705  048F                     	;# 
  9706  0490                     	;# 
  9707  0491                     	;# 
  9708  0492                     	;# 
  9709  0492                     	;# 
  9710  0493                     	;# 
  9711  0494                     	;# 
  9712  0495                     	;# 
  9713  0495                     	;# 
  9714  0496                     	;# 
  9715  0497                     	;# 
  9716  0498                     	;# 
  9717  0499                     	;# 
  9718  049A                     	;# 
  9719  049B                     	;# 
  9720  049C                     	;# 
  9721  049D                     	;# 
  9722  050C                     	;# 
  9723  050C                     	;# 
  9724  050D                     	;# 
  9725  050E                     	;# 
  9726  050F                     	;# 
  9727  050F                     	;# 
  9728  0510                     	;# 
  9729  0511                     	;# 
  9730  0512                     	;# 
  9731  0512                     	;# 
  9732  0513                     	;# 
  9733  0514                     	;# 
  9734  0515                     	;# 
  9735  0515                     	;# 
  9736  0516                     	;# 
  9737  0517                     	;# 
  9738  0518                     	;# 
  9739  0519                     	;# 
  9740  051A                     	;# 
  9741  051B                     	;# 
  9742  051C                     	;# 
  9743  051D                     	;# 
  9744  058C                     	;# 
  9745  058C                     	;# 
  9746  058D                     	;# 
  9747  058E                     	;# 
  9748  058F                     	;# 
  9749  058F                     	;# 
  9750  0590                     	;# 
  9751  0591                     	;# 
  9752  0592                     	;# 
  9753  0593                     	;# 
  9754  060C                     	;# 
  9755  060D                     	;# 
  9756  060E                     	;# 
  9757  060F                     	;# 
  9758  0610                     	;# 
  9759  0611                     	;# 
  9760  0612                     	;# 
  9761  0613                     	;# 
  9762  0614                     	;# 
  9763  0616                     	;# 
  9764  0617                     	;# 
  9765  0618                     	;# 
  9766  0619                     	;# 
  9767  061A                     	;# 
  9768  061B                     	;# 
  9769  061C                     	;# 
  9770  061D                     	;# 
  9771  061E                     	;# 
  9772  068C                     	;# 
  9773  068D                     	;# 
  9774  068E                     	;# 
  9775  068F                     	;# 
  9776  0690                     	;# 
  9777  0691                     	;# 
  9778  0692                     	;# 
  9779  0693                     	;# 
  9780  0694                     	;# 
  9781  070C                     	;# 
  9782  070D                     	;# 
  9783  070E                     	;# 
  9784  070F                     	;# 
  9785  0710                     	;# 
  9786  0711                     	;# 
  9787  0712                     	;# 
  9788  0713                     	;# 
  9789  0714                     	;# 
  9790  0716                     	;# 
  9791  0717                     	;# 
  9792  0718                     	;# 
  9793  0719                     	;# 
  9794  071A                     	;# 
  9795  071B                     	;# 
  9796  071C                     	;# 
  9797  071D                     	;# 
  9798  071E                     	;# 
  9799  0796                     	;# 
  9800  0797                     	;# 
  9801  0798                     	;# 
  9802  0799                     	;# 
  9803  079A                     	;# 
  9804  079B                     	;# 
  9805  080C                     	;# 
  9806  080D                     	;# 
  9807  080E                     	;# 
  9808  080F                     	;# 
  9809  0810                     	;# 
  9810  0811                     	;# 
  9811  0812                     	;# 
  9812  0813                     	;# 
  9813  0814                     	;# 
  9814  081A                     	;# 
  9815  081B                     	;# 
  9816  081C                     	;# 
  9817  081D                     	;# 
  9818  081E                     	;# 
  9819  081F                     	;# 
  9820  088C                     	;# 
  9821  088D                     	;# 
  9822  088E                     	;# 
  9823  088F                     	;# 
  9824  0890                     	;# 
  9825  0891                     	;# 
  9826  0892                     	;# 
  9827  0893                     	;# 
  9828  0895                     	;# 
  9829  0896                     	;# 
  9830  0897                     	;# 
  9831  0898                     	;# 
  9832  0899                     	;# 
  9833  089A                     	;# 
  9834  089B                     	;# 
  9835  090C                     	;# 
  9836  090E                     	;# 
  9837  090F                     	;# 
  9838  091F                     	;# 
  9839  091F                     	;# 
  9840  098F                     	;# 
  9841  098F                     	;# 
  9842  0990                     	;# 
  9843  0991                     	;# 
  9844  0992                     	;# 
  9845  0993                     	;# 
  9846  0994                     	;# 
  9847  0995                     	;# 
  9848  0996                     	;# 
  9849  0997                     	;# 
  9850  0E0F                     	;# 
  9851  0E10                     	;# 
  9852  0E11                     	;# 
  9853  0E12                     	;# 
  9854  0E13                     	;# 
  9855  0E14                     	;# 
  9856  0E15                     	;# 
  9857  0E16                     	;# 
  9858  0E17                     	;# 
  9859  0E18                     	;# 
  9860  0E19                     	;# 
  9861  0E1A                     	;# 
  9862  0E1B                     	;# 
  9863  0E1C                     	;# 
  9864  0E1D                     	;# 
  9865  0E1E                     	;# 
  9866  0E1F                     	;# 
  9867  0E20                     	;# 
  9868  0E21                     	;# 
  9869  0E22                     	;# 
  9870  0E23                     	;# 
  9871  0E24                     	;# 
  9872  0E25                     	;# 
  9873  0E26                     	;# 
  9874  0E27                     	;# 
  9875  0E28                     	;# 
  9876  0E29                     	;# 
  9877  0E2A                     	;# 
  9878  0E2B                     	;# 
  9879  0E2C                     	;# 
  9880  0E2D                     	;# 
  9881  0E2E                     	;# 
  9882  0E2F                     	;# 
  9883  0E30                     	;# 
  9884  0E31                     	;# 
  9885  0E32                     	;# 
  9886  0E33                     	;# 
  9887  0E34                     	;# 
  9888  0E35                     	;# 
  9889  0E36                     	;# 
  9890  0E37                     	;# 
  9891  0E8F                     	;# 
  9892  0E90                     	;# 
  9893  0E91                     	;# 
  9894  0E92                     	;# 
  9895  0E93                     	;# 
  9896  0E94                     	;# 
  9897  0E95                     	;# 
  9898  0E96                     	;# 
  9899  0E97                     	;# 
  9900  0E9C                     	;# 
  9901  0E9D                     	;# 
  9902  0E9E                     	;# 
  9903  0EA1                     	;# 
  9904  0EA2                     	;# 
  9905  0EA3                     	;# 
  9906  0EA4                     	;# 
  9907  0EA5                     	;# 
  9908  0EA9                     	;# 
  9909  0EAA                     	;# 
  9910  0EAB                     	;# 
  9911  0EAC                     	;# 
  9912  0EB1                     	;# 
  9913  0EB2                     	;# 
  9914  0EB3                     	;# 
  9915  0EB8                     	;# 
  9916  0EB9                     	;# 
  9917  0EBA                     	;# 
  9918  0EBB                     	;# 
  9919  0EBC                     	;# 
  9920  0EBD                     	;# 
  9921  0EBE                     	;# 
  9922  0EC3                     	;# 
  9923  0EC5                     	;# 
  9924  0EC6                     	;# 
  9925  0EC7                     	;# 
  9926  0EC8                     	;# 
  9927  0EC9                     	;# 
  9928  0ECA                     	;# 
  9929  0ECB                     	;# 
  9930  0ECC                     	;# 
  9931  0F10                     	;# 
  9932  0F11                     	;# 
  9933  0F12                     	;# 
  9934  0F13                     	;# 
  9935  0F14                     	;# 
  9936  0F15                     	;# 
  9937  0F16                     	;# 
  9938  0F17                     	;# 
  9939  0F18                     	;# 
  9940  0F19                     	;# 
  9941  0F1A                     	;# 
  9942  0F1B                     	;# 
  9943  0F1C                     	;# 
  9944  0F1D                     	;# 
  9945  0F1E                     	;# 
  9946  0F1F                     	;# 
  9947  0F20                     	;# 
  9948  0F21                     	;# 
  9949  0F22                     	;# 
  9950  0F23                     	;# 
  9951  0F24                     	;# 
  9952  0F25                     	;# 
  9953  0F26                     	;# 
  9954  0F27                     	;# 
  9955  0F28                     	;# 
  9956  0F29                     	;# 
  9957  0F2A                     	;# 
  9958  0F2B                     	;# 
  9959  0F2C                     	;# 
  9960  0F2D                     	;# 
  9961  0F2E                     	;# 
  9962  0F2F                     	;# 
  9963  0F30                     	;# 
  9964  0F31                     	;# 
  9965  0F32                     	;# 
  9966  0F38                     	;# 
  9967  0F39                     	;# 
  9968  0F3A                     	;# 
  9969  0F3B                     	;# 
  9970  0F3C                     	;# 
  9971  0F3D                     	;# 
  9972  0F3E                     	;# 
  9973  0F3F                     	;# 
  9974  0F40                     	;# 
  9975  0F41                     	;# 
  9976  0F43                     	;# 
  9977  0F44                     	;# 
  9978  0F45                     	;# 
  9979  0F46                     	;# 
  9980  0F47                     	;# 
  9981  0F48                     	;# 
  9982  0F49                     	;# 
  9983  0F4A                     	;# 
  9984  0F4B                     	;# 
  9985  0F4C                     	;# 
  9986  0F4E                     	;# 
  9987  0F4F                     	;# 
  9988  0F50                     	;# 
  9989  0F51                     	;# 
  9990  0F52                     	;# 
  9991  0F53                     	;# 
  9992  0F54                     	;# 
  9993  0F55                     	;# 
  9994  0F56                     	;# 
  9995  0F57                     	;# 
  9996  0F59                     	;# 
  9997  0F5A                     	;# 
  9998  0F5B                     	;# 
  9999  0F5C                     	;# 
 10000  0F5D                     	;# 
 10001  0F61                     	;# 
 10002  0F62                     	;# 
 10003  0F64                     	;# 
 10004  0F65                     	;# 
 10005  0F66                     	;# 
 10006  0F67                     	;# 
 10007  0F68                     	;# 
 10008  0F69                     	;# 
 10009  0F6A                     	;# 
 10010  0F6B                     	;# 
 10011  0F6C                     	;# 
 10012  0F6D                     	;# 
 10013  0FE4                     	;# 
 10014  0FE5                     	;# 
 10015  0FE6                     	;# 
 10016  0FE7                     	;# 
 10017  0FE8                     	;# 
 10018  0FE9                     	;# 
 10019  0FEA                     	;# 
 10020  0FEB                     	;# 
 10021  0FED                     	;# 
 10022  0FEE                     	;# 
 10023  0FEF                     	;# 
 10024  0000                     	;# 
 10025  0001                     	;# 
 10026  0002                     	;# 
 10027  0003                     	;# 
 10028  0004                     	;# 
 10029  0005                     	;# 
 10030  0006                     	;# 
 10031  0007                     	;# 
 10032  0008                     	;# 
 10033  0009                     	;# 
 10034  000A                     	;# 
 10035  000B                     	;# 
 10036  000C                     	;# 
 10037  000D                     	;# 
 10038  000E                     	;# 
 10039  000F                     	;# 
 10040  0010                     	;# 
 10041  0011                     	;# 
 10042  0012                     	;# 
 10043  0013                     	;# 
 10044  0014                     	;# 
 10045  0015                     	;# 
 10046  0016                     	;# 
 10047  0017                     	;# 
 10048  0018                     	;# 
 10049  0019                     	;# 
 10050  001A                     	;# 
 10051  001C                     	;# 
 10052  001C                     	;# 
 10053  001D                     	;# 
 10054  001D                     	;# 
 10055  001E                     	;# 
 10056  001F                     	;# 
 10057  008C                     	;# 
 10058  008C                     	;# 
 10059  008D                     	;# 
 10060  008E                     	;# 
 10061  008E                     	;# 
 10062  008F                     	;# 
 10063  0090                     	;# 
 10064  0090                     	;# 
 10065  0091                     	;# 
 10066  0093                     	;# 
 10067  0094                     	;# 
 10068  0095                     	;# 
 10069  0096                     	;# 
 10070  0097                     	;# 
 10071  0098                     	;# 
 10072  0099                     	;# 
 10073  009A                     	;# 
 10074  009B                     	;# 
 10075  009C                     	;# 
 10076  009D                     	;# 
 10077  009E                     	;# 
 10078  010C                     	;# 
 10079  010D                     	;# 
 10080  010E                     	;# 
 10081  010E                     	;# 
 10082  010F                     	;# 
 10083  0110                     	;# 
 10084  0110                     	;# 
 10085  0111                     	;# 
 10086  0112                     	;# 
 10087  0112                     	;# 
 10088  0113                     	;# 
 10089  0114                     	;# 
 10090  0114                     	;# 
 10091  0115                     	;# 
 10092  0116                     	;# 
 10093  0116                     	;# 
 10094  0117                     	;# 
 10095  0119                     	;# 
 10096  0119                     	;# 
 10097  0119                     	;# 
 10098  011A                     	;# 
 10099  011A                     	;# 
 10100  011A                     	;# 
 10101  011B                     	;# 
 10102  011B                     	;# 
 10103  011B                     	;# 
 10104  011B                     	;# 
 10105  011B                     	;# 
 10106  011C                     	;# 
 10107  011C                     	;# 
 10108  011C                     	;# 
 10109  011D                     	;# 
 10110  011D                     	;# 
 10111  011D                     	;# 
 10112  011E                     	;# 
 10113  011E                     	;# 
 10114  011E                     	;# 
 10115  011F                     	;# 
 10116  011F                     	;# 
 10117  011F                     	;# 
 10118  011F                     	;# 
 10119  011F                     	;# 
 10120  018C                     	;# 
 10121  018D                     	;# 
 10122  018E                     	;# 
 10123  018F                     	;# 
 10124  0190                     	;# 
 10125  0191                     	;# 
 10126  0192                     	;# 
 10127  0196                     	;# 
 10128  0197                     	;# 
 10129  0198                     	;# 
 10130  0199                     	;# 
 10131  019A                     	;# 
 10132  019B                     	;# 
 10133  019C                     	;# 
 10134  020C                     	;# 
 10135  020C                     	;# 
 10136  020D                     	;# 
 10137  020E                     	;# 
 10138  020F                     	;# 
 10139  020F                     	;# 
 10140  0210                     	;# 
 10141  0210                     	;# 
 10142  0211                     	;# 
 10143  0211                     	;# 
 10144  0212                     	;# 
 10145  0212                     	;# 
 10146  0213                     	;# 
 10147  0214                     	;# 
 10148  0215                     	;# 
 10149  0215                     	;# 
 10150  0216                     	;# 
 10151  0216                     	;# 
 10152  0217                     	;# 
 10153  0217                     	;# 
 10154  0218                     	;# 
 10155  0218                     	;# 
 10156  0219                     	;# 
 10157  021A                     	;# 
 10158  021B                     	;# 
 10159  021B                     	;# 
 10160  021C                     	;# 
 10161  021C                     	;# 
 10162  021D                     	;# 
 10163  021D                     	;# 
 10164  021E                     	;# 
 10165  021F                     	;# 
 10166  028C                     	;# 
 10167  028C                     	;# 
 10168  028D                     	;# 
 10169  028D                     	;# 
 10170  028E                     	;# 
 10171  028F                     	;# 
 10172  0290                     	;# 
 10173  0290                     	;# 
 10174  0291                     	;# 
 10175  0292                     	;# 
 10176  0292                     	;# 
 10177  0293                     	;# 
 10178  0293                     	;# 
 10179  0294                     	;# 
 10180  0295                     	;# 
 10181  0296                     	;# 
 10182  0296                     	;# 
 10183  0297                     	;# 
 10184  0298                     	;# 
 10185  0298                     	;# 
 10186  0299                     	;# 
 10187  0299                     	;# 
 10188  029A                     	;# 
 10189  029B                     	;# 
 10190  029C                     	;# 
 10191  029C                     	;# 
 10192  029D                     	;# 
 10193  030C                     	;# 
 10194  030C                     	;# 
 10195  030D                     	;# 
 10196  030E                     	;# 
 10197  030F                     	;# 
 10198  0310                     	;# 
 10199  0310                     	;# 
 10200  0311                     	;# 
 10201  0312                     	;# 
 10202  0313                     	;# 
 10203  0314                     	;# 
 10204  0314                     	;# 
 10205  0315                     	;# 
 10206  0316                     	;# 
 10207  0317                     	;# 
 10208  0318                     	;# 
 10209  0318                     	;# 
 10210  0319                     	;# 
 10211  031A                     	;# 
 10212  031B                     	;# 
 10213  031C                     	;# 
 10214  031C                     	;# 
 10215  031D                     	;# 
 10216  031E                     	;# 
 10217  031F                     	;# 
 10218  038C                     	;# 
 10219  038C                     	;# 
 10220  038D                     	;# 
 10221  038E                     	;# 
 10222  0390                     	;# 
 10223  0390                     	;# 
 10224  0391                     	;# 
 10225  0392                     	;# 
 10226  040C                     	;# 
 10227  040D                     	;# 
 10228  040E                     	;# 
 10229  040F                     	;# 
 10230  0410                     	;# 
 10231  0411                     	;# 
 10232  0416                     	;# 
 10233  0416                     	;# 
 10234  0417                     	;# 
 10235  0418                     	;# 
 10236  0418                     	;# 
 10237  0419                     	;# 
 10238  041A                     	;# 
 10239  041A                     	;# 
 10240  041B                     	;# 
 10241  041C                     	;# 
 10242  041C                     	;# 
 10243  041D                     	;# 
 10244  041E                     	;# 
 10245  041F                     	;# 
 10246  048C                     	;# 
 10247  048C                     	;# 
 10248  048D                     	;# 
 10249  048E                     	;# 
 10250  048F                     	;# 
 10251  048F                     	;# 
 10252  0490                     	;# 
 10253  0491                     	;# 
 10254  0492                     	;# 
 10255  0492                     	;# 
 10256  0493                     	;# 
 10257  0494                     	;# 
 10258  0495                     	;# 
 10259  0495                     	;# 
 10260  0496                     	;# 
 10261  0497                     	;# 
 10262  0498                     	;# 
 10263  0499                     	;# 
 10264  049A                     	;# 
 10265  049B                     	;# 
 10266  049C                     	;# 
 10267  049D                     	;# 
 10268  050C                     	;# 
 10269  050C                     	;# 
 10270  050D                     	;# 
 10271  050E                     	;# 
 10272  050F                     	;# 
 10273  050F                     	;# 
 10274  0510                     	;# 
 10275  0511                     	;# 
 10276  0512                     	;# 
 10277  0512                     	;# 
 10278  0513                     	;# 
 10279  0514                     	;# 
 10280  0515                     	;# 
 10281  0515                     	;# 
 10282  0516                     	;# 
 10283  0517                     	;# 
 10284  0518                     	;# 
 10285  0519                     	;# 
 10286  051A                     	;# 
 10287  051B                     	;# 
 10288  051C                     	;# 
 10289  051D                     	;# 
 10290  058C                     	;# 
 10291  058C                     	;# 
 10292  058D                     	;# 
 10293  058E                     	;# 
 10294  058F                     	;# 
 10295  058F                     	;# 
 10296  0590                     	;# 
 10297  0591                     	;# 
 10298  0592                     	;# 
 10299  0593                     	;# 
 10300  060C                     	;# 
 10301  060D                     	;# 
 10302  060E                     	;# 
 10303  060F                     	;# 
 10304  0610                     	;# 
 10305  0611                     	;# 
 10306  0612                     	;# 
 10307  0613                     	;# 
 10308  0614                     	;# 
 10309  0616                     	;# 
 10310  0617                     	;# 
 10311  0618                     	;# 
 10312  0619                     	;# 
 10313  061A                     	;# 
 10314  061B                     	;# 
 10315  061C                     	;# 
 10316  061D                     	;# 
 10317  061E                     	;# 
 10318  068C                     	;# 
 10319  068D                     	;# 
 10320  068E                     	;# 
 10321  068F                     	;# 
 10322  0690                     	;# 
 10323  0691                     	;# 
 10324  0692                     	;# 
 10325  0693                     	;# 
 10326  0694                     	;# 
 10327  070C                     	;# 
 10328  070D                     	;# 
 10329  070E                     	;# 
 10330  070F                     	;# 
 10331  0710                     	;# 
 10332  0711                     	;# 
 10333  0712                     	;# 
 10334  0713                     	;# 
 10335  0714                     	;# 
 10336  0716                     	;# 
 10337  0717                     	;# 
 10338  0718                     	;# 
 10339  0719                     	;# 
 10340  071A                     	;# 
 10341  071B                     	;# 
 10342  071C                     	;# 
 10343  071D                     	;# 
 10344  071E                     	;# 
 10345  0796                     	;# 
 10346  0797                     	;# 
 10347  0798                     	;# 
 10348  0799                     	;# 
 10349  079A                     	;# 
 10350  079B                     	;# 
 10351  080C                     	;# 
 10352  080D                     	;# 
 10353  080E                     	;# 
 10354  080F                     	;# 
 10355  0810                     	;# 
 10356  0811                     	;# 
 10357  0812                     	;# 
 10358  0813                     	;# 
 10359  0814                     	;# 
 10360  081A                     	;# 
 10361  081B                     	;# 
 10362  081C                     	;# 
 10363  081D                     	;# 
 10364  081E                     	;# 
 10365  081F                     	;# 
 10366  088C                     	;# 
 10367  088D                     	;# 
 10368  088E                     	;# 
 10369  088F                     	;# 
 10370  0890                     	;# 
 10371  0891                     	;# 
 10372  0892                     	;# 
 10373  0893                     	;# 
 10374  0895                     	;# 
 10375  0896                     	;# 
 10376  0897                     	;# 
 10377  0898                     	;# 
 10378  0899                     	;# 
 10379  089A                     	;# 
 10380  089B                     	;# 
 10381  090C                     	;# 
 10382  090E                     	;# 
 10383  090F                     	;# 
 10384  091F                     	;# 
 10385  091F                     	;# 
 10386  098F                     	;# 
 10387  098F                     	;# 
 10388  0990                     	;# 
 10389  0991                     	;# 
 10390  0992                     	;# 
 10391  0993                     	;# 
 10392  0994                     	;# 
 10393  0995                     	;# 
 10394  0996                     	;# 
 10395  0997                     	;# 
 10396  0E0F                     	;# 
 10397  0E10                     	;# 
 10398  0E11                     	;# 
 10399  0E12                     	;# 
 10400  0E13                     	;# 
 10401  0E14                     	;# 
 10402  0E15                     	;# 
 10403  0E16                     	;# 
 10404  0E17                     	;# 
 10405  0E18                     	;# 
 10406  0E19                     	;# 
 10407  0E1A                     	;# 
 10408  0E1B                     	;# 
 10409  0E1C                     	;# 
 10410  0E1D                     	;# 
 10411  0E1E                     	;# 
 10412  0E1F                     	;# 
 10413  0E20                     	;# 
 10414  0E21                     	;# 
 10415  0E22                     	;# 
 10416  0E23                     	;# 
 10417  0E24                     	;# 
 10418  0E25                     	;# 
 10419  0E26                     	;# 
 10420  0E27                     	;# 
 10421  0E28                     	;# 
 10422  0E29                     	;# 
 10423  0E2A                     	;# 
 10424  0E2B                     	;# 
 10425  0E2C                     	;# 
 10426  0E2D                     	;# 
 10427  0E2E                     	;# 
 10428  0E2F                     	;# 
 10429  0E30                     	;# 
 10430  0E31                     	;# 
 10431  0E32                     	;# 
 10432  0E33                     	;# 
 10433  0E34                     	;# 
 10434  0E35                     	;# 
 10435  0E36                     	;# 
 10436  0E37                     	;# 
 10437  0E8F                     	;# 
 10438  0E90                     	;# 
 10439  0E91                     	;# 
 10440  0E92                     	;# 
 10441  0E93                     	;# 
 10442  0E94                     	;# 
 10443  0E95                     	;# 
 10444  0E96                     	;# 
 10445  0E97                     	;# 
 10446  0E9C                     	;# 
 10447  0E9D                     	;# 
 10448  0E9E                     	;# 
 10449  0EA1                     	;# 
 10450  0EA2                     	;# 
 10451  0EA3                     	;# 
 10452  0EA4                     	;# 
 10453  0EA5                     	;# 
 10454  0EA9                     	;# 
 10455  0EAA                     	;# 
 10456  0EAB                     	;# 
 10457  0EAC                     	;# 
 10458  0EB1                     	;# 
 10459  0EB2                     	;# 
 10460  0EB3                     	;# 
 10461  0EB8                     	;# 
 10462  0EB9                     	;# 
 10463  0EBA                     	;# 
 10464  0EBB                     	;# 
 10465  0EBC                     	;# 
 10466  0EBD                     	;# 
 10467  0EBE                     	;# 
 10468  0EC3                     	;# 
 10469  0EC5                     	;# 
 10470  0EC6                     	;# 
 10471  0EC7                     	;# 
 10472  0EC8                     	;# 
 10473  0EC9                     	;# 
 10474  0ECA                     	;# 
 10475  0ECB                     	;# 
 10476  0ECC                     	;# 
 10477  0F10                     	;# 
 10478  0F11                     	;# 
 10479  0F12                     	;# 
 10480  0F13                     	;# 
 10481  0F14                     	;# 
 10482  0F15                     	;# 
 10483  0F16                     	;# 
 10484  0F17                     	;# 
 10485  0F18                     	;# 
 10486  0F19                     	;# 
 10487  0F1A                     	;# 
 10488  0F1B                     	;# 
 10489  0F1C                     	;# 
 10490  0F1D                     	;# 
 10491  0F1E                     	;# 
 10492  0F1F                     	;# 
 10493  0F20                     	;# 
 10494  0F21                     	;# 
 10495  0F22                     	;# 
 10496  0F23                     	;# 
 10497  0F24                     	;# 
 10498  0F25                     	;# 
 10499  0F26                     	;# 
 10500  0F27                     	;# 
 10501  0F28                     	;# 
 10502  0F29                     	;# 
 10503  0F2A                     	;# 
 10504  0F2B                     	;# 
 10505  0F2C                     	;# 
 10506  0F2D                     	;# 
 10507  0F2E                     	;# 
 10508  0F2F                     	;# 
 10509  0F30                     	;# 
 10510  0F31                     	;# 
 10511  0F32                     	;# 
 10512  0F38                     	;# 
 10513  0F39                     	;# 
 10514  0F3A                     	;# 
 10515  0F3B                     	;# 
 10516  0F3C                     	;# 
 10517  0F3D                     	;# 
 10518  0F3E                     	;# 
 10519  0F3F                     	;# 
 10520  0F40                     	;# 
 10521  0F41                     	;# 
 10522  0F43                     	;# 
 10523  0F44                     	;# 
 10524  0F45                     	;# 
 10525  0F46                     	;# 
 10526  0F47                     	;# 
 10527  0F48                     	;# 
 10528  0F49                     	;# 
 10529  0F4A                     	;# 
 10530  0F4B                     	;# 
 10531  0F4C                     	;# 
 10532  0F4E                     	;# 
 10533  0F4F                     	;# 
 10534  0F50                     	;# 
 10535  0F51                     	;# 
 10536  0F52                     	;# 
 10537  0F53                     	;# 
 10538  0F54                     	;# 
 10539  0F55                     	;# 
 10540  0F56                     	;# 
 10541  0F57                     	;# 
 10542  0F59                     	;# 
 10543  0F5A                     	;# 
 10544  0F5B                     	;# 
 10545  0F5C                     	;# 
 10546  0F5D                     	;# 
 10547  0F61                     	;# 
 10548  0F62                     	;# 
 10549  0F64                     	;# 
 10550  0F65                     	;# 
 10551  0F66                     	;# 
 10552  0F67                     	;# 
 10553  0F68                     	;# 
 10554  0F69                     	;# 
 10555  0F6A                     	;# 
 10556  0F6B                     	;# 
 10557  0F6C                     	;# 
 10558  0F6D                     	;# 
 10559  0FE4                     	;# 
 10560  0FE5                     	;# 
 10561  0FE6                     	;# 
 10562  0FE7                     	;# 
 10563  0FE8                     	;# 
 10564  0FE9                     	;# 
 10565  0FEA                     	;# 
 10566  0FEB                     	;# 
 10567  0FED                     	;# 
 10568  0FEE                     	;# 
 10569  0FEF                     	;# 
 10570                           
 10571                           	psect	idataBANK0
 10572  1726                     __pidataBANK0:	
 10573                           
 10574                           ;initializer for _mode_field_subfield
 10575  1726  34FF               	retlw	255
 10576  1727  34FF               	retlw	255
 10577  1728  34FF               	retlw	255
 10578  1729  34FF               	retlw	255
 10579                           
 10580                           ;initializer for _lum_thresh
 10581  172A  3402               	retlw	2
 10582                           
 10583                           ;initializer for _temp_thresh
 10584  172B  3464               	retlw	100
 10585                           
 10586                           ;initializer for _tala
 10587  172C  3403               	retlw	3
 10588                           
 10589                           ;initializer for _pmon
 10590  172D  3405               	retlw	5
 10591                           
 10592                           ;initializer for _nreg
 10593  172E  341E               	retlw	30
 10594                           
 10595                           	psect	idataBANK2
 10596  17CE                     __pidataBANK2:	
 10597                           
 10598                           ;initializer for _str_snd
 10599  17CE  3468               	retlw	104
 10600  17CF  3465               	retlw	101
 10601  17D0  346C               	retlw	108
 10602  17D1  346C               	retlw	108
 10603  17D2  346F               	retlw	111
 10604  17D3  3400               	retlw	0
 10605  17D4  3400               	retlw	0
 10606  17D5  3400               	retlw	0
 10607  17D6  3400               	retlw	0
 10608  17D7  3400               	retlw	0
 10609  17D8  3400               	retlw	0
 10610  17D9  3400               	retlw	0
 10611  17DA  3400               	retlw	0
 10612  17DB  3400               	retlw	0
 10613  17DC  3400               	retlw	0
 10614  17DD  3400               	retlw	0
 10615                           
 10616                           	psect	stringtext1
 10617  1000                     __pstringtext1:	
 10618  1000                     _fsmStateTable:	
 10619  1000  3438               	retlw	low _do_I2C_IDLE
 10620  1001  3416               	retlw	high _do_I2C_IDLE
 10621  1002  34A8               	retlw	low _do_I2C_SEND_ADR_READ
 10622  1003  3416               	retlw	high _do_I2C_SEND_ADR_READ
 10623  1004  3490               	retlw	low _do_I2C_SEND_ADR_WRITE
 10624  1005  3416               	retlw	high _do_I2C_SEND_ADR_WRITE
 10625  1006  34AC               	retlw	low _do_I2C_TX
 10626  1007  340F               	retlw	high _do_I2C_TX
 10627  1008  342D               	retlw	low _do_I2C_RX
 10628  1009  340E               	retlw	high _do_I2C_RX
 10629  100A  3472               	retlw	low _do_I2C_RCEN
 10630  100B  3416               	retlw	high _do_I2C_RCEN
 10631  100C  3482               	retlw	low _do_I2C_TX_EMPTY
 10632  100D  340C               	retlw	high _do_I2C_TX_EMPTY
 10633  100E  343D               	retlw	low _do_I2C_SEND_RESTART_READ
 10634  100F  3416               	retlw	high _do_I2C_SEND_RESTART_READ
 10635  1010  3442               	retlw	low _do_I2C_SEND_RESTART_WRITE
 10636  1011  3416               	retlw	high _do_I2C_SEND_RESTART_WRITE
 10637  1012  3447               	retlw	low _do_I2C_SEND_RESTART
 10638  1013  3416               	retlw	high _do_I2C_SEND_RESTART
 10639  1014  344C               	retlw	low _do_I2C_SEND_STOP
 10640  1015  3416               	retlw	high _do_I2C_SEND_STOP
 10641  1016  3451               	retlw	low _do_I2C_DO_ACK
 10642  1017  3416               	retlw	high _do_I2C_DO_ACK
 10643  1018  3456               	retlw	low _do_I2C_DO_NACK_STOP
 10644  1019  3416               	retlw	high _do_I2C_DO_NACK_STOP
 10645  101A  345B               	retlw	low _do_I2C_DO_NACK_RESTART
 10646  101B  3416               	retlw	high _do_I2C_DO_NACK_RESTART
 10647  101C  3488               	retlw	low _do_I2C_RESET
 10648  101D  3416               	retlw	high _do_I2C_RESET
 10649  101E  34A0               	retlw	low _do_I2C_DO_ADDRESS_NACK
 10650  101F  340B               	retlw	high _do_I2C_DO_ADDRESS_NACK
 10651  1020                     __end_of_fsmStateTable:	
 10652                           
 10653                           	psect	stringtext2
 10654  1800                     __pstringtext2:	
 10655  1800                     _num_subfields:	
 10656  1800  3400               	retlw	0
 10657  1801  3404               	retlw	4
 10658  1802  3401               	retlw	1
 10659  1803  3402               	retlw	2
 10660  1804  3401               	retlw	1
 10661  1805                     __end_of_num_subfields:	
 10662                           
 10663                           	psect	nvBANK0
 10664  006B                     __pnvBANK0:	
 10665  006B                     _eusartTxBufferRemaining:	
 10666  006B                     	ds	1
 10667                           
 10668                           	psect	nvBANK1
 10669  00E0                     __pnvBANK1:	
 10670  00E0                     _TMR2_InterruptHandler:	
 10671  00E0                     	ds	2
 10672  00E2                     _TMR1_InterruptHandler:	
 10673  00E2                     	ds	2
 10674  00E4                     _timer1ReloadVal:	
 10675  00E4                     	ds	2
 10676  00E6                     _TMR0_InterruptHandler:	
 10677  00E6                     	ds	2
 10678  00E8                     _INT_InterruptHandler:	
 10679  00E8                     	ds	2
 10680  00EA                     _EUSART_FramingErrorHandler:	
 10681  00EA                     	ds	2
 10682  00EC                     _EUSART_RxDefaultInterruptHandler:	
 10683  00EC                     	ds	2
 10684  00EE                     _EUSART_TxDefaultInterruptHandler:	
 10685  00EE                     	ds	2
 10686                           
 10687                           	psect	nvBANK2
 10688  0150                     __pnvBANK2:	
 10689  0150                     _EUSART_ErrorHandler:	
 10690  0150                     	ds	2
 10691  0152                     _EUSART_OverrunErrorHandler:	
 10692  0152                     	ds	2
 10693  001E                     _T0CON0bits	set	30
 10694  001E                     _T0CON0	set	30
 10695  001C                     _TMR0L	set	28
 10696  001D                     _TMR0H	set	29
 10697  001F                     _T0CON1	set	31
 10698  0014                     _TRISD	set	20
 10699  0013                     _TRISC	set	19
 10700  0012                     _TRISB	set	18
 10701  0011                     _TRISA	set	17
 10702  0015                     _TRISE	set	21
 10703  0018                     _LATC	set	24
 10704  0017                     _LATB	set	23
 10705  0019                     _LATD	set	25
 10706  001A                     _LATE	set	26
 10707  0013                     _TRISCbits	set	19
 10708  0016                     _LATAbits	set	22
 10709  0016                     _LATA	set	22
 10710  000E                     _PORTCbits	set	14
 10711  000D                     _PORTBbits	set	13
 10712  000B                     _INTCONbits	set	11
 10713  0094                     _ADCON1bits	set	148
 10714  008E                     _ADPREVL	set	142
 10715  008F                     _ADPREVH	set	143
 10716  0097                     _ADSTATbits	set	151
 10717  0090                     _ADACCL	set	144
 10718  0091                     _ADACCH	set	145
 10719  0095                     _ADCON2bits	set	149
 10720  009C                     _ADPRE	set	156
 10721  0096                     _ADCON3bits	set	150
 10722  008C                     _ADRESL	set	140
 10723  008D                     _ADRESH	set	141
 10724  0093                     _ADCON0bits	set	147
 10725  009D                     _ADACQ	set	157
 10726  0093                     _ADCON0	set	147
 10727  0098                     _ADCLK	set	152
 10728  0099                     _ADACT	set	153
 10729  009A                     _ADREF	set	154
 10730  0097                     _ADSTAT	set	151
 10731  0096                     _ADCON3	set	150
 10732  0095                     _ADCON2	set	149
 10733  0094                     _ADCON1	set	148
 10734  009B                     _ADCAP	set	155
 10735  009E                     _ADPCH	set	158
 10736  0116                     _ADERRL	set	278
 10737  0117                     _ADERRH	set	279
 10738  0114                     _ADFLTRL	set	276
 10739  0115                     _ADFLTRH	set	277
 10740  010C                     _ADCNT	set	268
 10741  010D                     _ADRPT	set	269
 10742  0113                     _ADSTPTH	set	275
 10743  0112                     _ADSTPTL	set	274
 10744  0111                     _ADUTHH	set	273
 10745  0110                     _ADUTHL	set	272
 10746  010F                     _ADLTHH	set	271
 10747  010E                     _ADLTHL	set	270
 10748  0119                     _RC1REG	set	281
 10749  011D                     _RC1STAbits	set	285
 10750  011A                     _TX1REG	set	282
 10751  011E                     _TX1STAbits	set	286
 10752  011C                     _SP1BRGH	set	284
 10753  011B                     _SP1BRGL	set	283
 10754  011E                     _TX1STA	set	286
 10755  011D                     _RC1STA	set	285
 10756  011F                     _BAUD1CON	set	287
 10757  018E                     _SSP1MSK	set	398
 10758  018D                     _SSP1ADD	set	397
 10759  018F                     _SSP1STAT	set	399
 10760  0190                     _SSP1CON1bits	set	400
 10761  018C                     _SSP1BUF	set	396
 10762  0190                     _SSP1CON1	set	400
 10763  0191                     _SSP1CON2bits	set	401
 10764  018F                     _SSP1STATbits	set	399
 10765  0191                     _SSP1CON2	set	401
 10766  021F                     _CCPTMRS1bits	set	543
 10767  020F                     _T1GCONbits	set	527
 10768  020E                     _T1CONbits	set	526
 10769  020E                     _T1CON	set	526
 10770  020C                     _TMR1L	set	524
 10771  020D                     _TMR1H	set	525
 10772  0211                     _T1CLK	set	529
 10773  0210                     _T1GATE	set	528
 10774  020F                     _T1GCON	set	527
 10775  028D                     _PR2	set	653
 10776  028C                     _TMR2	set	652
 10777  028E                     _T2CONbits	set	654
 10778  0291                     _T2RSTbits	set	657
 10779  028F                     _T2HLTbits	set	655
 10780  028E                     _T2CON	set	654
 10781  028C                     _T2TMR	set	652
 10782  028D                     _T2PR	set	653
 10783  0291                     _T2RST	set	657
 10784  028F                     _T2HLT	set	655
 10785  0290                     _T2CLKCON	set	656
 10786  038C                     _PWM6DCL	set	908
 10787  038D                     _PWM6DCH	set	909
 10788  038E                     _PWM6CON	set	910
 10789  0710                     _PIR4bits	set	1808
 10790  070C                     _PIR0bits	set	1804
 10791  0719                     _PIE3bits	set	1817
 10792  070F                     _PIR3bits	set	1807
 10793  071A                     _PIE4bits	set	1818
 10794  0716                     _PIE0bits	set	1814
 10795  079B                     _PMD5	set	1947
 10796  079A                     _PMD4	set	1946
 10797  0799                     _PMD3	set	1945
 10798  0798                     _PMD2	set	1944
 10799  0797                     _PMD1	set	1943
 10800  0796                     _PMD0	set	1942
 10801  081F                     _NVMCON2	set	2079
 10802  081C                     _NVMDATL	set	2076
 10803  081D                     _NVMDATH	set	2077
 10804  081E                     _NVMCON1bits	set	2078
 10805  081B                     _NVMADRH	set	2075
 10806  081A                     _NVMADRL	set	2074
 10807  0892                     _OSCTUNE	set	2194
 10808  0893                     _OSCFRQ	set	2195
 10809  0891                     _OSCEN	set	2193
 10810  088F                     _OSCCON3	set	2191
 10811  088D                     _OSCCON1	set	2189
 10812  0EC6                     _SSP1DATPPS	set	3782
 10813  0EC5                     _SSP1CLKPPS	set	3781
 10814  0ECB                     _RXPPS	set	3787
 10815  0E90                     _INTPPS	set	3728
 10816  0F26                     _RC6PPS	set	3878
 10817  0F16                     _RA6PPS	set	3862
 10818  0F24                     _RC4PPS	set	3876
 10819  0F23                     _RC3PPS	set	3875
 10820  0F68                     _INLVLE	set	3944
 10821  0F5D                     _INLVLD	set	3933
 10822  0F52                     _INLVLC	set	3922
 10823  0F47                     _INLVLB	set	3911
 10824  0F3C                     _INLVLA	set	3900
 10825  0F67                     _SLRCONE	set	3943
 10826  0F5C                     _SLRCOND	set	3932
 10827  0F51                     _SLRCONC	set	3921
 10828  0F46                     _SLRCONB	set	3910
 10829  0F3B                     _SLRCONA	set	3899
 10830  0F5B                     _ODCOND	set	3931
 10831  0F50                     _ODCONC	set	3920
 10832  0F45                     _ODCONB	set	3909
 10833  0F3A                     _ODCONA	set	3898
 10834  0F66                     _ODCONE	set	3942
 10835  0F4F                     _WPUC	set	3919
 10836  0F39                     _WPUA	set	3897
 10837  0F44                     _WPUB	set	3908
 10838  0F65                     _WPUE	set	3941
 10839  0F5A                     _WPUD	set	3930
 10840  0F38                     _ANSELA	set	3896
 10841  0F64                     _ANSELE	set	3940
 10842  0F43                     _ANSELB	set	3907
 10843  0F4E                     _ANSELC	set	3918
 10844  0F59                     _ANSELD	set	3929
 10845  0F44                     _WPUBbits	set	3908
 10846  7A7C                     _WPUC4	set	31356
 10847  7A7B                     _WPUC3	set	31355
 10848                           
 10849                           	psect	stringtext3
 10850  1020                     __pstringtext3:	
 10851  1020                     STR_1:	
 10852  1020  3425               	retlw	37	;'%'
 10853  1021  3430               	retlw	48	;'0'
 10854  1022  3432               	retlw	50	;'2'
 10855  1023  3478               	retlw	120	;'x'
 10856  1024  3425               	retlw	37	;'%'
 10857  1025  3430               	retlw	48	;'0'
 10858  1026  3432               	retlw	50	;'2'
 10859  1027  3478               	retlw	120	;'x'
 10860  1028  3425               	retlw	37	;'%'
 10861  1029  3430               	retlw	48	;'0'
 10862  102A  3432               	retlw	50	;'2'
 10863  102B  3478               	retlw	120	;'x'
 10864  102C  3425               	retlw	37	;'%'
 10865  102D  3430               	retlw	48	;'0'
 10866  102E  3432               	retlw	50	;'2'
 10867  102F  3478               	retlw	120	;'x'
 10868  1030  340A               	retlw	10
 10869  1031  3400               	retlw	0
 10870                           
 10871                           	psect	stringtext4
 10872  0000                     __pstringtext4:	
 10873  1020                     
 10874                           ; #config settings
 10875  0000                     
 10876                           	psect	cinit
 10877  007B                     start_initialization:	
 10878  007B                     __initialization:	
 10879                           
 10880                           ; Initialize objects allocated to BANK0
 10881  007B  3026               	movlw	low __pidataBANK0
 10882  007C  0084               	movwf	4
 10883  007D  3097               	movlw	(high __pidataBANK0)| (0+128)
 10884  007E  0085               	movwf	5
 10885  007F  3062               	movlw	low __pdataBANK0
 10886  0080  0086               	movwf	6
 10887  0081  3000               	movlw	high __pdataBANK0
 10888  0082  0087               	movwf	7
 10889  0083  3009               	movlw	9
 10890  0084  3196  266C  3180   	fcall	init_ram
 10891                           
 10892                           ; Initialize objects allocated to BANK2
 10893  0087  30CE               	movlw	low __pidataBANK2
 10894  0088  0084               	movwf	4
 10895  0089  3097               	movlw	(high __pidataBANK2)| (0+128)
 10896  008A  0085               	movwf	5
 10897  008B  3040               	movlw	low __pdataBANK2
 10898  008C  0086               	movwf	6
 10899  008D  3001               	movlw	high __pdataBANK2
 10900  008E  0087               	movwf	7
 10901  008F  3010               	movlw	16
 10902  0090  3196  266C  3180   	fcall	init_ram
 10903                           
 10904                           ; Clear objects allocated to COMMON
 10905  0093  01FD               	clrf	__pbssCOMMON& (0+127)
 10906                           
 10907                           ; Clear objects allocated to BANK0
 10908  0094  304E               	movlw	low __pbssBANK0
 10909  0095  0084               	movwf	4
 10910  0096  3000               	movlw	high __pbssBANK0
 10911  0097  0085               	movwf	5
 10912  0098  3014               	movlw	20
 10913  0099  3196  2666  3180   	fcall	clear_ram0
 10914                           
 10915                           ; Clear objects allocated to BANK1
 10916  009C  30A0               	movlw	low __pbssBANK1
 10917  009D  0084               	movwf	4
 10918  009E  3000               	movlw	high __pbssBANK1
 10919  009F  0085               	movwf	5
 10920  00A0  3040               	movlw	64
 10921  00A1  3196  2666  3180   	fcall	clear_ram0
 10922                           
 10923                           ; Clear objects allocated to BANK2
 10924  00A4  3020               	movlw	low __pbssBANK2
 10925  00A5  0084               	movwf	4
 10926  00A6  3001               	movlw	high __pbssBANK2
 10927  00A7  0085               	movwf	5
 10928  00A8  3020               	movlw	32
 10929  00A9  3196  2666  3180   	fcall	clear_ram0
 10930  00AC                     end_of_initialization:	
 10931                           ;End of C runtime variable initialization code
 10932                           
 10933  00AC                     __end_of__initialization:	
 10934  00AC  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10935  00AD  0020               	movlb	0
 10936  00AE  3180  28B0         	ljmp	_main	;jump to C main() function
 10937                           
 10938                           	psect	bssCOMMON
 10939  007D                     __pbssCOMMON:	
 10940  007D                     _clkms:	
 10941  007D                     	ds	1
 10942                           
 10943                           	psect	bssBANK0
 10944  004E                     __pbssBANK0:	
 10945  004E                     _lum_bin:	
 10946  004E                     	ds	2
 10947  0050                     _eusartRxCount:	
 10948  0050                     	ds	1
 10949  0051                     _eusartRxTail:	
 10950  0051                     	ds	1
 10951  0052                     _eusartRxHead:	
 10952  0052                     	ds	1
 10953  0053                     _eusartTxTail:	
 10954  0053                     	ds	1
 10955  0054                     _eusartTxHead:	
 10956  0054                     	ds	1
 10957  0055                     _alaf:	
 10958  0055                     	ds	1
 10959  0056                     _temp:	
 10960  0056                     	ds	1
 10961  0057                     _alarm:	
 10962  0057                     	ds	1
 10963  0058                     _config_mode:	
 10964  0058                     	ds	1
 10965  0059                     _last1m:	
 10966  0059                     	ds	1
 10967  005A                     _last5s:	
 10968  005A                     	ds	1
 10969  005B                     _last_ms2:	
 10970  005B                     	ds	1
 10971  005C                     _last_ms:	
 10972  005C                     	ds	1
 10973  005D                     _seg:	
 10974  005D                     	ds	1
 10975  005E                     _clkm:	
 10976  005E                     	ds	1
 10977  005F                     _clkh:	
 10978  005F                     	ds	1
 10979  0060                     _nreg_pt:	
 10980  0060                     	ds	1
 10981  0061                     _nreg_init:	
 10982  0061                     	ds	1
 10983                           
 10984                           	psect	dataBANK0
 10985  0062                     __pdataBANK0:	
 10986  0062                     _mode_field_subfield:	
 10987  0062                     	ds	4
 10988  0066                     _lum_thresh:	
 10989  0066                     	ds	1
 10990  0067                     _temp_thresh:	
 10991  0067                     	ds	1
 10992  0068                     _tala:	
 10993  0068                     	ds	1
 10994  0069                     _pmon:	
 10995  0069                     	ds	1
 10996  006A                     _nreg:	
 10997  006A                     	ds	1
 10998                           
 10999                           	psect	bssBANK1
 11000  00A0                     __pbssBANK1:	
 11001  00A0                     _i2c_status:	
 11002  00A0                     	ds	29
 11003  00BD                     _eusartRxStatusBuffer:	
 11004  00BD                     	ds	8
 11005  00C5                     _threshold:	
 11006  00C5                     	ds	2
 11007  00C7                     _duty_cycle:	
 11008  00C7                     	ds	2
 11009  00C9                     _convertedValue:	
 11010  00C9                     	ds	2
 11011  00CB                     _min_units:	
 11012  00CB                     	ds	2
 11013  00CD                     _min_tens:	
 11014  00CD                     	ds	2
 11015  00CF                     _hours_units:	
 11016  00CF                     	ds	2
 11017  00D1                     _hours_tens:	
 11018  00D1                     	ds	2
 11019  00D3                     _value:	
 11020  00D3                     	ds	2
 11021  00D5                     _i2c1_driver_i2cISR:	
 11022  00D5                     	ds	2
 11023  00D7                     _i2c1_driver_busCollisionISR:	
 11024  00D7                     	ds	2
 11025  00D9                     _eusartRxLastError:	
 11026  00D9                     	ds	1
 11027  00DA                     _set_mode:	
 11028  00DA                     	ds	1
 11029  00DB                     _ring_byte:	
 11030  00DB                     	ds	5
 11031                           
 11032                           	psect	bssBANK2
 11033  0120                     __pbssBANK2:	
 11034  0120                     _eusartRxBuffer:	
 11035  0120                     	ds	8
 11036  0128                     _eusartTxBuffer:	
 11037  0128                     	ds	8
 11038  0130                     _str_rc:	
 11039  0130                     	ds	16
 11040                           
 11041                           	psect	dataBANK2
 11042  0140                     __pdataBANK2:	
 11043  0140                     _str_snd:	
 11044  0140                     	ds	16
 11045                           
 11046                           	psect	inittext
 11047  166C                     init_ram:	
 11048  166C  00FE               	movwf	btemp
 11049  166D                     initloop:	
 11050  166D  0012               	moviw fsr0++
 11051  166E  001E               	movwi fsr1++
 11052  166F  0BFE               	decfsz	btemp,f
 11053  1670  2E6D               	goto	initloop
 11054  1671  3400               	retlw	0
 11055                           
 11056                           	psect	clrtext
 11057  1666                     clear_ram0:	
 11058                           ;	Called with FSR0 containing the base address, and
 11059                           ;	WREG with the size to clear
 11060                           
 11061  1666  0064               	clrwdt	;clear the watchdog before getting into this loop
 11062  1667                     clrloop0:	
 11063  1667  0180               	clrf	0	;clear RAM location pointed to by FSR
 11064  1668  3101               	addfsr 0,1
 11065  1669  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
 11066  166A  2E67               	goto	clrloop0	;have we reached the end yet?
 11067  166B  3400               	retlw	0	;all done for this memory range, return
 11068                           
 11069                           	psect	cstackBANK2
 11070  0154                     __pcstackBANK2:	
 11071  0154                     	ds	2
 11072  0156                     main@t5s:	
 11073                           
 11074                           ; 1 bytes @ 0x2
 11075  0156                     	ds	1
 11076  0157                     main@t1m:	
 11077                           
 11078                           ; 1 bytes @ 0x3
 11079  0157                     	ds	1
 11080                           
 11081                           	psect	cstackCOMMON
 11082  0070                     __pcstackCOMMON:	
 11083  0070                     ?_i2c1_driver_isNACK:	
 11084  0070                     ?_checkDebounceSW1:	
 11085                           ; 1 bit 
 11086                           
 11087  0070                     ?_TMR0_StopTimer:	
 11088                           ; 1 bytes @ 0x0
 11089                           
 11090  0070                     ??_TMR0_StopTimer:	
 11091                           ; 1 bytes @ 0x0
 11092                           
 11093  0070                     ?_SYSTEM_Initialize:	
 11094                           ; 1 bytes @ 0x0
 11095                           
 11096  0070                     ?_handler_clock_hms:	
 11097                           ; 1 bytes @ 0x0
 11098                           
 11099  0070                     ??_handler_clock_hms:	
 11100                           ; 1 bytes @ 0x0
 11101                           
 11102  0070                     ?_handler_clock_ms:	
 11103                           ; 1 bytes @ 0x0
 11104                           
 11105  0070                     ??_handler_clock_ms:	
 11106                           ; 1 bytes @ 0x0
 11107                           
 11108  0070                     ?_recoverData:	
 11109                           ; 1 bytes @ 0x0
 11110                           
 11111  0070                     ?_EUSART_is_rx_ready:	
 11112                           ; 1 bytes @ 0x0
 11113                           
 11114  0070                     ?_cksum_w:	
 11115                           ; 1 bytes @ 0x0
 11116                           
 11117  0070                     ?_check_thresholds:	
 11118                           ; 1 bytes @ 0x0
 11119                           
 11120  0070                     ?_config_routine:	
 11121                           ; 1 bytes @ 0x0
 11122                           
 11123  0070                     ?_save_recovery_params:	
 11124                           ; 1 bytes @ 0x0
 11125                           
 11126  0070                     ?_TMR0_StartTimer:	
 11127                           ; 1 bytes @ 0x0
 11128                           
 11129  0070                     ?_all_LED:	
 11130                           ; 1 bytes @ 0x0
 11131                           
 11132  0070                     ?_mod1_LED:	
 11133                           ; 1 bytes @ 0x0
 11134                           
 11135  0070                     ?_mod2_LED:	
 11136                           ; 1 bytes @ 0x0
 11137                           
 11138  0070                     ?_mod3_LED:	
 11139                           ; 1 bytes @ 0x0
 11140                           
 11141  0070                     ?_mod4_LED:	
 11142                           ; 1 bytes @ 0x0
 11143                           
 11144  0070                     ?_checkDebounceSW2:	
 11145                           ; 1 bytes @ 0x0
 11146                           
 11147  0070                     ?_mode_select_LED:	
 11148                           ; 1 bytes @ 0x0
 11149                           
 11150  0070                     ?_selectSubfield:	
 11151                           ; 1 bytes @ 0x0
 11152                           
 11153  0070                     ?_mode_LED:	
 11154                           ; 1 bytes @ 0x0
 11155                           
 11156  0070                     ?_getSubfieldInfo:	
 11157                           ; 1 bytes @ 0x0
 11158                           
 11159  0070                     ?_limitHoursUnits:	
 11160                           ; 1 bytes @ 0x0
 11161                           
 11162  0070                     ?_limitTempThreshUnits:	
 11163                           ; 1 bytes @ 0x0
 11164                           
 11165  0070                     ?_representLed:	
 11166                           ; 1 bytes @ 0x0
 11167                           
 11168  0070                     ?_ADCC_StartConversion:	
 11169                           ; 1 bytes @ 0x0
 11170                           
 11171  0070                     ?_ADCC_IsConversionDone:	
 11172                           ; 1 bytes @ 0x0
 11173                           
 11174  0070                     ?_cksum:	
 11175                           ; 1 bytes @ 0x0
 11176                           
 11177  0070                     ?_reset_recv:	
 11178                           ; 1 bytes @ 0x0
 11179                           
 11180  0070                     ?_read_UART:	
 11181                           ; 1 bytes @ 0x0
 11182                           
 11183  0070                     ?_dump_UART_FIFO:	
 11184                           ; 1 bytes @ 0x0
 11185                           
 11186  0070                     ?_EUSART_Read:	
 11187                           ; 1 bytes @ 0x0
 11188                           
 11189  0070                     ?_EUSART_is_tx_ready:	
 11190                           ; 1 bytes @ 0x0
 11191                           
 11192  0070                     ?_EUSART_Write:	
 11193                           ; 1 bytes @ 0x0
 11194                           
 11195  0070                     ?_write_UART:	
 11196                           ; 1 bytes @ 0x0
 11197                           
 11198  0070                     ?_EUSART_is_tx_done:	
 11199                           ; 1 bytes @ 0x0
 11200                           
 11201  0070                     ?_EUSART_Receive_ISR:	
 11202                           ; 1 bytes @ 0x0
 11203                           
 11204  0070                     ?_EUSART_Transmit_ISR:	
 11205                           ; 1 bytes @ 0x0
 11206                           
 11207  0070                     ??_EUSART_Transmit_ISR:	
 11208                           ; 1 bytes @ 0x0
 11209                           
 11210  0070                     ?_EUSART_DefaultFramingErrorHandler:	
 11211                           ; 1 bytes @ 0x0
 11212                           
 11213  0070                     ??_EUSART_DefaultFramingErrorHandler:	
 11214                           ; 1 bytes @ 0x0
 11215                           
 11216  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
 11217                           ; 1 bytes @ 0x0
 11218                           
 11219  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
 11220                           ; 1 bytes @ 0x0
 11221                           
 11222  0070                     ?_EUSART_DefaultErrorHandler:	
 11223                           ; 1 bytes @ 0x0
 11224                           
 11225  0070                     ?_EUSART_RxDataHandler:	
 11226                           ; 1 bytes @ 0x0
 11227                           
 11228  0070                     ??_EUSART_RxDataHandler:	
 11229                           ; 1 bytes @ 0x0
 11230                           
 11231  0070                     ?_INT_CallBack:	
 11232                           ; 1 bytes @ 0x0
 11233                           
 11234  0070                     ?_TMR0_ISR:	
 11235                           ; 1 bytes @ 0x0
 11236                           
 11237  0070                     ?_TMR1_ISR:	
 11238                           ; 1 bytes @ 0x0
 11239                           
 11240  0070                     ?_TMR2_ISR:	
 11241                           ; 1 bytes @ 0x0
 11242                           
 11243  0070                     ?_PMD_Initialize:	
 11244                           ; 1 bytes @ 0x0
 11245                           
 11246  0070                     ?_PIN_MANAGER_Initialize:	
 11247                           ; 1 bytes @ 0x0
 11248                           
 11249  0070                     ?_OSCILLATOR_Initialize:	
 11250                           ; 1 bytes @ 0x0
 11251                           
 11252  0070                     ?_PWM6_Initialize:	
 11253                           ; 1 bytes @ 0x0
 11254                           
 11255  0070                     ?_ADCC_Initialize:	
 11256                           ; 1 bytes @ 0x0
 11257                           
 11258  0070                     ?_TMR2_Initialize:	
 11259                           ; 1 bytes @ 0x0
 11260                           
 11261  0070                     ?_TMR1_Initialize:	
 11262                           ; 1 bytes @ 0x0
 11263                           
 11264  0070                     ?_TMR0_Initialize:	
 11265                           ; 1 bytes @ 0x0
 11266                           
 11267  0070                     ?_TMR0_DefaultInterruptHandler:	
 11268                           ; 1 bytes @ 0x0
 11269                           
 11270  0070                     ??_TMR0_DefaultInterruptHandler:	
 11271                           ; 1 bytes @ 0x0
 11272                           
 11273  0070                     ?_TMR1_DefaultInterruptHandler:	
 11274                           ; 1 bytes @ 0x0
 11275                           
 11276  0070                     ??_TMR1_DefaultInterruptHandler:	
 11277                           ; 1 bytes @ 0x0
 11278                           
 11279  0070                     ?_setCallBack:	
 11280                           ; 1 bytes @ 0x0
 11281                           
 11282  0070                     ?_i2c_busCollisionISR:	
 11283                           ; 1 bytes @ 0x0
 11284                           
 11285  0070                     ??_i2c_busCollisionISR:	
 11286                           ; 1 bytes @ 0x0
 11287                           
 11288  0070                     ?_i2c_ISR:	
 11289                           ; 1 bytes @ 0x0
 11290                           
 11291  0070                     ?_TMR2_DefaultInterruptHandler:	
 11292                           ; 1 bytes @ 0x0
 11293                           
 11294  0070                     ??_TMR2_DefaultInterruptHandler:	
 11295                           ; 1 bytes @ 0x0
 11296                           
 11297  0070                     ?_sw1_EXT:	
 11298                           ; 1 bytes @ 0x0
 11299                           
 11300  0070                     ?_ISR_3s:	
 11301                           ; 1 bytes @ 0x0
 11302                           
 11303  0070                     ?_main:	
 11304                           ; 1 bytes @ 0x0
 11305                           
 11306  0070                     ?_EUSART_Initialize:	
 11307                           ; 1 bytes @ 0x0
 11308                           
 11309  0070                     ?_INT_ISR:	
 11310                           ; 1 bytes @ 0x0
 11311                           
 11312  0070                     ?_INT_DefaultInterruptHandler:	
 11313                           ; 1 bytes @ 0x0
 11314                           
 11315  0070                     ??_INT_DefaultInterruptHandler:	
 11316                           ; 1 bytes @ 0x0
 11317                           
 11318  0070                     ?_EXT_INT_Initialize:	
 11319                           ; 1 bytes @ 0x0
 11320                           
 11321  0070                     ?_INTERRUPT_InterruptManager:	
 11322                           ; 1 bytes @ 0x0
 11323                           
 11324  0070                     ?_mssp1_clearIRQ:	
 11325                           ; 1 bytes @ 0x0
 11326                           
 11327  0070                     ??_mssp1_clearIRQ:	
 11328                           ; 1 bytes @ 0x0
 11329                           
 11330  0070                     ?_mssp1_setIRQ:	
 11331                           ; 1 bytes @ 0x0
 11332                           
 11333  0070                     ??_mssp1_setIRQ:	
 11334                           ; 1 bytes @ 0x0
 11335                           
 11336  0070                     ?_i2c1_driver_resetBus:	
 11337                           ; 1 bytes @ 0x0
 11338                           
 11339  0070                     ??_i2c1_driver_resetBus:	
 11340                           ; 1 bytes @ 0x0
 11341                           
 11342  0070                     ?_i2c1_driver_restart:	
 11343                           ; 1 bytes @ 0x0
 11344                           
 11345  0070                     ??_i2c1_driver_restart:	
 11346                           ; 1 bytes @ 0x0
 11347                           
 11348  0070                     ?_i2c1_driver_stop:	
 11349                           ; 1 bytes @ 0x0
 11350                           
 11351  0070                     ??_i2c1_driver_stop:	
 11352                           ; 1 bytes @ 0x0
 11353                           
 11354  0070                     ??_i2c1_driver_isNACK:	
 11355                           ; 1 bytes @ 0x0
 11356                           
 11357  0070                     ?_i2c1_driver_startRX:	
 11358                           ; 1 bytes @ 0x0
 11359                           
 11360  0070                     ??_i2c1_driver_startRX:	
 11361                           ; 1 bytes @ 0x0
 11362                           
 11363  0070                     ?_i2c1_driver_getRXData:	
 11364                           ; 1 bytes @ 0x0
 11365                           
 11366  0070                     ??_i2c1_driver_getRXData:	
 11367                           ; 1 bytes @ 0x0
 11368                           
 11369  0070                     ?_i2c1_driver_TXData:	
 11370                           ; 1 bytes @ 0x0
 11371                           
 11372  0070                     ??_i2c1_driver_TXData:	
 11373                           ; 1 bytes @ 0x0
 11374                           
 11375  0070                     ?_i2c1_driver_sendACK:	
 11376                           ; 1 bytes @ 0x0
 11377                           
 11378  0070                     ??_i2c1_driver_sendACK:	
 11379                           ; 1 bytes @ 0x0
 11380                           
 11381  0070                     ?_i2c1_driver_sendNACK:	
 11382                           ; 1 bytes @ 0x0
 11383                           
 11384  0070                     ??_i2c1_driver_sendNACK:	
 11385                           ; 1 bytes @ 0x0
 11386                           
 11387  0070                     ?_i2c1_driver_clearBusCollision:	
 11388                           ; 1 bytes @ 0x0
 11389                           
 11390  0070                     ??_i2c1_driver_clearBusCollision:	
 11391                           ; 1 bytes @ 0x0
 11392                           
 11393  0070                     ?_TMR1_WriteTimer:	
 11394                           ; 1 bytes @ 0x0
 11395                           
 11396  0070                     ?_i2c_setBuffer:	
 11397                           ; 1 bytes @ 0x0
 11398                           
 11399  0070                     ?_do_I2C_RESET:	
 11400                           ; 1 bytes @ 0x0
 11401                           
 11402  0070                     ??_do_I2C_RESET:	
 11403                           ; 1 bytes @ 0x0
 11404                           
 11405  0070                     ?_do_I2C_IDLE:	
 11406                           ; 1 bytes @ 0x0
 11407                           
 11408  0070                     ??_do_I2C_IDLE:	
 11409                           ; 1 bytes @ 0x0
 11410                           
 11411  0070                     ?_do_I2C_SEND_RESTART_READ:	
 11412                           ; 1 bytes @ 0x0
 11413                           
 11414  0070                     ??_do_I2C_SEND_RESTART_READ:	
 11415                           ; 1 bytes @ 0x0
 11416                           
 11417  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
 11418                           ; 1 bytes @ 0x0
 11419                           
 11420  0070                     ??_do_I2C_SEND_RESTART_WRITE:	
 11421                           ; 1 bytes @ 0x0
 11422                           
 11423  0070                     ?_do_I2C_SEND_RESTART:	
 11424                           ; 1 bytes @ 0x0
 11425                           
 11426  0070                     ??_do_I2C_SEND_RESTART:	
 11427                           ; 1 bytes @ 0x0
 11428                           
 11429  0070                     ?_do_I2C_SEND_STOP:	
 11430                           ; 1 bytes @ 0x0
 11431                           
 11432  0070                     ??_do_I2C_SEND_STOP:	
 11433                           ; 1 bytes @ 0x0
 11434                           
 11435  0070                     ?_do_I2C_SEND_ADR_READ:	
 11436                           ; 1 bytes @ 0x0
 11437                           
 11438  0070                     ?_do_I2C_SEND_ADR_WRITE:	
 11439                           ; 1 bytes @ 0x0
 11440                           
 11441  0070                     ?_do_I2C_RCEN:	
 11442                           ; 1 bytes @ 0x0
 11443                           
 11444  0070                     ??_do_I2C_RCEN:	
 11445                           ; 1 bytes @ 0x0
 11446                           
 11447  0070                     ?_do_I2C_DO_ACK:	
 11448                           ; 1 bytes @ 0x0
 11449                           
 11450  0070                     ??_do_I2C_DO_ACK:	
 11451                           ; 1 bytes @ 0x0
 11452                           
 11453  0070                     ?_do_I2C_DO_NACK_STOP:	
 11454                           ; 1 bytes @ 0x0
 11455                           
 11456  0070                     ??_do_I2C_DO_NACK_STOP:	
 11457                           ; 1 bytes @ 0x0
 11458                           
 11459  0070                     ?_do_I2C_DO_NACK_RESTART:	
 11460                           ; 1 bytes @ 0x0
 11461                           
 11462  0070                     ??_do_I2C_DO_NACK_RESTART:	
 11463                           ; 1 bytes @ 0x0
 11464                           
 11465  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
 11466                           ; 1 bytes @ 0x0
 11467                           
 11468  0070                     ?_do_I2C_TX:	
 11469                           ; 1 bytes @ 0x0
 11470                           
 11471  0070                     ?_do_I2C_RX:	
 11472                           ; 1 bytes @ 0x0
 11473                           
 11474  0070                     ?_do_I2C_TX_EMPTY:	
 11475                           ; 1 bytes @ 0x0
 11476                           
 11477  0070                     ?i1_checkDebounceSW1:	
 11478                           ; 1 bytes @ 0x0
 11479                           
 11480  0070                     ??i1_checkDebounceSW1:	
 11481                           ; 1 bytes @ 0x0
 11482                           
 11483  0070                     ?i1_PWM6_LoadDutyValue:	
 11484                           ; 1 bytes @ 0x0
 11485                           
 11486  0070                     i2c1_driver_TXData@d:	
 11487                           ; 1 bytes @ 0x0
 11488                           
 11489  0070                     TMR1_WriteTimer@timerVal:	
 11490                           ; 1 bytes @ 0x0
 11491                           
 11492  0070                     i2c_setBuffer@bufferSize:	
 11493                           ; 2 bytes @ 0x0
 11494                           
 11495  0070                     setCallBack@cb:	
 11496                           ; 2 bytes @ 0x0
 11497                           
 11498  0070                     i1PWM6_LoadDutyValue@dutyValue:	
 11499                           ; 2 bytes @ 0x0
 11500                           
 11501                           
 11502                           ; 2 bytes @ 0x0
 11503  0070                     	ds	1
 11504  0071                     ??_EUSART_Receive_ISR:	
 11505  0071                     ??_EUSART_DefaultErrorHandler:	
 11506                           ; 1 bytes @ 0x1
 11507                           
 11508  0071                     ??_TMR2_ISR:	
 11509                           ; 1 bytes @ 0x1
 11510                           
 11511  0071                     ??_do_I2C_SEND_ADR_READ:	
 11512                           ; 1 bytes @ 0x1
 11513                           
 11514  0071                     ??_do_I2C_SEND_ADR_WRITE:	
 11515                           ; 1 bytes @ 0x1
 11516                           
 11517                           
 11518                           ; 1 bytes @ 0x1
 11519  0071                     	ds	1
 11520  0072                     ??_TMR1_ISR:	
 11521  0072                     ??_TMR1_WriteTimer:	
 11522                           ; 1 bytes @ 0x2
 11523                           
 11524  0072                     ??_i2c_setBuffer:	
 11525                           ; 1 bytes @ 0x2
 11526                           
 11527  0072                     ??i1_PWM6_LoadDutyValue:	
 11528                           ; 1 bytes @ 0x2
 11529                           
 11530  0072                     setCallBack@p:	
 11531                           ; 1 bytes @ 0x2
 11532                           
 11533                           
 11534                           ; 1 bytes @ 0x2
 11535  0072                     	ds	1
 11536  0073                     ??_setCallBack:	
 11537  0073                     i2c_setBuffer@buffer:	
 11538                           ; 1 bytes @ 0x3
 11539                           
 11540                           
 11541                           ; 1 bytes @ 0x3
 11542  0073                     	ds	1
 11543  0074                     ??_ISR_3s:	
 11544  0074                     setCallBack@idx:	
 11545                           ; 1 bytes @ 0x4
 11546                           
 11547                           
 11548                           ; 1 bytes @ 0x4
 11549  0074                     	ds	1
 11550  0075                     ??_TMR0_ISR:	
 11551  0075                     ?_i2c_setDataCompleteCallback:	
 11552                           ; 1 bytes @ 0x5
 11553                           
 11554  0075                     i2c_setDataCompleteCallback@cb:	
 11555                           ; 1 bytes @ 0x5
 11556                           
 11557                           
 11558                           ; 2 bytes @ 0x5
 11559  0075                     	ds	2
 11560  0077                     ??_sw1_EXT:	
 11561  0077                     i2c_setDataCompleteCallback@p:	
 11562                           ; 1 bytes @ 0x7
 11563                           
 11564                           
 11565                           ; 1 bytes @ 0x7
 11566  0077                     	ds	1
 11567  0078                     ??_INT_CallBack:	
 11568  0078                     ??_INT_ISR:	
 11569                           ; 1 bytes @ 0x8
 11570                           
 11571  0078                     ??_i2c_setDataCompleteCallback:	
 11572                           ; 1 bytes @ 0x8
 11573                           
 11574                           
 11575                           ; 1 bytes @ 0x8
 11576  0078                     	ds	1
 11577  0079                     ?_returnStop:	
 11578  0079                     ?_returnReset:	
 11579                           ; 1 bytes @ 0x9
 11580                           
 11581  0079                     ?_i2c_restartWrite:	
 11582                           ; 1 bytes @ 0x9
 11583                           
 11584  0079                     ?_wr1RegCompleteHandler:	
 11585                           ; 1 bytes @ 0x9
 11586                           
 11587  0079                     ?_rd1RegCompleteHandler:	
 11588                           ; 1 bytes @ 0x9
 11589                           
 11590  0079                     ?_rd2RegCompleteHandler:	
 11591                           ; 1 bytes @ 0x9
 11592                           
 11593  0079                     ?_wr2RegCompleteHandler:	
 11594                           ; 1 bytes @ 0x9
 11595                           
 11596  0079                     ?_rdBlkRegCompleteHandler:	
 11597                           ; 1 bytes @ 0x9
 11598                           
 11599  0079                     i2c_restartWrite@p:	
 11600                           ; 1 bytes @ 0x9
 11601                           
 11602  0079                     returnStop@p:	
 11603                           ; 1 bytes @ 0x9
 11604                           
 11605  0079                     returnReset@p:	
 11606                           ; 1 bytes @ 0x9
 11607                           
 11608  0079                     wr1RegCompleteHandler@p:	
 11609                           ; 1 bytes @ 0x9
 11610                           
 11611  0079                     rd1RegCompleteHandler@p:	
 11612                           ; 1 bytes @ 0x9
 11613                           
 11614  0079                     rd2RegCompleteHandler@p:	
 11615                           ; 1 bytes @ 0x9
 11616                           
 11617  0079                     wr2RegCompleteHandler@p:	
 11618                           ; 1 bytes @ 0x9
 11619                           
 11620  0079                     rdBlkRegCompleteHandler@p:	
 11621                           ; 1 bytes @ 0x9
 11622                           
 11623                           
 11624                           ; 1 bytes @ 0x9
 11625  0079                     	ds	1
 11626  007A                     ??_returnStop:	
 11627  007A                     ??_returnReset:	
 11628                           ; 1 bytes @ 0xA
 11629                           
 11630  007A                     ??_i2c_restartWrite:	
 11631                           ; 1 bytes @ 0xA
 11632                           
 11633  007A                     ??_do_I2C_DO_ADDRESS_NACK:	
 11634                           ; 1 bytes @ 0xA
 11635                           
 11636  007A                     ??_do_I2C_TX:	
 11637                           ; 1 bytes @ 0xA
 11638                           
 11639  007A                     ??_do_I2C_RX:	
 11640                           ; 1 bytes @ 0xA
 11641                           
 11642  007A                     ??_do_I2C_TX_EMPTY:	
 11643                           ; 1 bytes @ 0xA
 11644                           
 11645  007A                     ??_wr1RegCompleteHandler:	
 11646                           ; 1 bytes @ 0xA
 11647                           
 11648  007A                     ??_rd1RegCompleteHandler:	
 11649                           ; 1 bytes @ 0xA
 11650                           
 11651  007A                     ??_rd2RegCompleteHandler:	
 11652                           ; 1 bytes @ 0xA
 11653                           
 11654  007A                     ??_wr2RegCompleteHandler:	
 11655                           ; 1 bytes @ 0xA
 11656                           
 11657  007A                     ??_rdBlkRegCompleteHandler:	
 11658                           ; 1 bytes @ 0xA
 11659                           
 11660                           
 11661                           ; 1 bytes @ 0xA
 11662  007A                     	ds	3
 11663  007D                     ??_INTERRUPT_InterruptManager:	
 11664                           
 11665                           	psect	cstackBANK0
 11666  0020                     __pcstackBANK0:	
 11667                           ; 1 bytes @ 0xD
 11668                           
 11669  0020                     ??_i2c_ISR:	
 11670                           
 11671                           ; 1 bytes @ 0x0
 11672  0020                     	ds	3
 11673  0023                     ??_checkDebounceSW1:	
 11674  0023                     ?_TMR0_SetInterruptHandler:	
 11675                           ; 1 bytes @ 0x3
 11676                           
 11677  0023                     ?_TMR1_SetInterruptHandler:	
 11678                           ; 1 bytes @ 0x3
 11679                           
 11680  0023                     ?_INT_SetInterruptHandler:	
 11681                           ; 1 bytes @ 0x3
 11682                           
 11683  0023                     ?_TMR2_SetInterruptHandler:	
 11684                           ; 1 bytes @ 0x3
 11685                           
 11686  0023                     ??_EUSART_is_rx_ready:	
 11687                           ; 1 bytes @ 0x3
 11688                           
 11689  0023                     ?_LED_bin:	
 11690                           ; 1 bytes @ 0x3
 11691                           
 11692  0023                     ?_ring_buffer:	
 11693                           ; 1 bytes @ 0x3
 11694                           
 11695  0023                     ??_TMR0_StartTimer:	
 11696                           ; 1 bytes @ 0x3
 11697                           
 11698  0023                     ??_checkDebounceSW2:	
 11699                           ; 1 bytes @ 0x3
 11700                           
 11701  0023                     ??_ADCC_StartConversion:	
 11702                           ; 1 bytes @ 0x3
 11703                           
 11704  0023                     ??_ADCC_IsConversionDone:	
 11705                           ; 1 bytes @ 0x3
 11706                           
 11707  0023                     ?_DATAEE_ReadByte:	
 11708                           ; 1 bytes @ 0x3
 11709                           
 11710  0023                     ?_memset:	
 11711                           ; 1 bytes @ 0x3
 11712                           
 11713  0023                     ??_EUSART_Read:	
 11714                           ; 1 bytes @ 0x3
 11715                           
 11716  0023                     ??_EUSART_is_tx_ready:	
 11717                           ; 1 bytes @ 0x3
 11718                           
 11719  0023                     ??_EUSART_Write:	
 11720                           ; 1 bytes @ 0x3
 11721                           
 11722  0023                     ??_EUSART_is_tx_done:	
 11723                           ; 1 bytes @ 0x3
 11724                           
 11725  0023                     ?_EUSART_SetRxInterruptHandler:	
 11726                           ; 1 bytes @ 0x3
 11727                           
 11728  0023                     ?_EUSART_SetTxInterruptHandler:	
 11729                           ; 1 bytes @ 0x3
 11730                           
 11731  0023                     ?_EUSART_SetFramingErrorHandler:	
 11732                           ; 1 bytes @ 0x3
 11733                           
 11734  0023                     ?_EUSART_SetOverrunErrorHandler:	
 11735                           ; 1 bytes @ 0x3
 11736                           
 11737  0023                     ?_EUSART_SetErrorHandler:	
 11738                           ; 1 bytes @ 0x3
 11739                           
 11740  0023                     ??_PMD_Initialize:	
 11741                           ; 1 bytes @ 0x3
 11742                           
 11743  0023                     ??_PIN_MANAGER_Initialize:	
 11744                           ; 1 bytes @ 0x3
 11745                           
 11746  0023                     ??_OSCILLATOR_Initialize:	
 11747                           ; 1 bytes @ 0x3
 11748                           
 11749  0023                     ??_PWM6_Initialize:	
 11750                           ; 1 bytes @ 0x3
 11751                           
 11752  0023                     ??_ADCC_Initialize:	
 11753                           ; 1 bytes @ 0x3
 11754                           
 11755  0023                     ?___bmul:	
 11756                           ; 1 bytes @ 0x3
 11757                           
 11758  0023                     ?_ADCC_GetConversionResult:	
 11759                           ; 1 bytes @ 0x3
 11760                           
 11761  0023                     ?___wmul:	
 11762                           ; 2 bytes @ 0x3
 11763                           
 11764  0023                     ?___awdiv:	
 11765                           ; 2 bytes @ 0x3
 11766                           
 11767  0023                     ?___awmod:	
 11768                           ; 2 bytes @ 0x3
 11769                           
 11770  0023                     ring_buffer@clock_h:	
 11771                           ; 2 bytes @ 0x3
 11772                           
 11773  0023                     ADCC_StartConversion@channel:	
 11774                           ; 1 bytes @ 0x3
 11775                           
 11776  0023                     ___bmul@multiplicand:	
 11777                           ; 1 bytes @ 0x3
 11778                           
 11779  0023                     LED_bin@value:	
 11780                           ; 1 bytes @ 0x3
 11781                           
 11782  0023                     EUSART_SetFramingErrorHandler@interruptHandler:	
 11783                           ; 2 bytes @ 0x3
 11784                           
 11785  0023                     EUSART_SetOverrunErrorHandler@interruptHandler:	
 11786                           ; 2 bytes @ 0x3
 11787                           
 11788  0023                     EUSART_SetErrorHandler@interruptHandler:	
 11789                           ; 2 bytes @ 0x3
 11790                           
 11791  0023                     EUSART_SetTxInterruptHandler@interruptHandler:	
 11792                           ; 2 bytes @ 0x3
 11793                           
 11794  0023                     EUSART_SetRxInterruptHandler@interruptHandler:	
 11795                           ; 2 bytes @ 0x3
 11796                           
 11797  0023                     INT_SetInterruptHandler@InterruptHandler:	
 11798                           ; 2 bytes @ 0x3
 11799                           
 11800  0023                     TMR0_SetInterruptHandler@InterruptHandler:	
 11801                           ; 2 bytes @ 0x3
 11802                           
 11803  0023                     TMR1_SetInterruptHandler@InterruptHandler:	
 11804                           ; 2 bytes @ 0x3
 11805                           
 11806  0023                     DATAEE_ReadByte@bAdd:	
 11807                           ; 2 bytes @ 0x3
 11808                           
 11809  0023                     TMR2_SetInterruptHandler@InterruptHandler:	
 11810                           ; 2 bytes @ 0x3
 11811                           
 11812  0023                     ___wmul@multiplier:	
 11813                           ; 2 bytes @ 0x3
 11814                           
 11815  0023                     ___awdiv@divisor:	
 11816                           ; 2 bytes @ 0x3
 11817                           
 11818  0023                     ___awmod@divisor:	
 11819                           ; 2 bytes @ 0x3
 11820                           
 11821  0023                     memset@c:	
 11822                           ; 2 bytes @ 0x3
 11823                           
 11824                           
 11825                           ; 2 bytes @ 0x3
 11826  0023                     	ds	1
 11827  0024                     ??___bmul:	
 11828  0024                     ring_buffer@clock_m:	
 11829                           ; 1 bytes @ 0x4
 11830                           
 11831  0024                     EUSART_Read@readValue:	
 11832                           ; 1 bytes @ 0x4
 11833                           
 11834  0024                     EUSART_Write@txData:	
 11835                           ; 1 bytes @ 0x4
 11836                           
 11837                           
 11838                           ; 1 bytes @ 0x4
 11839  0024                     	ds	1
 11840  0025                     ??_TMR0_SetInterruptHandler:	
 11841  0025                     ??_TMR1_SetInterruptHandler:	
 11842                           ; 1 bytes @ 0x5
 11843                           
 11844  0025                     ??_INT_SetInterruptHandler:	
 11845                           ; 1 bytes @ 0x5
 11846                           
 11847  0025                     ??_TMR2_SetInterruptHandler:	
 11848                           ; 1 bytes @ 0x5
 11849                           
 11850  0025                     ??_LED_bin:	
 11851                           ; 1 bytes @ 0x5
 11852                           
 11853  0025                     ??_ADCC_GetConversionResult:	
 11854                           ; 1 bytes @ 0x5
 11855                           
 11856  0025                     ??_DATAEE_ReadByte:	
 11857                           ; 1 bytes @ 0x5
 11858                           
 11859  0025                     ??_cksum:	
 11860                           ; 1 bytes @ 0x5
 11861                           
 11862  0025                     ??_read_UART:	
 11863                           ; 1 bytes @ 0x5
 11864                           
 11865  0025                     ??_dump_UART_FIFO:	
 11866                           ; 1 bytes @ 0x5
 11867                           
 11868  0025                     ??_write_UART:	
 11869                           ; 1 bytes @ 0x5
 11870                           
 11871  0025                     ??_EUSART_SetRxInterruptHandler:	
 11872                           ; 1 bytes @ 0x5
 11873                           
 11874  0025                     ??_EUSART_SetTxInterruptHandler:	
 11875                           ; 1 bytes @ 0x5
 11876                           
 11877  0025                     ??_EUSART_SetFramingErrorHandler:	
 11878                           ; 1 bytes @ 0x5
 11879                           
 11880  0025                     ??_EUSART_SetOverrunErrorHandler:	
 11881                           ; 1 bytes @ 0x5
 11882                           
 11883  0025                     ??_EUSART_SetErrorHandler:	
 11884                           ; 1 bytes @ 0x5
 11885                           
 11886  0025                     ??_TMR2_Initialize:	
 11887                           ; 1 bytes @ 0x5
 11888                           
 11889  0025                     ??_TMR1_Initialize:	
 11890                           ; 1 bytes @ 0x5
 11891                           
 11892  0025                     ??_TMR0_Initialize:	
 11893                           ; 1 bytes @ 0x5
 11894                           
 11895  0025                     ??_EUSART_Initialize:	
 11896                           ; 1 bytes @ 0x5
 11897                           
 11898  0025                     ??_EXT_INT_Initialize:	
 11899                           ; 1 bytes @ 0x5
 11900                           
 11901  0025                     ?_ADC_read:	
 11902                           ; 1 bytes @ 0x5
 11903                           
 11904  0025                     ring_buffer@clock_s:	
 11905                           ; 2 bytes @ 0x5
 11906                           
 11907  0025                     dump_UART_FIFO@dump:	
 11908                           ; 1 bytes @ 0x5
 11909                           
 11910  0025                     write_UART@rxData:	
 11911                           ; 1 bytes @ 0x5
 11912                           
 11913  0025                     ___bmul@product:	
 11914                           ; 1 bytes @ 0x5
 11915                           
 11916  0025                     ___wmul@multiplicand:	
 11917                           ; 1 bytes @ 0x5
 11918                           
 11919  0025                     ___awdiv@dividend:	
 11920                           ; 2 bytes @ 0x5
 11921                           
 11922  0025                     ___awmod@dividend:	
 11923                           ; 2 bytes @ 0x5
 11924                           
 11925  0025                     memset@n:	
 11926                           ; 2 bytes @ 0x5
 11927                           
 11928                           
 11929                           ; 2 bytes @ 0x5
 11930  0025                     	ds	1
 11931  0026                     ??_SYSTEM_Initialize:	
 11932  0026                     ?_write_str_UART:	
 11933                           ; 1 bytes @ 0x6
 11934                           
 11935  0026                     ring_buffer@tem:	
 11936                           ; 1 bytes @ 0x6
 11937                           
 11938  0026                     cksum@res:	
 11939                           ; 1 bytes @ 0x6
 11940                           
 11941  0026                     write_str_UART@size:	
 11942                           ; 1 bytes @ 0x6
 11943                           
 11944  0026                     ___bmul@multiplier:	
 11945                           ; 1 bytes @ 0x6
 11946                           
 11947                           
 11948                           ; 1 bytes @ 0x6
 11949  0026                     	ds	1
 11950  0027                     ??_write_str_UART:	
 11951  0027                     ??_ADC_read:	
 11952                           ; 1 bytes @ 0x7
 11953                           
 11954  0027                     ?_read_ring:	
 11955                           ; 1 bytes @ 0x7
 11956                           
 11957  0027                     ??_memset:	
 11958                           ; 1 bytes @ 0x7
 11959                           
 11960  0027                     ??___wmul:	
 11961                           ; 1 bytes @ 0x7
 11962                           
 11963  0027                     ??___awdiv:	
 11964                           ; 1 bytes @ 0x7
 11965                           
 11966  0027                     ??___awmod:	
 11967                           ; 1 bytes @ 0x7
 11968                           
 11969  0027                     ring_buffer@lum:	
 11970                           ; 1 bytes @ 0x7
 11971                           
 11972  0027                     read_ring@nreg:	
 11973                           ; 1 bytes @ 0x7
 11974                           
 11975  0027                     cksum@i:	
 11976                           ; 1 bytes @ 0x7
 11977                           
 11978  0027                     ___wmul@product:	
 11979                           ; 2 bytes @ 0x7
 11980                           
 11981                           
 11982                           ; 2 bytes @ 0x7
 11983  0027                     	ds	1
 11984  0028                     ??_ring_buffer:	
 11985  0028                     read_ring@nreg_init:	
 11986                           ; 1 bytes @ 0x8
 11987                           
 11988  0028                     write_str_UART@string:	
 11989                           ; 1 bytes @ 0x8
 11990                           
 11991  0028                     ___awdiv@counter:	
 11992                           ; 1 bytes @ 0x8
 11993                           
 11994  0028                     ___awmod@counter:	
 11995                           ; 1 bytes @ 0x8
 11996                           
 11997                           
 11998                           ; 1 bytes @ 0x8
 11999  0028                     	ds	1
 12000  0029                     ?_PWM6_LoadDutyValue:	
 12001  0029                     ?_DATAEE_WriteByte:	
 12002                           ; 1 bytes @ 0x9
 12003                           
 12004  0029                     ring_buffer@_ring_byte:	
 12005                           ; 1 bytes @ 0x9
 12006                           
 12007  0029                     read_ring@index:	
 12008                           ; 1 bytes @ 0x9
 12009                           
 12010  0029                     write_str_UART@id:	
 12011                           ; 1 bytes @ 0x9
 12012                           
 12013  0029                     ___awdiv@sign:	
 12014                           ; 1 bytes @ 0x9
 12015                           
 12016  0029                     ___awmod@sign:	
 12017                           ; 1 bytes @ 0x9
 12018                           
 12019  0029                     memset@dest:	
 12020                           ; 1 bytes @ 0x9
 12021                           
 12022  0029                     PWM6_LoadDutyValue@dutyValue:	
 12023                           ; 1 bytes @ 0x9
 12024                           
 12025  0029                     DATAEE_WriteByte@bAdd:	
 12026                           ; 2 bytes @ 0x9
 12027                           
 12028                           
 12029                           ; 2 bytes @ 0x9
 12030  0029                     	ds	1
 12031  002A                     read_ring@subindex:	
 12032  002A                     ___awdiv@quotient:	
 12033                           ; 1 bytes @ 0xA
 12034                           
 12035  002A                     memset@k:	
 12036                           ; 2 bytes @ 0xA
 12037                           
 12038                           
 12039                           ; 2 bytes @ 0xA
 12040  002A                     	ds	1
 12041  002B                     ??_PWM6_LoadDutyValue:	
 12042  002B                     ??_read_ring:	
 12043                           ; 1 bytes @ 0xB
 12044                           
 12045  002B                     DATAEE_WriteByte@bData:	
 12046                           ; 1 bytes @ 0xB
 12047                           
 12048                           
 12049                           ; 1 bytes @ 0xB
 12050  002B                     	ds	1
 12051  002C                     ??_DATAEE_WriteByte:	
 12052  002C                     ??_limitHoursUnits:	
 12053                           ; 1 bytes @ 0xC
 12054                           
 12055  002C                     ??_limitTempThreshUnits:	
 12056                           ; 1 bytes @ 0xC
 12057                           
 12058  002C                     DATAEE_WriteByte@GIEBitValue:	
 12059                           ; 1 bytes @ 0xC
 12060                           
 12061  002C                     memset@s:	
 12062                           ; 1 bytes @ 0xC
 12063                           
 12064                           
 12065                           ; 1 bytes @ 0xC
 12066  002C                     	ds	1
 12067  002D                     ?_read_str_UART:	
 12068  002D                     ?_push_ring:	
 12069                           ; 1 bytes @ 0xD
 12070                           
 12071  002D                     ??_cksum_w:	
 12072                           ; 1 bytes @ 0xD
 12073                           
 12074  002D                     ??_check_thresholds:	
 12075                           ; 1 bytes @ 0xD
 12076                           
 12077  002D                     ??_all_LED:	
 12078                           ; 1 bytes @ 0xD
 12079                           
 12080  002D                     ??_mod1_LED:	
 12081                           ; 1 bytes @ 0xD
 12082                           
 12083  002D                     ??_mod2_LED:	
 12084                           ; 1 bytes @ 0xD
 12085                           
 12086  002D                     ??_mod3_LED:	
 12087                           ; 1 bytes @ 0xD
 12088                           
 12089  002D                     ??_mod4_LED:	
 12090                           ; 1 bytes @ 0xD
 12091                           
 12092  002D                     ??_mode_select_LED:	
 12093                           ; 1 bytes @ 0xD
 12094                           
 12095  002D                     ??_mode_LED:	
 12096                           ; 1 bytes @ 0xD
 12097                           
 12098  002D                     ??_representLed:	
 12099                           ; 1 bytes @ 0xD
 12100                           
 12101  002D                     ??_reset_recv:	
 12102                           ; 1 bytes @ 0xD
 12103                           
 12104  002D                     push_ring@nreg:	
 12105                           ; 1 bytes @ 0xD
 12106                           
 12107  002D                     read_ring@i:	
 12108                           ; 1 bytes @ 0xD
 12109                           
 12110  002D                     read_str_UART@max_len:	
 12111                           ; 1 bytes @ 0xD
 12112                           
 12113  002D                     reset_recv@i:	
 12114                           ; 1 bytes @ 0xD
 12115                           
 12116                           
 12117                           ; 2 bytes @ 0xD
 12118  002D                     	ds	1
 12119  002E                     ??_read_str_UART:	
 12120  002E                     ??_save_recovery_params:	
 12121                           ; 1 bytes @ 0xE
 12122                           
 12123  002E                     check_thresholds@threshold:	
 12124                           ; 1 bytes @ 0xE
 12125                           
 12126  002E                     push_ring@nreg_init:	
 12127                           ; 1 bytes @ 0xE
 12128                           
 12129  002E                     read_ring@nreg_pt:	
 12130                           ; 1 bytes @ 0xE
 12131                           
 12132                           
 12133                           ; 1 bytes @ 0xE
 12134  002E                     	ds	1
 12135  002F                     ??_recoverData:	
 12136  002F                     save_recovery_params@aux:	
 12137                           ; 1 bytes @ 0xF
 12138                           
 12139  002F                     push_ring@ring_byte:	
 12140                           ; 1 bytes @ 0xF
 12141                           
 12142  002F                     read_ring@absindex:	
 12143                           ; 1 bytes @ 0xF
 12144                           
 12145  002F                     mode_LED@subfield:	
 12146                           ; 1 bytes @ 0xF
 12147                           
 12148                           
 12149                           ; 1 bytes @ 0xF
 12150  002F                     	ds	1
 12151  0030                     ??_push_ring:	
 12152  0030                     save_recovery_params@aux1:	
 12153                           ; 1 bytes @ 0x10
 12154                           
 12155  0030                     representLed@val:	
 12156                           ; 1 bytes @ 0x10
 12157                           
 12158  0030                     read_str_UART@i:	
 12159                           ; 1 bytes @ 0x10
 12160                           
 12161                           
 12162                           ; 1 bytes @ 0x10
 12163  0030                     	ds	1
 12164  0031                     representLed@aux:	
 12165  0031                     read_str_UART@buff:	
 12166                           ; 1 bytes @ 0x11
 12167                           
 12168                           
 12169                           ; 1 bytes @ 0x11
 12170  0031                     	ds	1
 12171  0032                     ?_increment_subfield:	
 12172  0032                     push_ring@i:	
 12173                           ; 1 bytes @ 0x12
 12174                           
 12175  0032                     read_str_UART@rxData:	
 12176                           ; 1 bytes @ 0x12
 12177                           
 12178  0032                     increment_subfield@init_val:	
 12179                           ; 1 bytes @ 0x12
 12180                           
 12181                           
 12182                           ; 2 bytes @ 0x12
 12183  0032                     	ds	1
 12184  0033                     push_ring@nreg_pt:	
 12185                           
 12186                           ; 1 bytes @ 0x13
 12187  0033                     	ds	1
 12188  0034                     ??_increment_subfield:	
 12189                           
 12190                           ; 1 bytes @ 0x14
 12191  0034                     	ds	1
 12192  0035                     increment_subfield@exit:	
 12193                           
 12194                           ; 1 bytes @ 0x15
 12195  0035                     	ds	1
 12196  0036                     increment_subfield@limit:	
 12197                           
 12198                           ; 1 bytes @ 0x16
 12199  0036                     	ds	1
 12200  0037                     increment_subfield@_value:	
 12201                           
 12202                           ; 1 bytes @ 0x17
 12203  0037                     	ds	1
 12204  0038                     ??_getSubfieldInfo:	
 12205                           
 12206                           ; 1 bytes @ 0x18
 12207  0038                     	ds	3
 12208  003B                     getSubfieldInfo@h_tens:	
 12209                           
 12210                           ; 1 bytes @ 0x1B
 12211  003B                     	ds	1
 12212  003C                     getSubfieldInfo@h_units:	
 12213                           
 12214                           ; 1 bytes @ 0x1C
 12215  003C                     	ds	1
 12216  003D                     getSubfieldInfo@m_tens:	
 12217                           
 12218                           ; 1 bytes @ 0x1D
 12219  003D                     	ds	1
 12220  003E                     getSubfieldInfo@m_units:	
 12221                           
 12222                           ; 1 bytes @ 0x1E
 12223  003E                     	ds	1
 12224  003F                     getSubfieldInfo@temp_thresh_tens:	
 12225                           
 12226                           ; 1 bytes @ 0x1F
 12227  003F                     	ds	1
 12228  0040                     getSubfieldInfo@temp_thresh_units:	
 12229                           
 12230                           ; 1 bytes @ 0x20
 12231  0040                     	ds	1
 12232  0041                     ??_selectSubfield:	
 12233                           
 12234                           ; 1 bytes @ 0x21
 12235  0041                     	ds	2
 12236  0043                     selectSubfield@subfield:	
 12237                           
 12238                           ; 2 bytes @ 0x23
 12239  0043                     	ds	2
 12240  0045                     ??_config_routine:	
 12241                           
 12242                           ; 1 bytes @ 0x25
 12243  0045                     	ds	1
 12244  0046                     config_routine@select_mode:	
 12245                           
 12246                           ; 2 bytes @ 0x26
 12247  0046                     	ds	2
 12248  0048                     ??_main:	
 12249                           
 12250                           ; 1 bytes @ 0x28
 12251  0048                     	ds	6
 12252                           
 12253                           	psect	maintext
 12254  00B0                     __pmaintext:	
 12255 ;;
 12256 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
 12257 ;;
 12258 ;; *************** function _main *****************
 12259 ;; Defined at:
 12260 ;;		line 172 in file "main.c"
 12261 ;; Parameters:    Size  Location     Type
 12262 ;;		None
 12263 ;; Auto vars:     Size  Location     Type
 12264 ;;  t1m             1    3[BANK2 ] unsigned char 
 12265 ;;  t5s             1    2[BANK2 ] unsigned char 
 12266 ;; Return value:  Size  Location     Type
 12267 ;;                  1    wreg      void 
 12268 ;; Registers used:
 12269 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12270 ;; Tracked objects:
 12271 ;;		On entry : B1F/0
 12272 ;;		On exit  : 0/0
 12273 ;;		Unchanged: 0/0
 12274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12276 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
 12277 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12278 ;;      Totals:         0       6       0       4       0       0       0       0       0       0       0       0       
      +0       0
 12279 ;;Total ram usage:       10 bytes
 12280 ;; Hardware stack levels required when called:   12
 12281 ;; This function calls:
 12282 ;;		_ADC_read
 12283 ;;		_DATAEE_WriteByte
 12284 ;;		_EUSART_is_rx_ready
 12285 ;;		_INT_SetInterruptHandler
 12286 ;;		_LED_bin
 12287 ;;		_PWM6_LoadDutyValue
 12288 ;;		_SYSTEM_Initialize
 12289 ;;		_TMR0_SetInterruptHandler
 12290 ;;		_TMR1_SetInterruptHandler
 12291 ;;		_TMR2_SetInterruptHandler
 12292 ;;		_check_thresholds
 12293 ;;		_cksum_w
 12294 ;;		_config_routine
 12295 ;;		_push_ring
 12296 ;;		_read_ring
 12297 ;;		_read_str_UART
 12298 ;;		_recoverData
 12299 ;;		_ring_buffer
 12300 ;;		_save_recovery_params
 12301 ;;		_write_str_UART
 12302 ;; This function is called by:
 12303 ;;		Startup code after reset
 12304 ;; This function uses a non-reentrant model
 12305 ;;
 12306                           
 12307                           
 12308                           ;psect for function _main
 12309  00B0                     _main:	
 12310  00B0                     l8245:	
 12311                           ;incstack = 0
 12312                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12313                           
 12314                           
 12315                           ;main.c: 174:     SYSTEM_Initialize();
 12316  00B0  318A  2214  3180   	fcall	_SYSTEM_Initialize
 12317                           
 12318                           ;main.c: 175:     TMR0_SetInterruptHandler(ISR_3s);
 12319  00B3  3009               	movlw	low _ISR_3s
 12320  00B4  0020               	movlb	0	; select bank0
 12321  00B5  00A3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 12322  00B6  3009               	movlw	high _ISR_3s
 12323  00B7  00A4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 12324  00B8  3196  26F9  3180   	fcall	_TMR0_SetInterruptHandler
 12325                           
 12326                           ;main.c: 176:     TMR1_SetInterruptHandler(handler_clock_hms);
 12327  00BB  30B5               	movlw	low _handler_clock_hms
 12328  00BC  0020               	movlb	0	; select bank0
 12329  00BD  00A3               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 12330  00BE  300C               	movlw	high _handler_clock_hms
 12331  00BF  00A4               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 12332  00C0  3197  2702  3180   	fcall	_TMR1_SetInterruptHandler
 12333                           
 12334                           ;main.c: 177:     INT_SetInterruptHandler(sw1_EXT);
 12335  00C3  30DA               	movlw	low _sw1_EXT
 12336  00C4  0020               	movlb	0	; select bank0
 12337  00C5  00A3               	movwf	INT_SetInterruptHandler@InterruptHandler
 12338  00C6  300A               	movlw	high _sw1_EXT
 12339  00C7  00A4               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 12340  00C8  3196  26E7  3180   	fcall	_INT_SetInterruptHandler
 12341                           
 12342                           ;main.c: 178:     TMR2_SetInterruptHandler(handler_clock_ms);
 12343  00CB  304F               	movlw	low _handler_clock_ms
 12344  00CC  0020               	movlb	0	; select bank0
 12345  00CD  00A3               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 12346  00CE  3017               	movlw	high _handler_clock_ms
 12347  00CF  00A4               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 12348  00D0  3197  270B  3180   	fcall	_TMR2_SetInterruptHandler
 12349  00D3                     l8247:	
 12350  00D3                     l8249:	
 12351  00D3                     l8251:	
 12352  00D3                     l195:	
 12353  00D3  3096               	movlw	150
 12354  00D4  0020               	movlb	0	; select bank0
 12355  00D5  00C8               	movwf	??_main
 12356  00D6  0848               	movf	??_main,w
 12357  00D7  00EA               	movwf	_nreg
 12358  00D8                     l8255:	
 12359                           
 12360                           ;main.c: 186:     nreg_pt = 0;
 12361  00D8  01E0               	clrf	_nreg_pt
 12362  00D9                     l8257:	
 12363                           
 12364                           ;main.c: 187:     nreg_init = 0;
 12365  00D9  01E1               	clrf	_nreg_init
 12366  00DA                     l8259:	
 12367                           
 12368                           ;main.c: 188:     alaf = 1;
 12369  00DA  01D5               	clrf	_alaf
 12370  00DB  0AD5               	incf	_alaf,f
 12371  00DC                     l8261:	
 12372                           
 12373                           ;main.c: 189:     temp = 0;
 12374  00DC  01D6               	clrf	_temp
 12375  00DD                     l8263:	
 12376                           
 12377                           ;main.c: 190:     lum_bin = 0;
 12378  00DD  01CE               	clrf	_lum_bin
 12379  00DE  01CF               	clrf	_lum_bin+1
 12380  00DF                     l8265:	
 12381                           
 12382                           ;main.c: 191:     threshold = 0;
 12383  00DF  0021               	movlb	1	; select bank1
 12384  00E0  01C5               	clrf	_threshold^(0+128)
 12385  00E1  01C6               	clrf	(_threshold+1)^(0+128)
 12386  00E2                     l8267:	
 12387                           
 12388                           ;main.c: 192:     duty_cycle = 0;
 12389  00E2  01C7               	clrf	_duty_cycle^(0+128)
 12390  00E3  01C8               	clrf	(_duty_cycle+1)^(0+128)
 12391  00E4                     l8269:	
 12392                           
 12393                           ;main.c: 193:     set_mode= 0;
 12394  00E4  01DA               	clrf	_set_mode^(0+128)	;volatile
 12395  00E5                     l8271:	
 12396                           
 12397                           ;main.c: 203:     recoverData();
 12398  00E5  3183  2386  3180   	fcall	_recoverData
 12399  00E8                     l8273:	
 12400                           
 12401                           ;main.c: 205:     PWM6_LoadDutyValue(0);
 12402  00E8  3000               	movlw	0
 12403  00E9  0020               	movlb	0	; select bank0
 12404  00EA  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 12405  00EB  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12406  00EC  3189  2122  3180   	fcall	_PWM6_LoadDutyValue
 12407  00EF                     l8275:	
 12408                           
 12409                           ;main.c: 206:     alarm = 0 ;
 12410  00EF  0020               	movlb	0	; select bank0
 12411  00F0  01D7               	clrf	_alarm	;volatile
 12412  00F1                     l8277:	
 12413  00F1  003E               	movlb	30	; select bank30
 12414  00F2  1644               	bsf	68,4	;volatile
 12415  00F3                     l8279:	
 12416                           
 12417                           ;main.c: 210:     (INTCONbits.GIE = 1);
 12418  00F3  178B               	bsf	11,7	;volatile
 12419  00F4                     l8281:	
 12420                           
 12421                           ;main.c: 212:     (INTCONbits.PEIE = 1);
 12422  00F4  170B               	bsf	11,6	;volatile
 12423  00F5                     l8283:	
 12424                           
 12425                           ;main.c: 216:     {;main.c: 221:         if(EUSART_is_rx_ready()){
 12426  00F5  3197  2714  3180   	fcall	_EUSART_is_rx_ready
 12427  00F8  3A00               	xorlw	0
 12428  00F9  1903               	skipnz
 12429  00FA  28FC               	goto	u5221
 12430  00FB  28FD               	goto	u5220
 12431  00FC                     u5221:	
 12432  00FC  290F               	goto	l8287
 12433  00FD                     u5220:	
 12434  00FD                     l8285:	
 12435                           
 12436                           ;main.c: 222:              write_str_UART(str_snd, 16);
 12437  00FD  3010               	movlw	16
 12438  00FE  0020               	movlb	0	; select bank0
 12439  00FF  00C8               	movwf	??_main
 12440  0100  0848               	movf	??_main,w
 12441  0101  00A6               	movwf	write_str_UART@size
 12442  0102  3040               	movlw	(low (_str_snd| (0+256)))& (0+255)
 12443  0103  318B  2325  3180   	fcall	_write_str_UART
 12444                           
 12445                           ;main.c: 223:              read_str_UART(str_rc, 16);
 12446  0106  3010               	movlw	16
 12447  0107  0020               	movlb	0	; select bank0
 12448  0108  00C8               	movwf	??_main
 12449  0109  0848               	movf	??_main,w
 12450  010A  00AD               	movwf	read_str_UART@max_len
 12451  010B  3030               	movlw	(low (_str_rc| (0+256)))& (0+255)
 12452  010C  3185  257C  3180   	fcall	_read_str_UART
 12453  010F                     l8287:	
 12454                           
 12455                           ;main.c: 226:         PIE4bits.TMR1IE = 0;
 12456  010F  002E               	movlb	14	; select bank14
 12457  0110  101A               	bcf	26,0	;volatile
 12458  0111                     l8289:	
 12459                           
 12460                           ;main.c: 227:         t5s = last5s;
 12461  0111  0020               	movlb	0	; select bank0
 12462  0112  085A               	movf	_last5s,w	;volatile
 12463  0113  00C8               	movwf	??_main
 12464  0114  0848               	movf	??_main,w
 12465  0115  0022               	movlb	2	; select bank2
 12466  0116  00D6               	movwf	main@t5s^(0+256)
 12467  0117                     l8291:	
 12468                           
 12469                           ;main.c: 228:         PIE4bits.TMR1IE = 1;
 12470  0117  002E               	movlb	14	; select bank14
 12471  0118  141A               	bsf	26,0	;volatile
 12472  0119                     l8293:	
 12473                           
 12474                           ;main.c: 230:         if(t5s >= pmon){
 12475  0119  0020               	movlb	0	; select bank0
 12476  011A  0869               	movf	_pmon,w
 12477  011B  0022               	movlb	2	; select bank2
 12478  011C  0256               	subwf	main@t5s^(0+256),w
 12479  011D  1C03               	skipc
 12480  011E  2920               	goto	u5231
 12481  011F  2921               	goto	u5230
 12482  0120                     u5231:	
 12483  0120  2A14               	goto	l200
 12484  0121                     u5230:	
 12485  0121                     l8295:	
 12486                           
 12487                           ;main.c: 231:             PIE4bits.TMR1IE = 0;
 12488  0121  002E               	movlb	14	; select bank14
 12489  0122  101A               	bcf	26,0	;volatile
 12490  0123                     l8297:	
 12491                           
 12492                           ;main.c: 232:             last5s =0;
 12493  0123  0020               	movlb	0	; select bank0
 12494  0124  01DA               	clrf	_last5s	;volatile
 12495  0125                     l8299:	
 12496                           
 12497                           ;main.c: 233:             PIE4bits.TMR1IE = 1;
 12498  0125  002E               	movlb	14	; select bank14
 12499  0126  141A               	bsf	26,0	;volatile
 12500  0127                     l8301:	
 12501                           
 12502                           ;main.c: 237:                     if(!config_mode){
 12503  0127  0020               	movlb	0	; select bank0
 12504  0128  0858               	movf	_config_mode,w	;volatile
 12505  0129  1D03               	btfss	3,2
 12506  012A  292C               	goto	u5241
 12507  012B  292D               	goto	u5240
 12508  012C                     u5241:	
 12509  012C  29E0               	goto	l8327
 12510  012D                     u5240:	
 12511  012D                     l8303:	
 12512                           
 12513                           ;main.c: 239:                             convertedValue = ADC_read();
 12514  012D  3189  2154  3180   	fcall	_ADC_read
 12515  0130  0020               	movlb	0	; select bank0
 12516  0131  0826               	movf	?_ADC_read+1,w
 12517  0132  0021               	movlb	1	; select bank1
 12518  0133  00CA               	movwf	(_convertedValue+1)^(0+128)
 12519  0134  0020               	movlb	0	; select bank0
 12520  0135  0825               	movf	?_ADC_read,w
 12521  0136  0021               	movlb	1	; select bank1
 12522  0137  00C9               	movwf	_convertedValue^(0+128)
 12523  0138                     l8305:	
 12524                           
 12525                           ;main.c: 240:                             lum_bin = (convertedValue >> 8);
 12526  0138  084A               	movf	(_convertedValue+1)^(0+128),w
 12527  0139  0020               	movlb	0	; select bank0
 12528  013A  00C9               	movwf	??_main+1
 12529  013B  0021               	movlb	1	; select bank1
 12530  013C  0849               	movf	_convertedValue^(0+128),w
 12531  013D  0020               	movlb	0	; select bank0
 12532  013E  00C8               	movwf	??_main
 12533  013F  0849               	movf	??_main+1,w
 12534  0140  00C8               	movwf	??_main
 12535  0141  01C9               	clrf	??_main+1
 12536  0142  0848               	movf	??_main,w
 12537  0143  00CE               	movwf	_lum_bin
 12538  0144  0849               	movf	??_main+1,w
 12539  0145  00CF               	movwf	_lum_bin+1
 12540  0146                     l8307:	
 12541                           
 12542                           ;main.c: 241:                             LED_bin(lum_bin);
 12543  0146  084F               	movf	_lum_bin+1,w
 12544  0147  00A4               	movwf	LED_bin@value+1
 12545  0148  084E               	movf	_lum_bin,w
 12546  0149  00A3               	movwf	LED_bin@value
 12547  014A  3189  216E  3180   	fcall	_LED_bin
 12548  014D                     l8309:	
 12549                           
 12550                           ;main.c: 244:                             __nop();
 12551  014D  0000               	nop
 12552  014E                     l8311:	
 12553                           
 12554                           ;main.c: 246:                             __nop();
 12555  014E  0000               	nop
 12556  014F                     l8313:	
 12557                           
 12558                           ;main.c: 249:                             if (temp != read_ring(nreg_pt, nreg, nreg_init
      +                          , 0, 3) || lum_bin != read_ring(nreg_pt, nreg, nreg_init, 0, 4)) {
 12559  014F  0020               	movlb	0	; select bank0
 12560  0150  086A               	movf	_nreg,w
 12561  0151  00C8               	movwf	??_main
 12562  0152  0848               	movf	??_main,w
 12563  0153  00A7               	movwf	read_ring@nreg
 12564  0154  0861               	movf	_nreg_init,w
 12565  0155  00C9               	movwf	??_main+1
 12566  0156  0849               	movf	??_main+1,w
 12567  0157  00A8               	movwf	read_ring@nreg_init
 12568  0158  01A9               	clrf	read_ring@index
 12569  0159  3003               	movlw	3
 12570  015A  00CA               	movwf	??_main+2
 12571  015B  084A               	movf	??_main+2,w
 12572  015C  00AA               	movwf	read_ring@subindex
 12573  015D  0860               	movf	_nreg_pt,w
 12574  015E  318D  2562  3180   	fcall	_read_ring
 12575  0161  0020               	movlb	0	; select bank0
 12576  0162  0656               	xorwf	_temp,w
 12577  0163  1D03               	skipz
 12578  0164  2966               	goto	u5251
 12579  0165  2967               	goto	u5250
 12580  0166                     u5251:	
 12581  0166  2985               	goto	l8317
 12582  0167                     u5250:	
 12583  0167                     l8315:	
 12584  0167  086A               	movf	_nreg,w
 12585  0168  00C8               	movwf	??_main
 12586  0169  0848               	movf	??_main,w
 12587  016A  00A7               	movwf	read_ring@nreg
 12588  016B  0861               	movf	_nreg_init,w
 12589  016C  00C9               	movwf	??_main+1
 12590  016D  0849               	movf	??_main+1,w
 12591  016E  00A8               	movwf	read_ring@nreg_init
 12592  016F  01A9               	clrf	read_ring@index
 12593  0170  3004               	movlw	4
 12594  0171  00CA               	movwf	??_main+2
 12595  0172  084A               	movf	??_main+2,w
 12596  0173  00AA               	movwf	read_ring@subindex
 12597  0174  0860               	movf	_nreg_pt,w
 12598  0175  318D  2562  3180   	fcall	_read_ring
 12599  0178  0020               	movlb	0	; select bank0
 12600  0179  00CB               	movwf	??_main+3
 12601  017A  01CC               	clrf	??_main+4
 12602  017B  084F               	movf	_lum_bin+1,w
 12603  017C  064C               	xorwf	??_main+4,w
 12604  017D  1D03               	skipz
 12605  017E  2981               	goto	u5265
 12606  017F  084E               	movf	_lum_bin,w
 12607  0180  064B               	xorwf	??_main+3,w
 12608  0181                     u5265:	
 12609  0181  1903               	skipnz
 12610  0182  2984               	goto	u5261
 12611  0183  2985               	goto	u5260
 12612  0184                     u5261:	
 12613  0184  29BD               	goto	l8323
 12614  0185                     u5260:	
 12615  0185                     l8317:	
 12616                           
 12617                           ;main.c: 250:                                 ring_buffer (ring_byte,clkh, clkm, seg, te
      +                          mp,lum_bin);
 12618  0185  085F               	movf	_clkh,w	;volatile
 12619  0186  00C8               	movwf	??_main
 12620  0187  0848               	movf	??_main,w
 12621  0188  00A3               	movwf	ring_buffer@clock_h
 12622  0189  085E               	movf	_clkm,w	;volatile
 12623  018A  00C9               	movwf	??_main+1
 12624  018B  0849               	movf	??_main+1,w
 12625  018C  00A4               	movwf	ring_buffer@clock_m
 12626  018D  085D               	movf	_seg,w	;volatile
 12627  018E  00CA               	movwf	??_main+2
 12628  018F  084A               	movf	??_main+2,w
 12629  0190  00A5               	movwf	ring_buffer@clock_s
 12630  0191  0856               	movf	_temp,w
 12631  0192  00CB               	movwf	??_main+3
 12632  0193  084B               	movf	??_main+3,w
 12633  0194  00A6               	movwf	ring_buffer@tem
 12634  0195  084E               	movf	_lum_bin,w
 12635  0196  00CC               	movwf	??_main+4
 12636  0197  084C               	movf	??_main+4,w
 12637  0198  00A7               	movwf	ring_buffer@lum
 12638  0199  30DB               	movlw	(low (_ring_byte| 0))& (0+255)
 12639  019A  318C  2453  3180   	fcall	_ring_buffer
 12640                           
 12641                           ;main.c: 251:                                 push_ring(&nreg_pt, nreg, &nreg_init, ring
      +                          _byte);
 12642  019D  0020               	movlb	0	; select bank0
 12643  019E  086A               	movf	_nreg,w
 12644  019F  00C8               	movwf	??_main
 12645  01A0  0848               	movf	??_main,w
 12646  01A1  00AD               	movwf	push_ring@nreg
 12647  01A2  3061               	movlw	(low (_nreg_init| 0))& (0+255)
 12648  01A3  00C9               	movwf	??_main+1
 12649  01A4  0849               	movf	??_main+1,w
 12650  01A5  00AE               	movwf	push_ring@nreg_init
 12651  01A6  30DB               	movlw	(low (_ring_byte| 0))& (0+255)
 12652  01A7  00CA               	movwf	??_main+2
 12653  01A8  084A               	movf	??_main+2,w
 12654  01A9  00AF               	movwf	push_ring@ring_byte
 12655  01AA  3060               	movlw	(low (_nreg_pt| 0))& (0+255)
 12656  01AB  318D  25E6  3180   	fcall	_push_ring
 12657  01AE                     l8319:	
 12658                           
 12659                           ;main.c: 252:                                 DATAEE_WriteByte(0xF0FF - 10 + 4, nreg_pt)
      +                          ;
 12660  01AE  30F9               	movlw	249
 12661  01AF  0020               	movlb	0	; select bank0
 12662  01B0  00A9               	movwf	DATAEE_WriteByte@bAdd
 12663  01B1  30F0               	movlw	240
 12664  01B2  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 12665  01B3  0860               	movf	_nreg_pt,w
 12666  01B4  00C8               	movwf	??_main
 12667  01B5  0848               	movf	??_main,w
 12668  01B6  00AB               	movwf	DATAEE_WriteByte@bData
 12669  01B7  318A  22B6  3180   	fcall	_DATAEE_WriteByte
 12670  01BA                     l8321:	
 12671                           
 12672                           ;main.c: 253:                                 cksum_w();
 12673  01BA  3197  27BE  3180   	fcall	_cksum_w
 12674  01BD                     l8323:	
 12675                           
 12676                           ;main.c: 257:                             threshold = (lum_bin > lum_thresh ) & alaf;
 12677  01BD  0020               	movlb	0	; select bank0
 12678  01BE  0855               	movf	_alaf,w
 12679  01BF  00C8               	movwf	??_main
 12680  01C0  01C9               	clrf	??_main+1
 12681  01C1  0866               	movf	_lum_thresh,w
 12682  01C2  00CA               	movwf	??_main+2
 12683  01C3  01CB               	clrf	??_main+3
 12684  01C4  084F               	movf	_lum_bin+1,w
 12685  01C5  024B               	subwf	??_main+3,w
 12686  01C6  1D03               	skipz
 12687  01C7  29CA               	goto	u5275
 12688  01C8  084E               	movf	_lum_bin,w
 12689  01C9  024A               	subwf	??_main+2,w
 12690  01CA                     u5275:	
 12691  01CA  1C03               	skipc
 12692  01CB  29CD               	goto	u5271
 12693  01CC  29CF               	goto	u5270
 12694  01CD                     u5271:	
 12695  01CD  3001               	movlw	1
 12696  01CE  29D0               	goto	u5280
 12697  01CF                     u5270:	
 12698  01CF  3000               	movlw	0
 12699  01D0                     u5280:	
 12700  01D0  00CC               	movwf	??_main+4
 12701  01D1  01CD               	clrf	??_main+5
 12702  01D2  0848               	movf	??_main,w
 12703  01D3  054C               	andwf	??_main+4,w
 12704  01D4  0021               	movlb	1	; select bank1
 12705  01D5  00C5               	movwf	_threshold^(0+128)
 12706  01D6  0020               	movlb	0	; select bank0
 12707  01D7  0849               	movf	??_main+1,w
 12708  01D8  054D               	andwf	??_main+5,w
 12709  01D9  0021               	movlb	1	; select bank1
 12710  01DA  00C6               	movwf	(_threshold+1)^(0+128)
 12711  01DB                     l8325:	
 12712                           
 12713                           ;main.c: 258:                             check_thresholds(threshold);
 12714  01DB  0845               	movf	_threshold^(0+128),w
 12715  01DC  318C  24E9  3180   	fcall	_check_thresholds
 12716                           
 12717                           ;main.c: 261:                     }
 12718  01DF  2A04               	goto	l8339
 12719  01E0                     l8327:	
 12720  01E0  0358               	decf	_config_mode,w	;volatile
 12721  01E1  1D03               	btfss	3,2
 12722  01E2  29E4               	goto	u5291
 12723  01E3  29E5               	goto	u5290
 12724  01E4                     u5291:	
 12725  01E4  2A04               	goto	l8339
 12726  01E5                     u5290:	
 12727  01E5                     l8329:	
 12728                           
 12729                           ;main.c: 265:                         (PIE0bits.INTE = 0);
 12730  01E5  002E               	movlb	14	; select bank14
 12731  01E6  1016               	bcf	22,0	;volatile
 12732  01E7                     l8331:	
 12733                           
 12734                           ;main.c: 266:                         config_routine();
 12735  01E7  3184  24FA  3180   	fcall	_config_routine
 12736  01EA                     l8333:	
 12737                           
 12738                           ;main.c: 267:                         (PIE0bits.INTE = 1);
 12739  01EA  002E               	movlb	14	; select bank14
 12740  01EB  1416               	bsf	22,0	;volatile
 12741  01EC                     l8335:	
 12742                           
 12743                           ;main.c: 268:                         DATAEE_WriteByte(0xF0FF - 10 + 5, temp_thresh);
 12744  01EC  30FA               	movlw	250
 12745  01ED  0020               	movlb	0	; select bank0
 12746  01EE  00A9               	movwf	DATAEE_WriteByte@bAdd
 12747  01EF  30F0               	movlw	240
 12748  01F0  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 12749  01F1  0867               	movf	_temp_thresh,w
 12750  01F2  00C8               	movwf	??_main
 12751  01F3  0848               	movf	??_main,w
 12752  01F4  00AB               	movwf	DATAEE_WriteByte@bData
 12753  01F5  318A  22B6  3180   	fcall	_DATAEE_WriteByte
 12754  01F8                     l8337:	
 12755                           
 12756                           ;main.c: 269:                         DATAEE_WriteByte(0xF0FF - 10 + 6, lum_thresh);
 12757  01F8  30FB               	movlw	251
 12758  01F9  0020               	movlb	0	; select bank0
 12759  01FA  00A9               	movwf	DATAEE_WriteByte@bAdd
 12760  01FB  30F0               	movlw	240
 12761  01FC  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 12762  01FD  0866               	movf	_lum_thresh,w
 12763  01FE  00C8               	movwf	??_main
 12764  01FF  0848               	movf	??_main,w
 12765  0200  00AB               	movwf	DATAEE_WriteByte@bData
 12766  0201  318A  22B6  3180   	fcall	_DATAEE_WriteByte
 12767  0204                     l8339:	
 12768                           
 12769                           ;main.c: 272:                     _delay((unsigned long)((10)*(1000000/4000.0)));
 12770  0204  3004               	movlw	4
 12771  0205  0020               	movlb	0	; select bank0
 12772  0206  00C8               	movwf	??_main
 12773  0207  303D               	movlw	61
 12774  0208                     u5407:	
 12775  0208  0B89               	decfsz	9,f
 12776  0209  2A08               	goto	u5407
 12777  020A  0BC8               	decfsz	??_main,f
 12778  020B  2A08               	goto	u5407
 12779  020C  3200               	nop2
 12780  020D                     l8341:	
 12781                           
 12782                           ;main.c: 274:             }while(alarm == 2);
 12783  020D  3002               	movlw	2
 12784  020E  0020               	movlb	0	; select bank0
 12785  020F  0657               	xorwf	_alarm,w	;volatile
 12786  0210  1903               	btfsc	3,2
 12787  0211  2A13               	goto	u5301
 12788  0212  2A14               	goto	u5300
 12789  0213                     u5301:	
 12790  0213  2927               	goto	l8301
 12791  0214                     u5300:	
 12792  0214                     l200:	
 12793                           ;main.c: 276:         }
 12794                           
 12795                           
 12796                           ;main.c: 278:        PIE4bits.TMR1IE = 0;
 12797  0214  002E               	movlb	14	; select bank14
 12798  0215  101A               	bcf	26,0	;volatile
 12799  0216                     l8343:	
 12800                           
 12801                           ;main.c: 279:        t1m = last1m;
 12802  0216  0020               	movlb	0	; select bank0
 12803  0217  0859               	movf	_last1m,w	;volatile
 12804  0218  00C8               	movwf	??_main
 12805  0219  0848               	movf	??_main,w
 12806  021A  0022               	movlb	2	; select bank2
 12807  021B  00D7               	movwf	main@t1m^(0+256)
 12808  021C                     l8345:	
 12809                           
 12810                           ;main.c: 280:        PIE4bits.TMR1IE = 1;
 12811  021C  002E               	movlb	14	; select bank14
 12812  021D  141A               	bsf	26,0	;volatile
 12813  021E                     l8347:	
 12814                           
 12815                           ;main.c: 282:        if (t1m >= 1) {
 12816  021E  0022               	movlb	2	; select bank2
 12817  021F  0857               	movf	main@t1m^(0+256),w
 12818  0220  1903               	btfsc	3,2
 12819  0221  2A23               	goto	u5311
 12820  0222  2A24               	goto	u5310
 12821  0223                     u5311:	
 12822  0223  28F5               	goto	l8283
 12823  0224                     u5310:	
 12824  0224                     l8349:	
 12825                           
 12826                           ;main.c: 283:          save_recovery_params();
 12827  0224  318B  2376  3180   	fcall	_save_recovery_params
 12828  0227  28F5               	goto	l8283
 12829  0228  3180  2879         	ljmp	start
 12830  022A                     __end_of_main:	
 12831                           
 12832                           	psect	text1
 12833  0B76                     __ptext1:	
 12834 ;; *************** function _save_recovery_params *****************
 12835 ;; Defined at:
 12836 ;;		line 658 in file "main.c"
 12837 ;; Parameters:    Size  Location     Type
 12838 ;;		None
 12839 ;; Auto vars:     Size  Location     Type
 12840 ;;  aux1            1   16[BANK0 ] unsigned char 
 12841 ;;  aux             1   15[BANK0 ] unsigned char 
 12842 ;; Return value:  Size  Location     Type
 12843 ;;                  1    wreg      void 
 12844 ;; Registers used:
 12845 ;;		wreg, status,2, status,0, pclath, cstack
 12846 ;; Tracked objects:
 12847 ;;		On entry : 0/0
 12848 ;;		On exit  : 0/0
 12849 ;;		Unchanged: 0/0
 12850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12852 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12853 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12854 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12855 ;;Total ram usage:        3 bytes
 12856 ;; Hardware stack levels used:    1
 12857 ;; Hardware stack levels required when called:    9
 12858 ;; This function calls:
 12859 ;;		_DATAEE_WriteByte
 12860 ;;		_cksum_w
 12861 ;; This function is called by:
 12862 ;;		_main
 12863 ;; This function uses a non-reentrant model
 12864 ;;
 12865                           
 12866                           
 12867                           ;psect for function _save_recovery_params
 12868  0B76                     _save_recovery_params:	
 12869  0B76                     l8229:	
 12870                           ;incstack = 0
 12871                           ; Regs used in _save_recovery_params: [wreg+status,2+status,0+pclath+cstack]
 12872                           
 12873                           
 12874                           ;main.c: 660:     unsigned char aux, aux1;;main.c: 661:     PIE4bits.TMR1IE = 0;
 12875  0B76  002E               	movlb	14	; select bank14
 12876  0B77  101A               	bcf	26,0	;volatile
 12877  0B78                     l8231:	
 12878                           
 12879                           ;main.c: 662:     last1m = 0;
 12880  0B78  0020               	movlb	0	; select bank0
 12881  0B79  01D9               	clrf	_last1m	;volatile
 12882  0B7A                     l8233:	
 12883                           
 12884                           ;main.c: 663:     aux = clkh;
 12885  0B7A  085F               	movf	_clkh,w	;volatile
 12886  0B7B  00AE               	movwf	??_save_recovery_params
 12887  0B7C  082E               	movf	??_save_recovery_params,w
 12888  0B7D  00AF               	movwf	save_recovery_params@aux
 12889  0B7E                     l8235:	
 12890                           
 12891                           ;main.c: 664:     aux1 = clkm;
 12892  0B7E  085E               	movf	_clkm,w	;volatile
 12893  0B7F  00AE               	movwf	??_save_recovery_params
 12894  0B80  082E               	movf	??_save_recovery_params,w
 12895  0B81  00B0               	movwf	save_recovery_params@aux1
 12896  0B82                     l8237:	
 12897                           
 12898                           ;main.c: 665:     PIE4bits.TMR1IE = 1;
 12899  0B82  002E               	movlb	14	; select bank14
 12900  0B83  141A               	bsf	26,0	;volatile
 12901  0B84                     l8239:	
 12902                           
 12903                           ;main.c: 666:     DATAEE_WriteByte(0xF0FF - 10 + 1, aux);
 12904  0B84  30F6               	movlw	246
 12905  0B85  0020               	movlb	0	; select bank0
 12906  0B86  00A9               	movwf	DATAEE_WriteByte@bAdd
 12907  0B87  30F0               	movlw	240
 12908  0B88  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 12909  0B89  082F               	movf	save_recovery_params@aux,w
 12910  0B8A  00AE               	movwf	??_save_recovery_params
 12911  0B8B  082E               	movf	??_save_recovery_params,w
 12912  0B8C  00AB               	movwf	DATAEE_WriteByte@bData
 12913  0B8D  318A  22B6  318B   	fcall	_DATAEE_WriteByte
 12914  0B90                     l8241:	
 12915                           
 12916                           ;main.c: 667:     DATAEE_WriteByte(0xF0FF - 10 + 2, aux1);
 12917  0B90  30F7               	movlw	247
 12918  0B91  0020               	movlb	0	; select bank0
 12919  0B92  00A9               	movwf	DATAEE_WriteByte@bAdd
 12920  0B93  30F0               	movlw	240
 12921  0B94  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 12922  0B95  0830               	movf	save_recovery_params@aux1,w
 12923  0B96  00AE               	movwf	??_save_recovery_params
 12924  0B97  082E               	movf	??_save_recovery_params,w
 12925  0B98  00AB               	movwf	DATAEE_WriteByte@bData
 12926  0B99  318A  22B6  318B   	fcall	_DATAEE_WriteByte
 12927  0B9C                     l8243:	
 12928                           
 12929                           ;main.c: 668:     cksum_w();
 12930  0B9C  3197  27BE  318B   	fcall	_cksum_w
 12931  0B9F                     l331:	
 12932  0B9F  0008               	return
 12933  0BA0                     __end_of_save_recovery_params:	
 12934                           
 12935                           	psect	text2
 12936  0C53                     __ptext2:	
 12937 ;; *************** function _ring_buffer *****************
 12938 ;; Defined at:
 12939 ;;		line 673 in file "main.c"
 12940 ;; Parameters:    Size  Location     Type
 12941 ;;  _ring_byte      1    wreg     PTR unsigned char 
 12942 ;;		 -> ring_byte(5), 
 12943 ;;  clock_h         1    3[BANK0 ] unsigned char 
 12944 ;;  clock_m         1    4[BANK0 ] unsigned char 
 12945 ;;  clock_s         1    5[BANK0 ] unsigned char 
 12946 ;;  tem             1    6[BANK0 ] unsigned char 
 12947 ;;  lum             1    7[BANK0 ] unsigned char 
 12948 ;; Auto vars:     Size  Location     Type
 12949 ;;  _ring_byte      1    9[BANK0 ] PTR unsigned char 
 12950 ;;		 -> ring_byte(5), 
 12951 ;; Return value:  Size  Location     Type
 12952 ;;                  1    wreg      void 
 12953 ;; Registers used:
 12954 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12955 ;; Tracked objects:
 12956 ;;		On entry : 0/0
 12957 ;;		On exit  : 0/0
 12958 ;;		Unchanged: 0/0
 12959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12960 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12961 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12962 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12963 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12964 ;;Total ram usage:        7 bytes
 12965 ;; Hardware stack levels used:    1
 12966 ;; Hardware stack levels required when called:    6
 12967 ;; This function calls:
 12968 ;;		Nothing
 12969 ;; This function is called by:
 12970 ;;		_main
 12971 ;; This function uses a non-reentrant model
 12972 ;;
 12973                           
 12974                           
 12975                           ;psect for function _ring_buffer
 12976  0C53                     _ring_buffer:	
 12977                           
 12978                           ;incstack = 0
 12979                           ; Regs used in _ring_buffer: [wreg+fsr1l+fsr1h+status,2+status,0]
 12980                           ;ring_buffer@_ring_byte stored from wreg
 12981  0C53  0020               	movlb	0	; select bank0
 12982  0C54  00A9               	movwf	ring_buffer@_ring_byte
 12983  0C55                     l8123:	
 12984                           
 12985                           ;main.c: 675:     PIE4bits.TMR1IE = 0;
 12986  0C55  002E               	movlb	14	; select bank14
 12987  0C56  101A               	bcf	26,0	;volatile
 12988  0C57                     l8125:	
 12989                           
 12990                           ;main.c: 676:     _ring_byte[0] = clock_h;
 12991  0C57  0020               	movlb	0	; select bank0
 12992  0C58  0823               	movf	ring_buffer@clock_h,w
 12993  0C59  00A8               	movwf	??_ring_buffer
 12994  0C5A  0829               	movf	ring_buffer@_ring_byte,w
 12995  0C5B  0086               	movwf	6
 12996  0C5C  0187               	clrf	7
 12997  0C5D  0828               	movf	??_ring_buffer,w
 12998  0C5E  0081               	movwf	1
 12999                           
 13000                           ;main.c: 677:     _ring_byte[1] = clock_m;
 13001  0C5F  0824               	movf	ring_buffer@clock_m,w
 13002  0C60  00A8               	movwf	??_ring_buffer
 13003  0C61  0A29               	incf	ring_buffer@_ring_byte,w
 13004  0C62  0086               	movwf	6
 13005  0C63  0187               	clrf	7
 13006  0C64  0828               	movf	??_ring_buffer,w
 13007  0C65  0081               	movwf	1
 13008  0C66                     l8127:	
 13009                           
 13010                           ;main.c: 678:     _ring_byte[2] = clock_s;
 13011  0C66  0825               	movf	ring_buffer@clock_s,w
 13012  0C67  00A8               	movwf	??_ring_buffer
 13013  0C68  0829               	movf	ring_buffer@_ring_byte,w
 13014  0C69  3E02               	addlw	2
 13015  0C6A  0086               	movwf	6
 13016  0C6B  0187               	clrf	7
 13017  0C6C  0828               	movf	??_ring_buffer,w
 13018  0C6D  0081               	movwf	1
 13019  0C6E                     l8129:	
 13020                           
 13021                           ;main.c: 679:     PIE4bits.TMR1IE = 1;
 13022  0C6E  002E               	movlb	14	; select bank14
 13023  0C6F  141A               	bsf	26,0	;volatile
 13024  0C70                     l8131:	
 13025                           
 13026                           ;main.c: 680:     _ring_byte[3] = tem;
 13027  0C70  0020               	movlb	0	; select bank0
 13028  0C71  0826               	movf	ring_buffer@tem,w
 13029  0C72  00A8               	movwf	??_ring_buffer
 13030  0C73  0829               	movf	ring_buffer@_ring_byte,w
 13031  0C74  3E03               	addlw	3
 13032  0C75  0086               	movwf	6
 13033  0C76  0187               	clrf	7
 13034  0C77  0828               	movf	??_ring_buffer,w
 13035  0C78  0081               	movwf	1
 13036  0C79                     l8133:	
 13037                           
 13038                           ;main.c: 681:     _ring_byte[4] = lum;
 13039  0C79  0827               	movf	ring_buffer@lum,w
 13040  0C7A  00A8               	movwf	??_ring_buffer
 13041  0C7B  0829               	movf	ring_buffer@_ring_byte,w
 13042  0C7C  3E04               	addlw	4
 13043  0C7D  0086               	movwf	6
 13044  0C7E  0187               	clrf	7
 13045  0C7F  0828               	movf	??_ring_buffer,w
 13046  0C80  0081               	movwf	1
 13047  0C81                     l334:	
 13048  0C81  0008               	return
 13049  0C82                     __end_of_ring_buffer:	
 13050                           
 13051                           	psect	text3
 13052  0386                     __ptext3:	
 13053 ;; *************** function _recoverData *****************
 13054 ;; Defined at:
 13055 ;;		line 13 in file "eeprom_rw.c"
 13056 ;; Parameters:    Size  Location     Type
 13057 ;;		None
 13058 ;; Auto vars:     Size  Location     Type
 13059 ;;		None
 13060 ;; Return value:  Size  Location     Type
 13061 ;;                  1    wreg      void 
 13062 ;; Registers used:
 13063 ;;		wreg, status,2, status,0, pclath, cstack
 13064 ;; Tracked objects:
 13065 ;;		On entry : 0/0
 13066 ;;		On exit  : 0/0
 13067 ;;		Unchanged: 0/0
 13068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13071 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13072 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13073 ;;Total ram usage:        1 bytes
 13074 ;; Hardware stack levels used:    1
 13075 ;; Hardware stack levels required when called:    9
 13076 ;; This function calls:
 13077 ;;		_DATAEE_ReadByte
 13078 ;;		_DATAEE_WriteByte
 13079 ;;		_cksum
 13080 ;;		_cksum_w
 13081 ;;		_reset_recv
 13082 ;; This function is called by:
 13083 ;;		_main
 13084 ;; This function uses a non-reentrant model
 13085 ;;
 13086                           
 13087                           
 13088                           ;psect for function _recoverData
 13089  0386                     _recoverData:	
 13090  0386                     l8035:	
 13091                           ;incstack = 0
 13092                           ; Regs used in _recoverData: [wreg+status,2+status,0+pclath+cstack]
 13093                           
 13094                           
 13095                           ;eeprom_rw.c: 15:     if(DATAEE_ReadByte(0xF0FF - 10) == 0xAB){
 13096  0386  30F5               	movlw	245
 13097  0387  0020               	movlb	0	; select bank0
 13098  0388  00A3               	movwf	DATAEE_ReadByte@bAdd
 13099  0389  30F0               	movlw	240
 13100  038A  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 13101  038B  3188  2000  3183   	fcall	_DATAEE_ReadByte
 13102  038E  3AAB               	xorlw	171
 13103  038F  1D03               	skipz
 13104  0390  2B92               	goto	u4981
 13105  0391  2B93               	goto	u4980
 13106  0392                     u4981:	
 13107  0392  2BFD               	goto	l8041
 13108  0393                     u4980:	
 13109  0393                     l8037:	
 13110                           
 13111                           ;eeprom_rw.c: 16:         if(DATAEE_ReadByte(0xF0FF) == cksum()){
 13112  0393  318A  2273  3183   	fcall	_cksum
 13113  0396  0020               	movlb	0	; select bank0
 13114  0397  00AF               	movwf	??_recoverData
 13115  0398  30FF               	movlw	255
 13116  0399  00A3               	movwf	DATAEE_ReadByte@bAdd
 13117  039A  30F0               	movlw	240
 13118  039B  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 13119  039C  3188  2000  3183   	fcall	_DATAEE_ReadByte
 13120  039F  0020               	movlb	0	; select bank0
 13121  03A0  062F               	xorwf	??_recoverData,w
 13122  03A1  1D03               	skipz
 13123  03A2  2BA4               	goto	u4991
 13124  03A3  2BA5               	goto	u4990
 13125  03A4                     u4991:	
 13126  03A4  2BFD               	goto	l8041
 13127  03A5                     u4990:	
 13128  03A5                     l8039:	
 13129                           
 13130                           ;eeprom_rw.c: 17:             clkh = DATAEE_ReadByte(0xF0FF - 10 + 1);
 13131  03A5  30F6               	movlw	246
 13132  03A6  00A3               	movwf	DATAEE_ReadByte@bAdd
 13133  03A7  30F0               	movlw	240
 13134  03A8  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 13135  03A9  3188  2000  3183   	fcall	_DATAEE_ReadByte
 13136  03AC  0020               	movlb	0	; select bank0
 13137  03AD  00AF               	movwf	??_recoverData
 13138  03AE  082F               	movf	??_recoverData,w
 13139  03AF  00DF               	movwf	_clkh	;volatile
 13140                           
 13141                           ;eeprom_rw.c: 18:             clkm = DATAEE_ReadByte(0xF0FF - 10 + 2);
 13142  03B0  30F7               	movlw	247
 13143  03B1  00A3               	movwf	DATAEE_ReadByte@bAdd
 13144  03B2  30F0               	movlw	240
 13145  03B3  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 13146  03B4  3188  2000  3183   	fcall	_DATAEE_ReadByte
 13147  03B7  0020               	movlb	0	; select bank0
 13148  03B8  00AF               	movwf	??_recoverData
 13149  03B9  082F               	movf	??_recoverData,w
 13150  03BA  00DE               	movwf	_clkm	;volatile
 13151                           
 13152                           ;eeprom_rw.c: 19:             nreg = DATAEE_ReadByte(0xF0FF - 10 + 3);
 13153  03BB  30F8               	movlw	248
 13154  03BC  00A3               	movwf	DATAEE_ReadByte@bAdd
 13155  03BD  30F0               	movlw	240
 13156  03BE  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 13157  03BF  3188  2000  3183   	fcall	_DATAEE_ReadByte
 13158  03C2  0020               	movlb	0	; select bank0
 13159  03C3  00AF               	movwf	??_recoverData
 13160  03C4  082F               	movf	??_recoverData,w
 13161  03C5  00EA               	movwf	_nreg
 13162                           
 13163                           ;eeprom_rw.c: 20:             nreg_pt = DATAEE_ReadByte(0xF0FF - 10 + 4);
 13164  03C6  30F9               	movlw	249
 13165  03C7  00A3               	movwf	DATAEE_ReadByte@bAdd
 13166  03C8  30F0               	movlw	240
 13167  03C9  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 13168  03CA  3188  2000  3183   	fcall	_DATAEE_ReadByte
 13169  03CD  0020               	movlb	0	; select bank0
 13170  03CE  00AF               	movwf	??_recoverData
 13171  03CF  082F               	movf	??_recoverData,w
 13172  03D0  00E0               	movwf	_nreg_pt
 13173                           
 13174                           ;eeprom_rw.c: 21:             temp_thresh = DATAEE_ReadByte(0xF0FF - 10 + 5);
 13175  03D1  30FA               	movlw	250
 13176  03D2  00A3               	movwf	DATAEE_ReadByte@bAdd
 13177  03D3  30F0               	movlw	240
 13178  03D4  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 13179  03D5  3188  2000  3183   	fcall	_DATAEE_ReadByte
 13180  03D8  0020               	movlb	0	; select bank0
 13181  03D9  00AF               	movwf	??_recoverData
 13182  03DA  082F               	movf	??_recoverData,w
 13183  03DB  00E7               	movwf	_temp_thresh
 13184                           
 13185                           ;eeprom_rw.c: 22:             lum_thresh = DATAEE_ReadByte(0xF0FF - 10 + 6);
 13186  03DC  30FB               	movlw	251
 13187  03DD  00A3               	movwf	DATAEE_ReadByte@bAdd
 13188  03DE  30F0               	movlw	240
 13189  03DF  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 13190  03E0  3188  2000  3183   	fcall	_DATAEE_ReadByte
 13191  03E3  0020               	movlb	0	; select bank0
 13192  03E4  00AF               	movwf	??_recoverData
 13193  03E5  082F               	movf	??_recoverData,w
 13194  03E6  00E6               	movwf	_lum_thresh
 13195                           
 13196                           ;eeprom_rw.c: 23:             pmon = DATAEE_ReadByte(0xF0FF - 10 + 7);
 13197  03E7  30FC               	movlw	252
 13198  03E8  00A3               	movwf	DATAEE_ReadByte@bAdd
 13199  03E9  30F0               	movlw	240
 13200  03EA  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 13201  03EB  3188  2000  3183   	fcall	_DATAEE_ReadByte
 13202  03EE  0020               	movlb	0	; select bank0
 13203  03EF  00AF               	movwf	??_recoverData
 13204  03F0  082F               	movf	??_recoverData,w
 13205  03F1  00E9               	movwf	_pmon
 13206                           
 13207                           ;eeprom_rw.c: 24:             tala = DATAEE_ReadByte(0xF0FF - 10 + 8);
 13208  03F2  30FD               	movlw	253
 13209  03F3  00A3               	movwf	DATAEE_ReadByte@bAdd
 13210  03F4  30F0               	movlw	240
 13211  03F5  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 13212  03F6  3188  2000  3183   	fcall	_DATAEE_ReadByte
 13213  03F9  0020               	movlb	0	; select bank0
 13214  03FA  00AF               	movwf	??_recoverData
 13215  03FB  082F               	movf	??_recoverData,w
 13216  03FC  00E8               	movwf	_tala
 13217  03FD                     l8041:	
 13218                           
 13219                           ;eeprom_rw.c: 28:     reset_recv();
 13220  03FD  3189  21D9  3183   	fcall	_reset_recv
 13221  0400                     l8043:	
 13222                           
 13223                           ;eeprom_rw.c: 31:     DATAEE_WriteByte(0xF0FF - 10, 0xAB);
 13224  0400  30F5               	movlw	245
 13225  0401  0020               	movlb	0	; select bank0
 13226  0402  00A9               	movwf	DATAEE_WriteByte@bAdd
 13227  0403  30F0               	movlw	240
 13228  0404  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 13229  0405  30AB               	movlw	171
 13230  0406  00AF               	movwf	??_recoverData
 13231  0407  082F               	movf	??_recoverData,w
 13232  0408  00AB               	movwf	DATAEE_WriteByte@bData
 13233  0409  318A  22B6  3183   	fcall	_DATAEE_WriteByte
 13234  040C                     l8045:	
 13235                           
 13236                           ;eeprom_rw.c: 32:     DATAEE_WriteByte(0xF0FF - 10 + 3, nreg);
 13237  040C  30F8               	movlw	248
 13238  040D  0020               	movlb	0	; select bank0
 13239  040E  00A9               	movwf	DATAEE_WriteByte@bAdd
 13240  040F  30F0               	movlw	240
 13241  0410  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 13242  0411  086A               	movf	_nreg,w
 13243  0412  00AF               	movwf	??_recoverData
 13244  0413  082F               	movf	??_recoverData,w
 13245  0414  00AB               	movwf	DATAEE_WriteByte@bData
 13246  0415  318A  22B6  3183   	fcall	_DATAEE_WriteByte
 13247  0418                     l8047:	
 13248                           
 13249                           ;eeprom_rw.c: 33:     DATAEE_WriteByte(0xF0FF - 10 + 5, temp_thresh);
 13250  0418  30FA               	movlw	250
 13251  0419  0020               	movlb	0	; select bank0
 13252  041A  00A9               	movwf	DATAEE_WriteByte@bAdd
 13253  041B  30F0               	movlw	240
 13254  041C  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 13255  041D  0867               	movf	_temp_thresh,w
 13256  041E  00AF               	movwf	??_recoverData
 13257  041F  082F               	movf	??_recoverData,w
 13258  0420  00AB               	movwf	DATAEE_WriteByte@bData
 13259  0421  318A  22B6  3183   	fcall	_DATAEE_WriteByte
 13260  0424                     l8049:	
 13261                           
 13262                           ;eeprom_rw.c: 34:     DATAEE_WriteByte(0xF0FF - 10 + 6, lum_thresh);
 13263  0424  30FB               	movlw	251
 13264  0425  0020               	movlb	0	; select bank0
 13265  0426  00A9               	movwf	DATAEE_WriteByte@bAdd
 13266  0427  30F0               	movlw	240
 13267  0428  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 13268  0429  0866               	movf	_lum_thresh,w
 13269  042A  00AF               	movwf	??_recoverData
 13270  042B  082F               	movf	??_recoverData,w
 13271  042C  00AB               	movwf	DATAEE_WriteByte@bData
 13272  042D  318A  22B6  3183   	fcall	_DATAEE_WriteByte
 13273  0430                     l8051:	
 13274                           
 13275                           ;eeprom_rw.c: 35:     DATAEE_WriteByte(0xF0FF - 10 + 7, pmon);
 13276  0430  30FC               	movlw	252
 13277  0431  0020               	movlb	0	; select bank0
 13278  0432  00A9               	movwf	DATAEE_WriteByte@bAdd
 13279  0433  30F0               	movlw	240
 13280  0434  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 13281  0435  0869               	movf	_pmon,w
 13282  0436  00AF               	movwf	??_recoverData
 13283  0437  082F               	movf	??_recoverData,w
 13284  0438  00AB               	movwf	DATAEE_WriteByte@bData
 13285  0439  318A  22B6  3183   	fcall	_DATAEE_WriteByte
 13286  043C                     l8053:	
 13287                           
 13288                           ;eeprom_rw.c: 36:     DATAEE_WriteByte(0xF0FF - 10 + 8, tala);
 13289  043C  30FD               	movlw	253
 13290  043D  0020               	movlb	0	; select bank0
 13291  043E  00A9               	movwf	DATAEE_WriteByte@bAdd
 13292  043F  30F0               	movlw	240
 13293  0440  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 13294  0441  0868               	movf	_tala,w
 13295  0442  00AF               	movwf	??_recoverData
 13296  0443  082F               	movf	??_recoverData,w
 13297  0444  00AB               	movwf	DATAEE_WriteByte@bData
 13298  0445  318A  22B6  3183   	fcall	_DATAEE_WriteByte
 13299  0448                     l8055:	
 13300                           
 13301                           ;eeprom_rw.c: 37:     cksum_w();
 13302  0448  3197  27BE  3183   	fcall	_cksum_w
 13303  044B                     l514:	
 13304  044B  0008               	return
 13305  044C                     __end_of_recoverData:	
 13306                           
 13307                           	psect	text4
 13308  09D9                     __ptext4:	
 13309 ;; *************** function _reset_recv *****************
 13310 ;; Defined at:
 13311 ;;		line 81 in file "eeprom_rw.c"
 13312 ;; Parameters:    Size  Location     Type
 13313 ;;		None
 13314 ;; Auto vars:     Size  Location     Type
 13315 ;;  i               2   13[BANK0 ] unsigned int 
 13316 ;; Return value:  Size  Location     Type
 13317 ;;                  1    wreg      void 
 13318 ;; Registers used:
 13319 ;;		wreg, status,2, status,0, pclath, cstack
 13320 ;; Tracked objects:
 13321 ;;		On entry : 0/0
 13322 ;;		On exit  : 0/0
 13323 ;;		Unchanged: 0/0
 13324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13326 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13328 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13329 ;;Total ram usage:        2 bytes
 13330 ;; Hardware stack levels used:    1
 13331 ;; Hardware stack levels required when called:    7
 13332 ;; This function calls:
 13333 ;;		_DATAEE_WriteByte
 13334 ;; This function is called by:
 13335 ;;		_recoverData
 13336 ;; This function uses a non-reentrant model
 13337 ;;
 13338                           
 13339                           
 13340                           ;psect for function _reset_recv
 13341  09D9                     _reset_recv:	
 13342  09D9                     l7781:	
 13343                           ;incstack = 0
 13344                           ; Regs used in _reset_recv: [wreg+status,2+status,0+pclath+cstack]
 13345                           
 13346                           
 13347                           ;eeprom_rw.c: 83:     for(unsigned int i = 0xF0FF - 10; i <= 0xF0FF; i ++)
 13348  09D9  30F5               	movlw	245
 13349  09DA  0020               	movlb	0	; select bank0
 13350  09DB  00AD               	movwf	reset_recv@i
 13351  09DC  30F0               	movlw	240
 13352  09DD  00AE               	movwf	reset_recv@i+1
 13353  09DE                     l7785:	
 13354                           
 13355                           ;eeprom_rw.c: 84:         DATAEE_WriteByte(i, 0);
 13356  09DE  082E               	movf	reset_recv@i+1,w
 13357  09DF  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 13358  09E0  082D               	movf	reset_recv@i,w
 13359  09E1  00A9               	movwf	DATAEE_WriteByte@bAdd
 13360  09E2  01AB               	clrf	DATAEE_WriteByte@bData
 13361  09E3  318A  22B6  3189   	fcall	_DATAEE_WriteByte
 13362  09E6                     l7787:	
 13363  09E6  3001               	movlw	1
 13364  09E7  0020               	movlb	0	; select bank0
 13365  09E8  07AD               	addwf	reset_recv@i,f
 13366  09E9  3000               	movlw	0
 13367  09EA  3DAE               	addwfc	reset_recv@i+1,f
 13368  09EB                     l7789:	
 13369  09EB  30F1               	movlw	241
 13370  09EC  022E               	subwf	reset_recv@i+1,w
 13371  09ED  3000               	movlw	0
 13372  09EE  1903               	skipnz
 13373  09EF  022D               	subwf	reset_recv@i,w
 13374  09F0  1C03               	skipc
 13375  09F1  29F3               	goto	u4881
 13376  09F2  29F4               	goto	u4880
 13377  09F3                     u4881:	
 13378  09F3  29DE               	goto	l7785
 13379  09F4                     u4880:	
 13380  09F4                     l541:	
 13381  09F4  0008               	return
 13382  09F5                     __end_of_reset_recv:	
 13383                           
 13384                           	psect	text5
 13385  17BE                     __ptext5:	
 13386 ;; *************** function _cksum_w *****************
 13387 ;; Defined at:
 13388 ;;		line 67 in file "eeprom_rw.c"
 13389 ;; Parameters:    Size  Location     Type
 13390 ;;		None
 13391 ;; Auto vars:     Size  Location     Type
 13392 ;;		None
 13393 ;; Return value:  Size  Location     Type
 13394 ;;                  1    wreg      void 
 13395 ;; Registers used:
 13396 ;;		wreg, status,2, status,0, pclath, cstack
 13397 ;; Tracked objects:
 13398 ;;		On entry : 0/0
 13399 ;;		On exit  : 0/0
 13400 ;;		Unchanged: 0/0
 13401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13404 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13405 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13406 ;;Total ram usage:        1 bytes
 13407 ;; Hardware stack levels used:    1
 13408 ;; Hardware stack levels required when called:    8
 13409 ;; This function calls:
 13410 ;;		_DATAEE_WriteByte
 13411 ;;		_cksum
 13412 ;; This function is called by:
 13413 ;;		_main
 13414 ;;		_save_recovery_params
 13415 ;;		_recoverData
 13416 ;; This function uses a non-reentrant model
 13417 ;;
 13418                           
 13419                           
 13420                           ;psect for function _cksum_w
 13421  17BE                     _cksum_w:	
 13422  17BE                     l7725:	
 13423                           ;incstack = 0
 13424                           ; Regs used in _cksum_w: [wreg+status,2+status,0+pclath+cstack]
 13425                           
 13426                           
 13427                           ;eeprom_rw.c: 69:     DATAEE_WriteByte(0xF0FF, cksum());
 13428  17BE  30FF               	movlw	255
 13429  17BF  0020               	movlb	0	; select bank0
 13430  17C0  00A9               	movwf	DATAEE_WriteByte@bAdd
 13431  17C1  30F0               	movlw	240
 13432  17C2  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 13433  17C3  318A  2273  3197   	fcall	_cksum
 13434  17C6  0020               	movlb	0	; select bank0
 13435  17C7  00AD               	movwf	??_cksum_w
 13436  17C8  082D               	movf	??_cksum_w,w
 13437  17C9  00AB               	movwf	DATAEE_WriteByte@bData
 13438  17CA  318A  22B6  3197   	fcall	_DATAEE_WriteByte
 13439  17CD                     l531:	
 13440  17CD  0008               	return
 13441  17CE                     __end_of_cksum_w:	
 13442                           
 13443                           	psect	text6
 13444  0A73                     __ptext6:	
 13445 ;; *************** function _cksum *****************
 13446 ;; Defined at:
 13447 ;;		line 72 in file "eeprom_rw.c"
 13448 ;; Parameters:    Size  Location     Type
 13449 ;;		None
 13450 ;; Auto vars:     Size  Location     Type
 13451 ;;  i               2    7[BANK0 ] unsigned int 
 13452 ;;  res             1    6[BANK0 ] unsigned char 
 13453 ;; Return value:  Size  Location     Type
 13454 ;;                  1    wreg      unsigned char 
 13455 ;; Registers used:
 13456 ;;		wreg, status,2, status,0, pclath, cstack
 13457 ;; Tracked objects:
 13458 ;;		On entry : 0/0
 13459 ;;		On exit  : 0/0
 13460 ;;		Unchanged: 0/0
 13461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13463 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13464 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13465 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13466 ;;Total ram usage:        4 bytes
 13467 ;; Hardware stack levels used:    1
 13468 ;; Hardware stack levels required when called:    7
 13469 ;; This function calls:
 13470 ;;		_DATAEE_ReadByte
 13471 ;; This function is called by:
 13472 ;;		_recoverData
 13473 ;;		_cksum_w
 13474 ;; This function uses a non-reentrant model
 13475 ;;
 13476                           
 13477                           
 13478                           ;psect for function _cksum
 13479  0A73                     _cksum:	
 13480  0A73                     l7657:	
 13481                           ;incstack = 0
 13482                           ; Regs used in _cksum: [wreg+status,2+status,0+pclath+cstack]
 13483                           
 13484                           
 13485                           ;eeprom_rw.c: 74:     unsigned char res = 0;
 13486  0A73  0020               	movlb	0	; select bank0
 13487  0A74  01A6               	clrf	cksum@res
 13488  0A75                     l7659:	
 13489                           
 13490                           ;eeprom_rw.c: 75:     for(unsigned int i = 0xF0FF - 10; i < 0xF0FF; i ++) {
 13491  0A75  30F5               	movlw	245
 13492  0A76  00A7               	movwf	cksum@i
 13493  0A77  30F0               	movlw	240
 13494  0A78  00A8               	movwf	cksum@i+1
 13495  0A79                     l7665:	
 13496                           
 13497                           ;eeprom_rw.c: 76:         res += DATAEE_ReadByte(i);
 13498  0A79  0828               	movf	cksum@i+1,w
 13499  0A7A  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 13500  0A7B  0827               	movf	cksum@i,w
 13501  0A7C  00A3               	movwf	DATAEE_ReadByte@bAdd
 13502  0A7D  3188  2000  318A   	fcall	_DATAEE_ReadByte
 13503  0A80  0020               	movlb	0	; select bank0
 13504  0A81  00A5               	movwf	??_cksum
 13505  0A82  0825               	movf	??_cksum,w
 13506  0A83  07A6               	addwf	cksum@res,f
 13507  0A84                     l7667:	
 13508                           
 13509                           ;eeprom_rw.c: 77:     }
 13510  0A84  3001               	movlw	1
 13511  0A85  07A7               	addwf	cksum@i,f
 13512  0A86  3000               	movlw	0
 13513  0A87  3DA8               	addwfc	cksum@i+1,f
 13514  0A88                     l7669:	
 13515  0A88  30F0               	movlw	240
 13516  0A89  0228               	subwf	cksum@i+1,w
 13517  0A8A  30FF               	movlw	255
 13518  0A8B  1903               	skipnz
 13519  0A8C  0227               	subwf	cksum@i,w
 13520  0A8D  1C03               	skipc
 13521  0A8E  2A90               	goto	u4761
 13522  0A8F  2A91               	goto	u4760
 13523  0A90                     u4761:	
 13524  0A90  2A79               	goto	l7665
 13525  0A91                     u4760:	
 13526  0A91                     l7671:	
 13527                           
 13528                           ;eeprom_rw.c: 78:     return res;
 13529  0A91  0826               	movf	cksum@res,w
 13530  0A92                     l536:	
 13531  0A92  0008               	return
 13532  0A93                     __end_of_cksum:	
 13533                           
 13534                           	psect	text7
 13535  057C                     __ptext7:	
 13536 ;; *************** function _read_str_UART *****************
 13537 ;; Defined at:
 13538 ;;		line 34 in file "uartusr.c"
 13539 ;; Parameters:    Size  Location     Type
 13540 ;;  buff            1    wreg     PTR unsigned char 
 13541 ;;		 -> str_rc(16), 
 13542 ;;  max_len         1   13[BANK0 ] unsigned char 
 13543 ;; Auto vars:     Size  Location     Type
 13544 ;;  buff            1   17[BANK0 ] PTR unsigned char 
 13545 ;;		 -> str_rc(16), 
 13546 ;;  rxData          1   18[BANK0 ] volatile unsigned char 
 13547 ;;  i               1   16[BANK0 ] unsigned char 
 13548 ;; Return value:  Size  Location     Type
 13549 ;;                  1    wreg      unsigned char 
 13550 ;; Registers used:
 13551 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13552 ;; Tracked objects:
 13553 ;;		On entry : 0/0
 13554 ;;		On exit  : 0/0
 13555 ;;		Unchanged: 0/0
 13556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13557 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13558 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13559 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13560 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13561 ;;Total ram usage:        6 bytes
 13562 ;; Hardware stack levels used:    1
 13563 ;; Hardware stack levels required when called:    9
 13564 ;; This function calls:
 13565 ;;		_dump_UART_FIFO
 13566 ;;		_memset
 13567 ;;		_read_UART
 13568 ;;		_write_str_UART
 13569 ;; This function is called by:
 13570 ;;		_main
 13571 ;; This function uses a non-reentrant model
 13572 ;;
 13573                           
 13574                           
 13575                           ;psect for function _read_str_UART
 13576  057C                     _read_str_UART:	
 13577                           
 13578                           ;incstack = 0
 13579                           ; Regs used in _read_str_UART: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13580                           ;read_str_UART@buff stored from wreg
 13581  057C  0020               	movlb	0	; select bank0
 13582  057D  00B1               	movwf	read_str_UART@buff
 13583  057E                     l8057:	
 13584                           
 13585                           ;uartusr.c: 36:     volatile uint8_t rxData = '0';
 13586  057E  3030               	movlw	48
 13587  057F  00AE               	movwf	??_read_str_UART
 13588  0580  082E               	movf	??_read_str_UART,w
 13589  0581  00B2               	movwf	read_str_UART@rxData	;volatile
 13590  0582                     l8059:	
 13591                           
 13592                           ;uartusr.c: 37:     uint8_t i=0;
 13593  0582  01B0               	clrf	read_str_UART@i
 13594  0583                     l8061:	
 13595                           
 13596                           ;uartusr.c: 38:     memset(buff, 0, max_len);
 13597  0583  3000               	movlw	0
 13598  0584  00A3               	movwf	memset@c
 13599  0585  00A4               	movwf	memset@c+1
 13600  0586  082D               	movf	read_str_UART@max_len,w
 13601  0587  00AE               	movwf	??_read_str_UART
 13602  0588  01AF               	clrf	??_read_str_UART+1
 13603  0589  082E               	movf	??_read_str_UART,w
 13604  058A  00A5               	movwf	memset@n
 13605  058B  082F               	movf	??_read_str_UART+1,w
 13606  058C  00A6               	movwf	memset@n+1
 13607  058D  0831               	movf	read_str_UART@buff,w
 13608  058E  3184  244C  3185   	fcall	_memset
 13609  0591                     l8063:	
 13610                           
 13611                           ;uartusr.c: 40:     rxData = read_UART();
 13612  0591  3188  2042  3185   	fcall	_read_UART
 13613  0594  0020               	movlb	0	; select bank0
 13614  0595  00AE               	movwf	??_read_str_UART
 13615  0596  082E               	movf	??_read_str_UART,w
 13616  0597  00B2               	movwf	read_str_UART@rxData	;volatile
 13617  0598                     l8065:	
 13618                           
 13619                           ;uartusr.c: 41:     if( rxData == (char)0x3A ){
 13620  0598  303A               	movlw	58
 13621  0599  0632               	xorwf	read_str_UART@rxData,w	;volatile
 13622  059A  1D03               	btfss	3,2
 13623  059B  2D9D               	goto	u5001
 13624  059C  2D9E               	goto	u5000
 13625  059D                     u5001:	
 13626  059D  2DC9               	goto	l8081
 13627  059E                     u5000:	
 13628  059E                     l8067:	
 13629                           
 13630                           ;uartusr.c: 42:         for(i=0; i < max_len && (rxData !='\n'&& rxData != (char)0x3F );
      +                           i++){
 13631  059E  01B0               	clrf	read_str_UART@i
 13632  059F  2DB6               	goto	l8075
 13633  05A0                     l8069:	
 13634                           
 13635                           ;uartusr.c: 43:                 buff[i] = rxData;
 13636  05A0  0832               	movf	read_str_UART@rxData,w	;volatile
 13637  05A1  00AE               	movwf	??_read_str_UART
 13638  05A2  0830               	movf	read_str_UART@i,w
 13639  05A3  0731               	addwf	read_str_UART@buff,w
 13640  05A4  00AF               	movwf	??_read_str_UART+1
 13641  05A5  082F               	movf	??_read_str_UART+1,w
 13642  05A6  0086               	movwf	6
 13643  05A7  3001               	movlw	1	; select bank2/3
 13644  05A8  0087               	movwf	7
 13645  05A9  082E               	movf	??_read_str_UART,w
 13646  05AA  0081               	movwf	1
 13647  05AB                     l8071:	
 13648                           
 13649                           ;uartusr.c: 45:                 rxData = read_UART();
 13650  05AB  3188  2042  3185   	fcall	_read_UART
 13651  05AE  0020               	movlb	0	; select bank0
 13652  05AF  00AE               	movwf	??_read_str_UART
 13653  05B0  082E               	movf	??_read_str_UART,w
 13654  05B1  00B2               	movwf	read_str_UART@rxData	;volatile
 13655  05B2                     l8073:	
 13656                           
 13657                           ;uartusr.c: 47:            }
 13658  05B2  3001               	movlw	1
 13659  05B3  00AE               	movwf	??_read_str_UART
 13660  05B4  082E               	movf	??_read_str_UART,w
 13661  05B5  07B0               	addwf	read_str_UART@i,f
 13662  05B6                     l8075:	
 13663  05B6  082D               	movf	read_str_UART@max_len,w
 13664  05B7  0230               	subwf	read_str_UART@i,w
 13665  05B8  1803               	skipnc
 13666  05B9  2DBB               	goto	u5011
 13667  05BA  2DBC               	goto	u5010
 13668  05BB                     u5011:	
 13669  05BB  2DC9               	goto	l8081
 13670  05BC                     u5010:	
 13671  05BC                     l8077:	
 13672  05BC  300A               	movlw	10
 13673  05BD  0632               	xorwf	read_str_UART@rxData,w	;volatile
 13674  05BE  1903               	btfsc	3,2
 13675  05BF  2DC1               	goto	u5021
 13676  05C0  2DC2               	goto	u5020
 13677  05C1                     u5021:	
 13678  05C1  2DC9               	goto	l658
 13679  05C2                     u5020:	
 13680  05C2                     l8079:	
 13681  05C2  303F               	movlw	63
 13682  05C3  0632               	xorwf	read_str_UART@rxData,w	;volatile
 13683  05C4  1D03               	btfss	3,2
 13684  05C5  2DC7               	goto	u5031
 13685  05C6  2DC8               	goto	u5030
 13686  05C7                     u5031:	
 13687  05C7  2DA0               	goto	l8069
 13688  05C8                     u5030:	
 13689  05C8  2DC9               	goto	l8081
 13690  05C9                     l658:	
 13691  05C9                     l8081:	
 13692                           
 13693                           ;uartusr.c: 49:     dump_UART_FIFO();
 13694  05C9  3189  213B  3185   	fcall	_dump_UART_FIFO
 13695  05CC                     l8083:	
 13696                           
 13697                           ;uartusr.c: 51:     buff[i+1] = '\0';
 13698  05CC  0020               	movlb	0	; select bank0
 13699  05CD  0830               	movf	read_str_UART@i,w
 13700  05CE  0731               	addwf	read_str_UART@buff,w
 13701  05CF  00AE               	movwf	??_read_str_UART
 13702  05D0  0A2E               	incf	??_read_str_UART,w
 13703  05D1  0086               	movwf	6
 13704  05D2  3001               	movlw	1	; select bank2/3
 13705  05D3  0087               	movwf	7
 13706  05D4  0181               	clrf	1
 13707  05D5                     l8085:	
 13708                           
 13709                           ;uartusr.c: 52:     write_str_UART(buff, max_len);
 13710  05D5  082D               	movf	read_str_UART@max_len,w
 13711  05D6  00AE               	movwf	??_read_str_UART
 13712  05D7  082E               	movf	??_read_str_UART,w
 13713  05D8  00A6               	movwf	write_str_UART@size
 13714  05D9  0831               	movf	read_str_UART@buff,w
 13715  05DA  318B  2325  3185   	fcall	_write_str_UART
 13716  05DD                     l659:	
 13717  05DD  0008               	return
 13718  05DE                     __end_of_read_str_UART:	
 13719                           
 13720                           	psect	text8
 13721  0B25                     __ptext8:	
 13722 ;; *************** function _write_str_UART *****************
 13723 ;; Defined at:
 13724 ;;		line 118 in file "uartusr.c"
 13725 ;; Parameters:    Size  Location     Type
 13726 ;;  string          1    wreg     PTR unsigned char 
 13727 ;;		 -> str_rc(16), str_snd(16), 
 13728 ;;  size            1    6[BANK0 ] unsigned char 
 13729 ;; Auto vars:     Size  Location     Type
 13730 ;;  string          1    8[BANK0 ] PTR unsigned char 
 13731 ;;		 -> str_rc(16), str_snd(16), 
 13732 ;;  id              1    9[BANK0 ] unsigned char 
 13733 ;; Return value:  Size  Location     Type
 13734 ;;                  1    wreg      void 
 13735 ;; Registers used:
 13736 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13737 ;; Tracked objects:
 13738 ;;		On entry : 0/0
 13739 ;;		On exit  : 0/0
 13740 ;;		Unchanged: 0/0
 13741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13742 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13743 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13744 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13745 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13746 ;;Total ram usage:        4 bytes
 13747 ;; Hardware stack levels used:    1
 13748 ;; Hardware stack levels required when called:    8
 13749 ;; This function calls:
 13750 ;;		_write_UART
 13751 ;; This function is called by:
 13752 ;;		_main
 13753 ;;		_read_str_UART
 13754 ;;		_echo
 13755 ;; This function uses a non-reentrant model
 13756 ;;
 13757                           
 13758                           
 13759                           ;psect for function _write_str_UART
 13760  0B25                     _write_str_UART:	
 13761                           
 13762                           ;incstack = 0
 13763                           ; Regs used in _write_str_UART: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13764                           ;write_str_UART@string stored from wreg
 13765  0B25  0020               	movlb	0	; select bank0
 13766  0B26  00A8               	movwf	write_str_UART@string
 13767  0B27                     l7715:	
 13768                           
 13769                           ;uartusr.c: 119:     uint8_t id;;uartusr.c: 121:     for(id=0; id <= size && string[id]!
      +                          = '\0'; ++id){
 13770  0B27  01A9               	clrf	write_str_UART@id
 13771  0B28  2B39               	goto	l7721
 13772  0B29                     l7717:	
 13773                           
 13774                           ;uartusr.c: 123:         write_UART(string[id]);
 13775  0B29  0829               	movf	write_str_UART@id,w
 13776  0B2A  0728               	addwf	write_str_UART@string,w
 13777  0B2B  00A7               	movwf	??_write_str_UART
 13778  0B2C  0827               	movf	??_write_str_UART,w
 13779  0B2D  0086               	movwf	6
 13780  0B2E  3001               	movlw	1	; select bank2/3
 13781  0B2F  0087               	movwf	7
 13782  0B30  0801               	movf	1,w
 13783  0B31  3188  20F1  318B   	fcall	_write_UART
 13784  0B34                     l7719:	
 13785                           
 13786                           ;uartusr.c: 124:     }
 13787  0B34  3001               	movlw	1
 13788  0B35  0020               	movlb	0	; select bank0
 13789  0B36  00A7               	movwf	??_write_str_UART
 13790  0B37  0827               	movf	??_write_str_UART,w
 13791  0B38  07A9               	addwf	write_str_UART@id,f
 13792  0B39                     l7721:	
 13793  0B39  0829               	movf	write_str_UART@id,w
 13794  0B3A  0226               	subwf	write_str_UART@size,w
 13795  0B3B  1C03               	skipc
 13796  0B3C  2B3E               	goto	u4811
 13797  0B3D  2B3F               	goto	u4810
 13798  0B3E                     u4811:	
 13799  0B3E  2B4B               	goto	l697
 13800  0B3F                     u4810:	
 13801  0B3F                     l7723:	
 13802  0B3F  0829               	movf	write_str_UART@id,w
 13803  0B40  0728               	addwf	write_str_UART@string,w
 13804  0B41  00A7               	movwf	??_write_str_UART
 13805  0B42  0827               	movf	??_write_str_UART,w
 13806  0B43  0086               	movwf	6
 13807  0B44  3001               	movlw	1	; select bank2/3
 13808  0B45  0087               	movwf	7
 13809  0B46  0801               	movf	1,w
 13810  0B47  1D03               	btfss	3,2
 13811  0B48  2B4A               	goto	u4821
 13812  0B49  2B4B               	goto	u4820
 13813  0B4A                     u4821:	
 13814  0B4A  2B29               	goto	l7717
 13815  0B4B                     u4820:	
 13816  0B4B                     l697:	
 13817  0B4B  0008               	return
 13818  0B4C                     __end_of_write_str_UART:	
 13819                           
 13820                           	psect	text9
 13821  08F1                     __ptext9:	
 13822 ;; *************** function _write_UART *****************
 13823 ;; Defined at:
 13824 ;;		line 130 in file "uartusr.c"
 13825 ;; Parameters:    Size  Location     Type
 13826 ;;  rxData          1    wreg     unsigned char 
 13827 ;; Auto vars:     Size  Location     Type
 13828 ;;  rxData          1    5[BANK0 ] unsigned char 
 13829 ;; Return value:  Size  Location     Type
 13830 ;;                  1    wreg      void 
 13831 ;; Registers used:
 13832 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13833 ;; Tracked objects:
 13834 ;;		On entry : 0/0
 13835 ;;		On exit  : 0/0
 13836 ;;		Unchanged: 0/0
 13837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13839 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13841 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13842 ;;Total ram usage:        1 bytes
 13843 ;; Hardware stack levels used:    1
 13844 ;; Hardware stack levels required when called:    7
 13845 ;; This function calls:
 13846 ;;		_EUSART_Write
 13847 ;;		_EUSART_is_tx_done
 13848 ;;		_EUSART_is_tx_ready
 13849 ;; This function is called by:
 13850 ;;		_write_str_UART
 13851 ;; This function uses a non-reentrant model
 13852 ;;
 13853                           
 13854                           
 13855                           ;psect for function _write_UART
 13856  08F1                     _write_UART:	
 13857                           
 13858                           ;incstack = 0
 13859                           ; Regs used in _write_UART: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13860                           ;write_UART@rxData stored from wreg
 13861  08F1  0020               	movlb	0	; select bank0
 13862  08F2  00A5               	movwf	write_UART@rxData
 13863  08F3                     l7697:	
 13864  08F3                     l7699:	
 13865                           ;uartusr.c: 132:    while(!EUSART_is_tx_done());
 13866                           
 13867  08F3  3196  262F  3188   	fcall	_EUSART_is_tx_done
 13868  08F6  3A00               	xorlw	0
 13869  08F7  1903               	skipnz
 13870  08F8  28FA               	goto	u4791
 13871  08F9  28FB               	goto	u4790
 13872  08FA                     u4791:	
 13873  08FA  28F3               	goto	l7699
 13874  08FB                     u4790:	
 13875  08FB                     l7701:	
 13876                           
 13877                           ;uartusr.c: 134:    if(EUSART_is_tx_ready())
 13878  08FB  3197  271D  3188   	fcall	_EUSART_is_tx_ready
 13879  08FE  3A00               	xorlw	0
 13880  08FF  1903               	skipnz
 13881  0900  2902               	goto	u4801
 13882  0901  2903               	goto	u4800
 13883  0902                     u4801:	
 13884  0902  2908               	goto	l704
 13885  0903                     u4800:	
 13886  0903                     l7703:	
 13887                           
 13888                           ;uartusr.c: 135:     {;uartusr.c: 137:         EUSART_Write(rxData);
 13889  0903  0020               	movlb	0	; select bank0
 13890  0904  0825               	movf	write_UART@rxData,w
 13891  0905  318B  23CC  3188   	fcall	_EUSART_Write
 13892  0908                     l704:	
 13893  0908  0008               	return
 13894  0909                     __end_of_write_UART:	
 13895                           
 13896                           	psect	text10
 13897  171D                     __ptext10:	
 13898 ;; *************** function _EUSART_is_tx_ready *****************
 13899 ;; Defined at:
 13900 ;;		line 132 in file "mcc_generated_files/eusart.c"
 13901 ;; Parameters:    Size  Location     Type
 13902 ;;		None
 13903 ;; Auto vars:     Size  Location     Type
 13904 ;;		None
 13905 ;; Return value:  Size  Location     Type
 13906 ;;                  1    wreg      _Bool 
 13907 ;; Registers used:
 13908 ;;		wreg, status,2, status,0
 13909 ;; Tracked objects:
 13910 ;;		On entry : 0/0
 13911 ;;		On exit  : 0/0
 13912 ;;		Unchanged: 0/0
 13913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13918 ;;Total ram usage:        0 bytes
 13919 ;; Hardware stack levels used:    1
 13920 ;; Hardware stack levels required when called:    6
 13921 ;; This function calls:
 13922 ;;		Nothing
 13923 ;; This function is called by:
 13924 ;;		_write_UART
 13925 ;;		_echo
 13926 ;; This function uses a non-reentrant model
 13927 ;;
 13928                           
 13929                           
 13930                           ;psect for function _EUSART_is_tx_ready
 13931  171D                     _EUSART_is_tx_ready:	
 13932  171D                     l7451:	
 13933                           ;incstack = 0
 13934                           ; Regs used in _EUSART_is_tx_ready: [wreg+status,2+status,0]
 13935                           
 13936                           
 13937                           ;mcc_generated_files/eusart.c: 134:     return (eusartTxBufferRemaining ? 1 : 0);
 13938  171D  0020               	movlb	0	; select bank0
 13939  171E  086B               	movf	_eusartTxBufferRemaining,w	;volatile
 13940  171F  1D03               	btfss	3,2
 13941  1720  2F22               	goto	u4571
 13942  1721  2F24               	goto	u4570
 13943  1722                     u4571:	
 13944  1722  3001               	movlw	1
 13945  1723  2F25               	goto	u4580
 13946  1724                     u4570:	
 13947  1724  3000               	movlw	0
 13948  1725                     u4580:	
 13949  1725                     l782:	
 13950  1725  0008               	return
 13951  1726                     __end_of_EUSART_is_tx_ready:	
 13952                           
 13953                           	psect	text11
 13954  162F                     __ptext11:	
 13955 ;; *************** function _EUSART_is_tx_done *****************
 13956 ;; Defined at:
 13957 ;;		line 142 in file "mcc_generated_files/eusart.c"
 13958 ;; Parameters:    Size  Location     Type
 13959 ;;		None
 13960 ;; Auto vars:     Size  Location     Type
 13961 ;;		None
 13962 ;; Return value:  Size  Location     Type
 13963 ;;                  1    wreg      _Bool 
 13964 ;; Registers used:
 13965 ;;		wreg, status,2, status,0
 13966 ;; Tracked objects:
 13967 ;;		On entry : 0/0
 13968 ;;		On exit  : 0/0
 13969 ;;		Unchanged: 0/0
 13970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13975 ;;Total ram usage:        0 bytes
 13976 ;; Hardware stack levels used:    1
 13977 ;; Hardware stack levels required when called:    6
 13978 ;; This function calls:
 13979 ;;		Nothing
 13980 ;; This function is called by:
 13981 ;;		_write_UART
 13982 ;; This function uses a non-reentrant model
 13983 ;;
 13984                           
 13985                           
 13986                           ;psect for function _EUSART_is_tx_done
 13987  162F                     _EUSART_is_tx_done:	
 13988  162F                     l7473:	
 13989                           ;incstack = 0
 13990                           ; Regs used in _EUSART_is_tx_done: [wreg+status,2+status,0]
 13991                           
 13992                           
 13993                           ;mcc_generated_files/eusart.c: 144:     return TX1STAbits.TRMT;
 13994  162F  0022               	movlb	2	; select bank2
 13995  1630  0C1E               	rrf	30,w	;volatile
 13996  1631  3901               	andlw	1
 13997  1632                     l788:	
 13998  1632  0008               	return
 13999  1633                     __end_of_EUSART_is_tx_done:	
 14000                           
 14001                           	psect	text12
 14002  0BCC                     __ptext12:	
 14003 ;; *************** function _EUSART_Write *****************
 14004 ;; Defined at:
 14005 ;;		line 173 in file "mcc_generated_files/eusart.c"
 14006 ;; Parameters:    Size  Location     Type
 14007 ;;  txData          1    wreg     unsigned char 
 14008 ;; Auto vars:     Size  Location     Type
 14009 ;;  txData          1    4[BANK0 ] unsigned char 
 14010 ;; Return value:  Size  Location     Type
 14011 ;;                  1    wreg      void 
 14012 ;; Registers used:
 14013 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14014 ;; Tracked objects:
 14015 ;;		On entry : 0/0
 14016 ;;		On exit  : 0/0
 14017 ;;		Unchanged: 0/0
 14018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14020 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14021 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14022 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14023 ;;Total ram usage:        2 bytes
 14024 ;; Hardware stack levels used:    1
 14025 ;; Hardware stack levels required when called:    6
 14026 ;; This function calls:
 14027 ;;		Nothing
 14028 ;; This function is called by:
 14029 ;;		_write_UART
 14030 ;;		_echo
 14031 ;;		_putch
 14032 ;; This function uses a non-reentrant model
 14033 ;;
 14034                           
 14035                           
 14036                           ;psect for function _EUSART_Write
 14037  0BCC                     _EUSART_Write:	
 14038                           
 14039                           ;incstack = 0
 14040                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 14041                           ;EUSART_Write@txData stored from wreg
 14042  0BCC  0020               	movlb	0	; select bank0
 14043  0BCD  00A4               	movwf	EUSART_Write@txData
 14044  0BCE                     l7455:	
 14045  0BCE                     l7457:	
 14046                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
 14047                           
 14048                           
 14049                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
 14050  0BCE  086B               	movf	_eusartTxBufferRemaining,w	;volatile
 14051  0BCF  1903               	btfsc	3,2
 14052  0BD0  2BD2               	goto	u4591
 14053  0BD1  2BD3               	goto	u4590
 14054  0BD2                     u4591:	
 14055  0BD2  2BCE               	goto	l7457
 14056  0BD3                     u4590:	
 14057  0BD3                     l803:	
 14058                           
 14059                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE3bits.TXIE)
 14060  0BD3  002E               	movlb	14	; select bank14
 14061  0BD4  1A19               	btfsc	25,4	;volatile
 14062  0BD5  2BD7               	goto	u4601
 14063  0BD6  2BD8               	goto	u4600
 14064  0BD7                     u4601:	
 14065  0BD7  2BDD               	goto	l804
 14066  0BD8                     u4600:	
 14067  0BD8                     l7459:	
 14068                           
 14069                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TX1
      +                          REG = txData;
 14070  0BD8  0020               	movlb	0	; select bank0
 14071  0BD9  0824               	movf	EUSART_Write@txData,w
 14072  0BDA  0022               	movlb	2	; select bank2
 14073  0BDB  009A               	movwf	26	;volatile
 14074                           
 14075                           ;mcc_generated_files/eusart.c: 182:     }
 14076  0BDC  2BF5               	goto	l7471
 14077  0BDD                     l804:	
 14078                           ;mcc_generated_files/eusart.c: 183:     else
 14079                           
 14080                           
 14081                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          3bits.TXIE = 0;
 14082  0BDD  1219               	bcf	25,4	;volatile
 14083  0BDE                     l7461:	
 14084                           
 14085                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
 14086  0BDE  0020               	movlb	0	; select bank0
 14087  0BDF  0824               	movf	EUSART_Write@txData,w
 14088  0BE0  00A3               	movwf	??_EUSART_Write
 14089  0BE1  0854               	movf	_eusartTxHead,w
 14090  0BE2  3E28               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 14091  0BE3  0086               	movwf	6
 14092  0BE4  3001               	movlw	1	; select bank2/3
 14093  0BE5  0087               	movwf	7
 14094  0BE6  0823               	movf	??_EUSART_Write,w
 14095  0BE7  0081               	movwf	1
 14096  0BE8                     l7463:	
 14097  0BE8  3001               	movlw	1
 14098  0BE9  00A3               	movwf	??_EUSART_Write
 14099  0BEA  0823               	movf	??_EUSART_Write,w
 14100  0BEB  07D4               	addwf	_eusartTxHead,f	;volatile
 14101  0BEC                     l7465:	
 14102                           
 14103                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
 14104  0BEC  3008               	movlw	8
 14105  0BED  0254               	subwf	_eusartTxHead,w	;volatile
 14106  0BEE  1C03               	skipc
 14107  0BEF  2BF1               	goto	u4611
 14108  0BF0  2BF2               	goto	u4610
 14109  0BF1                     u4611:	
 14110  0BF1  2BF3               	goto	l7469
 14111  0BF2                     u4610:	
 14112  0BF2                     l7467:	
 14113                           
 14114                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
 14115  0BF2  01D4               	clrf	_eusartTxHead	;volatile
 14116  0BF3                     l7469:	
 14117                           
 14118                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
 14119  0BF3  3001               	movlw	1
 14120  0BF4  02EB               	subwf	_eusartTxBufferRemaining,f	;volatile
 14121  0BF5                     l7471:	
 14122                           
 14123                           ;mcc_generated_files/eusart.c: 193:     PIE3bits.TXIE = 1;
 14124  0BF5  002E               	movlb	14	; select bank14
 14125  0BF6  1619               	bsf	25,4	;volatile
 14126  0BF7                     l807:	
 14127  0BF7  0008               	return
 14128  0BF8                     __end_of_EUSART_Write:	
 14129                           
 14130                           	psect	text13
 14131  0842                     __ptext13:	
 14132 ;; *************** function _read_UART *****************
 14133 ;; Defined at:
 14134 ;;		line 99 in file "uartusr.c"
 14135 ;; Parameters:    Size  Location     Type
 14136 ;;		None
 14137 ;; Auto vars:     Size  Location     Type
 14138 ;;		None
 14139 ;; Return value:  Size  Location     Type
 14140 ;;                  1    wreg      unsigned char 
 14141 ;; Registers used:
 14142 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14143 ;; Tracked objects:
 14144 ;;		On entry : 0/0
 14145 ;;		On exit  : 0/0
 14146 ;;		Unchanged: 0/0
 14147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14152 ;;Total ram usage:        0 bytes
 14153 ;; Hardware stack levels used:    1
 14154 ;; Hardware stack levels required when called:    7
 14155 ;; This function calls:
 14156 ;;		_EUSART_Read
 14157 ;;		_EUSART_is_rx_ready
 14158 ;; This function is called by:
 14159 ;;		_read_str_UART
 14160 ;; This function uses a non-reentrant model
 14161 ;;
 14162                           
 14163                           
 14164                           ;psect for function _read_UART
 14165  0842                     _read_UART:	
 14166  0842                     l7837:	
 14167                           ;incstack = 0
 14168                           ; Regs used in _read_UART: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14169                           
 14170                           
 14171                           ;uartusr.c: 101:     while(!EUSART_is_rx_ready()){
 14172  0842  2847               	goto	l7841
 14173  0843                     l7839:	
 14174                           
 14175                           ;uartusr.c: 102:                _delay((unsigned long)((1)*(1000000/4000.0)));
 14176  0843  3053               	movlw	83
 14177  0844                     u5417:	
 14178  0844  0B89               	decfsz	9,f
 14179  0845  2844               	goto	u5417
 14180  0846  0000               	nop
 14181  0847                     l7841:	
 14182                           
 14183                           ;uartusr.c: 101:     while(!EUSART_is_rx_ready()){
 14184  0847  3197  2714  3188   	fcall	_EUSART_is_rx_ready
 14185  084A  3A00               	xorlw	0
 14186  084B  1903               	skipnz
 14187  084C  284E               	goto	u4941
 14188  084D  284F               	goto	u4940
 14189  084E                     u4941:	
 14190  084E  2843               	goto	l7839
 14191  084F                     u4940:	
 14192  084F                     l7843:	
 14193                           
 14194                           ;uartusr.c: 105:    return EUSART_Read();
 14195  084F  318C  2425  3188   	fcall	_EUSART_Read
 14196  0852                     l683:	
 14197  0852  0008               	return
 14198  0853                     __end_of_read_UART:	
 14199                           
 14200                           	psect	text14
 14201  044C                     __ptext14:	
 14202 ;; *************** function _memset *****************
 14203 ;; Defined at:
 14204 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memset.c"
 14205 ;; Parameters:    Size  Location     Type
 14206 ;;  dest            1    wreg     PTR void 
 14207 ;;		 -> str_rc(16), 
 14208 ;;  c               2    3[BANK0 ] int 
 14209 ;;  n               2    5[BANK0 ] unsigned int 
 14210 ;; Auto vars:     Size  Location     Type
 14211 ;;  dest            1    9[BANK0 ] PTR void 
 14212 ;;		 -> str_rc(16), 
 14213 ;;  k               2   10[BANK0 ] unsigned int 
 14214 ;;  s               1   12[BANK0 ] PTR unsigned char 
 14215 ;;		 -> str_rc(16), 
 14216 ;; Return value:  Size  Location     Type
 14217 ;;                  1    wreg      PTR void 
 14218 ;; Registers used:
 14219 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14220 ;; Tracked objects:
 14221 ;;		On entry : 0/0
 14222 ;;		On exit  : 0/0
 14223 ;;		Unchanged: 0/0
 14224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14225 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14226 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14227 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14228 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14229 ;;Total ram usage:       10 bytes
 14230 ;; Hardware stack levels used:    1
 14231 ;; Hardware stack levels required when called:    6
 14232 ;; This function calls:
 14233 ;;		Nothing
 14234 ;; This function is called by:
 14235 ;;		_read_str_UART
 14236 ;; This function uses a non-reentrant model
 14237 ;;
 14238                           
 14239                           
 14240                           ;psect for function _memset
 14241  044C                     _memset:	
 14242                           
 14243                           ;incstack = 0
 14244                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 14245                           ;memset@dest stored from wreg
 14246  044C  0020               	movlb	0	; select bank0
 14247  044D  00A9               	movwf	memset@dest
 14248  044E                     l7791:	
 14249  044E  0829               	movf	memset@dest,w
 14250  044F  00A7               	movwf	??_memset
 14251  0450  0827               	movf	??_memset,w
 14252  0451  00AC               	movwf	memset@s
 14253  0452                     l7793:	
 14254  0452  0825               	movf	memset@n,w
 14255  0453  0426               	iorwf	memset@n+1,w
 14256  0454  1D03               	btfss	3,2
 14257  0455  2C57               	goto	u4891
 14258  0456  2C58               	goto	u4890
 14259  0457                     u4891:	
 14260  0457  2C59               	goto	l7797
 14261  0458                     u4890:	
 14262  0458  2CF9               	goto	l2566
 14263  0459                     l7797:	
 14264  0459  0823               	movf	memset@c,w
 14265  045A  00A7               	movwf	??_memset
 14266  045B  082C               	movf	memset@s,w
 14267  045C  0086               	movwf	6
 14268  045D  3001               	movlw	1	; select bank2/3
 14269  045E  0087               	movwf	7
 14270  045F  0827               	movf	??_memset,w
 14271  0460  0081               	movwf	1
 14272  0461                     l7799:	
 14273  0461  0823               	movf	memset@c,w
 14274  0462  00A7               	movwf	??_memset
 14275  0463  0825               	movf	memset@n,w
 14276  0464  072C               	addwf	memset@s,w
 14277  0465  00A8               	movwf	??_memset+1
 14278  0466  0828               	movf	??_memset+1,w
 14279  0467  3EFF               	addlw	255
 14280  0468  0086               	movwf	6
 14281  0469  3001               	movlw	1	; select bank2/3
 14282  046A  0087               	movwf	7
 14283  046B  0827               	movf	??_memset,w
 14284  046C  0081               	movwf	1
 14285  046D                     l7801:	
 14286  046D  3000               	movlw	0
 14287  046E  0226               	subwf	memset@n+1,w
 14288  046F  3003               	movlw	3
 14289  0470  1903               	skipnz
 14290  0471  0225               	subwf	memset@n,w
 14291  0472  1803               	skipnc
 14292  0473  2C75               	goto	u4901
 14293  0474  2C76               	goto	u4900
 14294  0475                     u4901:	
 14295  0475  2C77               	goto	l7805
 14296  0476                     u4900:	
 14297  0476  2CF9               	goto	l2566
 14298  0477                     l7805:	
 14299  0477  0823               	movf	memset@c,w
 14300  0478  00A7               	movwf	??_memset
 14301  0479  0A2C               	incf	memset@s,w
 14302  047A  0086               	movwf	6
 14303  047B  3001               	movlw	1	; select bank2/3
 14304  047C  0087               	movwf	7
 14305  047D  0827               	movf	??_memset,w
 14306  047E  0081               	movwf	1
 14307  047F                     l7807:	
 14308  047F  0823               	movf	memset@c,w
 14309  0480  00A7               	movwf	??_memset
 14310  0481  082C               	movf	memset@s,w
 14311  0482  3E02               	addlw	2
 14312  0483  0086               	movwf	6
 14313  0484  3001               	movlw	1	; select bank2/3
 14314  0485  0087               	movwf	7
 14315  0486  0827               	movf	??_memset,w
 14316  0487  0081               	movwf	1
 14317  0488                     l7809:	
 14318  0488  0823               	movf	memset@c,w
 14319  0489  00A7               	movwf	??_memset
 14320  048A  0825               	movf	memset@n,w
 14321  048B  072C               	addwf	memset@s,w
 14322  048C  00A8               	movwf	??_memset+1
 14323  048D  0828               	movf	??_memset+1,w
 14324  048E  3EFE               	addlw	254
 14325  048F  0086               	movwf	6
 14326  0490  3001               	movlw	1	; select bank2/3
 14327  0491  0087               	movwf	7
 14328  0492  0827               	movf	??_memset,w
 14329  0493  0081               	movwf	1
 14330  0494                     l7811:	
 14331  0494  0823               	movf	memset@c,w
 14332  0495  00A7               	movwf	??_memset
 14333  0496  0825               	movf	memset@n,w
 14334  0497  072C               	addwf	memset@s,w
 14335  0498  00A8               	movwf	??_memset+1
 14336  0499  0828               	movf	??_memset+1,w
 14337  049A  3EFD               	addlw	253
 14338  049B  0086               	movwf	6
 14339  049C  3001               	movlw	1	; select bank2/3
 14340  049D  0087               	movwf	7
 14341  049E  0827               	movf	??_memset,w
 14342  049F  0081               	movwf	1
 14343  04A0                     l7813:	
 14344  04A0  3000               	movlw	0
 14345  04A1  0226               	subwf	memset@n+1,w
 14346  04A2  3007               	movlw	7
 14347  04A3  1903               	skipnz
 14348  04A4  0225               	subwf	memset@n,w
 14349  04A5  1803               	skipnc
 14350  04A6  2CA8               	goto	u4911
 14351  04A7  2CA9               	goto	u4910
 14352  04A8                     u4911:	
 14353  04A8  2CAA               	goto	l7817
 14354  04A9                     u4910:	
 14355  04A9  2CF9               	goto	l2566
 14356  04AA                     l7817:	
 14357  04AA  0823               	movf	memset@c,w
 14358  04AB  00A7               	movwf	??_memset
 14359  04AC  082C               	movf	memset@s,w
 14360  04AD  3E03               	addlw	3
 14361  04AE  0086               	movwf	6
 14362  04AF  3001               	movlw	1	; select bank2/3
 14363  04B0  0087               	movwf	7
 14364  04B1  0827               	movf	??_memset,w
 14365  04B2  0081               	movwf	1
 14366  04B3  0823               	movf	memset@c,w
 14367  04B4  00A7               	movwf	??_memset
 14368  04B5  0825               	movf	memset@n,w
 14369  04B6  072C               	addwf	memset@s,w
 14370  04B7  00A8               	movwf	??_memset+1
 14371  04B8  0828               	movf	??_memset+1,w
 14372  04B9  3EFC               	addlw	252
 14373  04BA  0086               	movwf	6
 14374  04BB  3001               	movlw	1	; select bank2/3
 14375  04BC  0087               	movwf	7
 14376  04BD  0827               	movf	??_memset,w
 14377  04BE  0081               	movwf	1
 14378  04BF                     l7819:	
 14379  04BF  3000               	movlw	0
 14380  04C0  0226               	subwf	memset@n+1,w
 14381  04C1  3009               	movlw	9
 14382  04C2  1903               	skipnz
 14383  04C3  0225               	subwf	memset@n,w
 14384  04C4  1803               	skipnc
 14385  04C5  2CC7               	goto	u4921
 14386  04C6  2CC8               	goto	u4920
 14387  04C7                     u4921:	
 14388  04C7  2CC9               	goto	l7823
 14389  04C8                     u4920:	
 14390  04C8  2CF9               	goto	l2566
 14391  04C9                     l7823:	
 14392  04C9  092C               	comf	memset@s,w
 14393  04CA  00A7               	movwf	??_memset
 14394  04CB  092D               	comf	memset@s+1,w
 14395  04CC  00A8               	movwf	??_memset+1
 14396  04CD  0AA7               	incf	??_memset,f
 14397  04CE  1903               	skipnz
 14398  04CF  0AA8               	incf	??_memset+1,f
 14399  04D0  3003               	movlw	3
 14400  04D1  0527               	andwf	??_memset,w
 14401  04D2  00AA               	movwf	memset@k
 14402  04D3  3000               	movlw	0
 14403  04D4  0528               	andwf	??_memset+1,w
 14404  04D5  00AB               	movwf	memset@k+1
 14405  04D6  082A               	movf	memset@k,w
 14406  04D7  00A7               	movwf	??_memset
 14407  04D8  0827               	movf	??_memset,w
 14408  04D9  07AC               	addwf	memset@s,f
 14409  04DA                     l7825:	
 14410  04DA  082A               	movf	memset@k,w
 14411  04DB  02A5               	subwf	memset@n,f
 14412  04DC  082B               	movf	memset@k+1,w
 14413  04DD  3BA6               	subwfb	memset@n+1,f
 14414  04DE                     l7827:	
 14415  04DE  30FC               	movlw	252
 14416  04DF  05A5               	andwf	memset@n,f
 14417  04E0  30FF               	movlw	255
 14418  04E1  05A6               	andwf	memset@n+1,f
 14419  04E2  2CF3               	goto	l7835
 14420  04E3                     l7829:	
 14421  04E3  0823               	movf	memset@c,w
 14422  04E4  00A7               	movwf	??_memset
 14423  04E5  082C               	movf	memset@s,w
 14424  04E6  0086               	movwf	6
 14425  04E7  3001               	movlw	1	; select bank2/3
 14426  04E8  0087               	movwf	7
 14427  04E9  0827               	movf	??_memset,w
 14428  04EA  0081               	movwf	1
 14429  04EB                     l7831:	
 14430  04EB  3001               	movlw	1
 14431  04EC  02A5               	subwf	memset@n,f
 14432  04ED  3000               	movlw	0
 14433  04EE  3BA6               	subwfb	memset@n+1,f
 14434  04EF                     l7833:	
 14435  04EF  3001               	movlw	1
 14436  04F0  00A7               	movwf	??_memset
 14437  04F1  0827               	movf	??_memset,w
 14438  04F2  07AC               	addwf	memset@s,f
 14439  04F3                     l7835:	
 14440  04F3  0825               	movf	memset@n,w
 14441  04F4  0426               	iorwf	memset@n+1,w
 14442  04F5  1D03               	btfss	3,2
 14443  04F6  2CF8               	goto	u4931
 14444  04F7  2CF9               	goto	u4930
 14445  04F8                     u4931:	
 14446  04F8  2CE3               	goto	l7829
 14447  04F9                     u4930:	
 14448  04F9                     l2566:	
 14449  04F9  0008               	return
 14450  04FA                     __end_of_memset:	
 14451                           
 14452                           	psect	text15
 14453  093B                     __ptext15:	
 14454 ;; *************** function _dump_UART_FIFO *****************
 14455 ;; Defined at:
 14456 ;;		line 111 in file "uartusr.c"
 14457 ;; Parameters:    Size  Location     Type
 14458 ;;		None
 14459 ;; Auto vars:     Size  Location     Type
 14460 ;;  dump            1    5[BANK0 ] unsigned char 
 14461 ;; Return value:  Size  Location     Type
 14462 ;;                  1    wreg      void 
 14463 ;; Registers used:
 14464 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14465 ;; Tracked objects:
 14466 ;;		On entry : 0/0
 14467 ;;		On exit  : 0/0
 14468 ;;		Unchanged: 0/0
 14469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14471 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14473 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14474 ;;Total ram usage:        1 bytes
 14475 ;; Hardware stack levels used:    1
 14476 ;; Hardware stack levels required when called:    7
 14477 ;; This function calls:
 14478 ;;		_EUSART_Read
 14479 ;;		_EUSART_is_rx_ready
 14480 ;; This function is called by:
 14481 ;;		_read_str_UART
 14482 ;; This function uses a non-reentrant model
 14483 ;;
 14484                           
 14485                           
 14486                           ;psect for function _dump_UART_FIFO
 14487  093B                     _dump_UART_FIFO:	
 14488  093B                     l7847:	
 14489                           ;incstack = 0
 14490                           ; Regs used in _dump_UART_FIFO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14491                           
 14492                           
 14493                           ;uartusr.c: 112:     uint8_t dump;;uartusr.c: 113:     if(EUSART_is_rx_ready() && (dump 
      +                          != 0x3A || dump != 0x3F )) dump = EUSART_Read();
 14494  093B  3197  2714  3189   	fcall	_EUSART_is_rx_ready
 14495  093E  3A00               	xorlw	0
 14496  093F  1903               	skipnz
 14497  0940  2942               	goto	u4951
 14498  0941  2943               	goto	u4950
 14499  0942                     u4951:	
 14500  0942  2953               	goto	l689
 14501  0943                     u4950:	
 14502  0943                     l7849:	
 14503  0943  303A               	movlw	58
 14504  0944  0020               	movlb	0	; select bank0
 14505  0945  0625               	xorwf	dump_UART_FIFO@dump,w
 14506  0946  1D03               	btfss	3,2
 14507  0947  2949               	goto	u4961
 14508  0948  294A               	goto	u4960
 14509  0949                     u4961:	
 14510  0949  2950               	goto	l7853
 14511  094A                     u4960:	
 14512  094A                     l7851:	
 14513  094A  303F               	movlw	63
 14514  094B  0625               	xorwf	dump_UART_FIFO@dump,w
 14515  094C  1903               	btfsc	3,2
 14516  094D  294F               	goto	u4971
 14517  094E  2950               	goto	u4970
 14518  094F                     u4971:	
 14519  094F  2953               	goto	l689
 14520  0950                     u4970:	
 14521  0950                     l7853:	
 14522  0950  318C  2425  3189   	fcall	_EUSART_Read
 14523  0953                     l689:	
 14524  0953  0008               	return
 14525  0954                     __end_of_dump_UART_FIFO:	
 14526                           
 14527                           	psect	text16
 14528  1714                     __ptext16:	
 14529 ;; *************** function _EUSART_is_rx_ready *****************
 14530 ;; Defined at:
 14531 ;;		line 137 in file "mcc_generated_files/eusart.c"
 14532 ;; Parameters:    Size  Location     Type
 14533 ;;		None
 14534 ;; Auto vars:     Size  Location     Type
 14535 ;;		None
 14536 ;; Return value:  Size  Location     Type
 14537 ;;                  1    wreg      _Bool 
 14538 ;; Registers used:
 14539 ;;		wreg, status,2, status,0
 14540 ;; Tracked objects:
 14541 ;;		On entry : 0/0
 14542 ;;		On exit  : 0/0
 14543 ;;		Unchanged: 0/0
 14544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14549 ;;Total ram usage:        0 bytes
 14550 ;; Hardware stack levels used:    1
 14551 ;; Hardware stack levels required when called:    6
 14552 ;; This function calls:
 14553 ;;		Nothing
 14554 ;; This function is called by:
 14555 ;;		_main
 14556 ;;		_read_UART
 14557 ;;		_dump_UART_FIFO
 14558 ;;		_echo
 14559 ;; This function uses a non-reentrant model
 14560 ;;
 14561                           
 14562                           
 14563                           ;psect for function _EUSART_is_rx_ready
 14564  1714                     _EUSART_is_rx_ready:	
 14565  1714                     l7537:	
 14566                           ;incstack = 0
 14567                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
 14568                           
 14569                           
 14570                           ;mcc_generated_files/eusart.c: 139:     return (eusartRxCount ? 1 : 0);
 14571  1714  0020               	movlb	0	; select bank0
 14572  1715  0850               	movf	_eusartRxCount,w	;volatile
 14573  1716  1D03               	btfss	3,2
 14574  1717  2F19               	goto	u4731
 14575  1718  2F1B               	goto	u4730
 14576  1719                     u4731:	
 14577  1719  3001               	movlw	1
 14578  171A  2F1C               	goto	u4740
 14579  171B                     u4730:	
 14580  171B  3000               	movlw	0
 14581  171C                     u4740:	
 14582  171C                     l785:	
 14583  171C  0008               	return
 14584  171D                     __end_of_EUSART_is_rx_ready:	
 14585                           
 14586                           	psect	text17
 14587  0C25                     __ptext17:	
 14588 ;; *************** function _EUSART_Read *****************
 14589 ;; Defined at:
 14590 ;;		line 151 in file "mcc_generated_files/eusart.c"
 14591 ;; Parameters:    Size  Location     Type
 14592 ;;		None
 14593 ;; Auto vars:     Size  Location     Type
 14594 ;;  readValue       1    4[BANK0 ] unsigned char 
 14595 ;; Return value:  Size  Location     Type
 14596 ;;                  1    wreg      unsigned char 
 14597 ;; Registers used:
 14598 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14599 ;; Tracked objects:
 14600 ;;		On entry : 0/0
 14601 ;;		On exit  : 0/0
 14602 ;;		Unchanged: 0/0
 14603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14605 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14606 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14607 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14608 ;;Total ram usage:        2 bytes
 14609 ;; Hardware stack levels used:    1
 14610 ;; Hardware stack levels required when called:    6
 14611 ;; This function calls:
 14612 ;;		Nothing
 14613 ;; This function is called by:
 14614 ;;		_read_UART
 14615 ;;		_dump_UART_FIFO
 14616 ;;		_echo
 14617 ;;		_getch
 14618 ;; This function uses a non-reentrant model
 14619 ;;
 14620                           
 14621                           
 14622                           ;psect for function _EUSART_Read
 14623  0C25                     _EUSART_Read:	
 14624  0C25                     l7675:	
 14625                           ;incstack = 0
 14626                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 14627                           
 14628  0C25                     l7677:	
 14629                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
 14630                           
 14631                           
 14632                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
 14633  0C25  0020               	movlb	0	; select bank0
 14634  0C26  0850               	movf	_eusartRxCount,w	;volatile
 14635  0C27  1903               	btfsc	3,2
 14636  0C28  2C2A               	goto	u4771
 14637  0C29  2C2B               	goto	u4770
 14638  0C2A                     u4771:	
 14639  0C2A  2C25               	goto	l7677
 14640  0C2B                     u4770:	
 14641  0C2B                     l7679:	
 14642                           
 14643                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
 14644  0C2B  0851               	movf	_eusartRxTail,w	;volatile
 14645  0C2C  3EBD               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 14646  0C2D  0086               	movwf	6
 14647  0C2E  0187               	clrf	7
 14648  0C2F  0801               	movf	1,w
 14649  0C30  00A3               	movwf	??_EUSART_Read
 14650  0C31  0823               	movf	??_EUSART_Read,w
 14651  0C32  0021               	movlb	1	; select bank1
 14652  0C33  00D9               	movwf	_eusartRxLastError^(0+128)	;volatile
 14653                           
 14654                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
 14655  0C34  0020               	movlb	0	; select bank0
 14656  0C35  0851               	movf	_eusartRxTail,w
 14657  0C36  3E20               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 14658  0C37  0086               	movwf	6
 14659  0C38  3001               	movlw	1	; select bank2/3
 14660  0C39  0087               	movwf	7
 14661  0C3A  0801               	movf	1,w
 14662  0C3B  00A3               	movwf	??_EUSART_Read
 14663  0C3C  0823               	movf	??_EUSART_Read,w
 14664  0C3D  00A4               	movwf	EUSART_Read@readValue
 14665  0C3E                     l7681:	
 14666  0C3E  3001               	movlw	1
 14667  0C3F  00A3               	movwf	??_EUSART_Read
 14668  0C40  0823               	movf	??_EUSART_Read,w
 14669  0C41  07D1               	addwf	_eusartRxTail,f	;volatile
 14670  0C42                     l7683:	
 14671                           
 14672                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
 14673  0C42  3008               	movlw	8
 14674  0C43  0251               	subwf	_eusartRxTail,w	;volatile
 14675  0C44  1C03               	skipc
 14676  0C45  2C47               	goto	u4781
 14677  0C46  2C48               	goto	u4780
 14678  0C47                     u4781:	
 14679  0C47  2C49               	goto	l7687
 14680  0C48                     u4780:	
 14681  0C48                     l7685:	
 14682                           
 14683                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
 14684  0C48  01D1               	clrf	_eusartRxTail	;volatile
 14685  0C49                     l7687:	
 14686                           
 14687                           ;mcc_generated_files/eusart.c: 166:     PIE3bits.RCIE = 0;
 14688  0C49  002E               	movlb	14	; select bank14
 14689  0C4A  1299               	bcf	25,5	;volatile
 14690  0C4B                     l7689:	
 14691                           
 14692                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
 14693  0C4B  3001               	movlw	1
 14694  0C4C  0020               	movlb	0	; select bank0
 14695  0C4D  02D0               	subwf	_eusartRxCount,f	;volatile
 14696  0C4E                     l7691:	
 14697                           
 14698                           ;mcc_generated_files/eusart.c: 168:     PIE3bits.RCIE = 1;
 14699  0C4E  002E               	movlb	14	; select bank14
 14700  0C4F  1699               	bsf	25,5	;volatile
 14701  0C50                     l7693:	
 14702                           
 14703                           ;mcc_generated_files/eusart.c: 170:     return readValue;
 14704  0C50  0020               	movlb	0	; select bank0
 14705  0C51  0824               	movf	EUSART_Read@readValue,w
 14706  0C52                     l798:	
 14707  0C52  0008               	return
 14708  0C53                     __end_of_EUSART_Read:	
 14709                           
 14710                           	psect	text18
 14711  0D62                     __ptext18:	
 14712 ;; *************** function _read_ring *****************
 14713 ;; Defined at:
 14714 ;;		line 49 in file "eeprom_rw.c"
 14715 ;; Parameters:    Size  Location     Type
 14716 ;;  nreg_pt         1    wreg     unsigned char 
 14717 ;;  nreg            1    7[BANK0 ] unsigned char 
 14718 ;;  nreg_init       1    8[BANK0 ] unsigned char 
 14719 ;;  index           1    9[BANK0 ] unsigned char 
 14720 ;;  subindex        1   10[BANK0 ] unsigned char 
 14721 ;; Auto vars:     Size  Location     Type
 14722 ;;  nreg_pt         1   14[BANK0 ] unsigned char 
 14723 ;;  absindex        1   15[BANK0 ] unsigned char 
 14724 ;;  i               1   13[BANK0 ] unsigned char 
 14725 ;; Return value:  Size  Location     Type
 14726 ;;                  1    wreg      unsigned char 
 14727 ;; Registers used:
 14728 ;;		wreg, status,2, status,0, pclath, cstack
 14729 ;; Tracked objects:
 14730 ;;		On entry : 0/0
 14731 ;;		On exit  : 0/0
 14732 ;;		Unchanged: 0/0
 14733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14734 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14735 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14736 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14737 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14738 ;;Total ram usage:        9 bytes
 14739 ;; Hardware stack levels used:    1
 14740 ;; Hardware stack levels required when called:    7
 14741 ;; This function calls:
 14742 ;;		_DATAEE_ReadByte
 14743 ;;		___bmul
 14744 ;; This function is called by:
 14745 ;;		_main
 14746 ;; This function uses a non-reentrant model
 14747 ;;
 14748                           
 14749                           
 14750                           ;psect for function _read_ring
 14751  0D62                     _read_ring:	
 14752                           
 14753                           ;incstack = 0
 14754                           ; Regs used in _read_ring: [wreg+status,2+status,0+pclath+cstack]
 14755                           ;read_ring@nreg_pt stored from wreg
 14756  0D62  0020               	movlb	0	; select bank0
 14757  0D63  00AE               	movwf	read_ring@nreg_pt
 14758  0D64                     l8101:	
 14759  0D64                     l8103:	
 14760                           
 14761                           ;eeprom_rw.c: 54:     if(index <= nreg && nreg_init) {
 14762  0D64  0829               	movf	read_ring@index,w
 14763  0D65  0227               	subwf	read_ring@nreg,w
 14764  0D66  1C03               	skipc
 14765  0D67  2D69               	goto	u5051
 14766  0D68  2D6A               	goto	u5050
 14767  0D69                     u5051:	
 14768  0D69  2D94               	goto	l8115
 14769  0D6A                     u5050:	
 14770  0D6A                     l8105:	
 14771  0D6A  0828               	movf	read_ring@nreg_init,w
 14772  0D6B  1903               	btfsc	3,2
 14773  0D6C  2D6E               	goto	u5061
 14774  0D6D  2D6F               	goto	u5060
 14775  0D6E                     u5061:	
 14776  0D6E  2D94               	goto	l8115
 14777  0D6F                     u5060:	
 14778  0D6F                     l8107:	
 14779                           
 14780                           ;eeprom_rw.c: 55:         absindex = 5 * index + subindex;
 14781  0D6F  3005               	movlw	5
 14782  0D70  00AB               	movwf	??_read_ring
 14783  0D71  082B               	movf	??_read_ring,w
 14784  0D72  00A3               	movwf	___bmul@multiplicand
 14785  0D73  0829               	movf	read_ring@index,w
 14786  0D74  3188  2094  318D   	fcall	___bmul
 14787  0D77  0020               	movlb	0	; select bank0
 14788  0D78  072A               	addwf	read_ring@subindex,w
 14789  0D79  00AC               	movwf	??_read_ring+1
 14790  0D7A  082C               	movf	??_read_ring+1,w
 14791  0D7B  00AF               	movwf	read_ring@absindex
 14792  0D7C                     l8109:	
 14793                           
 14794                           ;eeprom_rw.c: 56:         if(absindex <= nreg_pt)
 14795  0D7C  082F               	movf	read_ring@absindex,w
 14796  0D7D  022E               	subwf	read_ring@nreg_pt,w
 14797  0D7E  1C03               	skipc
 14798  0D7F  2D81               	goto	u5071
 14799  0D80  2D82               	goto	u5070
 14800  0D81                     u5071:	
 14801  0D81  2D89               	goto	l8113
 14802  0D82                     u5070:	
 14803  0D82                     l8111:	
 14804                           
 14805                           ;eeprom_rw.c: 57:             i = nreg_pt - 5 + absindex;
 14806  0D82  082E               	movf	read_ring@nreg_pt,w
 14807  0D83  072F               	addwf	read_ring@absindex,w
 14808  0D84  3EFB               	addlw	251
 14809  0D85  00AB               	movwf	??_read_ring
 14810  0D86  082B               	movf	??_read_ring,w
 14811  0D87  00AD               	movwf	read_ring@i
 14812  0D88  2D96               	goto	l8119
 14813  0D89                     l8113:	
 14814                           
 14815                           ;eeprom_rw.c: 59:             i = nreg - (nreg_pt - 5 + absindex);
 14816  0D89  032E               	decf	read_ring@nreg_pt,w
 14817  0D8A  3AFF               	xorlw	255
 14818  0D8B  00AB               	movwf	??_read_ring
 14819  0D8C  082F               	movf	read_ring@absindex,w
 14820  0D8D  022B               	subwf	??_read_ring,w
 14821  0D8E  0727               	addwf	read_ring@nreg,w
 14822  0D8F  3E05               	addlw	5
 14823  0D90  00AC               	movwf	??_read_ring+1
 14824  0D91  082C               	movf	??_read_ring+1,w
 14825  0D92  00AD               	movwf	read_ring@i
 14826  0D93  2D96               	goto	l8119
 14827  0D94                     l8115:	
 14828                           
 14829                           ;eeprom_rw.c: 62:         return 0;
 14830  0D94  3000               	movlw	0
 14831  0D95  2DA0               	goto	l528
 14832  0D96                     l8119:	
 14833                           
 14834                           ;eeprom_rw.c: 64:     return DATAEE_ReadByte(0xF000 + i);
 14835  0D96  082D               	movf	read_ring@i,w
 14836  0D97  3E00               	addlw	0
 14837  0D98  00A3               	movwf	DATAEE_ReadByte@bAdd
 14838  0D99  30F0               	movlw	240
 14839  0D9A  1803               	skipnc
 14840  0D9B  30F1               	movlw	241
 14841  0D9C  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 14842  0D9D  3188  2000  318D   	fcall	_DATAEE_ReadByte
 14843  0DA0                     l528:	
 14844  0DA0  0008               	return
 14845  0DA1                     __end_of_read_ring:	
 14846                           
 14847                           	psect	text19
 14848  0800                     __ptext19:	
 14849 ;; *************** function _DATAEE_ReadByte *****************
 14850 ;; Defined at:
 14851 ;;		line 202 in file "mcc_generated_files/memory.c"
 14852 ;; Parameters:    Size  Location     Type
 14853 ;;  bAdd            2    3[BANK0 ] unsigned short 
 14854 ;; Auto vars:     Size  Location     Type
 14855 ;;		None
 14856 ;; Return value:  Size  Location     Type
 14857 ;;                  1    wreg      unsigned char 
 14858 ;; Registers used:
 14859 ;;		wreg, status,2
 14860 ;; Tracked objects:
 14861 ;;		On entry : 0/0
 14862 ;;		On exit  : 0/0
 14863 ;;		Unchanged: 0/0
 14864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14865 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14868 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14869 ;;Total ram usage:        2 bytes
 14870 ;; Hardware stack levels used:    1
 14871 ;; Hardware stack levels required when called:    6
 14872 ;; This function calls:
 14873 ;;		Nothing
 14874 ;; This function is called by:
 14875 ;;		_recoverData
 14876 ;;		_read_ring
 14877 ;;		_cksum
 14878 ;; This function uses a non-reentrant model
 14879 ;;
 14880                           
 14881                           
 14882                           ;psect for function _DATAEE_ReadByte
 14883  0800                     _DATAEE_ReadByte:	
 14884  0800                     l7435:	
 14885                           ;incstack = 0
 14886                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 14887                           
 14888                           
 14889                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 14890  0800  0020               	movlb	0	; select bank0
 14891  0801  0824               	movf	DATAEE_ReadByte@bAdd+1,w
 14892  0802  0030               	movlb	16	; select bank16
 14893  0803  009B               	movwf	27	;volatile
 14894  0804                     l7437:	
 14895                           
 14896                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 14897  0804  0020               	movlb	0	; select bank0
 14898  0805  0823               	movf	DATAEE_ReadByte@bAdd,w
 14899  0806  0030               	movlb	16	; select bank16
 14900  0807  009A               	movwf	26	;volatile
 14901  0808                     l7439:	
 14902                           
 14903                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 14904  0808  171E               	bsf	30,6	;volsfr
 14905  0809                     l7441:	
 14906                           
 14907                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 14908  0809  141E               	bsf	30,0	;volsfr
 14909  080A                     l7443:	
 14910                           
 14911                           ;mcc_generated_files/memory.c: 208:     __nop();
 14912  080A  0000               	nop
 14913  080B                     l7445:	
 14914                           
 14915                           ;mcc_generated_files/memory.c: 209:     __nop();
 14916  080B  0000               	nop
 14917  080C                     l7447:	
 14918                           
 14919                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 14920  080C  0030               	movlb	16	; select bank16
 14921  080D  081C               	movf	28,w	;volatile
 14922  080E                     l1570:	
 14923  080E  0008               	return
 14924  080F                     __end_of_DATAEE_ReadByte:	
 14925                           
 14926                           	psect	text20
 14927  0DE6                     __ptext20:	
 14928 ;; *************** function _push_ring *****************
 14929 ;; Defined at:
 14930 ;;		line 40 in file "eeprom_rw.c"
 14931 ;; Parameters:    Size  Location     Type
 14932 ;;  nreg_pt         1    wreg     PTR unsigned char 
 14933 ;;		 -> nreg_pt(1), 
 14934 ;;  nreg            1   13[BANK0 ] unsigned char 
 14935 ;;  nreg_init       1   14[BANK0 ] PTR unsigned char 
 14936 ;;		 -> nreg_init(1), 
 14937 ;;  ring_byte       1   15[BANK0 ] PTR unsigned char 
 14938 ;;		 -> ring_byte(5), 
 14939 ;; Auto vars:     Size  Location     Type
 14940 ;;  nreg_pt         1   19[BANK0 ] PTR unsigned char 
 14941 ;;		 -> nreg_pt(1), 
 14942 ;;  i               1   18[BANK0 ] unsigned char 
 14943 ;; Return value:  Size  Location     Type
 14944 ;;                  1    wreg      void 
 14945 ;; Registers used:
 14946 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14947 ;; Tracked objects:
 14948 ;;		On entry : 0/0
 14949 ;;		On exit  : 0/0
 14950 ;;		Unchanged: 0/0
 14951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14952 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14953 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14954 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14955 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14956 ;;Total ram usage:        7 bytes
 14957 ;; Hardware stack levels used:    1
 14958 ;; Hardware stack levels required when called:    7
 14959 ;; This function calls:
 14960 ;;		_DATAEE_WriteByte
 14961 ;; This function is called by:
 14962 ;;		_main
 14963 ;; This function uses a non-reentrant model
 14964 ;;
 14965                           
 14966                           
 14967                           ;psect for function _push_ring
 14968  0DE6                     _push_ring:	
 14969                           
 14970                           ;incstack = 0
 14971                           ; Regs used in _push_ring: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14972                           ;push_ring@nreg_pt stored from wreg
 14973  0DE6  0020               	movlb	0	; select bank0
 14974  0DE7  00B3               	movwf	push_ring@nreg_pt
 14975  0DE8                     l8135:	
 14976                           
 14977                           ;eeprom_rw.c: 40: void push_ring(unsigned char* nreg_pt, unsigned char nreg, unsigned ch
      +                          ar* nreg_init, unsigned char* ring_byte);eeprom_rw.c: 41: { if(!(*nreg_init)) (*nreg_ini
      +                          t) = 1;
 14978  0DE8  082E               	movf	push_ring@nreg_init,w
 14979  0DE9  0086               	movwf	6
 14980  0DEA  0187               	clrf	7
 14981  0DEB  0801               	movf	1,w
 14982  0DEC  1D03               	btfss	3,2
 14983  0DED  2DEF               	goto	u5081
 14984  0DEE  2DF0               	goto	u5080
 14985  0DEF                     u5081:	
 14986  0DEF  2DF5               	goto	l8139
 14987  0DF0                     u5080:	
 14988  0DF0                     l8137:	
 14989  0DF0  082E               	movf	push_ring@nreg_init,w
 14990  0DF1  0086               	movwf	6
 14991  0DF2  0187               	clrf	7
 14992  0DF3  0181               	clrf	1
 14993  0DF4  0A81               	incf	1,f
 14994  0DF5                     l8139:	
 14995                           
 14996                           ;eeprom_rw.c: 42:     for(unsigned char i = 0; i < 5; i++) {
 14997  0DF5  01B2               	clrf	push_ring@i
 14998  0DF6                     l8145:	
 14999                           
 15000                           ;eeprom_rw.c: 43:         if((*nreg_pt) >= nreg) (*nreg_pt) = 0;
 15001  0DF6  0833               	movf	push_ring@nreg_pt,w
 15002  0DF7  0086               	movwf	6
 15003  0DF8  0187               	clrf	7
 15004  0DF9  082D               	movf	push_ring@nreg,w
 15005  0DFA  0201               	subwf	1,w
 15006  0DFB  1C03               	skipc
 15007  0DFC  2DFE               	goto	u5091
 15008  0DFD  2DFF               	goto	u5090
 15009  0DFE                     u5091:	
 15010  0DFE  2E03               	goto	l8149
 15011  0DFF                     u5090:	
 15012  0DFF                     l8147:	
 15013  0DFF  0833               	movf	push_ring@nreg_pt,w
 15014  0E00  0086               	movwf	6
 15015  0E01  0187               	clrf	7
 15016  0E02  0181               	clrf	1
 15017  0E03                     l8149:	
 15018                           
 15019                           ;eeprom_rw.c: 44:         DATAEE_WriteByte(0xF000 + (*nreg_pt), ring_byte[i]);
 15020  0E03  0833               	movf	push_ring@nreg_pt,w
 15021  0E04  0086               	movwf	6
 15022  0E05  0187               	clrf	7
 15023  0E06  0801               	movf	1,w
 15024  0E07  3E00               	addlw	0
 15025  0E08  00A9               	movwf	DATAEE_WriteByte@bAdd
 15026  0E09  30F0               	movlw	240
 15027  0E0A  1803               	skipnc
 15028  0E0B  30F1               	movlw	241
 15029  0E0C  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 15030  0E0D  0832               	movf	push_ring@i,w
 15031  0E0E  072F               	addwf	push_ring@ring_byte,w
 15032  0E0F  00B0               	movwf	??_push_ring
 15033  0E10  0830               	movf	??_push_ring,w
 15034  0E11  0086               	movwf	6
 15035  0E12  0187               	clrf	7
 15036  0E13  0801               	movf	1,w
 15037  0E14  00B1               	movwf	??_push_ring+1
 15038  0E15  0831               	movf	??_push_ring+1,w
 15039  0E16  00AB               	movwf	DATAEE_WriteByte@bData
 15040  0E17  318A  22B6  318D   	fcall	_DATAEE_WriteByte
 15041  0E1A                     l8151:	
 15042                           
 15043                           ;eeprom_rw.c: 45:         (*nreg_pt)++;
 15044  0E1A  3001               	movlw	1
 15045  0E1B  0020               	movlb	0	; select bank0
 15046  0E1C  00B0               	movwf	??_push_ring
 15047  0E1D  0833               	movf	push_ring@nreg_pt,w
 15048  0E1E  0086               	movwf	6
 15049  0E1F  0187               	clrf	7
 15050  0E20  0830               	movf	??_push_ring,w
 15051  0E21  0781               	addwf	1,f
 15052  0E22                     l8153:	
 15053                           
 15054                           ;eeprom_rw.c: 46:     }
 15055  0E22  3001               	movlw	1
 15056  0E23  00B0               	movwf	??_push_ring
 15057  0E24  0830               	movf	??_push_ring,w
 15058  0E25  07B2               	addwf	push_ring@i,f
 15059  0E26                     l8155:	
 15060  0E26  3005               	movlw	5
 15061  0E27  0232               	subwf	push_ring@i,w
 15062  0E28  1C03               	skipc
 15063  0E29  2E2B               	goto	u5101
 15064  0E2A  2E2C               	goto	u5100
 15065  0E2B                     u5101:	
 15066  0E2B  2DF6               	goto	l8145
 15067  0E2C                     u5100:	
 15068  0E2C                     l521:	
 15069  0E2C  0008               	return
 15070  0E2D                     __end_of_push_ring:	
 15071                           
 15072                           	psect	text21
 15073  0AB6                     __ptext21:	
 15074 ;; *************** function _DATAEE_WriteByte *****************
 15075 ;; Defined at:
 15076 ;;		line 180 in file "mcc_generated_files/memory.c"
 15077 ;; Parameters:    Size  Location     Type
 15078 ;;  bAdd            2    9[BANK0 ] unsigned short 
 15079 ;;  bData           1   11[BANK0 ] unsigned char 
 15080 ;; Auto vars:     Size  Location     Type
 15081 ;;  GIEBitValue     1   12[BANK0 ] unsigned char 
 15082 ;; Return value:  Size  Location     Type
 15083 ;;                  1    wreg      void 
 15084 ;; Registers used:
 15085 ;;		wreg, status,2, status,0
 15086 ;; Tracked objects:
 15087 ;;		On entry : 0/0
 15088 ;;		On exit  : 0/0
 15089 ;;		Unchanged: 0/0
 15090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15091 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15092 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15094 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15095 ;;Total ram usage:        4 bytes
 15096 ;; Hardware stack levels used:    1
 15097 ;; Hardware stack levels required when called:    6
 15098 ;; This function calls:
 15099 ;;		Nothing
 15100 ;; This function is called by:
 15101 ;;		_main
 15102 ;;		_save_recovery_params
 15103 ;;		_recoverData
 15104 ;;		_push_ring
 15105 ;;		_cksum_w
 15106 ;;		_reset_recv
 15107 ;; This function uses a non-reentrant model
 15108 ;;
 15109                           
 15110                           
 15111                           ;psect for function _DATAEE_WriteByte
 15112  0AB6                     _DATAEE_WriteByte:	
 15113  0AB6                     l7541:	
 15114                           ;incstack = 0
 15115                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 15116                           
 15117                           
 15118                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 15119  0AB6  3000               	movlw	0
 15120  0AB7  1B8B               	btfsc	11,7	;volatile
 15121  0AB8  3001               	movlw	1
 15122  0AB9  0020               	movlb	0	; select bank0
 15123  0ABA  00AC               	movwf	DATAEE_WriteByte@GIEBitValue
 15124                           
 15125                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 15126  0ABB  082A               	movf	DATAEE_WriteByte@bAdd+1,w
 15127  0ABC  0030               	movlb	16	; select bank16
 15128  0ABD  009B               	movwf	27	;volatile
 15129  0ABE                     l7543:	
 15130                           
 15131                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 15132  0ABE  0020               	movlb	0	; select bank0
 15133  0ABF  0829               	movf	DATAEE_WriteByte@bAdd,w
 15134  0AC0  0030               	movlb	16	; select bank16
 15135  0AC1  009A               	movwf	26	;volatile
 15136  0AC2                     l7545:	
 15137                           
 15138                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 15139  0AC2  0020               	movlb	0	; select bank0
 15140  0AC3  082B               	movf	DATAEE_WriteByte@bData,w
 15141  0AC4  0030               	movlb	16	; select bank16
 15142  0AC5  009C               	movwf	28	;volatile
 15143  0AC6                     l7547:	
 15144                           
 15145                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 15146  0AC6  171E               	bsf	30,6	;volsfr
 15147  0AC7                     l7549:	
 15148                           
 15149                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 15150  0AC7  151E               	bsf	30,2	;volsfr
 15151  0AC8                     l7551:	
 15152                           
 15153                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 15154  0AC8  138B               	bcf	11,7	;volatile
 15155  0AC9                     l7553:	
 15156                           
 15157                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 15158  0AC9  3055               	movlw	85
 15159  0ACA  009F               	movwf	31	;volsfr
 15160  0ACB                     l7555:	
 15161                           
 15162                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 15163  0ACB  30AA               	movlw	170
 15164  0ACC  009F               	movwf	31	;volsfr
 15165  0ACD                     l7557:	
 15166                           
 15167                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 15168  0ACD  149E               	bsf	30,1	;volsfr
 15169  0ACE                     l1564:	
 15170                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 15171                           
 15172                           
 15173                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 15174  0ACE  189E               	btfsc	30,1	;volsfr
 15175  0ACF  2AD1               	goto	u4751
 15176  0AD0  2AD2               	goto	u4750
 15177  0AD1                     u4751:	
 15178  0AD1  2ACE               	goto	l1564
 15179  0AD2                     u4750:	
 15180  0AD2                     l1566:	
 15181                           
 15182                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 15183  0AD2  111E               	bcf	30,2	;volsfr
 15184  0AD3                     l7559:	
 15185                           
 15186                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 15187  0AD3  0020               	movlb	0	; select bank0
 15188  0AD4  0C2C               	rrf	DATAEE_WriteByte@GIEBitValue,w
 15189  0AD5  1C03               	skipc
 15190  0AD6  138B               	bcf	11,7	;volatile
 15191  0AD7  1803               	skipnc
 15192  0AD8  178B               	bsf	11,7	;volatile
 15193  0AD9                     l1567:	
 15194  0AD9  0008               	return
 15195  0ADA                     __end_of_DATAEE_WriteByte:	
 15196                           
 15197                           	psect	text22
 15198  04FA                     __ptext22:	
 15199 ;; *************** function _config_routine *****************
 15200 ;; Defined at:
 15201 ;;		line 321 in file "main.c"
 15202 ;; Parameters:    Size  Location     Type
 15203 ;;		None
 15204 ;; Auto vars:     Size  Location     Type
 15205 ;;  select_mode     2   38[BANK0 ] unsigned int 
 15206 ;; Return value:  Size  Location     Type
 15207 ;;                  1    wreg      void 
 15208 ;; Registers used:
 15209 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15210 ;; Tracked objects:
 15211 ;;		On entry : 0/0
 15212 ;;		On exit  : 0/0
 15213 ;;		Unchanged: 0/0
 15214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15216 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15217 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15218 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15219 ;;Total ram usage:        3 bytes
 15220 ;; Hardware stack levels used:    1
 15221 ;; Hardware stack levels required when called:   11
 15222 ;; This function calls:
 15223 ;;		_all_LED
 15224 ;;		_checkDebounceSW1
 15225 ;;		_checkDebounceSW2
 15226 ;;		_mod1_LED
 15227 ;;		_mod2_LED
 15228 ;;		_mod3_LED
 15229 ;;		_mod4_LED
 15230 ;;		_mode_select_LED
 15231 ;;		_selectSubfield
 15232 ;; This function is called by:
 15233 ;;		_main
 15234 ;; This function uses a non-reentrant model
 15235 ;;
 15236                           
 15237                           
 15238                           ;psect for function _config_routine
 15239  04FA                     _config_routine:	
 15240  04FA                     l8179:	
 15241                           ;incstack = 0
 15242                           ; Regs used in _config_routine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15243                           
 15244                           
 15245                           ;main.c: 323:     unsigned int select_mode =0;
 15246  04FA  0020               	movlb	0	; select bank0
 15247  04FB  01C6               	clrf	config_routine@select_mode
 15248  04FC  01C7               	clrf	config_routine@select_mode+1
 15249  04FD                     l8181:	
 15250                           
 15251                           ;main.c: 324:     last_ms = clkms;
 15252  04FD  087D               	movf	_clkms,w	;volatile
 15253  04FE  00C5               	movwf	??_config_routine
 15254  04FF  0845               	movf	??_config_routine,w
 15255  0500  00DC               	movwf	_last_ms
 15256  0501                     l8183:	
 15257                           
 15258                           ;main.c: 325:     last_ms2 = clkms;
 15259  0501  087D               	movf	_clkms,w	;volatile
 15260  0502  00C5               	movwf	??_config_routine
 15261  0503  0845               	movf	??_config_routine,w
 15262  0504  00DB               	movwf	_last_ms2
 15263  0505                     l8185:	
 15264                           
 15265                           ;main.c: 328:         if(mode_field_subfield[0] == -1 && select_mode == 0){
 15266  0505  0A62               	incf	_mode_field_subfield,w
 15267  0506  1D03               	skipz
 15268  0507  2D0C               	goto	u5151
 15269  0508  0A63               	incf	_mode_field_subfield+1,w
 15270  0509  1D03               	btfss	3,2
 15271  050A  2D0C               	goto	u5151
 15272  050B  2D0D               	goto	u5150
 15273  050C                     u5151:	
 15274  050C  2D16               	goto	l8191
 15275  050D                     u5150:	
 15276  050D                     l8187:	
 15277  050D  0846               	movf	config_routine@select_mode,w
 15278  050E  0447               	iorwf	config_routine@select_mode+1,w
 15279  050F  1D03               	btfss	3,2
 15280  0510  2D12               	goto	u5161
 15281  0511  2D13               	goto	u5160
 15282  0512                     u5161:	
 15283  0512  2D16               	goto	l8191
 15284  0513                     u5160:	
 15285  0513                     l8189:	
 15286                           
 15287                           ;main.c: 329:             all_LED();
 15288  0513  3186  263E  3184   	fcall	_all_LED
 15289  0516                     l8191:	
 15290                           
 15291                           ;main.c: 332:         if(!PORTBbits.RB4){
 15292  0516  0020               	movlb	0	; select bank0
 15293  0517  1A0D               	btfsc	13,4	;volatile
 15294  0518  2D1A               	goto	u5171
 15295  0519  2D1B               	goto	u5170
 15296  051A                     u5171:	
 15297  051A  2D51               	goto	l226
 15298  051B                     u5170:	
 15299  051B                     l8193:	
 15300                           
 15301                           ;main.c: 333:             if(checkDebounceSW1()){
 15302  051B  3186  2699  3184   	fcall	_checkDebounceSW1
 15303  051E  3A00               	xorlw	0
 15304  051F  1903               	skipnz
 15305  0520  2D22               	goto	u5181
 15306  0521  2D23               	goto	u5180
 15307  0522                     u5181:	
 15308  0522  2D51               	goto	l226
 15309  0523                     u5180:	
 15310  0523                     l8195:	
 15311                           
 15312                           ;main.c: 335:                 select_mode +=1;
 15313  0523  3001               	movlw	1
 15314  0524  0020               	movlb	0	; select bank0
 15315  0525  07C6               	addwf	config_routine@select_mode,f
 15316  0526  3000               	movlw	0
 15317  0527  3DC7               	addwfc	config_routine@select_mode+1,f
 15318                           
 15319                           ;main.c: 337:                 switch(select_mode){
 15320  0528  2D3E               	goto	l8209
 15321  0529                     l8197:	
 15322  0529  3197  2739  3184   	fcall	_mod1_LED
 15323  052C  2D51               	goto	l226
 15324  052D                     l8199:	
 15325  052D  3197  272F  3184   	fcall	_mod2_LED
 15326  0530  2D51               	goto	l226
 15327  0531                     l8201:	
 15328  0531  3197  2744  3184   	fcall	_mod3_LED
 15329  0534  2D51               	goto	l226
 15330  0535                     l8203:	
 15331  0535  3187  27F5  3184   	fcall	_mod4_LED
 15332  0538  2D51               	goto	l226
 15333  0539                     l8205:	
 15334  0539  01C6               	clrf	config_routine@select_mode
 15335  053A  01C7               	clrf	config_routine@select_mode+1
 15336  053B  01D8               	clrf	_config_mode	;volatile
 15337  053C  01D7               	clrf	_alarm	;volatile
 15338                           
 15339                           ;main.c: 343:                     break;
 15340  053D  2D51               	goto	l226
 15341  053E                     l8209:	
 15342                           
 15343                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15344                           ; Switch size 1, requested type "simple"
 15345                           ; Number of cases is 1, Range of values is 0 to 0
 15346                           ; switch strategies available:
 15347                           ; Name         Instructions Cycles
 15348                           ; simple_byte            4     3 (average)
 15349                           ; direct_byte            8     6 (fixed)
 15350                           ; jumptable            260     6 (fixed)
 15351                           ;	Chosen strategy is simple_byte
 15352  053E  0847               	movf	config_routine@select_mode+1,w
 15353  053F  3A00               	xorlw	0	; case 0
 15354  0540  1903               	skipnz
 15355  0541  2D43               	goto	l8619
 15356  0542  2D39               	goto	l8205
 15357  0543                     l8619:	
 15358                           
 15359                           ; Switch size 1, requested type "simple"
 15360                           ; Number of cases is 4, Range of values is 1 to 4
 15361                           ; switch strategies available:
 15362                           ; Name         Instructions Cycles
 15363                           ; simple_byte           13     7 (average)
 15364                           ; direct_byte           17     9 (fixed)
 15365                           ; jumptable            263     9 (fixed)
 15366                           ;	Chosen strategy is simple_byte
 15367  0543  0846               	movf	config_routine@select_mode,w
 15368  0544  3A01               	xorlw	1	; case 1
 15369  0545  1903               	skipnz
 15370  0546  2D29               	goto	l8197
 15371  0547  3A03               	xorlw	3	; case 2
 15372  0548  1903               	skipnz
 15373  0549  2D2D               	goto	l8199
 15374  054A  3A01               	xorlw	1	; case 3
 15375  054B  1903               	skipnz
 15376  054C  2D31               	goto	l8201
 15377  054D  3A07               	xorlw	7	; case 4
 15378  054E  1903               	skipnz
 15379  054F  2D35               	goto	l8203
 15380  0550  2D39               	goto	l8205
 15381  0551                     l226:	
 15382                           ;main.c: 347:         }
 15383                           
 15384                           
 15385                           ;main.c: 350:         if(!PORTCbits.RC5){
 15386  0551  0020               	movlb	0	; select bank0
 15387  0552  1A8E               	btfsc	14,5	;volatile
 15388  0553  2D55               	goto	u5191
 15389  0554  2D56               	goto	u5190
 15390  0555                     u5191:	
 15391  0555  2D69               	goto	l8219
 15392  0556                     u5190:	
 15393  0556                     l8211:	
 15394                           
 15395                           ;main.c: 351:             if(checkDebounceSW2()){
 15396  0556  318E  26C4  3184   	fcall	_checkDebounceSW2
 15397  0559  3A00               	xorlw	0
 15398  055A  1903               	skipnz
 15399  055B  2D5D               	goto	u5201
 15400  055C  2D5E               	goto	u5200
 15401  055D                     u5201:	
 15402  055D  2D69               	goto	l8219
 15403  055E                     u5200:	
 15404  055E                     l8213:	
 15405                           
 15406                           ;main.c: 352:                 mode_field_subfield[0] = select_mode;
 15407  055E  0020               	movlb	0	; select bank0
 15408  055F  0847               	movf	config_routine@select_mode+1,w
 15409  0560  00E3               	movwf	_mode_field_subfield+1
 15410  0561  0846               	movf	config_routine@select_mode,w
 15411  0562  00E2               	movwf	_mode_field_subfield
 15412  0563                     l8215:	
 15413                           
 15414                           ;main.c: 353:                 mode_select_LED();
 15415  0563  318A  2233  3184   	fcall	_mode_select_LED
 15416  0566                     l8217:	
 15417                           
 15418                           ;main.c: 354:                 selectSubfield();
 15419  0566  318F  275E  3184   	fcall	_selectSubfield
 15420  0569                     l8219:	
 15421                           
 15422                           ;main.c: 358:         _delay((unsigned long)((2)*(1000000/4000.0)));
 15423  0569  30A6               	movlw	166
 15424  056A                     u5427:	
 15425  056A  0B89               	decfsz	9,f
 15426  056B  2D6A               	goto	u5427
 15427  056C  3200               	nop2
 15428  056D                     l8221:	
 15429                           
 15430                           ;main.c: 360:     }while(config_mode == 1);
 15431  056D  0020               	movlb	0	; select bank0
 15432  056E  0358               	decf	_config_mode,w	;volatile
 15433  056F  1903               	btfsc	3,2
 15434  0570  2D72               	goto	u5211
 15435  0571  2D73               	goto	u5210
 15436  0572                     u5211:	
 15437  0572  2D05               	goto	l8185
 15438  0573                     u5210:	
 15439  0573                     l8223:	
 15440                           
 15441                           ;main.c: 362:     mode_field_subfield[0] = -1;
 15442  0573  30FF               	movlw	255
 15443  0574  00E2               	movwf	_mode_field_subfield
 15444  0575  30FF               	movlw	255
 15445  0576  00E3               	movwf	_mode_field_subfield+1
 15446                           
 15447                           ;main.c: 363:     mode_field_subfield[1] = -1;
 15448  0577  30FF               	movlw	255
 15449  0578  00E4               	movwf	_mode_field_subfield+2
 15450  0579  30FF               	movlw	255
 15451  057A  00E5               	movwf	_mode_field_subfield+3
 15452  057B                     l238:	
 15453  057B  0008               	return
 15454  057C                     __end_of_config_routine:	
 15455                           
 15456                           	psect	text23
 15457  0F5E                     __ptext23:	
 15458 ;; *************** function _selectSubfield *****************
 15459 ;; Defined at:
 15460 ;;		line 372 in file "main.c"
 15461 ;; Parameters:    Size  Location     Type
 15462 ;;		None
 15463 ;; Auto vars:     Size  Location     Type
 15464 ;;  subfield        2   35[BANK0 ] unsigned int 
 15465 ;; Return value:  Size  Location     Type
 15466 ;;                  1    wreg      void 
 15467 ;; Registers used:
 15468 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15469 ;; Tracked objects:
 15470 ;;		On entry : 0/0
 15471 ;;		On exit  : 0/0
 15472 ;;		Unchanged: 0/0
 15473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15475 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15476 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15477 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15478 ;;Total ram usage:        4 bytes
 15479 ;; Hardware stack levels used:    1
 15480 ;; Hardware stack levels required when called:   10
 15481 ;; This function calls:
 15482 ;;		_all_LED
 15483 ;;		_checkDebounceSW1
 15484 ;;		_checkDebounceSW2
 15485 ;;		_getSubfieldInfo
 15486 ;;		_mode_LED
 15487 ;; This function is called by:
 15488 ;;		_config_routine
 15489 ;; This function uses a non-reentrant model
 15490 ;;
 15491                           
 15492                           
 15493                           ;psect for function _selectSubfield
 15494  0F5E                     _selectSubfield:	
 15495  0F5E                     l7743:	
 15496                           ;incstack = 0
 15497                           ; Regs used in _selectSubfield: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15498                           
 15499                           
 15500                           ;main.c: 373:     unsigned int subfield = 1;
 15501  0F5E  3001               	movlw	1
 15502  0F5F  0020               	movlb	0	; select bank0
 15503  0F60  00C3               	movwf	selectSubfield@subfield
 15504  0F61  3000               	movlw	0
 15505  0F62  00C4               	movwf	selectSubfield@subfield+1
 15506  0F63                     l7745:	
 15507                           
 15508                           ;main.c: 377:         if(!PORTBbits.RB4){
 15509  0F63  1A0D               	btfsc	13,4	;volatile
 15510  0F64  2F66               	goto	u4831
 15511  0F65  2F67               	goto	u4830
 15512  0F66                     u4831:	
 15513  0F66  2F74               	goto	l7751
 15514  0F67                     u4830:	
 15515  0F67                     l7747:	
 15516                           
 15517                           ;main.c: 378:             if(checkDebounceSW1()){
 15518  0F67  3186  2699  318F   	fcall	_checkDebounceSW1
 15519  0F6A  3A00               	xorlw	0
 15520  0F6B  1903               	skipnz
 15521  0F6C  2F6E               	goto	u4841
 15522  0F6D  2F6F               	goto	u4840
 15523  0F6E                     u4841:	
 15524  0F6E  2F74               	goto	l7751
 15525  0F6F                     u4840:	
 15526  0F6F                     l7749:	
 15527                           
 15528                           ;main.c: 379:                 subfield +=1;
 15529  0F6F  3001               	movlw	1
 15530  0F70  0020               	movlb	0	; select bank0
 15531  0F71  07C3               	addwf	selectSubfield@subfield,f
 15532  0F72  3000               	movlw	0
 15533  0F73  3DC4               	addwfc	selectSubfield@subfield+1,f
 15534  0F74                     l7751:	
 15535                           
 15536                           ;main.c: 384:         mode_LED( subfield);
 15537  0F74  0020               	movlb	0	; select bank0
 15538  0F75  0843               	movf	selectSubfield@subfield,w
 15539  0F76  318B  234C  318F   	fcall	_mode_LED
 15540  0F79                     l7753:	
 15541                           
 15542                           ;main.c: 386:         if(!PORTCbits.RC5){
 15543  0F79  0020               	movlb	0	; select bank0
 15544  0F7A  1A8E               	btfsc	14,5	;volatile
 15545  0F7B  2F7D               	goto	u4851
 15546  0F7C  2F7E               	goto	u4850
 15547  0F7D                     u4851:	
 15548  0F7D  2F91               	goto	l7763
 15549  0F7E                     u4850:	
 15550  0F7E                     l7755:	
 15551                           
 15552                           ;main.c: 387:             if(checkDebounceSW2()){
 15553  0F7E  318E  26C4  318F   	fcall	_checkDebounceSW2
 15554  0F81  3A00               	xorlw	0
 15555  0F82  1903               	skipnz
 15556  0F83  2F85               	goto	u4861
 15557  0F84  2F86               	goto	u4860
 15558  0F85                     u4861:	
 15559  0F85  2F91               	goto	l7763
 15560  0F86                     u4860:	
 15561  0F86                     l7757:	
 15562                           
 15563                           ;main.c: 388:                 mode_field_subfield[1] = subfield;
 15564  0F86  0020               	movlb	0	; select bank0
 15565  0F87  0844               	movf	selectSubfield@subfield+1,w
 15566  0F88  00E5               	movwf	_mode_field_subfield+3
 15567  0F89  0843               	movf	selectSubfield@subfield,w
 15568  0F8A  00E4               	movwf	_mode_field_subfield+2
 15569  0F8B                     l7759:	
 15570                           
 15571                           ;main.c: 389:                 getSubfieldInfo();
 15572  0F8B  3182  222A  318F   	fcall	_getSubfieldInfo
 15573  0F8E                     l7761:	
 15574                           
 15575                           ;main.c: 390:                 all_LED();
 15576  0F8E  3186  263E  318F   	fcall	_all_LED
 15577  0F91                     l7763:	
 15578                           
 15579                           ;main.c: 395:         _delay((unsigned long)((2)*(1000000/4000.0)));
 15580  0F91  30A6               	movlw	166
 15581  0F92                     u5437:	
 15582  0F92  0B89               	decfsz	9,f
 15583  0F93  2F92               	goto	u5437
 15584  0F94  3200               	nop2
 15585  0F95                     l7765:	
 15586                           
 15587                           ;main.c: 397:     }while(subfield <= num_subfields[mode_field_subfield[0]]);
 15588  0F95  0020               	movlb	0	; select bank0
 15589  0F96  0863               	movf	_mode_field_subfield+1,w
 15590  0F97  0085               	movwf	5
 15591  0F98  0862               	movf	_mode_field_subfield,w
 15592  0F99  0084               	movwf	4
 15593  0F9A  3000               	movlw	low (_num_subfields| (0+32768))
 15594  0F9B  0784               	addwf	4,f
 15595  0F9C  3098               	movlw	high (_num_subfields| (0+32768))
 15596  0F9D  3D85               	addwfc	5,f
 15597  0F9E  0800               	movf	0,w	;code access
 15598  0F9F  00C1               	movwf	??_selectSubfield
 15599  0FA0  01C2               	clrf	??_selectSubfield+1
 15600  0FA1  0844               	movf	selectSubfield@subfield+1,w
 15601  0FA2  0242               	subwf	??_selectSubfield+1,w
 15602  0FA3  1D03               	skipz
 15603  0FA4  2FA7               	goto	u4875
 15604  0FA5  0843               	movf	selectSubfield@subfield,w
 15605  0FA6  0241               	subwf	??_selectSubfield,w
 15606  0FA7                     u4875:	
 15607  0FA7  1803               	skipnc
 15608  0FA8  2FAA               	goto	u4871
 15609  0FA9  2FAB               	goto	u4870
 15610  0FAA                     u4871:	
 15611  0FAA  2F63               	goto	l7745
 15612  0FAB                     u4870:	
 15613  0FAB                     l247:	
 15614  0FAB  0008               	return
 15615  0FAC                     __end_of_selectSubfield:	
 15616                           
 15617                           	psect	text24
 15618  0B4C                     __ptext24:	
 15619 ;; *************** function _mode_LED *****************
 15620 ;; Defined at:
 15621 ;;		line 113 in file "leds.c"
 15622 ;; Parameters:    Size  Location     Type
 15623 ;;  subfield        1    wreg     unsigned char 
 15624 ;; Auto vars:     Size  Location     Type
 15625 ;;  subfield        1   15[BANK0 ] unsigned char 
 15626 ;; Return value:  Size  Location     Type
 15627 ;;                  1    wreg      void 
 15628 ;; Registers used:
 15629 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15630 ;; Tracked objects:
 15631 ;;		On entry : 0/0
 15632 ;;		On exit  : 0/0
 15633 ;;		Unchanged: 0/0
 15634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15636 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15637 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15638 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15639 ;;Total ram usage:        3 bytes
 15640 ;; Hardware stack levels used:    1
 15641 ;; Hardware stack levels required when called:    8
 15642 ;; This function calls:
 15643 ;;		_mod1_LED
 15644 ;;		_mod2_LED
 15645 ;;		_mod3_LED
 15646 ;;		_mod4_LED
 15647 ;; This function is called by:
 15648 ;;		_selectSubfield
 15649 ;; This function uses a non-reentrant model
 15650 ;;
 15651                           
 15652                           
 15653                           ;psect for function _mode_LED
 15654  0B4C                     _mode_LED:	
 15655                           
 15656                           ;incstack = 0
 15657                           ; Regs used in _mode_LED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15658                           ;mode_LED@subfield stored from wreg
 15659  0B4C  0020               	movlb	0	; select bank0
 15660  0B4D  00AF               	movwf	mode_LED@subfield
 15661  0B4E                     l7585:	
 15662                           
 15663                           ;leds.c: 114:         switch(subfield){
 15664  0B4E  2B5F               	goto	l7597
 15665  0B4F                     l7587:	
 15666  0B4F  3197  2739  318B   	fcall	_mod1_LED
 15667  0B52  2B75               	goto	l610
 15668  0B53                     l7589:	
 15669  0B53  3197  272F  318B   	fcall	_mod2_LED
 15670  0B56  2B75               	goto	l610
 15671  0B57                     l7591:	
 15672  0B57  3197  2744  318B   	fcall	_mod3_LED
 15673  0B5A  2B75               	goto	l610
 15674  0B5B                     l7593:	
 15675  0B5B  3187  27F5  318B   	fcall	_mod4_LED
 15676  0B5E  2B75               	goto	l610
 15677  0B5F                     l7597:	
 15678  0B5F  082F               	movf	mode_LED@subfield,w
 15679  0B60  00AD               	movwf	??_mode_LED
 15680  0B61  01AE               	clrf	??_mode_LED+1
 15681                           
 15682                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15683                           ; Switch size 1, requested type "simple"
 15684                           ; Number of cases is 1, Range of values is 0 to 0
 15685                           ; switch strategies available:
 15686                           ; Name         Instructions Cycles
 15687                           ; simple_byte            4     3 (average)
 15688                           ; direct_byte            8     6 (fixed)
 15689                           ; jumptable            260     6 (fixed)
 15690                           ;	Chosen strategy is simple_byte
 15691  0B62  082E               	movf	??_mode_LED+1,w
 15692  0B63  3A00               	xorlw	0	; case 0
 15693  0B64  1903               	skipnz
 15694  0B65  2B67               	goto	l8621
 15695  0B66  2B75               	goto	l610
 15696  0B67                     l8621:	
 15697                           
 15698                           ; Switch size 1, requested type "simple"
 15699                           ; Number of cases is 4, Range of values is 1 to 4
 15700                           ; switch strategies available:
 15701                           ; Name         Instructions Cycles
 15702                           ; simple_byte           13     7 (average)
 15703                           ; direct_byte           17     9 (fixed)
 15704                           ; jumptable            263     9 (fixed)
 15705                           ;	Chosen strategy is simple_byte
 15706  0B67  082D               	movf	??_mode_LED,w
 15707  0B68  3A01               	xorlw	1	; case 1
 15708  0B69  1903               	skipnz
 15709  0B6A  2B4F               	goto	l7587
 15710  0B6B  3A03               	xorlw	3	; case 2
 15711  0B6C  1903               	skipnz
 15712  0B6D  2B53               	goto	l7589
 15713  0B6E  3A01               	xorlw	1	; case 3
 15714  0B6F  1903               	skipnz
 15715  0B70  2B57               	goto	l7591
 15716  0B71  3A07               	xorlw	7	; case 4
 15717  0B72  1903               	skipnz
 15718  0B73  2B5B               	goto	l7593
 15719  0B74  2B75               	goto	l610
 15720  0B75                     l610:	
 15721  0B75  0008               	return
 15722  0B76                     __end_of_mode_LED:	
 15723                           
 15724                           	psect	text25
 15725  07F5                     __ptext25:	
 15726 ;; *************** function _mod4_LED *****************
 15727 ;; Defined at:
 15728 ;;		line 84 in file "leds.c"
 15729 ;; Parameters:    Size  Location     Type
 15730 ;;		None
 15731 ;; Auto vars:     Size  Location     Type
 15732 ;;		None
 15733 ;; Return value:  Size  Location     Type
 15734 ;;                  1    wreg      void 
 15735 ;; Registers used:
 15736 ;;		wreg, status,2, status,0, pclath, cstack
 15737 ;; Tracked objects:
 15738 ;;		On entry : 0/0
 15739 ;;		On exit  : 0/0
 15740 ;;		Unchanged: 0/0
 15741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15746 ;;Total ram usage:        0 bytes
 15747 ;; Hardware stack levels used:    1
 15748 ;; Hardware stack levels required when called:    7
 15749 ;; This function calls:
 15750 ;;		_PWM6_LoadDutyValue
 15751 ;; This function is called by:
 15752 ;;		_config_routine
 15753 ;;		_mode_LED
 15754 ;; This function uses a non-reentrant model
 15755 ;;
 15756                           
 15757                           
 15758                           ;psect for function _mod4_LED
 15759  07F5                     _mod4_LED:	
 15760  07F5                     l7365:	
 15761                           ;incstack = 0
 15762                           ; Regs used in _mod4_LED: [wreg+status,2+status,0+pclath+cstack]
 15763                           
 15764                           
 15765                           ;leds.c: 85:     LATA = 0;
 15766  07F5  0020               	movlb	0	; select bank0
 15767  07F6  0196               	clrf	22	;volatile
 15768  07F7                     l7367:	
 15769                           
 15770                           ;leds.c: 86:     PWM6_LoadDutyValue(0);
 15771  07F7  3000               	movlw	0
 15772  07F8  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 15773  07F9  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 15774  07FA  3189  2122  3187   	fcall	_PWM6_LoadDutyValue
 15775  07FD                     l7369:	
 15776  07FD  0020               	movlb	0	; select bank0
 15777  07FE  1616               	bsf	22,4	;volatile
 15778  07FF                     l589:	
 15779  07FF  0008               	return
 15780  0800                     __end_of_mod4_LED:	
 15781                           
 15782                           	psect	text26
 15783  1744                     __ptext26:	
 15784 ;; *************** function _mod3_LED *****************
 15785 ;; Defined at:
 15786 ;;		line 77 in file "leds.c"
 15787 ;; Parameters:    Size  Location     Type
 15788 ;;		None
 15789 ;; Auto vars:     Size  Location     Type
 15790 ;;		None
 15791 ;; Return value:  Size  Location     Type
 15792 ;;                  1    wreg      void 
 15793 ;; Registers used:
 15794 ;;		wreg, status,2, status,0, pclath, cstack
 15795 ;; Tracked objects:
 15796 ;;		On entry : 0/0
 15797 ;;		On exit  : 0/0
 15798 ;;		Unchanged: 0/0
 15799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15804 ;;Total ram usage:        0 bytes
 15805 ;; Hardware stack levels used:    1
 15806 ;; Hardware stack levels required when called:    7
 15807 ;; This function calls:
 15808 ;;		_PWM6_LoadDutyValue
 15809 ;; This function is called by:
 15810 ;;		_config_routine
 15811 ;;		_mode_LED
 15812 ;; This function uses a non-reentrant model
 15813 ;;
 15814                           
 15815                           
 15816                           ;psect for function _mod3_LED
 15817  1744                     _mod3_LED:	
 15818  1744                     l7359:	
 15819                           ;incstack = 0
 15820                           ; Regs used in _mod3_LED: [wreg+status,2+status,0+pclath+cstack]
 15821                           
 15822                           
 15823                           ;leds.c: 78:     LATA = 0;
 15824  1744  0020               	movlb	0	; select bank0
 15825  1745  0196               	clrf	22	;volatile
 15826  1746                     l7361:	
 15827                           
 15828                           ;leds.c: 79:     PWM6_LoadDutyValue(0);
 15829  1746  3000               	movlw	0
 15830  1747  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 15831  1748  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 15832  1749  3189  2122  3197   	fcall	_PWM6_LoadDutyValue
 15833  174C                     l7363:	
 15834  174C  0020               	movlb	0	; select bank0
 15835  174D  1696               	bsf	22,5	;volatile
 15836  174E                     l584:	
 15837  174E  0008               	return
 15838  174F                     __end_of_mod3_LED:	
 15839                           
 15840                           	psect	text27
 15841  172F                     __ptext27:	
 15842 ;; *************** function _mod2_LED *****************
 15843 ;; Defined at:
 15844 ;;		line 72 in file "leds.c"
 15845 ;; Parameters:    Size  Location     Type
 15846 ;;		None
 15847 ;; Auto vars:     Size  Location     Type
 15848 ;;		None
 15849 ;; Return value:  Size  Location     Type
 15850 ;;                  1    wreg      void 
 15851 ;; Registers used:
 15852 ;;		wreg, status,2, status,0, pclath, cstack
 15853 ;; Tracked objects:
 15854 ;;		On entry : 0/0
 15855 ;;		On exit  : 0/0
 15856 ;;		Unchanged: 0/0
 15857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15862 ;;Total ram usage:        0 bytes
 15863 ;; Hardware stack levels used:    1
 15864 ;; Hardware stack levels required when called:    7
 15865 ;; This function calls:
 15866 ;;		_PWM6_LoadDutyValue
 15867 ;; This function is called by:
 15868 ;;		_config_routine
 15869 ;;		_mode_LED
 15870 ;; This function uses a non-reentrant model
 15871 ;;
 15872                           
 15873                           
 15874                           ;psect for function _mod2_LED
 15875  172F                     _mod2_LED:	
 15876  172F                     l7355:	
 15877                           ;incstack = 0
 15878                           ; Regs used in _mod2_LED: [wreg+status,2+status,0+pclath+cstack]
 15879                           
 15880                           
 15881                           ;leds.c: 73:     LATA = 0;
 15882  172F  0020               	movlb	0	; select bank0
 15883  1730  0196               	clrf	22	;volatile
 15884  1731                     l7357:	
 15885                           
 15886                           ;leds.c: 74:     PWM6_LoadDutyValue(1023);
 15887  1731  30FF               	movlw	255
 15888  1732  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 15889  1733  3003               	movlw	3
 15890  1734  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 15891  1735  3189  2122  3197   	fcall	_PWM6_LoadDutyValue
 15892  1738                     l579:	
 15893  1738  0008               	return
 15894  1739                     __end_of_mod2_LED:	
 15895                           
 15896                           	psect	text28
 15897  1739                     __ptext28:	
 15898 ;; *************** function _mod1_LED *****************
 15899 ;; Defined at:
 15900 ;;		line 65 in file "leds.c"
 15901 ;; Parameters:    Size  Location     Type
 15902 ;;		None
 15903 ;; Auto vars:     Size  Location     Type
 15904 ;;		None
 15905 ;; Return value:  Size  Location     Type
 15906 ;;                  1    wreg      void 
 15907 ;; Registers used:
 15908 ;;		wreg, status,2, status,0, pclath, cstack
 15909 ;; Tracked objects:
 15910 ;;		On entry : 0/0
 15911 ;;		On exit  : 0/0
 15912 ;;		Unchanged: 0/0
 15913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15918 ;;Total ram usage:        0 bytes
 15919 ;; Hardware stack levels used:    1
 15920 ;; Hardware stack levels required when called:    7
 15921 ;; This function calls:
 15922 ;;		_PWM6_LoadDutyValue
 15923 ;; This function is called by:
 15924 ;;		_config_routine
 15925 ;;		_mode_LED
 15926 ;; This function uses a non-reentrant model
 15927 ;;
 15928                           
 15929                           
 15930                           ;psect for function _mod1_LED
 15931  1739                     _mod1_LED:	
 15932  1739                     l7349:	
 15933                           ;incstack = 0
 15934                           ; Regs used in _mod1_LED: [wreg+status,2+status,0+pclath+cstack]
 15935                           
 15936                           
 15937                           ;leds.c: 66:     LATA = 0;
 15938  1739  0020               	movlb	0	; select bank0
 15939  173A  0196               	clrf	22	;volatile
 15940  173B                     l7351:	
 15941                           
 15942                           ;leds.c: 67:     PWM6_LoadDutyValue(0);
 15943  173B  3000               	movlw	0
 15944  173C  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 15945  173D  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 15946  173E  3189  2122  3197   	fcall	_PWM6_LoadDutyValue
 15947  1741                     l7353:	
 15948  1741  0020               	movlb	0	; select bank0
 15949  1742  1796               	bsf	22,7	;volatile
 15950  1743                     l576:	
 15951  1743  0008               	return
 15952  1744                     __end_of_mod1_LED:	
 15953                           
 15954                           	psect	text29
 15955  022A                     __ptext29:	
 15956 ;; *************** function _getSubfieldInfo *****************
 15957 ;; Defined at:
 15958 ;;		line 407 in file "main.c"
 15959 ;; Parameters:    Size  Location     Type
 15960 ;;		None
 15961 ;; Auto vars:     Size  Location     Type
 15962 ;;  temp_thresh_    1   32[BANK0 ] unsigned char 
 15963 ;;  temp_thresh_    1   31[BANK0 ] unsigned char 
 15964 ;;  m_units         1   30[BANK0 ] unsigned char 
 15965 ;;  m_tens          1   29[BANK0 ] unsigned char 
 15966 ;;  h_units         1   28[BANK0 ] unsigned char 
 15967 ;;  h_tens          1   27[BANK0 ] unsigned char 
 15968 ;; Return value:  Size  Location     Type
 15969 ;;                  1    wreg      void 
 15970 ;; Registers used:
 15971 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15972 ;; Tracked objects:
 15973 ;;		On entry : 0/0
 15974 ;;		On exit  : 0/0
 15975 ;;		Unchanged: 0/0
 15976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15978 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15979 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15980 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15981 ;;Total ram usage:        9 bytes
 15982 ;; Hardware stack levels used:    1
 15983 ;; Hardware stack levels required when called:    9
 15984 ;; This function calls:
 15985 ;;		___awdiv
 15986 ;;		___awmod
 15987 ;;		___bmul
 15988 ;;		_increment_subfield
 15989 ;;		_limitHoursUnits
 15990 ;;		_limitTempThreshUnits
 15991 ;; This function is called by:
 15992 ;;		_selectSubfield
 15993 ;; This function uses a non-reentrant model
 15994 ;;
 15995                           
 15996                           
 15997                           ;psect for function _getSubfieldInfo
 15998  022A                     _getSubfieldInfo:	
 15999  022A                     l7605:	
 16000                           ;incstack = 0
 16001                           ; Regs used in _getSubfieldInfo: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16002                           
 16003                           
 16004                           ;main.c: 409:     unsigned char h_tens, h_units, m_tens, m_units, temp_thresh_tens, temp
      +                          _thresh_units;;main.c: 411:     switch(mode_field_subfield[0]){
 16005  022A  2B71               	goto	l7643
 16006  022B                     l251:	
 16007                           ;main.c: 412:         case 1:
 16008                           
 16009                           
 16010                           ;main.c: 413:             PIE4bits.TMR1IE = 0;
 16011  022B  002E               	movlb	14	; select bank14
 16012  022C  101A               	bcf	26,0	;volatile
 16013  022D                     l7607:	
 16014                           
 16015                           ;main.c: 414:             h_tens = clkh / 10;
 16016  022D  300A               	movlw	10
 16017  022E  0020               	movlb	0	; select bank0
 16018  022F  00A3               	movwf	___awdiv@divisor
 16019  0230  3000               	movlw	0
 16020  0231  00A4               	movwf	___awdiv@divisor+1
 16021  0232  085F               	movf	_clkh,w	;volatile
 16022  0233  00B8               	movwf	??_getSubfieldInfo
 16023  0234  01B9               	clrf	??_getSubfieldInfo+1
 16024  0235  0838               	movf	??_getSubfieldInfo,w
 16025  0236  00A5               	movwf	___awdiv@dividend
 16026  0237  0839               	movf	??_getSubfieldInfo+1,w
 16027  0238  00A6               	movwf	___awdiv@dividend+1
 16028  0239  3185  25DE  3182   	fcall	___awdiv
 16029  023C  0020               	movlb	0	; select bank0
 16030  023D  0823               	movf	?___awdiv,w
 16031  023E  00BA               	movwf	??_getSubfieldInfo+2
 16032  023F  083A               	movf	??_getSubfieldInfo+2,w
 16033  0240  00BB               	movwf	getSubfieldInfo@h_tens
 16034                           
 16035                           ;main.c: 415:             h_units = clkh % 10;
 16036  0241  300A               	movlw	10
 16037  0242  00A3               	movwf	___awmod@divisor
 16038  0243  3000               	movlw	0
 16039  0244  00A4               	movwf	___awmod@divisor+1
 16040  0245  085F               	movf	_clkh,w	;volatile
 16041  0246  00B8               	movwf	??_getSubfieldInfo
 16042  0247  01B9               	clrf	??_getSubfieldInfo+1
 16043  0248  0838               	movf	??_getSubfieldInfo,w
 16044  0249  00A5               	movwf	___awmod@dividend
 16045  024A  0839               	movf	??_getSubfieldInfo+1,w
 16046  024B  00A6               	movwf	___awmod@dividend+1
 16047  024C  3187  27A1  3182   	fcall	___awmod
 16048  024F  0020               	movlb	0	; select bank0
 16049  0250  0823               	movf	?___awmod,w
 16050  0251  00BA               	movwf	??_getSubfieldInfo+2
 16051  0252  083A               	movf	??_getSubfieldInfo+2,w
 16052  0253  00BC               	movwf	getSubfieldInfo@h_units
 16053                           
 16054                           ;main.c: 416:             m_tens = clkm / 10;
 16055  0254  300A               	movlw	10
 16056  0255  00A3               	movwf	___awdiv@divisor
 16057  0256  3000               	movlw	0
 16058  0257  00A4               	movwf	___awdiv@divisor+1
 16059  0258  085E               	movf	_clkm,w	;volatile
 16060  0259  00B8               	movwf	??_getSubfieldInfo
 16061  025A  01B9               	clrf	??_getSubfieldInfo+1
 16062  025B  0838               	movf	??_getSubfieldInfo,w
 16063  025C  00A5               	movwf	___awdiv@dividend
 16064  025D  0839               	movf	??_getSubfieldInfo+1,w
 16065  025E  00A6               	movwf	___awdiv@dividend+1
 16066  025F  3185  25DE  3182   	fcall	___awdiv
 16067  0262  0020               	movlb	0	; select bank0
 16068  0263  0823               	movf	?___awdiv,w
 16069  0264  00BA               	movwf	??_getSubfieldInfo+2
 16070  0265  083A               	movf	??_getSubfieldInfo+2,w
 16071  0266  00BD               	movwf	getSubfieldInfo@m_tens
 16072                           
 16073                           ;main.c: 417:             m_units = clkm % 10;
 16074  0267  300A               	movlw	10
 16075  0268  00A3               	movwf	___awmod@divisor
 16076  0269  3000               	movlw	0
 16077  026A  00A4               	movwf	___awmod@divisor+1
 16078  026B  085E               	movf	_clkm,w	;volatile
 16079  026C  00B8               	movwf	??_getSubfieldInfo
 16080  026D  01B9               	clrf	??_getSubfieldInfo+1
 16081  026E  0838               	movf	??_getSubfieldInfo,w
 16082  026F  00A5               	movwf	___awmod@dividend
 16083  0270  0839               	movf	??_getSubfieldInfo+1,w
 16084  0271  00A6               	movwf	___awmod@dividend+1
 16085  0272  3187  27A1  3182   	fcall	___awmod
 16086  0275  0020               	movlb	0	; select bank0
 16087  0276  0823               	movf	?___awmod,w
 16088  0277  00BA               	movwf	??_getSubfieldInfo+2
 16089  0278  083A               	movf	??_getSubfieldInfo+2,w
 16090  0279  00BE               	movwf	getSubfieldInfo@m_units
 16091                           
 16092                           ;main.c: 419:             switch(mode_field_subfield[1]){
 16093  027A  2ABD               	goto	l7619
 16094  027B                     l7609:	
 16095                           
 16096                           ;main.c: 421:                    h_tens = increment_subfield(2, h_tens);
 16097  027B  083B               	movf	getSubfieldInfo@h_tens,w
 16098  027C  00B8               	movwf	??_getSubfieldInfo
 16099  027D  01B9               	clrf	??_getSubfieldInfo+1
 16100  027E  0838               	movf	??_getSubfieldInfo,w
 16101  027F  00B2               	movwf	increment_subfield@init_val
 16102  0280  0839               	movf	??_getSubfieldInfo+1,w
 16103  0281  00B3               	movwf	increment_subfield@init_val+1
 16104  0282  3002               	movlw	2
 16105  0283  3187  274D  3182   	fcall	_increment_subfield
 16106  0286  0020               	movlb	0	; select bank0
 16107  0287  00BA               	movwf	??_getSubfieldInfo+2
 16108  0288  083A               	movf	??_getSubfieldInfo+2,w
 16109  0289  00BB               	movwf	getSubfieldInfo@h_tens
 16110                           
 16111                           ;main.c: 422:                  break;
 16112  028A  2AD0               	goto	l7621
 16113  028B                     l7611:	
 16114                           
 16115                           ;main.c: 424:                     h_units = increment_subfield( limitHoursUnits() , h_un
      +                          its);
 16116  028B  083C               	movf	getSubfieldInfo@h_units,w
 16117  028C  00B8               	movwf	??_getSubfieldInfo
 16118  028D  01B9               	clrf	??_getSubfieldInfo+1
 16119  028E  0838               	movf	??_getSubfieldInfo,w
 16120  028F  00B2               	movwf	increment_subfield@init_val
 16121  0290  0839               	movf	??_getSubfieldInfo+1,w
 16122  0291  00B3               	movwf	increment_subfield@init_val+1
 16123  0292  3189  21A3  3182   	fcall	_limitHoursUnits
 16124  0295  3187  274D  3182   	fcall	_increment_subfield
 16125  0298  0020               	movlb	0	; select bank0
 16126  0299  00BA               	movwf	??_getSubfieldInfo+2
 16127  029A  083A               	movf	??_getSubfieldInfo+2,w
 16128  029B  00BC               	movwf	getSubfieldInfo@h_units
 16129                           
 16130                           ;main.c: 425:                  break;
 16131  029C  2AD0               	goto	l7621
 16132  029D                     l7613:	
 16133                           
 16134                           ;main.c: 427:                     m_tens = increment_subfield( 5 , m_tens);
 16135  029D  083D               	movf	getSubfieldInfo@m_tens,w
 16136  029E  00B8               	movwf	??_getSubfieldInfo
 16137  029F  01B9               	clrf	??_getSubfieldInfo+1
 16138  02A0  0838               	movf	??_getSubfieldInfo,w
 16139  02A1  00B2               	movwf	increment_subfield@init_val
 16140  02A2  0839               	movf	??_getSubfieldInfo+1,w
 16141  02A3  00B3               	movwf	increment_subfield@init_val+1
 16142  02A4  3005               	movlw	5
 16143  02A5  3187  274D  3182   	fcall	_increment_subfield
 16144  02A8  0020               	movlb	0	; select bank0
 16145  02A9  00BA               	movwf	??_getSubfieldInfo+2
 16146  02AA  083A               	movf	??_getSubfieldInfo+2,w
 16147  02AB  00BD               	movwf	getSubfieldInfo@m_tens
 16148                           
 16149                           ;main.c: 428:                  break;
 16150  02AC  2AD0               	goto	l7621
 16151  02AD                     l7615:	
 16152                           
 16153                           ;main.c: 430:                  m_units = increment_subfield( 9, m_units);
 16154  02AD  083E               	movf	getSubfieldInfo@m_units,w
 16155  02AE  00B8               	movwf	??_getSubfieldInfo
 16156  02AF  01B9               	clrf	??_getSubfieldInfo+1
 16157  02B0  0838               	movf	??_getSubfieldInfo,w
 16158  02B1  00B2               	movwf	increment_subfield@init_val
 16159  02B2  0839               	movf	??_getSubfieldInfo+1,w
 16160  02B3  00B3               	movwf	increment_subfield@init_val+1
 16161  02B4  3009               	movlw	9
 16162  02B5  3187  274D  3182   	fcall	_increment_subfield
 16163  02B8  0020               	movlb	0	; select bank0
 16164  02B9  00BA               	movwf	??_getSubfieldInfo+2
 16165  02BA  083A               	movf	??_getSubfieldInfo+2,w
 16166  02BB  00BE               	movwf	getSubfieldInfo@m_units
 16167                           
 16168                           ;main.c: 431:                      break;
 16169  02BC  2AD0               	goto	l7621
 16170  02BD                     l7619:	
 16171                           
 16172                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16173                           ; Switch size 1, requested type "simple"
 16174                           ; Number of cases is 1, Range of values is 0 to 0
 16175                           ; switch strategies available:
 16176                           ; Name         Instructions Cycles
 16177                           ; simple_byte            4     3 (average)
 16178                           ; direct_byte            8     6 (fixed)
 16179                           ; jumptable            260     6 (fixed)
 16180                           ;	Chosen strategy is simple_byte
 16181  02BD  0865               	movf	_mode_field_subfield+3,w
 16182  02BE  3A00               	xorlw	0	; case 0
 16183  02BF  1903               	skipnz
 16184  02C0  2AC2               	goto	l8623
 16185  02C1  2AD0               	goto	l7621
 16186  02C2                     l8623:	
 16187                           
 16188                           ; Switch size 1, requested type "simple"
 16189                           ; Number of cases is 4, Range of values is 1 to 4
 16190                           ; switch strategies available:
 16191                           ; Name         Instructions Cycles
 16192                           ; simple_byte           13     7 (average)
 16193                           ; direct_byte           17     9 (fixed)
 16194                           ; jumptable            263     9 (fixed)
 16195                           ;	Chosen strategy is simple_byte
 16196  02C2  0864               	movf	_mode_field_subfield+2,w
 16197  02C3  3A01               	xorlw	1	; case 1
 16198  02C4  1903               	skipnz
 16199  02C5  2A7B               	goto	l7609
 16200  02C6  3A03               	xorlw	3	; case 2
 16201  02C7  1903               	skipnz
 16202  02C8  2A8B               	goto	l7611
 16203  02C9  3A01               	xorlw	1	; case 3
 16204  02CA  1903               	skipnz
 16205  02CB  2A9D               	goto	l7613
 16206  02CC  3A07               	xorlw	7	; case 4
 16207  02CD  1903               	skipnz
 16208  02CE  2AAD               	goto	l7615
 16209  02CF  2AD0               	goto	l7621
 16210  02D0                     l7621:	
 16211                           
 16212                           ;main.c: 434:             clkh = 10*h_tens + h_units;
 16213  02D0  300A               	movlw	10
 16214  02D1  00B8               	movwf	??_getSubfieldInfo
 16215  02D2  0838               	movf	??_getSubfieldInfo,w
 16216  02D3  00A3               	movwf	___bmul@multiplicand
 16217  02D4  083B               	movf	getSubfieldInfo@h_tens,w
 16218  02D5  3188  2094  3182   	fcall	___bmul
 16219  02D8  0020               	movlb	0	; select bank0
 16220  02D9  073C               	addwf	getSubfieldInfo@h_units,w
 16221  02DA  00B9               	movwf	??_getSubfieldInfo+1
 16222  02DB  0839               	movf	??_getSubfieldInfo+1,w
 16223  02DC  00DF               	movwf	_clkh	;volatile
 16224                           
 16225                           ;main.c: 435:             clkm = 10*m_tens + m_units;
 16226  02DD  300A               	movlw	10
 16227  02DE  00B8               	movwf	??_getSubfieldInfo
 16228  02DF  0838               	movf	??_getSubfieldInfo,w
 16229  02E0  00A3               	movwf	___bmul@multiplicand
 16230  02E1  083D               	movf	getSubfieldInfo@m_tens,w
 16231  02E2  3188  2094  3182   	fcall	___bmul
 16232  02E5  0020               	movlb	0	; select bank0
 16233  02E6  073E               	addwf	getSubfieldInfo@m_units,w
 16234  02E7  00B9               	movwf	??_getSubfieldInfo+1
 16235  02E8  0839               	movf	??_getSubfieldInfo+1,w
 16236  02E9  00DE               	movwf	_clkm	;volatile
 16237  02EA                     l7623:	
 16238                           
 16239                           ;main.c: 436:             PIE4bits.TMR1IE = 0;
 16240  02EA  002E               	movlb	14	; select bank14
 16241  02EB  101A               	bcf	26,0	;volatile
 16242                           
 16243                           ;main.c: 437:         break;
 16244  02EC  2B85               	goto	l266
 16245  02ED                     l7625:	
 16246                           
 16247                           ;main.c: 440:             alaf = increment_subfield( 1, alaf );
 16248  02ED  0855               	movf	_alaf,w
 16249  02EE  00B8               	movwf	??_getSubfieldInfo
 16250  02EF  01B9               	clrf	??_getSubfieldInfo+1
 16251  02F0  0838               	movf	??_getSubfieldInfo,w
 16252  02F1  00B2               	movwf	increment_subfield@init_val
 16253  02F2  0839               	movf	??_getSubfieldInfo+1,w
 16254  02F3  00B3               	movwf	increment_subfield@init_val+1
 16255  02F4  3001               	movlw	1
 16256  02F5  3187  274D  3182   	fcall	_increment_subfield
 16257  02F8  0020               	movlb	0	; select bank0
 16258  02F9  00BA               	movwf	??_getSubfieldInfo+2
 16259  02FA  083A               	movf	??_getSubfieldInfo+2,w
 16260  02FB  00D5               	movwf	_alaf
 16261                           
 16262                           ;main.c: 441:  break;
 16263  02FC  2B85               	goto	l266
 16264  02FD                     l7627:	
 16265                           
 16266                           ;main.c: 444:             temp_thresh_tens = temp_thresh / 10;
 16267  02FD  300A               	movlw	10
 16268  02FE  00A3               	movwf	___awdiv@divisor
 16269  02FF  3000               	movlw	0
 16270  0300  00A4               	movwf	___awdiv@divisor+1
 16271  0301  0867               	movf	_temp_thresh,w
 16272  0302  00B8               	movwf	??_getSubfieldInfo
 16273  0303  01B9               	clrf	??_getSubfieldInfo+1
 16274  0304  0838               	movf	??_getSubfieldInfo,w
 16275  0305  00A5               	movwf	___awdiv@dividend
 16276  0306  0839               	movf	??_getSubfieldInfo+1,w
 16277  0307  00A6               	movwf	___awdiv@dividend+1
 16278  0308  3185  25DE  3182   	fcall	___awdiv
 16279  030B  0020               	movlb	0	; select bank0
 16280  030C  0823               	movf	?___awdiv,w
 16281  030D  00BA               	movwf	??_getSubfieldInfo+2
 16282  030E  083A               	movf	??_getSubfieldInfo+2,w
 16283  030F  00BF               	movwf	getSubfieldInfo@temp_thresh_tens
 16284                           
 16285                           ;main.c: 445:             temp_thresh_units = temp_thresh % 10;
 16286  0310  300A               	movlw	10
 16287  0311  00A3               	movwf	___awmod@divisor
 16288  0312  3000               	movlw	0
 16289  0313  00A4               	movwf	___awmod@divisor+1
 16290  0314  0867               	movf	_temp_thresh,w
 16291  0315  00B8               	movwf	??_getSubfieldInfo
 16292  0316  01B9               	clrf	??_getSubfieldInfo+1
 16293  0317  0838               	movf	??_getSubfieldInfo,w
 16294  0318  00A5               	movwf	___awmod@dividend
 16295  0319  0839               	movf	??_getSubfieldInfo+1,w
 16296  031A  00A6               	movwf	___awmod@dividend+1
 16297  031B  3187  27A1  3182   	fcall	___awmod
 16298  031E  0020               	movlb	0	; select bank0
 16299  031F  0823               	movf	?___awmod,w
 16300  0320  00BA               	movwf	??_getSubfieldInfo+2
 16301  0321  083A               	movf	??_getSubfieldInfo+2,w
 16302  0322  00C0               	movwf	getSubfieldInfo@temp_thresh_units
 16303                           
 16304                           ;main.c: 446:             switch(mode_field_subfield[1]){
 16305  0323  2B46               	goto	l7635
 16306  0324                     l7629:	
 16307                           
 16308                           ;main.c: 448:                     temp_thresh_tens = increment_subfield(5, temp_thresh_t
      +                          ens);
 16309  0324  083F               	movf	getSubfieldInfo@temp_thresh_tens,w
 16310  0325  00B8               	movwf	??_getSubfieldInfo
 16311  0326  01B9               	clrf	??_getSubfieldInfo+1
 16312  0327  0838               	movf	??_getSubfieldInfo,w
 16313  0328  00B2               	movwf	increment_subfield@init_val
 16314  0329  0839               	movf	??_getSubfieldInfo+1,w
 16315  032A  00B3               	movwf	increment_subfield@init_val+1
 16316  032B  3005               	movlw	5
 16317  032C  3187  274D  3182   	fcall	_increment_subfield
 16318  032F  0020               	movlb	0	; select bank0
 16319  0330  00BA               	movwf	??_getSubfieldInfo+2
 16320  0331  083A               	movf	??_getSubfieldInfo+2,w
 16321  0332  00BF               	movwf	getSubfieldInfo@temp_thresh_tens
 16322                           
 16323                           ;main.c: 449:                 break;
 16324  0333  2B53               	goto	l7637
 16325  0334                     l7631:	
 16326                           
 16327                           ;main.c: 451:                     temp_thresh_units = increment_subfield(limitTempThresh
      +                          Units(), temp_thresh_units);
 16328  0334  0840               	movf	getSubfieldInfo@temp_thresh_units,w
 16329  0335  00B8               	movwf	??_getSubfieldInfo
 16330  0336  01B9               	clrf	??_getSubfieldInfo+1
 16331  0337  0838               	movf	??_getSubfieldInfo,w
 16332  0338  00B2               	movwf	increment_subfield@init_val
 16333  0339  0839               	movf	??_getSubfieldInfo+1,w
 16334  033A  00B3               	movwf	increment_subfield@init_val+1
 16335  033B  3189  21BE  3182   	fcall	_limitTempThreshUnits
 16336  033E  3187  274D  3182   	fcall	_increment_subfield
 16337  0341  0020               	movlb	0	; select bank0
 16338  0342  00BA               	movwf	??_getSubfieldInfo+2
 16339  0343  083A               	movf	??_getSubfieldInfo+2,w
 16340  0344  00C0               	movwf	getSubfieldInfo@temp_thresh_units
 16341                           
 16342                           ;main.c: 452:                 break;
 16343  0345  2B53               	goto	l7637
 16344  0346                     l7635:	
 16345                           
 16346                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16347                           ; Switch size 1, requested type "simple"
 16348                           ; Number of cases is 1, Range of values is 0 to 0
 16349                           ; switch strategies available:
 16350                           ; Name         Instructions Cycles
 16351                           ; simple_byte            4     3 (average)
 16352                           ; direct_byte            8     6 (fixed)
 16353                           ; jumptable            260     6 (fixed)
 16354                           ;	Chosen strategy is simple_byte
 16355  0346  0865               	movf	_mode_field_subfield+3,w
 16356  0347  3A00               	xorlw	0	; case 0
 16357  0348  1903               	skipnz
 16358  0349  2B4B               	goto	l8625
 16359  034A  2B53               	goto	l7637
 16360  034B                     l8625:	
 16361                           
 16362                           ; Switch size 1, requested type "simple"
 16363                           ; Number of cases is 2, Range of values is 1 to 2
 16364                           ; switch strategies available:
 16365                           ; Name         Instructions Cycles
 16366                           ; simple_byte            7     4 (average)
 16367                           ; direct_byte           13     9 (fixed)
 16368                           ; jumptable            263     9 (fixed)
 16369                           ;	Chosen strategy is simple_byte
 16370  034B  0864               	movf	_mode_field_subfield+2,w
 16371  034C  3A01               	xorlw	1	; case 1
 16372  034D  1903               	skipnz
 16373  034E  2B24               	goto	l7629
 16374  034F  3A03               	xorlw	3	; case 2
 16375  0350  1903               	skipnz
 16376  0351  2B34               	goto	l7631
 16377  0352  2B53               	goto	l7637
 16378  0353                     l7637:	
 16379                           
 16380                           ;main.c: 454:             temp_thresh = 10*temp_thresh_tens + temp_thresh_units;
 16381  0353  300A               	movlw	10
 16382  0354  00B8               	movwf	??_getSubfieldInfo
 16383  0355  0838               	movf	??_getSubfieldInfo,w
 16384  0356  00A3               	movwf	___bmul@multiplicand
 16385  0357  083F               	movf	getSubfieldInfo@temp_thresh_tens,w
 16386  0358  3188  2094  3182   	fcall	___bmul
 16387  035B  0020               	movlb	0	; select bank0
 16388  035C  0740               	addwf	getSubfieldInfo@temp_thresh_units,w
 16389  035D  00B9               	movwf	??_getSubfieldInfo+1
 16390  035E  0839               	movf	??_getSubfieldInfo+1,w
 16391  035F  00E7               	movwf	_temp_thresh
 16392                           
 16393                           ;main.c: 455:         break;
 16394  0360  2B85               	goto	l266
 16395  0361                     l7639:	
 16396                           
 16397                           ;main.c: 458:             lum_thresh = increment_subfield(3, lum_thresh);
 16398  0361  0866               	movf	_lum_thresh,w
 16399  0362  00B8               	movwf	??_getSubfieldInfo
 16400  0363  01B9               	clrf	??_getSubfieldInfo+1
 16401  0364  0838               	movf	??_getSubfieldInfo,w
 16402  0365  00B2               	movwf	increment_subfield@init_val
 16403  0366  0839               	movf	??_getSubfieldInfo+1,w
 16404  0367  00B3               	movwf	increment_subfield@init_val+1
 16405  0368  3003               	movlw	3
 16406  0369  3187  274D  3182   	fcall	_increment_subfield
 16407  036C  0020               	movlb	0	; select bank0
 16408  036D  00BA               	movwf	??_getSubfieldInfo+2
 16409  036E  083A               	movf	??_getSubfieldInfo+2,w
 16410  036F  00E6               	movwf	_lum_thresh
 16411                           
 16412                           ;main.c: 459:         break;
 16413  0370  2B85               	goto	l266
 16414  0371                     l7643:	
 16415                           
 16416                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16417                           ; Switch size 1, requested type "simple"
 16418                           ; Number of cases is 1, Range of values is 0 to 0
 16419                           ; switch strategies available:
 16420                           ; Name         Instructions Cycles
 16421                           ; simple_byte            4     3 (average)
 16422                           ; direct_byte            8     6 (fixed)
 16423                           ; jumptable            260     6 (fixed)
 16424                           ;	Chosen strategy is simple_byte
 16425  0371  0020               	movlb	0	; select bank0
 16426  0372  0863               	movf	_mode_field_subfield+1,w
 16427  0373  3A00               	xorlw	0	; case 0
 16428  0374  1903               	skipnz
 16429  0375  2B77               	goto	l8627
 16430  0376  2B85               	goto	l266
 16431  0377                     l8627:	
 16432                           
 16433                           ; Switch size 1, requested type "simple"
 16434                           ; Number of cases is 4, Range of values is 1 to 4
 16435                           ; switch strategies available:
 16436                           ; Name         Instructions Cycles
 16437                           ; simple_byte           13     7 (average)
 16438                           ; direct_byte           17     9 (fixed)
 16439                           ; jumptable            263     9 (fixed)
 16440                           ;	Chosen strategy is simple_byte
 16441  0377  0862               	movf	_mode_field_subfield,w
 16442  0378  3A01               	xorlw	1	; case 1
 16443  0379  1903               	skipnz
 16444  037A  2A2B               	goto	l251
 16445  037B  3A03               	xorlw	3	; case 2
 16446  037C  1903               	skipnz
 16447  037D  2AED               	goto	l7625
 16448  037E  3A01               	xorlw	1	; case 3
 16449  037F  1903               	skipnz
 16450  0380  2AFD               	goto	l7627
 16451  0381  3A07               	xorlw	7	; case 4
 16452  0382  1903               	skipnz
 16453  0383  2B61               	goto	l7639
 16454  0384  2B85               	goto	l266
 16455  0385                     l266:	
 16456  0385  0008               	return
 16457  0386                     __end_of_getSubfieldInfo:	
 16458                           
 16459                           	psect	text30
 16460  09BE                     __ptext30:	
 16461 ;; *************** function _limitTempThreshUnits *****************
 16462 ;; Defined at:
 16463 ;;		line 492 in file "main.c"
 16464 ;; Parameters:    Size  Location     Type
 16465 ;;		None
 16466 ;; Auto vars:     Size  Location     Type
 16467 ;;		None
 16468 ;; Return value:  Size  Location     Type
 16469 ;;                  1    wreg      unsigned char 
 16470 ;; Registers used:
 16471 ;;		wreg, status,2, status,0, pclath, cstack
 16472 ;; Tracked objects:
 16473 ;;		On entry : 0/0
 16474 ;;		On exit  : 0/0
 16475 ;;		Unchanged: 0/0
 16476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16479 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16480 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16481 ;;Total ram usage:        2 bytes
 16482 ;; Hardware stack levels used:    1
 16483 ;; Hardware stack levels required when called:    7
 16484 ;; This function calls:
 16485 ;;		___awdiv
 16486 ;; This function is called by:
 16487 ;;		_getSubfieldInfo
 16488 ;; This function uses a non-reentrant model
 16489 ;;
 16490                           
 16491                           
 16492                           ;psect for function _limitTempThreshUnits
 16493  09BE                     _limitTempThreshUnits:	
 16494  09BE                     l7423:	
 16495                           ;incstack = 0
 16496                           ; Regs used in _limitTempThreshUnits: [wreg+status,2+status,0+pclath+cstack]
 16497                           
 16498                           
 16499                           ;main.c: 493:      if((temp_thresh / 10) == 5){
 16500  09BE  300A               	movlw	10
 16501  09BF  0020               	movlb	0	; select bank0
 16502  09C0  00A3               	movwf	___awdiv@divisor
 16503  09C1  3000               	movlw	0
 16504  09C2  00A4               	movwf	___awdiv@divisor+1
 16505  09C3  0867               	movf	_temp_thresh,w
 16506  09C4  00AC               	movwf	??_limitTempThreshUnits
 16507  09C5  01AD               	clrf	??_limitTempThreshUnits+1
 16508  09C6  082C               	movf	??_limitTempThreshUnits,w
 16509  09C7  00A5               	movwf	___awdiv@dividend
 16510  09C8  082D               	movf	??_limitTempThreshUnits+1,w
 16511  09C9  00A6               	movwf	___awdiv@dividend+1
 16512  09CA  3185  25DE  3189   	fcall	___awdiv
 16513  09CD  3005               	movlw	5
 16514  09CE  0020               	movlb	0	; select bank0
 16515  09CF  0623               	xorwf	?___awdiv,w
 16516  09D0  0424               	iorwf	?___awdiv+1,w
 16517  09D1  1D03               	btfss	3,2
 16518  09D2  29D4               	goto	u4561
 16519  09D3  29D5               	goto	u4560
 16520  09D4                     u4561:	
 16521  09D4  29D7               	goto	l7431
 16522  09D5                     u4560:	
 16523  09D5                     l7425:	
 16524                           
 16525                           ;main.c: 494:         return 0;
 16526  09D5  3000               	movlw	0
 16527  09D6  29D8               	goto	l278
 16528  09D7                     l7431:	
 16529                           
 16530                           ;main.c: 496:         return 9;
 16531  09D7  3009               	movlw	9
 16532  09D8                     l278:	
 16533  09D8  0008               	return
 16534  09D9                     __end_of_limitTempThreshUnits:	
 16535                           
 16536                           	psect	text31
 16537  09A3                     __ptext31:	
 16538 ;; *************** function _limitHoursUnits *****************
 16539 ;; Defined at:
 16540 ;;		line 507 in file "main.c"
 16541 ;; Parameters:    Size  Location     Type
 16542 ;;		None
 16543 ;; Auto vars:     Size  Location     Type
 16544 ;;		None
 16545 ;; Return value:  Size  Location     Type
 16546 ;;                  1    wreg      unsigned char 
 16547 ;; Registers used:
 16548 ;;		wreg, status,2, status,0, pclath, cstack
 16549 ;; Tracked objects:
 16550 ;;		On entry : 0/0
 16551 ;;		On exit  : 0/0
 16552 ;;		Unchanged: 0/0
 16553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16556 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16557 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16558 ;;Total ram usage:        2 bytes
 16559 ;; Hardware stack levels used:    1
 16560 ;; Hardware stack levels required when called:    7
 16561 ;; This function calls:
 16562 ;;		___awdiv
 16563 ;; This function is called by:
 16564 ;;		_getSubfieldInfo
 16565 ;; This function uses a non-reentrant model
 16566 ;;
 16567                           
 16568                           
 16569                           ;psect for function _limitHoursUnits
 16570  09A3                     _limitHoursUnits:	
 16571  09A3                     l7411:	
 16572                           ;incstack = 0
 16573                           ; Regs used in _limitHoursUnits: [wreg+status,2+status,0+pclath+cstack]
 16574                           
 16575                           
 16576                           ;main.c: 509:     if((clkh / 10) == 2){
 16577  09A3  300A               	movlw	10
 16578  09A4  0020               	movlb	0	; select bank0
 16579  09A5  00A3               	movwf	___awdiv@divisor
 16580  09A6  3000               	movlw	0
 16581  09A7  00A4               	movwf	___awdiv@divisor+1
 16582  09A8  085F               	movf	_clkh,w	;volatile
 16583  09A9  00AC               	movwf	??_limitHoursUnits
 16584  09AA  01AD               	clrf	??_limitHoursUnits+1
 16585  09AB  082C               	movf	??_limitHoursUnits,w
 16586  09AC  00A5               	movwf	___awdiv@dividend
 16587  09AD  082D               	movf	??_limitHoursUnits+1,w
 16588  09AE  00A6               	movwf	___awdiv@dividend+1
 16589  09AF  3185  25DE  3189   	fcall	___awdiv
 16590  09B2  3002               	movlw	2
 16591  09B3  0020               	movlb	0	; select bank0
 16592  09B4  0623               	xorwf	?___awdiv,w
 16593  09B5  0424               	iorwf	?___awdiv+1,w
 16594  09B6  1D03               	btfss	3,2
 16595  09B7  29B9               	goto	u4551
 16596  09B8  29BA               	goto	u4550
 16597  09B9                     u4551:	
 16598  09B9  29BC               	goto	l7419
 16599  09BA                     u4550:	
 16600  09BA                     l7413:	
 16601                           
 16602                           ;main.c: 510:         return 3;
 16603  09BA  3003               	movlw	3
 16604  09BB  29BD               	goto	l283
 16605  09BC                     l7419:	
 16606                           
 16607                           ;main.c: 512:         return 9;
 16608  09BC  3009               	movlw	9
 16609  09BD                     l283:	
 16610  09BD  0008               	return
 16611  09BE                     __end_of_limitHoursUnits:	
 16612                           
 16613                           	psect	text32
 16614  05DE                     __ptext32:	
 16615 ;; *************** function ___awdiv *****************
 16616 ;; Defined at:
 16617 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 16618 ;; Parameters:    Size  Location     Type
 16619 ;;  divisor         2    3[BANK0 ] int 
 16620 ;;  dividend        2    5[BANK0 ] int 
 16621 ;; Auto vars:     Size  Location     Type
 16622 ;;  quotient        2   10[BANK0 ] int 
 16623 ;;  sign            1    9[BANK0 ] unsigned char 
 16624 ;;  counter         1    8[BANK0 ] unsigned char 
 16625 ;; Return value:  Size  Location     Type
 16626 ;;                  2    3[BANK0 ] int 
 16627 ;; Registers used:
 16628 ;;		wreg, status,2, status,0
 16629 ;; Tracked objects:
 16630 ;;		On entry : 0/0
 16631 ;;		On exit  : 0/0
 16632 ;;		Unchanged: 0/0
 16633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16634 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16635 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16636 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16637 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16638 ;;Total ram usage:        9 bytes
 16639 ;; Hardware stack levels used:    1
 16640 ;; Hardware stack levels required when called:    6
 16641 ;; This function calls:
 16642 ;;		Nothing
 16643 ;; This function is called by:
 16644 ;;		_getSubfieldInfo
 16645 ;;		_limitTempThreshUnits
 16646 ;;		_limitHoursUnits
 16647 ;;		_recTempThresh
 16648 ;; This function uses a non-reentrant model
 16649 ;;
 16650                           
 16651                           
 16652                           ;psect for function ___awdiv
 16653  05DE                     ___awdiv:	
 16654  05DE                     l7305:	
 16655                           ;incstack = 0
 16656                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 16657                           
 16658  05DE  0020               	movlb	0	; select bank0
 16659  05DF  01A9               	clrf	___awdiv@sign
 16660  05E0                     l7307:	
 16661  05E0  1FA4               	btfss	___awdiv@divisor+1,7
 16662  05E1  2DE3               	goto	u4381
 16663  05E2  2DE4               	goto	u4380
 16664  05E3                     u4381:	
 16665  05E3  2DEB               	goto	l7313
 16666  05E4                     u4380:	
 16667  05E4                     l7309:	
 16668  05E4  09A3               	comf	___awdiv@divisor,f
 16669  05E5  09A4               	comf	___awdiv@divisor+1,f
 16670  05E6  0AA3               	incf	___awdiv@divisor,f
 16671  05E7  1903               	skipnz
 16672  05E8  0AA4               	incf	___awdiv@divisor+1,f
 16673  05E9                     l7311:	
 16674  05E9  01A9               	clrf	___awdiv@sign
 16675  05EA  0AA9               	incf	___awdiv@sign,f
 16676  05EB                     l7313:	
 16677  05EB  1FA6               	btfss	___awdiv@dividend+1,7
 16678  05EC  2DEE               	goto	u4391
 16679  05ED  2DEF               	goto	u4390
 16680  05EE                     u4391:	
 16681  05EE  2DF8               	goto	l7319
 16682  05EF                     u4390:	
 16683  05EF                     l7315:	
 16684  05EF  09A5               	comf	___awdiv@dividend,f
 16685  05F0  09A6               	comf	___awdiv@dividend+1,f
 16686  05F1  0AA5               	incf	___awdiv@dividend,f
 16687  05F2  1903               	skipnz
 16688  05F3  0AA6               	incf	___awdiv@dividend+1,f
 16689  05F4                     l7317:	
 16690  05F4  3001               	movlw	1
 16691  05F5  00A7               	movwf	??___awdiv
 16692  05F6  0827               	movf	??___awdiv,w
 16693  05F7  06A9               	xorwf	___awdiv@sign,f
 16694  05F8                     l7319:	
 16695  05F8  01AA               	clrf	___awdiv@quotient
 16696  05F9  01AB               	clrf	___awdiv@quotient+1
 16697  05FA                     l7321:	
 16698  05FA  0823               	movf	___awdiv@divisor,w
 16699  05FB  0424               	iorwf	___awdiv@divisor+1,w
 16700  05FC  1903               	btfsc	3,2
 16701  05FD  2DFF               	goto	u4401
 16702  05FE  2E00               	goto	u4400
 16703  05FF                     u4401:	
 16704  05FF  2E2F               	goto	l7341
 16705  0600                     u4400:	
 16706  0600                     l7323:	
 16707  0600  01A8               	clrf	___awdiv@counter
 16708  0601  0AA8               	incf	___awdiv@counter,f
 16709  0602  2E0C               	goto	l7329
 16710  0603                     l7325:	
 16711  0603  3001               	movlw	1
 16712  0604                     u4415:	
 16713  0604  35A3               	lslf	___awdiv@divisor,f
 16714  0605  0DA4               	rlf	___awdiv@divisor+1,f
 16715  0606  0B89               	decfsz	9,f
 16716  0607  2E04               	goto	u4415
 16717  0608                     l7327:	
 16718  0608  3001               	movlw	1
 16719  0609  00A7               	movwf	??___awdiv
 16720  060A  0827               	movf	??___awdiv,w
 16721  060B  07A8               	addwf	___awdiv@counter,f
 16722  060C                     l7329:	
 16723  060C  1FA4               	btfss	___awdiv@divisor+1,7
 16724  060D  2E0F               	goto	u4421
 16725  060E  2E10               	goto	u4420
 16726  060F                     u4421:	
 16727  060F  2E03               	goto	l7325
 16728  0610                     u4420:	
 16729  0610                     l7331:	
 16730  0610  3001               	movlw	1
 16731  0611                     u4435:	
 16732  0611  35AA               	lslf	___awdiv@quotient,f
 16733  0612  0DAB               	rlf	___awdiv@quotient+1,f
 16734  0613  0B89               	decfsz	9,f
 16735  0614  2E11               	goto	u4435
 16736  0615  0824               	movf	___awdiv@divisor+1,w
 16737  0616  0226               	subwf	___awdiv@dividend+1,w
 16738  0617  1D03               	skipz
 16739  0618  2E1B               	goto	u4445
 16740  0619  0823               	movf	___awdiv@divisor,w
 16741  061A  0225               	subwf	___awdiv@dividend,w
 16742  061B                     u4445:	
 16743  061B  1C03               	skipc
 16744  061C  2E1E               	goto	u4441
 16745  061D  2E1F               	goto	u4440
 16746  061E                     u4441:	
 16747  061E  2E24               	goto	l7337
 16748  061F                     u4440:	
 16749  061F                     l7333:	
 16750  061F  0823               	movf	___awdiv@divisor,w
 16751  0620  02A5               	subwf	___awdiv@dividend,f
 16752  0621  0824               	movf	___awdiv@divisor+1,w
 16753  0622  3BA6               	subwfb	___awdiv@dividend+1,f
 16754  0623                     l7335:	
 16755  0623  142A               	bsf	___awdiv@quotient,0
 16756  0624                     l7337:	
 16757  0624  3001               	movlw	1
 16758  0625                     u4455:	
 16759  0625  36A4               	lsrf	___awdiv@divisor+1,f
 16760  0626  0CA3               	rrf	___awdiv@divisor,f
 16761  0627  0B89               	decfsz	9,f
 16762  0628  2E25               	goto	u4455
 16763  0629                     l7339:	
 16764  0629  3001               	movlw	1
 16765  062A  02A8               	subwf	___awdiv@counter,f
 16766  062B  1D03               	btfss	3,2
 16767  062C  2E2E               	goto	u4461
 16768  062D  2E2F               	goto	u4460
 16769  062E                     u4461:	
 16770  062E  2E10               	goto	l7331
 16771  062F                     u4460:	
 16772  062F                     l7341:	
 16773  062F  0829               	movf	___awdiv@sign,w
 16774  0630  1903               	btfsc	3,2
 16775  0631  2E33               	goto	u4471
 16776  0632  2E34               	goto	u4470
 16777  0633                     u4471:	
 16778  0633  2E39               	goto	l7345
 16779  0634                     u4470:	
 16780  0634                     l7343:	
 16781  0634  09AA               	comf	___awdiv@quotient,f
 16782  0635  09AB               	comf	___awdiv@quotient+1,f
 16783  0636  0AAA               	incf	___awdiv@quotient,f
 16784  0637  1903               	skipnz
 16785  0638  0AAB               	incf	___awdiv@quotient+1,f
 16786  0639                     l7345:	
 16787  0639  082B               	movf	___awdiv@quotient+1,w
 16788  063A  00A4               	movwf	?___awdiv+1
 16789  063B  082A               	movf	___awdiv@quotient,w
 16790  063C  00A3               	movwf	?___awdiv
 16791  063D                     l2265:	
 16792  063D  0008               	return
 16793  063E                     __end_of___awdiv:	
 16794                           
 16795                           	psect	text33
 16796  074D                     __ptext33:	
 16797 ;; *************** function _increment_subfield *****************
 16798 ;; Defined at:
 16799 ;;		line 516 in file "main.c"
 16800 ;; Parameters:    Size  Location     Type
 16801 ;;  limit           1    wreg     unsigned char 
 16802 ;;  init_val        2   18[BANK0 ] unsigned int 
 16803 ;; Auto vars:     Size  Location     Type
 16804 ;;  limit           1   22[BANK0 ] unsigned char 
 16805 ;;  _value          1   23[BANK0 ] unsigned char 
 16806 ;;  exit            1   21[BANK0 ] unsigned char 
 16807 ;; Return value:  Size  Location     Type
 16808 ;;                  1    wreg      unsigned char 
 16809 ;; Registers used:
 16810 ;;		wreg, status,2, status,0, pclath, cstack
 16811 ;; Tracked objects:
 16812 ;;		On entry : 0/0
 16813 ;;		On exit  : 0/0
 16814 ;;		Unchanged: 0/0
 16815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16816 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16817 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16818 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16819 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16820 ;;Total ram usage:        6 bytes
 16821 ;; Hardware stack levels used:    1
 16822 ;; Hardware stack levels required when called:    8
 16823 ;; This function calls:
 16824 ;;		_PWM6_LoadDutyValue
 16825 ;;		_checkDebounceSW1
 16826 ;;		_checkDebounceSW2
 16827 ;;		_representLed
 16828 ;; This function is called by:
 16829 ;;		_getSubfieldInfo
 16830 ;; This function uses a non-reentrant model
 16831 ;;
 16832                           
 16833                           
 16834                           ;psect for function _increment_subfield
 16835  074D                     _increment_subfield:	
 16836                           
 16837                           ;incstack = 0
 16838                           ; Regs used in _increment_subfield: [wreg+status,2+status,0+pclath+cstack]
 16839                           ;increment_subfield@limit stored from wreg
 16840  074D  0020               	movlb	0	; select bank0
 16841  074E  00B6               	movwf	increment_subfield@limit
 16842  074F                     l7371:	
 16843                           
 16844                           ;main.c: 518:     unsigned char exit = 0;
 16845  074F  01B5               	clrf	increment_subfield@exit
 16846  0750                     l7373:	
 16847                           
 16848                           ;main.c: 519:     unsigned char _value = init_val;
 16849  0750  0832               	movf	increment_subfield@init_val,w
 16850  0751  00B4               	movwf	??_increment_subfield
 16851  0752  0834               	movf	??_increment_subfield,w
 16852  0753  00B7               	movwf	increment_subfield@_value
 16853  0754                     l7375:	
 16854                           
 16855                           ;main.c: 521:     PWM6_LoadDutyValue(0);
 16856  0754  3000               	movlw	0
 16857  0755  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 16858  0756  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 16859  0757  3189  2122  3187   	fcall	_PWM6_LoadDutyValue
 16860  075A                     l7377:	
 16861                           
 16862                           ;main.c: 522:     LATA = 0;
 16863  075A  0020               	movlb	0	; select bank0
 16864  075B  0196               	clrf	22	;volatile
 16865  075C                     l7379:	
 16866                           
 16867                           ;main.c: 524:     if(_value > limit) _value = 0;
 16868  075C  0837               	movf	increment_subfield@_value,w
 16869  075D  0236               	subwf	increment_subfield@limit,w
 16870  075E  1803               	skipnc
 16871  075F  2F61               	goto	u4481
 16872  0760  2F62               	goto	u4480
 16873  0761                     u4481:	
 16874  0761  2F9A               	goto	l7405
 16875  0762                     u4480:	
 16876  0762                     l7381:	
 16877  0762  01B7               	clrf	increment_subfield@_value
 16878  0763  2F9A               	goto	l7405
 16879  0764                     l7383:	
 16880                           
 16881                           ;main.c: 527:      representLed(_value);
 16882  0764  0837               	movf	increment_subfield@_value,w
 16883  0765  318F  2711  3187   	fcall	_representLed
 16884  0768                     l7385:	
 16885                           
 16886                           ;main.c: 528:         if(!PORTCbits.RC5){
 16887  0768  0020               	movlb	0	; select bank0
 16888  0769  1A8E               	btfsc	14,5	;volatile
 16889  076A  2F6C               	goto	u4491
 16890  076B  2F6D               	goto	u4490
 16891  076C                     u4491:	
 16892  076C  2F86               	goto	l7397
 16893  076D                     u4490:	
 16894  076D                     l7387:	
 16895                           
 16896                           ;main.c: 529:             if(checkDebounceSW2()){
 16897  076D  318E  26C4  3187   	fcall	_checkDebounceSW2
 16898  0770  3A00               	xorlw	0
 16899  0771  1903               	skipnz
 16900  0772  2F74               	goto	u4501
 16901  0773  2F75               	goto	u4500
 16902  0774                     u4501:	
 16903  0774  2F81               	goto	l7395
 16904  0775                     u4500:	
 16905  0775                     l7389:	
 16906                           
 16907                           ;main.c: 530:                 _value++;
 16908  0775  3001               	movlw	1
 16909  0776  0020               	movlb	0	; select bank0
 16910  0777  00B4               	movwf	??_increment_subfield
 16911  0778  0834               	movf	??_increment_subfield,w
 16912  0779  07B7               	addwf	increment_subfield@_value,f
 16913  077A                     l7391:	
 16914                           
 16915                           ;main.c: 531:                 if(_value > limit) _value = 0;
 16916  077A  0837               	movf	increment_subfield@_value,w
 16917  077B  0236               	subwf	increment_subfield@limit,w
 16918  077C  1803               	skipnc
 16919  077D  2F7F               	goto	u4511
 16920  077E  2F80               	goto	u4510
 16921  077F                     u4511:	
 16922  077F  2F81               	goto	l7395
 16923  0780                     u4510:	
 16924  0780                     l7393:	
 16925  0780  01B7               	clrf	increment_subfield@_value
 16926  0781                     l7395:	
 16927                           
 16928                           ;main.c: 533:             last_ms2 = clkms;
 16929  0781  087D               	movf	_clkms,w	;volatile
 16930  0782  0020               	movlb	0	; select bank0
 16931  0783  00B4               	movwf	??_increment_subfield
 16932  0784  0834               	movf	??_increment_subfield,w
 16933  0785  00DB               	movwf	_last_ms2
 16934  0786                     l7397:	
 16935                           
 16936                           ;main.c: 536:         if(!PORTBbits.RB4){
 16937  0786  1A0D               	btfsc	13,4	;volatile
 16938  0787  2F89               	goto	u4521
 16939  0788  2F8A               	goto	u4520
 16940  0789                     u4521:	
 16941  0789  2F9A               	goto	l7405
 16942  078A                     u4520:	
 16943  078A                     l7399:	
 16944                           
 16945                           ;main.c: 537:             if(checkDebounceSW1()){
 16946  078A  3186  2699  3187   	fcall	_checkDebounceSW1
 16947  078D  3A00               	xorlw	0
 16948  078E  1903               	skipnz
 16949  078F  2F91               	goto	u4531
 16950  0790  2F92               	goto	u4530
 16951  0791                     u4531:	
 16952  0791  2F95               	goto	l7403
 16953  0792                     u4530:	
 16954  0792                     l7401:	
 16955                           
 16956                           ;main.c: 538:                 exit = 1;
 16957  0792  0020               	movlb	0	; select bank0
 16958  0793  01B5               	clrf	increment_subfield@exit
 16959  0794  0AB5               	incf	increment_subfield@exit,f
 16960  0795                     l7403:	
 16961                           
 16962                           ;main.c: 540:             last_ms = clkms;
 16963  0795  087D               	movf	_clkms,w	;volatile
 16964  0796  0020               	movlb	0	; select bank0
 16965  0797  00B4               	movwf	??_increment_subfield
 16966  0798  0834               	movf	??_increment_subfield,w
 16967  0799  00DC               	movwf	_last_ms
 16968  079A                     l7405:	
 16969                           
 16970                           ;main.c: 526:     while(exit == 0){
 16971  079A  0835               	movf	increment_subfield@exit,w
 16972  079B  1903               	btfsc	3,2
 16973  079C  2F9E               	goto	u4541
 16974  079D  2F9F               	goto	u4540
 16975  079E                     u4541:	
 16976  079E  2F64               	goto	l7383
 16977  079F                     u4540:	
 16978  079F                     l7407:	
 16979                           
 16980                           ;main.c: 543: return _value;
 16981  079F  0837               	movf	increment_subfield@_value,w
 16982  07A0                     l296:	
 16983  07A0  0008               	return
 16984  07A1                     __end_of_increment_subfield:	
 16985                           
 16986                           	psect	text34
 16987  0F11                     __ptext34:	
 16988 ;; *************** function _representLed *****************
 16989 ;; Defined at:
 16990 ;;		line 134 in file "leds.c"
 16991 ;; Parameters:    Size  Location     Type
 16992 ;;  val             1    wreg     unsigned char 
 16993 ;; Auto vars:     Size  Location     Type
 16994 ;;  val             1   16[BANK0 ] unsigned char 
 16995 ;;  aux             1   17[BANK0 ] unsigned char 
 16996 ;; Return value:  Size  Location     Type
 16997 ;;                  1    wreg      void 
 16998 ;; Registers used:
 16999 ;;		wreg, status,2, status,0, pclath, cstack
 17000 ;; Tracked objects:
 17001 ;;		On entry : 0/0
 17002 ;;		On exit  : 0/0
 17003 ;;		Unchanged: 0/0
 17004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17006 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17007 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17008 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17009 ;;Total ram usage:        5 bytes
 17010 ;; Hardware stack levels used:    1
 17011 ;; Hardware stack levels required when called:    7
 17012 ;; This function calls:
 17013 ;;		_PWM6_LoadDutyValue
 17014 ;;		___wmul
 17015 ;; This function is called by:
 17016 ;;		_increment_subfield
 17017 ;; This function uses a non-reentrant model
 17018 ;;
 17019                           
 17020                           
 17021                           ;psect for function _representLed
 17022  0F11                     _representLed:	
 17023                           
 17024                           ;incstack = 0
 17025                           ; Regs used in _representLed: [wreg+status,2+status,0+pclath+cstack]
 17026                           ;representLed@val stored from wreg
 17027  0F11  0020               	movlb	0	; select bank0
 17028  0F12  00B0               	movwf	representLed@val
 17029  0F13                     l7293:	
 17030                           
 17031                           ;leds.c: 134: void representLed(unsigned char val);leds.c: 135: {;leds.c: 136:     unsig
      +                          ned char aux = val;
 17032  0F13  0830               	movf	representLed@val,w
 17033  0F14  00AD               	movwf	??_representLed
 17034  0F15  082D               	movf	??_representLed,w
 17035  0F16  00B1               	movwf	representLed@aux
 17036                           
 17037                           ;leds.c: 137:     if(val > 99)
 17038  0F17  3064               	movlw	100
 17039  0F18  0230               	subwf	representLed@val,w
 17040  0F19  1C03               	skipc
 17041  0F1A  2F1C               	goto	u4351
 17042  0F1B  2F1D               	goto	u4350
 17043  0F1C                     u4351:	
 17044  0F1C  2F1E               	goto	l7297
 17045  0F1D                     u4350:	
 17046  0F1D  2F5D               	goto	l614
 17047  0F1E                     l7297:	
 17048                           
 17049                           ;leds.c: 140:     LATAbits.LATA7 = aux >> 3;
 17050  0F1E  0831               	movf	representLed@aux,w
 17051  0F1F  00AD               	movwf	??_representLed
 17052  0F20  3003               	movlw	3
 17053  0F21                     u4365:	
 17054  0F21  36AD               	lsrf	??_representLed,f
 17055  0F22  0B89               	decfsz	9,f
 17056  0F23  2F21               	goto	u4365
 17057  0F24  082D               	movf	??_representLed,w
 17058  0F25  00AE               	movwf	??_representLed+1
 17059  0F26  0CAE               	rrf	??_representLed+1,f
 17060  0F27  0CAE               	rrf	??_representLed+1,f
 17061  0F28  0816               	movf	22,w	;volatile
 17062  0F29  062E               	xorwf	??_representLed+1,w
 17063  0F2A  397F               	andlw	-129
 17064  0F2B  062E               	xorwf	??_representLed+1,w
 17065  0F2C  0096               	movwf	22	;volatile
 17066  0F2D                     l7299:	
 17067                           
 17068                           ;leds.c: 141:     PWM6_LoadDutyValue(((aux >> 2) & 1)*1023);
 17069  0F2D  0831               	movf	representLed@aux,w
 17070  0F2E  00AD               	movwf	??_representLed
 17071  0F2F  3002               	movlw	2
 17072  0F30                     u4375:	
 17073  0F30  36AD               	lsrf	??_representLed,f
 17074  0F31  0B89               	decfsz	9,f
 17075  0F32  2F30               	goto	u4375
 17076  0F33  082D               	movf	??_representLed,w
 17077  0F34  3901               	andlw	1
 17078  0F35  00AE               	movwf	??_representLed+1
 17079  0F36  01AF               	clrf	??_representLed+2
 17080  0F37  082E               	movf	??_representLed+1,w
 17081  0F38  00A3               	movwf	___wmul@multiplier
 17082  0F39  082F               	movf	??_representLed+2,w
 17083  0F3A  00A4               	movwf	___wmul@multiplier+1
 17084  0F3B  30FF               	movlw	255
 17085  0F3C  00A5               	movwf	___wmul@multiplicand
 17086  0F3D  3003               	movlw	3
 17087  0F3E  00A6               	movwf	___wmul@multiplicand+1
 17088  0F3F  318A  2253  318F   	fcall	___wmul
 17089  0F42  0020               	movlb	0	; select bank0
 17090  0F43  0824               	movf	?___wmul+1,w
 17091  0F44  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 17092  0F45  0823               	movf	?___wmul,w
 17093  0F46  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 17094  0F47  3189  2122  318F   	fcall	_PWM6_LoadDutyValue
 17095  0F4A                     l7301:	
 17096                           
 17097                           ;leds.c: 142:     LATAbits.LATA5 = aux >> 1;
 17098  0F4A  0020               	movlb	0	; select bank0
 17099  0F4B  3631               	lsrf	representLed@aux,w
 17100  0F4C  00AD               	movwf	??_representLed
 17101  0F4D  0EAD               	swapf	??_representLed,f
 17102  0F4E  0DAD               	rlf	??_representLed,f
 17103  0F4F  0816               	movf	22,w	;volatile
 17104  0F50  062D               	xorwf	??_representLed,w
 17105  0F51  39DF               	andlw	-33
 17106  0F52  062D               	xorwf	??_representLed,w
 17107  0F53  0096               	movwf	22	;volatile
 17108  0F54                     l7303:	
 17109                           
 17110                           ;leds.c: 143:     LATAbits.LATA4 = aux & 1;
 17111  0F54  0831               	movf	representLed@aux,w
 17112  0F55  3901               	andlw	1
 17113  0F56  00AD               	movwf	??_representLed
 17114  0F57  0EAD               	swapf	??_representLed,f
 17115  0F58  0816               	movf	22,w	;volatile
 17116  0F59  062D               	xorwf	??_representLed,w
 17117  0F5A  39EF               	andlw	-17
 17118  0F5B  062D               	xorwf	??_representLed,w
 17119  0F5C  0096               	movwf	22	;volatile
 17120  0F5D                     l614:	
 17121  0F5D  0008               	return
 17122  0F5E                     __end_of_representLed:	
 17123                           
 17124                           	psect	text35
 17125  0A53                     __ptext35:	
 17126 ;; *************** function ___wmul *****************
 17127 ;; Defined at:
 17128 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 17129 ;; Parameters:    Size  Location     Type
 17130 ;;  multiplier      2    3[BANK0 ] unsigned int 
 17131 ;;  multiplicand    2    5[BANK0 ] unsigned int 
 17132 ;; Auto vars:     Size  Location     Type
 17133 ;;  product         2    7[BANK0 ] unsigned int 
 17134 ;; Return value:  Size  Location     Type
 17135 ;;                  2    3[BANK0 ] unsigned int 
 17136 ;; Registers used:
 17137 ;;		wreg, status,2, status,0
 17138 ;; Tracked objects:
 17139 ;;		On entry : 0/0
 17140 ;;		On exit  : 0/0
 17141 ;;		Unchanged: 0/0
 17142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17143 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17144 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17146 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17147 ;;Total ram usage:        6 bytes
 17148 ;; Hardware stack levels used:    1
 17149 ;; Hardware stack levels required when called:    6
 17150 ;; This function calls:
 17151 ;;		Nothing
 17152 ;; This function is called by:
 17153 ;;		_representLed
 17154 ;; This function uses a non-reentrant model
 17155 ;;
 17156                           
 17157                           
 17158                           ;psect for function ___wmul
 17159  0A53                     ___wmul:	
 17160  0A53                     l7233:	
 17161                           ;incstack = 0
 17162                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 17163                           
 17164  0A53  0020               	movlb	0	; select bank0
 17165  0A54  01A7               	clrf	___wmul@product
 17166  0A55  01A8               	clrf	___wmul@product+1
 17167  0A56                     l7235:	
 17168  0A56  1C23               	btfss	___wmul@multiplier,0
 17169  0A57  2A59               	goto	u4251
 17170  0A58  2A5A               	goto	u4250
 17171  0A59                     u4251:	
 17172  0A59  2A5E               	goto	l2112
 17173  0A5A                     u4250:	
 17174  0A5A                     l7237:	
 17175  0A5A  0825               	movf	___wmul@multiplicand,w
 17176  0A5B  07A7               	addwf	___wmul@product,f
 17177  0A5C  0826               	movf	___wmul@multiplicand+1,w
 17178  0A5D  3DA8               	addwfc	___wmul@product+1,f
 17179  0A5E                     l2112:	
 17180  0A5E  3001               	movlw	1
 17181  0A5F                     u4265:	
 17182  0A5F  35A5               	lslf	___wmul@multiplicand,f
 17183  0A60  0DA6               	rlf	___wmul@multiplicand+1,f
 17184  0A61  0B89               	decfsz	9,f
 17185  0A62  2A5F               	goto	u4265
 17186  0A63                     l7239:	
 17187  0A63  3001               	movlw	1
 17188  0A64                     u4275:	
 17189  0A64  36A4               	lsrf	___wmul@multiplier+1,f
 17190  0A65  0CA3               	rrf	___wmul@multiplier,f
 17191  0A66  0B89               	decfsz	9,f
 17192  0A67  2A64               	goto	u4275
 17193  0A68                     l7241:	
 17194  0A68  0823               	movf	___wmul@multiplier,w
 17195  0A69  0424               	iorwf	___wmul@multiplier+1,w
 17196  0A6A  1D03               	btfss	3,2
 17197  0A6B  2A6D               	goto	u4281
 17198  0A6C  2A6E               	goto	u4280
 17199  0A6D                     u4281:	
 17200  0A6D  2A56               	goto	l7235
 17201  0A6E                     u4280:	
 17202  0A6E                     l7243:	
 17203  0A6E  0828               	movf	___wmul@product+1,w
 17204  0A6F  00A4               	movwf	?___wmul+1
 17205  0A70  0827               	movf	___wmul@product,w
 17206  0A71  00A3               	movwf	?___wmul
 17207  0A72                     l2114:	
 17208  0A72  0008               	return
 17209  0A73                     __end_of___wmul:	
 17210                           
 17211                           	psect	text36
 17212  0EC4                     __ptext36:	
 17213 ;; *************** function _checkDebounceSW2 *****************
 17214 ;; Defined at:
 17215 ;;		line 638 in file "main.c"
 17216 ;; Parameters:    Size  Location     Type
 17217 ;;		None
 17218 ;; Auto vars:     Size  Location     Type
 17219 ;;		None
 17220 ;; Return value:  Size  Location     Type
 17221 ;;                  1    wreg      unsigned char 
 17222 ;; Registers used:
 17223 ;;		wreg, status,2, status,0
 17224 ;; Tracked objects:
 17225 ;;		On entry : 0/0
 17226 ;;		On exit  : 0/0
 17227 ;;		Unchanged: 0/0
 17228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17231 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17232 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17233 ;;Total ram usage:        7 bytes
 17234 ;; Hardware stack levels used:    1
 17235 ;; Hardware stack levels required when called:    6
 17236 ;; This function calls:
 17237 ;;		Nothing
 17238 ;; This function is called by:
 17239 ;;		_config_routine
 17240 ;;		_selectSubfield
 17241 ;;		_increment_subfield
 17242 ;; This function uses a non-reentrant model
 17243 ;;
 17244                           
 17245                           
 17246                           ;psect for function _checkDebounceSW2
 17247  0EC4                     _checkDebounceSW2:	
 17248  0EC4                     l7273:	
 17249                           ;incstack = 0
 17250                           ; Regs used in _checkDebounceSW2: [wreg+status,2+status,0]
 17251                           
 17252                           
 17253                           ;main.c: 641:     if(clkms - last_ms2 < 0){
 17254  0EC4  087D               	movf	_clkms,w	;volatile
 17255  0EC5  0020               	movlb	0	; select bank0
 17256  0EC6  00A3               	movwf	??_checkDebounceSW2
 17257  0EC7  01A4               	clrf	??_checkDebounceSW2+1
 17258  0EC8  0824               	movf	??_checkDebounceSW2+1,w
 17259  0EC9  00A6               	movwf	??_checkDebounceSW2+3
 17260  0ECA  085B               	movf	_last_ms2,w
 17261  0ECB  0223               	subwf	??_checkDebounceSW2,w
 17262  0ECC  00A5               	movwf	??_checkDebounceSW2+2
 17263  0ECD  1C03               	skipc
 17264  0ECE  03A6               	decf	??_checkDebounceSW2+3,f
 17265  0ECF  1FA6               	btfss	??_checkDebounceSW2+3,7
 17266  0ED0  2ED2               	goto	u4321
 17267  0ED1  2ED3               	goto	u4320
 17268  0ED2                     u4321:	
 17269  0ED2  2EF7               	goto	l7281
 17270  0ED3                     u4320:	
 17271  0ED3                     l7275:	
 17272                           
 17273                           ;main.c: 643:         if ((200 - last_ms2)+ clkms > 15 ){
 17274  0ED3  087D               	movf	_clkms,w	;volatile
 17275  0ED4  00A3               	movwf	??_checkDebounceSW2
 17276  0ED5  01A4               	clrf	??_checkDebounceSW2+1
 17277  0ED6  0824               	movf	??_checkDebounceSW2+1,w
 17278  0ED7  00A6               	movwf	??_checkDebounceSW2+3
 17279  0ED8  085B               	movf	_last_ms2,w
 17280  0ED9  0223               	subwf	??_checkDebounceSW2,w
 17281  0EDA  00A5               	movwf	??_checkDebounceSW2+2
 17282  0EDB  1C03               	skipc
 17283  0EDC  03A6               	decf	??_checkDebounceSW2+3,f
 17284  0EDD  0825               	movf	??_checkDebounceSW2+2,w
 17285  0EDE  3EC8               	addlw	200
 17286  0EDF  00A7               	movwf	??_checkDebounceSW2+4
 17287  0EE0  3000               	movlw	0
 17288  0EE1  3D26               	addwfc	??_checkDebounceSW2+3,w
 17289  0EE2  00A8               	movwf	??_checkDebounceSW2+5
 17290  0EE3  0828               	movf	??_checkDebounceSW2+5,w
 17291  0EE4  3A80               	xorlw	128
 17292  0EE5  00A9               	movwf	??_checkDebounceSW2+6
 17293  0EE6  3080               	movlw	128
 17294  0EE7  0229               	subwf	??_checkDebounceSW2+6,w
 17295  0EE8  1D03               	skipz
 17296  0EE9  2EEC               	goto	u4335
 17297  0EEA  3010               	movlw	16
 17298  0EEB  0227               	subwf	??_checkDebounceSW2+4,w
 17299  0EEC                     u4335:	
 17300  0EEC  1C03               	skipc
 17301  0EED  2EEF               	goto	u4331
 17302  0EEE  2EF0               	goto	u4330
 17303  0EEF                     u4331:	
 17304  0EEF  2EF7               	goto	l7281
 17305  0EF0                     u4330:	
 17306  0EF0                     l7277:	
 17307                           
 17308                           ;main.c: 644:             last_ms2 = clkms;
 17309  0EF0  087D               	movf	_clkms,w	;volatile
 17310  0EF1  0020               	movlb	0	; select bank0
 17311  0EF2  00A3               	movwf	??_checkDebounceSW2
 17312  0EF3  0823               	movf	??_checkDebounceSW2,w
 17313  0EF4  00DB               	movwf	_last_ms2
 17314                           
 17315                           ;main.c: 645:             return 1;
 17316  0EF5  3001               	movlw	1
 17317  0EF6  2F10               	goto	l326
 17318  0EF7                     l7281:	
 17319                           
 17320                           ;main.c: 649:     if(clkms - last_ms2 < 15){
 17321  0EF7  087D               	movf	_clkms,w	;volatile
 17322  0EF8  0020               	movlb	0	; select bank0
 17323  0EF9  00A3               	movwf	??_checkDebounceSW2
 17324  0EFA  01A4               	clrf	??_checkDebounceSW2+1
 17325  0EFB  0824               	movf	??_checkDebounceSW2+1,w
 17326  0EFC  00A6               	movwf	??_checkDebounceSW2+3
 17327  0EFD  085B               	movf	_last_ms2,w
 17328  0EFE  0223               	subwf	??_checkDebounceSW2,w
 17329  0EFF  00A5               	movwf	??_checkDebounceSW2+2
 17330  0F00  1C03               	skipc
 17331  0F01  03A6               	decf	??_checkDebounceSW2+3,f
 17332  0F02  0826               	movf	??_checkDebounceSW2+3,w
 17333  0F03  3A80               	xorlw	128
 17334  0F04  00A7               	movwf	??_checkDebounceSW2+4
 17335  0F05  3080               	movlw	128
 17336  0F06  0227               	subwf	??_checkDebounceSW2+4,w
 17337  0F07  1D03               	skipz
 17338  0F08  2F0B               	goto	u4345
 17339  0F09  300F               	movlw	15
 17340  0F0A  0225               	subwf	??_checkDebounceSW2+2,w
 17341  0F0B                     u4345:	
 17342  0F0B  1803               	skipnc
 17343  0F0C  2F0E               	goto	u4341
 17344  0F0D  2F0F               	goto	u4340
 17345  0F0E                     u4341:	
 17346  0F0E  2EF0               	goto	l7277
 17347  0F0F                     u4340:	
 17348  0F0F                     l7283:	
 17349                           
 17350                           ;main.c: 650:         return 0;
 17351  0F0F  3000               	movlw	0
 17352  0F10                     l326:	
 17353  0F10  0008               	return
 17354  0F11                     __end_of_checkDebounceSW2:	
 17355                           
 17356                           	psect	text37
 17357  0699                     __ptext37:	
 17358 ;; *************** function _checkDebounceSW1 *****************
 17359 ;; Defined at:
 17360 ;;		line 609 in file "main.c"
 17361 ;; Parameters:    Size  Location     Type
 17362 ;;		None
 17363 ;; Auto vars:     Size  Location     Type
 17364 ;;		None
 17365 ;; Return value:  Size  Location     Type
 17366 ;;                  1    wreg      unsigned char 
 17367 ;; Registers used:
 17368 ;;		wreg, status,2, status,0
 17369 ;; Tracked objects:
 17370 ;;		On entry : 0/0
 17371 ;;		On exit  : 0/0
 17372 ;;		Unchanged: 0/0
 17373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17376 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17377 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17378 ;;Total ram usage:        7 bytes
 17379 ;; Hardware stack levels used:    1
 17380 ;; Hardware stack levels required when called:    6
 17381 ;; This function calls:
 17382 ;;		Nothing
 17383 ;; This function is called by:
 17384 ;;		_config_routine
 17385 ;;		_selectSubfield
 17386 ;;		_increment_subfield
 17387 ;; This function uses a non-reentrant model
 17388 ;;
 17389                           
 17390                           
 17391                           ;psect for function _checkDebounceSW1
 17392  0699                     _checkDebounceSW1:	
 17393  0699                     l7247:	
 17394                           ;incstack = 0
 17395                           ; Regs used in _checkDebounceSW1: [wreg+status,2+status,0]
 17396                           
 17397                           
 17398                           ;main.c: 610:     PIE4bits.TMR1IE = 0;
 17399  0699  002E               	movlb	14	; select bank14
 17400  069A  101A               	bcf	26,0	;volatile
 17401  069B                     l7249:	
 17402                           
 17403                           ;main.c: 612:     if(clkms - last_ms < 0){
 17404  069B  087D               	movf	_clkms,w	;volatile
 17405  069C  0020               	movlb	0	; select bank0
 17406  069D  00A3               	movwf	??_checkDebounceSW1
 17407  069E  01A4               	clrf	??_checkDebounceSW1+1
 17408  069F  0824               	movf	??_checkDebounceSW1+1,w
 17409  06A0  00A6               	movwf	??_checkDebounceSW1+3
 17410  06A1  085C               	movf	_last_ms,w
 17411  06A2  0223               	subwf	??_checkDebounceSW1,w
 17412  06A3  00A5               	movwf	??_checkDebounceSW1+2
 17413  06A4  1C03               	skipc
 17414  06A5  03A6               	decf	??_checkDebounceSW1+3,f
 17415  06A6  1FA6               	btfss	??_checkDebounceSW1+3,7
 17416  06A7  2EA9               	goto	u4291
 17417  06A8  2EAA               	goto	u4290
 17418  06A9                     u4291:	
 17419  06A9  2ED0               	goto	l7259
 17420  06AA                     u4290:	
 17421  06AA                     l7251:	
 17422                           
 17423                           ;main.c: 614:         if ((200 - last_ms)+ clkms > 15 ){
 17424  06AA  087D               	movf	_clkms,w	;volatile
 17425  06AB  00A3               	movwf	??_checkDebounceSW1
 17426  06AC  01A4               	clrf	??_checkDebounceSW1+1
 17427  06AD  0824               	movf	??_checkDebounceSW1+1,w
 17428  06AE  00A6               	movwf	??_checkDebounceSW1+3
 17429  06AF  085C               	movf	_last_ms,w
 17430  06B0  0223               	subwf	??_checkDebounceSW1,w
 17431  06B1  00A5               	movwf	??_checkDebounceSW1+2
 17432  06B2  1C03               	skipc
 17433  06B3  03A6               	decf	??_checkDebounceSW1+3,f
 17434  06B4  0825               	movf	??_checkDebounceSW1+2,w
 17435  06B5  3EC8               	addlw	200
 17436  06B6  00A7               	movwf	??_checkDebounceSW1+4
 17437  06B7  3000               	movlw	0
 17438  06B8  3D26               	addwfc	??_checkDebounceSW1+3,w
 17439  06B9  00A8               	movwf	??_checkDebounceSW1+5
 17440  06BA  0828               	movf	??_checkDebounceSW1+5,w
 17441  06BB  3A80               	xorlw	128
 17442  06BC  00A9               	movwf	??_checkDebounceSW1+6
 17443  06BD  3080               	movlw	128
 17444  06BE  0229               	subwf	??_checkDebounceSW1+6,w
 17445  06BF  1D03               	skipz
 17446  06C0  2EC3               	goto	u4305
 17447  06C1  3010               	movlw	16
 17448  06C2  0227               	subwf	??_checkDebounceSW1+4,w
 17449  06C3                     u4305:	
 17450  06C3  1C03               	skipc
 17451  06C4  2EC6               	goto	u4301
 17452  06C5  2EC7               	goto	u4300
 17453  06C6                     u4301:	
 17454  06C6  2ED0               	goto	l7259
 17455  06C7                     u4300:	
 17456  06C7                     l7253:	
 17457                           
 17458                           ;main.c: 615:             last_ms = clkms;
 17459  06C7  087D               	movf	_clkms,w	;volatile
 17460  06C8  0020               	movlb	0	; select bank0
 17461  06C9  00A3               	movwf	??_checkDebounceSW1
 17462  06CA  0823               	movf	??_checkDebounceSW1,w
 17463  06CB  00DC               	movwf	_last_ms
 17464  06CC                     l7255:	
 17465                           
 17466                           ;main.c: 616:             PIE4bits.TMR1IE = 1;
 17467  06CC  002E               	movlb	14	; select bank14
 17468  06CD  141A               	bsf	26,0	;volatile
 17469                           
 17470                           ;main.c: 617:             return 1;
 17471  06CE  3001               	movlw	1
 17472  06CF  2EF2               	goto	l319
 17473  06D0                     l7259:	
 17474                           
 17475                           ;main.c: 621:     if(clkms - last_ms < 15){
 17476  06D0  087D               	movf	_clkms,w	;volatile
 17477  06D1  0020               	movlb	0	; select bank0
 17478  06D2  00A3               	movwf	??_checkDebounceSW1
 17479  06D3  01A4               	clrf	??_checkDebounceSW1+1
 17480  06D4  0824               	movf	??_checkDebounceSW1+1,w
 17481  06D5  00A6               	movwf	??_checkDebounceSW1+3
 17482  06D6  085C               	movf	_last_ms,w
 17483  06D7  0223               	subwf	??_checkDebounceSW1,w
 17484  06D8  00A5               	movwf	??_checkDebounceSW1+2
 17485  06D9  1C03               	skipc
 17486  06DA  03A6               	decf	??_checkDebounceSW1+3,f
 17487  06DB  0826               	movf	??_checkDebounceSW1+3,w
 17488  06DC  3A80               	xorlw	128
 17489  06DD  00A7               	movwf	??_checkDebounceSW1+4
 17490  06DE  3080               	movlw	128
 17491  06DF  0227               	subwf	??_checkDebounceSW1+4,w
 17492  06E0  1D03               	skipz
 17493  06E1  2EE4               	goto	u4315
 17494  06E2  300F               	movlw	15
 17495  06E3  0225               	subwf	??_checkDebounceSW1+2,w
 17496  06E4                     u4315:	
 17497  06E4  1803               	skipnc
 17498  06E5  2EE7               	goto	u4311
 17499  06E6  2EE8               	goto	u4310
 17500  06E7                     u4311:	
 17501  06E7  2EEA               	goto	l7267
 17502  06E8                     u4310:	
 17503  06E8                     l7261:	
 17504                           
 17505                           ;main.c: 622:         return 0;
 17506  06E8  3000               	movlw	0
 17507  06E9  2EF2               	goto	l319
 17508  06EA                     l7267:	
 17509                           
 17510                           ;main.c: 625:         last_ms = clkms;
 17511  06EA  087D               	movf	_clkms,w	;volatile
 17512  06EB  0020               	movlb	0	; select bank0
 17513  06EC  00A3               	movwf	??_checkDebounceSW1
 17514  06ED  0823               	movf	??_checkDebounceSW1,w
 17515  06EE  00DC               	movwf	_last_ms
 17516  06EF                     l7269:	
 17517                           
 17518                           ;main.c: 626:         PIE4bits.TMR1IE = 1;
 17519  06EF  002E               	movlb	14	; select bank14
 17520  06F0  141A               	bsf	26,0	;volatile
 17521                           
 17522                           ;main.c: 627:         return 1;
 17523  06F1  3001               	movlw	1
 17524  06F2                     l319:	
 17525  06F2  0008               	return
 17526  06F3                     __end_of_checkDebounceSW1:	
 17527                           
 17528                           	psect	text38
 17529  0894                     __ptext38:	
 17530 ;; *************** function ___bmul *****************
 17531 ;; Defined at:
 17532 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul8.c"
 17533 ;; Parameters:    Size  Location     Type
 17534 ;;  multiplier      1    wreg     unsigned char 
 17535 ;;  multiplicand    1    3[BANK0 ] unsigned char 
 17536 ;; Auto vars:     Size  Location     Type
 17537 ;;  multiplier      1    6[BANK0 ] unsigned char 
 17538 ;;  product         1    5[BANK0 ] unsigned char 
 17539 ;; Return value:  Size  Location     Type
 17540 ;;                  1    wreg      unsigned char 
 17541 ;; Registers used:
 17542 ;;		wreg, status,2, status,0
 17543 ;; Tracked objects:
 17544 ;;		On entry : 0/0
 17545 ;;		On exit  : 0/0
 17546 ;;		Unchanged: 0/0
 17547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17548 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17549 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17550 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17551 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17552 ;;Total ram usage:        4 bytes
 17553 ;; Hardware stack levels used:    1
 17554 ;; Hardware stack levels required when called:    6
 17555 ;; This function calls:
 17556 ;;		Nothing
 17557 ;; This function is called by:
 17558 ;;		_getSubfieldInfo
 17559 ;;		_read_ring
 17560 ;; This function uses a non-reentrant model
 17561 ;;
 17562                           
 17563                           
 17564                           ;psect for function ___bmul
 17565  0894                     ___bmul:	
 17566                           
 17567                           ;incstack = 0
 17568                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 17569                           ;___bmul@multiplier stored from wreg
 17570  0894  0020               	movlb	0	; select bank0
 17571  0895  00A6               	movwf	___bmul@multiplier
 17572  0896                     l7477:	
 17573  0896  01A5               	clrf	___bmul@product
 17574  0897                     l7479:	
 17575  0897  1C26               	btfss	___bmul@multiplier,0
 17576  0898  289A               	goto	u4621
 17577  0899  289B               	goto	u4620
 17578  089A                     u4621:	
 17579  089A  289F               	goto	l7483
 17580  089B                     u4620:	
 17581  089B                     l7481:	
 17582  089B  0823               	movf	___bmul@multiplicand,w
 17583  089C  00A4               	movwf	??___bmul
 17584  089D  0824               	movf	??___bmul,w
 17585  089E  07A5               	addwf	___bmul@product,f
 17586  089F                     l7483:	
 17587  089F  1003               	clrc
 17588  08A0  0DA3               	rlf	___bmul@multiplicand,f
 17589  08A1                     l7485:	
 17590  08A1  1003               	clrc
 17591  08A2  0CA6               	rrf	___bmul@multiplier,f
 17592  08A3  0826               	movf	___bmul@multiplier,w
 17593  08A4  1D03               	btfss	3,2
 17594  08A5  28A7               	goto	u4631
 17595  08A6  28A8               	goto	u4630
 17596  08A7                     u4631:	
 17597  08A7  2897               	goto	l7479
 17598  08A8                     u4630:	
 17599  08A8                     l7487:	
 17600  08A8  0825               	movf	___bmul@product,w
 17601  08A9                     l2138:	
 17602  08A9  0008               	return
 17603  08AA                     __end_of___bmul:	
 17604                           
 17605                           	psect	text39
 17606  07A1                     __ptext39:	
 17607 ;; *************** function ___awmod *****************
 17608 ;; Defined at:
 17609 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 17610 ;; Parameters:    Size  Location     Type
 17611 ;;  divisor         2    3[BANK0 ] int 
 17612 ;;  dividend        2    5[BANK0 ] int 
 17613 ;; Auto vars:     Size  Location     Type
 17614 ;;  sign            1    9[BANK0 ] unsigned char 
 17615 ;;  counter         1    8[BANK0 ] unsigned char 
 17616 ;; Return value:  Size  Location     Type
 17617 ;;                  2    3[BANK0 ] int 
 17618 ;; Registers used:
 17619 ;;		wreg, status,2, status,0
 17620 ;; Tracked objects:
 17621 ;;		On entry : 0/0
 17622 ;;		On exit  : 0/0
 17623 ;;		Unchanged: 0/0
 17624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17625 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17626 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17627 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17628 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17629 ;;Total ram usage:        7 bytes
 17630 ;; Hardware stack levels used:    1
 17631 ;; Hardware stack levels required when called:    6
 17632 ;; This function calls:
 17633 ;;		Nothing
 17634 ;; This function is called by:
 17635 ;;		_getSubfieldInfo
 17636 ;;		_recTempThresh
 17637 ;; This function uses a non-reentrant model
 17638 ;;
 17639                           
 17640                           
 17641                           ;psect for function ___awmod
 17642  07A1                     ___awmod:	
 17643  07A1                     l7491:	
 17644                           ;incstack = 0
 17645                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 17646                           
 17647  07A1  0020               	movlb	0	; select bank0
 17648  07A2  01A9               	clrf	___awmod@sign
 17649  07A3                     l7493:	
 17650  07A3  1FA6               	btfss	___awmod@dividend+1,7
 17651  07A4  2FA6               	goto	u4641
 17652  07A5  2FA7               	goto	u4640
 17653  07A6                     u4641:	
 17654  07A6  2FAE               	goto	l7499
 17655  07A7                     u4640:	
 17656  07A7                     l7495:	
 17657  07A7  09A5               	comf	___awmod@dividend,f
 17658  07A8  09A6               	comf	___awmod@dividend+1,f
 17659  07A9  0AA5               	incf	___awmod@dividend,f
 17660  07AA  1903               	skipnz
 17661  07AB  0AA6               	incf	___awmod@dividend+1,f
 17662  07AC                     l7497:	
 17663  07AC  01A9               	clrf	___awmod@sign
 17664  07AD  0AA9               	incf	___awmod@sign,f
 17665  07AE                     l7499:	
 17666  07AE  1FA4               	btfss	___awmod@divisor+1,7
 17667  07AF  2FB1               	goto	u4651
 17668  07B0  2FB2               	goto	u4650
 17669  07B1                     u4651:	
 17670  07B1  2FB7               	goto	l7503
 17671  07B2                     u4650:	
 17672  07B2                     l7501:	
 17673  07B2  09A3               	comf	___awmod@divisor,f
 17674  07B3  09A4               	comf	___awmod@divisor+1,f
 17675  07B4  0AA3               	incf	___awmod@divisor,f
 17676  07B5  1903               	skipnz
 17677  07B6  0AA4               	incf	___awmod@divisor+1,f
 17678  07B7                     l7503:	
 17679  07B7  0823               	movf	___awmod@divisor,w
 17680  07B8  0424               	iorwf	___awmod@divisor+1,w
 17681  07B9  1903               	btfsc	3,2
 17682  07BA  2FBC               	goto	u4661
 17683  07BB  2FBD               	goto	u4660
 17684  07BC                     u4661:	
 17685  07BC  2FE6               	goto	l7521
 17686  07BD                     u4660:	
 17687  07BD                     l7505:	
 17688  07BD  01A8               	clrf	___awmod@counter
 17689  07BE  0AA8               	incf	___awmod@counter,f
 17690  07BF  2FC9               	goto	l7511
 17691  07C0                     l7507:	
 17692  07C0  3001               	movlw	1
 17693  07C1                     u4675:	
 17694  07C1  35A3               	lslf	___awmod@divisor,f
 17695  07C2  0DA4               	rlf	___awmod@divisor+1,f
 17696  07C3  0B89               	decfsz	9,f
 17697  07C4  2FC1               	goto	u4675
 17698  07C5                     l7509:	
 17699  07C5  3001               	movlw	1
 17700  07C6  00A7               	movwf	??___awmod
 17701  07C7  0827               	movf	??___awmod,w
 17702  07C8  07A8               	addwf	___awmod@counter,f
 17703  07C9                     l7511:	
 17704  07C9  1FA4               	btfss	___awmod@divisor+1,7
 17705  07CA  2FCC               	goto	u4681
 17706  07CB  2FCD               	goto	u4680
 17707  07CC                     u4681:	
 17708  07CC  2FC0               	goto	l7507
 17709  07CD                     u4680:	
 17710  07CD                     l7513:	
 17711  07CD  0824               	movf	___awmod@divisor+1,w
 17712  07CE  0226               	subwf	___awmod@dividend+1,w
 17713  07CF  1D03               	skipz
 17714  07D0  2FD3               	goto	u4695
 17715  07D1  0823               	movf	___awmod@divisor,w
 17716  07D2  0225               	subwf	___awmod@dividend,w
 17717  07D3                     u4695:	
 17718  07D3  1C03               	skipc
 17719  07D4  2FD6               	goto	u4691
 17720  07D5  2FD7               	goto	u4690
 17721  07D6                     u4691:	
 17722  07D6  2FDB               	goto	l7517
 17723  07D7                     u4690:	
 17724  07D7                     l7515:	
 17725  07D7  0823               	movf	___awmod@divisor,w
 17726  07D8  02A5               	subwf	___awmod@dividend,f
 17727  07D9  0824               	movf	___awmod@divisor+1,w
 17728  07DA  3BA6               	subwfb	___awmod@dividend+1,f
 17729  07DB                     l7517:	
 17730  07DB  3001               	movlw	1
 17731  07DC                     u4705:	
 17732  07DC  36A4               	lsrf	___awmod@divisor+1,f
 17733  07DD  0CA3               	rrf	___awmod@divisor,f
 17734  07DE  0B89               	decfsz	9,f
 17735  07DF  2FDC               	goto	u4705
 17736  07E0                     l7519:	
 17737  07E0  3001               	movlw	1
 17738  07E1  02A8               	subwf	___awmod@counter,f
 17739  07E2  1D03               	btfss	3,2
 17740  07E3  2FE5               	goto	u4711
 17741  07E4  2FE6               	goto	u4710
 17742  07E5                     u4711:	
 17743  07E5  2FCD               	goto	l7513
 17744  07E6                     u4710:	
 17745  07E6                     l7521:	
 17746  07E6  0829               	movf	___awmod@sign,w
 17747  07E7  1903               	btfsc	3,2
 17748  07E8  2FEA               	goto	u4721
 17749  07E9  2FEB               	goto	u4720
 17750  07EA                     u4721:	
 17751  07EA  2FF0               	goto	l7525
 17752  07EB                     u4720:	
 17753  07EB                     l7523:	
 17754  07EB  09A5               	comf	___awmod@dividend,f
 17755  07EC  09A6               	comf	___awmod@dividend+1,f
 17756  07ED  0AA5               	incf	___awmod@dividend,f
 17757  07EE  1903               	skipnz
 17758  07EF  0AA6               	incf	___awmod@dividend+1,f
 17759  07F0                     l7525:	
 17760  07F0  0826               	movf	___awmod@dividend+1,w
 17761  07F1  00A4               	movwf	?___awmod+1
 17762  07F2  0825               	movf	___awmod@dividend,w
 17763  07F3  00A3               	movwf	?___awmod
 17764  07F4                     l2278:	
 17765  07F4  0008               	return
 17766  07F5                     __end_of___awmod:	
 17767                           
 17768                           	psect	text40
 17769  063E                     __ptext40:	
 17770 ;; *************** function _all_LED *****************
 17771 ;; Defined at:
 17772 ;;		line 20 in file "leds.c"
 17773 ;; Parameters:    Size  Location     Type
 17774 ;;		None
 17775 ;; Auto vars:     Size  Location     Type
 17776 ;;		None
 17777 ;; Return value:  Size  Location     Type
 17778 ;;                  1    wreg      void 
 17779 ;; Registers used:
 17780 ;;		wreg, status,2, status,0, pclath, cstack
 17781 ;; Tracked objects:
 17782 ;;		On entry : 0/0
 17783 ;;		On exit  : 0/0
 17784 ;;		Unchanged: 0/0
 17785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17788 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17789 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17790 ;;Total ram usage:        1 bytes
 17791 ;; Hardware stack levels used:    1
 17792 ;; Hardware stack levels required when called:    7
 17793 ;; This function calls:
 17794 ;;		_PWM6_LoadDutyValue
 17795 ;; This function is called by:
 17796 ;;		_config_routine
 17797 ;;		_selectSubfield
 17798 ;; This function uses a non-reentrant model
 17799 ;;
 17800                           
 17801                           
 17802                           ;psect for function _all_LED
 17803  063E                     _all_LED:	
 17804  063E                     l556:	
 17805                           ;incstack = 0
 17806                           ; Regs used in _all_LED: [wreg+status,2+status,0+pclath+cstack]
 17807                           ;leds.c: 22:     do { LATAbits.LATA7 = 1; } while(0);
 17808                           
 17809  063E  0020               	movlb	0	; select bank0
 17810  063F  1796               	bsf	22,7	;volatile
 17811  0640                     l7561:	
 17812                           
 17813                           ;leds.c: 23:     _delay((unsigned long)((100)*(1000000/4000.0)));
 17814  0640  3021               	movlw	33
 17815  0641  0020               	movlb	0	; select bank0
 17816  0642  00AD               	movwf	??_all_LED
 17817  0643  3076               	movlw	118
 17818  0644                     u5447:	
 17819  0644  0B89               	decfsz	9,f
 17820  0645  2E44               	goto	u5447
 17821  0646  0BAD               	decfsz	??_all_LED,f
 17822  0647  2E44               	goto	u5447
 17823  0648  0000               	nop
 17824  0649                     l7563:	
 17825  0649  0020               	movlb	0	; select bank0
 17826  064A  1396               	bcf	22,7	;volatile
 17827  064B                     l559:	
 17828                           
 17829                           ;leds.c: 25:     _delay((unsigned long)((100)*(1000000/4000.0)));
 17830  064B  3021               	movlw	33
 17831  064C  0020               	movlb	0	; select bank0
 17832  064D  00AD               	movwf	??_all_LED
 17833  064E  3076               	movlw	118
 17834  064F                     u5457:	
 17835  064F  0B89               	decfsz	9,f
 17836  0650  2E4F               	goto	u5457
 17837  0651  0BAD               	decfsz	??_all_LED,f
 17838  0652  2E4F               	goto	u5457
 17839  0653  0000               	nop
 17840  0654                     l7565:	
 17841                           
 17842                           ;leds.c: 26:     PWM6_LoadDutyValue(1023);
 17843  0654  30FF               	movlw	255
 17844  0655  0020               	movlb	0	; select bank0
 17845  0656  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 17846  0657  3003               	movlw	3
 17847  0658  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 17848  0659  3189  2122  3186   	fcall	_PWM6_LoadDutyValue
 17849  065C                     l7567:	
 17850                           
 17851                           ;leds.c: 27:     _delay((unsigned long)((100)*(1000000/4000.0)));
 17852  065C  3021               	movlw	33
 17853  065D  0020               	movlb	0	; select bank0
 17854  065E  00AD               	movwf	??_all_LED
 17855  065F  3076               	movlw	118
 17856  0660                     u5467:	
 17857  0660  0B89               	decfsz	9,f
 17858  0661  2E60               	goto	u5467
 17859  0662  0BAD               	decfsz	??_all_LED,f
 17860  0663  2E60               	goto	u5467
 17861  0664  0000               	nop
 17862                           
 17863                           ;leds.c: 28:     PWM6_LoadDutyValue(0);
 17864  0665  3000               	movlw	0
 17865  0666  0020               	movlb	0	; select bank0
 17866  0667  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 17867  0668  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 17868  0669  3189  2122  3186   	fcall	_PWM6_LoadDutyValue
 17869  066C                     l7569:	
 17870                           
 17871                           ;leds.c: 29:     _delay((unsigned long)((100)*(1000000/4000.0)));
 17872  066C  3021               	movlw	33
 17873  066D  0020               	movlb	0	; select bank0
 17874  066E  00AD               	movwf	??_all_LED
 17875  066F  3076               	movlw	118
 17876  0670                     u5477:	
 17877  0670  0B89               	decfsz	9,f
 17878  0671  2E70               	goto	u5477
 17879  0672  0BAD               	decfsz	??_all_LED,f
 17880  0673  2E70               	goto	u5477
 17881  0674  0000               	nop
 17882  0675                     l7571:	
 17883  0675  0020               	movlb	0	; select bank0
 17884  0676  1696               	bsf	22,5	;volatile
 17885  0677                     l7573:	
 17886                           
 17887                           ;leds.c: 31:     _delay((unsigned long)((100)*(1000000/4000.0)));
 17888  0677  3021               	movlw	33
 17889  0678  0020               	movlb	0	; select bank0
 17890  0679  00AD               	movwf	??_all_LED
 17891  067A  3076               	movlw	118
 17892  067B                     u5487:	
 17893  067B  0B89               	decfsz	9,f
 17894  067C  2E7B               	goto	u5487
 17895  067D  0BAD               	decfsz	??_all_LED,f
 17896  067E  2E7B               	goto	u5487
 17897  067F  0000               	nop
 17898  0680                     l7575:	
 17899  0680  0020               	movlb	0	; select bank0
 17900  0681  1296               	bcf	22,5	;volatile
 17901  0682                     l7577:	
 17902                           
 17903                           ;leds.c: 33:     _delay((unsigned long)((100)*(1000000/4000.0)));
 17904  0682  3021               	movlw	33
 17905  0683  0020               	movlb	0	; select bank0
 17906  0684  00AD               	movwf	??_all_LED
 17907  0685  3076               	movlw	118
 17908  0686                     u5497:	
 17909  0686  0B89               	decfsz	9,f
 17910  0687  2E86               	goto	u5497
 17911  0688  0BAD               	decfsz	??_all_LED,f
 17912  0689  2E86               	goto	u5497
 17913  068A  0000               	nop
 17914  068B                     l7579:	
 17915  068B  0020               	movlb	0	; select bank0
 17916  068C  1616               	bsf	22,4	;volatile
 17917  068D                     l7581:	
 17918                           
 17919                           ;leds.c: 35:     _delay((unsigned long)((100)*(1000000/4000.0)));
 17920  068D  3021               	movlw	33
 17921  068E  0020               	movlb	0	; select bank0
 17922  068F  00AD               	movwf	??_all_LED
 17923  0690  3076               	movlw	118
 17924  0691                     u5507:	
 17925  0691  0B89               	decfsz	9,f
 17926  0692  2E91               	goto	u5507
 17927  0693  0BAD               	decfsz	??_all_LED,f
 17928  0694  2E91               	goto	u5507
 17929  0695  0000               	nop
 17930  0696                     l7583:	
 17931  0696  0020               	movlb	0	; select bank0
 17932  0697  1216               	bcf	22,4	;volatile
 17933  0698                     l568:	
 17934  0698  0008               	return
 17935  0699                     __end_of_all_LED:	
 17936                           
 17937                           	psect	text41
 17938  0A33                     __ptext41:	
 17939 ;; *************** function _mode_select_LED *****************
 17940 ;; Defined at:
 17941 ;;		line 98 in file "leds.c"
 17942 ;; Parameters:    Size  Location     Type
 17943 ;;		None
 17944 ;; Auto vars:     Size  Location     Type
 17945 ;;		None
 17946 ;; Return value:  Size  Location     Type
 17947 ;;                  1    wreg      void 
 17948 ;; Registers used:
 17949 ;;		wreg, status,2, status,0, pclath, cstack
 17950 ;; Tracked objects:
 17951 ;;		On entry : 0/0
 17952 ;;		On exit  : 0/0
 17953 ;;		Unchanged: 0/0
 17954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17957 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17958 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17959 ;;Total ram usage:        1 bytes
 17960 ;; Hardware stack levels used:    1
 17961 ;; Hardware stack levels required when called:    7
 17962 ;; This function calls:
 17963 ;;		_PWM6_LoadDutyValue
 17964 ;; This function is called by:
 17965 ;;		_config_routine
 17966 ;; This function uses a non-reentrant model
 17967 ;;
 17968                           
 17969                           
 17970                           ;psect for function _mode_select_LED
 17971  0A33                     _mode_select_LED:	
 17972  0A33                     l7729:	
 17973                           ;incstack = 0
 17974                           ; Regs used in _mode_select_LED: [wreg+status,2+status,0+pclath+cstack]
 17975                           
 17976                           
 17977                           ;leds.c: 101:     PWM6_LoadDutyValue(1023);
 17978  0A33  30FF               	movlw	255
 17979  0A34  0020               	movlb	0	; select bank0
 17980  0A35  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 17981  0A36  3003               	movlw	3
 17982  0A37  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 17983  0A38  3189  2122  318A   	fcall	_PWM6_LoadDutyValue
 17984  0A3B                     l7731:	
 17985  0A3B  0020               	movlb	0	; select bank0
 17986  0A3C  1616               	bsf	22,4	;volatile
 17987  0A3D                     l7733:	
 17988                           
 17989                           ;leds.c: 103:     _delay((unsigned long)((500)*(1000000/4000.0)));
 17990  0A3D  30A3               	movlw	163
 17991  0A3E  0020               	movlb	0	; select bank0
 17992  0A3F  00AD               	movwf	??_mode_select_LED
 17993  0A40  3055               	movlw	85
 17994  0A41                     u5517:	
 17995  0A41  0B89               	decfsz	9,f
 17996  0A42  2A41               	goto	u5517
 17997  0A43  0BAD               	decfsz	??_mode_select_LED,f
 17998  0A44  2A41               	goto	u5517
 17999  0A45                     l7735:	
 18000  0A45  0020               	movlb	0	; select bank0
 18001  0A46  1696               	bsf	22,5	;volatile
 18002  0A47                     l7737:	
 18003                           
 18004                           ;leds.c: 105:     _delay((unsigned long)((500)*(1000000/4000.0)));
 18005  0A47  30A3               	movlw	163
 18006  0A48  0020               	movlb	0	; select bank0
 18007  0A49  00AD               	movwf	??_mode_select_LED
 18008  0A4A  3055               	movlw	85
 18009  0A4B                     u5527:	
 18010  0A4B  0B89               	decfsz	9,f
 18011  0A4C  2A4B               	goto	u5527
 18012  0A4D  0BAD               	decfsz	??_mode_select_LED,f
 18013  0A4E  2A4B               	goto	u5527
 18014  0A4F                     l7739:	
 18015  0A4F  0020               	movlb	0	; select bank0
 18016  0A50  1216               	bcf	22,4	;volatile
 18017  0A51                     l7741:	
 18018  0A51  1296               	bcf	22,5	;volatile
 18019  0A52                     l600:	
 18020  0A52  0008               	return
 18021  0A53                     __end_of_mode_select_LED:	
 18022                           
 18023                           	psect	text42
 18024  0CE9                     __ptext42:	
 18025 ;; *************** function _check_thresholds *****************
 18026 ;; Defined at:
 18027 ;;		line 291 in file "main.c"
 18028 ;; Parameters:    Size  Location     Type
 18029 ;;  threshold       1    wreg     unsigned char 
 18030 ;; Auto vars:     Size  Location     Type
 18031 ;;  threshold       1   14[BANK0 ] unsigned char 
 18032 ;; Return value:  Size  Location     Type
 18033 ;;                  1    wreg      void 
 18034 ;; Registers used:
 18035 ;;		wreg, status,2, status,0, pclath, cstack
 18036 ;; Tracked objects:
 18037 ;;		On entry : 0/0
 18038 ;;		On exit  : 0/0
 18039 ;;		Unchanged: 0/0
 18040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18042 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18043 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18044 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18045 ;;Total ram usage:        2 bytes
 18046 ;; Hardware stack levels used:    1
 18047 ;; Hardware stack levels required when called:    7
 18048 ;; This function calls:
 18049 ;;		_PWM6_LoadDutyValue
 18050 ;;		_TMR0_StartTimer
 18051 ;; This function is called by:
 18052 ;;		_main
 18053 ;; This function uses a non-reentrant model
 18054 ;;
 18055                           
 18056                           
 18057                           ;psect for function _check_thresholds
 18058  0CE9                     _check_thresholds:	
 18059                           
 18060                           ;incstack = 0
 18061                           ; Regs used in _check_thresholds: [wreg+status,2+status,0+pclath+cstack]
 18062                           ;check_thresholds@threshold stored from wreg
 18063  0CE9  0020               	movlb	0	; select bank0
 18064  0CEA  00AE               	movwf	check_thresholds@threshold
 18065  0CEB                     l8157:	
 18066                           
 18067                           ;main.c: 293:     if(threshold){
 18068  0CEB  082E               	movf	check_thresholds@threshold,w
 18069  0CEC  1903               	btfsc	3,2
 18070  0CED  2CEF               	goto	u5111
 18071  0CEE  2CF0               	goto	u5110
 18072  0CEF                     u5111:	
 18073  0CEF  2D16               	goto	l8173
 18074  0CF0                     u5110:	
 18075  0CF0                     l8159:	
 18076                           
 18077                           ;main.c: 294:             if(alarm == 2){
 18078  0CF0  3002               	movlw	2
 18079  0CF1  0657               	xorwf	_alarm,w	;volatile
 18080  0CF2  1D03               	btfss	3,2
 18081  0CF3  2CF5               	goto	u5121
 18082  0CF4  2CF6               	goto	u5120
 18083  0CF5                     u5121:	
 18084  0CF5  2D06               	goto	l8165
 18085  0CF6                     u5120:	
 18086  0CF6                     l8161:	
 18087                           
 18088                           ;main.c: 295:                 duty_cycle +=1 ;
 18089  0CF6  3001               	movlw	1
 18090  0CF7  0021               	movlb	1	; select bank1
 18091  0CF8  07C7               	addwf	_duty_cycle^(0+128),f
 18092  0CF9  3000               	movlw	0
 18093  0CFA  3DC8               	addwfc	(_duty_cycle+1)^(0+128),f
 18094  0CFB                     l8163:	
 18095                           
 18096                           ;main.c: 296:                 PWM6_LoadDutyValue(duty_cycle);
 18097  0CFB  0848               	movf	(_duty_cycle+1)^(0+128),w
 18098  0CFC  0020               	movlb	0	; select bank0
 18099  0CFD  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 18100  0CFE  0021               	movlb	1	; select bank1
 18101  0CFF  0847               	movf	_duty_cycle^(0+128),w
 18102  0D00  0020               	movlb	0	; select bank0
 18103  0D01  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 18104  0D02  3189  2122  318C   	fcall	_PWM6_LoadDutyValue
 18105                           
 18106                           ;main.c: 297:             }
 18107  0D05  2D24               	goto	l221
 18108  0D06                     l8165:	
 18109  0D06  0857               	movf	_alarm,w	;volatile
 18110  0D07  1D03               	btfss	3,2
 18111  0D08  2D0A               	goto	u5131
 18112  0D09  2D0B               	goto	u5130
 18113  0D0A                     u5131:	
 18114  0D0A  2D24               	goto	l221
 18115  0D0B                     u5130:	
 18116  0D0B                     l8167:	
 18117                           
 18118                           ;main.c: 299:                 PIE0bits.TMR0IE = 1;
 18119  0D0B  002E               	movlb	14	; select bank14
 18120  0D0C  1696               	bsf	22,5	;volatile
 18121  0D0D                     l8169:	
 18122                           
 18123                           ;main.c: 300:                 TMR0_StartTimer();
 18124  0D0D  3196  2618  318C   	fcall	_TMR0_StartTimer
 18125  0D10                     l8171:	
 18126                           
 18127                           ;main.c: 301:                 alarm = 2 ;
 18128  0D10  3002               	movlw	2
 18129  0D11  0020               	movlb	0	; select bank0
 18130  0D12  00AD               	movwf	??_check_thresholds
 18131  0D13  082D               	movf	??_check_thresholds,w
 18132  0D14  00D7               	movwf	_alarm	;volatile
 18133  0D15  2D24               	goto	l221
 18134  0D16                     l8173:	
 18135                           
 18136                           ;main.c: 305:         if(alarm == 2){
 18137  0D16  3002               	movlw	2
 18138  0D17  0657               	xorwf	_alarm,w	;volatile
 18139  0D18  1D03               	btfss	3,2
 18140  0D19  2D1B               	goto	u5141
 18141  0D1A  2D1C               	goto	u5140
 18142  0D1B                     u5141:	
 18143  0D1B  2D24               	goto	l221
 18144  0D1C                     u5140:	
 18145  0D1C                     l8175:	
 18146                           
 18147                           ;main.c: 306:             PWM6_LoadDutyValue(0);
 18148  0D1C  3000               	movlw	0
 18149  0D1D  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 18150  0D1E  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 18151  0D1F  3189  2122  318C   	fcall	_PWM6_LoadDutyValue
 18152  0D22                     l8177:	
 18153                           
 18154                           ;main.c: 307:             alarm = 0 ;
 18155  0D22  0020               	movlb	0	; select bank0
 18156  0D23  01D7               	clrf	_alarm	;volatile
 18157  0D24                     l221:	
 18158  0D24  0008               	return
 18159  0D25                     __end_of_check_thresholds:	
 18160                           
 18161                           	psect	text43
 18162  1618                     __ptext43:	
 18163 ;; *************** function _TMR0_StartTimer *****************
 18164 ;; Defined at:
 18165 ;;		line 87 in file "mcc_generated_files/tmr0.c"
 18166 ;; Parameters:    Size  Location     Type
 18167 ;;		None
 18168 ;; Auto vars:     Size  Location     Type
 18169 ;;		None
 18170 ;; Return value:  Size  Location     Type
 18171 ;;                  1    wreg      void 
 18172 ;; Registers used:
 18173 ;;		None
 18174 ;; Tracked objects:
 18175 ;;		On entry : 0/0
 18176 ;;		On exit  : 0/0
 18177 ;;		Unchanged: 0/0
 18178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18183 ;;Total ram usage:        0 bytes
 18184 ;; Hardware stack levels used:    1
 18185 ;; Hardware stack levels required when called:    6
 18186 ;; This function calls:
 18187 ;;		Nothing
 18188 ;; This function is called by:
 18189 ;;		_check_thresholds
 18190 ;; This function uses a non-reentrant model
 18191 ;;
 18192                           
 18193                           
 18194                           ;psect for function _TMR0_StartTimer
 18195  1618                     _TMR0_StartTimer:	
 18196  1618                     l7727:	
 18197                           ;incstack = 0
 18198                           ; Regs used in _TMR0_StartTimer: []
 18199                           
 18200                           
 18201                           ;mcc_generated_files/tmr0.c: 90:     T0CON0bits.T0EN = 1;
 18202  1618  0020               	movlb	0	; select bank0
 18203  1619  179E               	bsf	30,7	;volatile
 18204  161A                     l1423:	
 18205  161A  0008               	return
 18206  161B                     __end_of_TMR0_StartTimer:	
 18207                           
 18208                           	psect	text44
 18209  0922                     __ptext44:	
 18210 ;; *************** function _PWM6_LoadDutyValue *****************
 18211 ;; Defined at:
 18212 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 18213 ;; Parameters:    Size  Location     Type
 18214 ;;  dutyValue       2    9[BANK0 ] unsigned short 
 18215 ;; Auto vars:     Size  Location     Type
 18216 ;;		None
 18217 ;; Return value:  Size  Location     Type
 18218 ;;                  1    wreg      void 
 18219 ;; Registers used:
 18220 ;;		wreg, status,2, status,0
 18221 ;; Tracked objects:
 18222 ;;		On entry : 0/0
 18223 ;;		On exit  : 0/0
 18224 ;;		Unchanged: 0/0
 18225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18226 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18228 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18229 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18230 ;;Total ram usage:        4 bytes
 18231 ;; Hardware stack levels used:    1
 18232 ;; Hardware stack levels required when called:    6
 18233 ;; This function calls:
 18234 ;;		Nothing
 18235 ;; This function is called by:
 18236 ;;		_main
 18237 ;;		_check_thresholds
 18238 ;;		_increment_subfield
 18239 ;;		_all_LED
 18240 ;;		_mod1_LED
 18241 ;;		_mod2_LED
 18242 ;;		_mod3_LED
 18243 ;;		_mod4_LED
 18244 ;;		_mode_select_LED
 18245 ;;		_representLed
 18246 ;; This function uses a non-reentrant model
 18247 ;;
 18248                           
 18249                           
 18250                           ;psect for function _PWM6_LoadDutyValue
 18251  0922                     _PWM6_LoadDutyValue:	
 18252  0922                     l7231:	
 18253                           ;incstack = 0
 18254                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 18255                           
 18256                           
 18257                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 18258  0922  0020               	movlb	0	; select bank0
 18259  0923  082A               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 18260  0924  00AC               	movwf	??_PWM6_LoadDutyValue+1
 18261  0925  0829               	movf	PWM6_LoadDutyValue@dutyValue,w
 18262  0926  00AB               	movwf	??_PWM6_LoadDutyValue
 18263  0927  36AC               	lsrf	??_PWM6_LoadDutyValue+1,f
 18264  0928  0CAB               	rrf	??_PWM6_LoadDutyValue,f
 18265  0929  36AC               	lsrf	??_PWM6_LoadDutyValue+1,f
 18266  092A  0CAB               	rrf	??_PWM6_LoadDutyValue,f
 18267  092B  082B               	movf	??_PWM6_LoadDutyValue,w
 18268  092C  0027               	movlb	7	; select bank7
 18269  092D  008D               	movwf	13	;volatile
 18270                           
 18271                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 18272  092E  0020               	movlb	0	; select bank0
 18273  092F  0829               	movf	PWM6_LoadDutyValue@dutyValue,w
 18274  0930  3903               	andlw	3
 18275  0931  00AB               	movwf	??_PWM6_LoadDutyValue
 18276  0932  3005               	movlw	5
 18277  0933                     u4245:	
 18278  0933  35AB               	lslf	??_PWM6_LoadDutyValue,f
 18279  0934  3EFF               	addlw	-1
 18280  0935  1D03               	skipz
 18281  0936  2933               	goto	u4245
 18282  0937  352B               	lslf	??_PWM6_LoadDutyValue,w
 18283  0938  0027               	movlb	7	; select bank7
 18284  0939  008C               	movwf	12	;volatile
 18285  093A                     l1523:	
 18286  093A  0008               	return
 18287  093B                     __end_of_PWM6_LoadDutyValue:	
 18288                           
 18289                           	psect	text45
 18290  0A14                     __ptext45:	
 18291 ;; *************** function _SYSTEM_Initialize *****************
 18292 ;; Defined at:
 18293 ;;		line 50 in file "mcc_generated_files/mcc.c"
 18294 ;; Parameters:    Size  Location     Type
 18295 ;;		None
 18296 ;; Auto vars:     Size  Location     Type
 18297 ;;		None
 18298 ;; Return value:  Size  Location     Type
 18299 ;;                  1    wreg      void 
 18300 ;; Registers used:
 18301 ;;		wreg, status,2, status,0, pclath, cstack
 18302 ;; Tracked objects:
 18303 ;;		On entry : 0/0
 18304 ;;		On exit  : 0/0
 18305 ;;		Unchanged: 0/0
 18306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18311 ;;Total ram usage:        0 bytes
 18312 ;; Hardware stack levels used:    1
 18313 ;; Hardware stack levels required when called:    8
 18314 ;; This function calls:
 18315 ;;		_ADCC_Initialize
 18316 ;;		_EUSART_Initialize
 18317 ;;		_EXT_INT_Initialize
 18318 ;;		_OSCILLATOR_Initialize
 18319 ;;		_PIN_MANAGER_Initialize
 18320 ;;		_PMD_Initialize
 18321 ;;		_PWM6_Initialize
 18322 ;;		_TMR0_Initialize
 18323 ;;		_TMR1_Initialize
 18324 ;;		_TMR2_Initialize
 18325 ;; This function is called by:
 18326 ;;		_main
 18327 ;; This function uses a non-reentrant model
 18328 ;;
 18329                           
 18330                           
 18331                           ;psect for function _SYSTEM_Initialize
 18332  0A14                     _SYSTEM_Initialize:	
 18333  0A14                     l8015:	
 18334                           ;incstack = 0
 18335                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18336                           
 18337                           
 18338                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 18339  0A14  3196  26A0  318A   	fcall	_PMD_Initialize
 18340  0A17                     l8017:	
 18341                           
 18342                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 18343  0A17  318E  2677  318A   	fcall	_PIN_MANAGER_Initialize
 18344  0A1A                     l8019:	
 18345                           
 18346                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 18347  0A1A  3196  26F0  318A   	fcall	_OSCILLATOR_Initialize
 18348  0A1D                     l8021:	
 18349                           
 18350                           ;mcc_generated_files/mcc.c: 55:     PWM6_Initialize();
 18351  0A1D  3197  2775  318A   	fcall	_PWM6_Initialize
 18352  0A20                     l8023:	
 18353                           
 18354                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 18355  0A20  3188  207E  318A   	fcall	_ADCC_Initialize
 18356  0A23                     l8025:	
 18357                           
 18358                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
 18359  0A23  3188  20D9  318A   	fcall	_TMR2_Initialize
 18360  0A26                     l8027:	
 18361                           
 18362                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
 18363  0A26  3189  21F5  318A   	fcall	_TMR1_Initialize
 18364  0A29                     l8029:	
 18365                           
 18366                           ;mcc_generated_files/mcc.c: 59:     EXT_INT_Initialize();
 18367  0A29  3197  2782  318A   	fcall	_EXT_INT_Initialize
 18368  0A2C                     l8031:	
 18369                           
 18370                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
 18371  0A2C  3188  2053  318A   	fcall	_TMR0_Initialize
 18372  0A2F                     l8033:	
 18373                           
 18374                           ;mcc_generated_files/mcc.c: 61:     EUSART_Initialize();
 18375  0A2F  318D  25A1  318A   	fcall	_EUSART_Initialize
 18376  0A32                     l994:	
 18377  0A32  0008               	return
 18378  0A33                     __end_of_SYSTEM_Initialize:	
 18379                           
 18380                           	psect	text46
 18381  08D9                     __ptext46:	
 18382 ;; *************** function _TMR2_Initialize *****************
 18383 ;; Defined at:
 18384 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 18385 ;; Parameters:    Size  Location     Type
 18386 ;;		None
 18387 ;; Auto vars:     Size  Location     Type
 18388 ;;		None
 18389 ;; Return value:  Size  Location     Type
 18390 ;;                  1    wreg      void 
 18391 ;; Registers used:
 18392 ;;		wreg, status,2, status,0, pclath, cstack
 18393 ;; Tracked objects:
 18394 ;;		On entry : 0/0
 18395 ;;		On exit  : 0/0
 18396 ;;		Unchanged: 0/0
 18397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18402 ;;Total ram usage:        0 bytes
 18403 ;; Hardware stack levels used:    1
 18404 ;; Hardware stack levels required when called:    7
 18405 ;; This function calls:
 18406 ;;		_TMR2_SetInterruptHandler
 18407 ;; This function is called by:
 18408 ;;		_SYSTEM_Initialize
 18409 ;; This function uses a non-reentrant model
 18410 ;;
 18411                           
 18412                           
 18413                           ;psect for function _TMR2_Initialize
 18414  08D9                     _TMR2_Initialize:	
 18415  08D9                     l7971:	
 18416                           ;incstack = 0
 18417                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18418                           
 18419                           
 18420                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
 18421  08D9  3001               	movlw	1
 18422  08DA  0025               	movlb	5	; select bank5
 18423  08DB  0090               	movwf	16	;volatile
 18424                           
 18425                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x20;
 18426  08DC  3020               	movlw	32
 18427  08DD  008F               	movwf	15	;volatile
 18428  08DE                     l7973:	
 18429                           
 18430                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
 18431  08DE  0191               	clrf	17	;volatile
 18432  08DF                     l7975:	
 18433                           
 18434                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x9B;
 18435  08DF  309B               	movlw	155
 18436  08E0  008D               	movwf	13	;volatile
 18437                           
 18438                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
 18439  08E1  018C               	clrf	12	;volatile
 18440  08E2                     l7977:	
 18441                           
 18442                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
 18443  08E2  002E               	movlb	14	; select bank14
 18444  08E3  1090               	bcf	16,1	;volatile
 18445  08E4                     l7979:	
 18446                           
 18447                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
 18448  08E4  149A               	bsf	26,1	;volatile
 18449  08E5                     l7981:	
 18450                           
 18451                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 18452  08E5  30FA               	movlw	low _TMR2_DefaultInterruptHandler
 18453  08E6  0020               	movlb	0	; select bank0
 18454  08E7  00A3               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 18455  08E8  3015               	movlw	high _TMR2_DefaultInterruptHandler
 18456  08E9  00A4               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 18457  08EA  3197  270B  3188   	fcall	_TMR2_SetInterruptHandler
 18458  08ED                     l7983:	
 18459                           
 18460                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xB1;
 18461  08ED  30B1               	movlw	177
 18462  08EE  0025               	movlb	5	; select bank5
 18463  08EF  008E               	movwf	14	;volatile
 18464  08F0                     l1817:	
 18465  08F0  0008               	return
 18466  08F1                     __end_of_TMR2_Initialize:	
 18467                           
 18468                           	psect	text47
 18469  170B                     __ptext47:	
 18470 ;; *************** function _TMR2_SetInterruptHandler *****************
 18471 ;; Defined at:
 18472 ;;		line 178 in file "mcc_generated_files/tmr2.c"
 18473 ;; Parameters:    Size  Location     Type
 18474 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 18475 ;;		 -> TMR2_DefaultInterruptHandler(1), handler_clock_ms(1), 
 18476 ;; Auto vars:     Size  Location     Type
 18477 ;;		None
 18478 ;; Return value:  Size  Location     Type
 18479 ;;                  1    wreg      void 
 18480 ;; Registers used:
 18481 ;;		wreg
 18482 ;; Tracked objects:
 18483 ;;		On entry : 0/0
 18484 ;;		On exit  : 0/0
 18485 ;;		Unchanged: 0/0
 18486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18487 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18490 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18491 ;;Total ram usage:        2 bytes
 18492 ;; Hardware stack levels used:    1
 18493 ;; Hardware stack levels required when called:    6
 18494 ;; This function calls:
 18495 ;;		Nothing
 18496 ;; This function is called by:
 18497 ;;		_main
 18498 ;;		_TMR2_Initialize
 18499 ;; This function uses a non-reentrant model
 18500 ;;
 18501                           
 18502                           
 18503                           ;psect for function _TMR2_SetInterruptHandler
 18504  170B                     _TMR2_SetInterruptHandler:	
 18505  170B                     l7535:	
 18506                           ;incstack = 0
 18507                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 18508                           
 18509                           
 18510                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
 18511  170B  0020               	movlb	0	; select bank0
 18512  170C  0824               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 18513  170D  0021               	movlb	1	; select bank1
 18514  170E  00E1               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
 18515  170F  0020               	movlb	0	; select bank0
 18516  1710  0823               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 18517  1711  0021               	movlb	1	; select bank1
 18518  1712  00E0               	movwf	_TMR2_InterruptHandler^(0+128)
 18519  1713                     l1860:	
 18520  1713  0008               	return
 18521  1714                     __end_of_TMR2_SetInterruptHandler:	
 18522                           
 18523                           	psect	text48
 18524  09F5                     __ptext48:	
 18525 ;; *************** function _TMR1_Initialize *****************
 18526 ;; Defined at:
 18527 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 18528 ;; Parameters:    Size  Location     Type
 18529 ;;		None
 18530 ;; Auto vars:     Size  Location     Type
 18531 ;;		None
 18532 ;; Return value:  Size  Location     Type
 18533 ;;                  1    wreg      void 
 18534 ;; Registers used:
 18535 ;;		wreg, status,2, status,0, pclath, cstack
 18536 ;; Tracked objects:
 18537 ;;		On entry : 0/0
 18538 ;;		On exit  : 0/0
 18539 ;;		Unchanged: 0/0
 18540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18545 ;;Total ram usage:        0 bytes
 18546 ;; Hardware stack levels used:    1
 18547 ;; Hardware stack levels required when called:    7
 18548 ;; This function calls:
 18549 ;;		_TMR1_SetInterruptHandler
 18550 ;; This function is called by:
 18551 ;;		_SYSTEM_Initialize
 18552 ;; This function uses a non-reentrant model
 18553 ;;
 18554                           
 18555                           
 18556                           ;psect for function _TMR1_Initialize
 18557  09F5                     _TMR1_Initialize:	
 18558  09F5                     l7985:	
 18559                           ;incstack = 0
 18560                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18561                           
 18562                           
 18563                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 18564  09F5  0024               	movlb	4	; select bank4
 18565  09F6  018F               	clrf	15	;volatile
 18566                           
 18567                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 18568  09F7  0190               	clrf	16	;volatile
 18569  09F8                     l7987:	
 18570                           
 18571                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
 18572  09F8  3004               	movlw	4
 18573  09F9  0091               	movwf	17	;volatile
 18574  09FA                     l7989:	
 18575                           
 18576                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xE1;
 18577  09FA  30E1               	movlw	225
 18578  09FB  008D               	movwf	13	;volatile
 18579  09FC                     l7991:	
 18580                           
 18581                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xBA;
 18582  09FC  30BA               	movlw	186
 18583  09FD  008C               	movwf	12	;volatile
 18584  09FE                     l7993:	
 18585                           
 18586                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 18587  09FE  080D               	movf	13,w	;volatile
 18588  09FF  0021               	movlb	1	; select bank1
 18589  0A00  00E5               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
 18590  0A01  0024               	movlb	4	; select bank4
 18591  0A02  080C               	movf	12,w	;volatile
 18592  0A03  0021               	movlb	1	; select bank1
 18593  0A04  00E4               	movwf	_timer1ReloadVal^(0+128)	;volatile
 18594  0A05                     l7995:	
 18595                           
 18596                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
 18597  0A05  002E               	movlb	14	; select bank14
 18598  0A06  1010               	bcf	16,0	;volatile
 18599  0A07                     l7997:	
 18600                           
 18601                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 18602  0A07  141A               	bsf	26,0	;volatile
 18603  0A08                     l7999:	
 18604                           
 18605                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 18606  0A08  30F9               	movlw	low _TMR1_DefaultInterruptHandler
 18607  0A09  0020               	movlb	0	; select bank0
 18608  0A0A  00A3               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 18609  0A0B  3015               	movlw	high _TMR1_DefaultInterruptHandler
 18610  0A0C  00A4               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 18611  0A0D  3197  2702  3189   	fcall	_TMR1_SetInterruptHandler
 18612  0A10                     l8001:	
 18613                           
 18614                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x15;
 18615  0A10  3015               	movlw	21
 18616  0A11  0024               	movlb	4	; select bank4
 18617  0A12  008E               	movwf	14	;volatile
 18618  0A13                     l1476:	
 18619  0A13  0008               	return
 18620  0A14                     __end_of_TMR1_Initialize:	
 18621                           
 18622                           	psect	text49
 18623  1702                     __ptext49:	
 18624 ;; *************** function _TMR1_SetInterruptHandler *****************
 18625 ;; Defined at:
 18626 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 18627 ;; Parameters:    Size  Location     Type
 18628 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 18629 ;;		 -> TMR1_DefaultInterruptHandler(1), handler_clock_hms(1), 
 18630 ;; Auto vars:     Size  Location     Type
 18631 ;;		None
 18632 ;; Return value:  Size  Location     Type
 18633 ;;                  1    wreg      void 
 18634 ;; Registers used:
 18635 ;;		wreg
 18636 ;; Tracked objects:
 18637 ;;		On entry : 0/0
 18638 ;;		On exit  : 0/0
 18639 ;;		Unchanged: 0/0
 18640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18641 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18644 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18645 ;;Total ram usage:        2 bytes
 18646 ;; Hardware stack levels used:    1
 18647 ;; Hardware stack levels required when called:    6
 18648 ;; This function calls:
 18649 ;;		Nothing
 18650 ;; This function is called by:
 18651 ;;		_main
 18652 ;;		_TMR1_Initialize
 18653 ;; This function uses a non-reentrant model
 18654 ;;
 18655                           
 18656                           
 18657                           ;psect for function _TMR1_SetInterruptHandler
 18658  1702                     _TMR1_SetInterruptHandler:	
 18659  1702                     l7531:	
 18660                           ;incstack = 0
 18661                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 18662                           
 18663                           
 18664                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
 18665  1702  0020               	movlb	0	; select bank0
 18666  1703  0824               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 18667  1704  0021               	movlb	1	; select bank1
 18668  1705  00E3               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 18669  1706  0020               	movlb	0	; select bank0
 18670  1707  0823               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 18671  1708  0021               	movlb	1	; select bank1
 18672  1709  00E2               	movwf	_TMR1_InterruptHandler^(0+128)
 18673  170A                     l1506:	
 18674  170A  0008               	return
 18675  170B                     __end_of_TMR1_SetInterruptHandler:	
 18676                           
 18677                           	psect	text50
 18678  0853                     __ptext50:	
 18679 ;; *************** function _TMR0_Initialize *****************
 18680 ;; Defined at:
 18681 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 18682 ;; Parameters:    Size  Location     Type
 18683 ;;		None
 18684 ;; Auto vars:     Size  Location     Type
 18685 ;;		None
 18686 ;; Return value:  Size  Location     Type
 18687 ;;                  1    wreg      void 
 18688 ;; Registers used:
 18689 ;;		wreg, status,2, status,0, pclath, cstack
 18690 ;; Tracked objects:
 18691 ;;		On entry : 0/0
 18692 ;;		On exit  : 0/0
 18693 ;;		Unchanged: 0/0
 18694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18699 ;;Total ram usage:        0 bytes
 18700 ;; Hardware stack levels used:    1
 18701 ;; Hardware stack levels required when called:    7
 18702 ;; This function calls:
 18703 ;;		_TMR0_SetInterruptHandler
 18704 ;; This function is called by:
 18705 ;;		_SYSTEM_Initialize
 18706 ;; This function uses a non-reentrant model
 18707 ;;
 18708                           
 18709                           
 18710                           ;psect for function _TMR0_Initialize
 18711  0853                     _TMR0_Initialize:	
 18712  0853                     l8003:	
 18713                           ;incstack = 0
 18714                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18715                           
 18716                           
 18717                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x96;
 18718  0853  3096               	movlw	150
 18719  0854  0020               	movlb	0	; select bank0
 18720  0855  009F               	movwf	31	;volatile
 18721                           
 18722                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0x90;
 18723  0856  3090               	movlw	144
 18724  0857  009D               	movwf	29	;volatile
 18725  0858                     l8005:	
 18726                           
 18727                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 18728  0858  019C               	clrf	28	;volatile
 18729  0859                     l8007:	
 18730                           
 18731                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 18732  0859  002E               	movlb	14	; select bank14
 18733  085A  128C               	bcf	12,5	;volatile
 18734  085B                     l8009:	
 18735                           
 18736                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 18737  085B  1696               	bsf	22,5	;volatile
 18738  085C                     l8011:	
 18739                           
 18740                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 18741  085C  30F8               	movlw	low _TMR0_DefaultInterruptHandler
 18742  085D  0020               	movlb	0	; select bank0
 18743  085E  00A3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 18744  085F  3015               	movlw	high _TMR0_DefaultInterruptHandler
 18745  0860  00A4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 18746  0861  3196  26F9  3188   	fcall	_TMR0_SetInterruptHandler
 18747  0864                     l8013:	
 18748                           
 18749                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x09;
 18750  0864  3009               	movlw	9
 18751  0865  0020               	movlb	0	; select bank0
 18752  0866  009E               	movwf	30	;volatile
 18753  0867                     l1420:	
 18754  0867  0008               	return
 18755  0868                     __end_of_TMR0_Initialize:	
 18756                           
 18757                           	psect	text51
 18758  16F9                     __ptext51:	
 18759 ;; *************** function _TMR0_SetInterruptHandler *****************
 18760 ;; Defined at:
 18761 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 18762 ;; Parameters:    Size  Location     Type
 18763 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 18764 ;;		 -> TMR0_DefaultInterruptHandler(1), ISR_3s(1), 
 18765 ;; Auto vars:     Size  Location     Type
 18766 ;;		None
 18767 ;; Return value:  Size  Location     Type
 18768 ;;                  1    wreg      void 
 18769 ;; Registers used:
 18770 ;;		wreg
 18771 ;; Tracked objects:
 18772 ;;		On entry : 0/0
 18773 ;;		On exit  : 0/0
 18774 ;;		Unchanged: 0/0
 18775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18776 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18779 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18780 ;;Total ram usage:        2 bytes
 18781 ;; Hardware stack levels used:    1
 18782 ;; Hardware stack levels required when called:    6
 18783 ;; This function calls:
 18784 ;;		Nothing
 18785 ;; This function is called by:
 18786 ;;		_main
 18787 ;;		_TMR0_Initialize
 18788 ;; This function uses a non-reentrant model
 18789 ;;
 18790                           
 18791                           
 18792                           ;psect for function _TMR0_SetInterruptHandler
 18793  16F9                     _TMR0_SetInterruptHandler:	
 18794  16F9                     l7529:	
 18795                           ;incstack = 0
 18796                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 18797                           
 18798                           
 18799                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 18800  16F9  0020               	movlb	0	; select bank0
 18801  16FA  0824               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 18802  16FB  0021               	movlb	1	; select bank1
 18803  16FC  00E7               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 18804  16FD  0020               	movlb	0	; select bank0
 18805  16FE  0823               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 18806  16FF  0021               	movlb	1	; select bank1
 18807  1700  00E6               	movwf	_TMR0_InterruptHandler^(0+128)
 18808  1701                     l1442:	
 18809  1701  0008               	return
 18810  1702                     __end_of_TMR0_SetInterruptHandler:	
 18811                           
 18812                           	psect	text52
 18813  1775                     __ptext52:	
 18814 ;; *************** function _PWM6_Initialize *****************
 18815 ;; Defined at:
 18816 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 18817 ;; Parameters:    Size  Location     Type
 18818 ;;		None
 18819 ;; Auto vars:     Size  Location     Type
 18820 ;;		None
 18821 ;; Return value:  Size  Location     Type
 18822 ;;                  1    wreg      void 
 18823 ;; Registers used:
 18824 ;;		wreg, status,2, status,0
 18825 ;; Tracked objects:
 18826 ;;		On entry : 0/0
 18827 ;;		On exit  : 0/0
 18828 ;;		Unchanged: 0/0
 18829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18834 ;;Total ram usage:        0 bytes
 18835 ;; Hardware stack levels used:    1
 18836 ;; Hardware stack levels required when called:    6
 18837 ;; This function calls:
 18838 ;;		Nothing
 18839 ;; This function is called by:
 18840 ;;		_SYSTEM_Initialize
 18841 ;; This function uses a non-reentrant model
 18842 ;;
 18843                           
 18844                           
 18845                           ;psect for function _PWM6_Initialize
 18846  1775                     _PWM6_Initialize:	
 18847  1775                     l7961:	
 18848                           ;incstack = 0
 18849                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 18850                           
 18851                           
 18852                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 18853  1775  3080               	movlw	128
 18854  1776  0027               	movlb	7	; select bank7
 18855  1777  008E               	movwf	14	;volatile
 18856                           
 18857                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x3E;
 18858  1778  303E               	movlw	62
 18859  1779  008D               	movwf	13	;volatile
 18860                           
 18861                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 18862  177A  3040               	movlw	64
 18863  177B  008C               	movwf	12	;volatile
 18864  177C                     l7963:	
 18865                           
 18866                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 18867  177C  0024               	movlb	4	; select bank4
 18868  177D  081F               	movf	31,w	;volatile
 18869  177E  39F3               	andlw	-13
 18870  177F  3804               	iorlw	4
 18871  1780  009F               	movwf	31	;volatile
 18872  1781                     l1520:	
 18873  1781  0008               	return
 18874  1782                     __end_of_PWM6_Initialize:	
 18875                           
 18876                           	psect	text53
 18877  16A0                     __ptext53:	
 18878 ;; *************** function _PMD_Initialize *****************
 18879 ;; Defined at:
 18880 ;;		line 78 in file "mcc_generated_files/mcc.c"
 18881 ;; Parameters:    Size  Location     Type
 18882 ;;		None
 18883 ;; Auto vars:     Size  Location     Type
 18884 ;;		None
 18885 ;; Return value:  Size  Location     Type
 18886 ;;                  1    wreg      void 
 18887 ;; Registers used:
 18888 ;;		status,2
 18889 ;; Tracked objects:
 18890 ;;		On entry : 0/0
 18891 ;;		On exit  : 0/0
 18892 ;;		Unchanged: 0/0
 18893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18898 ;;Total ram usage:        0 bytes
 18899 ;; Hardware stack levels used:    1
 18900 ;; Hardware stack levels required when called:    6
 18901 ;; This function calls:
 18902 ;;		Nothing
 18903 ;; This function is called by:
 18904 ;;		_SYSTEM_Initialize
 18905 ;; This function uses a non-reentrant model
 18906 ;;
 18907                           
 18908                           
 18909                           ;psect for function _PMD_Initialize
 18910  16A0                     _PMD_Initialize:	
 18911  16A0                     l7893:	
 18912                           ;incstack = 0
 18913                           ; Regs used in _PMD_Initialize: [status,2]
 18914                           
 18915                           
 18916                           ;mcc_generated_files/mcc.c: 81:     PMD0 = 0x00;
 18917  16A0  002F               	movlb	15	; select bank15
 18918  16A1  0196               	clrf	22	;volatile
 18919                           
 18920                           ;mcc_generated_files/mcc.c: 83:     PMD1 = 0x00;
 18921  16A2  0197               	clrf	23	;volatile
 18922                           
 18923                           ;mcc_generated_files/mcc.c: 85:     PMD2 = 0x00;
 18924  16A3  0198               	clrf	24	;volatile
 18925                           
 18926                           ;mcc_generated_files/mcc.c: 87:     PMD3 = 0x00;
 18927  16A4  0199               	clrf	25	;volatile
 18928                           
 18929                           ;mcc_generated_files/mcc.c: 89:     PMD4 = 0x00;
 18930  16A5  019A               	clrf	26	;volatile
 18931                           
 18932                           ;mcc_generated_files/mcc.c: 91:     PMD5 = 0x00;
 18933  16A6  019B               	clrf	27	;volatile
 18934  16A7                     l1000:	
 18935  16A7  0008               	return
 18936  16A8                     __end_of_PMD_Initialize:	
 18937                           
 18938                           	psect	text54
 18939  0E77                     __ptext54:	
 18940 ;; *************** function _PIN_MANAGER_Initialize *****************
 18941 ;; Defined at:
 18942 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 18943 ;; Parameters:    Size  Location     Type
 18944 ;;		None
 18945 ;; Auto vars:     Size  Location     Type
 18946 ;;		None
 18947 ;; Return value:  Size  Location     Type
 18948 ;;                  1    wreg      void 
 18949 ;; Registers used:
 18950 ;;		wreg, status,2
 18951 ;; Tracked objects:
 18952 ;;		On entry : 0/0
 18953 ;;		On exit  : 0/0
 18954 ;;		Unchanged: 0/0
 18955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18960 ;;Total ram usage:        0 bytes
 18961 ;; Hardware stack levels used:    1
 18962 ;; Hardware stack levels required when called:    6
 18963 ;; This function calls:
 18964 ;;		Nothing
 18965 ;; This function is called by:
 18966 ;;		_SYSTEM_Initialize
 18967 ;; This function uses a non-reentrant model
 18968 ;;
 18969                           
 18970                           
 18971                           ;psect for function _PIN_MANAGER_Initialize
 18972  0E77                     _PIN_MANAGER_Initialize:	
 18973  0E77                     l7895:	
 18974                           ;incstack = 0
 18975                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 18976                           
 18977                           
 18978                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 18979  0E77  0020               	movlb	0	; select bank0
 18980  0E78  019A               	clrf	26	;volatile
 18981                           
 18982                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 18983  0E79  0199               	clrf	25	;volatile
 18984                           
 18985                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 18986  0E7A  0196               	clrf	22	;volatile
 18987                           
 18988                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 18989  0E7B  0197               	clrf	23	;volatile
 18990                           
 18991                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 18992  0E7C  0198               	clrf	24	;volatile
 18993  0E7D                     l7897:	
 18994                           
 18995                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 18996  0E7D  3007               	movlw	7
 18997  0E7E  0095               	movwf	21	;volatile
 18998  0E7F                     l7899:	
 18999                           
 19000                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
 19001  0E7F  300F               	movlw	15
 19002  0E80  0091               	movwf	17	;volatile
 19003  0E81                     l7901:	
 19004                           
 19005                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 19006  0E81  30FF               	movlw	255
 19007  0E82  0092               	movwf	18	;volatile
 19008  0E83                     l7903:	
 19009                           
 19010                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
 19011  0E83  30BF               	movlw	191
 19012  0E84  0093               	movwf	19	;volatile
 19013  0E85                     l7905:	
 19014                           
 19015                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 19016  0E85  30FF               	movlw	255
 19017  0E86  0094               	movwf	20	;volatile
 19018  0E87                     l7907:	
 19019                           
 19020                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 19021  0E87  30FF               	movlw	255
 19022  0E88  003E               	movlb	30	; select bank30
 19023  0E89  00D9               	movwf	89	;volatile
 19024  0E8A                     l7909:	
 19025                           
 19026                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x47;
 19027  0E8A  3047               	movlw	71
 19028  0E8B  00CE               	movwf	78	;volatile
 19029  0E8C                     l7911:	
 19030                           
 19031                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
 19032  0E8C  30EF               	movlw	239
 19033  0E8D  00C3               	movwf	67	;volatile
 19034  0E8E                     l7913:	
 19035                           
 19036                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 19037  0E8E  3007               	movlw	7
 19038  0E8F  00E4               	movwf	100	;volatile
 19039  0E90                     l7915:	
 19040                           
 19041                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
 19042  0E90  30FF               	movlw	255
 19043  0E91  00B8               	movwf	56	;volatile
 19044                           
 19045                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 19046  0E92  01DA               	clrf	90	;volatile
 19047                           
 19048                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 19049  0E93  01E5               	clrf	101	;volatile
 19050                           
 19051                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 19052  0E94  01C4               	clrf	68	;volatile
 19053                           
 19054                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 19055  0E95  01B9               	clrf	57	;volatile
 19056                           
 19057                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 19058  0E96  01CF               	clrf	79	;volatile
 19059                           
 19060                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 19061  0E97  01E6               	clrf	102	;volatile
 19062                           
 19063                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 19064  0E98  01BA               	clrf	58	;volatile
 19065                           
 19066                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 19067  0E99  01C5               	clrf	69	;volatile
 19068                           
 19069                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 19070  0E9A  01D0               	clrf	80	;volatile
 19071                           
 19072                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 19073  0E9B  01DB               	clrf	91	;volatile
 19074  0E9C                     l7917:	
 19075                           
 19076                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 19077  0E9C  30FF               	movlw	255
 19078  0E9D  00BB               	movwf	59	;volatile
 19079  0E9E                     l7919:	
 19080                           
 19081                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 19082  0E9E  30FF               	movlw	255
 19083  0E9F  00C6               	movwf	70	;volatile
 19084  0EA0                     l7921:	
 19085                           
 19086                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 19087  0EA0  30FF               	movlw	255
 19088  0EA1  00D1               	movwf	81	;volatile
 19089  0EA2                     l7923:	
 19090                           
 19091                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 19092  0EA2  30FF               	movlw	255
 19093  0EA3  00DC               	movwf	92	;volatile
 19094  0EA4                     l7925:	
 19095                           
 19096                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 19097  0EA4  3007               	movlw	7
 19098  0EA5  00E7               	movwf	103	;volatile
 19099  0EA6                     l7927:	
 19100                           
 19101                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 19102  0EA6  30FF               	movlw	255
 19103  0EA7  00BC               	movwf	60	;volatile
 19104  0EA8                     l7929:	
 19105                           
 19106                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 19107  0EA8  30FF               	movlw	255
 19108  0EA9  00C7               	movwf	71	;volatile
 19109  0EAA                     l7931:	
 19110                           
 19111                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 19112  0EAA  30FF               	movlw	255
 19113  0EAB  00D2               	movwf	82	;volatile
 19114  0EAC                     l7933:	
 19115                           
 19116                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 19117  0EAC  30FF               	movlw	255
 19118  0EAD  00DD               	movwf	93	;volatile
 19119  0EAE                     l7935:	
 19120                           
 19121                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 19122  0EAE  3007               	movlw	7
 19123  0EAF  00E8               	movwf	104	;volatile
 19124  0EB0                     l7937:	
 19125                           
 19126                           ;mcc_generated_files/pin_manager.c: 127:     INTPPS = 0x0C;
 19127  0EB0  300C               	movlw	12
 19128  0EB1  003D               	movlb	29	; select bank29
 19129  0EB2  0090               	movwf	16	;volatile
 19130  0EB3                     l7939:	
 19131                           
 19132                           ;mcc_generated_files/pin_manager.c: 128:     RXPPS = 0x17;
 19133  0EB3  3017               	movlw	23
 19134  0EB4  00CB               	movwf	75	;volatile
 19135  0EB5                     l7941:	
 19136                           
 19137                           ;mcc_generated_files/pin_manager.c: 129:     SSP1CLKPPS = 0x13;
 19138  0EB5  3013               	movlw	19
 19139  0EB6  00C5               	movwf	69	;volatile
 19140  0EB7                     l7943:	
 19141                           
 19142                           ;mcc_generated_files/pin_manager.c: 130:     RC3PPS = 0x14;
 19143  0EB7  3014               	movlw	20
 19144  0EB8  003E               	movlb	30	; select bank30
 19145  0EB9  00A3               	movwf	35	;volatile
 19146  0EBA                     l7945:	
 19147                           
 19148                           ;mcc_generated_files/pin_manager.c: 131:     RC4PPS = 0x15;
 19149  0EBA  3015               	movlw	21
 19150  0EBB  00A4               	movwf	36	;volatile
 19151  0EBC                     l7947:	
 19152                           
 19153                           ;mcc_generated_files/pin_manager.c: 132:     RA6PPS = 0x0E;
 19154  0EBC  300E               	movlw	14
 19155  0EBD  0096               	movwf	22	;volatile
 19156  0EBE                     l7949:	
 19157                           
 19158                           ;mcc_generated_files/pin_manager.c: 133:     RC6PPS = 0x10;
 19159  0EBE  3010               	movlw	16
 19160  0EBF  00A6               	movwf	38	;volatile
 19161  0EC0                     l7951:	
 19162                           
 19163                           ;mcc_generated_files/pin_manager.c: 134:     SSP1DATPPS = 0x14;
 19164  0EC0  3014               	movlw	20
 19165  0EC1  003D               	movlb	29	; select bank29
 19166  0EC2  00C6               	movwf	70	;volatile
 19167  0EC3                     l1234:	
 19168  0EC3  0008               	return
 19169  0EC4                     __end_of_PIN_MANAGER_Initialize:	
 19170                           
 19171                           	psect	text55
 19172  16F0                     __ptext55:	
 19173 ;; *************** function _OSCILLATOR_Initialize *****************
 19174 ;; Defined at:
 19175 ;;		line 64 in file "mcc_generated_files/mcc.c"
 19176 ;; Parameters:    Size  Location     Type
 19177 ;;		None
 19178 ;; Auto vars:     Size  Location     Type
 19179 ;;		None
 19180 ;; Return value:  Size  Location     Type
 19181 ;;                  1    wreg      void 
 19182 ;; Registers used:
 19183 ;;		wreg, status,2
 19184 ;; Tracked objects:
 19185 ;;		On entry : 0/0
 19186 ;;		On exit  : 0/0
 19187 ;;		Unchanged: 0/0
 19188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19193 ;;Total ram usage:        0 bytes
 19194 ;; Hardware stack levels used:    1
 19195 ;; Hardware stack levels required when called:    6
 19196 ;; This function calls:
 19197 ;;		Nothing
 19198 ;; This function is called by:
 19199 ;;		_SYSTEM_Initialize
 19200 ;; This function uses a non-reentrant model
 19201 ;;
 19202                           
 19203                           
 19204                           ;psect for function _OSCILLATOR_Initialize
 19205  16F0                     _OSCILLATOR_Initialize:	
 19206  16F0                     l7953:	
 19207                           ;incstack = 0
 19208                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 19209                           
 19210                           
 19211                           ;mcc_generated_files/mcc.c: 67:     OSCCON1 = 0x62;
 19212  16F0  3062               	movlw	98
 19213  16F1  0031               	movlb	17	; select bank17
 19214  16F2  008D               	movwf	13	;volatile
 19215  16F3                     l7955:	
 19216                           
 19217                           ;mcc_generated_files/mcc.c: 69:     OSCCON3 = 0x00;
 19218  16F3  018F               	clrf	15	;volatile
 19219  16F4                     l7957:	
 19220                           
 19221                           ;mcc_generated_files/mcc.c: 71:     OSCEN = 0x00;
 19222  16F4  0191               	clrf	17	;volatile
 19223                           
 19224                           ;mcc_generated_files/mcc.c: 73:     OSCFRQ = 0x02;
 19225  16F5  3002               	movlw	2
 19226  16F6  0093               	movwf	19	;volatile
 19227  16F7                     l7959:	
 19228                           
 19229                           ;mcc_generated_files/mcc.c: 75:     OSCTUNE = 0x00;
 19230  16F7  0192               	clrf	18	;volatile
 19231  16F8                     l997:	
 19232  16F8  0008               	return
 19233  16F9                     __end_of_OSCILLATOR_Initialize:	
 19234                           
 19235                           	psect	text56
 19236  1782                     __ptext56:	
 19237 ;; *************** function _EXT_INT_Initialize *****************
 19238 ;; Defined at:
 19239 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 19240 ;; Parameters:    Size  Location     Type
 19241 ;;		None
 19242 ;; Auto vars:     Size  Location     Type
 19243 ;;		None
 19244 ;; Return value:  Size  Location     Type
 19245 ;;                  1    wreg      void 
 19246 ;; Registers used:
 19247 ;;		wreg, status,2, status,0, pclath, cstack
 19248 ;; Tracked objects:
 19249 ;;		On entry : 0/0
 19250 ;;		On exit  : 0/0
 19251 ;;		Unchanged: 0/0
 19252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19257 ;;Total ram usage:        0 bytes
 19258 ;; Hardware stack levels used:    1
 19259 ;; Hardware stack levels required when called:    7
 19260 ;; This function calls:
 19261 ;;		_INT_SetInterruptHandler
 19262 ;; This function is called by:
 19263 ;;		_SYSTEM_Initialize
 19264 ;; This function uses a non-reentrant model
 19265 ;;
 19266                           
 19267                           
 19268                           ;psect for function _EXT_INT_Initialize
 19269  1782                     _EXT_INT_Initialize:	
 19270  1782                     l7887:	
 19271                           ;incstack = 0
 19272                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 19273                           
 19274                           
 19275                           ;mcc_generated_files/ext_int.c: 64:     (PIR0bits.INTF = 0);
 19276  1782  002E               	movlb	14	; select bank14
 19277  1783  100C               	bcf	12,0	;volatile
 19278                           
 19279                           ;mcc_generated_files/ext_int.c: 65:     (INTCONbits.INTEDG = 1);
 19280  1784  140B               	bsf	11,0	;volatile
 19281  1785                     l7889:	
 19282                           
 19283                           ;mcc_generated_files/ext_int.c: 67:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
 19284  1785  30F7               	movlw	low _INT_DefaultInterruptHandler
 19285  1786  0020               	movlb	0	; select bank0
 19286  1787  00A3               	movwf	INT_SetInterruptHandler@InterruptHandler
 19287  1788  3015               	movlw	high _INT_DefaultInterruptHandler
 19288  1789  00A4               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 19289  178A  3196  26E7  3197   	fcall	_INT_SetInterruptHandler
 19290  178D                     l7891:	
 19291                           
 19292                           ;mcc_generated_files/ext_int.c: 68:     (PIE0bits.INTE = 1);
 19293  178D  002E               	movlb	14	; select bank14
 19294  178E  1416               	bsf	22,0	;volatile
 19295  178F                     l880:	
 19296  178F  0008               	return
 19297  1790                     __end_of_EXT_INT_Initialize:	
 19298                           
 19299                           	psect	text57
 19300  16E7                     __ptext57:	
 19301 ;; *************** function _INT_SetInterruptHandler *****************
 19302 ;; Defined at:
 19303 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 19304 ;; Parameters:    Size  Location     Type
 19305 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 19306 ;;		 -> INT_DefaultInterruptHandler(1), sw1_EXT(1), 
 19307 ;; Auto vars:     Size  Location     Type
 19308 ;;		None
 19309 ;; Return value:  Size  Location     Type
 19310 ;;                  1    wreg      void 
 19311 ;; Registers used:
 19312 ;;		wreg
 19313 ;; Tracked objects:
 19314 ;;		On entry : 0/0
 19315 ;;		On exit  : 0/0
 19316 ;;		Unchanged: 0/0
 19317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19318 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19321 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19322 ;;Total ram usage:        2 bytes
 19323 ;; Hardware stack levels used:    1
 19324 ;; Hardware stack levels required when called:    6
 19325 ;; This function calls:
 19326 ;;		Nothing
 19327 ;; This function is called by:
 19328 ;;		_main
 19329 ;;		_EXT_INT_Initialize
 19330 ;; This function uses a non-reentrant model
 19331 ;;
 19332                           
 19333                           
 19334                           ;psect for function _INT_SetInterruptHandler
 19335  16E7                     _INT_SetInterruptHandler:	
 19336  16E7                     l7533:	
 19337                           ;incstack = 0
 19338                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 19339                           
 19340                           
 19341                           ;mcc_generated_files/ext_int.c: 51:     INT_InterruptHandler = InterruptHandler;
 19342  16E7  0020               	movlb	0	; select bank0
 19343  16E8  0824               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
 19344  16E9  0021               	movlb	1	; select bank1
 19345  16EA  00E9               	movwf	(_INT_InterruptHandler+1)^(0+128)
 19346  16EB  0020               	movlb	0	; select bank0
 19347  16EC  0823               	movf	INT_SetInterruptHandler@InterruptHandler,w
 19348  16ED  0021               	movlb	1	; select bank1
 19349  16EE  00E8               	movwf	_INT_InterruptHandler^(0+128)
 19350  16EF                     l874:	
 19351  16EF  0008               	return
 19352  16F0                     __end_of_INT_SetInterruptHandler:	
 19353                           
 19354                           	psect	text58
 19355  0DA1                     __ptext58:	
 19356 ;; *************** function _EUSART_Initialize *****************
 19357 ;; Defined at:
 19358 ;;		line 88 in file "mcc_generated_files/eusart.c"
 19359 ;; Parameters:    Size  Location     Type
 19360 ;;		None
 19361 ;; Auto vars:     Size  Location     Type
 19362 ;;		None
 19363 ;; Return value:  Size  Location     Type
 19364 ;;                  1    wreg      void 
 19365 ;; Registers used:
 19366 ;;		wreg, status,2, status,0, pclath, cstack
 19367 ;; Tracked objects:
 19368 ;;		On entry : 0/0
 19369 ;;		On exit  : 0/0
 19370 ;;		Unchanged: 0/0
 19371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19374 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19375 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19376 ;;Total ram usage:        1 bytes
 19377 ;; Hardware stack levels used:    1
 19378 ;; Hardware stack levels required when called:    7
 19379 ;; This function calls:
 19380 ;;		_EUSART_SetErrorHandler
 19381 ;;		_EUSART_SetFramingErrorHandler
 19382 ;;		_EUSART_SetOverrunErrorHandler
 19383 ;;		_EUSART_SetRxInterruptHandler
 19384 ;;		_EUSART_SetTxInterruptHandler
 19385 ;; This function is called by:
 19386 ;;		_SYSTEM_Initialize
 19387 ;; This function uses a non-reentrant model
 19388 ;;
 19389                           
 19390                           
 19391                           ;psect for function _EUSART_Initialize
 19392  0DA1                     _EUSART_Initialize:	
 19393  0DA1                     l7855:	
 19394                           ;incstack = 0
 19395                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 19396                           
 19397                           
 19398                           ;mcc_generated_files/eusart.c: 91:     PIE3bits.RCIE = 0;
 19399  0DA1  002E               	movlb	14	; select bank14
 19400  0DA2  1299               	bcf	25,5	;volatile
 19401  0DA3                     l7857:	
 19402                           
 19403                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
 19404  0DA3  3025               	movlw	low _EUSART_Receive_ISR
 19405  0DA4  0020               	movlb	0	; select bank0
 19406  0DA5  00A3               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
 19407  0DA6  300D               	movlw	high _EUSART_Receive_ISR
 19408  0DA7  00A4               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
 19409  0DA8  3196  26D5  318D   	fcall	_EUSART_SetRxInterruptHandler
 19410  0DAB                     l7859:	
 19411                           
 19412                           ;mcc_generated_files/eusart.c: 93:     PIE3bits.TXIE = 0;
 19413  0DAB  002E               	movlb	14	; select bank14
 19414  0DAC  1219               	bcf	25,4	;volatile
 19415                           
 19416                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
 19417  0DAD  3093               	movlw	low _EUSART_Transmit_ISR
 19418  0DAE  0020               	movlb	0	; select bank0
 19419  0DAF  00A3               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
 19420  0DB0  300A               	movlw	high _EUSART_Transmit_ISR
 19421  0DB1  00A4               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
 19422  0DB2  3196  26DE  318D   	fcall	_EUSART_SetTxInterruptHandler
 19423  0DB5                     l7861:	
 19424                           
 19425                           ;mcc_generated_files/eusart.c: 98:     BAUD1CON = 0x0A;
 19426  0DB5  300A               	movlw	10
 19427  0DB6  0022               	movlb	2	; select bank2
 19428  0DB7  009F               	movwf	31	;volatile
 19429  0DB8                     l7863:	
 19430                           
 19431                           ;mcc_generated_files/eusart.c: 101:     RC1STA = 0x90;
 19432  0DB8  3090               	movlw	144
 19433  0DB9  009D               	movwf	29	;volatile
 19434  0DBA                     l7865:	
 19435                           
 19436                           ;mcc_generated_files/eusart.c: 104:     TX1STA = 0x24;
 19437  0DBA  3024               	movlw	36
 19438  0DBB  009E               	movwf	30	;volatile
 19439  0DBC                     l7867:	
 19440                           
 19441                           ;mcc_generated_files/eusart.c: 107:     SP1BRGL = 0x19;
 19442  0DBC  3019               	movlw	25
 19443  0DBD  009B               	movwf	27	;volatile
 19444  0DBE                     l7869:	
 19445                           
 19446                           ;mcc_generated_files/eusart.c: 110:     SP1BRGH = 0x00;
 19447  0DBE  019C               	clrf	28	;volatile
 19448  0DBF                     l7871:	
 19449                           
 19450                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
 19451  0DBF  30F6               	movlw	low _EUSART_DefaultFramingErrorHandler
 19452  0DC0  0020               	movlb	0	; select bank0
 19453  0DC1  00A3               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
 19454  0DC2  3015               	movlw	high _EUSART_DefaultFramingErrorHandler
 19455  0DC3  00A4               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
 19456  0DC4  3196  26C3  318D   	fcall	_EUSART_SetFramingErrorHandler
 19457  0DC7                     l7873:	
 19458                           
 19459                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
 19460  0DC7  301F               	movlw	low _EUSART_DefaultOverrunErrorHandler
 19461  0DC8  0020               	movlb	0	; select bank0
 19462  0DC9  00A3               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
 19463  0DCA  3016               	movlw	high _EUSART_DefaultOverrunErrorHandler
 19464  0DCB  00A4               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
 19465  0DCC  3196  26CC  318D   	fcall	_EUSART_SetOverrunErrorHandler
 19466  0DCF                     l7875:	
 19467                           
 19468                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
 19469  0DCF  301B               	movlw	low _EUSART_DefaultErrorHandler
 19470  0DD0  0020               	movlb	0	; select bank0
 19471  0DD1  00A3               	movwf	EUSART_SetErrorHandler@interruptHandler
 19472  0DD2  3016               	movlw	high _EUSART_DefaultErrorHandler
 19473  0DD3  00A4               	movwf	EUSART_SetErrorHandler@interruptHandler+1
 19474  0DD4  3196  26BA  318D   	fcall	_EUSART_SetErrorHandler
 19475                           
 19476                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
 19477  0DD7  0021               	movlb	1	; select bank1
 19478  0DD8  01D9               	clrf	_eusartRxLastError^(0+128)	;volatile
 19479                           
 19480                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
 19481  0DD9  0020               	movlb	0	; select bank0
 19482  0DDA  01D4               	clrf	_eusartTxHead	;volatile
 19483                           
 19484                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
 19485  0DDB  01D3               	clrf	_eusartTxTail	;volatile
 19486  0DDC                     l7877:	
 19487                           
 19488                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
 19489  0DDC  3008               	movlw	8
 19490  0DDD  00A5               	movwf	??_EUSART_Initialize
 19491  0DDE  0825               	movf	??_EUSART_Initialize,w
 19492  0DDF  00EB               	movwf	_eusartTxBufferRemaining	;volatile
 19493  0DE0                     l7879:	
 19494                           
 19495                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
 19496  0DE0  01D2               	clrf	_eusartRxHead	;volatile
 19497  0DE1                     l7881:	
 19498                           
 19499                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
 19500  0DE1  01D1               	clrf	_eusartRxTail	;volatile
 19501  0DE2                     l7883:	
 19502                           
 19503                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
 19504  0DE2  01D0               	clrf	_eusartRxCount	;volatile
 19505  0DE3                     l7885:	
 19506                           
 19507                           ;mcc_generated_files/eusart.c: 129:     PIE3bits.RCIE = 1;
 19508  0DE3  002E               	movlb	14	; select bank14
 19509  0DE4  1699               	bsf	25,5	;volatile
 19510  0DE5                     l779:	
 19511  0DE5  0008               	return
 19512  0DE6                     __end_of_EUSART_Initialize:	
 19513                           
 19514                           	psect	text59
 19515  16DE                     __ptext59:	
 19516 ;; *************** function _EUSART_SetTxInterruptHandler *****************
 19517 ;; Defined at:
 19518 ;;		line 285 in file "mcc_generated_files/eusart.c"
 19519 ;; Parameters:    Size  Location     Type
 19520 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
 19521 ;;		 -> EUSART_Transmit_ISR(1), 
 19522 ;; Auto vars:     Size  Location     Type
 19523 ;;		None
 19524 ;; Return value:  Size  Location     Type
 19525 ;;                  1    wreg      void 
 19526 ;; Registers used:
 19527 ;;		wreg
 19528 ;; Tracked objects:
 19529 ;;		On entry : 0/0
 19530 ;;		On exit  : 0/0
 19531 ;;		Unchanged: 0/0
 19532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19533 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19536 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19537 ;;Total ram usage:        2 bytes
 19538 ;; Hardware stack levels used:    1
 19539 ;; Hardware stack levels required when called:    6
 19540 ;; This function calls:
 19541 ;;		Nothing
 19542 ;; This function is called by:
 19543 ;;		_EUSART_Initialize
 19544 ;; This function uses a non-reentrant model
 19545 ;;
 19546                           
 19547                           
 19548                           ;psect for function _EUSART_SetTxInterruptHandler
 19549  16DE                     _EUSART_SetTxInterruptHandler:	
 19550  16DE                     l7707:	
 19551                           ;incstack = 0
 19552                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
 19553                           
 19554                           
 19555                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
 19556  16DE  0020               	movlb	0	; select bank0
 19557  16DF  0824               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
 19558  16E0  0021               	movlb	1	; select bank1
 19559  16E1  00EF               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128)
 19560  16E2  0020               	movlb	0	; select bank0
 19561  16E3  0823               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
 19562  16E4  0021               	movlb	1	; select bank1
 19563  16E5  00EE               	movwf	_EUSART_TxDefaultInterruptHandler^(0+128)
 19564  16E6                     l851:	
 19565  16E6  0008               	return
 19566  16E7                     __end_of_EUSART_SetTxInterruptHandler:	
 19567                           
 19568                           	psect	text60
 19569  16D5                     __ptext60:	
 19570 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 19571 ;; Defined at:
 19572 ;;		line 289 in file "mcc_generated_files/eusart.c"
 19573 ;; Parameters:    Size  Location     Type
 19574 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
 19575 ;;		 -> EUSART_Receive_ISR(1), 
 19576 ;; Auto vars:     Size  Location     Type
 19577 ;;		None
 19578 ;; Return value:  Size  Location     Type
 19579 ;;                  1    wreg      void 
 19580 ;; Registers used:
 19581 ;;		wreg
 19582 ;; Tracked objects:
 19583 ;;		On entry : 0/0
 19584 ;;		On exit  : 0/0
 19585 ;;		Unchanged: 0/0
 19586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19587 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19590 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19591 ;;Total ram usage:        2 bytes
 19592 ;; Hardware stack levels used:    1
 19593 ;; Hardware stack levels required when called:    6
 19594 ;; This function calls:
 19595 ;;		Nothing
 19596 ;; This function is called by:
 19597 ;;		_EUSART_Initialize
 19598 ;; This function uses a non-reentrant model
 19599 ;;
 19600                           
 19601                           
 19602                           ;psect for function _EUSART_SetRxInterruptHandler
 19603  16D5                     _EUSART_SetRxInterruptHandler:	
 19604  16D5                     l7705:	
 19605                           ;incstack = 0
 19606                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
 19607                           
 19608                           
 19609                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
 19610  16D5  0020               	movlb	0	; select bank0
 19611  16D6  0824               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
 19612  16D7  0021               	movlb	1	; select bank1
 19613  16D8  00ED               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
 19614  16D9  0020               	movlb	0	; select bank0
 19615  16DA  0823               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
 19616  16DB  0021               	movlb	1	; select bank1
 19617  16DC  00EC               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
 19618  16DD                     l854:	
 19619  16DD  0008               	return
 19620  16DE                     __end_of_EUSART_SetRxInterruptHandler:	
 19621                           
 19622                           	psect	text61
 19623  16CC                     __ptext61:	
 19624 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 19625 ;; Defined at:
 19626 ;;		line 277 in file "mcc_generated_files/eusart.c"
 19627 ;; Parameters:    Size  Location     Type
 19628 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
 19629 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 19630 ;; Auto vars:     Size  Location     Type
 19631 ;;		None
 19632 ;; Return value:  Size  Location     Type
 19633 ;;                  1    wreg      void 
 19634 ;; Registers used:
 19635 ;;		wreg
 19636 ;; Tracked objects:
 19637 ;;		On entry : 0/0
 19638 ;;		On exit  : 0/0
 19639 ;;		Unchanged: 0/0
 19640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19641 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19644 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19645 ;;Total ram usage:        2 bytes
 19646 ;; Hardware stack levels used:    1
 19647 ;; Hardware stack levels required when called:    6
 19648 ;; This function calls:
 19649 ;;		Nothing
 19650 ;; This function is called by:
 19651 ;;		_EUSART_Initialize
 19652 ;; This function uses a non-reentrant model
 19653 ;;
 19654                           
 19655                           
 19656                           ;psect for function _EUSART_SetOverrunErrorHandler
 19657  16CC                     _EUSART_SetOverrunErrorHandler:	
 19658  16CC                     l7711:	
 19659                           ;incstack = 0
 19660                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
 19661                           
 19662                           
 19663                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
 19664  16CC  0020               	movlb	0	; select bank0
 19665  16CD  0824               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
 19666  16CE  0022               	movlb	2	; select bank2
 19667  16CF  00D3               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
 19668  16D0  0020               	movlb	0	; select bank0
 19669  16D1  0823               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
 19670  16D2  0022               	movlb	2	; select bank2
 19671  16D3  00D2               	movwf	_EUSART_OverrunErrorHandler^(0+256)
 19672  16D4                     l845:	
 19673  16D4  0008               	return
 19674  16D5                     __end_of_EUSART_SetOverrunErrorHandler:	
 19675                           
 19676                           	psect	text62
 19677  16C3                     __ptext62:	
 19678 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 19679 ;; Defined at:
 19680 ;;		line 273 in file "mcc_generated_files/eusart.c"
 19681 ;; Parameters:    Size  Location     Type
 19682 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
 19683 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 19684 ;; Auto vars:     Size  Location     Type
 19685 ;;		None
 19686 ;; Return value:  Size  Location     Type
 19687 ;;                  1    wreg      void 
 19688 ;; Registers used:
 19689 ;;		wreg
 19690 ;; Tracked objects:
 19691 ;;		On entry : 0/0
 19692 ;;		On exit  : 0/0
 19693 ;;		Unchanged: 0/0
 19694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19695 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19698 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19699 ;;Total ram usage:        2 bytes
 19700 ;; Hardware stack levels used:    1
 19701 ;; Hardware stack levels required when called:    6
 19702 ;; This function calls:
 19703 ;;		Nothing
 19704 ;; This function is called by:
 19705 ;;		_EUSART_Initialize
 19706 ;; This function uses a non-reentrant model
 19707 ;;
 19708                           
 19709                           
 19710                           ;psect for function _EUSART_SetFramingErrorHandler
 19711  16C3                     _EUSART_SetFramingErrorHandler:	
 19712  16C3                     l7709:	
 19713                           ;incstack = 0
 19714                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
 19715                           
 19716                           
 19717                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
 19718  16C3  0020               	movlb	0	; select bank0
 19719  16C4  0824               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
 19720  16C5  0021               	movlb	1	; select bank1
 19721  16C6  00EB               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
 19722  16C7  0020               	movlb	0	; select bank0
 19723  16C8  0823               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
 19724  16C9  0021               	movlb	1	; select bank1
 19725  16CA  00EA               	movwf	_EUSART_FramingErrorHandler^(0+128)
 19726  16CB                     l842:	
 19727  16CB  0008               	return
 19728  16CC                     __end_of_EUSART_SetFramingErrorHandler:	
 19729                           
 19730                           	psect	text63
 19731  16BA                     __ptext63:	
 19732 ;; *************** function _EUSART_SetErrorHandler *****************
 19733 ;; Defined at:
 19734 ;;		line 281 in file "mcc_generated_files/eusart.c"
 19735 ;; Parameters:    Size  Location     Type
 19736 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
 19737 ;;		 -> EUSART_DefaultErrorHandler(1), 
 19738 ;; Auto vars:     Size  Location     Type
 19739 ;;		None
 19740 ;; Return value:  Size  Location     Type
 19741 ;;                  1    wreg      void 
 19742 ;; Registers used:
 19743 ;;		wreg
 19744 ;; Tracked objects:
 19745 ;;		On entry : 0/0
 19746 ;;		On exit  : 0/0
 19747 ;;		Unchanged: 0/0
 19748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19749 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19752 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19753 ;;Total ram usage:        2 bytes
 19754 ;; Hardware stack levels used:    1
 19755 ;; Hardware stack levels required when called:    6
 19756 ;; This function calls:
 19757 ;;		Nothing
 19758 ;; This function is called by:
 19759 ;;		_EUSART_Initialize
 19760 ;; This function uses a non-reentrant model
 19761 ;;
 19762                           
 19763                           
 19764                           ;psect for function _EUSART_SetErrorHandler
 19765  16BA                     _EUSART_SetErrorHandler:	
 19766  16BA                     l7713:	
 19767                           ;incstack = 0
 19768                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
 19769                           
 19770                           
 19771                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
 19772  16BA  0020               	movlb	0	; select bank0
 19773  16BB  0824               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
 19774  16BC  0022               	movlb	2	; select bank2
 19775  16BD  00D1               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
 19776  16BE  0020               	movlb	0	; select bank0
 19777  16BF  0823               	movf	EUSART_SetErrorHandler@interruptHandler,w
 19778  16C0  0022               	movlb	2	; select bank2
 19779  16C1  00D0               	movwf	_EUSART_ErrorHandler^(0+256)
 19780  16C2                     l848:	
 19781  16C2  0008               	return
 19782  16C3                     __end_of_EUSART_SetErrorHandler:	
 19783                           
 19784                           	psect	text64
 19785  087E                     __ptext64:	
 19786 ;; *************** function _ADCC_Initialize *****************
 19787 ;; Defined at:
 19788 ;;		line 63 in file "mcc_generated_files/adcc.c"
 19789 ;; Parameters:    Size  Location     Type
 19790 ;;		None
 19791 ;; Auto vars:     Size  Location     Type
 19792 ;;		None
 19793 ;; Return value:  Size  Location     Type
 19794 ;;                  1    wreg      void 
 19795 ;; Registers used:
 19796 ;;		wreg, status,2
 19797 ;; Tracked objects:
 19798 ;;		On entry : 0/0
 19799 ;;		On exit  : 0/0
 19800 ;;		Unchanged: 0/0
 19801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19806 ;;Total ram usage:        0 bytes
 19807 ;; Hardware stack levels used:    1
 19808 ;; Hardware stack levels required when called:    6
 19809 ;; This function calls:
 19810 ;;		Nothing
 19811 ;; This function is called by:
 19812 ;;		_SYSTEM_Initialize
 19813 ;; This function uses a non-reentrant model
 19814 ;;
 19815                           
 19816                           
 19817                           ;psect for function _ADCC_Initialize
 19818  087E                     _ADCC_Initialize:	
 19819  087E                     l7965:	
 19820                           ;incstack = 0
 19821                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 19822                           
 19823                           
 19824                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 19825  087E  0022               	movlb	2	; select bank2
 19826  087F  018E               	clrf	14	;volatile
 19827                           
 19828                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 19829  0880  018F               	clrf	15	;volatile
 19830                           
 19831                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 19832  0881  0190               	clrf	16	;volatile
 19833                           
 19834                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 19835  0882  0191               	clrf	17	;volatile
 19836                           
 19837                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 19838  0883  0192               	clrf	18	;volatile
 19839                           
 19840                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 19841  0884  0193               	clrf	19	;volatile
 19842                           
 19843                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 19844  0885  018D               	clrf	13	;volatile
 19845                           
 19846                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 19847  0886  0021               	movlb	1	; select bank1
 19848  0887  019E               	clrf	30	;volatile
 19849                           
 19850                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 19851  0888  019B               	clrf	27	;volatile
 19852                           
 19853                           ;mcc_generated_files/adcc.c: 85:     ADCON1 = 0x00;
 19854  0889  0194               	clrf	20	;volatile
 19855                           
 19856                           ;mcc_generated_files/adcc.c: 87:     ADCON2 = 0x00;
 19857  088A  0195               	clrf	21	;volatile
 19858                           
 19859                           ;mcc_generated_files/adcc.c: 89:     ADCON3 = 0x00;
 19860  088B  0196               	clrf	22	;volatile
 19861                           
 19862                           ;mcc_generated_files/adcc.c: 91:     ADSTAT = 0x00;
 19863  088C  0197               	clrf	23	;volatile
 19864                           
 19865                           ;mcc_generated_files/adcc.c: 93:     ADREF = 0x00;
 19866  088D  019A               	clrf	26	;volatile
 19867                           
 19868                           ;mcc_generated_files/adcc.c: 95:     ADACT = 0x00;
 19869  088E  0199               	clrf	25	;volatile
 19870                           
 19871                           ;mcc_generated_files/adcc.c: 97:     ADCLK = 0x00;
 19872  088F  0198               	clrf	24	;volatile
 19873  0890                     l7967:	
 19874                           
 19875                           ;mcc_generated_files/adcc.c: 99:     ADCON0 = 0x84;
 19876  0890  3084               	movlw	132
 19877  0891  0093               	movwf	19	;volatile
 19878  0892                     l7969:	
 19879                           
 19880                           ;mcc_generated_files/adcc.c: 101:     ADACQ = 0x00;
 19881  0892  019D               	clrf	29	;volatile
 19882  0893                     l1316:	
 19883  0893  0008               	return
 19884  0894                     __end_of_ADCC_Initialize:	
 19885                           
 19886                           	psect	text65
 19887  096E                     __ptext65:	
 19888 ;; *************** function _LED_bin *****************
 19889 ;; Defined at:
 19890 ;;		line 48 in file "leds.c"
 19891 ;; Parameters:    Size  Location     Type
 19892 ;;  value           2    3[BANK0 ] unsigned int 
 19893 ;; Auto vars:     Size  Location     Type
 19894 ;;		None
 19895 ;; Return value:  Size  Location     Type
 19896 ;;                  1    wreg      void 
 19897 ;; Registers used:
 19898 ;;		wreg, status,2, status,0
 19899 ;; Tracked objects:
 19900 ;;		On entry : 0/0
 19901 ;;		On exit  : 0/0
 19902 ;;		Unchanged: 0/0
 19903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19904 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19906 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19907 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19908 ;;Total ram usage:        5 bytes
 19909 ;; Hardware stack levels used:    1
 19910 ;; Hardware stack levels required when called:    6
 19911 ;; This function calls:
 19912 ;;		Nothing
 19913 ;; This function is called by:
 19914 ;;		_main
 19915 ;; This function uses a non-reentrant model
 19916 ;;
 19917                           
 19918                           
 19919                           ;psect for function _LED_bin
 19920  096E                     _LED_bin:	
 19921  096E                     l8099:	
 19922                           ;incstack = 0
 19923                           ; Regs used in _LED_bin: [wreg+status,2+status,0]
 19924                           
 19925                           
 19926                           ;leds.c: 50:     LATAbits.LATA4 = (value & 1);
 19927  096E  0020               	movlb	0	; select bank0
 19928  096F  0823               	movf	LED_bin@value,w
 19929  0970  3901               	andlw	1
 19930  0971  00A5               	movwf	??_LED_bin
 19931  0972  0EA5               	swapf	??_LED_bin,f
 19932  0973  0816               	movf	22,w	;volatile
 19933  0974  0625               	xorwf	??_LED_bin,w
 19934  0975  39EF               	andlw	-17
 19935  0976  0625               	xorwf	??_LED_bin,w
 19936  0977  0096               	movwf	22	;volatile
 19937                           
 19938                           ;leds.c: 51:     LATAbits.LATA5 = (value >>1);
 19939  0978  0824               	movf	LED_bin@value+1,w
 19940  0979  00A6               	movwf	??_LED_bin+1
 19941  097A  0823               	movf	LED_bin@value,w
 19942  097B  00A5               	movwf	??_LED_bin
 19943  097C  36A6               	lsrf	??_LED_bin+1,f
 19944  097D  0CA5               	rrf	??_LED_bin,f
 19945  097E  0825               	movf	??_LED_bin,w
 19946  097F  00A7               	movwf	??_LED_bin+2
 19947  0980  0EA7               	swapf	??_LED_bin+2,f
 19948  0981  0DA7               	rlf	??_LED_bin+2,f
 19949  0982  0816               	movf	22,w	;volatile
 19950  0983  0627               	xorwf	??_LED_bin+2,w
 19951  0984  39DF               	andlw	-33
 19952  0985  0627               	xorwf	??_LED_bin+2,w
 19953  0986  0096               	movwf	22	;volatile
 19954  0987                     l571:	
 19955  0987  0008               	return
 19956  0988                     __end_of_LED_bin:	
 19957                           
 19958                           	psect	text66
 19959  0954                     __ptext66:	
 19960 ;; *************** function _ADC_read *****************
 19961 ;; Defined at:
 19962 ;;		line 552 in file "main.c"
 19963 ;; Parameters:    Size  Location     Type
 19964 ;;		None
 19965 ;; Auto vars:     Size  Location     Type
 19966 ;;		None
 19967 ;; Return value:  Size  Location     Type
 19968 ;;                  2    5[BANK0 ] unsigned int 
 19969 ;; Registers used:
 19970 ;;		wreg, status,2, status,0, pclath, cstack
 19971 ;; Tracked objects:
 19972 ;;		On entry : 0/0
 19973 ;;		On exit  : 0/0
 19974 ;;		Unchanged: 0/0
 19975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19976 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19979 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19980 ;;Total ram usage:        2 bytes
 19981 ;; Hardware stack levels used:    1
 19982 ;; Hardware stack levels required when called:    7
 19983 ;; This function calls:
 19984 ;;		_ADCC_GetConversionResult
 19985 ;;		_ADCC_IsConversionDone
 19986 ;;		_ADCC_StartConversion
 19987 ;; This function is called by:
 19988 ;;		_main
 19989 ;; This function uses a non-reentrant model
 19990 ;;
 19991                           
 19992                           
 19993                           ;psect for function _ADC_read
 19994  0954                     _ADC_read:	
 19995  0954                     l8089:	
 19996                           ;incstack = 0
 19997                           ; Regs used in _ADC_read: [wreg+status,2+status,0+pclath+cstack]
 19998                           
 19999                           
 20000                           ;main.c: 554:     ADCC_StartConversion(channel_ANA0);
 20001  0954  3000               	movlw	0
 20002  0955  3196  2698  3189   	fcall	_ADCC_StartConversion
 20003                           
 20004                           ;main.c: 555:     while(!ADCC_IsConversionDone()){
 20005  0958  295D               	goto	l8093
 20006  0959                     l8091:	
 20007                           
 20008                           ;main.c: 556:         _delay((unsigned long)((1)*(1000000/4000.0)));
 20009  0959  3053               	movlw	83
 20010  095A                     u5537:	
 20011  095A  0B89               	decfsz	9,f
 20012  095B  295A               	goto	u5537
 20013  095C  0000               	nop
 20014  095D                     l8093:	
 20015                           
 20016                           ;main.c: 555:     while(!ADCC_IsConversionDone()){
 20017  095D  3196  2679  3189   	fcall	_ADCC_IsConversionDone
 20018  0960  3A00               	xorlw	0
 20019  0961  1903               	skipnz
 20020  0962  2964               	goto	u5041
 20021  0963  2965               	goto	u5040
 20022  0964                     u5041:	
 20023  0964  2959               	goto	l8091
 20024  0965                     u5040:	
 20025  0965                     l8095:	
 20026                           
 20027                           ;main.c: 559:     return ADCC_GetConversionResult();
 20028  0965  3196  26B1  3189   	fcall	_ADCC_GetConversionResult
 20029  0968  0020               	movlb	0	; select bank0
 20030  0969  0824               	movf	?_ADCC_GetConversionResult+1,w
 20031  096A  00A6               	movwf	?_ADC_read+1
 20032  096B  0823               	movf	?_ADCC_GetConversionResult,w
 20033  096C  00A5               	movwf	?_ADC_read
 20034  096D                     l302:	
 20035  096D  0008               	return
 20036  096E                     __end_of_ADC_read:	
 20037                           
 20038                           	psect	text67
 20039  1698                     __ptext67:	
 20040 ;; *************** function _ADCC_StartConversion *****************
 20041 ;; Defined at:
 20042 ;;		line 106 in file "mcc_generated_files/adcc.c"
 20043 ;; Parameters:    Size  Location     Type
 20044 ;;  channel         1    wreg     enum E12246
 20045 ;; Auto vars:     Size  Location     Type
 20046 ;;  channel         1    3[BANK0 ] enum E12246
 20047 ;; Return value:  Size  Location     Type
 20048 ;;                  1    wreg      void 
 20049 ;; Registers used:
 20050 ;;		wreg
 20051 ;; Tracked objects:
 20052 ;;		On entry : 0/0
 20053 ;;		On exit  : 0/0
 20054 ;;		Unchanged: 0/0
 20055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20057 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20059 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20060 ;;Total ram usage:        1 bytes
 20061 ;; Hardware stack levels used:    1
 20062 ;; Hardware stack levels required when called:    6
 20063 ;; This function calls:
 20064 ;;		Nothing
 20065 ;; This function is called by:
 20066 ;;		_ADC_read
 20067 ;; This function uses a non-reentrant model
 20068 ;;
 20069                           
 20070                           
 20071                           ;psect for function _ADCC_StartConversion
 20072  1698                     _ADCC_StartConversion:	
 20073                           
 20074                           ;incstack = 0
 20075                           ; Regs used in _ADCC_StartConversion: [wreg]
 20076                           ;ADCC_StartConversion@channel stored from wreg
 20077  1698  0020               	movlb	0	; select bank0
 20078  1699  00A3               	movwf	ADCC_StartConversion@channel
 20079  169A                     l7767:	
 20080                           
 20081                           ;mcc_generated_files/adcc.c: 106: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 107: {;mcc_generated_files/adcc.c: 109:     ADPCH = channel;
 20082  169A  0823               	movf	ADCC_StartConversion@channel,w
 20083  169B  0021               	movlb	1	; select bank1
 20084  169C  009E               	movwf	30	;volatile
 20085  169D                     l7769:	
 20086                           
 20087                           ;mcc_generated_files/adcc.c: 112:     ADCON0bits.ADON = 1;
 20088  169D  1793               	bsf	19,7	;volatile
 20089  169E                     l7771:	
 20090                           
 20091                           ;mcc_generated_files/adcc.c: 115:     ADCON0bits.ADGO = 1;
 20092  169E  1413               	bsf	19,0	;volatile
 20093  169F                     l1319:	
 20094  169F  0008               	return
 20095  16A0                     __end_of_ADCC_StartConversion:	
 20096                           
 20097                           	psect	text68
 20098  1679                     __ptext68:	
 20099 ;; *************** function _ADCC_IsConversionDone *****************
 20100 ;; Defined at:
 20101 ;;		line 118 in file "mcc_generated_files/adcc.c"
 20102 ;; Parameters:    Size  Location     Type
 20103 ;;		None
 20104 ;; Auto vars:     Size  Location     Type
 20105 ;;		None
 20106 ;; Return value:  Size  Location     Type
 20107 ;;                  1    wreg      _Bool 
 20108 ;; Registers used:
 20109 ;;		wreg, status,0
 20110 ;; Tracked objects:
 20111 ;;		On entry : 0/0
 20112 ;;		On exit  : 0/0
 20113 ;;		Unchanged: 0/0
 20114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20119 ;;Total ram usage:        0 bytes
 20120 ;; Hardware stack levels used:    1
 20121 ;; Hardware stack levels required when called:    6
 20122 ;; This function calls:
 20123 ;;		Nothing
 20124 ;; This function is called by:
 20125 ;;		_ADC_read
 20126 ;; This function uses a non-reentrant model
 20127 ;;
 20128                           
 20129                           
 20130                           ;psect for function _ADCC_IsConversionDone
 20131  1679                     _ADCC_IsConversionDone:	
 20132  1679                     l7773:	
 20133                           ;incstack = 0
 20134                           ; Regs used in _ADCC_IsConversionDone: [wreg+status,0]
 20135                           
 20136                           
 20137                           ;mcc_generated_files/adcc.c: 121:     return ((unsigned char)(!ADCON0bits.ADGO));
 20138  1679  1003               	clrc
 20139  167A  0021               	movlb	1	; select bank1
 20140  167B  1C13               	btfss	19,0	;volatile
 20141  167C  1403               	setc
 20142  167D  3000               	movlw	0
 20143  167E  3D09               	addwfc	9,w
 20144  167F                     l1322:	
 20145  167F  0008               	return
 20146  1680                     __end_of_ADCC_IsConversionDone:	
 20147                           
 20148                           	psect	text69
 20149  16B1                     __ptext69:	
 20150 ;; *************** function _ADCC_GetConversionResult *****************
 20151 ;; Defined at:
 20152 ;;		line 124 in file "mcc_generated_files/adcc.c"
 20153 ;; Parameters:    Size  Location     Type
 20154 ;;		None
 20155 ;; Auto vars:     Size  Location     Type
 20156 ;;		None
 20157 ;; Return value:  Size  Location     Type
 20158 ;;                  2    3[BANK0 ] unsigned short 
 20159 ;; Registers used:
 20160 ;;		wreg
 20161 ;; Tracked objects:
 20162 ;;		On entry : 0/0
 20163 ;;		On exit  : 0/0
 20164 ;;		Unchanged: 0/0
 20165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20166 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20169 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20170 ;;Total ram usage:        2 bytes
 20171 ;; Hardware stack levels used:    1
 20172 ;; Hardware stack levels required when called:    6
 20173 ;; This function calls:
 20174 ;;		Nothing
 20175 ;; This function is called by:
 20176 ;;		_ADC_read
 20177 ;; This function uses a non-reentrant model
 20178 ;;
 20179                           
 20180                           
 20181                           ;psect for function _ADCC_GetConversionResult
 20182  16B1                     _ADCC_GetConversionResult:	
 20183  16B1                     l7777:	
 20184                           ;incstack = 0
 20185                           ; Regs used in _ADCC_GetConversionResult: [wreg]
 20186                           
 20187                           
 20188                           ;mcc_generated_files/adcc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 20189  16B1  0021               	movlb	1	; select bank1
 20190  16B2  080D               	movf	13,w	;volatile
 20191  16B3  0020               	movlb	0	; select bank0
 20192  16B4  00A4               	movwf	?_ADCC_GetConversionResult+1
 20193  16B5  0021               	movlb	1	; select bank1
 20194  16B6  080C               	movf	12,w	;volatile
 20195  16B7  0020               	movlb	0	; select bank0
 20196  16B8  00A3               	movwf	?_ADCC_GetConversionResult
 20197  16B9                     l1325:	
 20198  16B9  0008               	return
 20199  16BA                     __end_of_ADCC_GetConversionResult:	
 20200                           
 20201                           	psect	intentry
 20202  0004                     __pintentry:	
 20203 ;; *************** function _INTERRUPT_InterruptManager *****************
 20204 ;; Defined at:
 20205 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 20206 ;; Parameters:    Size  Location     Type
 20207 ;;		None
 20208 ;; Auto vars:     Size  Location     Type
 20209 ;;		None
 20210 ;; Return value:  Size  Location     Type
 20211 ;;                  1    wreg      void 
 20212 ;; Registers used:
 20213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20214 ;; Tracked objects:
 20215 ;;		On entry : 0/0
 20216 ;;		On exit  : 0/0
 20217 ;;		Unchanged: 0/0
 20218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20223 ;;Total ram usage:        0 bytes
 20224 ;; Hardware stack levels used:    1
 20225 ;; Hardware stack levels required when called:    5
 20226 ;; This function calls:
 20227 ;;		Absolute function
 20228 ;;		_EUSART_Receive_ISR
 20229 ;;		_EUSART_Transmit_ISR
 20230 ;;		_INT_ISR
 20231 ;;		_TMR0_ISR
 20232 ;;		_TMR1_ISR
 20233 ;;		_TMR2_ISR
 20234 ;;		_i2c_ISR
 20235 ;;		_i2c_busCollisionISR
 20236 ;; This function is called by:
 20237 ;;		Interrupt level 1
 20238 ;; This function uses a non-reentrant model
 20239 ;;
 20240                           
 20241  0004                     _INTERRUPT_InterruptManager:	
 20242                           
 20243                           ;incstack = 0
 20244  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 20245                           
 20246                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20247  0005  3180               	pagesel	$
 20248  0006                     i1l6855:	
 20249                           
 20250                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.INTE == 1 && PIR0bits.INTF
      +                           == 1)
 20251  0006  002E               	movlb	14	; select bank14
 20252  0007  1C16               	btfss	22,0	;volatile
 20253  0008  280A               	goto	u391_21
 20254  0009  280B               	goto	u391_20
 20255  000A                     u391_21:	
 20256  000A  2813               	goto	i1l927
 20257  000B                     u391_20:	
 20258  000B                     i1l6857:	
 20259  000B  1C0C               	btfss	12,0	;volatile
 20260  000C  280E               	goto	u392_21
 20261  000D  280F               	goto	u392_20
 20262  000E                     u392_21:	
 20263  000E  2813               	goto	i1l927
 20264  000F                     u392_20:	
 20265  000F                     i1l6859:	
 20266                           
 20267                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         INT_ISR();
 20268  000F  3196  2660  3180   	fcall	_INT_ISR
 20269                           
 20270                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 20271  0012  2877               	goto	i1l945
 20272  0013                     i1l927:	
 20273                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.TMR0IE == 1 && PIR0bi
      +                          ts.TMR0IF == 1)
 20274                           
 20275  0013  1E96               	btfss	22,5	;volatile
 20276  0014  2816               	goto	u393_21
 20277  0015  2817               	goto	u393_20
 20278  0016                     u393_21:	
 20279  0016  281F               	goto	i1l929
 20280  0017                     u393_20:	
 20281  0017                     i1l6861:	
 20282  0017  1E8C               	btfss	12,5	;volatile
 20283  0018  281A               	goto	u394_21
 20284  0019  281B               	goto	u394_20
 20285  001A                     u394_21:	
 20286  001A  281F               	goto	i1l929
 20287  001B                     u394_20:	
 20288  001B                     i1l6863:	
 20289                           
 20290                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
 20291  001B  3197  2790  3180   	fcall	_TMR0_ISR
 20292                           
 20293                           ;mcc_generated_files/interrupt_manager.c: 62:     }
 20294  001E  2877               	goto	i1l945
 20295  001F                     i1l929:	
 20296                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
 20297                           
 20298  001F  1F0B               	btfss	11,6	;volatile
 20299  0020  2822               	goto	u395_21
 20300  0021  2823               	goto	u395_20
 20301  0022                     u395_21:	
 20302  0022  2877               	goto	i1l939
 20303  0023                     u395_20:	
 20304  0023                     i1l6865:	
 20305                           
 20306                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE3bits.TXIE == 1 && PIR3bits.TXIF == 1)
 20307  0023  1E19               	btfss	25,4	;volatile
 20308  0024  2826               	goto	u396_21
 20309  0025  2827               	goto	u396_20
 20310  0026                     u396_21:	
 20311  0026  2832               	goto	i1l932
 20312  0027                     u396_20:	
 20313  0027                     i1l6867:	
 20314  0027  1E0F               	btfss	15,4	;volatile
 20315  0028  282A               	goto	u397_21
 20316  0029  282B               	goto	u397_20
 20317  002A                     u397_21:	
 20318  002A  2832               	goto	i1l932
 20319  002B                     u397_20:	
 20320  002B                     i1l6869:	
 20321                           
 20322                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART_TxDefaultInterruptHandler();
 20323  002B  0021               	movlb	1	; select bank1
 20324  002C  086F               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128),w
 20325  002D  008A               	movwf	10
 20326  002E  086E               	movf	_EUSART_TxDefaultInterruptHandler^(0+128),w
 20327  002F  000A               	callw
 20328  0030  3180               	pagesel	$
 20329                           
 20330                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 20331  0031  2877               	goto	i1l945
 20332  0032                     i1l932:	
 20333                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.RCIE == 1 && PIR3
      +                          bits.RCIF == 1)
 20334                           
 20335  0032  1E99               	btfss	25,5	;volatile
 20336  0033  2835               	goto	u398_21
 20337  0034  2836               	goto	u398_20
 20338  0035                     u398_21:	
 20339  0035  2841               	goto	i1l934
 20340  0036                     u398_20:	
 20341  0036                     i1l6871:	
 20342  0036  1E8F               	btfss	15,5	;volatile
 20343  0037  2839               	goto	u399_21
 20344  0038  283A               	goto	u399_20
 20345  0039                     u399_21:	
 20346  0039  2841               	goto	i1l934
 20347  003A                     u399_20:	
 20348  003A                     i1l6873:	
 20349                           
 20350                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART_RxDefaultInterruptHandler();
 20351  003A  0021               	movlb	1	; select bank1
 20352  003B  086D               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
 20353  003C  008A               	movwf	10
 20354  003D  086C               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
 20355  003E  000A               	callw
 20356  003F  3180               	pagesel	$
 20357                           
 20358                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 20359  0040  2877               	goto	i1l945
 20360  0041                     i1l934:	
 20361                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.BCL1IE == 1 && PI
      +                          R3bits.BCL1IF == 1)
 20362                           
 20363  0041  1C99               	btfss	25,1	;volatile
 20364  0042  2844               	goto	u400_21
 20365  0043  2845               	goto	u400_20
 20366  0044                     u400_21:	
 20367  0044  2850               	goto	i1l936
 20368  0045                     u400_20:	
 20369  0045                     i1l6875:	
 20370  0045  1C8F               	btfss	15,1	;volatile
 20371  0046  2848               	goto	u401_21
 20372  0047  2849               	goto	u401_20
 20373  0048                     u401_21:	
 20374  0048  2850               	goto	i1l936
 20375  0049                     u401_20:	
 20376  0049                     i1l6877:	
 20377                           
 20378                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             i2c1_driver_busCollisionISR();
 20379  0049  0021               	movlb	1	; select bank1
 20380  004A  0858               	movf	(_i2c1_driver_busCollisionISR+1)^(0+128),w
 20381  004B  008A               	movwf	10
 20382  004C  0857               	movf	_i2c1_driver_busCollisionISR^(0+128),w
 20383  004D  000A               	callw
 20384  004E  3180               	pagesel	$
 20385                           
 20386                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 20387  004F  2877               	goto	i1l945
 20388  0050                     i1l936:	
 20389                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 20390                           
 20391  0050  1C19               	btfss	25,0	;volatile
 20392  0051  2853               	goto	u402_21
 20393  0052  2854               	goto	u402_20
 20394  0053                     u402_21:	
 20395  0053  285F               	goto	i1l938
 20396  0054                     u402_20:	
 20397  0054                     i1l6879:	
 20398  0054  1C0F               	btfss	15,0	;volatile
 20399  0055  2857               	goto	u403_21
 20400  0056  2858               	goto	u403_20
 20401  0057                     u403_21:	
 20402  0057  285F               	goto	i1l938
 20403  0058                     u403_20:	
 20404  0058                     i1l6881:	
 20405                           
 20406                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             i2c1_driver_i2cISR();
 20407  0058  0021               	movlb	1	; select bank1
 20408  0059  0856               	movf	(_i2c1_driver_i2cISR+1)^(0+128),w
 20409  005A  008A               	movwf	10
 20410  005B  0855               	movf	_i2c1_driver_i2cISR^(0+128),w
 20411  005C  000A               	callw
 20412  005D  3180               	pagesel	$
 20413                           
 20414                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 20415  005E  2877               	goto	i1l945
 20416  005F                     i1l938:	
 20417                           ;mcc_generated_files/interrupt_manager.c: 81:         else if(PIE4bits.TMR1IE == 1 && PI
      +                          R4bits.TMR1IF == 1)
 20418                           
 20419  005F  1C1A               	btfss	26,0	;volatile
 20420  0060  2862               	goto	u404_21
 20421  0061  2863               	goto	u404_20
 20422  0062                     u404_21:	
 20423  0062  286B               	goto	i1l940
 20424  0063                     u404_20:	
 20425  0063                     i1l6883:	
 20426  0063  1C10               	btfss	16,0	;volatile
 20427  0064  2866               	goto	u405_21
 20428  0065  2867               	goto	u405_20
 20429  0066                     u405_21:	
 20430  0066  286B               	goto	i1l940
 20431  0067                     u405_20:	
 20432  0067                     i1l6885:	
 20433                           
 20434                           ;mcc_generated_files/interrupt_manager.c: 82:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 83:             TMR1_ISR();
 20435  0067  3188  20AA  3180   	fcall	_TMR1_ISR
 20436                           
 20437                           ;mcc_generated_files/interrupt_manager.c: 84:         }
 20438  006A  2877               	goto	i1l945
 20439  006B                     i1l940:	
 20440                           ;mcc_generated_files/interrupt_manager.c: 85:         else if(PIE4bits.TMR2IE == 1 && PI
      +                          R4bits.TMR2IF == 1)
 20441                           
 20442  006B  1C9A               	btfss	26,1	;volatile
 20443  006C  286E               	goto	u406_21
 20444  006D  286F               	goto	u406_20
 20445  006E                     u406_21:	
 20446  006E  2877               	goto	i1l939
 20447  006F                     u406_20:	
 20448  006F                     i1l6887:	
 20449  006F  1C90               	btfss	16,1	;volatile
 20450  0070  2872               	goto	u407_21
 20451  0071  2873               	goto	u407_20
 20452  0072                     u407_21:	
 20453  0072  2877               	goto	i1l939
 20454  0073                     u407_20:	
 20455  0073                     i1l6889:	
 20456                           
 20457                           ;mcc_generated_files/interrupt_manager.c: 86:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 87:             TMR2_ISR();
 20458  0073  3197  279F  3180   	fcall	_TMR2_ISR
 20459                           
 20460                           ;mcc_generated_files/interrupt_manager.c: 88:         }
 20461  0076  2877               	goto	i1l945
 20462  0077                     i1l939:	
 20463  0077                     i1l945:	
 20464  0077  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 20465  0078  0009               	retfie
 20466  0079                     __end_of_INTERRUPT_InterruptManager:	
 20467                           
 20468                           	psect	text71
 20469  162B                     __ptext71:	
 20470 ;; *************** function _i2c_busCollisionISR *****************
 20471 ;; Defined at:
 20472 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 20473 ;; Parameters:    Size  Location     Type
 20474 ;;		None
 20475 ;; Auto vars:     Size  Location     Type
 20476 ;;		None
 20477 ;; Return value:  Size  Location     Type
 20478 ;;                  1    wreg      void 
 20479 ;; Registers used:
 20480 ;;		status,2, status,0, pclath, cstack
 20481 ;; Tracked objects:
 20482 ;;		On entry : 0/0
 20483 ;;		On exit  : 0/0
 20484 ;;		Unchanged: 0/0
 20485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20490 ;;Total ram usage:        0 bytes
 20491 ;; Hardware stack levels used:    1
 20492 ;; Hardware stack levels required when called:    1
 20493 ;; This function calls:
 20494 ;;		_i2c1_driver_clearBusCollision
 20495 ;; This function is called by:
 20496 ;;		_i2c_open
 20497 ;;		_INTERRUPT_InterruptManager
 20498 ;; This function uses a non-reentrant model
 20499 ;;
 20500                           
 20501                           
 20502                           ;psect for function _i2c_busCollisionISR
 20503  162B                     _i2c_busCollisionISR:	
 20504  162B                     i1l6687:	
 20505                           ;incstack = 0
 20506                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 20507                           
 20508                           
 20509                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
 20510  162B  3196  2615  3196   	fcall	_i2c1_driver_clearBusCollision
 20511  162E                     i1l1771:	
 20512  162E  0008               	return
 20513  162F                     __end_of_i2c_busCollisionISR:	
 20514                           
 20515                           	psect	text72
 20516  1615                     __ptext72:	
 20517 ;; *************** function _i2c1_driver_clearBusCollision *****************
 20518 ;; Defined at:
 20519 ;;		line 254 in file "mcc_generated_files/i2c1_driver.c"
 20520 ;; Parameters:    Size  Location     Type
 20521 ;;		None
 20522 ;; Auto vars:     Size  Location     Type
 20523 ;;		None
 20524 ;; Return value:  Size  Location     Type
 20525 ;;                  1    wreg      void 
 20526 ;; Registers used:
 20527 ;;		None
 20528 ;; Tracked objects:
 20529 ;;		On entry : 0/0
 20530 ;;		On exit  : 0/0
 20531 ;;		Unchanged: 0/0
 20532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20537 ;;Total ram usage:        0 bytes
 20538 ;; Hardware stack levels used:    1
 20539 ;; This function calls:
 20540 ;;		Nothing
 20541 ;; This function is called by:
 20542 ;;		_i2c_busCollisionISR
 20543 ;; This function uses a non-reentrant model
 20544 ;;
 20545                           
 20546                           
 20547                           ;psect for function _i2c1_driver_clearBusCollision
 20548  1615                     _i2c1_driver_clearBusCollision:	
 20549  1615                     i1l6129:	
 20550                           ;incstack = 0
 20551                           ; Regs used in _i2c1_driver_clearBusCollision: []
 20552                           
 20553                           
 20554                           ;mcc_generated_files/i2c1_driver.c: 256:     PIR3bits.BCL1IF = 0;
 20555  1615  002E               	movlb	14	; select bank14
 20556  1616  108F               	bcf	15,1	;volatile
 20557  1617                     i1l1139:	
 20558  1617  0008               	return
 20559  1618                     __end_of_i2c1_driver_clearBusCollision:	
 20560                           
 20561                           	psect	text73
 20562  0BF8                     __ptext73:	
 20563 ;; *************** function _i2c_ISR *****************
 20564 ;; Defined at:
 20565 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 20566 ;; Parameters:    Size  Location     Type
 20567 ;;		None
 20568 ;; Auto vars:     Size  Location     Type
 20569 ;;		None
 20570 ;; Return value:  Size  Location     Type
 20571 ;;                  1    wreg      void 
 20572 ;; Registers used:
 20573 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20574 ;; Tracked objects:
 20575 ;;		On entry : 0/0
 20576 ;;		On exit  : 0/0
 20577 ;;		Unchanged: 0/0
 20578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20581 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20582 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20583 ;;Total ram usage:        3 bytes
 20584 ;; Hardware stack levels used:    1
 20585 ;; Hardware stack levels required when called:    4
 20586 ;; This function calls:
 20587 ;;		_do_I2C_DO_ACK
 20588 ;;		_do_I2C_DO_ADDRESS_NACK
 20589 ;;		_do_I2C_DO_NACK_RESTART
 20590 ;;		_do_I2C_DO_NACK_STOP
 20591 ;;		_do_I2C_IDLE
 20592 ;;		_do_I2C_RCEN
 20593 ;;		_do_I2C_RESET
 20594 ;;		_do_I2C_RX
 20595 ;;		_do_I2C_SEND_ADR_READ
 20596 ;;		_do_I2C_SEND_ADR_WRITE
 20597 ;;		_do_I2C_SEND_RESTART
 20598 ;;		_do_I2C_SEND_RESTART_READ
 20599 ;;		_do_I2C_SEND_RESTART_WRITE
 20600 ;;		_do_I2C_SEND_STOP
 20601 ;;		_do_I2C_TX
 20602 ;;		_do_I2C_TX_EMPTY
 20603 ;;		_i2c1_driver_isNACK
 20604 ;;		_mssp1_clearIRQ
 20605 ;; This function is called by:
 20606 ;;		_i2c_open
 20607 ;;		_i2c_poller
 20608 ;;		_INTERRUPT_InterruptManager
 20609 ;; This function uses a non-reentrant model
 20610 ;;
 20611                           
 20612                           
 20613                           ;psect for function _i2c_ISR
 20614  0BF8                     _i2c_ISR:	
 20615  0BF8                     i1l6677:	
 20616                           ;incstack = 0
 20617                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20618                           
 20619                           
 20620                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
 20621  0BF8  3196  2612  318B   	fcall	_mssp1_clearIRQ
 20622  0BFB                     i1l6679:	
 20623                           
 20624                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
 20625  0BFB  0021               	movlb	1	; select bank1
 20626  0BFC  1DA0               	btfss	_i2c_status^(0+128),3
 20627  0BFD  2BFF               	goto	u371_21
 20628  0BFE  2C00               	goto	u371_20
 20629  0BFF                     u371_21:	
 20630  0BFF  2C0D               	goto	i1l6685
 20631  0C00                     u371_20:	
 20632  0C00                     i1l6681:	
 20633  0C00  3196  2680  318B   	fcall	_i2c1_driver_isNACK
 20634  0C03  1C03               	btfss	3,0
 20635  0C04  2C06               	goto	u372_21
 20636  0C05  2C07               	goto	u372_20
 20637  0C06                     u372_21:	
 20638  0C06  2C0D               	goto	i1l6685
 20639  0C07                     u372_20:	
 20640  0C07                     i1l6683:	
 20641                           
 20642                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
 20643  0C07  300F               	movlw	15
 20644  0C08  0020               	movlb	0	; select bank0
 20645  0C09  00A0               	movwf	??_i2c_ISR
 20646  0C0A  0820               	movf	??_i2c_ISR,w
 20647  0C0B  0021               	movlb	1	; select bank1
 20648  0C0C  00A9               	movwf	(_i2c_status^(0+128)+9)
 20649  0C0D                     i1l6685:	
 20650                           
 20651                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
 20652  0C0D  0021               	movlb	1	; select bank1
 20653  0C0E  0829               	movf	(_i2c_status^(0+128)+9),w
 20654  0C0F  0020               	movlb	0	; select bank0
 20655  0C10  00A0               	movwf	??_i2c_ISR
 20656  0C11  01A1               	clrf	??_i2c_ISR+1
 20657  0C12  35A0               	lslf	??_i2c_ISR,f
 20658  0C13  0DA1               	rlf	??_i2c_ISR+1,f
 20659  0C14  3000               	movlw	low (_fsmStateTable| (0+32768))
 20660  0C15  0720               	addwf	??_i2c_ISR,w
 20661  0C16  0084               	movwf	4
 20662  0C17  3090               	movlw	high (_fsmStateTable| (0+32768))
 20663  0C18  3D21               	addwfc	??_i2c_ISR+1,w
 20664  0C19  0085               	movwf	5
 20665  0C1A  3F01               	moviw [1]fsr0
 20666  0C1B  008A               	movwf	10
 20667  0C1C  3F00               	moviw [0]fsr0
 20668  0C1D  000A               	callw
 20669  0C1E  318B               	pagesel	$
 20670  0C1F  0020               	movlb	0	; select bank0
 20671  0C20  00A2               	movwf	??_i2c_ISR+2
 20672  0C21  0822               	movf	??_i2c_ISR+2,w
 20673  0C22  0021               	movlb	1	; select bank1
 20674  0C23  00A9               	movwf	(_i2c_status^(0+128)+9)
 20675  0C24                     i1l1768:	
 20676  0C24  0008               	return
 20677  0C25                     __end_of_i2c_ISR:	
 20678                           
 20679                           	psect	text74
 20680  1612                     __ptext74:	
 20681 ;; *************** function _mssp1_clearIRQ *****************
 20682 ;; Defined at:
 20683 ;;		line 54 in file "mcc_generated_files/i2c1_driver.c"
 20684 ;; Parameters:    Size  Location     Type
 20685 ;;		None
 20686 ;; Auto vars:     Size  Location     Type
 20687 ;;		None
 20688 ;; Return value:  Size  Location     Type
 20689 ;;                  1    wreg      void 
 20690 ;; Registers used:
 20691 ;;		None
 20692 ;; Tracked objects:
 20693 ;;		On entry : 0/0
 20694 ;;		On exit  : 0/0
 20695 ;;		Unchanged: 0/0
 20696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20701 ;;Total ram usage:        0 bytes
 20702 ;; Hardware stack levels used:    1
 20703 ;; This function calls:
 20704 ;;		Nothing
 20705 ;; This function is called by:
 20706 ;;		_i2c_ISR
 20707 ;;		_i2c_open
 20708 ;;		_i2c_close
 20709 ;; This function uses a non-reentrant model
 20710 ;;
 20711                           
 20712                           
 20713                           ;psect for function _mssp1_clearIRQ
 20714  1612                     _mssp1_clearIRQ:	
 20715  1612                     i1l6127:	
 20716                           ;incstack = 0
 20717                           ; Regs used in _mssp1_clearIRQ: []
 20718                           
 20719                           
 20720                           ;mcc_generated_files/i2c1_driver.c: 56:         SSP1CON1 = 0x28;
 20721  1612  002E               	movlb	14	; select bank14
 20722  1613  100F               	bcf	15,0	;volatile
 20723  1614                     i1l1043:	
 20724  1614  0008               	return
 20725  1615                     __end_of_mssp1_clearIRQ:	
 20726                           
 20727                           	psect	text75
 20728  0E2D                     __ptext75:	
 20729 ;; *************** function _do_I2C_RX *****************
 20730 ;; Defined at:
 20731 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 20732 ;; Parameters:    Size  Location     Type
 20733 ;;		None
 20734 ;; Auto vars:     Size  Location     Type
 20735 ;;		None
 20736 ;; Return value:  Size  Location     Type
 20737 ;;                  1    wreg      enum E12722
 20738 ;; Registers used:
 20739 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20740 ;; Tracked objects:
 20741 ;;		On entry : 0/0
 20742 ;;		On exit  : 0/0
 20743 ;;		Unchanged: 0/0
 20744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20747 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20748 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20749 ;;Total ram usage:        3 bytes
 20750 ;; Hardware stack levels used:    1
 20751 ;; Hardware stack levels required when called:    3
 20752 ;; This function calls:
 20753 ;;		Absolute function
 20754 ;;		_do_I2C_DO_NACK_RESTART
 20755 ;;		_do_I2C_DO_NACK_STOP
 20756 ;;		_i2c1_driver_getRXData
 20757 ;;		_i2c1_driver_sendACK
 20758 ;;		_i2c_restartWrite
 20759 ;;		_rd1RegCompleteHandler
 20760 ;;		_rd2RegCompleteHandler
 20761 ;;		_rdBlkRegCompleteHandler
 20762 ;;		_returnReset
 20763 ;;		_returnStop
 20764 ;;		_wr1RegCompleteHandler
 20765 ;;		_wr2RegCompleteHandler
 20766 ;; This function is called by:
 20767 ;;		_i2c_ISR
 20768 ;; This function uses a non-reentrant model
 20769 ;;
 20770                           
 20771                           
 20772                           ;psect for function _do_I2C_RX
 20773  0E2D                     _do_I2C_RX:	
 20774  0E2D                     i1l6273:	
 20775                           ;incstack = 0
 20776                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20777                           
 20778                           
 20779                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
 20780  0E2D  3196  260C  318E   	fcall	_i2c1_driver_getRXData
 20781  0E30  00FA               	movwf	??_do_I2C_RX
 20782  0E31  0021               	movlb	1	; select bank1
 20783  0E32  0822               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 20784  0E33  0086               	movwf	6
 20785  0E34  0187               	clrf	7
 20786  0E35  087A               	movf	??_do_I2C_RX,w
 20787  0E36  0081               	movwf	1
 20788  0E37                     i1l6275:	
 20789  0E37  3001               	movlw	1
 20790  0E38  00FA               	movwf	??_do_I2C_RX
 20791  0E39  087A               	movf	??_do_I2C_RX,w
 20792  0E3A  07A2               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 20793  0E3B                     i1l6277:	
 20794                           
 20795                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
 20796  0E3B  3001               	movlw	1
 20797  0E3C  02A3               	subwf	(_i2c_status^(0+128)+3),f
 20798  0E3D  3000               	movlw	0
 20799  0E3E  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 20800  0E3F  0823               	movf	(_i2c_status^(0+128)+3),w
 20801  0E40  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 20802  0E41  1903               	btfsc	3,2
 20803  0E42  2E44               	goto	u336_21
 20804  0E43  2E45               	goto	u336_20
 20805  0E44                     u336_21:	
 20806  0E44  2E4A               	goto	i1l1743
 20807  0E45                     u336_20:	
 20808  0E45                     i1l6279:	
 20809                           
 20810                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
 20811  0E45  3196  2623  318E   	fcall	_i2c1_driver_sendACK
 20812  0E48                     i1l6281:	
 20813                           
 20814                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
 20815  0E48  3005               	movlw	5
 20816  0E49  2E76               	goto	i1l1744
 20817  0E4A                     i1l1743:	
 20818                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
 20819                           
 20820                           
 20821                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
 20822  0E4A  1520               	bsf	_i2c_status^(0+128),2
 20823                           
 20824                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 20825  0E4B  2E54               	goto	i1l6297
 20826  0E4C                     i1l6287:	
 20827                           
 20828                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
 20829  0E4C  3196  265B  318E   	fcall	_do_I2C_DO_NACK_RESTART
 20830  0E4F  2E76               	goto	i1l1744
 20831  0E50                     i1l6291:	
 20832                           
 20833                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
 20834  0E50  3196  2656  318E   	fcall	_do_I2C_DO_NACK_STOP
 20835  0E53  2E76               	goto	i1l1744
 20836  0E54                     i1l6297:	
 20837  0E54  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 20838  0E55  00FA               	movwf	??_do_I2C_RX
 20839  0E56  087A               	movf	??_do_I2C_RX,w
 20840  0E57  00F9               	movwf	rdBlkRegCompleteHandler@p
 20841  0E58  300B               	movlw	11
 20842  0E59  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 20843  0E5A  0086               	movwf	6
 20844  0E5B  0187               	clrf	7
 20845  0E5C  3F41               	moviw [1]fsr1
 20846  0E5D  008A               	movwf	10
 20847  0E5E  3F40               	moviw [0]fsr1
 20848  0E5F  000A               	callw
 20849  0E60  318E               	pagesel	$
 20850  0E61  00FB               	movwf	??_do_I2C_RX+1
 20851  0E62  01FC               	clrf	??_do_I2C_RX+2
 20852                           
 20853                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20854                           ; Switch size 1, requested type "simple"
 20855                           ; Number of cases is 1, Range of values is 0 to 0
 20856                           ; switch strategies available:
 20857                           ; Name         Instructions Cycles
 20858                           ; simple_byte            4     3 (average)
 20859                           ; direct_byte            8     6 (fixed)
 20860                           ; jumptable            260     6 (fixed)
 20861                           ;	Chosen strategy is simple_byte
 20862  0E63  087C               	movf	??_do_I2C_RX+2,w
 20863  0E64  3A00               	xorlw	0	; case 0
 20864  0E65  1903               	skipnz
 20865  0E66  2E68               	goto	i1l8629
 20866  0E67  2E50               	goto	i1l6291
 20867  0E68                     i1l8629:	
 20868                           
 20869                           ; Switch size 1, requested type "simple"
 20870                           ; Number of cases is 4, Range of values is 1 to 4
 20871                           ; switch strategies available:
 20872                           ; Name         Instructions Cycles
 20873                           ; simple_byte           13     7 (average)
 20874                           ; direct_byte           17     9 (fixed)
 20875                           ; jumptable            263     9 (fixed)
 20876                           ;	Chosen strategy is simple_byte
 20877  0E68  087B               	movf	??_do_I2C_RX+1,w
 20878  0E69  3A01               	xorlw	1	; case 1
 20879  0E6A  1903               	skipnz
 20880  0E6B  2E50               	goto	i1l6291
 20881  0E6C  3A03               	xorlw	3	; case 2
 20882  0E6D  1903               	skipnz
 20883  0E6E  2E4C               	goto	i1l6287
 20884  0E6F  3A01               	xorlw	1	; case 3
 20885  0E70  1903               	skipnz
 20886  0E71  2E4C               	goto	i1l6287
 20887  0E72  3A07               	xorlw	7	; case 4
 20888  0E73  1903               	skipnz
 20889  0E74  2E50               	goto	i1l6291
 20890  0E75  2E50               	goto	i1l6291
 20891  0E76                     i1l1744:	
 20892  0E76  0008               	return
 20893  0E77                     __end_of_do_I2C_RX:	
 20894                           
 20895                           	psect	text76
 20896  0FAC                     __ptext76:	
 20897 ;; *************** function _do_I2C_TX *****************
 20898 ;; Defined at:
 20899 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 20900 ;; Parameters:    Size  Location     Type
 20901 ;;		None
 20902 ;; Auto vars:     Size  Location     Type
 20903 ;;		None
 20904 ;; Return value:  Size  Location     Type
 20905 ;;                  1    wreg      enum E12722
 20906 ;; Registers used:
 20907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20908 ;; Tracked objects:
 20909 ;;		On entry : 0/0
 20910 ;;		On exit  : 0/0
 20911 ;;		Unchanged: 0/0
 20912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20915 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20916 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20917 ;;Total ram usage:        3 bytes
 20918 ;; Hardware stack levels used:    1
 20919 ;; Hardware stack levels required when called:    3
 20920 ;; This function calls:
 20921 ;;		Absolute function
 20922 ;;		_do_I2C_SEND_RESTART_READ
 20923 ;;		_do_I2C_SEND_RESTART_WRITE
 20924 ;;		_do_I2C_SEND_STOP
 20925 ;;		_i2c1_driver_TXData
 20926 ;;		_i2c1_driver_isNACK
 20927 ;;		_i2c_restartWrite
 20928 ;;		_rd1RegCompleteHandler
 20929 ;;		_rd2RegCompleteHandler
 20930 ;;		_rdBlkRegCompleteHandler
 20931 ;;		_returnReset
 20932 ;;		_returnStop
 20933 ;;		_wr1RegCompleteHandler
 20934 ;;		_wr2RegCompleteHandler
 20935 ;; This function is called by:
 20936 ;;		_i2c_ISR
 20937 ;; This function uses a non-reentrant model
 20938 ;;
 20939                           
 20940                           
 20941                           ;psect for function _do_I2C_TX
 20942  0FAC                     _do_I2C_TX:	
 20943  0FAC                     i1l6239:	
 20944                           ;incstack = 0
 20945                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20946                           
 20947                           
 20948                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
 20949  0FAC  3196  2680  318F   	fcall	_i2c1_driver_isNACK
 20950  0FAF  1C03               	btfss	3,0
 20951  0FB0  2FB2               	goto	u334_21
 20952  0FB1  2FB3               	goto	u334_20
 20953  0FB2                     u334_21:	
 20954  0FB2  2FE3               	goto	i1l1727
 20955  0FB3                     u334_20:	
 20956  0FB3  2FC0               	goto	i1l6257
 20957  0FB4                     i1l6243:	
 20958                           
 20959                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
 20960  0FB4  3196  263D  318F   	fcall	_do_I2C_SEND_RESTART_READ
 20961  0FB7  2FFF               	goto	i1l1730
 20962  0FB8                     i1l6247:	
 20963                           
 20964                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
 20965  0FB8  3196  2642  318F   	fcall	_do_I2C_SEND_RESTART_WRITE
 20966  0FBB  2FFF               	goto	i1l1730
 20967  0FBC                     i1l6251:	
 20968                           
 20969                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
 20970  0FBC  3196  264C  318F   	fcall	_do_I2C_SEND_STOP
 20971  0FBF  2FFF               	goto	i1l1730
 20972  0FC0                     i1l6257:	
 20973  0FC0  0021               	movlb	1	; select bank1
 20974  0FC1  083A               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 20975  0FC2  00FA               	movwf	??_do_I2C_TX
 20976  0FC3  087A               	movf	??_do_I2C_TX,w
 20977  0FC4  00F9               	movwf	rdBlkRegCompleteHandler@p
 20978  0FC5  3011               	movlw	17
 20979  0FC6  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 20980  0FC7  0086               	movwf	6
 20981  0FC8  0187               	clrf	7
 20982  0FC9  3F41               	moviw [1]fsr1
 20983  0FCA  008A               	movwf	10
 20984  0FCB  3F40               	moviw [0]fsr1
 20985  0FCC  000A               	callw
 20986  0FCD  318F               	pagesel	$
 20987  0FCE  00FB               	movwf	??_do_I2C_TX+1
 20988  0FCF  01FC               	clrf	??_do_I2C_TX+2
 20989                           
 20990                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20991                           ; Switch size 1, requested type "simple"
 20992                           ; Number of cases is 1, Range of values is 0 to 0
 20993                           ; switch strategies available:
 20994                           ; Name         Instructions Cycles
 20995                           ; simple_byte            4     3 (average)
 20996                           ; direct_byte            8     6 (fixed)
 20997                           ; jumptable            260     6 (fixed)
 20998                           ;	Chosen strategy is simple_byte
 20999  0FD0  087C               	movf	??_do_I2C_TX+2,w
 21000  0FD1  3A00               	xorlw	0	; case 0
 21001  0FD2  1903               	skipnz
 21002  0FD3  2FD5               	goto	i1l8631
 21003  0FD4  2FBC               	goto	i1l6251
 21004  0FD5                     i1l8631:	
 21005                           
 21006                           ; Switch size 1, requested type "simple"
 21007                           ; Number of cases is 4, Range of values is 1 to 4
 21008                           ; switch strategies available:
 21009                           ; Name         Instructions Cycles
 21010                           ; simple_byte           13     7 (average)
 21011                           ; direct_byte           17     9 (fixed)
 21012                           ; jumptable            263     9 (fixed)
 21013                           ;	Chosen strategy is simple_byte
 21014  0FD5  087B               	movf	??_do_I2C_TX+1,w
 21015  0FD6  3A01               	xorlw	1	; case 1
 21016  0FD7  1903               	skipnz
 21017  0FD8  2FBC               	goto	i1l6251
 21018  0FD9  3A03               	xorlw	3	; case 2
 21019  0FDA  1903               	skipnz
 21020  0FDB  2FB4               	goto	i1l6243
 21021  0FDC  3A01               	xorlw	1	; case 3
 21022  0FDD  1903               	skipnz
 21023  0FDE  2FB8               	goto	i1l6247
 21024  0FDF  3A07               	xorlw	7	; case 4
 21025  0FE0  1903               	skipnz
 21026  0FE1  2FBC               	goto	i1l6251
 21027  0FE2  2FBC               	goto	i1l6251
 21028  0FE3                     i1l1727:	
 21029                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
 21030                           
 21031                           
 21032                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
 21033  0FE3  0021               	movlb	1	; select bank1
 21034  0FE4  11A0               	bcf	_i2c_status^(0+128),3
 21035  0FE5                     i1l6259:	
 21036                           
 21037                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
 21038  0FE5  3002               	movlw	2
 21039  0FE6  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 21040  0FE7  0086               	movwf	6
 21041  0FE8  0187               	clrf	7
 21042  0FE9  3F40               	moviw [0]fsr1
 21043  0FEA  0084               	movwf	4
 21044  0FEB  0185               	clrf	5
 21045  0FEC  0A81               	incf	1,f
 21046  0FED  0800               	movf	0,w
 21047  0FEE  3196  2633  318F   	fcall	_i2c1_driver_TXData
 21048  0FF1                     i1l6261:	
 21049                           
 21050                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
 21051  0FF1  3001               	movlw	1
 21052  0FF2  0021               	movlb	1	; select bank1
 21053  0FF3  02A3               	subwf	(_i2c_status^(0+128)+3),f
 21054  0FF4  3000               	movlw	0
 21055  0FF5  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 21056  0FF6  0823               	movf	(_i2c_status^(0+128)+3),w
 21057  0FF7  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 21058  0FF8  1D03               	btfss	3,2
 21059  0FF9  2FFB               	goto	u335_21
 21060  0FFA  2FFC               	goto	u335_20
 21061  0FFB                     u335_21:	
 21062  0FFB  2FFE               	goto	i1l6265
 21063  0FFC                     u335_20:	
 21064  0FFC                     i1l6263:	
 21065  0FFC  3006               	movlw	6
 21066  0FFD  2FFF               	goto	i1l1730
 21067  0FFE                     i1l6265:	
 21068  0FFE  3003               	movlw	3
 21069  0FFF                     i1l1730:	
 21070  0FFF  0008               	return
 21071  1000                     __end_of_do_I2C_TX:	
 21072                           
 21073                           	psect	text77
 21074  0BA0                     __ptext77:	
 21075 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 21076 ;; Defined at:
 21077 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 21078 ;; Parameters:    Size  Location     Type
 21079 ;;		None
 21080 ;; Auto vars:     Size  Location     Type
 21081 ;;		None
 21082 ;; Return value:  Size  Location     Type
 21083 ;;                  1    wreg      enum E12722
 21084 ;; Registers used:
 21085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21086 ;; Tracked objects:
 21087 ;;		On entry : 0/0
 21088 ;;		On exit  : 0/0
 21089 ;;		Unchanged: 0/0
 21090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21093 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21094 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21095 ;;Total ram usage:        3 bytes
 21096 ;; Hardware stack levels used:    1
 21097 ;; Hardware stack levels required when called:    3
 21098 ;; This function calls:
 21099 ;;		Absolute function
 21100 ;;		_do_I2C_SEND_RESTART
 21101 ;;		_do_I2C_SEND_STOP
 21102 ;;		_i2c_restartWrite
 21103 ;;		_rd1RegCompleteHandler
 21104 ;;		_rd2RegCompleteHandler
 21105 ;;		_rdBlkRegCompleteHandler
 21106 ;;		_returnReset
 21107 ;;		_returnStop
 21108 ;;		_wr1RegCompleteHandler
 21109 ;;		_wr2RegCompleteHandler
 21110 ;; This function is called by:
 21111 ;;		_i2c_ISR
 21112 ;; This function uses a non-reentrant model
 21113 ;;
 21114                           
 21115                           
 21116                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 21117  0BA0                     _do_I2C_DO_ADDRESS_NACK:	
 21118  0BA0                     i1l6217:	
 21119                           ;incstack = 0
 21120                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21121                           
 21122                           
 21123                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
 21124  0BA0  0021               	movlb	1	; select bank1
 21125  0BA1  11A0               	bcf	_i2c_status^(0+128),3
 21126  0BA2                     i1l6219:	
 21127                           
 21128                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
 21129  0BA2  3002               	movlw	2
 21130  0BA3  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 21131  0BA4  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 21132  0BA5  00AA               	movwf	(_i2c_status^(0+128)+10)
 21133                           
 21134                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
 21135  0BA6  2BAF               	goto	i1l6231
 21136  0BA7                     i1l6221:	
 21137                           
 21138                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
 21139  0BA7  3196  2647  318B   	fcall	_do_I2C_SEND_RESTART
 21140  0BAA  2BCB               	goto	i1l1722
 21141  0BAB                     i1l6225:	
 21142                           
 21143                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
 21144  0BAB  3196  264C  318B   	fcall	_do_I2C_SEND_STOP
 21145  0BAE  2BCB               	goto	i1l1722
 21146  0BAF                     i1l6231:	
 21147  0BAF  0839               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 21148  0BB0  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 21149  0BB1  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 21150  0BB2  00F9               	movwf	rdBlkRegCompleteHandler@p
 21151  0BB3  300F               	movlw	15
 21152  0BB4  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 21153  0BB5  0086               	movwf	6
 21154  0BB6  0187               	clrf	7
 21155  0BB7  3F41               	moviw [1]fsr1
 21156  0BB8  008A               	movwf	10
 21157  0BB9  3F40               	moviw [0]fsr1
 21158  0BBA  000A               	callw
 21159  0BBB  318B               	pagesel	$
 21160  0BBC  00FB               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
 21161  0BBD  01FC               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
 21162                           
 21163                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21164                           ; Switch size 1, requested type "simple"
 21165                           ; Number of cases is 1, Range of values is 0 to 0
 21166                           ; switch strategies available:
 21167                           ; Name         Instructions Cycles
 21168                           ; simple_byte            4     3 (average)
 21169                           ; direct_byte            8     6 (fixed)
 21170                           ; jumptable            260     6 (fixed)
 21171                           ;	Chosen strategy is simple_byte
 21172  0BBE  087C               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
 21173  0BBF  3A00               	xorlw	0	; case 0
 21174  0BC0  1903               	skipnz
 21175  0BC1  2BC3               	goto	i1l8633
 21176  0BC2  2BAB               	goto	i1l6225
 21177  0BC3                     i1l8633:	
 21178                           
 21179                           ; Switch size 1, requested type "simple"
 21180                           ; Number of cases is 2, Range of values is 2 to 3
 21181                           ; switch strategies available:
 21182                           ; Name         Instructions Cycles
 21183                           ; simple_byte            7     4 (average)
 21184                           ; direct_byte           13     9 (fixed)
 21185                           ; jumptable            263     9 (fixed)
 21186                           ;	Chosen strategy is simple_byte
 21187  0BC3  087B               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
 21188  0BC4  3A02               	xorlw	2	; case 2
 21189  0BC5  1903               	skipnz
 21190  0BC6  2BA7               	goto	i1l6221
 21191  0BC7  3A01               	xorlw	1	; case 3
 21192  0BC8  1903               	skipnz
 21193  0BC9  2BA7               	goto	i1l6221
 21194  0BCA  2BAB               	goto	i1l6225
 21195  0BCB                     i1l1722:	
 21196  0BCB  0008               	return
 21197  0BCC                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 21198                           
 21199                           	psect	text78
 21200  165B                     __ptext78:	
 21201 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 21202 ;; Defined at:
 21203 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 21204 ;; Parameters:    Size  Location     Type
 21205 ;;		None
 21206 ;; Auto vars:     Size  Location     Type
 21207 ;;		None
 21208 ;; Return value:  Size  Location     Type
 21209 ;;                  1    wreg      enum E12722
 21210 ;; Registers used:
 21211 ;;		wreg, status,2, status,0, pclath, cstack
 21212 ;; Tracked objects:
 21213 ;;		On entry : 0/0
 21214 ;;		On exit  : 0/0
 21215 ;;		Unchanged: 0/0
 21216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21221 ;;Total ram usage:        0 bytes
 21222 ;; Hardware stack levels used:    1
 21223 ;; Hardware stack levels required when called:    1
 21224 ;; This function calls:
 21225 ;;		_i2c1_driver_sendNACK
 21226 ;; This function is called by:
 21227 ;;		_do_I2C_RX
 21228 ;;		_i2c_ISR
 21229 ;; This function uses a non-reentrant model
 21230 ;;
 21231                           
 21232                           
 21233                           ;psect for function _do_I2C_DO_NACK_RESTART
 21234  165B                     _do_I2C_DO_NACK_RESTART:	
 21235  165B                     i1l5719:	
 21236                           ;incstack = 0
 21237                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 21238                           
 21239                           
 21240                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
 21241  165B  3196  2627  3196   	fcall	_i2c1_driver_sendNACK
 21242  165E                     i1l5721:	
 21243                           
 21244                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
 21245  165E  3009               	movlw	9
 21246  165F                     i1l1716:	
 21247  165F  0008               	return
 21248  1660                     __end_of_do_I2C_DO_NACK_RESTART:	
 21249                           
 21250                           	psect	text79
 21251  1656                     __ptext79:	
 21252 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 21253 ;; Defined at:
 21254 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 21255 ;; Parameters:    Size  Location     Type
 21256 ;;		None
 21257 ;; Auto vars:     Size  Location     Type
 21258 ;;		None
 21259 ;; Return value:  Size  Location     Type
 21260 ;;                  1    wreg      enum E12722
 21261 ;; Registers used:
 21262 ;;		wreg, status,2, status,0, pclath, cstack
 21263 ;; Tracked objects:
 21264 ;;		On entry : 0/0
 21265 ;;		On exit  : 0/0
 21266 ;;		Unchanged: 0/0
 21267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21272 ;;Total ram usage:        0 bytes
 21273 ;; Hardware stack levels used:    1
 21274 ;; Hardware stack levels required when called:    1
 21275 ;; This function calls:
 21276 ;;		_i2c1_driver_sendNACK
 21277 ;; This function is called by:
 21278 ;;		_do_I2C_RX
 21279 ;;		_i2c_ISR
 21280 ;; This function uses a non-reentrant model
 21281 ;;
 21282                           
 21283                           
 21284                           ;psect for function _do_I2C_DO_NACK_STOP
 21285  1656                     _do_I2C_DO_NACK_STOP:	
 21286  1656                     i1l5713:	
 21287                           ;incstack = 0
 21288                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 21289                           
 21290                           
 21291                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
 21292  1656  3196  2627  3196   	fcall	_i2c1_driver_sendNACK
 21293  1659                     i1l5715:	
 21294                           
 21295                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
 21296  1659  300A               	movlw	10
 21297  165A                     i1l1713:	
 21298  165A  0008               	return
 21299  165B                     __end_of_do_I2C_DO_NACK_STOP:	
 21300                           
 21301                           	psect	text80
 21302  1651                     __ptext80:	
 21303 ;; *************** function _do_I2C_DO_ACK *****************
 21304 ;; Defined at:
 21305 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 21306 ;; Parameters:    Size  Location     Type
 21307 ;;		None
 21308 ;; Auto vars:     Size  Location     Type
 21309 ;;		None
 21310 ;; Return value:  Size  Location     Type
 21311 ;;                  1    wreg      enum E12722
 21312 ;; Registers used:
 21313 ;;		wreg, status,2, status,0, pclath, cstack
 21314 ;; Tracked objects:
 21315 ;;		On entry : 0/0
 21316 ;;		On exit  : 0/0
 21317 ;;		Unchanged: 0/0
 21318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21323 ;;Total ram usage:        0 bytes
 21324 ;; Hardware stack levels used:    1
 21325 ;; Hardware stack levels required when called:    1
 21326 ;; This function calls:
 21327 ;;		_i2c1_driver_sendACK
 21328 ;; This function is called by:
 21329 ;;		_i2c_ISR
 21330 ;; This function uses a non-reentrant model
 21331 ;;
 21332                           
 21333                           
 21334                           ;psect for function _do_I2C_DO_ACK
 21335  1651                     _do_I2C_DO_ACK:	
 21336  1651                     i1l6211:	
 21337                           ;incstack = 0
 21338                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 21339                           
 21340                           
 21341                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
 21342  1651  3196  2623  3196   	fcall	_i2c1_driver_sendACK
 21343  1654                     i1l6213:	
 21344                           
 21345                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
 21346  1654  3005               	movlw	5
 21347  1655                     i1l1710:	
 21348  1655  0008               	return
 21349  1656                     __end_of_do_I2C_DO_ACK:	
 21350                           
 21351                           	psect	text81
 21352  1672                     __ptext81:	
 21353 ;; *************** function _do_I2C_RCEN *****************
 21354 ;; Defined at:
 21355 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 21356 ;; Parameters:    Size  Location     Type
 21357 ;;		None
 21358 ;; Auto vars:     Size  Location     Type
 21359 ;;		None
 21360 ;; Return value:  Size  Location     Type
 21361 ;;                  1    wreg      enum E12722
 21362 ;; Registers used:
 21363 ;;		wreg, status,2, status,0, pclath, cstack
 21364 ;; Tracked objects:
 21365 ;;		On entry : 0/0
 21366 ;;		On exit  : 0/0
 21367 ;;		Unchanged: 0/0
 21368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21373 ;;Total ram usage:        0 bytes
 21374 ;; Hardware stack levels used:    1
 21375 ;; Hardware stack levels required when called:    1
 21376 ;; This function calls:
 21377 ;;		_i2c1_driver_startRX
 21378 ;; This function is called by:
 21379 ;;		_i2c_ISR
 21380 ;; This function uses a non-reentrant model
 21381 ;;
 21382                           
 21383                           
 21384                           ;psect for function _do_I2C_RCEN
 21385  1672                     _do_I2C_RCEN:	
 21386  1672                     i1l6203:	
 21387                           ;incstack = 0
 21388                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 21389                           
 21390                           
 21391                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
 21392  1672  0021               	movlb	1	; select bank1
 21393  1673  11A0               	bcf	_i2c_status^(0+128),3
 21394  1674                     i1l6205:	
 21395                           
 21396                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
 21397  1674  3196  2609  3196   	fcall	_i2c1_driver_startRX
 21398  1677                     i1l6207:	
 21399                           
 21400                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
 21401  1677  3004               	movlw	4
 21402  1678                     i1l1707:	
 21403  1678  0008               	return
 21404  1679                     __end_of_do_I2C_RCEN:	
 21405                           
 21406                           	psect	text82
 21407  1690                     __ptext82:	
 21408 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 21409 ;; Defined at:
 21410 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 21411 ;; Parameters:    Size  Location     Type
 21412 ;;		None
 21413 ;; Auto vars:     Size  Location     Type
 21414 ;;		None
 21415 ;; Return value:  Size  Location     Type
 21416 ;;                  1    wreg      enum E12722
 21417 ;; Registers used:
 21418 ;;		wreg, status,2, status,0, pclath, cstack
 21419 ;; Tracked objects:
 21420 ;;		On entry : 0/0
 21421 ;;		On exit  : 0/0
 21422 ;;		Unchanged: 0/0
 21423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21428 ;;Total ram usage:        0 bytes
 21429 ;; Hardware stack levels used:    1
 21430 ;; Hardware stack levels required when called:    1
 21431 ;; This function calls:
 21432 ;;		_i2c1_driver_TXData
 21433 ;; This function is called by:
 21434 ;;		_i2c_ISR
 21435 ;; This function uses a non-reentrant model
 21436 ;;
 21437                           
 21438                           
 21439                           ;psect for function _do_I2C_SEND_ADR_WRITE
 21440  1690                     _do_I2C_SEND_ADR_WRITE:	
 21441  1690                     i1l6195:	
 21442                           ;incstack = 0
 21443                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 21444                           
 21445                           
 21446                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
 21447  1690  0021               	movlb	1	; select bank1
 21448  1691  15A0               	bsf	_i2c_status^(0+128),3
 21449  1692                     i1l6197:	
 21450                           
 21451                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
 21452  1692  3521               	lslf	(_i2c_status^(0+128)+1),w
 21453  1693  3196  2633  3196   	fcall	_i2c1_driver_TXData
 21454  1696                     i1l6199:	
 21455                           
 21456                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
 21457  1696  3003               	movlw	3
 21458  1697                     i1l1704:	
 21459  1697  0008               	return
 21460  1698                     __end_of_do_I2C_SEND_ADR_WRITE:	
 21461                           
 21462                           	psect	text83
 21463  16A8                     __ptext83:	
 21464 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 21465 ;; Defined at:
 21466 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 21467 ;; Parameters:    Size  Location     Type
 21468 ;;		None
 21469 ;; Auto vars:     Size  Location     Type
 21470 ;;		None
 21471 ;; Return value:  Size  Location     Type
 21472 ;;                  1    wreg      enum E12722
 21473 ;; Registers used:
 21474 ;;		wreg, status,2, status,0, pclath, cstack
 21475 ;; Tracked objects:
 21476 ;;		On entry : 0/0
 21477 ;;		On exit  : 0/0
 21478 ;;		Unchanged: 0/0
 21479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21484 ;;Total ram usage:        0 bytes
 21485 ;; Hardware stack levels used:    1
 21486 ;; Hardware stack levels required when called:    1
 21487 ;; This function calls:
 21488 ;;		_i2c1_driver_TXData
 21489 ;; This function is called by:
 21490 ;;		_i2c_ISR
 21491 ;; This function uses a non-reentrant model
 21492 ;;
 21493                           
 21494                           
 21495                           ;psect for function _do_I2C_SEND_ADR_READ
 21496  16A8                     _do_I2C_SEND_ADR_READ:	
 21497  16A8                     i1l6187:	
 21498                           ;incstack = 0
 21499                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 21500                           
 21501                           
 21502                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
 21503  16A8  0021               	movlb	1	; select bank1
 21504  16A9  15A0               	bsf	_i2c_status^(0+128),3
 21505  16AA                     i1l6189:	
 21506                           
 21507                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
 21508  16AA  1403               	setc
 21509  16AB  0D21               	rlf	(_i2c_status^(0+128)+1),w
 21510  16AC  3196  2633  3196   	fcall	_i2c1_driver_TXData
 21511  16AF                     i1l6191:	
 21512                           
 21513                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
 21514  16AF  3005               	movlw	5
 21515  16B0                     i1l1701:	
 21516  16B0  0008               	return
 21517  16B1                     __end_of_do_I2C_SEND_ADR_READ:	
 21518                           
 21519                           	psect	text84
 21520  164C                     __ptext84:	
 21521 ;; *************** function _do_I2C_SEND_STOP *****************
 21522 ;; Defined at:
 21523 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 21524 ;; Parameters:    Size  Location     Type
 21525 ;;		None
 21526 ;; Auto vars:     Size  Location     Type
 21527 ;;		None
 21528 ;; Return value:  Size  Location     Type
 21529 ;;                  1    wreg      enum E12722
 21530 ;; Registers used:
 21531 ;;		wreg, status,2, status,0, pclath, cstack
 21532 ;; Tracked objects:
 21533 ;;		On entry : 0/0
 21534 ;;		On exit  : 0/0
 21535 ;;		Unchanged: 0/0
 21536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21541 ;;Total ram usage:        0 bytes
 21542 ;; Hardware stack levels used:    1
 21543 ;; Hardware stack levels required when called:    1
 21544 ;; This function calls:
 21545 ;;		_i2c1_driver_stop
 21546 ;; This function is called by:
 21547 ;;		_do_I2C_DO_ADDRESS_NACK
 21548 ;;		_do_I2C_TX
 21549 ;;		_do_I2C_TX_EMPTY
 21550 ;;		_i2c_ISR
 21551 ;; This function uses a non-reentrant model
 21552 ;;
 21553                           
 21554                           
 21555                           ;psect for function _do_I2C_SEND_STOP
 21556  164C                     _do_I2C_SEND_STOP:	
 21557  164C                     i1l5707:	
 21558                           ;incstack = 0
 21559                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 21560                           
 21561                           
 21562                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
 21563  164C  3196  2606  3196   	fcall	_i2c1_driver_stop
 21564  164F                     i1l5709:	
 21565                           
 21566                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
 21567  164F  3000               	movlw	0
 21568  1650                     i1l1698:	
 21569  1650  0008               	return
 21570  1651                     __end_of_do_I2C_SEND_STOP:	
 21571                           
 21572                           	psect	text85
 21573  1647                     __ptext85:	
 21574 ;; *************** function _do_I2C_SEND_RESTART *****************
 21575 ;; Defined at:
 21576 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 21577 ;; Parameters:    Size  Location     Type
 21578 ;;		None
 21579 ;; Auto vars:     Size  Location     Type
 21580 ;;		None
 21581 ;; Return value:  Size  Location     Type
 21582 ;;                  1    wreg      enum E12722
 21583 ;; Registers used:
 21584 ;;		wreg, status,2, status,0, pclath, cstack
 21585 ;; Tracked objects:
 21586 ;;		On entry : 0/0
 21587 ;;		On exit  : 0/0
 21588 ;;		Unchanged: 0/0
 21589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21594 ;;Total ram usage:        0 bytes
 21595 ;; Hardware stack levels used:    1
 21596 ;; Hardware stack levels required when called:    1
 21597 ;; This function calls:
 21598 ;;		_i2c1_driver_restart
 21599 ;; This function is called by:
 21600 ;;		_do_I2C_DO_ADDRESS_NACK
 21601 ;;		_do_I2C_TX_EMPTY
 21602 ;;		_i2c_ISR
 21603 ;; This function uses a non-reentrant model
 21604 ;;
 21605                           
 21606                           
 21607                           ;psect for function _do_I2C_SEND_RESTART
 21608  1647                     _do_I2C_SEND_RESTART:	
 21609  1647                     i1l5701:	
 21610                           ;incstack = 0
 21611                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 21612                           
 21613                           
 21614                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
 21615  1647  3196  2603  3196   	fcall	_i2c1_driver_restart
 21616  164A                     i1l5703:	
 21617                           
 21618                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
 21619  164A  3001               	movlw	1
 21620  164B                     i1l1695:	
 21621  164B  0008               	return
 21622  164C                     __end_of_do_I2C_SEND_RESTART:	
 21623                           
 21624                           	psect	text86
 21625  1642                     __ptext86:	
 21626 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 21627 ;; Defined at:
 21628 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 21629 ;; Parameters:    Size  Location     Type
 21630 ;;		None
 21631 ;; Auto vars:     Size  Location     Type
 21632 ;;		None
 21633 ;; Return value:  Size  Location     Type
 21634 ;;                  1    wreg      enum E12722
 21635 ;; Registers used:
 21636 ;;		wreg, status,2, status,0, pclath, cstack
 21637 ;; Tracked objects:
 21638 ;;		On entry : 0/0
 21639 ;;		On exit  : 0/0
 21640 ;;		Unchanged: 0/0
 21641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21646 ;;Total ram usage:        0 bytes
 21647 ;; Hardware stack levels used:    1
 21648 ;; Hardware stack levels required when called:    1
 21649 ;; This function calls:
 21650 ;;		_i2c1_driver_restart
 21651 ;; This function is called by:
 21652 ;;		_do_I2C_TX
 21653 ;;		_i2c_ISR
 21654 ;; This function uses a non-reentrant model
 21655 ;;
 21656                           
 21657                           
 21658                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 21659  1642                     _do_I2C_SEND_RESTART_WRITE:	
 21660  1642                     i1l5695:	
 21661                           ;incstack = 0
 21662                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 21663                           
 21664                           
 21665                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
 21666  1642  3196  2603  3196   	fcall	_i2c1_driver_restart
 21667  1645                     i1l5697:	
 21668                           
 21669                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
 21670  1645  3002               	movlw	2
 21671  1646                     i1l1692:	
 21672  1646  0008               	return
 21673  1647                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 21674                           
 21675                           	psect	text87
 21676  163D                     __ptext87:	
 21677 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 21678 ;; Defined at:
 21679 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 21680 ;; Parameters:    Size  Location     Type
 21681 ;;		None
 21682 ;; Auto vars:     Size  Location     Type
 21683 ;;		None
 21684 ;; Return value:  Size  Location     Type
 21685 ;;                  1    wreg      enum E12722
 21686 ;; Registers used:
 21687 ;;		wreg, status,2, status,0, pclath, cstack
 21688 ;; Tracked objects:
 21689 ;;		On entry : 0/0
 21690 ;;		On exit  : 0/0
 21691 ;;		Unchanged: 0/0
 21692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21697 ;;Total ram usage:        0 bytes
 21698 ;; Hardware stack levels used:    1
 21699 ;; Hardware stack levels required when called:    1
 21700 ;; This function calls:
 21701 ;;		_i2c1_driver_restart
 21702 ;; This function is called by:
 21703 ;;		_do_I2C_TX
 21704 ;;		_i2c_ISR
 21705 ;; This function uses a non-reentrant model
 21706 ;;
 21707                           
 21708                           
 21709                           ;psect for function _do_I2C_SEND_RESTART_READ
 21710  163D                     _do_I2C_SEND_RESTART_READ:	
 21711  163D                     i1l5689:	
 21712                           ;incstack = 0
 21713                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 21714                           
 21715                           
 21716                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
 21717  163D  3196  2603  3196   	fcall	_i2c1_driver_restart
 21718  1640                     i1l5691:	
 21719                           
 21720                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
 21721  1640  3001               	movlw	1
 21722  1641                     i1l1689:	
 21723  1641  0008               	return
 21724  1642                     __end_of_do_I2C_SEND_RESTART_READ:	
 21725                           
 21726                           	psect	text88
 21727  1638                     __ptext88:	
 21728 ;; *************** function _do_I2C_IDLE *****************
 21729 ;; Defined at:
 21730 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 21731 ;; Parameters:    Size  Location     Type
 21732 ;;		None
 21733 ;; Auto vars:     Size  Location     Type
 21734 ;;		None
 21735 ;; Return value:  Size  Location     Type
 21736 ;;                  1    wreg      enum E12722
 21737 ;; Registers used:
 21738 ;;		wreg, status,2
 21739 ;; Tracked objects:
 21740 ;;		On entry : 0/0
 21741 ;;		On exit  : 0/0
 21742 ;;		Unchanged: 0/0
 21743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21748 ;;Total ram usage:        0 bytes
 21749 ;; Hardware stack levels used:    1
 21750 ;; This function calls:
 21751 ;;		Nothing
 21752 ;; This function is called by:
 21753 ;;		_i2c_ISR
 21754 ;; This function uses a non-reentrant model
 21755 ;;
 21756                           
 21757                           
 21758                           ;psect for function _do_I2C_IDLE
 21759  1638                     _do_I2C_IDLE:	
 21760  1638                     i1l6179:	
 21761                           ;incstack = 0
 21762                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 21763                           
 21764                           
 21765                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
 21766  1638  0021               	movlb	1	; select bank1
 21767  1639  1020               	bcf	_i2c_status^(0+128),0
 21768  163A                     i1l6181:	
 21769                           
 21770                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
 21771  163A  01AA               	clrf	(_i2c_status^(0+128)+10)
 21772  163B                     i1l6183:	
 21773                           
 21774                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
 21775  163B  300E               	movlw	14
 21776  163C                     i1l1686:	
 21777  163C  0008               	return
 21778  163D                     __end_of_do_I2C_IDLE:	
 21779                           
 21780                           	psect	text89
 21781  1688                     __ptext89:	
 21782 ;; *************** function _do_I2C_RESET *****************
 21783 ;; Defined at:
 21784 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 21785 ;; Parameters:    Size  Location     Type
 21786 ;;		None
 21787 ;; Auto vars:     Size  Location     Type
 21788 ;;		None
 21789 ;; Return value:  Size  Location     Type
 21790 ;;                  1    wreg      enum E12722
 21791 ;; Registers used:
 21792 ;;		wreg, status,2, status,0, pclath, cstack
 21793 ;; Tracked objects:
 21794 ;;		On entry : 0/0
 21795 ;;		On exit  : 0/0
 21796 ;;		Unchanged: 0/0
 21797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21802 ;;Total ram usage:        0 bytes
 21803 ;; Hardware stack levels used:    1
 21804 ;; Hardware stack levels required when called:    1
 21805 ;; This function calls:
 21806 ;;		_i2c1_driver_resetBus
 21807 ;; This function is called by:
 21808 ;;		_i2c_ISR
 21809 ;; This function uses a non-reentrant model
 21810 ;;
 21811                           
 21812                           
 21813                           ;psect for function _do_I2C_RESET
 21814  1688                     _do_I2C_RESET:	
 21815  1688                     i1l6169:	
 21816                           ;incstack = 0
 21817                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 21818                           
 21819                           
 21820                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
 21821  1688  3195  25FB  3196   	fcall	_i2c1_driver_resetBus
 21822  168B                     i1l6171:	
 21823                           
 21824                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
 21825  168B  0021               	movlb	1	; select bank1
 21826  168C  1020               	bcf	_i2c_status^(0+128),0
 21827  168D                     i1l6173:	
 21828                           
 21829                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
 21830  168D  01AA               	clrf	(_i2c_status^(0+128)+10)
 21831  168E                     i1l6175:	
 21832                           
 21833                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
 21834  168E  300E               	movlw	14
 21835  168F                     i1l1683:	
 21836  168F  0008               	return
 21837  1690                     __end_of_do_I2C_RESET:	
 21838                           
 21839                           	psect	text90
 21840  0C82                     __ptext90:	
 21841 ;; *************** function _do_I2C_TX_EMPTY *****************
 21842 ;; Defined at:
 21843 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 21844 ;; Parameters:    Size  Location     Type
 21845 ;;		None
 21846 ;; Auto vars:     Size  Location     Type
 21847 ;;		None
 21848 ;; Return value:  Size  Location     Type
 21849 ;;                  1    wreg      enum E12722
 21850 ;; Registers used:
 21851 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21852 ;; Tracked objects:
 21853 ;;		On entry : 0/0
 21854 ;;		On exit  : 0/0
 21855 ;;		Unchanged: 0/0
 21856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21859 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21860 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21861 ;;Total ram usage:        3 bytes
 21862 ;; Hardware stack levels used:    1
 21863 ;; Hardware stack levels required when called:    3
 21864 ;; This function calls:
 21865 ;;		Absolute function
 21866 ;;		_do_I2C_SEND_RESTART
 21867 ;;		_do_I2C_SEND_STOP
 21868 ;;		_i2c_restartWrite
 21869 ;;		_mssp1_setIRQ
 21870 ;;		_rd1RegCompleteHandler
 21871 ;;		_rd2RegCompleteHandler
 21872 ;;		_rdBlkRegCompleteHandler
 21873 ;;		_returnReset
 21874 ;;		_returnStop
 21875 ;;		_wr1RegCompleteHandler
 21876 ;;		_wr2RegCompleteHandler
 21877 ;; This function is called by:
 21878 ;;		_i2c_ISR
 21879 ;; This function uses a non-reentrant model
 21880 ;;
 21881                           
 21882                           
 21883                           ;psect for function _do_I2C_TX_EMPTY
 21884  0C82                     _do_I2C_TX_EMPTY:	
 21885  0C82                     i1l6305:	
 21886                           ;incstack = 0
 21887                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21888                           
 21889                           
 21890                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
 21891  0C82  0021               	movlb	1	; select bank1
 21892  0C83  1520               	bsf	_i2c_status^(0+128),2
 21893                           
 21894                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 21895  0C84  2C92               	goto	i1l6323
 21896  0C85                     i1l6307:	
 21897                           
 21898                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
 21899  0C85  3196  2647  318C   	fcall	_do_I2C_SEND_RESTART
 21900  0C88  2CB4               	goto	i1l1758
 21901  0C89                     i1l6311:	
 21902                           
 21903                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
 21904  0C89  3196  260F  318C   	fcall	_mssp1_setIRQ
 21905  0C8C                     i1l6313:	
 21906                           
 21907                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
 21908  0C8C  3003               	movlw	3
 21909  0C8D  2CB4               	goto	i1l1758
 21910  0C8E                     i1l6317:	
 21911                           
 21912                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
 21913  0C8E  3196  264C  318C   	fcall	_do_I2C_SEND_STOP
 21914  0C91  2CB4               	goto	i1l1758
 21915  0C92                     i1l6323:	
 21916  0C92  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 21917  0C93  00FA               	movwf	??_do_I2C_TX_EMPTY
 21918  0C94  087A               	movf	??_do_I2C_TX_EMPTY,w
 21919  0C95  00F9               	movwf	rdBlkRegCompleteHandler@p
 21920  0C96  300B               	movlw	11
 21921  0C97  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 21922  0C98  0086               	movwf	6
 21923  0C99  0187               	clrf	7
 21924  0C9A  3F41               	moviw [1]fsr1
 21925  0C9B  008A               	movwf	10
 21926  0C9C  3F40               	moviw [0]fsr1
 21927  0C9D  000A               	callw
 21928  0C9E  318C               	pagesel	$
 21929  0C9F  00FB               	movwf	??_do_I2C_TX_EMPTY+1
 21930  0CA0  01FC               	clrf	??_do_I2C_TX_EMPTY+2
 21931                           
 21932                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21933                           ; Switch size 1, requested type "simple"
 21934                           ; Number of cases is 1, Range of values is 0 to 0
 21935                           ; switch strategies available:
 21936                           ; Name         Instructions Cycles
 21937                           ; simple_byte            4     3 (average)
 21938                           ; direct_byte            8     6 (fixed)
 21939                           ; jumptable            260     6 (fixed)
 21940                           ;	Chosen strategy is simple_byte
 21941  0CA1  087C               	movf	??_do_I2C_TX_EMPTY+2,w
 21942  0CA2  3A00               	xorlw	0	; case 0
 21943  0CA3  1903               	skipnz
 21944  0CA4  2CA6               	goto	i1l8635
 21945  0CA5  2C8E               	goto	i1l6317
 21946  0CA6                     i1l8635:	
 21947                           
 21948                           ; Switch size 1, requested type "simple"
 21949                           ; Number of cases is 4, Range of values is 1 to 4
 21950                           ; switch strategies available:
 21951                           ; Name         Instructions Cycles
 21952                           ; simple_byte           13     7 (average)
 21953                           ; direct_byte           17     9 (fixed)
 21954                           ; jumptable            263     9 (fixed)
 21955                           ;	Chosen strategy is simple_byte
 21956  0CA6  087B               	movf	??_do_I2C_TX_EMPTY+1,w
 21957  0CA7  3A01               	xorlw	1	; case 1
 21958  0CA8  1903               	skipnz
 21959  0CA9  2C8E               	goto	i1l6317
 21960  0CAA  3A03               	xorlw	3	; case 2
 21961  0CAB  1903               	skipnz
 21962  0CAC  2C85               	goto	i1l6307
 21963  0CAD  3A01               	xorlw	1	; case 3
 21964  0CAE  1903               	skipnz
 21965  0CAF  2C85               	goto	i1l6307
 21966  0CB0  3A07               	xorlw	7	; case 4
 21967  0CB1  1903               	skipnz
 21968  0CB2  2C89               	goto	i1l6311
 21969  0CB3  2C8E               	goto	i1l6317
 21970  0CB4                     i1l1758:	
 21971  0CB4  0008               	return
 21972  0CB5                     __end_of_do_I2C_TX_EMPTY:	
 21973                           
 21974                           	psect	text91
 21975  160F                     __ptext91:	
 21976 ;; *************** function _mssp1_setIRQ *****************
 21977 ;; Defined at:
 21978 ;;		line 59 in file "mcc_generated_files/i2c1_driver.c"
 21979 ;; Parameters:    Size  Location     Type
 21980 ;;		None
 21981 ;; Auto vars:     Size  Location     Type
 21982 ;;		None
 21983 ;; Return value:  Size  Location     Type
 21984 ;;                  1    wreg      void 
 21985 ;; Registers used:
 21986 ;;		None
 21987 ;; Tracked objects:
 21988 ;;		On entry : 0/0
 21989 ;;		On exit  : 0/0
 21990 ;;		Unchanged: 0/0
 21991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21996 ;;Total ram usage:        0 bytes
 21997 ;; Hardware stack levels used:    1
 21998 ;; This function calls:
 21999 ;;		Nothing
 22000 ;; This function is called by:
 22001 ;;		_do_I2C_TX_EMPTY
 22002 ;; This function uses a non-reentrant model
 22003 ;;
 22004                           
 22005                           
 22006                           ;psect for function _mssp1_setIRQ
 22007  160F                     _mssp1_setIRQ:	
 22008  160F                     i1l5663:	
 22009                           ;incstack = 0
 22010                           ; Regs used in _mssp1_setIRQ: []
 22011                           
 22012                           
 22013                           ;mcc_generated_files/i2c1_driver.c: 61:     else
 22014  160F  002E               	movlb	14	; select bank14
 22015  1610  140F               	bsf	15,0	;volatile
 22016  1611                     i1l1046:	
 22017  1611  0008               	return
 22018  1612                     __end_of_mssp1_setIRQ:	
 22019                           
 22020                           	psect	text92
 22021  1680                     __ptext92:	
 22022 ;; *************** function _i2c1_driver_isNACK *****************
 22023 ;; Defined at:
 22024 ;;		line 162 in file "mcc_generated_files/i2c1_driver.c"
 22025 ;; Parameters:    Size  Location     Type
 22026 ;;		None
 22027 ;; Auto vars:     Size  Location     Type
 22028 ;;		None
 22029 ;; Return value:  Size  Location     Type
 22030 ;;		None               void
 22031 ;; Registers used:
 22032 ;;		wreg, status,2, status,0
 22033 ;; Tracked objects:
 22034 ;;		On entry : 0/0
 22035 ;;		On exit  : 0/0
 22036 ;;		Unchanged: 0/0
 22037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22040 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22041 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22042 ;;Total ram usage:        1 bytes
 22043 ;; Hardware stack levels used:    1
 22044 ;; This function calls:
 22045 ;;		Nothing
 22046 ;; This function is called by:
 22047 ;;		_do_I2C_TX
 22048 ;;		_i2c_ISR
 22049 ;; This function uses a non-reentrant model
 22050 ;;
 22051                           
 22052                           
 22053                           ;psect for function _i2c1_driver_isNACK
 22054  1680                     _i2c1_driver_isNACK:	
 22055  1680                     i1l5667:	
 22056                           ;incstack = 0
 22057                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 22058                           
 22059                           
 22060                           ;mcc_generated_files/i2c1_driver.c: 164:     return SSP1CON2bits.ACKSTAT;
 22061  1680  0023               	movlb	3	; select bank3
 22062  1681  0E11               	swapf	17,w	;volatile
 22063  1682  0C89               	rrf	9,f
 22064  1683  0C89               	rrf	9,f
 22065  1684  3901               	andlw	1
 22066  1685  00F0               	movwf	??_i2c1_driver_isNACK
 22067  1686  0C70               	rrf	??_i2c1_driver_isNACK,w
 22068  1687                     i1l1081:	
 22069  1687  0008               	return
 22070  1688                     __end_of_i2c1_driver_isNACK:	
 22071                           
 22072                           	psect	text93
 22073  1633                     __ptext93:	
 22074 ;; *************** function _i2c1_driver_TXData *****************
 22075 ;; Defined at:
 22076 ;;		line 187 in file "mcc_generated_files/i2c1_driver.c"
 22077 ;; Parameters:    Size  Location     Type
 22078 ;;  d               1    wreg     unsigned char 
 22079 ;; Auto vars:     Size  Location     Type
 22080 ;;  d               1    0[COMMON] unsigned char 
 22081 ;; Return value:  Size  Location     Type
 22082 ;;                  1    wreg      void 
 22083 ;; Registers used:
 22084 ;;		wreg
 22085 ;; Tracked objects:
 22086 ;;		On entry : 0/0
 22087 ;;		On exit  : 0/0
 22088 ;;		Unchanged: 0/0
 22089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22091 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22093 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22094 ;;Total ram usage:        1 bytes
 22095 ;; Hardware stack levels used:    1
 22096 ;; This function calls:
 22097 ;;		Nothing
 22098 ;; This function is called by:
 22099 ;;		_do_I2C_SEND_ADR_READ
 22100 ;;		_do_I2C_SEND_ADR_WRITE
 22101 ;;		_do_I2C_TX
 22102 ;; This function uses a non-reentrant model
 22103 ;;
 22104                           
 22105                           
 22106                           ;psect for function _i2c1_driver_TXData
 22107  1633                     _i2c1_driver_TXData:	
 22108                           
 22109                           ;incstack = 0
 22110                           ; Regs used in _i2c1_driver_TXData: [wreg]
 22111                           ;i2c1_driver_TXData@d stored from wreg
 22112  1633  00F0               	movwf	i2c1_driver_TXData@d
 22113  1634                     i1l5677:	
 22114                           
 22115                           ;mcc_generated_files/i2c1_driver.c: 187: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 188: {;mcc_generated_files/i2c1_driver.c: 18
      +                          9:     SSP1BUF = d;
 22116  1634  0870               	movf	i2c1_driver_TXData@d,w
 22117  1635  0023               	movlb	3	; select bank3
 22118  1636  008C               	movwf	12	;volatile
 22119  1637                     i1l1096:	
 22120  1637  0008               	return
 22121  1638                     __end_of_i2c1_driver_TXData:	
 22122                           
 22123                           	psect	text94
 22124  160C                     __ptext94:	
 22125 ;; *************** function _i2c1_driver_getRXData *****************
 22126 ;; Defined at:
 22127 ;;		line 172 in file "mcc_generated_files/i2c1_driver.c"
 22128 ;; Parameters:    Size  Location     Type
 22129 ;;		None
 22130 ;; Auto vars:     Size  Location     Type
 22131 ;;		None
 22132 ;; Return value:  Size  Location     Type
 22133 ;;                  1    wreg      unsigned char 
 22134 ;; Registers used:
 22135 ;;		wreg
 22136 ;; Tracked objects:
 22137 ;;		On entry : 0/0
 22138 ;;		On exit  : 0/0
 22139 ;;		Unchanged: 0/0
 22140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22145 ;;Total ram usage:        0 bytes
 22146 ;; Hardware stack levels used:    1
 22147 ;; This function calls:
 22148 ;;		Nothing
 22149 ;; This function is called by:
 22150 ;;		_do_I2C_RX
 22151 ;; This function uses a non-reentrant model
 22152 ;;
 22153                           
 22154                           
 22155                           ;psect for function _i2c1_driver_getRXData
 22156  160C                     _i2c1_driver_getRXData:	
 22157  160C                     i1l5673:	
 22158                           ;incstack = 0
 22159                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 22160                           
 22161                           
 22162                           ;mcc_generated_files/i2c1_driver.c: 174:     return SSP1BUF;
 22163  160C  0023               	movlb	3	; select bank3
 22164  160D  080C               	movf	12,w	;volatile
 22165  160E                     i1l1087:	
 22166  160E  0008               	return
 22167  160F                     __end_of_i2c1_driver_getRXData:	
 22168                           
 22169                           	psect	text95
 22170  1627                     __ptext95:	
 22171 ;; *************** function _i2c1_driver_sendNACK *****************
 22172 ;; Defined at:
 22173 ;;		line 203 in file "mcc_generated_files/i2c1_driver.c"
 22174 ;; Parameters:    Size  Location     Type
 22175 ;;		None
 22176 ;; Auto vars:     Size  Location     Type
 22177 ;;		None
 22178 ;; Return value:  Size  Location     Type
 22179 ;;                  1    wreg      void 
 22180 ;; Registers used:
 22181 ;;		None
 22182 ;; Tracked objects:
 22183 ;;		On entry : 0/0
 22184 ;;		On exit  : 0/0
 22185 ;;		Unchanged: 0/0
 22186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22191 ;;Total ram usage:        0 bytes
 22192 ;; Hardware stack levels used:    1
 22193 ;; This function calls:
 22194 ;;		Nothing
 22195 ;; This function is called by:
 22196 ;;		_do_I2C_DO_NACK_STOP
 22197 ;;		_do_I2C_DO_NACK_RESTART
 22198 ;; This function uses a non-reentrant model
 22199 ;;
 22200                           
 22201                           
 22202                           ;psect for function _i2c1_driver_sendNACK
 22203  1627                     _i2c1_driver_sendNACK:	
 22204  1627                     i1l5353:	
 22205                           ;incstack = 0
 22206                           ; Regs used in _i2c1_driver_sendNACK: []
 22207                           
 22208                           
 22209                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKDT = 1;
 22210  1627  0023               	movlb	3	; select bank3
 22211  1628  1691               	bsf	17,5	;volatile
 22212                           
 22213                           ;mcc_generated_files/i2c1_driver.c: 206:     SSP1CON2bits.ACKEN = 1;
 22214  1629  1611               	bsf	17,4	;volatile
 22215  162A                     i1l1105:	
 22216  162A  0008               	return
 22217  162B                     __end_of_i2c1_driver_sendNACK:	
 22218                           
 22219                           	psect	text96
 22220  15FB                     __ptext96:	
 22221 ;; *************** function _i2c1_driver_resetBus *****************
 22222 ;; Defined at:
 22223 ;;		line 142 in file "mcc_generated_files/i2c1_driver.c"
 22224 ;; Parameters:    Size  Location     Type
 22225 ;;		None
 22226 ;; Auto vars:     Size  Location     Type
 22227 ;;		None
 22228 ;; Return value:  Size  Location     Type
 22229 ;;                  1    wreg      void 
 22230 ;; Registers used:
 22231 ;;		None
 22232 ;; Tracked objects:
 22233 ;;		On entry : 0/0
 22234 ;;		On exit  : 0/0
 22235 ;;		Unchanged: 0/0
 22236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22241 ;;Total ram usage:        0 bytes
 22242 ;; Hardware stack levels used:    1
 22243 ;; This function calls:
 22244 ;;		Nothing
 22245 ;; This function is called by:
 22246 ;;		_do_I2C_RESET
 22247 ;; This function uses a non-reentrant model
 22248 ;;
 22249                           
 22250                           
 22251                           ;psect for function _i2c1_driver_resetBus
 22252  15FB                     _i2c1_driver_resetBus:	
 22253  15FB                     i1l1069:	
 22254                           ;incstack = 0
 22255                           ; Regs used in _i2c1_driver_resetBus: []
 22256                           
 22257  15FB  0008               	return
 22258  15FC                     __end_of_i2c1_driver_resetBus:	
 22259                           
 22260                           	psect	text97
 22261  1609                     __ptext97:	
 22262 ;; *************** function _i2c1_driver_startRX *****************
 22263 ;; Defined at:
 22264 ;;		line 167 in file "mcc_generated_files/i2c1_driver.c"
 22265 ;; Parameters:    Size  Location     Type
 22266 ;;		None
 22267 ;; Auto vars:     Size  Location     Type
 22268 ;;		None
 22269 ;; Return value:  Size  Location     Type
 22270 ;;                  1    wreg      void 
 22271 ;; Registers used:
 22272 ;;		None
 22273 ;; Tracked objects:
 22274 ;;		On entry : 0/0
 22275 ;;		On exit  : 0/0
 22276 ;;		Unchanged: 0/0
 22277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22282 ;;Total ram usage:        0 bytes
 22283 ;; Hardware stack levels used:    1
 22284 ;; This function calls:
 22285 ;;		Nothing
 22286 ;; This function is called by:
 22287 ;;		_do_I2C_RCEN
 22288 ;; This function uses a non-reentrant model
 22289 ;;
 22290                           
 22291                           
 22292                           ;psect for function _i2c1_driver_startRX
 22293  1609                     _i2c1_driver_startRX:	
 22294  1609                     i1l5671:	
 22295                           ;incstack = 0
 22296                           ; Regs used in _i2c1_driver_startRX: []
 22297                           
 22298                           
 22299                           ;mcc_generated_files/i2c1_driver.c: 169:     SSP1CON2bits.RCEN = 1;
 22300  1609  0023               	movlb	3	; select bank3
 22301  160A  1591               	bsf	17,3	;volatile
 22302  160B                     i1l1084:	
 22303  160B  0008               	return
 22304  160C                     __end_of_i2c1_driver_startRX:	
 22305                           
 22306                           	psect	text98
 22307  08C1                     __ptext98:	
 22308 ;; *************** function _rdBlkRegCompleteHandler *****************
 22309 ;; Defined at:
 22310 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 22311 ;; Parameters:    Size  Location     Type
 22312 ;;  p               1    9[COMMON] PTR void 
 22313 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 22314 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 22315 ;; Auto vars:     Size  Location     Type
 22316 ;;		None
 22317 ;; Return value:  Size  Location     Type
 22318 ;;                  1    wreg      enum E358
 22319 ;; Registers used:
 22320 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22321 ;; Tracked objects:
 22322 ;;		On entry : 0/0
 22323 ;;		On exit  : 0/0
 22324 ;;		Unchanged: 0/0
 22325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22326 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22329 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22330 ;;Total ram usage:        1 bytes
 22331 ;; Hardware stack levels used:    1
 22332 ;; Hardware stack levels required when called:    2
 22333 ;; This function calls:
 22334 ;;		_i2c_setBuffer
 22335 ;;		_i2c_setDataCompleteCallback
 22336 ;; This function is called by:
 22337 ;;		_i2c_readDataBlock
 22338 ;;		_do_I2C_DO_ADDRESS_NACK
 22339 ;;		_do_I2C_TX
 22340 ;;		_do_I2C_RX
 22341 ;;		_do_I2C_TX_EMPTY
 22342 ;; This function uses a non-reentrant model
 22343 ;;
 22344                           
 22345                           
 22346                           ;psect for function _rdBlkRegCompleteHandler
 22347  08C1                     _rdBlkRegCompleteHandler:	
 22348  08C1                     i1l5765:	
 22349                           ;incstack = 0
 22350                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 22351                           
 22352                           
 22353                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
 22354  08C1  0879               	movf	rdBlkRegCompleteHandler@p,w
 22355  08C2  0086               	movwf	6
 22356  08C3  0187               	clrf	7
 22357  08C4  3F40               	moviw [0]fsr1
 22358  08C5  00F0               	movwf	i2c_setBuffer@bufferSize
 22359  08C6  3F41               	moviw [1]fsr1
 22360  08C7  00F1               	movwf	i2c_setBuffer@bufferSize+1
 22361  08C8  0879               	movf	rdBlkRegCompleteHandler@p,w
 22362  08C9  3E02               	addlw	2
 22363  08CA  0086               	movwf	6
 22364  08CB  0187               	clrf	7
 22365  08CC  0801               	movf	1,w
 22366  08CD  3197  27AE  3188   	fcall	_i2c_setBuffer
 22367                           
 22368                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 22369  08D0  3000               	movlw	0
 22370  08D1  00F5               	movwf	i2c_setDataCompleteCallback@cb
 22371  08D2  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 22372  08D3  01F7               	clrf	i2c_setDataCompleteCallback@p
 22373  08D4  3197  2768  3188   	fcall	_i2c_setDataCompleteCallback
 22374  08D7                     i1l5767:	
 22375                           
 22376                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
 22377  08D7  3002               	movlw	2
 22378  08D8                     i1l1942:	
 22379  08D8  0008               	return
 22380  08D9                     __end_of_rdBlkRegCompleteHandler:	
 22381                           
 22382                           	psect	text99
 22383  0831                     __ptext99:	
 22384 ;; *************** function _rd2RegCompleteHandler *****************
 22385 ;; Defined at:
 22386 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 22387 ;; Parameters:    Size  Location     Type
 22388 ;;  p               1    9[COMMON] PTR void 
 22389 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 22390 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 22391 ;; Auto vars:     Size  Location     Type
 22392 ;;		None
 22393 ;; Return value:  Size  Location     Type
 22394 ;;                  1    wreg      enum E358
 22395 ;; Registers used:
 22396 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22397 ;; Tracked objects:
 22398 ;;		On entry : 0/0
 22399 ;;		On exit  : 0/0
 22400 ;;		Unchanged: 0/0
 22401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22402 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22405 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22406 ;;Total ram usage:        1 bytes
 22407 ;; Hardware stack levels used:    1
 22408 ;; Hardware stack levels required when called:    2
 22409 ;; This function calls:
 22410 ;;		_i2c_setBuffer
 22411 ;;		_i2c_setDataCompleteCallback
 22412 ;; This function is called by:
 22413 ;;		_i2c_read2ByteRegister
 22414 ;;		_do_I2C_DO_ADDRESS_NACK
 22415 ;;		_do_I2C_TX
 22416 ;;		_do_I2C_RX
 22417 ;;		_do_I2C_TX_EMPTY
 22418 ;; This function uses a non-reentrant model
 22419 ;;
 22420                           
 22421                           
 22422                           ;psect for function _rd2RegCompleteHandler
 22423  0831                     _rd2RegCompleteHandler:	
 22424  0831                     i1l5749:	
 22425                           ;incstack = 0
 22426                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 22427                           
 22428                           
 22429                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
 22430  0831  3002               	movlw	2
 22431  0832  00F0               	movwf	i2c_setBuffer@bufferSize
 22432  0833  3000               	movlw	0
 22433  0834  00F1               	movwf	i2c_setBuffer@bufferSize+1
 22434  0835  0879               	movf	rd2RegCompleteHandler@p,w
 22435  0836  3197  27AE  3188   	fcall	_i2c_setBuffer
 22436  0839                     i1l5751:	
 22437                           
 22438                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 22439  0839  3000               	movlw	0
 22440  083A  00F5               	movwf	i2c_setDataCompleteCallback@cb
 22441  083B  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 22442  083C  01F7               	clrf	i2c_setDataCompleteCallback@p
 22443  083D  3197  2768  3188   	fcall	_i2c_setDataCompleteCallback
 22444  0840                     i1l5753:	
 22445                           
 22446                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
 22447  0840  3002               	movlw	2
 22448  0841                     i1l1918:	
 22449  0841  0008               	return
 22450  0842                     __end_of_rd2RegCompleteHandler:	
 22451                           
 22452                           	psect	text100
 22453  0820                     __ptext100:	
 22454 ;; *************** function _rd1RegCompleteHandler *****************
 22455 ;; Defined at:
 22456 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 22457 ;; Parameters:    Size  Location     Type
 22458 ;;  p               1    9[COMMON] PTR void 
 22459 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 22460 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 22461 ;; Auto vars:     Size  Location     Type
 22462 ;;		None
 22463 ;; Return value:  Size  Location     Type
 22464 ;;                  1    wreg      enum E358
 22465 ;; Registers used:
 22466 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22467 ;; Tracked objects:
 22468 ;;		On entry : 0/0
 22469 ;;		On exit  : 0/0
 22470 ;;		Unchanged: 0/0
 22471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22472 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22475 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22476 ;;Total ram usage:        1 bytes
 22477 ;; Hardware stack levels used:    1
 22478 ;; Hardware stack levels required when called:    2
 22479 ;; This function calls:
 22480 ;;		_i2c_setBuffer
 22481 ;;		_i2c_setDataCompleteCallback
 22482 ;; This function is called by:
 22483 ;;		_i2c_read1ByteRegister
 22484 ;;		_do_I2C_DO_ADDRESS_NACK
 22485 ;;		_do_I2C_TX
 22486 ;;		_do_I2C_RX
 22487 ;;		_do_I2C_TX_EMPTY
 22488 ;; This function uses a non-reentrant model
 22489 ;;
 22490                           
 22491                           
 22492                           ;psect for function _rd1RegCompleteHandler
 22493  0820                     _rd1RegCompleteHandler:	
 22494  0820                     i1l5741:	
 22495                           ;incstack = 0
 22496                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 22497                           
 22498                           
 22499                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
 22500  0820  3001               	movlw	1
 22501  0821  00F0               	movwf	i2c_setBuffer@bufferSize
 22502  0822  3000               	movlw	0
 22503  0823  00F1               	movwf	i2c_setBuffer@bufferSize+1
 22504  0824  0879               	movf	rd1RegCompleteHandler@p,w
 22505  0825  3197  27AE  3188   	fcall	_i2c_setBuffer
 22506  0828                     i1l5743:	
 22507                           
 22508                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 22509  0828  3000               	movlw	0
 22510  0829  00F5               	movwf	i2c_setDataCompleteCallback@cb
 22511  082A  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 22512  082B  01F7               	clrf	i2c_setDataCompleteCallback@p
 22513  082C  3197  2768  3188   	fcall	_i2c_setDataCompleteCallback
 22514  082F                     i1l5745:	
 22515                           
 22516                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
 22517  082F  3002               	movlw	2
 22518  0830                     i1l1903:	
 22519  0830  0008               	return
 22520  0831                     __end_of_rd1RegCompleteHandler:	
 22521                           
 22522                           	psect	text101
 22523  080F                     __ptext101:	
 22524 ;; *************** function _wr1RegCompleteHandler *****************
 22525 ;; Defined at:
 22526 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 22527 ;; Parameters:    Size  Location     Type
 22528 ;;  p               1    9[COMMON] PTR void 
 22529 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 22530 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 22531 ;; Auto vars:     Size  Location     Type
 22532 ;;		None
 22533 ;; Return value:  Size  Location     Type
 22534 ;;                  1    wreg      enum E358
 22535 ;; Registers used:
 22536 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22537 ;; Tracked objects:
 22538 ;;		On entry : 0/0
 22539 ;;		On exit  : 0/0
 22540 ;;		Unchanged: 0/0
 22541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22542 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22545 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22546 ;;Total ram usage:        1 bytes
 22547 ;; Hardware stack levels used:    1
 22548 ;; Hardware stack levels required when called:    2
 22549 ;; This function calls:
 22550 ;;		_i2c_setBuffer
 22551 ;;		_i2c_setDataCompleteCallback
 22552 ;; This function is called by:
 22553 ;;		_i2c_write1ByteRegister
 22554 ;;		_do_I2C_DO_ADDRESS_NACK
 22555 ;;		_do_I2C_TX
 22556 ;;		_do_I2C_RX
 22557 ;;		_do_I2C_TX_EMPTY
 22558 ;; This function uses a non-reentrant model
 22559 ;;
 22560                           
 22561                           
 22562                           ;psect for function _wr1RegCompleteHandler
 22563  080F                     _wr1RegCompleteHandler:	
 22564  080F                     i1l5733:	
 22565                           ;incstack = 0
 22566                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 22567                           
 22568                           
 22569                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
 22570  080F  3001               	movlw	1
 22571  0810  00F0               	movwf	i2c_setBuffer@bufferSize
 22572  0811  3000               	movlw	0
 22573  0812  00F1               	movwf	i2c_setBuffer@bufferSize+1
 22574  0813  0879               	movf	wr1RegCompleteHandler@p,w
 22575  0814  3197  27AE  3188   	fcall	_i2c_setBuffer
 22576  0817                     i1l5735:	
 22577                           
 22578                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 22579  0817  3000               	movlw	0
 22580  0818  00F5               	movwf	i2c_setDataCompleteCallback@cb
 22581  0819  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 22582  081A  01F7               	clrf	i2c_setDataCompleteCallback@p
 22583  081B  3197  2768  3188   	fcall	_i2c_setDataCompleteCallback
 22584  081E                     i1l5737:	
 22585                           
 22586                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
 22587  081E  3004               	movlw	4
 22588  081F                     i1l1882:	
 22589  081F  0008               	return
 22590  0820                     __end_of_wr1RegCompleteHandler:	
 22591                           
 22592                           	psect	text102
 22593  0002                     __ptext102:	
 22594 ;; *************** function _returnReset *****************
 22595 ;; Defined at:
 22596 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 22597 ;; Parameters:    Size  Location     Type
 22598 ;;  p               1    9[COMMON] PTR void 
 22599 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 22600 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 22601 ;; Auto vars:     Size  Location     Type
 22602 ;;		None
 22603 ;; Return value:  Size  Location     Type
 22604 ;;                  1    wreg      enum E12568
 22605 ;; Registers used:
 22606 ;;		wreg
 22607 ;; Tracked objects:
 22608 ;;		On entry : 0/0
 22609 ;;		On exit  : 0/0
 22610 ;;		Unchanged: 0/0
 22611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22612 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22615 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22616 ;;Total ram usage:        1 bytes
 22617 ;; Hardware stack levels used:    1
 22618 ;; This function calls:
 22619 ;;		Nothing
 22620 ;; This function is called by:
 22621 ;;		_i2c_open
 22622 ;;		_do_I2C_DO_ADDRESS_NACK
 22623 ;;		_do_I2C_TX
 22624 ;;		_do_I2C_RX
 22625 ;;		_do_I2C_TX_EMPTY
 22626 ;; This function uses a non-reentrant model
 22627 ;;
 22628                           
 22629                           
 22630                           ;psect for function _returnReset
 22631  0002                     _returnReset:	
 22632  0002                     i1l5729:	
 22633                           ;incstack = 0
 22634                           ; Regs used in _returnReset: [wreg]
 22635                           
 22636                           
 22637                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 22638  0002  3005               	movlw	5
 22639  0003                     i1l1777:	
 22640  0003  0008               	return
 22641  0004                     __end_of_returnReset:	
 22642                           
 22643                           	psect	text103
 22644  15FE                     __ptext103:	
 22645 ;; *************** function _returnStop *****************
 22646 ;; Defined at:
 22647 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 22648 ;; Parameters:    Size  Location     Type
 22649 ;;  p               1    9[COMMON] PTR void 
 22650 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 22651 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 22652 ;; Auto vars:     Size  Location     Type
 22653 ;;		None
 22654 ;; Return value:  Size  Location     Type
 22655 ;;                  1    wreg      enum E12568
 22656 ;; Registers used:
 22657 ;;		wreg
 22658 ;; Tracked objects:
 22659 ;;		On entry : 0/0
 22660 ;;		On exit  : 0/0
 22661 ;;		Unchanged: 0/0
 22662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22663 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22666 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22667 ;;Total ram usage:        1 bytes
 22668 ;; Hardware stack levels used:    1
 22669 ;; This function calls:
 22670 ;;		Nothing
 22671 ;; This function is called by:
 22672 ;;		_setCallBack
 22673 ;;		_i2c_open
 22674 ;;		_do_I2C_DO_ADDRESS_NACK
 22675 ;;		_do_I2C_TX
 22676 ;;		_do_I2C_RX
 22677 ;;		_do_I2C_TX_EMPTY
 22678 ;; This function uses a non-reentrant model
 22679 ;;
 22680                           
 22681                           
 22682                           ;psect for function _returnStop
 22683  15FE                     _returnStop:	
 22684  15FE                     i1l5725:	
 22685                           ;incstack = 0
 22686                           ; Regs used in _returnStop: [wreg]
 22687                           
 22688                           
 22689                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
 22690  15FE  3001               	movlw	1
 22691  15FF                     i1l1774:	
 22692  15FF  0008               	return
 22693  1600                     __end_of_returnStop:	
 22694                           
 22695                           	psect	text104
 22696  15FC                     __ptext104:	
 22697 ;; *************** function _i2c_restartWrite *****************
 22698 ;; Defined at:
 22699 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 22700 ;; Parameters:    Size  Location     Type
 22701 ;;  p               1    9[COMMON] PTR void 
 22702 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 22703 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 22704 ;; Auto vars:     Size  Location     Type
 22705 ;;		None
 22706 ;; Return value:  Size  Location     Type
 22707 ;;                  1    wreg      enum E358
 22708 ;; Registers used:
 22709 ;;		wreg
 22710 ;; Tracked objects:
 22711 ;;		On entry : 0/0
 22712 ;;		On exit  : 0/0
 22713 ;;		Unchanged: 0/0
 22714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22715 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22718 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22719 ;;Total ram usage:        1 bytes
 22720 ;; Hardware stack levels used:    1
 22721 ;; This function calls:
 22722 ;;		Nothing
 22723 ;; This function is called by:
 22724 ;;		_i2c_write1ByteRegister
 22725 ;;		_i2c_writeNBytes
 22726 ;;		_i2c_read1ByteRegister
 22727 ;;		_i2c_read2ByteRegister
 22728 ;;		_i2c_write2ByteRegister
 22729 ;;		_i2c_readDataBlock
 22730 ;;		_do_I2C_DO_ADDRESS_NACK
 22731 ;;		_do_I2C_TX
 22732 ;;		_do_I2C_RX
 22733 ;;		_do_I2C_TX_EMPTY
 22734 ;; This function uses a non-reentrant model
 22735 ;;
 22736                           
 22737                           
 22738                           ;psect for function _i2c_restartWrite
 22739  15FC                     _i2c_restartWrite:	
 22740  15FC                     i1l5655:	
 22741                           ;incstack = 0
 22742                           ; Regs used in _i2c_restartWrite: [wreg]
 22743                           
 22744                           
 22745                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
 22746  15FC  3003               	movlw	3
 22747  15FD                     i1l889:	
 22748  15FD  0008               	return
 22749  15FE                     __end_of_i2c_restartWrite:	
 22750                           
 22751                           	psect	text105
 22752  17EF                     __ptext105:	
 22753 ;; *************** function _wr2RegCompleteHandler *****************
 22754 ;; Defined at:
 22755 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 22756 ;; Parameters:    Size  Location     Type
 22757 ;;  p               1    9[COMMON] PTR void 
 22758 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 22759 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 22760 ;; Auto vars:     Size  Location     Type
 22761 ;;		None
 22762 ;; Return value:  Size  Location     Type
 22763 ;;                  1    wreg      enum E358
 22764 ;; Registers used:
 22765 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22766 ;; Tracked objects:
 22767 ;;		On entry : 0/0
 22768 ;;		On exit  : 0/0
 22769 ;;		Unchanged: 0/0
 22770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22771 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22774 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22775 ;;Total ram usage:        1 bytes
 22776 ;; Hardware stack levels used:    1
 22777 ;; Hardware stack levels required when called:    2
 22778 ;; This function calls:
 22779 ;;		_i2c_setBuffer
 22780 ;;		_i2c_setDataCompleteCallback
 22781 ;; This function is called by:
 22782 ;;		_i2c_write2ByteRegister
 22783 ;;		_do_I2C_DO_ADDRESS_NACK
 22784 ;;		_do_I2C_TX
 22785 ;;		_do_I2C_RX
 22786 ;;		_do_I2C_TX_EMPTY
 22787 ;; This function uses a non-reentrant model
 22788 ;;
 22789                           
 22790                           
 22791                           ;psect for function _wr2RegCompleteHandler
 22792  17EF                     _wr2RegCompleteHandler:	
 22793  17EF                     i1l5757:	
 22794                           ;incstack = 0
 22795                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 22796                           
 22797                           
 22798                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
 22799  17EF  3002               	movlw	2
 22800  17F0  00F0               	movwf	i2c_setBuffer@bufferSize
 22801  17F1  3000               	movlw	0
 22802  17F2  00F1               	movwf	i2c_setBuffer@bufferSize+1
 22803  17F3  0879               	movf	wr2RegCompleteHandler@p,w
 22804  17F4  3197  27AE  3197   	fcall	_i2c_setBuffer
 22805  17F7                     i1l5759:	
 22806                           
 22807                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 22808  17F7  3000               	movlw	0
 22809  17F8  00F5               	movwf	i2c_setDataCompleteCallback@cb
 22810  17F9  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 22811  17FA  01F7               	clrf	i2c_setDataCompleteCallback@p
 22812  17FB  3197  2768  3197   	fcall	_i2c_setDataCompleteCallback
 22813  17FE                     i1l5761:	
 22814                           
 22815                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
 22816  17FE  3004               	movlw	4
 22817  17FF                     i1l1930:	
 22818  17FF  0008               	return
 22819  1800                     __end_of_wr2RegCompleteHandler:	
 22820                           
 22821                           	psect	text106
 22822  1768                     __ptext106:	
 22823 ;; *************** function _i2c_setDataCompleteCallback *****************
 22824 ;; Defined at:
 22825 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 22826 ;; Parameters:    Size  Location     Type
 22827 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 22828 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 22829 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 22830 ;;  p               1    7[COMMON] PTR void 
 22831 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 22832 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 22833 ;; Auto vars:     Size  Location     Type
 22834 ;;		None
 22835 ;; Return value:  Size  Location     Type
 22836 ;;                  1    wreg      void 
 22837 ;; Registers used:
 22838 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22839 ;; Tracked objects:
 22840 ;;		On entry : 0/0
 22841 ;;		On exit  : 0/0
 22842 ;;		Unchanged: 0/0
 22843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22844 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22846 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22847 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22848 ;;Total ram usage:        4 bytes
 22849 ;; Hardware stack levels used:    1
 22850 ;; Hardware stack levels required when called:    1
 22851 ;; This function calls:
 22852 ;;		_setCallBack
 22853 ;; This function is called by:
 22854 ;;		_wr1RegCompleteHandler
 22855 ;;		_rd1RegCompleteHandler
 22856 ;;		_rd2RegCompleteHandler
 22857 ;;		_wr2RegCompleteHandler
 22858 ;;		_rdBlkRegCompleteHandler
 22859 ;;		_i2c_write1ByteRegister
 22860 ;;		_i2c_read1ByteRegister
 22861 ;;		_i2c_read2ByteRegister
 22862 ;;		_i2c_write2ByteRegister
 22863 ;;		_i2c_readDataBlock
 22864 ;; This function uses a non-reentrant model
 22865 ;;
 22866                           
 22867                           
 22868                           ;psect for function _i2c_setDataCompleteCallback
 22869  1768                     _i2c_setDataCompleteCallback:	
 22870  1768                     i1l5355:	
 22871                           ;incstack = 0
 22872                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 22873                           
 22874                           
 22875                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
 22876  1768  0876               	movf	i2c_setDataCompleteCallback@cb+1,w
 22877  1769  00F1               	movwf	setCallBack@cb+1
 22878  176A  0875               	movf	i2c_setDataCompleteCallback@cb,w
 22879  176B  00F0               	movwf	setCallBack@cb
 22880  176C  0877               	movf	i2c_setDataCompleteCallback@p,w
 22881  176D  00F8               	movwf	??_i2c_setDataCompleteCallback
 22882  176E  0878               	movf	??_i2c_setDataCompleteCallback,w
 22883  176F  00F2               	movwf	setCallBack@p
 22884  1770  3000               	movlw	0
 22885  1771  318A  22FF  3197   	fcall	_setCallBack
 22886  1774                     i1l1631:	
 22887  1774  0008               	return
 22888  1775                     __end_of_i2c_setDataCompleteCallback:	
 22889                           
 22890                           	psect	text107
 22891  0AFF                     __ptext107:	
 22892 ;; *************** function _setCallBack *****************
 22893 ;; Defined at:
 22894 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 22895 ;; Parameters:    Size  Location     Type
 22896 ;;  idx             1    wreg     enum E12740
 22897 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 22898 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 22899 ;;		 -> wr1RegCompleteHandler(1), i2c_restartWrite(1), Absolute function(1), 
 22900 ;;  p               1    2[COMMON] PTR void 
 22901 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 22902 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 22903 ;; Auto vars:     Size  Location     Type
 22904 ;;  idx             1    4[COMMON] enum E12740
 22905 ;; Return value:  Size  Location     Type
 22906 ;;                  1    wreg      void 
 22907 ;; Registers used:
 22908 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22909 ;; Tracked objects:
 22910 ;;		On entry : 0/0
 22911 ;;		On exit  : 0/0
 22912 ;;		Unchanged: 0/0
 22913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22914 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22915 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22916 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22917 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22918 ;;Total ram usage:        5 bytes
 22919 ;; Hardware stack levels used:    1
 22920 ;; This function calls:
 22921 ;;		Nothing
 22922 ;; This function is called by:
 22923 ;;		_i2c_setDataCompleteCallback
 22924 ;;		_i2c_setWriteCollisionCallback
 22925 ;;		_i2c_setAddressNACKCallback
 22926 ;;		_i2c_setDataNACKCallback
 22927 ;;		_i2c_setTimeOutCallback
 22928 ;; This function uses a non-reentrant model
 22929 ;;
 22930                           
 22931                           
 22932                           ;psect for function _setCallBack
 22933  0AFF                     _setCallBack:	
 22934                           
 22935                           ;incstack = 0
 22936                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 22937                           ;setCallBack@idx stored from wreg
 22938  0AFF  00F4               	movwf	setCallBack@idx
 22939  0B00                     i1l5165:	
 22940                           
 22941                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
 22942  0B00  0870               	movf	setCallBack@cb,w
 22943  0B01  0471               	iorwf	setCallBack@cb+1,w
 22944  0B02  1903               	btfsc	3,2
 22945  0B03  2B05               	goto	u248_21
 22946  0B04  2B06               	goto	u248_20
 22947  0B05                     u248_21:	
 22948  0B05  2B17               	goto	i1l5169
 22949  0B06                     u248_20:	
 22950  0B06                     i1l5167:	
 22951                           
 22952                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
 22953  0B06  3574               	lslf	setCallBack@idx,w
 22954  0B07  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 22955  0B08  0086               	movwf	6
 22956  0B09  0187               	clrf	7
 22957  0B0A  0870               	movf	setCallBack@cb,w
 22958  0B0B  3FC0               	movwi [0]fsr1
 22959  0B0C  0871               	movf	setCallBack@cb+1,w
 22960  0B0D  3FC1               	movwi [1]fsr1
 22961                           
 22962                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
 22963  0B0E  0872               	movf	setCallBack@p,w
 22964  0B0F  00F3               	movwf	??_setCallBack
 22965  0B10  0874               	movf	setCallBack@idx,w
 22966  0B11  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 22967  0B12  0086               	movwf	6
 22968  0B13  0187               	clrf	7
 22969  0B14  0873               	movf	??_setCallBack,w
 22970  0B15  0081               	movwf	1
 22971                           
 22972                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
 22973  0B16  2B24               	goto	i1l1782
 22974  0B17                     i1l5169:	
 22975                           
 22976                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
 22977  0B17  3574               	lslf	setCallBack@idx,w
 22978  0B18  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 22979  0B19  0086               	movwf	6
 22980  0B1A  0187               	clrf	7
 22981  0B1B  30FE               	movlw	low _returnStop
 22982  0B1C  3FC0               	movwi [0]fsr1
 22983  0B1D  3015               	movlw	high _returnStop
 22984  0B1E  3FC1               	movwi [1]fsr1
 22985                           
 22986                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
 22987  0B1F  0874               	movf	setCallBack@idx,w
 22988  0B20  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 22989  0B21  0086               	movwf	6
 22990  0B22  0187               	clrf	7
 22991  0B23  0181               	clrf	1
 22992  0B24                     i1l1782:	
 22993  0B24  0008               	return
 22994  0B25                     __end_of_setCallBack:	
 22995                           
 22996                           	psect	text108
 22997  17AE                     __ptext108:	
 22998 ;; *************** function _i2c_setBuffer *****************
 22999 ;; Defined at:
 23000 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 23001 ;; Parameters:    Size  Location     Type
 23002 ;;  buffer          1    wreg     PTR void 
 23003 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 23004 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 23005 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 23006 ;;  bufferSize      2    0[COMMON] unsigned int 
 23007 ;; Auto vars:     Size  Location     Type
 23008 ;;  buffer          1    3[COMMON] PTR void 
 23009 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 23010 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 23011 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 23012 ;; Return value:  Size  Location     Type
 23013 ;;                  1    wreg      void 
 23014 ;; Registers used:
 23015 ;;		wreg
 23016 ;; Tracked objects:
 23017 ;;		On entry : 0/0
 23018 ;;		On exit  : 0/0
 23019 ;;		Unchanged: 0/0
 23020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23021 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23022 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23023 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23024 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23025 ;;Total ram usage:        4 bytes
 23026 ;; Hardware stack levels used:    1
 23027 ;; This function calls:
 23028 ;;		Nothing
 23029 ;; This function is called by:
 23030 ;;		_wr1RegCompleteHandler
 23031 ;;		_rd1RegCompleteHandler
 23032 ;;		_rd2RegCompleteHandler
 23033 ;;		_wr2RegCompleteHandler
 23034 ;;		_rdBlkRegCompleteHandler
 23035 ;;		_i2c_write1ByteRegister
 23036 ;;		_i2c_writeNBytes
 23037 ;;		_i2c_read1ByteRegister
 23038 ;;		_i2c_read2ByteRegister
 23039 ;;		_i2c_write2ByteRegister
 23040 ;;		_i2c_readDataBlock
 23041 ;;		_i2c_readNBytes
 23042 ;; This function uses a non-reentrant model
 23043 ;;
 23044                           
 23045                           
 23046                           ;psect for function _i2c_setBuffer
 23047  17AE                     _i2c_setBuffer:	
 23048                           
 23049                           ;incstack = 0
 23050                           ; Regs used in _i2c_setBuffer: [wreg]
 23051                           ;i2c_setBuffer@buffer stored from wreg
 23052  17AE  00F3               	movwf	i2c_setBuffer@buffer
 23053  17AF                     i1l5357:	
 23054                           
 23055                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
 23056  17AF  0021               	movlb	1	; select bank1
 23057  17B0  1D20               	btfss	_i2c_status^(0+128),2
 23058  17B1  2FB3               	goto	u275_21
 23059  17B2  2FB4               	goto	u275_20
 23060  17B3                     u275_21:	
 23061  17B3  2FBD               	goto	i1l1661
 23062  17B4                     u275_20:	
 23063  17B4                     i1l5359:	
 23064                           
 23065                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
 23066  17B4  0873               	movf	i2c_setBuffer@buffer,w
 23067  17B5  00F2               	movwf	??_i2c_setBuffer
 23068  17B6  0872               	movf	??_i2c_setBuffer,w
 23069  17B7  00A2               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 23070                           
 23071                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
 23072  17B8  0871               	movf	i2c_setBuffer@bufferSize+1,w
 23073  17B9  00A4               	movwf	((_i2c_status+1)^(0+128)+3)
 23074  17BA  0870               	movf	i2c_setBuffer@bufferSize,w
 23075  17BB  00A3               	movwf	(_i2c_status^(0+128)+3)
 23076  17BC                     i1l5361:	
 23077                           
 23078                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
 23079  17BC  1120               	bcf	_i2c_status^(0+128),2
 23080  17BD                     i1l1661:	
 23081  17BD  0008               	return
 23082  17BE                     __end_of_i2c_setBuffer:	
 23083                           
 23084                           	psect	text109
 23085  1606                     __ptext109:	
 23086 ;; *************** function _i2c1_driver_stop *****************
 23087 ;; Defined at:
 23088 ;;		line 157 in file "mcc_generated_files/i2c1_driver.c"
 23089 ;; Parameters:    Size  Location     Type
 23090 ;;		None
 23091 ;; Auto vars:     Size  Location     Type
 23092 ;;		None
 23093 ;; Return value:  Size  Location     Type
 23094 ;;                  1    wreg      void 
 23095 ;; Registers used:
 23096 ;;		None
 23097 ;; Tracked objects:
 23098 ;;		On entry : 0/0
 23099 ;;		On exit  : 0/0
 23100 ;;		Unchanged: 0/0
 23101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23106 ;;Total ram usage:        0 bytes
 23107 ;; Hardware stack levels used:    1
 23108 ;; This function calls:
 23109 ;;		Nothing
 23110 ;; This function is called by:
 23111 ;;		_do_I2C_SEND_STOP
 23112 ;; This function uses a non-reentrant model
 23113 ;;
 23114                           
 23115                           
 23116                           ;psect for function _i2c1_driver_stop
 23117  1606                     _i2c1_driver_stop:	
 23118  1606                     i1l5351:	
 23119                           ;incstack = 0
 23120                           ; Regs used in _i2c1_driver_stop: []
 23121                           
 23122                           
 23123                           ;mcc_generated_files/i2c1_driver.c: 159:     SSP1CON2bits.PEN = 1;
 23124  1606  0023               	movlb	3	; select bank3
 23125  1607  1511               	bsf	17,2	;volatile
 23126  1608                     i1l1078:	
 23127  1608  0008               	return
 23128  1609                     __end_of_i2c1_driver_stop:	
 23129                           
 23130                           	psect	text110
 23131  1603                     __ptext110:	
 23132 ;; *************** function _i2c1_driver_restart *****************
 23133 ;; Defined at:
 23134 ;;		line 152 in file "mcc_generated_files/i2c1_driver.c"
 23135 ;; Parameters:    Size  Location     Type
 23136 ;;		None
 23137 ;; Auto vars:     Size  Location     Type
 23138 ;;		None
 23139 ;; Return value:  Size  Location     Type
 23140 ;;                  1    wreg      void 
 23141 ;; Registers used:
 23142 ;;		None
 23143 ;; Tracked objects:
 23144 ;;		On entry : 0/0
 23145 ;;		On exit  : 0/0
 23146 ;;		Unchanged: 0/0
 23147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23152 ;;Total ram usage:        0 bytes
 23153 ;; Hardware stack levels used:    1
 23154 ;; This function calls:
 23155 ;;		Nothing
 23156 ;; This function is called by:
 23157 ;;		_do_I2C_SEND_RESTART_READ
 23158 ;;		_do_I2C_SEND_RESTART_WRITE
 23159 ;;		_do_I2C_SEND_RESTART
 23160 ;; This function uses a non-reentrant model
 23161 ;;
 23162                           
 23163                           
 23164                           ;psect for function _i2c1_driver_restart
 23165  1603                     _i2c1_driver_restart:	
 23166  1603                     i1l5349:	
 23167                           ;incstack = 0
 23168                           ; Regs used in _i2c1_driver_restart: []
 23169                           
 23170                           
 23171                           ;mcc_generated_files/i2c1_driver.c: 154:     SSP1CON2bits.RSEN = 1;
 23172  1603  0023               	movlb	3	; select bank3
 23173  1604  1491               	bsf	17,1	;volatile
 23174  1605                     i1l1075:	
 23175  1605  0008               	return
 23176  1606                     __end_of_i2c1_driver_restart:	
 23177                           
 23178                           	psect	text111
 23179  1623                     __ptext111:	
 23180 ;; *************** function _i2c1_driver_sendACK *****************
 23181 ;; Defined at:
 23182 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
 23183 ;; Parameters:    Size  Location     Type
 23184 ;;		None
 23185 ;; Auto vars:     Size  Location     Type
 23186 ;;		None
 23187 ;; Return value:  Size  Location     Type
 23188 ;;                  1    wreg      void 
 23189 ;; Registers used:
 23190 ;;		None
 23191 ;; Tracked objects:
 23192 ;;		On entry : 0/0
 23193 ;;		On exit  : 0/0
 23194 ;;		Unchanged: 0/0
 23195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23200 ;;Total ram usage:        0 bytes
 23201 ;; Hardware stack levels used:    1
 23202 ;; This function calls:
 23203 ;;		Nothing
 23204 ;; This function is called by:
 23205 ;;		_do_I2C_DO_ACK
 23206 ;;		_do_I2C_RX
 23207 ;; This function uses a non-reentrant model
 23208 ;;
 23209                           
 23210                           
 23211                           ;psect for function _i2c1_driver_sendACK
 23212  1623                     _i2c1_driver_sendACK:	
 23213  1623                     i1l5679:	
 23214                           ;incstack = 0
 23215                           ; Regs used in _i2c1_driver_sendACK: []
 23216                           
 23217                           
 23218                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKDT = 0;
 23219  1623  0023               	movlb	3	; select bank3
 23220  1624  1291               	bcf	17,5	;volatile
 23221                           
 23222                           ;mcc_generated_files/i2c1_driver.c: 200:     SSP1CON2bits.ACKEN = 1;
 23223  1625  1611               	bsf	17,4	;volatile
 23224  1626                     i1l1102:	
 23225  1626  0008               	return
 23226  1627                     __end_of_i2c1_driver_sendACK:	
 23227                           
 23228                           	psect	text112
 23229  179F                     __ptext112:	
 23230 ;; *************** function _TMR2_ISR *****************
 23231 ;; Defined at:
 23232 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 23233 ;; Parameters:    Size  Location     Type
 23234 ;;		None
 23235 ;; Auto vars:     Size  Location     Type
 23236 ;;		None
 23237 ;; Return value:  Size  Location     Type
 23238 ;;                  1    wreg      void 
 23239 ;; Registers used:
 23240 ;;		wreg, status,2, status,0, pclath, cstack
 23241 ;; Tracked objects:
 23242 ;;		On entry : 0/0
 23243 ;;		On exit  : 0/0
 23244 ;;		Unchanged: 0/0
 23245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23250 ;;Total ram usage:        0 bytes
 23251 ;; Hardware stack levels used:    1
 23252 ;; Hardware stack levels required when called:    1
 23253 ;; This function calls:
 23254 ;;		Absolute function
 23255 ;;		_TMR2_DefaultInterruptHandler
 23256 ;;		_handler_clock_ms
 23257 ;; This function is called by:
 23258 ;;		_INTERRUPT_InterruptManager
 23259 ;; This function uses a non-reentrant model
 23260 ;;
 23261                           
 23262                           
 23263                           ;psect for function _TMR2_ISR
 23264  179F                     _TMR2_ISR:	
 23265  179F                     i1l6611:	
 23266                           ;incstack = 0
 23267                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 23268                           
 23269                           
 23270                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
 23271  179F  002E               	movlb	14	; select bank14
 23272  17A0  1090               	bcf	16,1	;volatile
 23273  17A1                     i1l6613:	
 23274                           
 23275                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
 23276  17A1  0021               	movlb	1	; select bank1
 23277  17A2  0860               	movf	_TMR2_InterruptHandler^(0+128),w
 23278  17A3  0461               	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
 23279  17A4  1903               	btfsc	3,2
 23280  17A5  2FA7               	goto	u368_21
 23281  17A6  2FA8               	goto	u368_20
 23282  17A7                     u368_21:	
 23283  17A7  2FAD               	goto	i1l1857
 23284  17A8                     u368_20:	
 23285  17A8                     i1l6615:	
 23286                           
 23287                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
 23288  17A8  0861               	movf	(_TMR2_InterruptHandler+1)^(0+128),w
 23289  17A9  008A               	movwf	10
 23290  17AA  0860               	movf	_TMR2_InterruptHandler^(0+128),w
 23291  17AB  000A               	callw
 23292  17AC  3197               	pagesel	$
 23293  17AD                     i1l1857:	
 23294  17AD  0008               	return
 23295  17AE                     __end_of_TMR2_ISR:	
 23296                           
 23297                           	psect	text113
 23298  15FA                     __ptext113:	
 23299 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 23300 ;; Defined at:
 23301 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 23302 ;; Parameters:    Size  Location     Type
 23303 ;;		None
 23304 ;; Auto vars:     Size  Location     Type
 23305 ;;		None
 23306 ;; Return value:  Size  Location     Type
 23307 ;;                  1    wreg      void 
 23308 ;; Registers used:
 23309 ;;		None
 23310 ;; Tracked objects:
 23311 ;;		On entry : 0/0
 23312 ;;		On exit  : 0/0
 23313 ;;		Unchanged: 0/0
 23314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23319 ;;Total ram usage:        0 bytes
 23320 ;; Hardware stack levels used:    1
 23321 ;; This function calls:
 23322 ;;		Nothing
 23323 ;; This function is called by:
 23324 ;;		_TMR2_Initialize
 23325 ;;		_TMR2_ISR
 23326 ;; This function uses a non-reentrant model
 23327 ;;
 23328                           
 23329                           
 23330                           ;psect for function _TMR2_DefaultInterruptHandler
 23331  15FA                     _TMR2_DefaultInterruptHandler:	
 23332  15FA                     i1l1863:	
 23333                           ;incstack = 0
 23334                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 23335                           
 23336  15FA  0008               	return
 23337  15FB                     __end_of_TMR2_DefaultInterruptHandler:	
 23338                           
 23339                           	psect	text114
 23340  174F                     __ptext114:	
 23341 ;; *************** function _handler_clock_ms *****************
 23342 ;; Defined at:
 23343 ;;		line 594 in file "main.c"
 23344 ;; Parameters:    Size  Location     Type
 23345 ;;		None
 23346 ;; Auto vars:     Size  Location     Type
 23347 ;;		None
 23348 ;; Return value:  Size  Location     Type
 23349 ;;                  1    wreg      void 
 23350 ;; Registers used:
 23351 ;;		wreg, status,2, status,0
 23352 ;; Tracked objects:
 23353 ;;		On entry : 0/0
 23354 ;;		On exit  : 0/0
 23355 ;;		Unchanged: 0/0
 23356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23359 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23360 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23361 ;;Total ram usage:        1 bytes
 23362 ;; Hardware stack levels used:    1
 23363 ;; This function calls:
 23364 ;;		Nothing
 23365 ;; This function is called by:
 23366 ;;		_main
 23367 ;;		_TMR2_ISR
 23368 ;; This function uses a non-reentrant model
 23369 ;;
 23370                           
 23371                           
 23372                           ;psect for function _handler_clock_ms
 23373  174F                     _handler_clock_ms:	
 23374  174F                     i1l5865:	
 23375                           ;incstack = 0
 23376                           ; Regs used in _handler_clock_ms: [wreg+status,2+status,0]
 23377                           
 23378                           
 23379                           ;main.c: 595:     clkms++;
 23380  174F  3001               	movlw	1
 23381  1750  00F0               	movwf	??_handler_clock_ms
 23382  1751  0870               	movf	??_handler_clock_ms,w
 23383  1752  07FD               	addwf	_clkms,f	;volatile
 23384  1753                     i1l5867:	
 23385                           
 23386                           ;main.c: 597:     if(clkms > 200){
 23387  1753  30C9               	movlw	201
 23388  1754  027D               	subwf	_clkms,w	;volatile
 23389  1755  1C03               	skipc
 23390  1756  2F58               	goto	u317_21
 23391  1757  2F59               	goto	u317_20
 23392  1758                     u317_21:	
 23393  1758  2F5A               	goto	i1l314
 23394  1759                     u317_20:	
 23395  1759                     i1l5869:	
 23396                           
 23397                           ;main.c: 598:         clkms = 0;
 23398  1759  01FD               	clrf	_clkms	;volatile
 23399  175A                     i1l314:	
 23400  175A  0008               	return
 23401  175B                     __end_of_handler_clock_ms:	
 23402                           
 23403                           	psect	text115
 23404  08AA                     __ptext115:	
 23405 ;; *************** function _TMR1_ISR *****************
 23406 ;; Defined at:
 23407 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 23408 ;; Parameters:    Size  Location     Type
 23409 ;;		None
 23410 ;; Auto vars:     Size  Location     Type
 23411 ;;		None
 23412 ;; Return value:  Size  Location     Type
 23413 ;;                  1    wreg      void 
 23414 ;; Registers used:
 23415 ;;		wreg, status,2, status,0, pclath, cstack
 23416 ;; Tracked objects:
 23417 ;;		On entry : 0/0
 23418 ;;		On exit  : 0/0
 23419 ;;		Unchanged: 0/0
 23420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23425 ;;Total ram usage:        0 bytes
 23426 ;; Hardware stack levels used:    1
 23427 ;; Hardware stack levels required when called:    1
 23428 ;; This function calls:
 23429 ;;		Absolute function
 23430 ;;		_TMR1_DefaultInterruptHandler
 23431 ;;		_TMR1_WriteTimer
 23432 ;;		_handler_clock_hms
 23433 ;; This function is called by:
 23434 ;;		_INTERRUPT_InterruptManager
 23435 ;; This function uses a non-reentrant model
 23436 ;;
 23437                           
 23438                           
 23439                           ;psect for function _TMR1_ISR
 23440  08AA                     _TMR1_ISR:	
 23441  08AA                     i1l6603:	
 23442                           ;incstack = 0
 23443                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 23444                           
 23445                           
 23446                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 23447  08AA  002E               	movlb	14	; select bank14
 23448  08AB  1010               	bcf	16,0	;volatile
 23449  08AC                     i1l6605:	
 23450                           
 23451                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 23452  08AC  0021               	movlb	1	; select bank1
 23453  08AD  0865               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 23454  08AE  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 23455  08AF  0864               	movf	_timer1ReloadVal^(0+128),w	;volatile
 23456  08B0  00F0               	movwf	TMR1_WriteTimer@timerVal
 23457  08B1  3197  27DE  3188   	fcall	_TMR1_WriteTimer
 23458  08B4                     i1l6607:	
 23459                           
 23460                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 23461  08B4  0021               	movlb	1	; select bank1
 23462  08B5  0862               	movf	_TMR1_InterruptHandler^(0+128),w
 23463  08B6  0463               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 23464  08B7  1903               	btfsc	3,2
 23465  08B8  28BA               	goto	u367_21
 23466  08B9  28BB               	goto	u367_20
 23467  08BA                     u367_21:	
 23468  08BA  28C0               	goto	i1l1503
 23469  08BB                     u367_20:	
 23470  08BB                     i1l6609:	
 23471                           
 23472                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 23473  08BB  0863               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 23474  08BC  008A               	movwf	10
 23475  08BD  0862               	movf	_TMR1_InterruptHandler^(0+128),w
 23476  08BE  000A               	callw
 23477  08BF  3188               	pagesel	$
 23478  08C0                     i1l1503:	
 23479  08C0  0008               	return
 23480  08C1                     __end_of_TMR1_ISR:	
 23481                           
 23482                           	psect	text116
 23483  15F9                     __ptext116:	
 23484 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 23485 ;; Defined at:
 23486 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 23487 ;; Parameters:    Size  Location     Type
 23488 ;;		None
 23489 ;; Auto vars:     Size  Location     Type
 23490 ;;		None
 23491 ;; Return value:  Size  Location     Type
 23492 ;;                  1    wreg      void 
 23493 ;; Registers used:
 23494 ;;		None
 23495 ;; Tracked objects:
 23496 ;;		On entry : 0/0
 23497 ;;		On exit  : 0/0
 23498 ;;		Unchanged: 0/0
 23499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23504 ;;Total ram usage:        0 bytes
 23505 ;; Hardware stack levels used:    1
 23506 ;; This function calls:
 23507 ;;		Nothing
 23508 ;; This function is called by:
 23509 ;;		_TMR1_Initialize
 23510 ;;		_TMR1_ISR
 23511 ;; This function uses a non-reentrant model
 23512 ;;
 23513                           
 23514                           
 23515                           ;psect for function _TMR1_DefaultInterruptHandler
 23516  15F9                     _TMR1_DefaultInterruptHandler:	
 23517  15F9                     i1l1509:	
 23518                           ;incstack = 0
 23519                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 23520                           
 23521  15F9  0008               	return
 23522  15FA                     __end_of_TMR1_DefaultInterruptHandler:	
 23523                           
 23524                           	psect	text117
 23525  0CB5                     __ptext117:	
 23526 ;; *************** function _handler_clock_hms *****************
 23527 ;; Defined at:
 23528 ;;		line 568 in file "main.c"
 23529 ;; Parameters:    Size  Location     Type
 23530 ;;		None
 23531 ;; Auto vars:     Size  Location     Type
 23532 ;;		None
 23533 ;; Return value:  Size  Location     Type
 23534 ;;                  1    wreg      void 
 23535 ;; Registers used:
 23536 ;;		wreg, status,2, status,0
 23537 ;; Tracked objects:
 23538 ;;		On entry : 0/0
 23539 ;;		On exit  : 0/0
 23540 ;;		Unchanged: 0/0
 23541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23544 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23545 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23546 ;;Total ram usage:        1 bytes
 23547 ;; Hardware stack levels used:    1
 23548 ;; This function calls:
 23549 ;;		Nothing
 23550 ;; This function is called by:
 23551 ;;		_main
 23552 ;;		_TMR1_ISR
 23553 ;; This function uses a non-reentrant model
 23554 ;;
 23555                           
 23556                           
 23557                           ;psect for function _handler_clock_hms
 23558  0CB5                     _handler_clock_hms:	
 23559  0CB5                     i1l5845:	
 23560                           ;incstack = 0
 23561                           ; Regs used in _handler_clock_hms: [wreg+status,2+status,0]
 23562                           
 23563                           
 23564                           ;main.c: 570:     if(!config_mode){
 23565  0CB5  0020               	movlb	0	; select bank0
 23566  0CB6  0858               	movf	_config_mode,w	;volatile
 23567  0CB7  1D03               	btfss	3,2
 23568  0CB8  2CBA               	goto	u312_21
 23569  0CB9  2CBB               	goto	u312_20
 23570  0CBA                     u312_21:	
 23571  0CBA  2CC6               	goto	i1l5849
 23572  0CBB                     u312_20:	
 23573  0CBB                     i1l5847:	
 23574  0CBB  1003               	clrc
 23575  0CBC  1F96               	btfss	22,7	;volatile
 23576  0CBD  1403               	setc
 23577  0CBE  1803               	btfsc	3,0
 23578  0CBF  2CC1               	goto	u313_21
 23579  0CC0  2CC4               	goto	u313_20
 23580  0CC1                     u313_21:	
 23581  0CC1  0020               	movlb	0	; select bank0
 23582  0CC2  1796               	bsf	22,7	;volatile
 23583  0CC3  2CC6               	goto	u314_24
 23584  0CC4                     u313_20:	
 23585  0CC4  0020               	movlb	0	; select bank0
 23586  0CC5  1396               	bcf	22,7	;volatile
 23587  0CC6                     u314_24:	
 23588  0CC6                     i1l5849:	
 23589                           
 23590                           ;main.c: 574:     last5s++;
 23591  0CC6  3001               	movlw	1
 23592  0CC7  00F0               	movwf	??_handler_clock_hms
 23593  0CC8  0870               	movf	??_handler_clock_hms,w
 23594  0CC9  07DA               	addwf	_last5s,f	;volatile
 23595  0CCA                     i1l5851:	
 23596                           
 23597                           ;main.c: 575:     seg++;
 23598  0CCA  3001               	movlw	1
 23599  0CCB  00F0               	movwf	??_handler_clock_hms
 23600  0CCC  0870               	movf	??_handler_clock_hms,w
 23601  0CCD  07DD               	addwf	_seg,f	;volatile
 23602  0CCE                     i1l5853:	
 23603                           
 23604                           ;main.c: 576:     if(seg >= 60) {
 23605  0CCE  303C               	movlw	60
 23606  0CCF  025D               	subwf	_seg,w	;volatile
 23607  0CD0  1C03               	skipc
 23608  0CD1  2CD3               	goto	u315_21
 23609  0CD2  2CD4               	goto	u315_20
 23610  0CD3                     u315_21:	
 23611  0CD3  2CE8               	goto	i1l310
 23612  0CD4                     u315_20:	
 23613  0CD4                     i1l5855:	
 23614                           
 23615                           ;main.c: 577:         clkm++;
 23616  0CD4  3001               	movlw	1
 23617  0CD5  00F0               	movwf	??_handler_clock_hms
 23618  0CD6  0870               	movf	??_handler_clock_hms,w
 23619  0CD7  07DE               	addwf	_clkm,f	;volatile
 23620                           
 23621                           ;main.c: 578:         last1m++;
 23622  0CD8  3001               	movlw	1
 23623  0CD9  00F0               	movwf	??_handler_clock_hms
 23624  0CDA  0870               	movf	??_handler_clock_hms,w
 23625  0CDB  07D9               	addwf	_last1m,f	;volatile
 23626  0CDC                     i1l5857:	
 23627                           
 23628                           ;main.c: 579:         seg = 0;
 23629  0CDC  01DD               	clrf	_seg	;volatile
 23630  0CDD                     i1l5859:	
 23631                           
 23632                           ;main.c: 580:         if(clkm >= 60) {
 23633  0CDD  303C               	movlw	60
 23634  0CDE  025E               	subwf	_clkm,w	;volatile
 23635  0CDF  1C03               	skipc
 23636  0CE0  2CE2               	goto	u316_21
 23637  0CE1  2CE3               	goto	u316_20
 23638  0CE2                     u316_21:	
 23639  0CE2  2CE8               	goto	i1l310
 23640  0CE3                     u316_20:	
 23641  0CE3                     i1l5861:	
 23642                           
 23643                           ;main.c: 581:             clkh++;
 23644  0CE3  3001               	movlw	1
 23645  0CE4  00F0               	movwf	??_handler_clock_hms
 23646  0CE5  0870               	movf	??_handler_clock_hms,w
 23647  0CE6  07DF               	addwf	_clkh,f	;volatile
 23648  0CE7                     i1l5863:	
 23649                           
 23650                           ;main.c: 582:             clkm = 0;
 23651  0CE7  01DE               	clrf	_clkm	;volatile
 23652  0CE8                     i1l310:	
 23653  0CE8  0008               	return
 23654  0CE9                     __end_of_handler_clock_hms:	
 23655                           
 23656                           	psect	text118
 23657  17DE                     __ptext118:	
 23658 ;; *************** function _TMR1_WriteTimer *****************
 23659 ;; Defined at:
 23660 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 23661 ;; Parameters:    Size  Location     Type
 23662 ;;  timerVal        2    0[COMMON] unsigned short 
 23663 ;; Auto vars:     Size  Location     Type
 23664 ;;		None
 23665 ;; Return value:  Size  Location     Type
 23666 ;;                  1    wreg      void 
 23667 ;; Registers used:
 23668 ;;		wreg, status,2
 23669 ;; Tracked objects:
 23670 ;;		On entry : 0/0
 23671 ;;		On exit  : 0/0
 23672 ;;		Unchanged: 0/0
 23673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23674 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23677 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23678 ;;Total ram usage:        2 bytes
 23679 ;; Hardware stack levels used:    1
 23680 ;; This function calls:
 23681 ;;		Nothing
 23682 ;; This function is called by:
 23683 ;;		_TMR1_ISR
 23684 ;;		_TMR1_Reload
 23685 ;; This function uses a non-reentrant model
 23686 ;;
 23687                           
 23688                           
 23689                           ;psect for function _TMR1_WriteTimer
 23690  17DE                     _TMR1_WriteTimer:	
 23691  17DE                     i1l6135:	
 23692                           ;incstack = 0
 23693                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 23694                           
 23695                           
 23696                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 23697  17DE  0024               	movlb	4	; select bank4
 23698  17DF  1D0E               	btfss	14,2	;volatile
 23699  17E0  2FE2               	goto	u330_21
 23700  17E1  2FE3               	goto	u330_20
 23701  17E2                     u330_21:	
 23702  17E2  2FEA               	goto	i1l6145
 23703  17E3                     u330_20:	
 23704  17E3                     i1l6137:	
 23705                           
 23706                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 23707  17E3  100E               	bcf	14,0	;volatile
 23708  17E4                     i1l6139:	
 23709                           
 23710                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 23711  17E4  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 23712  17E5  008D               	movwf	13	;volatile
 23713  17E6                     i1l6141:	
 23714                           
 23715                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 23716  17E6  0870               	movf	TMR1_WriteTimer@timerVal,w
 23717  17E7  008C               	movwf	12	;volatile
 23718  17E8                     i1l6143:	
 23719                           
 23720                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 23721  17E8  140E               	bsf	14,0	;volatile
 23722                           
 23723                           ;mcc_generated_files/tmr1.c: 140:     }
 23724  17E9  2FEE               	goto	i1l1490
 23725  17EA                     i1l6145:	
 23726                           
 23727                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 23728  17EA  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 23729  17EB  008D               	movwf	13	;volatile
 23730  17EC                     i1l6147:	
 23731                           
 23732                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 23733  17EC  0870               	movf	TMR1_WriteTimer@timerVal,w
 23734  17ED  008C               	movwf	12	;volatile
 23735  17EE                     i1l1490:	
 23736  17EE  0008               	return
 23737  17EF                     __end_of_TMR1_WriteTimer:	
 23738                           
 23739                           	psect	text119
 23740  1790                     __ptext119:	
 23741 ;; *************** function _TMR0_ISR *****************
 23742 ;; Defined at:
 23743 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 23744 ;; Parameters:    Size  Location     Type
 23745 ;;		None
 23746 ;; Auto vars:     Size  Location     Type
 23747 ;;		None
 23748 ;; Return value:  Size  Location     Type
 23749 ;;                  1    wreg      void 
 23750 ;; Registers used:
 23751 ;;		wreg, status,2, status,0, pclath, cstack
 23752 ;; Tracked objects:
 23753 ;;		On entry : 0/0
 23754 ;;		On exit  : 0/0
 23755 ;;		Unchanged: 0/0
 23756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23761 ;;Total ram usage:        0 bytes
 23762 ;; Hardware stack levels used:    1
 23763 ;; Hardware stack levels required when called:    2
 23764 ;; This function calls:
 23765 ;;		Absolute function
 23766 ;;		_ISR_3s
 23767 ;;		_TMR0_DefaultInterruptHandler
 23768 ;; This function is called by:
 23769 ;;		_INTERRUPT_InterruptManager
 23770 ;; This function uses a non-reentrant model
 23771 ;;
 23772                           
 23773                           
 23774                           ;psect for function _TMR0_ISR
 23775  1790                     _TMR0_ISR:	
 23776  1790                     i1l6597:	
 23777                           ;incstack = 0
 23778                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 23779                           
 23780                           
 23781                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 23782  1790  002E               	movlb	14	; select bank14
 23783  1791  128C               	bcf	12,5	;volatile
 23784  1792                     i1l6599:	
 23785                           
 23786                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 23787  1792  0021               	movlb	1	; select bank1
 23788  1793  0866               	movf	_TMR0_InterruptHandler^(0+128),w
 23789  1794  0467               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 23790  1795  1903               	btfsc	3,2
 23791  1796  2F98               	goto	u366_21
 23792  1797  2F99               	goto	u366_20
 23793  1798                     u366_21:	
 23794  1798  2F9E               	goto	i1l1439
 23795  1799                     u366_20:	
 23796  1799                     i1l6601:	
 23797                           
 23798                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 23799  1799  0867               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 23800  179A  008A               	movwf	10
 23801  179B  0866               	movf	_TMR0_InterruptHandler^(0+128),w
 23802  179C  000A               	callw
 23803  179D  3197               	pagesel	$
 23804  179E                     i1l1439:	
 23805  179E  0008               	return
 23806  179F                     __end_of_TMR0_ISR:	
 23807                           
 23808                           	psect	text120
 23809  0909                     __ptext120:	
 23810 ;; *************** function _ISR_3s *****************
 23811 ;; Defined at:
 23812 ;;		line 153 in file "main.c"
 23813 ;; Parameters:    Size  Location     Type
 23814 ;;		None
 23815 ;; Auto vars:     Size  Location     Type
 23816 ;;		None
 23817 ;; Return value:  Size  Location     Type
 23818 ;;                  1    wreg      void 
 23819 ;; Registers used:
 23820 ;;		wreg, status,2, status,0, pclath, cstack
 23821 ;; Tracked objects:
 23822 ;;		On entry : 0/0
 23823 ;;		On exit  : 0/0
 23824 ;;		Unchanged: 0/0
 23825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23828 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23829 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23830 ;;Total ram usage:        1 bytes
 23831 ;; Hardware stack levels used:    1
 23832 ;; Hardware stack levels required when called:    1
 23833 ;; This function calls:
 23834 ;;		_TMR0_StopTimer
 23835 ;;		i1_PWM6_LoadDutyValue
 23836 ;; This function is called by:
 23837 ;;		_main
 23838 ;;		_TMR0_ISR
 23839 ;; This function uses a non-reentrant model
 23840 ;;
 23841                           
 23842                           
 23843                           ;psect for function _ISR_3s
 23844  0909                     _ISR_3s:	
 23845  0909                     i1l5771:	
 23846                           ;incstack = 0
 23847                           ; Regs used in _ISR_3s: [wreg+status,2+status,0+pclath+cstack]
 23848                           
 23849                           
 23850                           ;main.c: 155:     if (threshold){
 23851  0909  0021               	movlb	1	; select bank1
 23852  090A  0845               	movf	_threshold^(0+128),w
 23853  090B  0446               	iorwf	(_threshold+1)^(0+128),w
 23854  090C  1903               	btfsc	3,2
 23855  090D  290F               	goto	u304_21
 23856  090E  2910               	goto	u304_20
 23857  090F                     u304_21:	
 23858  090F  291C               	goto	i1l186
 23859  0910                     u304_20:	
 23860  0910                     i1l5773:	
 23861                           
 23862                           ;main.c: 156:         PWM6_LoadDutyValue(1023);
 23863  0910  30FF               	movlw	255
 23864  0911  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 23865  0912  3003               	movlw	3
 23866  0913  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 23867  0914  3188  2068  3189   	fcall	i1_PWM6_LoadDutyValue
 23868  0917                     i1l5775:	
 23869                           
 23870                           ;main.c: 157:         alarm = 1;
 23871  0917  3001               	movlw	1
 23872  0918  00F4               	movwf	??_ISR_3s
 23873  0919  0874               	movf	??_ISR_3s,w
 23874  091A  0020               	movlb	0	; select bank0
 23875  091B  00D7               	movwf	_alarm	;volatile
 23876  091C                     i1l186:	
 23877                           ;main.c: 159:     }
 23878                           
 23879                           
 23880                           ;main.c: 161:     TMR0_StopTimer();
 23881  091C  3196  2600  3189   	fcall	_TMR0_StopTimer
 23882  091F                     i1l5777:	
 23883                           
 23884                           ;main.c: 162:     PIE0bits.TMR0IE = 0;
 23885  091F  002E               	movlb	14	; select bank14
 23886  0920  1296               	bcf	22,5	;volatile
 23887  0921                     i1l187:	
 23888  0921  0008               	return
 23889  0922                     __end_of_ISR_3s:	
 23890                           
 23891                           	psect	text121
 23892  15F8                     __ptext121:	
 23893 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 23894 ;; Defined at:
 23895 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 23896 ;; Parameters:    Size  Location     Type
 23897 ;;		None
 23898 ;; Auto vars:     Size  Location     Type
 23899 ;;		None
 23900 ;; Return value:  Size  Location     Type
 23901 ;;                  1    wreg      void 
 23902 ;; Registers used:
 23903 ;;		None
 23904 ;; Tracked objects:
 23905 ;;		On entry : 0/0
 23906 ;;		On exit  : 0/0
 23907 ;;		Unchanged: 0/0
 23908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23913 ;;Total ram usage:        0 bytes
 23914 ;; Hardware stack levels used:    1
 23915 ;; This function calls:
 23916 ;;		Nothing
 23917 ;; This function is called by:
 23918 ;;		_TMR0_Initialize
 23919 ;;		_TMR0_ISR
 23920 ;; This function uses a non-reentrant model
 23921 ;;
 23922                           
 23923                           
 23924                           ;psect for function _TMR0_DefaultInterruptHandler
 23925  15F8                     _TMR0_DefaultInterruptHandler:	
 23926  15F8                     i1l1445:	
 23927                           ;incstack = 0
 23928                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 23929                           
 23930  15F8  0008               	return
 23931  15F9                     __end_of_TMR0_DefaultInterruptHandler:	
 23932                           
 23933                           	psect	text122
 23934  1600                     __ptext122:	
 23935 ;; *************** function _TMR0_StopTimer *****************
 23936 ;; Defined at:
 23937 ;;		line 93 in file "mcc_generated_files/tmr0.c"
 23938 ;; Parameters:    Size  Location     Type
 23939 ;;		None
 23940 ;; Auto vars:     Size  Location     Type
 23941 ;;		None
 23942 ;; Return value:  Size  Location     Type
 23943 ;;                  1    wreg      void 
 23944 ;; Registers used:
 23945 ;;		None
 23946 ;; Tracked objects:
 23947 ;;		On entry : 0/0
 23948 ;;		On exit  : 0/0
 23949 ;;		Unchanged: 0/0
 23950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23955 ;;Total ram usage:        0 bytes
 23956 ;; Hardware stack levels used:    1
 23957 ;; This function calls:
 23958 ;;		Nothing
 23959 ;; This function is called by:
 23960 ;;		_ISR_3s
 23961 ;; This function uses a non-reentrant model
 23962 ;;
 23963                           
 23964                           
 23965                           ;psect for function _TMR0_StopTimer
 23966  1600                     _TMR0_StopTimer:	
 23967  1600                     i1l5457:	
 23968                           ;incstack = 0
 23969                           ; Regs used in _TMR0_StopTimer: []
 23970                           
 23971                           
 23972                           ;mcc_generated_files/tmr0.c: 96:     T0CON0bits.T0EN = 0;
 23973  1600  0020               	movlb	0	; select bank0
 23974  1601  139E               	bcf	30,7	;volatile
 23975  1602                     i1l1426:	
 23976  1602  0008               	return
 23977  1603                     __end_of_TMR0_StopTimer:	
 23978                           
 23979                           	psect	text123
 23980  1660                     __ptext123:	
 23981 ;; *************** function _INT_ISR *****************
 23982 ;; Defined at:
 23983 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 23984 ;; Parameters:    Size  Location     Type
 23985 ;;		None
 23986 ;; Auto vars:     Size  Location     Type
 23987 ;;		None
 23988 ;; Return value:  Size  Location     Type
 23989 ;;                  1    wreg      void 
 23990 ;; Registers used:
 23991 ;;		wreg, status,2, status,0, pclath, cstack
 23992 ;; Tracked objects:
 23993 ;;		On entry : 0/0
 23994 ;;		On exit  : 0/0
 23995 ;;		Unchanged: 0/0
 23996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24001 ;;Total ram usage:        0 bytes
 24002 ;; Hardware stack levels used:    1
 24003 ;; Hardware stack levels required when called:    3
 24004 ;; This function calls:
 24005 ;;		_INT_CallBack
 24006 ;; This function is called by:
 24007 ;;		_INTERRUPT_InterruptManager
 24008 ;; This function uses a non-reentrant model
 24009 ;;
 24010                           
 24011                           
 24012                           ;psect for function _INT_ISR
 24013  1660                     _INT_ISR:	
 24014  1660                     i1l6593:	
 24015                           ;incstack = 0
 24016                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 24017                           
 24018                           
 24019                           ;mcc_generated_files/ext_int.c: 34:     (PIR0bits.INTF = 0);
 24020  1660  002E               	movlb	14	; select bank14
 24021  1661  100C               	bcf	12,0	;volatile
 24022  1662                     i1l6595:	
 24023                           
 24024                           ;mcc_generated_files/ext_int.c: 37:     INT_CallBack();
 24025  1662  3197  275B  3196   	fcall	_INT_CallBack
 24026  1665                     i1l867:	
 24027  1665  0008               	return
 24028  1666                     __end_of_INT_ISR:	
 24029                           
 24030                           	psect	text124
 24031  175B                     __ptext124:	
 24032 ;; *************** function _INT_CallBack *****************
 24033 ;; Defined at:
 24034 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 24035 ;; Parameters:    Size  Location     Type
 24036 ;;		None
 24037 ;; Auto vars:     Size  Location     Type
 24038 ;;		None
 24039 ;; Return value:  Size  Location     Type
 24040 ;;                  1    wreg      void 
 24041 ;; Registers used:
 24042 ;;		wreg, status,2, status,0, pclath, cstack
 24043 ;; Tracked objects:
 24044 ;;		On entry : 0/0
 24045 ;;		On exit  : 0/0
 24046 ;;		Unchanged: 0/0
 24047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24052 ;;Total ram usage:        0 bytes
 24053 ;; Hardware stack levels used:    1
 24054 ;; Hardware stack levels required when called:    2
 24055 ;; This function calls:
 24056 ;;		Absolute function
 24057 ;;		_INT_DefaultInterruptHandler
 24058 ;;		_sw1_EXT
 24059 ;; This function is called by:
 24060 ;;		_INT_ISR
 24061 ;; This function uses a non-reentrant model
 24062 ;;
 24063                           
 24064                           
 24065                           ;psect for function _INT_CallBack
 24066  175B                     _INT_CallBack:	
 24067  175B                     i1l5993:	
 24068                           ;incstack = 0
 24069                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 24070                           
 24071                           
 24072                           ;mcc_generated_files/ext_int.c: 44:     if(INT_InterruptHandler)
 24073  175B  0021               	movlb	1	; select bank1
 24074  175C  0868               	movf	_INT_InterruptHandler^(0+128),w
 24075  175D  0469               	iorwf	(_INT_InterruptHandler+1)^(0+128),w
 24076  175E  1903               	btfsc	3,2
 24077  175F  2F61               	goto	u329_21
 24078  1760  2F62               	goto	u329_20
 24079  1761                     u329_21:	
 24080  1761  2F67               	goto	i1l871
 24081  1762                     u329_20:	
 24082  1762                     i1l5995:	
 24083                           
 24084                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          _InterruptHandler();
 24085  1762  0869               	movf	(_INT_InterruptHandler+1)^(0+128),w
 24086  1763  008A               	movwf	10
 24087  1764  0868               	movf	_INT_InterruptHandler^(0+128),w
 24088  1765  000A               	callw
 24089  1766  3197               	pagesel	$
 24090  1767                     i1l871:	
 24091  1767  0008               	return
 24092  1768                     __end_of_INT_CallBack:	
 24093                           
 24094                           	psect	text125
 24095  15F7                     __ptext125:	
 24096 ;; *************** function _INT_DefaultInterruptHandler *****************
 24097 ;; Defined at:
 24098 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 24099 ;; Parameters:    Size  Location     Type
 24100 ;;		None
 24101 ;; Auto vars:     Size  Location     Type
 24102 ;;		None
 24103 ;; Return value:  Size  Location     Type
 24104 ;;                  1    wreg      void 
 24105 ;; Registers used:
 24106 ;;		None
 24107 ;; Tracked objects:
 24108 ;;		On entry : 0/0
 24109 ;;		On exit  : 0/0
 24110 ;;		Unchanged: 0/0
 24111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24116 ;;Total ram usage:        0 bytes
 24117 ;; Hardware stack levels used:    1
 24118 ;; This function calls:
 24119 ;;		Nothing
 24120 ;; This function is called by:
 24121 ;;		_EXT_INT_Initialize
 24122 ;;		_INT_CallBack
 24123 ;; This function uses a non-reentrant model
 24124 ;;
 24125                           
 24126                           
 24127                           ;psect for function _INT_DefaultInterruptHandler
 24128  15F7                     _INT_DefaultInterruptHandler:	
 24129  15F7                     i1l877:	
 24130                           ;incstack = 0
 24131                           ; Regs used in _INT_DefaultInterruptHandler: []
 24132                           
 24133  15F7  0008               	return
 24134  15F8                     __end_of_INT_DefaultInterruptHandler:	
 24135                           
 24136                           	psect	text126
 24137  0ADA                     __ptext126:	
 24138 ;; *************** function _sw1_EXT *****************
 24139 ;; Defined at:
 24140 ;;		line 131 in file "main.c"
 24141 ;; Parameters:    Size  Location     Type
 24142 ;;		None
 24143 ;; Auto vars:     Size  Location     Type
 24144 ;;		None
 24145 ;; Return value:  Size  Location     Type
 24146 ;;                  1    wreg      void 
 24147 ;; Registers used:
 24148 ;;		wreg, status,2, status,0, pclath, cstack
 24149 ;; Tracked objects:
 24150 ;;		On entry : 0/0
 24151 ;;		On exit  : 0/0
 24152 ;;		Unchanged: 0/0
 24153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24156 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24157 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24158 ;;Total ram usage:        1 bytes
 24159 ;; Hardware stack levels used:    1
 24160 ;; Hardware stack levels required when called:    1
 24161 ;; This function calls:
 24162 ;;		i1_PWM6_LoadDutyValue
 24163 ;;		i1_checkDebounceSW1
 24164 ;; This function is called by:
 24165 ;;		_main
 24166 ;;		_INT_CallBack
 24167 ;; This function uses a non-reentrant model
 24168 ;;
 24169                           
 24170                           
 24171                           ;psect for function _sw1_EXT
 24172  0ADA                     _sw1_EXT:	
 24173  0ADA                     i1l5443:	
 24174                           ;incstack = 0
 24175                           ; Regs used in _sw1_EXT: [wreg+status,2+status,0+pclath+cstack]
 24176                           
 24177                           
 24178                           ;main.c: 133:     if(checkDebounceSW1()){
 24179  0ADA  3186  26F3  318A   	fcall	i1_checkDebounceSW1
 24180  0ADD  3A00               	xorlw	0
 24181  0ADE  1903               	skipnz
 24182  0ADF  2AE1               	goto	u291_21
 24183  0AE0  2AE2               	goto	u291_20
 24184  0AE1                     u291_21:	
 24185  0AE1  2AFE               	goto	i1l183
 24186  0AE2                     u291_20:	
 24187  0AE2                     i1l5445:	
 24188                           
 24189                           ;main.c: 134:         if (alarm == 1){
 24190  0AE2  0020               	movlb	0	; select bank0
 24191  0AE3  0357               	decf	_alarm,w	;volatile
 24192  0AE4  1D03               	btfss	3,2
 24193  0AE5  2AE7               	goto	u292_21
 24194  0AE6  2AE8               	goto	u292_20
 24195  0AE7                     u292_21:	
 24196  0AE7  2AF5               	goto	i1l5453
 24197  0AE8                     u292_20:	
 24198  0AE8                     i1l5447:	
 24199                           
 24200                           ;main.c: 135:             alarm = 0;
 24201  0AE8  01D7               	clrf	_alarm	;volatile
 24202  0AE9                     i1l5449:	
 24203                           
 24204                           ;main.c: 136:             PWM6_LoadDutyValue(0);
 24205  0AE9  3000               	movlw	0
 24206  0AEA  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 24207  0AEB  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 24208  0AEC  3188  2068  318A   	fcall	i1_PWM6_LoadDutyValue
 24209  0AEF                     i1l5451:	
 24210                           
 24211                           ;main.c: 137:             last_ms = clkms;
 24212  0AEF  087D               	movf	_clkms,w	;volatile
 24213  0AF0  00F7               	movwf	??_sw1_EXT
 24214  0AF1  0877               	movf	??_sw1_EXT,w
 24215  0AF2  0020               	movlb	0	; select bank0
 24216  0AF3  00DC               	movwf	_last_ms
 24217                           
 24218                           ;main.c: 138:         }
 24219  0AF4  2AFE               	goto	i1l183
 24220  0AF5                     i1l5453:	
 24221                           
 24222                           ;main.c: 140:             if(config_mode == 0){
 24223  0AF5  0858               	movf	_config_mode,w	;volatile
 24224  0AF6  1D03               	btfss	3,2
 24225  0AF7  2AF9               	goto	u293_21
 24226  0AF8  2AFA               	goto	u293_20
 24227  0AF9                     u293_21:	
 24228  0AF9  2AFE               	goto	i1l183
 24229  0AFA                     u293_20:	
 24230  0AFA                     i1l5455:	
 24231                           
 24232                           ;main.c: 141:                 config_mode = 1;
 24233  0AFA  3001               	movlw	1
 24234  0AFB  00F7               	movwf	??_sw1_EXT
 24235  0AFC  0877               	movf	??_sw1_EXT,w
 24236  0AFD  00D8               	movwf	_config_mode	;volatile
 24237  0AFE                     i1l183:	
 24238  0AFE  0008               	return
 24239  0AFF                     __end_of_sw1_EXT:	
 24240                           
 24241                           	psect	text127
 24242  06F3                     __ptext127:	
 24243 ;; *************** function i1_checkDebounceSW1 *****************
 24244 ;; Defined at:
 24245 ;;		line 609 in file "main.c"
 24246 ;; Parameters:    Size  Location     Type
 24247 ;;		None
 24248 ;; Auto vars:     Size  Location     Type
 24249 ;;		None
 24250 ;; Return value:  Size  Location     Type
 24251 ;;                  1    wreg      unsigned char 
 24252 ;; Registers used:
 24253 ;;		wreg, status,2, status,0
 24254 ;; Tracked objects:
 24255 ;;		On entry : 0/0
 24256 ;;		On exit  : 0/0
 24257 ;;		Unchanged: 0/0
 24258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24261 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24262 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24263 ;;Total ram usage:        7 bytes
 24264 ;; Hardware stack levels used:    1
 24265 ;; This function calls:
 24266 ;;		Nothing
 24267 ;; This function is called by:
 24268 ;;		_sw1_EXT
 24269 ;; This function uses a non-reentrant model
 24270 ;;
 24271                           
 24272                           
 24273                           ;psect for function i1_checkDebounceSW1
 24274  06F3                     i1_checkDebounceSW1:	
 24275  06F3                     i1l5415:	
 24276                           ;incstack = 0
 24277                           ; Regs used in i1_checkDebounceSW1: [wreg+status,2+status,0]
 24278                           
 24279                           
 24280                           ;main.c: 610:     PIE4bits.TMR1IE = 0;
 24281  06F3  002E               	movlb	14	; select bank14
 24282  06F4  101A               	bcf	26,0	;volatile
 24283  06F5                     i1l5417:	
 24284                           
 24285                           ;main.c: 612:     if(clkms - last_ms < 0){
 24286  06F5  087D               	movf	_clkms,w	;volatile
 24287  06F6  00F0               	movwf	??i1_checkDebounceSW1
 24288  06F7  01F1               	clrf	??i1_checkDebounceSW1+1
 24289  06F8  0871               	movf	??i1_checkDebounceSW1+1,w
 24290  06F9  00F3               	movwf	??i1_checkDebounceSW1+3
 24291  06FA  0020               	movlb	0	; select bank0
 24292  06FB  085C               	movf	_last_ms,w
 24293  06FC  0270               	subwf	??i1_checkDebounceSW1,w
 24294  06FD  00F2               	movwf	??i1_checkDebounceSW1+2
 24295  06FE  1C03               	skipc
 24296  06FF  03F3               	decf	??i1_checkDebounceSW1+3,f
 24297  0700  1FF3               	btfss	??i1_checkDebounceSW1+3,7
 24298  0701  2F03               	goto	u287_21
 24299  0702  2F04               	goto	u287_20
 24300  0703                     u287_21:	
 24301  0703  2F2A               	goto	i1l5427
 24302  0704                     u287_20:	
 24303  0704                     i1l5419:	
 24304                           
 24305                           ;main.c: 614:         if ((200 - last_ms)+ clkms > 15 ){
 24306  0704  087D               	movf	_clkms,w	;volatile
 24307  0705  00F0               	movwf	??i1_checkDebounceSW1
 24308  0706  01F1               	clrf	??i1_checkDebounceSW1+1
 24309  0707  0871               	movf	??i1_checkDebounceSW1+1,w
 24310  0708  00F3               	movwf	??i1_checkDebounceSW1+3
 24311  0709  085C               	movf	_last_ms,w
 24312  070A  0270               	subwf	??i1_checkDebounceSW1,w
 24313  070B  00F2               	movwf	??i1_checkDebounceSW1+2
 24314  070C  1C03               	skipc
 24315  070D  03F3               	decf	??i1_checkDebounceSW1+3,f
 24316  070E  0872               	movf	??i1_checkDebounceSW1+2,w
 24317  070F  3EC8               	addlw	200
 24318  0710  00F4               	movwf	??i1_checkDebounceSW1+4
 24319  0711  3000               	movlw	0
 24320  0712  3D73               	addwfc	??i1_checkDebounceSW1+3,w
 24321  0713  00F5               	movwf	??i1_checkDebounceSW1+5
 24322  0714  0875               	movf	??i1_checkDebounceSW1+5,w
 24323  0715  3A80               	xorlw	128
 24324  0716  00F6               	movwf	??i1_checkDebounceSW1+6
 24325  0717  3080               	movlw	128
 24326  0718  0276               	subwf	??i1_checkDebounceSW1+6,w
 24327  0719  1D03               	skipz
 24328  071A  2F1D               	goto	u288_25
 24329  071B  3010               	movlw	16
 24330  071C  0274               	subwf	??i1_checkDebounceSW1+4,w
 24331  071D                     u288_25:	
 24332  071D  1C03               	skipc
 24333  071E  2F20               	goto	u288_21
 24334  071F  2F21               	goto	u288_20
 24335  0720                     u288_21:	
 24336  0720  2F2A               	goto	i1l5427
 24337  0721                     u288_20:	
 24338  0721                     i1l5421:	
 24339                           
 24340                           ;main.c: 615:             last_ms = clkms;
 24341  0721  087D               	movf	_clkms,w	;volatile
 24342  0722  00F0               	movwf	??i1_checkDebounceSW1
 24343  0723  0870               	movf	??i1_checkDebounceSW1,w
 24344  0724  0020               	movlb	0	; select bank0
 24345  0725  00DC               	movwf	_last_ms
 24346  0726                     i1l5423:	
 24347                           
 24348                           ;main.c: 616:             PIE4bits.TMR1IE = 1;
 24349  0726  002E               	movlb	14	; select bank14
 24350  0727  141A               	bsf	26,0	;volatile
 24351                           
 24352                           ;main.c: 617:             return 1;
 24353  0728  3001               	movlw	1
 24354  0729  2F4C               	goto	i1l319
 24355  072A                     i1l5427:	
 24356                           
 24357                           ;main.c: 621:     if(clkms - last_ms < 15){
 24358  072A  087D               	movf	_clkms,w	;volatile
 24359  072B  00F0               	movwf	??i1_checkDebounceSW1
 24360  072C  01F1               	clrf	??i1_checkDebounceSW1+1
 24361  072D  0871               	movf	??i1_checkDebounceSW1+1,w
 24362  072E  00F3               	movwf	??i1_checkDebounceSW1+3
 24363  072F  0020               	movlb	0	; select bank0
 24364  0730  085C               	movf	_last_ms,w
 24365  0731  0270               	subwf	??i1_checkDebounceSW1,w
 24366  0732  00F2               	movwf	??i1_checkDebounceSW1+2
 24367  0733  1C03               	skipc
 24368  0734  03F3               	decf	??i1_checkDebounceSW1+3,f
 24369  0735  0873               	movf	??i1_checkDebounceSW1+3,w
 24370  0736  3A80               	xorlw	128
 24371  0737  00F4               	movwf	??i1_checkDebounceSW1+4
 24372  0738  3080               	movlw	128
 24373  0739  0274               	subwf	??i1_checkDebounceSW1+4,w
 24374  073A  1D03               	skipz
 24375  073B  2F3E               	goto	u289_25
 24376  073C  300F               	movlw	15
 24377  073D  0272               	subwf	??i1_checkDebounceSW1+2,w
 24378  073E                     u289_25:	
 24379  073E  1803               	skipnc
 24380  073F  2F41               	goto	u289_21
 24381  0740  2F42               	goto	u289_20
 24382  0741                     u289_21:	
 24383  0741  2F44               	goto	i1l5435
 24384  0742                     u289_20:	
 24385  0742                     i1l5429:	
 24386                           
 24387                           ;main.c: 622:         return 0;
 24388  0742  3000               	movlw	0
 24389  0743  2F4C               	goto	i1l319
 24390  0744                     i1l5435:	
 24391                           
 24392                           ;main.c: 625:         last_ms = clkms;
 24393  0744  087D               	movf	_clkms,w	;volatile
 24394  0745  00F0               	movwf	??i1_checkDebounceSW1
 24395  0746  0870               	movf	??i1_checkDebounceSW1,w
 24396  0747  0020               	movlb	0	; select bank0
 24397  0748  00DC               	movwf	_last_ms
 24398  0749                     i1l5437:	
 24399                           
 24400                           ;main.c: 626:         PIE4bits.TMR1IE = 1;
 24401  0749  002E               	movlb	14	; select bank14
 24402  074A  141A               	bsf	26,0	;volatile
 24403                           
 24404                           ;main.c: 627:         return 1;
 24405  074B  3001               	movlw	1
 24406  074C                     i1l319:	
 24407  074C  0008               	return
 24408  074D                     __end_ofi1_checkDebounceSW1:	
 24409                           
 24410                           	psect	text128
 24411  0868                     __ptext128:	
 24412 ;; *************** function i1_PWM6_LoadDutyValue *****************
 24413 ;; Defined at:
 24414 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 24415 ;; Parameters:    Size  Location     Type
 24416 ;;  dutyValue       2    0[COMMON] unsigned short 
 24417 ;; Auto vars:     Size  Location     Type
 24418 ;;		None
 24419 ;; Return value:  Size  Location     Type
 24420 ;;                  1    wreg      void 
 24421 ;; Registers used:
 24422 ;;		wreg, status,2, status,0
 24423 ;; Tracked objects:
 24424 ;;		On entry : 0/0
 24425 ;;		On exit  : 0/0
 24426 ;;		Unchanged: 0/0
 24427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24428 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24430 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24431 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24432 ;;Total ram usage:        4 bytes
 24433 ;; Hardware stack levels used:    1
 24434 ;; This function calls:
 24435 ;;		Nothing
 24436 ;; This function is called by:
 24437 ;;		_sw1_EXT
 24438 ;;		_ISR_3s
 24439 ;; This function uses a non-reentrant model
 24440 ;;
 24441                           
 24442                           
 24443                           ;psect for function i1_PWM6_LoadDutyValue
 24444  0868                     i1_PWM6_LoadDutyValue:	
 24445  0868                     i1l5441:	
 24446                           ;incstack = 0
 24447                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 24448                           
 24449                           
 24450                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 24451  0868  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 24452  0869  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 24453  086A  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 24454  086B  00F2               	movwf	??i1_PWM6_LoadDutyValue
 24455  086C  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 24456  086D  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 24457  086E  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 24458  086F  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 24459  0870  0872               	movf	??i1_PWM6_LoadDutyValue,w
 24460  0871  0027               	movlb	7	; select bank7
 24461  0872  008D               	movwf	13	;volatile
 24462                           
 24463                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 24464  0873  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 24465  0874  3903               	andlw	3
 24466  0875  00F2               	movwf	??i1_PWM6_LoadDutyValue
 24467  0876  3005               	movlw	5
 24468  0877                     u290_25:	
 24469  0877  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 24470  0878  3EFF               	addlw	-1
 24471  0879  1D03               	skipz
 24472  087A  2877               	goto	u290_25
 24473  087B  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 24474  087C  008C               	movwf	12	;volatile
 24475  087D                     i1l1523:	
 24476  087D  0008               	return
 24477  087E                     __end_ofi1_PWM6_LoadDutyValue:	
 24478                           
 24479                           	psect	text129
 24480  0A93                     __ptext129:	
 24481 ;; *************** function _EUSART_Transmit_ISR *****************
 24482 ;; Defined at:
 24483 ;;		line 206 in file "mcc_generated_files/eusart.c"
 24484 ;; Parameters:    Size  Location     Type
 24485 ;;		None
 24486 ;; Auto vars:     Size  Location     Type
 24487 ;;		None
 24488 ;; Return value:  Size  Location     Type
 24489 ;;                  1    wreg      void 
 24490 ;; Registers used:
 24491 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24492 ;; Tracked objects:
 24493 ;;		On entry : 0/0
 24494 ;;		On exit  : 0/0
 24495 ;;		Unchanged: 0/0
 24496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24499 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24500 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24501 ;;Total ram usage:        1 bytes
 24502 ;; Hardware stack levels used:    1
 24503 ;; This function calls:
 24504 ;;		Nothing
 24505 ;; This function is called by:
 24506 ;;		_EUSART_Initialize
 24507 ;;		_INTERRUPT_InterruptManager
 24508 ;; This function uses a non-reentrant model
 24509 ;;
 24510                           
 24511                           
 24512                           ;psect for function _EUSART_Transmit_ISR
 24513  0A93                     _EUSART_Transmit_ISR:	
 24514  0A93                     i1l6561:	
 24515                           ;incstack = 0
 24516                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 24517                           
 24518                           
 24519                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 24520  0A93  3008               	movlw	8
 24521  0A94  0020               	movlb	0	; select bank0
 24522  0A95  026B               	subwf	_eusartTxBufferRemaining,w	;volatile
 24523  0A96  1803               	skipnc
 24524  0A97  2A99               	goto	u361_21
 24525  0A98  2A9A               	goto	u361_20
 24526  0A99                     u361_21:	
 24527  0A99  2AB3               	goto	i1l816
 24528  0A9A                     u361_20:	
 24529  0A9A                     i1l6563:	
 24530                           
 24531                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
 24532  0A9A  0853               	movf	_eusartTxTail,w
 24533  0A9B  3E28               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 24534  0A9C  0086               	movwf	6
 24535  0A9D  3001               	movlw	1	; select bank2/3
 24536  0A9E  0087               	movwf	7
 24537  0A9F  0801               	movf	1,w
 24538  0AA0  0022               	movlb	2	; select bank2
 24539  0AA1  009A               	movwf	26	;volatile
 24540  0AA2                     i1l6565:	
 24541  0AA2  3001               	movlw	1
 24542  0AA3  00F0               	movwf	??_EUSART_Transmit_ISR
 24543  0AA4  0870               	movf	??_EUSART_Transmit_ISR,w
 24544  0AA5  0020               	movlb	0	; select bank0
 24545  0AA6  07D3               	addwf	_eusartTxTail,f	;volatile
 24546  0AA7                     i1l6567:	
 24547                           
 24548                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 24549  0AA7  3008               	movlw	8
 24550  0AA8  0253               	subwf	_eusartTxTail,w	;volatile
 24551  0AA9  1C03               	skipc
 24552  0AAA  2AAC               	goto	u362_21
 24553  0AAB  2AAD               	goto	u362_20
 24554  0AAC                     u362_21:	
 24555  0AAC  2AAE               	goto	i1l6571
 24556  0AAD                     u362_20:	
 24557  0AAD                     i1l6569:	
 24558                           
 24559                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
 24560  0AAD  01D3               	clrf	_eusartTxTail	;volatile
 24561  0AAE                     i1l6571:	
 24562                           
 24563                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
 24564  0AAE  3001               	movlw	1
 24565  0AAF  00F0               	movwf	??_EUSART_Transmit_ISR
 24566  0AB0  0870               	movf	??_EUSART_Transmit_ISR,w
 24567  0AB1  07EB               	addwf	_eusartTxBufferRemaining,f	;volatile
 24568                           
 24569                           ;mcc_generated_files/eusart.c: 218:     }
 24570  0AB2  2AB5               	goto	i1l819
 24571  0AB3                     i1l816:	
 24572                           ;mcc_generated_files/eusart.c: 219:     else
 24573                           
 24574                           
 24575                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          3bits.TXIE = 0;
 24576  0AB3  002E               	movlb	14	; select bank14
 24577  0AB4  1219               	bcf	25,4	;volatile
 24578  0AB5                     i1l819:	
 24579  0AB5  0008               	return
 24580  0AB6                     __end_of_EUSART_Transmit_ISR:	
 24581                           
 24582                           	psect	text130
 24583  0D25                     __ptext130:	
 24584 ;; *************** function _EUSART_Receive_ISR *****************
 24585 ;; Defined at:
 24586 ;;		line 225 in file "mcc_generated_files/eusart.c"
 24587 ;; Parameters:    Size  Location     Type
 24588 ;;		None
 24589 ;; Auto vars:     Size  Location     Type
 24590 ;;		None
 24591 ;; Return value:  Size  Location     Type
 24592 ;;                  1    wreg      void 
 24593 ;; Registers used:
 24594 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24595 ;; Tracked objects:
 24596 ;;		On entry : 0/0
 24597 ;;		On exit  : 0/0
 24598 ;;		Unchanged: 0/0
 24599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24604 ;;Total ram usage:        0 bytes
 24605 ;; Hardware stack levels used:    1
 24606 ;; Hardware stack levels required when called:    2
 24607 ;; This function calls:
 24608 ;;		Absolute function
 24609 ;;		_EUSART_DefaultErrorHandler
 24610 ;;		_EUSART_DefaultFramingErrorHandler
 24611 ;;		_EUSART_DefaultOverrunErrorHandler
 24612 ;;		_EUSART_RxDataHandler
 24613 ;; This function is called by:
 24614 ;;		_EUSART_Initialize
 24615 ;;		_INTERRUPT_InterruptManager
 24616 ;; This function uses a non-reentrant model
 24617 ;;
 24618                           
 24619                           
 24620                           ;psect for function _EUSART_Receive_ISR
 24621  0D25                     _EUSART_Receive_ISR:	
 24622  0D25                     i1l6573:	
 24623                           ;incstack = 0
 24624                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 24625                           
 24626                           
 24627                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 24628  0D25  0020               	movlb	0	; select bank0
 24629  0D26  0852               	movf	_eusartRxHead,w	;volatile
 24630  0D27  3EBD               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 24631  0D28  0086               	movwf	6
 24632  0D29  0187               	clrf	7
 24633  0D2A  0181               	clrf	1
 24634  0D2B                     i1l6575:	
 24635                           
 24636                           ;mcc_generated_files/eusart.c: 230:     if(RC1STAbits.FERR){
 24637  0D2B  0022               	movlb	2	; select bank2
 24638  0D2C  1D1D               	btfss	29,2	;volatile
 24639  0D2D  2D2F               	goto	u363_21
 24640  0D2E  2D30               	goto	u363_20
 24641  0D2F                     u363_21:	
 24642  0D2F  2D3C               	goto	i1l6581
 24643  0D30                     u363_20:	
 24644  0D30                     i1l6577:	
 24645                           
 24646                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 24647  0D30  0020               	movlb	0	; select bank0
 24648  0D31  0852               	movf	_eusartRxHead,w	;volatile
 24649  0D32  3EBD               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 24650  0D33  0086               	movwf	6
 24651  0D34  0187               	clrf	7
 24652  0D35  1481               	bsf	1,1
 24653  0D36                     i1l6579:	
 24654                           
 24655                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
 24656  0D36  0021               	movlb	1	; select bank1
 24657  0D37  086B               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
 24658  0D38  008A               	movwf	10
 24659  0D39  086A               	movf	_EUSART_FramingErrorHandler^(0+128),w
 24660  0D3A  000A               	callw
 24661  0D3B  318D               	pagesel	$
 24662  0D3C                     i1l6581:	
 24663                           
 24664                           ;mcc_generated_files/eusart.c: 235:     if(RC1STAbits.OERR){
 24665  0D3C  0022               	movlb	2	; select bank2
 24666  0D3D  1C9D               	btfss	29,1	;volatile
 24667  0D3E  2D40               	goto	u364_21
 24668  0D3F  2D41               	goto	u364_20
 24669  0D40                     u364_21:	
 24670  0D40  2D4D               	goto	i1l6587
 24671  0D41                     u364_20:	
 24672  0D41                     i1l6583:	
 24673                           
 24674                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 24675  0D41  0020               	movlb	0	; select bank0
 24676  0D42  0852               	movf	_eusartRxHead,w	;volatile
 24677  0D43  3EBD               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 24678  0D44  0086               	movwf	6
 24679  0D45  0187               	clrf	7
 24680  0D46  1501               	bsf	1,2
 24681  0D47                     i1l6585:	
 24682                           
 24683                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
 24684  0D47  0022               	movlb	2	; select bank2
 24685  0D48  0853               	movf	(_EUSART_OverrunErrorHandler+1)^(0+256),w
 24686  0D49  008A               	movwf	10
 24687  0D4A  0852               	movf	_EUSART_OverrunErrorHandler^(0+256),w
 24688  0D4B  000A               	callw
 24689  0D4C  318D               	pagesel	$
 24690  0D4D                     i1l6587:	
 24691                           
 24692                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
 24693  0D4D  0020               	movlb	0	; select bank0
 24694  0D4E  0852               	movf	_eusartRxHead,w	;volatile
 24695  0D4F  3EBD               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
 24696  0D50  0086               	movwf	6
 24697  0D51  0187               	clrf	7
 24698  0D52  0801               	movf	1,w
 24699  0D53  1903               	btfsc	3,2
 24700  0D54  2D56               	goto	u365_21
 24701  0D55  2D57               	goto	u365_20
 24702  0D56                     u365_21:	
 24703  0D56  2D5E               	goto	i1l6591
 24704  0D57                     u365_20:	
 24705  0D57                     i1l6589:	
 24706                           
 24707                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
 24708  0D57  0022               	movlb	2	; select bank2
 24709  0D58  0851               	movf	(_EUSART_ErrorHandler+1)^(0+256),w
 24710  0D59  008A               	movwf	10
 24711  0D5A  0850               	movf	_EUSART_ErrorHandler^(0+256),w
 24712  0D5B  000A               	callw
 24713  0D5C  318D               	pagesel	$
 24714                           
 24715                           ;mcc_generated_files/eusart.c: 242:     } else {
 24716  0D5D  2D61               	goto	i1l826
 24717  0D5E                     i1l6591:	
 24718                           
 24719                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
 24720  0D5E  3189  2188  318D   	fcall	_EUSART_RxDataHandler
 24721  0D61                     i1l826:	
 24722  0D61  0008               	return
 24723  0D62                     __end_of_EUSART_Receive_ISR:	
 24724                           
 24725                           	psect	text131
 24726  161F                     __ptext131:	
 24727 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 24728 ;; Defined at:
 24729 ;;		line 261 in file "mcc_generated_files/eusart.c"
 24730 ;; Parameters:    Size  Location     Type
 24731 ;;		None
 24732 ;; Auto vars:     Size  Location     Type
 24733 ;;		None
 24734 ;; Return value:  Size  Location     Type
 24735 ;;                  1    wreg      void 
 24736 ;; Registers used:
 24737 ;;		None
 24738 ;; Tracked objects:
 24739 ;;		On entry : 0/0
 24740 ;;		On exit  : 0/0
 24741 ;;		Unchanged: 0/0
 24742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24747 ;;Total ram usage:        0 bytes
 24748 ;; Hardware stack levels used:    1
 24749 ;; This function calls:
 24750 ;;		Nothing
 24751 ;; This function is called by:
 24752 ;;		_EUSART_Initialize
 24753 ;;		_EUSART_Receive_ISR
 24754 ;; This function uses a non-reentrant model
 24755 ;;
 24756                           
 24757                           
 24758                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 24759  161F                     _EUSART_DefaultOverrunErrorHandler:	
 24760  161F                     i1l5989:	
 24761                           ;incstack = 0
 24762                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 24763                           
 24764                           
 24765                           ;mcc_generated_files/eusart.c: 264:     RC1STAbits.CREN = 0;
 24766  161F  0022               	movlb	2	; select bank2
 24767  1620  121D               	bcf	29,4	;volatile
 24768                           
 24769                           ;mcc_generated_files/eusart.c: 265:     RC1STAbits.CREN = 1;
 24770  1621  161D               	bsf	29,4	;volatile
 24771  1622                     i1l836:	
 24772  1622  0008               	return
 24773  1623                     __end_of_EUSART_DefaultOverrunErrorHandler:	
 24774                           
 24775                           	psect	text132
 24776  15F6                     __ptext132:	
 24777 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 24778 ;; Defined at:
 24779 ;;		line 259 in file "mcc_generated_files/eusart.c"
 24780 ;; Parameters:    Size  Location     Type
 24781 ;;		None
 24782 ;; Auto vars:     Size  Location     Type
 24783 ;;		None
 24784 ;; Return value:  Size  Location     Type
 24785 ;;                  1    wreg      void 
 24786 ;; Registers used:
 24787 ;;		None
 24788 ;; Tracked objects:
 24789 ;;		On entry : 0/0
 24790 ;;		On exit  : 0/0
 24791 ;;		Unchanged: 0/0
 24792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24797 ;;Total ram usage:        0 bytes
 24798 ;; Hardware stack levels used:    1
 24799 ;; This function calls:
 24800 ;;		Nothing
 24801 ;; This function is called by:
 24802 ;;		_EUSART_Initialize
 24803 ;;		_EUSART_Receive_ISR
 24804 ;; This function uses a non-reentrant model
 24805 ;;
 24806                           
 24807                           
 24808                           ;psect for function _EUSART_DefaultFramingErrorHandler
 24809  15F6                     _EUSART_DefaultFramingErrorHandler:	
 24810  15F6                     i1l833:	
 24811                           ;incstack = 0
 24812                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 24813                           
 24814  15F6  0008               	return
 24815  15F7                     __end_of_EUSART_DefaultFramingErrorHandler:	
 24816                           
 24817                           	psect	text133
 24818  161B                     __ptext133:	
 24819 ;; *************** function _EUSART_DefaultErrorHandler *****************
 24820 ;; Defined at:
 24821 ;;		line 269 in file "mcc_generated_files/eusart.c"
 24822 ;; Parameters:    Size  Location     Type
 24823 ;;		None
 24824 ;; Auto vars:     Size  Location     Type
 24825 ;;		None
 24826 ;; Return value:  Size  Location     Type
 24827 ;;                  1    wreg      void 
 24828 ;; Registers used:
 24829 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24830 ;; Tracked objects:
 24831 ;;		On entry : 0/0
 24832 ;;		On exit  : 0/0
 24833 ;;		Unchanged: 0/0
 24834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24839 ;;Total ram usage:        0 bytes
 24840 ;; Hardware stack levels used:    1
 24841 ;; Hardware stack levels required when called:    1
 24842 ;; This function calls:
 24843 ;;		_EUSART_RxDataHandler
 24844 ;; This function is called by:
 24845 ;;		_EUSART_Initialize
 24846 ;;		_EUSART_Receive_ISR
 24847 ;; This function uses a non-reentrant model
 24848 ;;
 24849                           
 24850                           
 24851                           ;psect for function _EUSART_DefaultErrorHandler
 24852  161B                     _EUSART_DefaultErrorHandler:	
 24853  161B                     i1l5991:	
 24854                           ;incstack = 0
 24855                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 24856                           
 24857                           
 24858                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
 24859  161B  3189  2188  3196   	fcall	_EUSART_RxDataHandler
 24860  161E                     i1l839:	
 24861  161E  0008               	return
 24862  161F                     __end_of_EUSART_DefaultErrorHandler:	
 24863                           
 24864                           	psect	text134
 24865  0988                     __ptext134:	
 24866 ;; *************** function _EUSART_RxDataHandler *****************
 24867 ;; Defined at:
 24868 ;;		line 249 in file "mcc_generated_files/eusart.c"
 24869 ;; Parameters:    Size  Location     Type
 24870 ;;		None
 24871 ;; Auto vars:     Size  Location     Type
 24872 ;;		None
 24873 ;; Return value:  Size  Location     Type
 24874 ;;                  1    wreg      void 
 24875 ;; Registers used:
 24876 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24877 ;; Tracked objects:
 24878 ;;		On entry : 0/0
 24879 ;;		On exit  : 0/0
 24880 ;;		Unchanged: 0/0
 24881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24884 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24885 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24886 ;;Total ram usage:        1 bytes
 24887 ;; Hardware stack levels used:    1
 24888 ;; This function calls:
 24889 ;;		Nothing
 24890 ;; This function is called by:
 24891 ;;		_EUSART_Receive_ISR
 24892 ;;		_EUSART_DefaultErrorHandler
 24893 ;; This function uses a non-reentrant model
 24894 ;;
 24895                           
 24896                           
 24897                           ;psect for function _EUSART_RxDataHandler
 24898  0988                     _EUSART_RxDataHandler:	
 24899  0988                     i1l5645:	
 24900                           ;incstack = 0
 24901                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 24902                           
 24903                           
 24904                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 24905  0988  0022               	movlb	2	; select bank2
 24906  0989  0819               	movf	25,w	;volatile
 24907  098A  00F0               	movwf	??_EUSART_RxDataHandler
 24908  098B  0020               	movlb	0	; select bank0
 24909  098C  0852               	movf	_eusartRxHead,w
 24910  098D  3E20               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 24911  098E  0086               	movwf	6
 24912  098F  3001               	movlw	1	; select bank2/3
 24913  0990  0087               	movwf	7
 24914  0991  0870               	movf	??_EUSART_RxDataHandler,w
 24915  0992  0081               	movwf	1
 24916  0993                     i1l5647:	
 24917  0993  3001               	movlw	1
 24918  0994  00F0               	movwf	??_EUSART_RxDataHandler
 24919  0995  0870               	movf	??_EUSART_RxDataHandler,w
 24920  0996  07D2               	addwf	_eusartRxHead,f	;volatile
 24921  0997                     i1l5649:	
 24922                           
 24923                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 24924  0997  3008               	movlw	8
 24925  0998  0252               	subwf	_eusartRxHead,w	;volatile
 24926  0999  1C03               	skipc
 24927  099A  299C               	goto	u302_21
 24928  099B  299D               	goto	u302_20
 24929  099C                     u302_21:	
 24930  099C  299E               	goto	i1l5653
 24931  099D                     u302_20:	
 24932  099D                     i1l5651:	
 24933                           
 24934                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
 24935  099D  01D2               	clrf	_eusartRxHead	;volatile
 24936  099E                     i1l5653:	
 24937                           
 24938                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
 24939  099E  3001               	movlw	1
 24940  099F  00F0               	movwf	??_EUSART_RxDataHandler
 24941  09A0  0870               	movf	??_EUSART_RxDataHandler,w
 24942  09A1  07D0               	addwf	_eusartRxCount,f	;volatile
 24943  09A2                     i1l830:	
 24944  09A2  0008               	return
 24945  09A3                     __end_of_EUSART_RxDataHandler:	
 24946  007E                     btemp	set	126	;btemp
 24947  007E                     int$flags	set	126
 24948  007E                     wtemp0	set	126


Data Sizes:
    Strings     18
    Constant    37
    Data        25
    BSS         117
    Persistent  53
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     46      76
    BANK1            80      0      80
    BANK2            80      4      56
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$4077$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$4083	const PTR FTN()enum E12722 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX$4082	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$4077	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), returnReset(), returnStop(), i2c_restartWrite(), 
		 -> Absolute function(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMMON[1]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[18]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S2490$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    memset@dest	PTR void  size(1) Largest target is 16
		 -> str_rc(BANK2[16]), 

    memset@s	PTR unsigned char  size(1) Largest target is 16
		 -> str_rc(BANK2[16]), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S3024$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), handler_clock_ms(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), handler_clock_ms(), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 

    fsmStateTable	const PTR FTN()enum E12722[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S2490$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S2490$callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), returnReset(), returnStop(), i2c_restartWrite(), 
		 -> Absolute function(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), returnReset(), returnStop(), i2c_restartWrite(), 
		 -> Absolute function(), 

    S2490$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), handler_clock_hms(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), handler_clock_hms(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), ISR_3s(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), ISR_3s(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_ISR(), Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), Absolute function(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), sw1_EXT(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), Absolute function(), sw1_EXT(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    write_str_UART@string	PTR unsigned char  size(1) Largest target is 16
		 -> str_rc(BANK2[16]), str_snd(BANK2[16]), 

    sp__memset	PTR void  size(1) Largest target is 16
		 -> str_rc(BANK2[16]), 

    read_str_UART@buff	PTR unsigned char  size(1) Largest target is 16
		 -> str_rc(BANK2[16]), 

    push_ring@ring_byte	PTR unsigned char  size(1) Largest target is 5
		 -> ring_byte(BANK1[5]), 

    push_ring@nreg_pt	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_pt(BANK0[1]), 

    push_ring@nreg_init	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_init(BANK0[1]), 

    ring_buffer@_ring_byte	PTR unsigned char  size(1) Largest target is 5
		 -> ring_byte(BANK1[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _i2c_ISR->_do_I2C_DO_ADDRESS_NACK
    _i2c_ISR->_do_I2C_RX
    _i2c_ISR->_do_I2C_TX
    _i2c_ISR->_do_I2C_TX_EMPTY
    _do_I2C_TX_EMPTY->_i2c_restartWrite
    _do_I2C_TX_EMPTY->_rd1RegCompleteHandler
    _do_I2C_TX_EMPTY->_rd2RegCompleteHandler
    _do_I2C_TX_EMPTY->_rdBlkRegCompleteHandler
    _do_I2C_TX_EMPTY->_returnReset
    _do_I2C_TX_EMPTY->_returnStop
    _do_I2C_TX_EMPTY->_wr1RegCompleteHandler
    _do_I2C_TX_EMPTY->_wr2RegCompleteHandler
    _do_I2C_TX->_i2c_restartWrite
    _do_I2C_TX->_rd1RegCompleteHandler
    _do_I2C_TX->_rd2RegCompleteHandler
    _do_I2C_TX->_rdBlkRegCompleteHandler
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_TX->_wr1RegCompleteHandler
    _do_I2C_TX->_wr2RegCompleteHandler
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_SEND_ADR_READ->_i2c1_driver_TXData
    _do_I2C_RX->_i2c_restartWrite
    _do_I2C_RX->_rd1RegCompleteHandler
    _do_I2C_RX->_rd2RegCompleteHandler
    _do_I2C_RX->_rdBlkRegCompleteHandler
    _do_I2C_RX->_returnReset
    _do_I2C_RX->_returnStop
    _do_I2C_RX->_wr1RegCompleteHandler
    _do_I2C_RX->_wr2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_i2c_restartWrite
    _do_I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_returnReset
    _do_I2C_DO_ADDRESS_NACK->_returnStop
    _do_I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _TMR2_ISR->_handler_clock_ms
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR0_ISR->_ISR_3s
    _ISR_3s->i1_PWM6_LoadDutyValue
    _INT_CallBack->_sw1_EXT
    _sw1_EXT->i1_checkDebounceSW1
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _main->_config_routine
    _save_recovery_params->_cksum_w
    _recoverData->_reset_recv
    _reset_recv->_DATAEE_WriteByte
    _cksum_w->_DATAEE_WriteByte
    _cksum->_DATAEE_ReadByte
    _read_str_UART->_memset
    _write_str_UART->_write_UART
    _write_UART->_EUSART_Write
    _read_UART->_EUSART_Read
    _dump_UART_FIFO->_EUSART_Read
    _read_ring->___bmul
    _push_ring->_DATAEE_WriteByte
    _DATAEE_WriteByte->_cksum
    _config_routine->_selectSubfield
    _selectSubfield->_getSubfieldInfo
    _mod4_LED->_PWM6_LoadDutyValue
    _mod3_LED->_PWM6_LoadDutyValue
    _mod2_LED->_PWM6_LoadDutyValue
    _mod1_LED->_PWM6_LoadDutyValue
    _getSubfieldInfo->_increment_subfield
    _limitTempThreshUnits->___awdiv
    _limitHoursUnits->___awdiv
    _increment_subfield->_representLed
    _representLed->_PWM6_LoadDutyValue
    _all_LED->_PWM6_LoadDutyValue
    _mode_select_LED->_PWM6_LoadDutyValue
    _check_thresholds->_PWM6_LoadDutyValue
    _PWM6_LoadDutyValue->___wmul
    _SYSTEM_Initialize->_EUSART_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _ADC_read->_ADCC_GetConversionResult

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_i2c_ISR

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   65845
                                             40 BANK0      6     6      0
                                              0 BANK2      4     4      0
                           _ADC_read
                   _DATAEE_WriteByte
                 _EUSART_is_rx_ready
            _INT_SetInterruptHandler
                            _LED_bin
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR1_SetInterruptHandler
           _TMR2_SetInterruptHandler
                   _check_thresholds
                            _cksum_w
                     _config_routine
                          _push_ring
                          _read_ring
                      _read_str_UART
                        _recoverData
                        _ring_buffer
               _save_recovery_params
                     _write_str_UART
 ---------------------------------------------------------------------------------
 (1) _save_recovery_params                                 3     3      0    6640
                                             14 BANK0      3     3      0
                   _DATAEE_WriteByte
                            _cksum_w
 ---------------------------------------------------------------------------------
 (1) _ring_buffer                                          7     2      5     796
                                              3 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (1) _recoverData                                          1     1      0   11738
                                             15 BANK0      1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                              _cksum
                            _cksum_w
                         _reset_recv
 ---------------------------------------------------------------------------------
 (2) _reset_recv                                           2     2      0    2746
                                             13 BANK0      2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _cksum_w                                              1     1      0    3925
                                             13 BANK0      1     1      0
                   _DATAEE_WriteByte
                              _cksum
 ---------------------------------------------------------------------------------
 (3) _cksum                                                4     4      0    1278
                                              5 BANK0      4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (1) _read_str_UART                                        6     5      1    2620
                                             13 BANK0      6     5      1
                     _dump_UART_FIFO
                             _memset
                          _read_UART
                     _write_str_UART
 ---------------------------------------------------------------------------------
 (1) _write_str_UART                                       4     3      1     663
                                              6 BANK0      4     3      1
                         _write_UART
 ---------------------------------------------------------------------------------
 (2) _write_UART                                           1     1      0      93
                                              5 BANK0      1     1      0
                       _EUSART_Write
                  _EUSART_is_tx_done
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_tx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_tx_done                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      62
                                              3 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _read_UART                                            0     0      0      37
                        _EUSART_Read
                 _EUSART_is_rx_ready
 ---------------------------------------------------------------------------------
 (2) _memset                                              10     6      4    1233
                                              3 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) _dump_UART_FIFO                                       1     1      0     102
                                              5 BANK0      1     1      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          2     2      0      37
                                              3 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _read_ring                                            9     5      4    2773
                                              7 BANK0      9     5      4
                    _DATAEE_ReadByte
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2    1142
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _push_ring                                            7     4      3    3300
                                             13 BANK0      7     4      3
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3    2647
                                              9 BANK0      4     1      3
                              _cksum (ARG)
 ---------------------------------------------------------------------------------
 (1) _config_routine                                       3     3      0   25621
                                             37 BANK0      3     3      0
                            _all_LED
                   _checkDebounceSW1
                   _checkDebounceSW2
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
                    _mode_select_LED
                     _selectSubfield
 ---------------------------------------------------------------------------------
 (2) _selectSubfield                                       4     4      0   18007
                                             33 BANK0      4     4      0
                            _all_LED
                   _checkDebounceSW1
                   _checkDebounceSW2
                    _getSubfieldInfo
                           _mode_LED
 ---------------------------------------------------------------------------------
 (3) _mode_LED                                             3     3      0    5039
                                             13 BANK0      3     3      0
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
 ---------------------------------------------------------------------------------
 (4) _mod4_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _mod3_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _mod2_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _mod1_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _getSubfieldInfo                                      9     9      0   11617
                                             24 BANK0      9     9      0
                            ___awdiv
                            ___awmod
                             ___bmul
                 _increment_subfield
                    _limitHoursUnits
               _limitTempThreshUnits
 ---------------------------------------------------------------------------------
 (4) _limitTempThreshUnits                                 2     2      0    1525
                                             12 BANK0      2     2      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _limitHoursUnits                                      2     2      0    1525
                                             12 BANK0      2     2      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4    1525
                                              3 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) _increment_subfield                                   6     4      2    4985
                                             18 BANK0      6     4      2
                 _PWM6_LoadDutyValue
                   _checkDebounceSW1
                   _checkDebounceSW2
                    _limitHoursUnits (ARG)
               _limitTempThreshUnits (ARG)
                       _representLed
 ---------------------------------------------------------------------------------
 (5) _representLed                                         5     5      0    2747
                                             13 BANK0      5     5      0
                 _PWM6_LoadDutyValue
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1306
                                              3 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _checkDebounceSW2                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (5) _checkDebounceSW1                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     496
                                              3 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1153
                                              3 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _all_LED                                              1     1      0    1252
                                             13 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_select_LED                                      1     1      0    1252
                                             13 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (1) _check_thresholds                                     2     2      0    1283
                                             13 BANK0      2     2      0
                 _PWM6_LoadDutyValue
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PWM6_LoadDutyValue                                   4     2      2    1252
                                              9 BANK0      4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1449
                    _ADCC_Initialize
                  _EUSART_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     605
                                              5 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2     121
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     121
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_bin                                              5     3      2     152
                                              3 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             2     0      2      31
                                              5 BANK0      2     0      2
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             2     0      2       0
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0   78474
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                            _INT_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (8) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _i2c_ISR                                              3     3      0   78042
                                              0 BANK0      3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (9) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_TX_EMPTY                                      3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _mssp1_setIRQ                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_TX                                            3     3      0   19516
                                             10 COMMON     3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART_WRITE                           0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART_READ                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_TXData                                  1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RX                                            3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_getRXData                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_NACK_STOP                                 0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_NACK_RESTART                              0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_sendNACK                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_resetBus                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_startRX                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_DO_ADDRESS_NACK                               3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _returnStop                                          1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _returnReset                                         1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             1     0      1    4086
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _i2c_setDataCompleteCallback                         4     1      3    2478
                                              5 COMMON     4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (12) _setCallBack                                         5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (11) _i2c_setBuffer                                       4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (10) _i2c_restartWrite                                    1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_STOP                                    0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_stop                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART                                 0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_restart                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_sendACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                   _handler_clock_ms *
 ---------------------------------------------------------------------------------
 (9) _handler_clock_ms                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _handler_clock_hms *
 ---------------------------------------------------------------------------------
 (9) _handler_clock_hms                                    1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (9) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0      96
                   Absolute function *
                             _ISR_3s *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ISR_3s                                               1     1      0      96
                                              4 COMMON     1     1      0
                     _TMR0_StopTimer
               i1_PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (10) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT_ISR                                              0     0      0      96
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (9) _INT_CallBack                                         0     0      0      96
                   Absolute function *
        _INT_DefaultInterruptHandler *
                            _sw1_EXT *
 ---------------------------------------------------------------------------------
 (10) _sw1_EXT                                             1     1      0      96
                                              7 COMMON     1     1      0
               i1_PWM6_LoadDutyValue
                 i1_checkDebounceSW1
 ---------------------------------------------------------------------------------
 (11) i1_checkDebounceSW1                                  7     7      0       0
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (10) i1_PWM6_LoadDutyValue                                4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (10) _INT_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (9) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (9) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_read
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
   _DATAEE_WriteByte
     _cksum (ARG)
       _DATAEE_ReadByte
   _EUSART_is_rx_ready
   _INT_SetInterruptHandler
   _LED_bin
   _PWM6_LoadDutyValue
     ___wmul (ARG)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _check_thresholds
     _PWM6_LoadDutyValue
       ___wmul (ARG)
     _TMR0_StartTimer
   _cksum_w
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
   _config_routine
     _all_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _checkDebounceSW1
     _checkDebounceSW2
     _mod1_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _mod2_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _mod3_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _mod4_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _mode_select_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _selectSubfield
       _all_LED
         _PWM6_LoadDutyValue
           ___wmul (ARG)
       _checkDebounceSW1
       _checkDebounceSW2
       _getSubfieldInfo
         ___awdiv
         ___awmod
         ___bmul
         _increment_subfield
           _PWM6_LoadDutyValue
             ___wmul (ARG)
           _checkDebounceSW1
           _checkDebounceSW2
           _limitHoursUnits (ARG)
             ___awdiv
           _limitTempThreshUnits (ARG)
             ___awdiv
           _representLed (ARG)
             _PWM6_LoadDutyValue
               ___wmul (ARG)
             ___wmul
         _limitHoursUnits
           ___awdiv
         _limitTempThreshUnits
           ___awdiv
       _mode_LED
         _mod1_LED
           _PWM6_LoadDutyValue
             ___wmul (ARG)
         _mod2_LED
           _PWM6_LoadDutyValue
             ___wmul (ARG)
         _mod3_LED
           _PWM6_LoadDutyValue
             ___wmul (ARG)
         _mod4_LED
           _PWM6_LoadDutyValue
             ___wmul (ARG)
   _push_ring
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
   _read_ring
     _DATAEE_ReadByte
     ___bmul
   _read_str_UART
     _dump_UART_FIFO
       _EUSART_Read
       _EUSART_is_rx_ready
     _memset
     _read_UART
       _EUSART_Read
       _EUSART_is_rx_ready
     _write_str_UART
       _write_UART
         _EUSART_Write
         _EUSART_is_tx_done
         _EUSART_is_tx_ready
   _recoverData
     _DATAEE_ReadByte
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
     _cksum_w
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
       _cksum
         _DATAEE_ReadByte
     _reset_recv
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
   _ring_buffer
   _save_recovery_params
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum_w
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
       _cksum
         _DATAEE_ReadByte
   _write_str_UART
     _write_UART
       _EUSART_Write
       _EUSART_is_tx_done
       _EUSART_is_tx_ready

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _INT_ISR *
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _sw1_EXT *
         i1_PWM6_LoadDutyValue
         i1_checkDebounceSW1
   _TMR0_ISR *
     Absolute function(Fake) *
     _ISR_3s *
       _TMR0_StopTimer
       i1_PWM6_LoadDutyValue
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _handler_clock_hms *
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _handler_clock_ms *
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c1_driver_sendNACK
       _i2c1_driver_getRXData *
       _i2c1_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c1_driver_restart
     _do_I2C_SEND_STOP *
       _i2c1_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c1_driver_TXData *
       _i2c1_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _mssp1_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2E      4C       5       95.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      4      38       9       70.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      E2      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      E2      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Dec 09 12:22:38 2019

                ?_EUSART_SetRxInterruptHandler 0023                                   returnReset@p 0079  
                               read_str_UART@i 0030               __end_of_TMR2_SetInterruptHandler 1714  
                               ___bmul@product 0025                                    __CFG_CP$OFF 0000  
                                 ___awdiv@sign 0029                      __size_of_check_thresholds 003C  
                         __size_of_do_I2C_IDLE 0005                            _do_I2C_SEND_RESTART 1647  
                         __size_of_do_I2C_RCEN 0007                            ___wmul@multiplicand 0025  
                  __size_of_PWM6_LoadDutyValue 0019                         increment_subfield@exit 0035  
                                  __CFG_LVP$ON 0000                                            l200 0214  
                                          l221 0D24                                            l302 096D  
                                          l226 0551                                            l251 022B  
                                          l331 0B9F                                            l326 0F10  
                                          l238 057B                                            l334 0C81  
                                          l319 06F2                                            l247 0FAB  
                                          l600 0A52                                            l521 0E2C  
                                          l266 0385                                            l610 0B75  
                                          l514 044B                                            l283 09BD  
                                          l531 17CD                                            l195 00D3  
                                          l541 09F4                                            l614 0F5D  
                                          l278 09D8                                            l296 07A0  
                                          l528 0DA0                                            l704 0908  
                                          l536 0A92                                            l571 0987  
                                          l803 0BD3                                            l556 063E  
                                          l804 0BDD                                            l559 064B  
                                          l807 0BF7                                            l568 0698  
                                          l576 1743                                            l584 174E  
                                          l842 16CB                                            l658 05C9  
                                          l851 16E6                                            l579 1738  
                                          l683 0852                                            l659 05DD  
                                          l845 16D4                                            l589 07FF  
                                          l854 16DD                                            l782 1725  
                                          l848 16C2                                            l880 178F  
                                          l785 171C                                            l689 0953  
                                          l697 0B4B                                            l874 16EF  
                                          l779 0DE5                                            l788 1632  
                                          l798 0C52                                            l994 0A32  
                                          l997 16F8                                            _PR2 028D  
                                 __CFG_CPD$OFF 0000                                _timer1ReloadVal 00E4  
                       ??_EUSART_RxDataHandler 0070                                            _seg 005D  
               ?_EUSART_SetFramingErrorHandler 0023                  i2c_setDataCompleteCallback@cb 0075  
                      __size_of_PMD_Initialize 0008                                   ___awmod@sign 0029  
                              _TMR2_Initialize 08D9                          __size_of_do_I2C_RESET 0008  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                      increment_subfield@limit 0036                                   ?_EUSART_Read 0070  
                            read_str_UART@buff 0031                                   __CFG_ZCD$OFF 0000  
                              __end_of_LED_bin 0988                                           l1000 16A7  
                      ??_rd2RegCompleteHandler 007A                                           l2112 0A5E  
                                         l1322 167F                                           l1234 0EC3  
                                         l2114 0A72                                           l1316 0893  
                                         l1420 0867                                           l1325 16B9  
                                         l1319 169F                                           l1423 161A  
                                         l1520 1781                                           l1442 1701  
                                         l1506 170A                                           l2138 08A9  
                                         l1523 093A                                           l2265 063D  
                                         l1570 080E                                           l1476 0A13  
                                         l1564 0ACE                                           l2278 07F4  
                                         l1566 0AD2                                           l1567 0AD9  
                                         l1817 08F0                                           l1860 1713  
                                         l2566 04F9                           _ADCC_StartConversion 1698  
                                         l8001 0A10                                           l8011 085C  
                                         l8003 0853                                           l8013 0864  
                                         l8005 0858                                           l8021 0A1D  
                                         l7301 0F4A                                           l8101 0D64  
                                         l8007 0859                                           l8031 0A2C  
                                         l8023 0A20                                           l8015 0A14  
                                         l7231 0922                                           l7303 0F54  
                                         l7311 05E9                                           l8111 0D82  
                                         l8103 0D64                                           l8009 085B  
                                         l8033 0A2F                                           l8025 0A23  
                                         l8017 0A17                                           l7241 0A68  
                                         l7233 0A53                                           l7401 0792  
                                         l7321 05FA                                           l7313 05EB  
                                         l7305 05DE                                           l8201 0531  
                                         l8113 0D89                                           l8105 0D6A  
                                         l8041 03FD                                           l8027 0A26  
                                         l8019 0A1A                                           l7251 06AA  
                                         l7243 0A6E                                           l7235 0A56  
                                         l7403 0795                                           l7331 0610  
                                         l7323 0600                                           l7315 05EF  
                                         l7307 05E0                                           l7411 09A3  
                                         l8211 0556                                           l8203 0535  
                                         l8107 0D6F                                           l8115 0D94  
                                         l8051 0430                                           l8043 0400  
                                         l8035 0386                                           l8131 0C70  
                                         l8123 0C55                                           l8029 0A29  
                                         l7501 07B2                                           l7261 06E8  
                                         l7253 06C7                                           l7237 0A5A  
                                         l7405 079A                                           l7333 061F  
                                         l7325 0603                                           l7341 062F  
                                         l7317 05F4                                           l7309 05E4  
                                         l7413 09BA                                           l8221 056D  
                                         l8213 055E                                           l8205 0539  
                                         l8109 0D7C                                           l8061 0583  
                                         l8053 043C                                           l8045 040C  
                                         l8037 0393                                           l8133 0C79  
                                         l8125 0C57                                           l8301 0127  
                                         l7511 07C9                                           l7503 07B7  
                                         l7255 06CC                                           l7247 0699  
                                         l7239 0A63                                           l7407 079F  
                                         l7343 0634                                           l7335 0623  
                                         l7327 0608                                           l7319 05F8  
                                         l7431 09D7                                           l7423 09BE  
                                         l7351 173B                                           l8223 0573  
                                         l8215 0563                                           l8151 0E1A  
                                         l8135 0DE8                                           l8119 0D96  
                                         l8071 05AB                                           l8063 0591  
                                         l8055 0448                                           l8047 0418  
                                         l8039 03A5                                           l8127 0C66  
                                         l8231 0B78                                           l8311 014E  
                                         l8303 012D                                           l8161 0CF6  
                                         l7513 07CD                                           l7505 07BD  
                                         l7521 07E6                                           l7249 069B  
                                         l7281 0EF7                                           l7273 0EC4  
                                         l7345 0639                                           l7337 0624  
                                         l7329 060C                                           l7425 09D5  
                                         l7353 1741                                           l7361 1746  
                                         l8217 0566                                           l8209 053E  
                                         l8153 0E22                                           l8145 0DF6  
                                         l8137 0DF0                                           l7441 0809  
                                         l8073 05B2                                           l8081 05C9  
                                         l8065 0598                                           l8057 057E  
                                         l8049 0424                                           l8129 0C6E  
                                         l8241 0B90                                           l8233 0B7A  
                                         l8321 01BA                                           l8313 014F  
                                         l8305 0138                                           l8091 0959  
                                         l7531 1702                                           l8171 0D10  
                                         l8163 0CFB                                           l7523 07EB  
                                         l7515 07D7                                           l7507 07C0  
                                         l7267 06EA                                           l7259 06D0  
                                         l7283 0F0F                                           l7275 0ED3  
                                         l7371 074F                                           l7339 0629  
                                         l7419 09BC                                           l7611 028B  
                                         l7355 172F                                           l7363 174C  
                                         l8219 0569                                           l8155 0E26  
                                         l8147 0DFF                                           l8139 0DF5  
                                         l7443 080A                                           l7435 0800  
                                         l7451 171D                                           l8083 05CC  
                                         l8075 05B6                                           l8067 059E  
                                         l8059 0582                                           l8243 0B9C  
                                         l8235 0B7E                                           l8331 01E7  
                                         l8323 01BD                                           l8315 0167  
                                         l8307 0146                                           l8251 00D3  
                                         l8093 095D                                           l7533 16E7  
                                         l8165 0D06                                           l8173 0D16  
                                         l8157 0CEB                                           l7525 07F0  
                                         l7517 07DB                                           l7509 07C5  
                                         l7269 06EF                                           l7277 0EF0  
                                         l7293 0F13                                           l7381 0762  
                                         l7373 0750                                           l7613 029D  
                                         l7621 02D0                                           l7605 022A  
                                         l7349 1739                                           l7357 1731  
                                         l7365 07F5                                           l8181 04FD  
                                         l7541 0AB6                                           l8149 0E03  
                                         l7445 080B                                           l7437 0804  
                                         l7461 0BDE                                           l7701 08FB  
                                         l8085 05D5                                           l8077 05BC  
                                         l8069 05A0                                           l8237 0B82  
                                         l8229 0B76                                           l8341 020D  
                                         l8333 01EA                                           l8325 01DB  
                                         l8317 0185                                           l8309 014D  
                                         l8261 00DC                                           l8245 00B0  
                                         l8095 0965                                           l7711 16CC  
                                         l7535 170B                                           l8175 0D1C  
                                         l8167 0D0B                                           l8159 0CF0  
                                         l7519 07E0                                           l7391 077A  
                                         l7383 0764                                           l7375 0754  
                                         l7631 0334                                           l7623 02EA  
                                         l7615 02AD                                           l7607 022D  
                                         l7359 1744                                           l7367 07F7  
                                         l8191 0516                                           l8183 0501  
                                         l7551 0AC8                                           l7543 0ABE  
                                         l7447 080C                                           l7439 0808  
                                         l7463 0BE8                                           l7471 0BF5  
                                         l7455 0BCE                                           l7703 0903  
                                         l8079 05C2                                           l8239 0B84  
                                         l8343 0216                                           l8335 01EC  
                                         l8319 01AE                                           l8327 01E0  
                                         l8271 00E5                                           l8263 00DD  
                                         l8255 00D8                                           l8247 00D3  
                                         l8089 0954                                           l7713 16BA  
                                         l7705 16D5                                           l7529 16F9  
                                         l8177 0D22                                           l8169 0D0D  
                                         l7561 0640                                           l7481 089B  
                                         l7297 0F1E                                           l7393 0780  
                                         l7385 0768                                           l7377 075A  
                                         l7625 02ED                                           l7609 027B  
                                         l7369 07FD                                           l8193 051B  
                                         l8185 0505                                           l7553 0AC9  
                                         l7545 0AC2                                           l7537 1714  
                                         l7801 046D                                           l7465 0BEC  
                                         l7457 0BCE                                           l7473 162F  
                                         l7721 0B39                                           l8345 021C  
                                         l8337 01F8                                           l8329 01E5  
                                         l8281 00F4                                           l8273 00E8  
                                         l8265 00DF                                           l8257 00D9  
                                         l8249 00D3                                           l8099 096E  
                                         l7707 16DE                                           l7731 0A3B  
                                         l7571 0675                                           l7563 0649  
                                         l7491 07A1                                           l7483 089F  
                                         l7299 0F2D                                           l7395 0781  
                                         l7387 076D                                           l7379 075C  
                                         l7635 0346                                           l7627 02FD  
                                         l7619 02BD                                           l7643 0371  
                                         l8195 0523                                           l8187 050D  
                                         l8179 04FA                                           l7555 0ACB  
                                         l7547 0AC6                                           l7811 0494  
                                         l7467 0BF2                                           l7459 0BD8  
                                         l7723 0B3F                                           l7715 0B27  
                                         l8347 021E                                           l8339 0204  
                                         l8291 0117                                           l8283 00F5  
                                         l8275 00EF                                           l8267 00E2  
                                         l8259 00DA                                           l7709 16C3  
                                         l7901 0E81                                           l7741 0A51  
                                         l7733 0A3D                                           l7581 068D  
                                         l7573 0677                                           l7565 0654  
                                         l7493 07A3                                           l7485 08A1  
                                         l7477 0896                                           l7389 0775  
                                         l7397 0786                                           l7637 0353  
                                         l7629 0324                                           l8621 0B67  
                                         l8197 0529                                           l8189 0513  
                                         l7557 0ACD                                           l7549 0AC7  
                                         l7813 04A0                                           l7805 0477  
                                         l7469 0BF3                                           l7717 0B29  
                                         l7725 17BE                                           l8349 0224  
                                         l8293 0119                                           l8285 00FD  
                                         l8277 00F1                                           l8269 00E4  
                                         l7911 0E8C                                           l7903 0E83  
                                         l7727 1618                                           l7735 0A45  
                                         l7583 0696                                           l7575 0680  
                                         l7567 065C                                           l7495 07A7  
                                         l7487 08A8                                           l7479 0897  
                                         l7399 078A                                           l7639 0361  
                                         l8623 02C2                                           l7591 0B57  
                                         l7751 0F74                                           l7743 0F5E  
                                         l8199 052D                                           l7559 0AD3  
                                         l7831 04EB                                           l7823 04C9  
                                         l7807 047F                                           l7719 0B34  
                                         l7671 0A91                                           l8295 0121  
                                         l8287 010F                                           l8279 00F3  
                                         l7921 0EA0                                           l7913 0E8E  
                                         l7905 0E85                                           l7737 0A47  
                                         l7729 0A33                                           l7577 0682  
                                         l7569 066C                                           l7497 07AC  
                                         l8625 034B                                           l7593 0B5B  
                                         l7585 0B4E                                           l7761 0F8E  
                                         l7753 0F79                                           l7745 0F63  
                                         l7681 0C3E                                           l7833 04EF  
                                         l7825 04DA                                           l7817 04AA  
                                         l7809 0488                                           l7841 0847  
                                         l7665 0A79                                           l7657 0A73  
                                         l8297 0123                                           l8289 0111  
                                         l7771 169E                                           l7931 0EAA  
                                         l7923 0EA2                                           l7915 0E90  
                                         l7907 0E87                                           l7739 0A4F  
                                         l7579 068B                                           l7499 07AE  
                                         l8627 0377                                           l7587 0B4F  
                                         l7755 0F7E                                           l7763 0F91  
                                         l7747 0F67                                           l8619 0543  
                                         l7691 0C4E                                           l7683 0C42  
                                         l7675 0C25                                           l7851 094A  
                                         l7835 04F3                                           l7827 04DE  
                                         l7819 04BF                                           l7843 084F  
                                         l7667 0A84                                           l7659 0A75  
                                         l8299 0125                                           l7773 1679  
                                         l7861 0DB5                                           l7941 0EB5  
                                         l7933 0EAC                                           l7925 0EA4  
                                         l7917 0E9C                                           l7909 0E8A  
                                         l7589 0B53                                           l7597 0B5F  
                                         l7765 0F95                                           l7757 0F86  
                                         l7749 0F6F                                           l7693 0C50  
                                         l7685 0C48                                           l7677 0C25  
                                         l7853 0950                                           l7829 04E3  
                                         l7837 0842                                           l7669 0A88  
                                         l7781 09D9                                           l7767 169A  
                                         l7871 0DBF                                           l7863 0DB8  
                                         l7855 0DA1                                           l7951 0EC0  
                                         l7943 0EB7                                           l7935 0EAE  
                                         l7927 0EA6                                           l7919 0E9E  
                                         l7759 0F8B                                           l7687 0C49  
                                         l7679 0C2B                                           l7847 093B  
                                         l7791 044E                                           l7839 0843  
                                         l7777 16B1                                           l7769 169D  
                                         l7881 0DE1                                           l7873 0DC7  
                                         l7865 0DBA                                           l7857 0DA3  
                                         l7953 16F0                                           l7945 0EBA  
                                         l7937 0EB0                                           l7929 0EA8  
                                         l7961 1775                                           l7689 0C4B  
                                         l7849 0943                                           l7793 0452  
                                         l7697 08F3                                           l7785 09DE  
                                         l7883 0DE2                                           l7875 0DCF  
                                         l7867 0DBC                                           l7859 0DAB  
                                         l7891 178D                                           l7955 16F3  
                                         l7947 0EBC                                           l7939 0EB3  
                                         l7963 177C                                           l7971 08D9  
                                         l7699 08F3                                           l7787 09E6  
                                         l7965 087E                                           l7885 0DE3  
                                         l7877 0DDC                                           l7869 0DBE  
                                         l7957 16F4                                           l7949 0EBE  
                                         l7893 16A0                                           l7981 08E5  
                                         l7973 08DE                                           l7797 0459  
                                         l7789 09EB                                           l7967 0890  
                                         l7879 0DE0                                           l7887 1782  
                                         l7959 16F7                                           l7895 0E77  
                                         l7991 09FC                                           l7983 08ED  
                                         l7975 08DF                                           l7799 0461  
                                         l7969 0892                                           l7889 1785  
                                         l7897 0E7D                                           l7993 09FE  
                                         l7985 09F5                                           l7977 08E2  
                                         l7899 0E7F                                           l7995 0A05  
                                         l7987 09F8                                           l7979 08E4  
                                         l7997 0A07                                           l7989 09FA  
                                         l7999 0A08                                           STR_1 1020  
                                         _LATA 0016                                           _LATB 0017  
                              __end_of_INT_ISR 1666                                           _LATC 0018  
                                         _LATD 0019                                           _LATE 001A  
                                         u5000 059E                        __size_of_selectSubfield 004E  
                                         u5001 059D                                           u5010 05BC  
                                         _T2PR 028D                                           u5011 05BB  
                                         u4300 06C7                                           u5100 0E2C  
                                         u5020 05C2                                           u4301 06C6  
                                         u5101 0E2B                                           u5021 05C1  
                                         u5110 0CF0                                           u4310 06E8  
                                         u5030 05C8                                           u5111 0CEF  
                                         u4311 06E7                                           u5031 05C7  
                                         u5040 0965                                           u5120 0CF6  
                                         u4320 0ED3                                           u4400 0600  
                                         u5200 055E                                           u5041 0964  
                                         u5121 0CF5                                           u4305 06C3  
                                         u4321 0ED2                                           u4401 05FF  
                                         u5201 055D                                           u5130 0D0B  
                                         u4330 0EF0                                           u4250 0A5A  
                                         u5210 0573                                           u5050 0D6A  
                                         u5131 0D0A                                           u4315 06E4  
                                         u4331 0EEF                                           u4251 0A59  
                                         u5211 0572                                           u5051 0D69  
                                         u5140 0D1C                                           u4340 0F0F  
                                         u4500 0775                                           u4420 0610  
                                         u5060 0D6F                                           u5300 0214  
                                         u5220 00FD                                           u4245 0933  
                                         u5141 0D1B                                           u4341 0F0E  
                                         u4501 0774                                           u4421 060F  
                                         u5061 0D6E                                           u5301 0213  
                                         u5221 00FC                                           u4350 0F1D  
                                         u4510 0780                                           u5150 050D  
                                         u5070 0D82                                           u5310 0224  
                                         u5230 0121                                           u4335 0EEC  
                                         u4351 0F1C                                           u4511 077F  
                                         u4415 0604                                           u5151 050C  
                                         u5071 0D81                                           u5311 0223  
                                         u5231 0120                                           u4280 0A6E  
                                         u4520 078A                                           u4440 061F  
                                         u5160 0513                                           u5080 0DF0  
                                         u4600 0BD8                                           u5240 012D  
                                         u4345 0F0B                                           u4281 0A6D  
                                         u4265 0A5F                                           u4521 0789  
                                         u4441 061E                                           u5161 0512  
                                         u5081 0DEF                                           u4601 0BD7  
                                         u5241 012C                                           u4290 06AA  
                                         u4530 0792                                           u5170 051B  
                                         u5090 0DFF                                           u4610 0BF2  
                                         u5250 0167                                           u4291 06A9  
                                         u4275 0A64                                           u4531 0791  
                                         u4435 0611                                           u5171 051A  
                                         u5091 0DFE                                           u4611 0BF1  
                                         u5251 0166                                           u4620 089B  
                                         u4540 079F                                           u4460 062F  
                                         u4380 05E4                                           u5180 0523  
                                         u5260 0185                                           _PMD0 0796  
                                         u4621 089A                                           u4365 0F21  
                                         u4541 079E                                           u4461 062E  
                                         u4445 061B                                           u4381 05E3  
                                         u5181 0522                                           u5261 0184  
                                         _PMD1 0797                                           u4710 07E6  
                                         u4630 08A8                                           u4470 0634  
                                         u4390 05EF                                           u4550 09BA  
                                         u5190 0556                                           u5270 01CF  
                                         _PMD2 0798                                           u4711 07E5  
                                         u4631 08A7                                           u4375 0F30  
                                         u4471 0633                                           u4455 0625  
                                         u4391 05EE                                           u4551 09B9  
                                         u5191 0555                                           u5407 0208  
                                         u5271 01CD                                           _PMD3 0799  
                                         u4720 07EB                                           u4640 07A7  
                                         u4480 0762                                           u4560 09D5  
                                         u4800 0903                                           u5280 01D0  
                                         _PMD4 079A                                           u4721 07EA  
                                         u4705 07DC                                           u4641 07A6  
                                         u4481 0761                                           u4561 09D4  
                                         u5417 0844                                           u4801 0902  
                                         u5265 0181                                           _PMD5 079B  
                                         u4650 07B2                                           u4490 076D  
                                         u4730 171B                                           u4570 1724  
                                         u4810 0B3F                                           u5290 01E5  
                                         u5507 0691                                           u4651 07B1  
                                         u4491 076C                                           u5427 056A  
                                         u4731 1719                                           u4571 1722  
                                         u4811 0B3E                                           u5291 01E4  
                                         u5275 01CA                                           u4660 07BD  
                                         u4740 171C                                           u4900 0476  
                                         u4580 1725                                           u4820 0B4B  
                                         u5517 0A41                                           u4661 07BC  
                                         u5437 0F92                                           u4901 0475  
                                         u4821 0B4A                                           u4830 0F67  
                                         u4750 0AD2                                           u4910 04A9  
                                         u4590 0BD3                                           u5527 0A4B  
                                         u5447 0644                                           u4831 0F66  
                                         u4751 0AD1                                           u4911 04A8  
                                         u4591 0BD2                                           u4680 07CD  
                                         u4840 0F6F                                           u4920 04C8  
                                         u4760 0A91                                           u5537 095A  
                                         u5457 064F                                           u4681 07CC  
                                         u4841 0F6E                                           u4921 04C7  
                                         u4761 0A90                                           u4690 07D7  
                                         u4850 0F7E                                           u4770 0C2B  
                                         u4930 04F9                                           u5467 0660  
                                         u4691 07D6                                           u4675 07C1  
                                         u4851 0F7D                                           u4771 0C2A  
                                         u4931 04F8                                           u4860 0F86  
                                         u4780 0C48                                           u4940 084F  
                                         u5477 0670                                           u4861 0F85  
                                         u4781 0C47                                           u4941 084E  
                                         u4870 0FAB                                           u4950 0943  
                                         u4790 08FB                                           u5487 067B  
                                         u4695 07D3                                           u4871 0FAA  
                                         u4951 0942                                           u4791 08FA  
                                         u4960 094A                                           u4880 09F4  
                                         u5497 0686                                           u4961 0949  
                                         u4881 09F3                                           u4970 0950  
                                         u4890 0458                                           u4875 0FA7  
                                         u4971 094F                                           u4891 0457  
                                         u4980 0393                                           u4981 0392  
                                         u4990 03A5                           ?_do_I2C_SEND_RESTART 0070  
                                         u4991 03A4                                           _TMR2 028C  
                                         _WPUA 0F39                                           _WPUB 0F44  
                                         _WPUC 0F4F                                           _WPUD 0F5A  
                                         _WPUE 0F65                        ??_wr2RegCompleteHandler 007A  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
            __size_of_do_I2C_SEND_RESTART_READ 0005                                           _alaf 0055  
                                         _clkh 005F                      ?_do_I2C_SEND_RESTART_READ 0070  
                                         _clkm 005E                                           _main 00B0  
                                         _tala 0068                      __size_of_do_I2C_SEND_STOP 0005  
                       __size_of_do_I2C_DO_ACK 0005                                           _nreg 006A  
                              _TMR0_StartTimer 1618                     increment_subfield@init_val 0032  
                                         _temp 0056                                           _pmon 0069  
                           _increment_subfield 074D                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                __CFG_BOREN$ON 0000            __end_of_INT_DefaultInterruptHandler 15F8  
                  _INT_DefaultInterruptHandler 15F7                          ?_do_I2C_SEND_ADR_READ 0070  
              ??_i2c1_driver_clearBusCollision 0070                                           start 0079  
                      __size_of_dump_UART_FIFO 0019                               __end_of_ADC_read 096E  
              __end_of_INT_SetInterruptHandler 16F0                                  _i2c_setBuffer 17AE  
                   ??_TMR1_SetInterruptHandler 0025                                  __CFG_CSWEN$ON 0000  
                            ___bmul@multiplier 0026                                  __CFG_MCLRE$ON 0000  
                     increment_subfield@_value 0037                                __end_of_i2c_ISR 0C25  
                          ?_increment_subfield 0032               __size_of_rdBlkRegCompleteHandler 0018  
                     ??_do_I2C_DO_NACK_RESTART 0070                      config_routine@select_mode 0046  
                    __size_of_DATAEE_WriteByte 0024                        __end_of_TMR0_Initialize 0868  
                                 _do_I2C_RESET 1688                 ??_TMR0_DefaultInterruptHandler 0070  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0009  
                __end_of_OSCILLATOR_Initialize 16F9                                          _ADACQ 009D  
                                        _ADCAP 009B                                          _ADACT 0099  
                                        ?_main 0070                                          _ADCLK 0098  
                                        _ADCNT 010C                                          _ADPCH 009E  
                                        _ADREF 009A                                __end_of___awdiv 063E  
                     __end_of_i2c1_driver_stop 1609                                          _ADPRE 009C  
                                __CFG_WDTE$OFF 0000                                __end_of___awmod 07F5  
                                        _ADRPT 010D                                          _T1CLK 0211  
                              ___awdiv@divisor 0023                                          _T1CON 020E  
                                        _T2CON 028E                                          _T2HLT 028F  
                   __end_of_i2c1_driver_TXData 1638                                 __CFG_DEBUG$OFF 0000  
                                        _T2TMR 028C                                          i1l310 0CE8  
                                        i1l314 175A                                          _T2RST 0291  
                                        i1l319 074C                                          i1l183 0AFE  
                                        i1l186 091C                                          i1l187 0921  
                                        i1l830 09A2                                          i1l816 0AB3  
                                        i1l833 15F6                                          i1l826 0D61  
                                        i1l819 0AB5                                          i1l836 1622  
                                        i1l940 006B                                          i1l932 0032  
                                        i1l934 0041                                          i1l839 161E  
                                        i1l871 1767                                          i1l927 0013  
                                        i1l936 0050                                          i1l929 001F  
                                        i1l945 0077                                          i1l938 005F  
                                        i1l867 1665                                          i1l939 0077  
                                        i1l877 15F7                                          i1l889 15FD  
                              ___awdiv@counter 0028                                          _OSCEN 0891  
                              __end_of_all_LED 0699                                          _TMR0H 001D  
                                        _TMR1H 020D                                          _TMR0L 001C  
                                        _TMR1L 020C                                          _TRISA 0011  
                                        _TRISB 0012                                          _TRISC 0013  
                                        _TRISD 0014                                          _TRISE 0015  
                                        _WPUC3 7A7B                                          _WPUC4 7A7C  
                                        _RXPPS 0ECB              __size_of_TMR0_SetInterruptHandler 0009  
                              _PWM6_Initialize 1775                      ?_TMR0_SetInterruptHandler 0023  
                      ??_ADCC_IsConversionDone 0023                               __end_of_TMR0_ISR 179F  
                             __end_of_TMR1_ISR 08C1                               __end_of_TMR2_ISR 17AE  
                              __end_of_sw1_EXT 0AFF                                __end_of_cksum_w 17CE  
                         ??_increment_subfield 0034                                _DATAEE_ReadByte 0800  
                                        _alarm 0057                                          _clkms 007D  
                   __end_of_i2c1_driver_isNACK 1688                                          _cksum 0A73  
                        ?_ADCC_StartConversion 0070                                representLed@aux 0031  
                              representLed@val 0030                     ?_do_I2C_SEND_RESTART_WRITE 0070  
                                        _value 00D3                              ?_checkDebounceSW1 0070  
                            ?_checkDebounceSW2 0070                          ??_do_I2C_SEND_RESTART 0070  
                      __end_of_TMR1_Initialize 0A14                                          pclath 000A  
                      __size_of_mssp1_clearIRQ 0003                             ??_checkDebounceSW1 0023  
                           ??_checkDebounceSW2 0023                         ?_do_I2C_SEND_ADR_WRITE 0070  
                                        status 0003                                          wtemp0 007E  
                              _TMR1_WriteTimer 17DE                                 ?_i2c_setBuffer 0070  
                                 ?_setCallBack 0070                           _save_recovery_params 0B76  
                            ??_getSubfieldInfo 0038                                  _fsmStateTable 1000  
                              __initialization 007B                                     _i2c_status 00A0  
                                 __end_of_main 022A                              ??_limitHoursUnits 002C  
                               ??_EUSART_Write 0023                        __end_of_TMR2_Initialize 08F1  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 0025  
                                 ?_recoverData 0070                                  setCallBack@cb 0070  
                                _do_I2C_DO_ACK 1651                       _TMR2_SetInterruptHandler 170B  
                                       ??_main 0048                              ?_i2c_restartWrite 0079  
                __size_of_i2c1_driver_sendNACK 0004                getSubfieldInfo@temp_thresh_tens 003F  
                                    ??_LED_bin 0025                             ??_i2c_restartWrite 007A  
                    __size_of_handler_clock_ms 000C                            read_str_UART@rxData 0032  
                __size_of_i2c1_driver_resetBus 0001                                      ??_INT_ISR 0078  
                      ?_do_I2C_DO_ADDRESS_NACK 0070                                 _convertedValue 00C9  
                                       _ADACCH 0091                                         _ADACCL 0090  
    __end_of_EUSART_DefaultFramingErrorHandler 15F7     __size_of_EUSART_DefaultFramingErrorHandler 0001  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 15F6                        __end_of_TMR0_StartTimer 161B  
                  __size_ofi1_checkDebounceSW1 005A                                         _ADCON0 0093  
                                       _ADCON1 0094                                         _ADCON2 0095  
                                       _ADCON3 0096                                         ?_cksum 0070  
                   _EUSART_OverrunErrorHandler 0152                                         _ADERRH 0117  
                                       _ADERRL 0116                   __end_of_limitTempThreshUnits 09D9  
                                       _ADLTHH 010F                                         _ADLTHL 010E  
                                       _ADRESH 008D                                         _ADRESL 008C  
                                       _ADSTAT 0097                                         _ADUTHH 0111  
                             ___awdiv@dividend 0025                                         _ADUTHL 0110  
                                       _ANSELA 0F38                                         _ANSELB 0F43  
                                       _ANSELC 0F4E                                         _ANSELD 0F59  
                                       _ANSELE 0F64                             __CFG_RSTOSC$HFINT1 0000  
                                       _T0CON0 001E                                         _T0CON1 001F  
                   __end_of_EUSART_is_rx_ready 171D                                         _T1GATE 0210  
                                       _T1GCON 020F                                         _RC1REG 0119  
                                       _RC1STA 011D                                         _RA6PPS 0F16  
                                       _RC3PPS 0F23                                         i1l1102 1626  
                                       i1l1105 162A                        TMR1_WriteTimer@timerVal 0070  
                                       i1l1043 1614                                         _RC4PPS 0F24  
                                       i1l1046 1611                                         i1l1081 1687  
                                       i1l1075 1605                                         i1l1139 1617  
                                       i1l1084 160B                                         i1l1069 15FB  
                                       i1l1078 1608                                         i1l1503 08C0  
                                       i1l1087 160E                                         i1l1096 1637  
                                       _ODCONA 0F3A                                         i1l1426 1602  
                                       _ODCONB 0F45                                         i1l1523 087D  
                                       _ODCONC 0F50                                         _RC6PPS 0F26  
                                       _ODCOND 0F5B                                         i1l1445 15F8  
                                       i1l1509 15F9                                         i1l1701 16B0  
                                       _ODCONE 0F66                                         i1l1710 1655  
                                       i1l1439 179E                                         i1l1631 1774  
                                       i1l1704 1697                                         i1l1713 165A  
                                       i1l1490 17EE                                         i1l1722 0BCB  
                                       i1l1730 0FFF                                         i1l1707 1678  
                                       i1l1716 165F                                         i1l1661 17BD  
                                       i1l1903 0830                                         i1l1727 0FE3  
                                       i1l1743 0E4A                                         i1l1744 0E76  
                                       i1l1930 17FF                                         i1l1683 168F  
                                       i1l1771 162E                                         i1l1692 1646  
                                       i1l1782 0B24                                         i1l1774 15FF  
                                       i1l1918 0841                                         i1l1942 08D8  
                                       i1l1758 0CB4                                         i1l1686 163C  
                                       i1l1863 15FA                                         i1l1695 164B  
                                       i1l1768 0C24                                         i1l1857 17AD  
                                       i1l1777 0003                                         i1l1689 1641  
                                       i1l1882 081F                                         i1l1698 1650  
                                       i1l6203 1672                                         i1l6211 1651  
                                       i1l5421 0721                                         i1l6141 17E6  
                                       i1l5165 0B00                                         i1l6205 1674  
                                       i1l6213 1654                                         i1l6221 0BA7  
                                       i1l5423 0726                                         i1l5415 06F3  
                                       i1l6143 17E8                                         i1l6135 17DE  
                                       i1l5351 1606                                         i1l5167 0B06  
                                       i1l6311 0C89                                         i1l6207 1677  
                                       i1l6231 0BAF                                         i1l6127 1612  
                                       i1l5441 0868                                         i1l5417 06F5  
                                       i1l6137 17E3                                         i1l6145 17EA  
                                       i1l5361 17BC                                         i1l5169 0B17  
                                       i1l5353 1627                                         i1l6313 0C8C  
                                       i1l6305 0C82                                         i1l6225 0BAB  
                                       i1l6217 0BA0                                         i1l6129 1615  
                                       i1l5435 0744                                         i1l5419 0704  
                                       i1l5427 072A                                         i1l5451 0AEF  
                                       i1l5443 0ADA                                         i1l6147 17EC  
                                       i1l6139 17E4                                         i1l5355 1768  
                                       i1l6307 0C85                                         i1l6323 0C92  
                                       i1l6171 168B                                         i1l6219 0BA2  
                                       i1l6251 0FBC                                         i1l6243 0FB4  
                                       i1l5437 0749                                         i1l5429 0742  
                                       i1l5453 0AF5                                         i1l5445 0AE2  
                                       i1l5349 1603                                         i1l5357 17AF  
                                       i1l6317 0C8E                                         i1l6173 168D  
                                       i1l6181 163A                                         i1l5701 1647  
                                       i1l6261 0FF1                                         i1l5455 0AFA  
                                       i1l5447 0AE8                                         i1l5359 17B4  
                                       i1l6175 168E                                         i1l6183 163B  
                                       i1l5703 164A                                         i1l6191 16AF  
                                       i1l6263 0FFC                                         i1l6247 0FB8  
                                       i1l6239 0FAC                                         i1l5449 0AE9  
                                       i1l5457 1600                                         i1l6601 1799  
                                       i1l6169 1688                                         i1l5713 1656  
                                       i1l5721 165E                                         i1l6265 0FFE  
                                       i1l6257 0FC0                                         i1l6281 0E48  
                                       i1l6273 0E2D                                         i1l5651 099D  
                                       i1l6603 08AA                                         i1l6611 179F  
                                       i1l6179 1638                                         i1l5707 164C  
                                       i1l6187 16A8                                         i1l6195 1690  
                                       i1l5715 1659                                         i1l6259 0FE5  
                                       i1l6291 0E50                                         i1l6275 0E37  
                                       i1l5653 099E                                         i1l5645 0988  
                                       i1l6605 08AC                                         i1l6613 17A1  
                                       i1l5725 15FE                                         i1l5733 080F  
                                       i1l5741 0820                                         i1l5709 164F  
                                       i1l6189 16AA                                         i1l6197 1692  
                                       i1l6277 0E3B                                         i1l5647 0993  
                                       i1l6607 08B4                                         i1l6615 17A8  
                                       i1l5655 15FC                                         i1l5735 0817  
                                       i1l5743 0828                                         i1l5751 0839  
                                       i1l5671 1609                                         i1l5663 160F  
                                       i1l6199 1696                                         i1l5719 165B  
                                       i1l6287 0E4C                                         i1l6279 0E45  
                                       u302_20 099D                                         u302_21 099C  
                                       i1l5649 0997                                         i1l6561 0A93  
                                       i1l6609 08BB                                         i1l5761 17FE  
                                       i1l5729 0002                                         i1l5737 081E  
                                       i1l5745 082F                                         i1l5753 0840  
                                       i1l5673 160C                                         i1l6297 0E54  
                                       i1l6571 0AAE                                         i1l6563 0A9A  
                                       i1l5771 0909                                         i1l5851 0CCA  
                                       i1l5667 1680                                         i1l5691 1640  
                                       i1l6581 0D3C                                         i1l6573 0D25  
                                       i1l6565 0AA2                                         i1l5773 0910  
                                       i1l5861 0CE3                                         i1l5853 0CCE  
                                       i1l5845 0CB5                                         i1l5757 17EF  
                                       i1l5749 0831                                         i1l5765 08C1  
                                       i1l5677 1634                                         i1l6591 0D5E  
                                       i1l6583 0D41                                         i1l6575 0D2B  
                                       i1l6567 0AA7                                         i1l5775 0917  
                                       i1l5863 0CE7                                         i1l5855 0CD4  
                                       i1l5847 0CBB                                         i1l5679 1623  
                                       i1l5759 17F7                                         i1l5767 08D7  
                                       i1l5695 1642                                         i1l6585 0D47  
                                       i1l6577 0D30                                         i1l6569 0AAD  
                                       i1l6593 1660                                         i1l5777 091F  
                                       i1l5857 0CDC                                         i1l5849 0CC6  
                                       i1l5865 174F                                         i1l5689 163D  
                                       i1l5697 1645                                         i1l6681 0C00  
                                       i1l6587 0D4D                                         i1l6579 0D36  
                                       i1l6595 1662                                         i1l5859 0CDD  
                                       i1l5867 1753                                         i1l6683 0C07  
                                       i1l6589 0D57                                         i1l6597 1790  
                                       i1l5869 1759                                         i1l6685 0C0D  
                                       i1l6677 0BF8                                         i1l6861 0017  
                                       i1l5991 161B                                         i1l6599 1792  
                                       i1l8631 0FD5                                         i1l6679 0BFB  
                                       i1l6687 162B                                         i1l6871 0036  
                                       i1l6863 001B                                         i1l6855 0006  
                                       u304_20 0910                                         u312_20 0CBB  
                                       u400_20 0045                                         i1l5993 175B  
                                       u304_21 090F                                         u312_21 0CBA  
                                       i1l8633 0BC3                                         i1l6881 0058  
                                       u400_21 0044                                         i1l6873 003A  
                                       i1l6865 0023                                         i1l6857 000B  
                                       _INLVLA 0F3C                                         _INLVLB 0F47  
                                       i1l5995 1762                                         i1l8635 0CA6  
                                       i1l6883 0063                                         i1l6875 0045  
                                       i1l6867 0027                                         i1l6859 000F  
                                       _INLVLC 0F52                                         _INLVLD 0F5D  
                                       i1l5989 161F                                         i1l8629 0E68  
                                       i1l6885 0067                                         i1l6877 0049  
                                       i1l6869 002B                                         _INLVLE 0F68  
                                       i1l6887 006F                                         i1l6879 0054  
                                       u313_20 0CC4                                         u401_20 0049  
                                       u313_21 0CC1                                         i1l6889 0073  
                                       u401_21 0048                                         u330_20 17E3  
                                       u402_20 0054                                         u330_21 17E2  
                                       u402_21 0053                                         u314_24 0CC6  
                                       u315_20 0CD4                                         u403_20 0058  
                                       u315_21 0CD3                                         u403_21 0057  
                                       u316_20 0CE3                                         u404_20 0063  
                                       u316_21 0CE2                                         u404_21 0062  
                   __end_of_EUSART_is_tx_ready 1726                                         u317_20 1759  
                                       u405_20 0067                                         u317_21 1758  
                                       u405_21 0066                                         u334_20 0FB3  
                                       u406_20 006F                                         u334_21 0FB2  
                                       u406_21 006E                                         u335_20 0FFC  
                                       u407_20 0073                                         u335_21 0FFB  
                                       u407_21 0072                                         u248_20 0B06  
                                       u336_20 0E45                                         u248_21 0B05  
                                       u336_21 0E44                                         _INTPPS 0E90  
                                       u361_20 0A9A                                         u329_20 1762  
                                       u361_21 0A99                                         u329_21 1761  
                                       u362_20 0AAD                                         u362_21 0AAC  
                                       u290_25 0877                                         u363_20 0D30  
                                       u291_20 0AE2                                         u275_20 17B4  
                                       u371_20 0C00                                         u363_21 0D2F  
                                       u291_21 0AE1                                         u275_21 17B3  
                                       u371_21 0BFF                                         u364_20 0D41  
                                       u292_20 0AE8                                         u372_20 0C07  
                                       u364_21 0D40                                         u292_21 0AE7  
                                       u372_21 0C06                                         u365_20 0D57  
                                       u293_20 0AFA                                         u365_21 0D56  
                                       u293_21 0AF9                                         u366_20 1799  
                                       u366_21 1798                                         u287_20 0704  
                                       u367_20 08BB                                         u391_20 000B  
                                       u287_21 0703                                         u367_21 08BA  
                                       u391_21 000A                                         u288_20 0721  
                                       u368_20 17A8                                         u392_20 000F  
                                       u288_21 0720                                         u368_21 17A7  
                                       u392_21 000E                                         u288_25 071D  
                                       u289_20 0742                                         u393_20 0017  
                                       u289_21 0741                                         u393_21 0016  
                                       u289_25 073E                                         u394_20 001B  
                                       u394_21 001A                                         u395_20 0023  
                                       u395_21 0022                                         u396_20 0027  
                                       u396_21 0026                                         _OSCFRQ 0893  
                                       _ISR_3s 0909                                         u397_20 002B  
                                       u397_21 002A                                         u398_20 0036  
                                       u398_21 0035                                         u399_20 003A  
                                       u399_21 0039                         ??_do_I2C_SEND_ADR_READ 0071  
                                       _TX1REG 011A                                         _TX1STA 011E  
                     rdBlkRegCompleteHandler@p 0079                                      ??_i2c_ISR 0020  
                             ??_write_str_UART 0027                     ??_ADCC_GetConversionResult 0025  
                        ?_save_recovery_params 0070                                   ?_ring_buffer 0023  
                               __CFG_PWRTE$OFF 0000                   __end_ofi1_PWM6_LoadDutyValue 087E  
                        _i2c1_driver_getRXData 160C                               __end_of_mod1_LED 1744  
                             __end_of_mod2_LED 1739                               __end_of_mod3_LED 174F  
                             __end_of_mod4_LED 0800           __end_of_TMR1_DefaultInterruptHandler 15FA  
        __size_of_TMR1_DefaultInterruptHandler 0001                   _TMR1_DefaultInterruptHandler 15F9  
                                 _CCPTMRS1bits 021F                                         ___bmul 0894  
                  __end_of_do_I2C_DO_NACK_STOP 165B            __end_of_i2c_setDataCompleteCallback 1775  
                  _i2c_setDataCompleteCallback 1768                                         ___wmul 0A53  
                                    ??___awdiv 0027          __end_of_i2c1_driver_clearBusCollision 1618  
       __size_of_i2c1_driver_clearBusCollision 0003                  _i2c1_driver_clearBusCollision 1615  
                               __CFG_STVREN$ON 0000                                      ??___awmod 0027  
              __size_of_do_I2C_DO_NACK_RESTART 0005                                         _last1m 0059  
                                       _last5s 005A                            _EUSART_Transmit_ISR 0A93  
                                    ??_all_LED 002D                               _check_thresholds 0CE9  
                             __end_of_mode_LED 0B76                               ?_TMR0_Initialize 0070  
                                       _memset 044C                        __end_of_PWM6_Initialize 1782  
                             ___awdiv@quotient 002A                          ring_buffer@_ring_byte 0029  
                               ?_do_I2C_DO_ACK 0070                                ___awmod@divisor 0023  
                              ___awmod@counter 0028                                         cksum@i 0027  
                                       _str_rc 0130                                  ?_INT_CallBack 0070  
                      __end_of_DATAEE_ReadByte 080F                                      ??_sw1_EXT 0077  
                                    ??_cksum_w 002D                                _ADCC_Initialize 087E  
                  __end_of_i2c1_driver_sendACK 1627                                 _PMD_Initialize 16A0  
               __end_of_do_I2C_DO_ADDRESS_NACK 0BCC                    __end_of_i2c1_driver_restart 1606  
                                 ?_returnReset 0079                                      ?_ADC_read 0025  
                       ??_ADCC_StartConversion 0023                    __end_of_i2c1_driver_startRX 160C  
             __size_of_INT_SetInterruptHandler 0009       TMR2_SetInterruptHandler@InterruptHandler 0023  
     TMR1_SetInterruptHandler@InterruptHandler 0023       TMR0_SetInterruptHandler@InterruptHandler 0023  
      INT_SetInterruptHandler@InterruptHandler 0023                        __end_of_TMR1_WriteTimer 17EF  
                               _selectSubfield 0F5E                           ?_EUSART_Transmit_ISR 0070  
                             ??_config_routine 0045                               ?_TMR1_Initialize 0070  
                         __size_of_EUSART_Read 002E                              _SYSTEM_Initialize 0A14  
                      __end_of__initialization 00AC                                ??_i2c_setBuffer 0072  
                             _do_I2C_SEND_STOP 164C                             __size_of_do_I2C_RX 004A  
                           __size_of_do_I2C_TX 0054                             ?_SYSTEM_Initialize 0070  
                               _dump_UART_FIFO 093B                       __size_of_mode_select_LED 0020  
                     __size_of_do_I2C_TX_EMPTY 0033                       save_recovery_params@aux1 0030  
         __end_of_EUSART_SetTxInterruptHandler 16E7          __size_of_EUSART_SetTxInterruptHandler 0009  
                 _EUSART_SetTxInterruptHandler 16DE                            ___bmul@multiplicand 0023  
                      _rdBlkRegCompleteHandler 08C1                         __size_of_read_str_UART 0062  
                               __pcstackCOMMON 0070                                   __pidataBANK0 1726  
                                 __pidataBANK2 17CE                            ??_SYSTEM_Initialize 0026  
                                    ?_TMR0_ISR 0070                                      ?_TMR1_ISR 0070  
                                    ?_TMR2_ISR 0070                  ?_TMR1_DefaultInterruptHandler 0070  
                                __end_of_cksum 0A93                               _DATAEE_WriteByte 0AB6  
                           ring_buffer@clock_h 0023                             ring_buffer@clock_m 0024  
                           ring_buffer@clock_s 0025                               ?_TMR2_Initialize 0070  
                        getSubfieldInfo@h_tens 003B                                   LED_bin@value 0023  
                               ??_INT_CallBack 0078                         __end_of_PMD_Initialize 16A8  
                        getSubfieldInfo@m_tens 003D                    __size_of_EXT_INT_Initialize 000E  
                         _eusartRxStatusBuffer 00BD                                     ??_ADC_read 0027  
                       __end_of_selectSubfield 0FAC                ??_EUSART_SetOverrunErrorHandler 0025  
                  ADCC_StartConversion@channel 0023                                 setCallBack@idx 0074  
                                      ??_cksum 0025                               ?_TMR0_StartTimer 0070  
                       _do_I2C_DO_NACK_RESTART 165B                      __end_of_SYSTEM_Initialize 0A33  
                        ??_EUSART_Transmit_ISR 0070                                 _mssp1_clearIRQ 1612  
                                   __pbssBANK0 004E                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0120                           __end_of_EUSART_Write 0BF8  
             getSubfieldInfo@temp_thresh_units 0040                 __size_of_rd2RegCompleteHandler 0011  
                       __end_of_dump_UART_FIFO 0954                                        ?_ISR_3s 0070  
                __end_of_rd2RegCompleteHandler 0842                             read_ring@nreg_init 0028  
                           __size_of_read_UART 0011                         ??_save_recovery_params 002E  
               __size_of_wr2RegCompleteHandler 0011                  __end_of_wr2RegCompleteHandler 1800  
                  __size_of_EUSART_Receive_ISR 003D                           read_str_UART@max_len 002D  
                        _rd1RegCompleteHandler 0820                         ?_i2c1_driver_getRXData 0070  
                           __size_of_read_ring 003F                          _wr1RegCompleteHandler 080F  
                 __size_of_i2c_busCollisionISR 0004                                     __pmaintext 00B0  
                                ??_do_I2C_IDLE 0070                           __size_of_setCallBack 0026  
                                ??_do_I2C_RCEN 0070                                        ?___bmul 0023  
                ?_EUSART_SetTxInterruptHandler 0023               _EUSART_TxDefaultInterruptHandler 00EE  
             __end_of_TMR0_SetInterruptHandler 1702                        __size_of_TMR0_StopTimer 0003  
                                      ?___wmul 0023                                     ??_TMR0_ISR 0075  
                                   ??_TMR1_ISR 0072                                __CFG_PPS1WAY$ON 0000  
                                   ??_TMR2_ISR 0071                        __end_of_ADCC_Initialize 0894  
                   __end_of_PWM6_LoadDutyValue 093B                                ??_do_I2C_DO_ACK 0070  
                                   __pintentry 0004                           _limitTempThreshUnits 09BE  
                                      _ADFLTRH 0115                                        _ADFLTRL 0114  
                                      ?_memset 0023                                        _ADPREVH 008F  
                                      _ADPREVL 008E                               ?_PWM6_Initialize 0070  
                          i2c_setBuffer@buffer 0073                                        _ADSTPTH 0113  
                                      _ADSTPTL 0112                   ??_EUSART_DefaultErrorHandler 0071  
                              ?_PMD_Initialize 0070                 ?_i2c1_driver_clearBusCollision 0070  
                             ?_DATAEE_ReadByte 0023                              __end_of_do_I2C_RX 0E77  
                            __end_of_do_I2C_TX 1000                              ?_i2c1_driver_stop 0070  
                                _eusartRxCount 0050                  i1PWM6_LoadDutyValue@dutyValue 0070  
                         __size_of_recoverData 00C6                                        _LED_bin 096E  
                             _handler_clock_ms 174F                                        _SP1BRGH 011C  
                                      _SP1BRGL 011B                                        _INT_ISR 1660  
                           ??_i2c1_driver_stop 0070                                        _OSCCON1 088D  
                                      _OSCCON3 088F                                  ?_mssp1_setIRQ 0070  
                         i1_PWM6_LoadDutyValue 0868                                  _read_str_UART 057C  
                __size_of_EUSART_RxDataHandler 001B                                        _NVMADRH 081B  
                                      _NVMADRL 081A                                        _NVMDATH 081D  
                                      _OSCTUNE 0892                                        _NVMDATL 081C  
                       selectSubfield@subfield 0043                                        _NVMCON2 081F  
                              ?_selectSubfield 0070                                        _PWM6DCH 038D  
                                      _PWM6DCL 038C                                        _PWM6CON 038E  
                                      _SSP1ADD 018D                                        _SLRCONA 0F3B  
                                      _SLRCONB 0F46                                        _SLRCONC 0F51  
                                      _SLRCOND 0F5C                                        _SLRCONE 0F67  
                                      _SSP1BUF 018C                         __end_of_mssp1_clearIRQ 1615  
                                      _SSP1MSK 018E                 __size_of_ADCC_IsConversionDone 0007  
                                    ?_mod1_LED 0070                                      ?_mod2_LED 0070  
                                    ?_mod3_LED 0070                                      ?_mod4_LED 0070  
                     ??_EUSART_SetErrorHandler 0025                  __end_of_ADCC_IsConversionDone 1680  
                      ??_do_I2C_SEND_ADR_WRITE 0071                             __size_of_push_ring 0047  
                              _getSubfieldInfo 022A                               ?_TMR1_WriteTimer 0070  
                  ??_do_I2C_SEND_RESTART_WRITE 0070                             _i2c1_driver_TXData 1633  
                              ?_dump_UART_FIFO 0070                           DATAEE_WriteByte@bAdd 0029  
                           _i2c1_driver_i2cISR 00D5                                      ?_mode_LED 0070  
                              __size_of_ISR_3s 0019                                        _i2c_ISR 0BF8  
                              _limitHoursUnits 09A3                      ??_rdBlkRegCompleteHandler 007A  
                               ring_buffer@lum 0027                                 ring_buffer@tem 0026  
          __size_of_EUSART_DefaultErrorHandler 0004                             _i2c1_driver_isNACK 1680  
                          ?_i2c1_driver_TXData 0070                     ??_TMR2_SetInterruptHandler 0025  
                        __end_of_num_subfields 1805                           __size_of_ring_buffer 002F  
                         __CFG_SCANE$available 0000                      __size_of_checkDebounceSW1 005A  
                    __size_of_checkDebounceSW2 004D                                __size_of___bmul 0016  
                                      ___awdiv 05DE                                        ___awmod 07A1  
                        ?_limitTempThreshUnits 0070                                  ?_representLed 0070  
                              __size_of___wmul 0020                              ??_mode_select_LED 002D  
                            ??_do_I2C_TX_EMPTY 007A                                        _all_LED 063E  
                          ?_i2c1_driver_isNACK 0070                                __size_of_memset 00AE  
                                      __ptext1 0B76                                        __ptext2 0C53  
                                      __ptext3 0386                                        __ptext4 09D9  
                                      __ptext5 17BE                                        __ptext6 0A73  
                                      __ptext7 057C                                        __ptext8 0B25  
                                      __ptext9 08F1                            __end_of_do_I2C_IDLE 163D  
                          __end_of_do_I2C_RCEN 1679                                        _sw1_EXT 0ADA  
               ??_TMR1_DefaultInterruptHandler 0070                                        _cksum_w 17BE  
                            __end_of_read_UART 0853                                      _T1CONbits 020E  
                        _OSCILLATOR_Initialize 16F0                                        _last_ms 005C  
                                    _T2CONbits 028E                    __end_of_do_I2C_SEND_RESTART 164C  
                               ??_mssp1_setIRQ 0070                               ___awmod@dividend 0025  
                                   _duty_cycle 00C7                                    reset_recv@i 002D  
                               ?_read_str_UART 002D              __size_of_TMR1_SetInterruptHandler 0009  
                        ?i1_PWM6_LoadDutyValue 0070                           ??_i2c1_driver_TXData 0070  
                            __end_of_read_ring 0DA1                       ??_PIN_MANAGER_Initialize 0023  
                    ?_TMR1_SetInterruptHandler 0023                                      _T2HLTbits 028F  
                                      _nreg_pt 0060                        _INT_SetInterruptHandler 16E7  
                                      _lum_bin 004E                    __size_of_increment_subfield 0054  
                              ?_mssp1_clearIRQ 0070                                     ??_mod1_LED 002D  
                                   ??_mod2_LED 002D                                     ??_mod3_LED 002D  
                                   ??_mod4_LED 002D                                        main@t1m 0157  
                                      main@t5s 0156                       _do_I2C_SEND_RESTART_READ 163D  
                   __size_of_SYSTEM_Initialize 001F                                        clrloop0 1667  
                                      _str_snd 0140                                     _hours_tens 00D1  
                         __size_of_returnReset 0002                           end_of_initialization 00AC  
                                    _T2RSTbits 0291                           ??_i2c1_driver_isNACK 0070  
                     __end_of_check_thresholds 0D25          __end_of_EUSART_SetOverrunErrorHandler 16D5  
       __size_of_EUSART_SetOverrunErrorHandler 0009                  _EUSART_SetOverrunErrorHandler 16CC  
                    __size_of_i2c_restartWrite 0002                                        init_ram 166C  
                                      memset@c 0023                                     ??_mode_LED 002D  
                 __end_of_i2c1_driver_sendNACK 162B                                        memset@k 002A  
                                      memset@n 0025                                        memset@s 002C  
                       ?_rd1RegCompleteHandler 0079                                        initloop 166D  
                         __end_of_INT_CallBack 1768                              _EUSART_Initialize 0DA1  
                       ?_wr1RegCompleteHandler 0079                   __end_of_i2c1_driver_resetBus 15FC  
                                   _reset_recv 09D9                                     _lum_thresh 0066  
                           ?_EUSART_Initialize 0070                                  push_ring@nreg 002D  
                             mode_LED@subfield 002F                             _EUSART_is_rx_ready 1714  
                               ??_representLed 002D                      _do_I2C_SEND_RESTART_WRITE 1642  
                           _EUSART_is_tx_ready 171D                               ?_ADCC_Initialize 0070  
                            __end_of_push_ring 0E2D                          __CFG_WDTCPS$WDTCPS_14 0000  
                         write_str_UART@string 0028                            ??_EUSART_Initialize 0025  
               ??_EUSART_SetTxInterruptHandler 0025                                     _returnStop 15FE  
                     _TMR0_SetInterruptHandler 16F9                                      _PORTBbits 000D  
                          ?_EUSART_is_rx_ready 0070                                      _PORTCbits 000E  
              __end_of_rdBlkRegCompleteHandler 08D9                       __end_of_do_I2C_SEND_STOP 1651  
                         __CFG_WDTCCS$HFINTOSC 0000                            ?_EUSART_is_tx_ready 0070  
                      __end_of_getSubfieldInfo 0386                     __end_ofi1_checkDebounceSW1 074D  
                                    _TRISCbits 0013           __size_of_i2c_setDataCompleteCallback 000D  
                        __size_of_EUSART_Write 002C                        __end_of_limitHoursUnits 09BE  
                                  returnStop@p 0079                               __CFG_FEXTOSC$OFF 0000  
              __size_of_EUSART_SetErrorHandler 0009                              __size_of_ADC_read 001A  
                     __end_of_DATAEE_WriteByte 0ADA                   i2c_setDataCompleteCallback@p 0077  
                    __end_of_EUSART_Initialize 0DE6                           ??_EUSART_is_rx_ready 0023  
                         ??_EUSART_is_tx_ready 0023                                 __end_of_ISR_3s 0922  
                __size_of_do_I2C_SEND_ADR_READ 0009                                 _TMR0_StopTimer 1600  
                       ??_limitTempThreshUnits 002C                                    _do_I2C_IDLE 1638  
                                  _do_I2C_RCEN 1672           __end_of_TMR2_DefaultInterruptHandler 15FB  
        __size_of_TMR2_DefaultInterruptHandler 0001                   _TMR2_DefaultInterruptHandler 15FA  
                                   _write_UART 08F1                                 __end_of___bmul 08AA  
           __end_of_EUSART_DefaultErrorHandler 161F                     _EUSART_DefaultErrorHandler 161B  
                               __end_of___wmul 0A73                                   _EUSART_Write 0BCC  
                            __size_of_TMR0_ISR 000F                              __size_of_TMR1_ISR 0017  
                            __size_of_TMR2_ISR 000F                         ?_OSCILLATOR_Initialize 0070  
                               __end_of_memset 04FA              __size_of_ADCC_GetConversionResult 0009  
                    ??_INT_SetInterruptHandler 0025                                ??_read_str_UART 002E  
                 __size_of_do_I2C_DO_NACK_STOP 0005                      ?_ADCC_GetConversionResult 0023  
                       ??i1_PWM6_LoadDutyValue 0072                        ?_do_I2C_DO_NACK_RESTART 0070  
                          start_initialization 007B                         getSubfieldInfo@h_units 003C  
                          _i2c_busCollisionISR 162B                       __size_of_TMR0_Initialize 0015  
              __size_of_PIN_MANAGER_Initialize 004D                                  ??_EUSART_Read 0023  
                             write_UART@rxData 0025                         getSubfieldInfo@m_units 003E  
 EUSART_SetRxInterruptHandler@interruptHandler 0023   EUSART_SetTxInterruptHandler@interruptHandler 0023  
                __size_of_ADCC_StartConversion 0008                                   setCallBack@p 0072  
                 __size_of_i2c1_driver_sendACK 0004                        i2c_setBuffer@bufferSize 0070  
                      ??_i2c1_driver_getRXData 0070                         rd1RegCompleteHandler@p 0079  
                                     ??_ISR_3s 0074                   __size_of_i2c1_driver_restart 0003  
                 __size_of_i2c1_driver_startRX 0003                            DATAEE_ReadByte@bAdd 0023  
                        __end_of_i2c_setBuffer 17BE                   ?_INT_DefaultInterruptHandler 0070  
                       __end_of_TMR0_StopTimer 1603                       __end_of_handler_clock_ms 175B  
               ?_EUSART_SetOverrunErrorHandler 0023                           ?_i2c_busCollisionISR 0070  
                             __CFG_LPBOREN$OFF 0000                                    ?_reset_recv 0070  
                         __end_of_mssp1_setIRQ 1612                       __size_of_TMR1_Initialize 001F  
                   _EUSART_FramingErrorHandler 00EA                                       ??___bmul 0024  
                             ??_PMD_Initialize 0023                               _checkDebounceSW1 0699  
                             _checkDebounceSW2 0EC4                                       ??___wmul 0027  
                       _EUSART_SetErrorHandler 16BA                         wr1RegCompleteHandler@p 0079  
                                ?_do_I2C_RESET 0070                                    __pdataBANK0 0062  
                                  __pdataBANK2 0140                                       ??_memset 0027  
                      __size_of_write_str_UART 0027                     __end_of_EXT_INT_Initialize 1790  
                ?_TMR2_DefaultInterruptHandler 0070                                     memset@dest 0029  
                                  ?_returnStop 0079                             write_str_UART@size 0026  
                             ??_selectSubfield 0041                 __end_of_do_I2C_DO_NACK_RESTART 1660  
                                   read_ring@i 002D                           _i2c1_driver_sendNACK 1627  
                            read_ring@absindex 002F                    __end_of_EUSART_Transmit_ISR 0AB6  
                             ?_getSubfieldInfo 0070                                       ?_LED_bin 0023  
                                  __pbssCOMMON 007D                                      ___latbits 0002  
                         _i2c1_driver_resetBus 15FB                                       ?_INT_ISR 0070  
                      save_recovery_params@aux 002F                                  __pcstackBANK0 0020  
                                __pcstackBANK2 0154                             _PWM6_LoadDutyValue 0922  
                     __size_of_TMR2_Initialize 0018                               ??_dump_UART_FIFO 0025  
                                    _do_I2C_RX 0E2D                                      _do_I2C_TX 0FAC  
                        __size_of_INT_CallBack 000D                               ?_limitHoursUnits 0070  
                         __end_of_representLed 0F5E                 __size_of_do_I2C_SEND_ADR_WRITE 0008  
                   __end_of_EUSART_Receive_ISR 0D62                              __size_of_mod1_LED 000B  
                            __size_of_mod2_LED 000A                  __end_of_do_I2C_SEND_ADR_WRITE 1698  
                            __size_of_mod3_LED 000B                              __size_of_mod4_LED 000B  
                          ?_PWM6_LoadDutyValue 0029                               _i2c_restartWrite 15FC  
                   __size_of_EUSART_Initialize 0045                                _mode_select_LED 0A33  
                    __size_of_i2c1_driver_stop 0003               _EUSART_RxDefaultInterruptHandler 00EC  
                             write_str_UART@id 0029                                       ?_i2c_ISR 0070  
                          __end_of_EUSART_Read 0C53                                _do_I2C_TX_EMPTY 0C82  
                        _TMR0_InterruptHandler 00E6                                  ??_setCallBack 0073  
                                    __pnvBANK0 006B                                      __pnvBANK1 00E0  
                                    __pnvBANK2 0150                          _rd2RegCompleteHandler 0831  
                     __size_of_TMR0_StartTimer 0003                                ?_TMR0_StopTimer 0070  
                        ??_i2c_busCollisionISR 0070                              __size_of_mode_LED 002A  
                        __end_of_fsmStateTable 1020                  __size_of_save_recovery_params 002A  
                 __end_of_EUSART_RxDataHandler 09A3                         _PIN_MANAGER_Initialize 0E77  
                        _wr2RegCompleteHandler 17EF                  ??_INT_DefaultInterruptHandler 0070  
                         EUSART_Read@readValue 0024                        __size_of_config_routine 0082  
             __end_of_TMR1_SetInterruptHandler 170B                              read_ring@subindex 002A  
                               ??_do_I2C_RESET 0070                                       ?___awdiv 0023  
                                    __ptext100 0820                                      __ptext101 080F  
                                    __ptext110 1603                                      __ptext102 0002  
                                    __ptext111 1623                                      __ptext103 15FE  
                                    __ptext120 0909                                      __ptext112 179F  
                                    __ptext104 15FC                                      __ptext121 15F8  
                                    __ptext113 15FA                                      __ptext105 17EF  
                                    __ptext130 0D25                                      __ptext122 1600  
                                    __ptext114 174F                                      __ptext106 1768  
                                    __ptext131 161F                                      __ptext123 1660  
                                    __ptext115 08AA                                      __ptext107 0AFF  
                                    __ptext132 15F6                                      __ptext124 175B  
                                    __ptext116 15F9                                      __ptext108 17AE  
                                    __ptext133 161B                                      __ptext125 15F7  
                                    __ptext117 0CB5                                      __ptext109 1606  
                                    __ptext134 0988                                      __ptext126 0ADA  
                                    __ptext118 17DE                                      __ptext127 06F3  
                                    __ptext119 1790                                      __ptext128 0868  
                                    __ptext129 0A93                                       ?___awmod 0023  
                                  ?_write_UART 0070                       ??_do_I2C_DO_ADDRESS_NACK 007A  
                  _i2c1_driver_busCollisionISR 00D7                                   _eusartRxHead 0052  
                                     ?_all_LED 0070                                   _eusartTxHead 0054  
                                 _eusartRxTail 0051                                   _eusartTxTail 0053  
                        __end_of_do_I2C_DO_ACK 1656                           ??_PWM6_LoadDutyValue 002B  
                                ??_recoverData 002F                   ??_INTERRUPT_InterruptManager 007D  
                   ??_do_I2C_SEND_RESTART_READ 0070                          ?_i2c1_driver_sendNACK 0070  
                                     ?_sw1_EXT 0070                                       ?_cksum_w 0070  
                      _eusartTxBufferRemaining 006B                                   _INT_CallBack 175B  
                             ??_mssp1_clearIRQ 0070                                       _BAUD1CON 011F  
                        ?_i2c1_driver_resetBus 0070             __size_of_do_I2C_SEND_RESTART_WRITE 0005  
                                     _ADC_read 0954                                     ?_do_I2C_RX 0070  
                                   ?_do_I2C_TX 0070                       __size_of_PWM6_Initialize 000D  
                                    _read_UART 0842                            __size_of_reset_recv 001C  
                               __size_of_cksum 0020                                       _T2CLKCON 0290  
                     __size_of_DATAEE_ReadByte 000F                        ??_rd1RegCompleteHandler 007A  
                                    _read_ring 0D62                                      _min_units 00CB  
                               _eusartRxBuffer 0120                        ??_wr1RegCompleteHandler 007A  
                        _ADCC_IsConversionDone 1679                              ?_check_thresholds 0070  
                            ??_TMR0_Initialize 0025                                 _eusartTxBuffer 0128  
                               ___wmul@product 0027                                       _LATAbits 0016  
       EUSART_SetErrorHandler@interruptHandler 0023                            __size_of_returnStop 0002  
                           ??_check_thresholds 002D                                      clear_ram0 1666  
                                     _PIE0bits 0716                              _handler_clock_hms 0CB5  
                                    _nreg_init 0061                                  ??_ring_buffer 0028  
                                     _PIE3bits 0719                                       _PIE4bits 071A  
                            _eusartRxLastError 00D9                       __size_of_TMR1_WriteTimer 0011  
          __size_of_INTERRUPT_InterruptManager 0075                     ??_TMR0_SetInterruptHandler 0025  
                                     _PIR0bits 070C                                    _config_mode 0058  
              ??_EUSART_SetFramingErrorHandler 0025                                       _PIR3bits 070F  
                                    _ring_byte 00DB                                       _PIR4bits 0710  
                           ?_handler_clock_hms 0070                              _EUSART_is_tx_done 162F  
                                     _SSP1CON1 0190                                       _SSP1CON2 0191  
                                     _TMR0_ISR 1790      __end_of_EUSART_DefaultOverrunErrorHandler 1623  
   __size_of_EUSART_DefaultOverrunErrorHandler 0004            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 161F  
                                     _TMR1_ISR 08AA                                       _TMR2_ISR 179F  
                 ?_i2c_setDataCompleteCallback 0075                                       _SSP1STAT 018F  
                          __end_of_setCallBack 0B25                             ?_EUSART_is_tx_done 0070  
                             push_ring@nreg_pt 0033                                      _threshold 00C5  
                          ??_handler_clock_hms 0070                              ??_TMR1_Initialize 0025  
                                   _ADCON0bits 0093                                     _ADCON1bits 0094  
                                   _ADCON2bits 0095                                     _ADCON3bits 0096  
                            ___wmul@multiplier 0023                                      _push_ring 0DE6  
                            ?_do_I2C_SEND_STOP 0070                            ??_EUSART_is_tx_done 0023  
                                     _WPUBbits 0F44                     __end_of_increment_subfield 07A1  
         __size_of_INT_DefaultInterruptHandler 0001                 ??_TMR2_DefaultInterruptHandler 0070  
            __size_of_TMR2_SetInterruptHandler 0009                                  ??_returnReset 007A  
                    ?_TMR2_SetInterruptHandler 0023                             ??_do_I2C_SEND_STOP 0070  
                  __size_of_i2c1_driver_TXData 0005                               __size_of_LED_bin 001A  
                        DATAEE_WriteByte@bData 002B                            __end_of_recoverData 044C  
                                   ?_read_UART 0070              __end_of_do_I2C_SEND_RESTART_WRITE 1647  
                             __size_of_INT_ISR 0006                        __end_of_mode_select_LED 0A53  
                                  _EUSART_Read 0C25                        __end_of_do_I2C_TX_EMPTY 0CB5  
                                   ?_read_ring 0027                       ?_rdBlkRegCompleteHandler 0079  
                            ?_DATAEE_WriteByte 0029                            __size_of_write_UART 0018  
                 __size_of_do_I2C_SEND_RESTART 0005                    __size_of_i2c1_driver_isNACK 0008  
                    __end_of_handler_clock_hms 0CE9                          __size_of_mssp1_setIRQ 0003  
                            ??_TMR2_Initialize 0025                         ?_rd2RegCompleteHandler 0079  
                           ??_DATAEE_WriteByte 002C                             i1_checkDebounceSW1 06F3  
                          _do_I2C_DO_NACK_STOP 1656                               __size_of_i2c_ISR 002D  
                       ?_wr2RegCompleteHandler 0079                                     _ADSTATbits 0097  
                    __end_of_EUSART_is_tx_done 1633               __end_of_ADCC_GetConversionResult 16BA  
                                 ?_do_I2C_IDLE 0070                            ?i1_checkDebounceSW1 0070  
                                 ?_do_I2C_RCEN 0070                                     push_ring@i 0032  
                      ??_OSCILLATOR_Initialize 0023                            _EUSART_ErrorHandler 0150  
                            ??_TMR0_StartTimer 0023                            __end_of_ring_buffer 0C82  
                          _i2c1_driver_sendACK 1623                               __size_of___awdiv 0060  
                               _write_str_UART 0B25                               __size_of___awmod 0054  
              __size_of_do_I2C_DO_ADDRESS_NACK 002C                    ?_EUSART_DefaultErrorHandler 0070  
                          i2c1_driver_TXData@d 0070                         ??_i2c1_driver_sendNACK 0070  
                ??_i2c_setDataCompleteCallback 0078                               __size_of_all_LED 005B  
                          _i2c1_driver_restart 1603                       _TMR1_SetInterruptHandler 1702  
                         ?_do_I2C_DO_NACK_STOP 0070                            _i2c1_driver_startRX 1609  
                 __end_of_do_I2C_SEND_ADR_READ 16B1                                     ?_push_ring 002D  
                       ??_i2c1_driver_resetBus 0070                          _TMR1_InterruptHandler 00E2  
                             __size_of_sw1_EXT 0025                               __size_of_cksum_w 0010  
                        __size_of_representLed 004D                                     _T0CON0bits 001E  
                     __size_of_ADCC_Initialize 0016                               read_ring@nreg_pt 002E  
                         _EUSART_RxDataHandler 0988                                   _mssp1_setIRQ 160F  
                                  ??_do_I2C_RX 007A                                    ??_do_I2C_TX 007A  
                         ??i1_checkDebounceSW1 0070                                       __ptext10 171D  
                                     __ptext11 162F                                       __ptext20 0DE6  
                                     __ptext12 0BCC                                       __ptext21 0AB6  
                                     __ptext13 0842                                     _T1GCONbits 020F  
                                     __ptext30 09BE                                       __ptext22 04FA  
                                     __ptext14 044C                                       __ptext31 09A3  
                                     __ptext23 0F5E                                       __ptext15 093B  
                                     __ptext40 063E                                       __ptext32 05DE  
                                     __ptext24 0B4C                                       __ptext16 1714  
                                     __ptext41 0A33                                       __ptext33 074D  
                                     __ptext25 07F5                                       __ptext17 0C25  
                                     __ptext50 0853                                       __ptext42 0CE9  
                                     __ptext34 0F11                                       __ptext26 1744  
                                     __ptext18 0D62                                       __ptext51 16F9  
                                     __ptext43 1618                                       __ptext35 0A53  
                                     __ptext27 172F                                       __ptext19 0800  
                                     __ptext60 16D5                                       __ptext52 1775  
                                     __ptext44 0922                                       __ptext36 0EC4  
                                     __ptext28 1739                                       __ptext61 16CC  
                                     __ptext53 16A0                                       __ptext45 0A14  
                                     __ptext37 0699                                       __ptext29 022A  
                                     __ptext62 16C3                                       __ptext54 0E77  
                                     __ptext46 08D9                                       __ptext38 0894  
                                     __ptext71 162B                                       __ptext63 16BA  
                                     __ptext55 16F0                                       __ptext47 170B  
                                     __ptext39 07A1                                       __ptext80 1651  
                                     __ptext72 1615                                       __ptext64 087E  
                                     __ptext56 1782                                       __ptext48 09F5  
                                     __ptext81 1672                                       __ptext73 0BF8  
                                     __ptext65 096E                                       __ptext57 16E7  
                                     __ptext49 1702                                       __ptext90 0C82  
                                     __ptext82 1690                                       __ptext74 1612  
                                     __ptext66 0954                                       __ptext58 0DA1  
                                     __ptext91 160F                                       __ptext83 16A8  
                                     __ptext75 0E2D                                       __ptext67 1698  
                                     __ptext59 16DE                                       __ptext92 1680  
                                     __ptext84 164C                                       __ptext76 0FAC  
                                     __ptext68 1679                                       __ptext93 1633  
                                     __ptext85 1647                                       __ptext77 0BA0  
                                     __ptext69 16B1                                       __ptext94 160C  
                                     __ptext86 1642                                       __ptext78 165B  
                                     __ptext95 1627                                       __ptext87 163D  
                                     __ptext79 1656                                       __ptext96 15FB  
                                     __ptext88 1638                                       __ptext97 1609  
                                     __ptext89 1688                                       __ptext98 08C1  
                                     __ptext99 0831                                       _mod1_LED 1739  
                                 _SSP1CON1bits 0190                                       _mod2_LED 172F  
                     __end_of_checkDebounceSW1 06F3                                   _SSP1CON2bits 0191  
                     __end_of_checkDebounceSW2 0F11                                       _mod3_LED 1744  
                                     _mod4_LED 07F5                         ?_ADCC_IsConversionDone 0070  
                         ?_i2c1_driver_sendACK 0070                           __end_of_do_I2C_RESET 1690  
                  DATAEE_WriteByte@GIEBitValue 002C                           ?_i2c1_driver_restart 0070  
                          __end_of_returnReset 0004                                       _last_ms2 005B  
                                     _mode_LED 0B4C                              ??_PWM6_Initialize 0023  
                             _i2c1_driver_stop 1606                    __size_of_EUSART_is_rx_ready 0009  
                                __size_of_main 017A                           ?_i2c1_driver_startRX 0070  
               __size_of_i2c1_driver_getRXData 0003                                       _min_tens 00CD  
                __end_of_i2c1_driver_getRXData 160F                    __size_of_EUSART_is_tx_ready 0009  
         __end_of_TMR0_DefaultInterruptHandler 15F9          __size_of_TMR0_DefaultInterruptHandler 0001  
                 _TMR0_DefaultInterruptHandler 15F8                              ??_DATAEE_ReadByte 0025  
                         __CFG_WDTCWS$WDTCWS_7 0000                                    _setCallBack 0AFF  
                      ?_EUSART_SetErrorHandler 0023                             dump_UART_FIFO@dump 0025  
                                 ??_reset_recv 002D                                     _RC1STAbits 011D  
                            ?_handler_clock_ms 0070                                       _set_mode 00DA  
                               _config_routine 04FA  EUSART_SetOverrunErrorHandler@interruptHandler 0023  
                                _num_subfields 1800                         __end_of_write_str_UART 0B4C  
                 __end_of_ADCC_StartConversion 16A0                                       int$flags 007E  
                           ??_handler_clock_ms 0070                                   _representLed 0F11  
                __size_of_limitTempThreshUnits 001B             __end_of_INTERRUPT_InterruptManager 0079  
                   _INTERRUPT_InterruptManager 0004                            _mode_field_subfield 0062  
        __end_of_EUSART_SetFramingErrorHandler 16CC         __size_of_EUSART_SetFramingErrorHandler 0009  
                _EUSART_SetFramingErrorHandler 16C3                                   _SSP1STATbits 018F  
                            ??_TMR1_WriteTimer 0072                                       cksum@res 0026  
             __end_of_do_I2C_SEND_RESTART_READ 1642                                   ??_returnStop 007A  
                                  _hours_units 00CF                       __end_of_i2c_restartWrite 15FE  
                        ??_do_I2C_DO_NACK_STOP 0070                                    _recoverData 0386  
                                   _INTCONbits 000B                          __end_of_read_str_UART 05DE  
                                  _NVMCON1bits 081E                          ?_EUSART_RxDataHandler 0070  
                    check_thresholds@threshold 002E                  __size_ofi1_PWM6_LoadDutyValue 0016  
                         _INT_InterruptHandler 00E8                                    ??_read_UART 0025  
                             ?_mode_select_LED 0070                             __end_of_reset_recv 09F5  
                        ??_i2c1_driver_sendACK 0070                             _EXT_INT_Initialize 1782  
                             ?_do_I2C_TX_EMPTY 0070                                    ??_read_ring 002B  
                       _do_I2C_DO_ADDRESS_NACK 0BA0                                       intlevel1 0000  
                             ??_TMR0_StopTimer 0070                          ??_i2c1_driver_restart 0070  
                   __size_of_handler_clock_hms 0034                         rd2RegCompleteHandler@p 0079  
                        ??_i2c1_driver_startRX 0070                        ?_PIN_MANAGER_Initialize 0070  
                            i2c_restartWrite@p 0079                 __end_of_EUSART_SetErrorHandler 16C3  
                            __CFG_CLKOUTEN$OFF 0000                            ?_EXT_INT_Initialize 0070  
                           __end_of_returnStop 1600                         __end_of_config_routine 057C  
                   __size_of_EUSART_is_tx_done 0004                                    _ring_buffer 0C53  
         __end_of_EUSART_SetRxInterruptHandler 16DE          __size_of_EUSART_SetRxInterruptHandler 0009  
                 _EUSART_SetRxInterruptHandler 16D5                  ?_TMR0_DefaultInterruptHandler 0070  
                              ?_write_str_UART 0026                             _EUSART_Receive_ISR 0D25  
                                 ??_write_UART 0025                         wr2RegCompleteHandler@p 0079  
EUSART_SetFramingErrorHandler@interruptHandler 0023                       ?_INT_SetInterruptHandler 0023  
                     _ADCC_GetConversionResult 16B1                                    _temp_thresh 0067  
                                __pstringtext1 1000                                  __pstringtext2 1800  
                                __pstringtext3 1020                                  __pstringtext4 0000  
                         ??_EXT_INT_Initialize 0025                                 read_ring@index 0029  
                                  ??_push_ring 0030                            ?_EUSART_Receive_ISR 0070  
                                   _SSP1DATPPS 0EC6                   __end_of_save_recovery_params 0BA0  
                                   _SSP1CLKPPS 0EC5                                _TMR0_Initialize 0853  
                       __size_of_i2c_setBuffer 0010                                    _returnReset 0002  
                  PWM6_LoadDutyValue@dutyValue 0029                                     _TX1STAbits 011E  
                           EUSART_Write@txData 0024                   __size_of_EUSART_Transmit_ISR 0023  
                                read_ring@nreg 0027                 __end_of_PIN_MANAGER_Initialize 0EC4  
                            ??_ADCC_Initialize 0023                    __end_of_i2c_busCollisionISR 162F  
                     __size_of_getSubfieldInfo 015C                 __size_of_rd1RegCompleteHandler 0011  
                __end_of_rd1RegCompleteHandler 0831                             __end_of_write_UART 0909  
                           push_ring@nreg_init 002E                 __size_of_wr1RegCompleteHandler 0011  
                         ??_EUSART_Receive_ISR 0071                  __end_of_wr1RegCompleteHandler 0820  
                        _TMR2_InterruptHandler 00E0                          _do_I2C_SEND_ADR_WRITE 1690  
                           push_ring@ring_byte 002F                       __size_of_limitHoursUnits 001B  
                         _do_I2C_SEND_ADR_READ 16A8                                ?_config_routine 0070  
                              _TMR1_Initialize 09F5  
