

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Nov 28 19:54:25 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	psect	text43,local,class=CODE,merge=1,delta=2
    63                           	psect	text44,local,class=CODE,merge=1,delta=2
    64                           	psect	text45,local,class=CODE,merge=1,delta=2
    65                           	psect	text46,local,class=CODE,merge=1,delta=2
    66                           	psect	text47,local,class=CODE,merge=1,delta=2
    67                           	psect	text48,local,class=CODE,merge=1,delta=2
    68                           	psect	text49,local,class=CODE,merge=1,delta=2
    69                           	psect	text50,local,class=CODE,merge=1,delta=2
    70                           	psect	text51,local,class=CODE,merge=1,delta=2
    71                           	psect	text52,local,class=CODE,merge=1,delta=2
    72                           	psect	text53,local,class=CODE,merge=1,delta=2
    73                           	psect	text54,local,class=CODE,merge=1,delta=2
    74                           	psect	text55,local,class=CODE,merge=1,delta=2
    75                           	psect	intentry,global,class=CODE,delta=2
    76                           	psect	text57,local,class=CODE,merge=1,delta=2
    77                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    78                           	psect	text59,local,class=CODE,merge=1,delta=2
    79                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    80                           	psect	text61,local,class=CODE,merge=1,delta=2
    81                           	psect	text62,local,class=CODE,merge=1,delta=2
    82                           	psect	text63,local,class=CODE,merge=1,delta=2
    83                           	psect	text64,local,class=CODE,merge=1,delta=2
    84                           	psect	text65,local,class=CODE,merge=1,delta=2
    85                           	psect	text66,local,class=CODE,merge=1,delta=2
    86                           	psect	text67,local,class=CODE,merge=1,delta=2
    87                           	psect	text68,local,class=CODE,merge=1,delta=2
    88                           	psect	text69,local,class=CODE,merge=1,delta=2
    89                           	psect	text70,local,class=CODE,merge=1,delta=2
    90                           	psect	text71,local,class=CODE,merge=1,delta=2
    91                           	psect	text72,local,class=CODE,merge=1,delta=2
    92                           	psect	text73,local,class=CODE,merge=1,delta=2
    93                           	psect	text74,local,class=CODE,merge=1,delta=2
    94                           	psect	text75,local,class=CODE,merge=1,delta=2
    95                           	psect	text76,local,class=CODE,merge=1,delta=2
    96                           	psect	text77,local,class=CODE,merge=1,inline,delta=2
    97                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
    98                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
    99                           	psect	text80,local,class=CODE,merge=1,inline,delta=2
   100                           	psect	text81,local,class=CODE,merge=1,inline,delta=2
   101                           	psect	text82,local,class=CODE,merge=1,inline,delta=2
   102                           	psect	text83,local,class=CODE,merge=1,inline,delta=2
   103                           	psect	text84,local,class=CODE,merge=1,delta=2
   104                           	psect	text85,local,class=CODE,merge=1,delta=2
   105                           	psect	text86,local,class=CODE,merge=1,delta=2
   106                           	psect	text87,local,class=CODE,merge=1,delta=2
   107                           	psect	text88,local,class=CODE,merge=1,delta=2
   108                           	psect	text89,local,class=CODE,merge=1,delta=2
   109                           	psect	text90,local,class=CODE,merge=1,delta=2
   110                           	psect	text91,local,class=CODE,merge=1,delta=2
   111                           	psect	text92,local,class=CODE,merge=1,delta=2
   112                           	psect	text93,local,class=CODE,merge=1,delta=2
   113                           	psect	text94,local,class=CODE,merge=1,delta=2
   114                           	psect	text95,local,class=CODE,merge=1,inline,delta=2
   115                           	psect	text96,local,class=CODE,merge=1,inline,delta=2
   116                           	psect	text97,local,class=CODE,merge=1,inline,delta=2
   117                           	psect	text98,local,class=CODE,merge=1,delta=2
   118                           	psect	text99,local,class=CODE,merge=1,delta=2
   119                           	psect	text100,local,class=CODE,merge=1,delta=2
   120                           	psect	text101,local,class=CODE,merge=1,delta=2
   121                           	psect	text102,local,class=CODE,merge=1,delta=2
   122                           	psect	text103,local,class=CODE,merge=1,delta=2
   123                           	psect	text104,local,class=CODE,merge=1,delta=2
   124                           	psect	text105,local,class=CODE,merge=1,delta=2
   125                           	psect	text106,local,class=CODE,merge=1,delta=2
   126                           	psect	text107,local,class=CODE,merge=1,delta=2
   127                           	psect	text108,local,class=CODE,merge=1,delta=2
   128                           	psect	text109,local,class=CODE,merge=1,delta=2
   129                           	psect	text110,local,class=CODE,merge=1,delta=2
   130                           	psect	text111,local,class=CODE,merge=1,delta=2
   131                           	psect	text112,local,class=CODE,merge=1,delta=2
   132                           	psect	text113,local,class=CODE,merge=1,delta=2
   133                           	psect	text114,local,class=CODE,merge=1,delta=2
   134                           	dabs	1,0x7E,2
   135  0000                     
   136                           ; Version 2.10
   137                           ; Generated 31/07/2019 GMT
   138                           ; 
   139                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   140                           ; All rights reserved.
   141                           ; 
   142                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   143                           ; 
   144                           ; Redistribution and use in source and binary forms, with or without modification, are
   145                           ; permitted provided that the following conditions are met:
   146                           ; 
   147                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   148                           ;        conditions and the following disclaimer.
   149                           ; 
   150                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   151                           ;        of conditions and the following disclaimer in the documentation and/or other
   152                           ;        materials provided with the distribution.
   153                           ; 
   154                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   155                           ;        software without specific prior written permission.
   156                           ; 
   157                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   158                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   159                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   160                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   161                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   162                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   163                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   164                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   165                           ; 
   166                           ; 
   167                           ; Code-generator required, PIC16F18875 Definitions
   168                           ; 
   169                           ; SFR Addresses
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001C                     	;# 
   198  001C                     	;# 
   199  001D                     	;# 
   200  001D                     	;# 
   201  001E                     	;# 
   202  001F                     	;# 
   203  008C                     	;# 
   204  008C                     	;# 
   205  008D                     	;# 
   206  008E                     	;# 
   207  008E                     	;# 
   208  008F                     	;# 
   209  0090                     	;# 
   210  0090                     	;# 
   211  0091                     	;# 
   212  0093                     	;# 
   213  0094                     	;# 
   214  0095                     	;# 
   215  0096                     	;# 
   216  0097                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009A                     	;# 
   220  009B                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  010E                     	;# 
   227  010E                     	;# 
   228  010F                     	;# 
   229  0110                     	;# 
   230  0110                     	;# 
   231  0111                     	;# 
   232  0112                     	;# 
   233  0112                     	;# 
   234  0113                     	;# 
   235  0114                     	;# 
   236  0114                     	;# 
   237  0115                     	;# 
   238  0116                     	;# 
   239  0116                     	;# 
   240  0117                     	;# 
   241  0119                     	;# 
   242  0119                     	;# 
   243  0119                     	;# 
   244  011A                     	;# 
   245  011A                     	;# 
   246  011A                     	;# 
   247  011B                     	;# 
   248  011B                     	;# 
   249  011B                     	;# 
   250  011B                     	;# 
   251  011B                     	;# 
   252  011C                     	;# 
   253  011C                     	;# 
   254  011C                     	;# 
   255  011D                     	;# 
   256  011D                     	;# 
   257  011D                     	;# 
   258  011E                     	;# 
   259  011E                     	;# 
   260  011E                     	;# 
   261  011F                     	;# 
   262  011F                     	;# 
   263  011F                     	;# 
   264  011F                     	;# 
   265  011F                     	;# 
   266  018C                     	;# 
   267  018D                     	;# 
   268  018E                     	;# 
   269  018F                     	;# 
   270  0190                     	;# 
   271  0191                     	;# 
   272  0192                     	;# 
   273  0196                     	;# 
   274  0197                     	;# 
   275  0198                     	;# 
   276  0199                     	;# 
   277  019A                     	;# 
   278  019B                     	;# 
   279  019C                     	;# 
   280  020C                     	;# 
   281  020C                     	;# 
   282  020D                     	;# 
   283  020E                     	;# 
   284  020F                     	;# 
   285  020F                     	;# 
   286  0210                     	;# 
   287  0210                     	;# 
   288  0211                     	;# 
   289  0211                     	;# 
   290  0212                     	;# 
   291  0212                     	;# 
   292  0213                     	;# 
   293  0214                     	;# 
   294  0215                     	;# 
   295  0215                     	;# 
   296  0216                     	;# 
   297  0216                     	;# 
   298  0217                     	;# 
   299  0217                     	;# 
   300  0218                     	;# 
   301  0218                     	;# 
   302  0219                     	;# 
   303  021A                     	;# 
   304  021B                     	;# 
   305  021B                     	;# 
   306  021C                     	;# 
   307  021C                     	;# 
   308  021D                     	;# 
   309  021D                     	;# 
   310  021E                     	;# 
   311  021F                     	;# 
   312  028C                     	;# 
   313  028C                     	;# 
   314  028D                     	;# 
   315  028D                     	;# 
   316  028E                     	;# 
   317  028F                     	;# 
   318  0290                     	;# 
   319  0290                     	;# 
   320  0291                     	;# 
   321  0292                     	;# 
   322  0292                     	;# 
   323  0293                     	;# 
   324  0293                     	;# 
   325  0294                     	;# 
   326  0295                     	;# 
   327  0296                     	;# 
   328  0296                     	;# 
   329  0297                     	;# 
   330  0298                     	;# 
   331  0298                     	;# 
   332  0299                     	;# 
   333  0299                     	;# 
   334  029A                     	;# 
   335  029B                     	;# 
   336  029C                     	;# 
   337  029C                     	;# 
   338  029D                     	;# 
   339  030C                     	;# 
   340  030C                     	;# 
   341  030D                     	;# 
   342  030E                     	;# 
   343  030F                     	;# 
   344  0310                     	;# 
   345  0310                     	;# 
   346  0311                     	;# 
   347  0312                     	;# 
   348  0313                     	;# 
   349  0314                     	;# 
   350  0314                     	;# 
   351  0315                     	;# 
   352  0316                     	;# 
   353  0317                     	;# 
   354  0318                     	;# 
   355  0318                     	;# 
   356  0319                     	;# 
   357  031A                     	;# 
   358  031B                     	;# 
   359  031C                     	;# 
   360  031C                     	;# 
   361  031D                     	;# 
   362  031E                     	;# 
   363  031F                     	;# 
   364  038C                     	;# 
   365  038C                     	;# 
   366  038D                     	;# 
   367  038E                     	;# 
   368  0390                     	;# 
   369  0390                     	;# 
   370  0391                     	;# 
   371  0392                     	;# 
   372  040C                     	;# 
   373  040D                     	;# 
   374  040E                     	;# 
   375  040F                     	;# 
   376  0410                     	;# 
   377  0411                     	;# 
   378  0416                     	;# 
   379  0416                     	;# 
   380  0417                     	;# 
   381  0418                     	;# 
   382  0418                     	;# 
   383  0419                     	;# 
   384  041A                     	;# 
   385  041A                     	;# 
   386  041B                     	;# 
   387  041C                     	;# 
   388  041C                     	;# 
   389  041D                     	;# 
   390  041E                     	;# 
   391  041F                     	;# 
   392  048C                     	;# 
   393  048C                     	;# 
   394  048D                     	;# 
   395  048E                     	;# 
   396  048F                     	;# 
   397  048F                     	;# 
   398  0490                     	;# 
   399  0491                     	;# 
   400  0492                     	;# 
   401  0492                     	;# 
   402  0493                     	;# 
   403  0494                     	;# 
   404  0495                     	;# 
   405  0495                     	;# 
   406  0496                     	;# 
   407  0497                     	;# 
   408  0498                     	;# 
   409  0499                     	;# 
   410  049A                     	;# 
   411  049B                     	;# 
   412  049C                     	;# 
   413  049D                     	;# 
   414  050C                     	;# 
   415  050C                     	;# 
   416  050D                     	;# 
   417  050E                     	;# 
   418  050F                     	;# 
   419  050F                     	;# 
   420  0510                     	;# 
   421  0511                     	;# 
   422  0512                     	;# 
   423  0512                     	;# 
   424  0513                     	;# 
   425  0514                     	;# 
   426  0515                     	;# 
   427  0515                     	;# 
   428  0516                     	;# 
   429  0517                     	;# 
   430  0518                     	;# 
   431  0519                     	;# 
   432  051A                     	;# 
   433  051B                     	;# 
   434  051C                     	;# 
   435  051D                     	;# 
   436  058C                     	;# 
   437  058C                     	;# 
   438  058D                     	;# 
   439  058E                     	;# 
   440  058F                     	;# 
   441  058F                     	;# 
   442  0590                     	;# 
   443  0591                     	;# 
   444  0592                     	;# 
   445  0593                     	;# 
   446  060C                     	;# 
   447  060D                     	;# 
   448  060E                     	;# 
   449  060F                     	;# 
   450  0610                     	;# 
   451  0611                     	;# 
   452  0612                     	;# 
   453  0613                     	;# 
   454  0614                     	;# 
   455  0616                     	;# 
   456  0617                     	;# 
   457  0618                     	;# 
   458  0619                     	;# 
   459  061A                     	;# 
   460  061B                     	;# 
   461  061C                     	;# 
   462  061D                     	;# 
   463  061E                     	;# 
   464  068C                     	;# 
   465  068D                     	;# 
   466  068E                     	;# 
   467  068F                     	;# 
   468  0690                     	;# 
   469  0691                     	;# 
   470  0692                     	;# 
   471  0693                     	;# 
   472  0694                     	;# 
   473  070C                     	;# 
   474  070D                     	;# 
   475  070E                     	;# 
   476  070F                     	;# 
   477  0710                     	;# 
   478  0711                     	;# 
   479  0712                     	;# 
   480  0713                     	;# 
   481  0714                     	;# 
   482  0716                     	;# 
   483  0717                     	;# 
   484  0718                     	;# 
   485  0719                     	;# 
   486  071A                     	;# 
   487  071B                     	;# 
   488  071C                     	;# 
   489  071D                     	;# 
   490  071E                     	;# 
   491  0796                     	;# 
   492  0797                     	;# 
   493  0798                     	;# 
   494  0799                     	;# 
   495  079A                     	;# 
   496  079B                     	;# 
   497  080C                     	;# 
   498  080D                     	;# 
   499  080E                     	;# 
   500  080F                     	;# 
   501  0810                     	;# 
   502  0811                     	;# 
   503  0812                     	;# 
   504  0813                     	;# 
   505  0814                     	;# 
   506  081A                     	;# 
   507  081B                     	;# 
   508  081C                     	;# 
   509  081D                     	;# 
   510  081E                     	;# 
   511  081F                     	;# 
   512  088C                     	;# 
   513  088D                     	;# 
   514  088E                     	;# 
   515  088F                     	;# 
   516  0890                     	;# 
   517  0891                     	;# 
   518  0892                     	;# 
   519  0893                     	;# 
   520  0895                     	;# 
   521  0896                     	;# 
   522  0897                     	;# 
   523  0898                     	;# 
   524  0899                     	;# 
   525  089A                     	;# 
   526  089B                     	;# 
   527  090C                     	;# 
   528  090E                     	;# 
   529  090F                     	;# 
   530  091F                     	;# 
   531  091F                     	;# 
   532  098F                     	;# 
   533  098F                     	;# 
   534  0990                     	;# 
   535  0991                     	;# 
   536  0992                     	;# 
   537  0993                     	;# 
   538  0994                     	;# 
   539  0995                     	;# 
   540  0996                     	;# 
   541  0997                     	;# 
   542  0E0F                     	;# 
   543  0E10                     	;# 
   544  0E11                     	;# 
   545  0E12                     	;# 
   546  0E13                     	;# 
   547  0E14                     	;# 
   548  0E15                     	;# 
   549  0E16                     	;# 
   550  0E17                     	;# 
   551  0E18                     	;# 
   552  0E19                     	;# 
   553  0E1A                     	;# 
   554  0E1B                     	;# 
   555  0E1C                     	;# 
   556  0E1D                     	;# 
   557  0E1E                     	;# 
   558  0E1F                     	;# 
   559  0E20                     	;# 
   560  0E21                     	;# 
   561  0E22                     	;# 
   562  0E23                     	;# 
   563  0E24                     	;# 
   564  0E25                     	;# 
   565  0E26                     	;# 
   566  0E27                     	;# 
   567  0E28                     	;# 
   568  0E29                     	;# 
   569  0E2A                     	;# 
   570  0E2B                     	;# 
   571  0E2C                     	;# 
   572  0E2D                     	;# 
   573  0E2E                     	;# 
   574  0E2F                     	;# 
   575  0E30                     	;# 
   576  0E31                     	;# 
   577  0E32                     	;# 
   578  0E33                     	;# 
   579  0E34                     	;# 
   580  0E35                     	;# 
   581  0E36                     	;# 
   582  0E37                     	;# 
   583  0E8F                     	;# 
   584  0E90                     	;# 
   585  0E91                     	;# 
   586  0E92                     	;# 
   587  0E93                     	;# 
   588  0E94                     	;# 
   589  0E95                     	;# 
   590  0E96                     	;# 
   591  0E97                     	;# 
   592  0E9C                     	;# 
   593  0E9D                     	;# 
   594  0E9E                     	;# 
   595  0EA1                     	;# 
   596  0EA2                     	;# 
   597  0EA3                     	;# 
   598  0EA4                     	;# 
   599  0EA5                     	;# 
   600  0EA9                     	;# 
   601  0EAA                     	;# 
   602  0EAB                     	;# 
   603  0EAC                     	;# 
   604  0EB1                     	;# 
   605  0EB2                     	;# 
   606  0EB3                     	;# 
   607  0EB8                     	;# 
   608  0EB9                     	;# 
   609  0EBA                     	;# 
   610  0EBB                     	;# 
   611  0EBC                     	;# 
   612  0EBD                     	;# 
   613  0EBE                     	;# 
   614  0EC3                     	;# 
   615  0EC5                     	;# 
   616  0EC6                     	;# 
   617  0EC7                     	;# 
   618  0EC8                     	;# 
   619  0EC9                     	;# 
   620  0ECA                     	;# 
   621  0ECB                     	;# 
   622  0ECC                     	;# 
   623  0F10                     	;# 
   624  0F11                     	;# 
   625  0F12                     	;# 
   626  0F13                     	;# 
   627  0F14                     	;# 
   628  0F15                     	;# 
   629  0F16                     	;# 
   630  0F17                     	;# 
   631  0F18                     	;# 
   632  0F19                     	;# 
   633  0F1A                     	;# 
   634  0F1B                     	;# 
   635  0F1C                     	;# 
   636  0F1D                     	;# 
   637  0F1E                     	;# 
   638  0F1F                     	;# 
   639  0F20                     	;# 
   640  0F21                     	;# 
   641  0F22                     	;# 
   642  0F23                     	;# 
   643  0F24                     	;# 
   644  0F25                     	;# 
   645  0F26                     	;# 
   646  0F27                     	;# 
   647  0F28                     	;# 
   648  0F29                     	;# 
   649  0F2A                     	;# 
   650  0F2B                     	;# 
   651  0F2C                     	;# 
   652  0F2D                     	;# 
   653  0F2E                     	;# 
   654  0F2F                     	;# 
   655  0F30                     	;# 
   656  0F31                     	;# 
   657  0F32                     	;# 
   658  0F38                     	;# 
   659  0F39                     	;# 
   660  0F3A                     	;# 
   661  0F3B                     	;# 
   662  0F3C                     	;# 
   663  0F3D                     	;# 
   664  0F3E                     	;# 
   665  0F3F                     	;# 
   666  0F40                     	;# 
   667  0F41                     	;# 
   668  0F43                     	;# 
   669  0F44                     	;# 
   670  0F45                     	;# 
   671  0F46                     	;# 
   672  0F47                     	;# 
   673  0F48                     	;# 
   674  0F49                     	;# 
   675  0F4A                     	;# 
   676  0F4B                     	;# 
   677  0F4C                     	;# 
   678  0F4E                     	;# 
   679  0F4F                     	;# 
   680  0F50                     	;# 
   681  0F51                     	;# 
   682  0F52                     	;# 
   683  0F53                     	;# 
   684  0F54                     	;# 
   685  0F55                     	;# 
   686  0F56                     	;# 
   687  0F57                     	;# 
   688  0F59                     	;# 
   689  0F5A                     	;# 
   690  0F5B                     	;# 
   691  0F5C                     	;# 
   692  0F5D                     	;# 
   693  0F61                     	;# 
   694  0F62                     	;# 
   695  0F64                     	;# 
   696  0F65                     	;# 
   697  0F66                     	;# 
   698  0F67                     	;# 
   699  0F68                     	;# 
   700  0F69                     	;# 
   701  0F6A                     	;# 
   702  0F6B                     	;# 
   703  0F6C                     	;# 
   704  0F6D                     	;# 
   705  0FE4                     	;# 
   706  0FE5                     	;# 
   707  0FE6                     	;# 
   708  0FE7                     	;# 
   709  0FE8                     	;# 
   710  0FE9                     	;# 
   711  0FEA                     	;# 
   712  0FEB                     	;# 
   713  0FED                     	;# 
   714  0FEE                     	;# 
   715  0FEF                     	;# 
   716  0000                     	;# 
   717  0001                     	;# 
   718  0002                     	;# 
   719  0003                     	;# 
   720  0004                     	;# 
   721  0005                     	;# 
   722  0006                     	;# 
   723  0007                     	;# 
   724  0008                     	;# 
   725  0009                     	;# 
   726  000A                     	;# 
   727  000B                     	;# 
   728  000C                     	;# 
   729  000D                     	;# 
   730  000E                     	;# 
   731  000F                     	;# 
   732  0010                     	;# 
   733  0011                     	;# 
   734  0012                     	;# 
   735  0013                     	;# 
   736  0014                     	;# 
   737  0015                     	;# 
   738  0016                     	;# 
   739  0017                     	;# 
   740  0018                     	;# 
   741  0019                     	;# 
   742  001A                     	;# 
   743  001C                     	;# 
   744  001C                     	;# 
   745  001D                     	;# 
   746  001D                     	;# 
   747  001E                     	;# 
   748  001F                     	;# 
   749  008C                     	;# 
   750  008C                     	;# 
   751  008D                     	;# 
   752  008E                     	;# 
   753  008E                     	;# 
   754  008F                     	;# 
   755  0090                     	;# 
   756  0090                     	;# 
   757  0091                     	;# 
   758  0093                     	;# 
   759  0094                     	;# 
   760  0095                     	;# 
   761  0096                     	;# 
   762  0097                     	;# 
   763  0098                     	;# 
   764  0099                     	;# 
   765  009A                     	;# 
   766  009B                     	;# 
   767  009C                     	;# 
   768  009D                     	;# 
   769  009E                     	;# 
   770  010C                     	;# 
   771  010D                     	;# 
   772  010E                     	;# 
   773  010E                     	;# 
   774  010F                     	;# 
   775  0110                     	;# 
   776  0110                     	;# 
   777  0111                     	;# 
   778  0112                     	;# 
   779  0112                     	;# 
   780  0113                     	;# 
   781  0114                     	;# 
   782  0114                     	;# 
   783  0115                     	;# 
   784  0116                     	;# 
   785  0116                     	;# 
   786  0117                     	;# 
   787  0119                     	;# 
   788  0119                     	;# 
   789  0119                     	;# 
   790  011A                     	;# 
   791  011A                     	;# 
   792  011A                     	;# 
   793  011B                     	;# 
   794  011B                     	;# 
   795  011B                     	;# 
   796  011B                     	;# 
   797  011B                     	;# 
   798  011C                     	;# 
   799  011C                     	;# 
   800  011C                     	;# 
   801  011D                     	;# 
   802  011D                     	;# 
   803  011D                     	;# 
   804  011E                     	;# 
   805  011E                     	;# 
   806  011E                     	;# 
   807  011F                     	;# 
   808  011F                     	;# 
   809  011F                     	;# 
   810  011F                     	;# 
   811  011F                     	;# 
   812  018C                     	;# 
   813  018D                     	;# 
   814  018E                     	;# 
   815  018F                     	;# 
   816  0190                     	;# 
   817  0191                     	;# 
   818  0192                     	;# 
   819  0196                     	;# 
   820  0197                     	;# 
   821  0198                     	;# 
   822  0199                     	;# 
   823  019A                     	;# 
   824  019B                     	;# 
   825  019C                     	;# 
   826  020C                     	;# 
   827  020C                     	;# 
   828  020D                     	;# 
   829  020E                     	;# 
   830  020F                     	;# 
   831  020F                     	;# 
   832  0210                     	;# 
   833  0210                     	;# 
   834  0211                     	;# 
   835  0211                     	;# 
   836  0212                     	;# 
   837  0212                     	;# 
   838  0213                     	;# 
   839  0214                     	;# 
   840  0215                     	;# 
   841  0215                     	;# 
   842  0216                     	;# 
   843  0216                     	;# 
   844  0217                     	;# 
   845  0217                     	;# 
   846  0218                     	;# 
   847  0218                     	;# 
   848  0219                     	;# 
   849  021A                     	;# 
   850  021B                     	;# 
   851  021B                     	;# 
   852  021C                     	;# 
   853  021C                     	;# 
   854  021D                     	;# 
   855  021D                     	;# 
   856  021E                     	;# 
   857  021F                     	;# 
   858  028C                     	;# 
   859  028C                     	;# 
   860  028D                     	;# 
   861  028D                     	;# 
   862  028E                     	;# 
   863  028F                     	;# 
   864  0290                     	;# 
   865  0290                     	;# 
   866  0291                     	;# 
   867  0292                     	;# 
   868  0292                     	;# 
   869  0293                     	;# 
   870  0293                     	;# 
   871  0294                     	;# 
   872  0295                     	;# 
   873  0296                     	;# 
   874  0296                     	;# 
   875  0297                     	;# 
   876  0298                     	;# 
   877  0298                     	;# 
   878  0299                     	;# 
   879  0299                     	;# 
   880  029A                     	;# 
   881  029B                     	;# 
   882  029C                     	;# 
   883  029C                     	;# 
   884  029D                     	;# 
   885  030C                     	;# 
   886  030C                     	;# 
   887  030D                     	;# 
   888  030E                     	;# 
   889  030F                     	;# 
   890  0310                     	;# 
   891  0310                     	;# 
   892  0311                     	;# 
   893  0312                     	;# 
   894  0313                     	;# 
   895  0314                     	;# 
   896  0314                     	;# 
   897  0315                     	;# 
   898  0316                     	;# 
   899  0317                     	;# 
   900  0318                     	;# 
   901  0318                     	;# 
   902  0319                     	;# 
   903  031A                     	;# 
   904  031B                     	;# 
   905  031C                     	;# 
   906  031C                     	;# 
   907  031D                     	;# 
   908  031E                     	;# 
   909  031F                     	;# 
   910  038C                     	;# 
   911  038C                     	;# 
   912  038D                     	;# 
   913  038E                     	;# 
   914  0390                     	;# 
   915  0390                     	;# 
   916  0391                     	;# 
   917  0392                     	;# 
   918  040C                     	;# 
   919  040D                     	;# 
   920  040E                     	;# 
   921  040F                     	;# 
   922  0410                     	;# 
   923  0411                     	;# 
   924  0416                     	;# 
   925  0416                     	;# 
   926  0417                     	;# 
   927  0418                     	;# 
   928  0418                     	;# 
   929  0419                     	;# 
   930  041A                     	;# 
   931  041A                     	;# 
   932  041B                     	;# 
   933  041C                     	;# 
   934  041C                     	;# 
   935  041D                     	;# 
   936  041E                     	;# 
   937  041F                     	;# 
   938  048C                     	;# 
   939  048C                     	;# 
   940  048D                     	;# 
   941  048E                     	;# 
   942  048F                     	;# 
   943  048F                     	;# 
   944  0490                     	;# 
   945  0491                     	;# 
   946  0492                     	;# 
   947  0492                     	;# 
   948  0493                     	;# 
   949  0494                     	;# 
   950  0495                     	;# 
   951  0495                     	;# 
   952  0496                     	;# 
   953  0497                     	;# 
   954  0498                     	;# 
   955  0499                     	;# 
   956  049A                     	;# 
   957  049B                     	;# 
   958  049C                     	;# 
   959  049D                     	;# 
   960  050C                     	;# 
   961  050C                     	;# 
   962  050D                     	;# 
   963  050E                     	;# 
   964  050F                     	;# 
   965  050F                     	;# 
   966  0510                     	;# 
   967  0511                     	;# 
   968  0512                     	;# 
   969  0512                     	;# 
   970  0513                     	;# 
   971  0514                     	;# 
   972  0515                     	;# 
   973  0515                     	;# 
   974  0516                     	;# 
   975  0517                     	;# 
   976  0518                     	;# 
   977  0519                     	;# 
   978  051A                     	;# 
   979  051B                     	;# 
   980  051C                     	;# 
   981  051D                     	;# 
   982  058C                     	;# 
   983  058C                     	;# 
   984  058D                     	;# 
   985  058E                     	;# 
   986  058F                     	;# 
   987  058F                     	;# 
   988  0590                     	;# 
   989  0591                     	;# 
   990  0592                     	;# 
   991  0593                     	;# 
   992  060C                     	;# 
   993  060D                     	;# 
   994  060E                     	;# 
   995  060F                     	;# 
   996  0610                     	;# 
   997  0611                     	;# 
   998  0612                     	;# 
   999  0613                     	;# 
  1000  0614                     	;# 
  1001  0616                     	;# 
  1002  0617                     	;# 
  1003  0618                     	;# 
  1004  0619                     	;# 
  1005  061A                     	;# 
  1006  061B                     	;# 
  1007  061C                     	;# 
  1008  061D                     	;# 
  1009  061E                     	;# 
  1010  068C                     	;# 
  1011  068D                     	;# 
  1012  068E                     	;# 
  1013  068F                     	;# 
  1014  0690                     	;# 
  1015  0691                     	;# 
  1016  0692                     	;# 
  1017  0693                     	;# 
  1018  0694                     	;# 
  1019  070C                     	;# 
  1020  070D                     	;# 
  1021  070E                     	;# 
  1022  070F                     	;# 
  1023  0710                     	;# 
  1024  0711                     	;# 
  1025  0712                     	;# 
  1026  0713                     	;# 
  1027  0714                     	;# 
  1028  0716                     	;# 
  1029  0717                     	;# 
  1030  0718                     	;# 
  1031  0719                     	;# 
  1032  071A                     	;# 
  1033  071B                     	;# 
  1034  071C                     	;# 
  1035  071D                     	;# 
  1036  071E                     	;# 
  1037  0796                     	;# 
  1038  0797                     	;# 
  1039  0798                     	;# 
  1040  0799                     	;# 
  1041  079A                     	;# 
  1042  079B                     	;# 
  1043  080C                     	;# 
  1044  080D                     	;# 
  1045  080E                     	;# 
  1046  080F                     	;# 
  1047  0810                     	;# 
  1048  0811                     	;# 
  1049  0812                     	;# 
  1050  0813                     	;# 
  1051  0814                     	;# 
  1052  081A                     	;# 
  1053  081B                     	;# 
  1054  081C                     	;# 
  1055  081D                     	;# 
  1056  081E                     	;# 
  1057  081F                     	;# 
  1058  088C                     	;# 
  1059  088D                     	;# 
  1060  088E                     	;# 
  1061  088F                     	;# 
  1062  0890                     	;# 
  1063  0891                     	;# 
  1064  0892                     	;# 
  1065  0893                     	;# 
  1066  0895                     	;# 
  1067  0896                     	;# 
  1068  0897                     	;# 
  1069  0898                     	;# 
  1070  0899                     	;# 
  1071  089A                     	;# 
  1072  089B                     	;# 
  1073  090C                     	;# 
  1074  090E                     	;# 
  1075  090F                     	;# 
  1076  091F                     	;# 
  1077  091F                     	;# 
  1078  098F                     	;# 
  1079  098F                     	;# 
  1080  0990                     	;# 
  1081  0991                     	;# 
  1082  0992                     	;# 
  1083  0993                     	;# 
  1084  0994                     	;# 
  1085  0995                     	;# 
  1086  0996                     	;# 
  1087  0997                     	;# 
  1088  0E0F                     	;# 
  1089  0E10                     	;# 
  1090  0E11                     	;# 
  1091  0E12                     	;# 
  1092  0E13                     	;# 
  1093  0E14                     	;# 
  1094  0E15                     	;# 
  1095  0E16                     	;# 
  1096  0E17                     	;# 
  1097  0E18                     	;# 
  1098  0E19                     	;# 
  1099  0E1A                     	;# 
  1100  0E1B                     	;# 
  1101  0E1C                     	;# 
  1102  0E1D                     	;# 
  1103  0E1E                     	;# 
  1104  0E1F                     	;# 
  1105  0E20                     	;# 
  1106  0E21                     	;# 
  1107  0E22                     	;# 
  1108  0E23                     	;# 
  1109  0E24                     	;# 
  1110  0E25                     	;# 
  1111  0E26                     	;# 
  1112  0E27                     	;# 
  1113  0E28                     	;# 
  1114  0E29                     	;# 
  1115  0E2A                     	;# 
  1116  0E2B                     	;# 
  1117  0E2C                     	;# 
  1118  0E2D                     	;# 
  1119  0E2E                     	;# 
  1120  0E2F                     	;# 
  1121  0E30                     	;# 
  1122  0E31                     	;# 
  1123  0E32                     	;# 
  1124  0E33                     	;# 
  1125  0E34                     	;# 
  1126  0E35                     	;# 
  1127  0E36                     	;# 
  1128  0E37                     	;# 
  1129  0E8F                     	;# 
  1130  0E90                     	;# 
  1131  0E91                     	;# 
  1132  0E92                     	;# 
  1133  0E93                     	;# 
  1134  0E94                     	;# 
  1135  0E95                     	;# 
  1136  0E96                     	;# 
  1137  0E97                     	;# 
  1138  0E9C                     	;# 
  1139  0E9D                     	;# 
  1140  0E9E                     	;# 
  1141  0EA1                     	;# 
  1142  0EA2                     	;# 
  1143  0EA3                     	;# 
  1144  0EA4                     	;# 
  1145  0EA5                     	;# 
  1146  0EA9                     	;# 
  1147  0EAA                     	;# 
  1148  0EAB                     	;# 
  1149  0EAC                     	;# 
  1150  0EB1                     	;# 
  1151  0EB2                     	;# 
  1152  0EB3                     	;# 
  1153  0EB8                     	;# 
  1154  0EB9                     	;# 
  1155  0EBA                     	;# 
  1156  0EBB                     	;# 
  1157  0EBC                     	;# 
  1158  0EBD                     	;# 
  1159  0EBE                     	;# 
  1160  0EC3                     	;# 
  1161  0EC5                     	;# 
  1162  0EC6                     	;# 
  1163  0EC7                     	;# 
  1164  0EC8                     	;# 
  1165  0EC9                     	;# 
  1166  0ECA                     	;# 
  1167  0ECB                     	;# 
  1168  0ECC                     	;# 
  1169  0F10                     	;# 
  1170  0F11                     	;# 
  1171  0F12                     	;# 
  1172  0F13                     	;# 
  1173  0F14                     	;# 
  1174  0F15                     	;# 
  1175  0F16                     	;# 
  1176  0F17                     	;# 
  1177  0F18                     	;# 
  1178  0F19                     	;# 
  1179  0F1A                     	;# 
  1180  0F1B                     	;# 
  1181  0F1C                     	;# 
  1182  0F1D                     	;# 
  1183  0F1E                     	;# 
  1184  0F1F                     	;# 
  1185  0F20                     	;# 
  1186  0F21                     	;# 
  1187  0F22                     	;# 
  1188  0F23                     	;# 
  1189  0F24                     	;# 
  1190  0F25                     	;# 
  1191  0F26                     	;# 
  1192  0F27                     	;# 
  1193  0F28                     	;# 
  1194  0F29                     	;# 
  1195  0F2A                     	;# 
  1196  0F2B                     	;# 
  1197  0F2C                     	;# 
  1198  0F2D                     	;# 
  1199  0F2E                     	;# 
  1200  0F2F                     	;# 
  1201  0F30                     	;# 
  1202  0F31                     	;# 
  1203  0F32                     	;# 
  1204  0F38                     	;# 
  1205  0F39                     	;# 
  1206  0F3A                     	;# 
  1207  0F3B                     	;# 
  1208  0F3C                     	;# 
  1209  0F3D                     	;# 
  1210  0F3E                     	;# 
  1211  0F3F                     	;# 
  1212  0F40                     	;# 
  1213  0F41                     	;# 
  1214  0F43                     	;# 
  1215  0F44                     	;# 
  1216  0F45                     	;# 
  1217  0F46                     	;# 
  1218  0F47                     	;# 
  1219  0F48                     	;# 
  1220  0F49                     	;# 
  1221  0F4A                     	;# 
  1222  0F4B                     	;# 
  1223  0F4C                     	;# 
  1224  0F4E                     	;# 
  1225  0F4F                     	;# 
  1226  0F50                     	;# 
  1227  0F51                     	;# 
  1228  0F52                     	;# 
  1229  0F53                     	;# 
  1230  0F54                     	;# 
  1231  0F55                     	;# 
  1232  0F56                     	;# 
  1233  0F57                     	;# 
  1234  0F59                     	;# 
  1235  0F5A                     	;# 
  1236  0F5B                     	;# 
  1237  0F5C                     	;# 
  1238  0F5D                     	;# 
  1239  0F61                     	;# 
  1240  0F62                     	;# 
  1241  0F64                     	;# 
  1242  0F65                     	;# 
  1243  0F66                     	;# 
  1244  0F67                     	;# 
  1245  0F68                     	;# 
  1246  0F69                     	;# 
  1247  0F6A                     	;# 
  1248  0F6B                     	;# 
  1249  0F6C                     	;# 
  1250  0F6D                     	;# 
  1251  0FE4                     	;# 
  1252  0FE5                     	;# 
  1253  0FE6                     	;# 
  1254  0FE7                     	;# 
  1255  0FE8                     	;# 
  1256  0FE9                     	;# 
  1257  0FEA                     	;# 
  1258  0FEB                     	;# 
  1259  0FED                     	;# 
  1260  0FEE                     	;# 
  1261  0FEF                     	;# 
  1262  0000                     	;# 
  1263  0001                     	;# 
  1264  0002                     	;# 
  1265  0003                     	;# 
  1266  0004                     	;# 
  1267  0005                     	;# 
  1268  0006                     	;# 
  1269  0007                     	;# 
  1270  0008                     	;# 
  1271  0009                     	;# 
  1272  000A                     	;# 
  1273  000B                     	;# 
  1274  000C                     	;# 
  1275  000D                     	;# 
  1276  000E                     	;# 
  1277  000F                     	;# 
  1278  0010                     	;# 
  1279  0011                     	;# 
  1280  0012                     	;# 
  1281  0013                     	;# 
  1282  0014                     	;# 
  1283  0015                     	;# 
  1284  0016                     	;# 
  1285  0017                     	;# 
  1286  0018                     	;# 
  1287  0019                     	;# 
  1288  001A                     	;# 
  1289  001C                     	;# 
  1290  001C                     	;# 
  1291  001D                     	;# 
  1292  001D                     	;# 
  1293  001E                     	;# 
  1294  001F                     	;# 
  1295  008C                     	;# 
  1296  008C                     	;# 
  1297  008D                     	;# 
  1298  008E                     	;# 
  1299  008E                     	;# 
  1300  008F                     	;# 
  1301  0090                     	;# 
  1302  0090                     	;# 
  1303  0091                     	;# 
  1304  0093                     	;# 
  1305  0094                     	;# 
  1306  0095                     	;# 
  1307  0096                     	;# 
  1308  0097                     	;# 
  1309  0098                     	;# 
  1310  0099                     	;# 
  1311  009A                     	;# 
  1312  009B                     	;# 
  1313  009C                     	;# 
  1314  009D                     	;# 
  1315  009E                     	;# 
  1316  010C                     	;# 
  1317  010D                     	;# 
  1318  010E                     	;# 
  1319  010E                     	;# 
  1320  010F                     	;# 
  1321  0110                     	;# 
  1322  0110                     	;# 
  1323  0111                     	;# 
  1324  0112                     	;# 
  1325  0112                     	;# 
  1326  0113                     	;# 
  1327  0114                     	;# 
  1328  0114                     	;# 
  1329  0115                     	;# 
  1330  0116                     	;# 
  1331  0116                     	;# 
  1332  0117                     	;# 
  1333  0119                     	;# 
  1334  0119                     	;# 
  1335  0119                     	;# 
  1336  011A                     	;# 
  1337  011A                     	;# 
  1338  011A                     	;# 
  1339  011B                     	;# 
  1340  011B                     	;# 
  1341  011B                     	;# 
  1342  011B                     	;# 
  1343  011B                     	;# 
  1344  011C                     	;# 
  1345  011C                     	;# 
  1346  011C                     	;# 
  1347  011D                     	;# 
  1348  011D                     	;# 
  1349  011D                     	;# 
  1350  011E                     	;# 
  1351  011E                     	;# 
  1352  011E                     	;# 
  1353  011F                     	;# 
  1354  011F                     	;# 
  1355  011F                     	;# 
  1356  011F                     	;# 
  1357  011F                     	;# 
  1358  018C                     	;# 
  1359  018D                     	;# 
  1360  018E                     	;# 
  1361  018F                     	;# 
  1362  0190                     	;# 
  1363  0191                     	;# 
  1364  0192                     	;# 
  1365  0196                     	;# 
  1366  0197                     	;# 
  1367  0198                     	;# 
  1368  0199                     	;# 
  1369  019A                     	;# 
  1370  019B                     	;# 
  1371  019C                     	;# 
  1372  020C                     	;# 
  1373  020C                     	;# 
  1374  020D                     	;# 
  1375  020E                     	;# 
  1376  020F                     	;# 
  1377  020F                     	;# 
  1378  0210                     	;# 
  1379  0210                     	;# 
  1380  0211                     	;# 
  1381  0211                     	;# 
  1382  0212                     	;# 
  1383  0212                     	;# 
  1384  0213                     	;# 
  1385  0214                     	;# 
  1386  0215                     	;# 
  1387  0215                     	;# 
  1388  0216                     	;# 
  1389  0216                     	;# 
  1390  0217                     	;# 
  1391  0217                     	;# 
  1392  0218                     	;# 
  1393  0218                     	;# 
  1394  0219                     	;# 
  1395  021A                     	;# 
  1396  021B                     	;# 
  1397  021B                     	;# 
  1398  021C                     	;# 
  1399  021C                     	;# 
  1400  021D                     	;# 
  1401  021D                     	;# 
  1402  021E                     	;# 
  1403  021F                     	;# 
  1404  028C                     	;# 
  1405  028C                     	;# 
  1406  028D                     	;# 
  1407  028D                     	;# 
  1408  028E                     	;# 
  1409  028F                     	;# 
  1410  0290                     	;# 
  1411  0290                     	;# 
  1412  0291                     	;# 
  1413  0292                     	;# 
  1414  0292                     	;# 
  1415  0293                     	;# 
  1416  0293                     	;# 
  1417  0294                     	;# 
  1418  0295                     	;# 
  1419  0296                     	;# 
  1420  0296                     	;# 
  1421  0297                     	;# 
  1422  0298                     	;# 
  1423  0298                     	;# 
  1424  0299                     	;# 
  1425  0299                     	;# 
  1426  029A                     	;# 
  1427  029B                     	;# 
  1428  029C                     	;# 
  1429  029C                     	;# 
  1430  029D                     	;# 
  1431  030C                     	;# 
  1432  030C                     	;# 
  1433  030D                     	;# 
  1434  030E                     	;# 
  1435  030F                     	;# 
  1436  0310                     	;# 
  1437  0310                     	;# 
  1438  0311                     	;# 
  1439  0312                     	;# 
  1440  0313                     	;# 
  1441  0314                     	;# 
  1442  0314                     	;# 
  1443  0315                     	;# 
  1444  0316                     	;# 
  1445  0317                     	;# 
  1446  0318                     	;# 
  1447  0318                     	;# 
  1448  0319                     	;# 
  1449  031A                     	;# 
  1450  031B                     	;# 
  1451  031C                     	;# 
  1452  031C                     	;# 
  1453  031D                     	;# 
  1454  031E                     	;# 
  1455  031F                     	;# 
  1456  038C                     	;# 
  1457  038C                     	;# 
  1458  038D                     	;# 
  1459  038E                     	;# 
  1460  0390                     	;# 
  1461  0390                     	;# 
  1462  0391                     	;# 
  1463  0392                     	;# 
  1464  040C                     	;# 
  1465  040D                     	;# 
  1466  040E                     	;# 
  1467  040F                     	;# 
  1468  0410                     	;# 
  1469  0411                     	;# 
  1470  0416                     	;# 
  1471  0416                     	;# 
  1472  0417                     	;# 
  1473  0418                     	;# 
  1474  0418                     	;# 
  1475  0419                     	;# 
  1476  041A                     	;# 
  1477  041A                     	;# 
  1478  041B                     	;# 
  1479  041C                     	;# 
  1480  041C                     	;# 
  1481  041D                     	;# 
  1482  041E                     	;# 
  1483  041F                     	;# 
  1484  048C                     	;# 
  1485  048C                     	;# 
  1486  048D                     	;# 
  1487  048E                     	;# 
  1488  048F                     	;# 
  1489  048F                     	;# 
  1490  0490                     	;# 
  1491  0491                     	;# 
  1492  0492                     	;# 
  1493  0492                     	;# 
  1494  0493                     	;# 
  1495  0494                     	;# 
  1496  0495                     	;# 
  1497  0495                     	;# 
  1498  0496                     	;# 
  1499  0497                     	;# 
  1500  0498                     	;# 
  1501  0499                     	;# 
  1502  049A                     	;# 
  1503  049B                     	;# 
  1504  049C                     	;# 
  1505  049D                     	;# 
  1506  050C                     	;# 
  1507  050C                     	;# 
  1508  050D                     	;# 
  1509  050E                     	;# 
  1510  050F                     	;# 
  1511  050F                     	;# 
  1512  0510                     	;# 
  1513  0511                     	;# 
  1514  0512                     	;# 
  1515  0512                     	;# 
  1516  0513                     	;# 
  1517  0514                     	;# 
  1518  0515                     	;# 
  1519  0515                     	;# 
  1520  0516                     	;# 
  1521  0517                     	;# 
  1522  0518                     	;# 
  1523  0519                     	;# 
  1524  051A                     	;# 
  1525  051B                     	;# 
  1526  051C                     	;# 
  1527  051D                     	;# 
  1528  058C                     	;# 
  1529  058C                     	;# 
  1530  058D                     	;# 
  1531  058E                     	;# 
  1532  058F                     	;# 
  1533  058F                     	;# 
  1534  0590                     	;# 
  1535  0591                     	;# 
  1536  0592                     	;# 
  1537  0593                     	;# 
  1538  060C                     	;# 
  1539  060D                     	;# 
  1540  060E                     	;# 
  1541  060F                     	;# 
  1542  0610                     	;# 
  1543  0611                     	;# 
  1544  0612                     	;# 
  1545  0613                     	;# 
  1546  0614                     	;# 
  1547  0616                     	;# 
  1548  0617                     	;# 
  1549  0618                     	;# 
  1550  0619                     	;# 
  1551  061A                     	;# 
  1552  061B                     	;# 
  1553  061C                     	;# 
  1554  061D                     	;# 
  1555  061E                     	;# 
  1556  068C                     	;# 
  1557  068D                     	;# 
  1558  068E                     	;# 
  1559  068F                     	;# 
  1560  0690                     	;# 
  1561  0691                     	;# 
  1562  0692                     	;# 
  1563  0693                     	;# 
  1564  0694                     	;# 
  1565  070C                     	;# 
  1566  070D                     	;# 
  1567  070E                     	;# 
  1568  070F                     	;# 
  1569  0710                     	;# 
  1570  0711                     	;# 
  1571  0712                     	;# 
  1572  0713                     	;# 
  1573  0714                     	;# 
  1574  0716                     	;# 
  1575  0717                     	;# 
  1576  0718                     	;# 
  1577  0719                     	;# 
  1578  071A                     	;# 
  1579  071B                     	;# 
  1580  071C                     	;# 
  1581  071D                     	;# 
  1582  071E                     	;# 
  1583  0796                     	;# 
  1584  0797                     	;# 
  1585  0798                     	;# 
  1586  0799                     	;# 
  1587  079A                     	;# 
  1588  079B                     	;# 
  1589  080C                     	;# 
  1590  080D                     	;# 
  1591  080E                     	;# 
  1592  080F                     	;# 
  1593  0810                     	;# 
  1594  0811                     	;# 
  1595  0812                     	;# 
  1596  0813                     	;# 
  1597  0814                     	;# 
  1598  081A                     	;# 
  1599  081B                     	;# 
  1600  081C                     	;# 
  1601  081D                     	;# 
  1602  081E                     	;# 
  1603  081F                     	;# 
  1604  088C                     	;# 
  1605  088D                     	;# 
  1606  088E                     	;# 
  1607  088F                     	;# 
  1608  0890                     	;# 
  1609  0891                     	;# 
  1610  0892                     	;# 
  1611  0893                     	;# 
  1612  0895                     	;# 
  1613  0896                     	;# 
  1614  0897                     	;# 
  1615  0898                     	;# 
  1616  0899                     	;# 
  1617  089A                     	;# 
  1618  089B                     	;# 
  1619  090C                     	;# 
  1620  090E                     	;# 
  1621  090F                     	;# 
  1622  091F                     	;# 
  1623  091F                     	;# 
  1624  098F                     	;# 
  1625  098F                     	;# 
  1626  0990                     	;# 
  1627  0991                     	;# 
  1628  0992                     	;# 
  1629  0993                     	;# 
  1630  0994                     	;# 
  1631  0995                     	;# 
  1632  0996                     	;# 
  1633  0997                     	;# 
  1634  0E0F                     	;# 
  1635  0E10                     	;# 
  1636  0E11                     	;# 
  1637  0E12                     	;# 
  1638  0E13                     	;# 
  1639  0E14                     	;# 
  1640  0E15                     	;# 
  1641  0E16                     	;# 
  1642  0E17                     	;# 
  1643  0E18                     	;# 
  1644  0E19                     	;# 
  1645  0E1A                     	;# 
  1646  0E1B                     	;# 
  1647  0E1C                     	;# 
  1648  0E1D                     	;# 
  1649  0E1E                     	;# 
  1650  0E1F                     	;# 
  1651  0E20                     	;# 
  1652  0E21                     	;# 
  1653  0E22                     	;# 
  1654  0E23                     	;# 
  1655  0E24                     	;# 
  1656  0E25                     	;# 
  1657  0E26                     	;# 
  1658  0E27                     	;# 
  1659  0E28                     	;# 
  1660  0E29                     	;# 
  1661  0E2A                     	;# 
  1662  0E2B                     	;# 
  1663  0E2C                     	;# 
  1664  0E2D                     	;# 
  1665  0E2E                     	;# 
  1666  0E2F                     	;# 
  1667  0E30                     	;# 
  1668  0E31                     	;# 
  1669  0E32                     	;# 
  1670  0E33                     	;# 
  1671  0E34                     	;# 
  1672  0E35                     	;# 
  1673  0E36                     	;# 
  1674  0E37                     	;# 
  1675  0E8F                     	;# 
  1676  0E90                     	;# 
  1677  0E91                     	;# 
  1678  0E92                     	;# 
  1679  0E93                     	;# 
  1680  0E94                     	;# 
  1681  0E95                     	;# 
  1682  0E96                     	;# 
  1683  0E97                     	;# 
  1684  0E9C                     	;# 
  1685  0E9D                     	;# 
  1686  0E9E                     	;# 
  1687  0EA1                     	;# 
  1688  0EA2                     	;# 
  1689  0EA3                     	;# 
  1690  0EA4                     	;# 
  1691  0EA5                     	;# 
  1692  0EA9                     	;# 
  1693  0EAA                     	;# 
  1694  0EAB                     	;# 
  1695  0EAC                     	;# 
  1696  0EB1                     	;# 
  1697  0EB2                     	;# 
  1698  0EB3                     	;# 
  1699  0EB8                     	;# 
  1700  0EB9                     	;# 
  1701  0EBA                     	;# 
  1702  0EBB                     	;# 
  1703  0EBC                     	;# 
  1704  0EBD                     	;# 
  1705  0EBE                     	;# 
  1706  0EC3                     	;# 
  1707  0EC5                     	;# 
  1708  0EC6                     	;# 
  1709  0EC7                     	;# 
  1710  0EC8                     	;# 
  1711  0EC9                     	;# 
  1712  0ECA                     	;# 
  1713  0ECB                     	;# 
  1714  0ECC                     	;# 
  1715  0F10                     	;# 
  1716  0F11                     	;# 
  1717  0F12                     	;# 
  1718  0F13                     	;# 
  1719  0F14                     	;# 
  1720  0F15                     	;# 
  1721  0F16                     	;# 
  1722  0F17                     	;# 
  1723  0F18                     	;# 
  1724  0F19                     	;# 
  1725  0F1A                     	;# 
  1726  0F1B                     	;# 
  1727  0F1C                     	;# 
  1728  0F1D                     	;# 
  1729  0F1E                     	;# 
  1730  0F1F                     	;# 
  1731  0F20                     	;# 
  1732  0F21                     	;# 
  1733  0F22                     	;# 
  1734  0F23                     	;# 
  1735  0F24                     	;# 
  1736  0F25                     	;# 
  1737  0F26                     	;# 
  1738  0F27                     	;# 
  1739  0F28                     	;# 
  1740  0F29                     	;# 
  1741  0F2A                     	;# 
  1742  0F2B                     	;# 
  1743  0F2C                     	;# 
  1744  0F2D                     	;# 
  1745  0F2E                     	;# 
  1746  0F2F                     	;# 
  1747  0F30                     	;# 
  1748  0F31                     	;# 
  1749  0F32                     	;# 
  1750  0F38                     	;# 
  1751  0F39                     	;# 
  1752  0F3A                     	;# 
  1753  0F3B                     	;# 
  1754  0F3C                     	;# 
  1755  0F3D                     	;# 
  1756  0F3E                     	;# 
  1757  0F3F                     	;# 
  1758  0F40                     	;# 
  1759  0F41                     	;# 
  1760  0F43                     	;# 
  1761  0F44                     	;# 
  1762  0F45                     	;# 
  1763  0F46                     	;# 
  1764  0F47                     	;# 
  1765  0F48                     	;# 
  1766  0F49                     	;# 
  1767  0F4A                     	;# 
  1768  0F4B                     	;# 
  1769  0F4C                     	;# 
  1770  0F4E                     	;# 
  1771  0F4F                     	;# 
  1772  0F50                     	;# 
  1773  0F51                     	;# 
  1774  0F52                     	;# 
  1775  0F53                     	;# 
  1776  0F54                     	;# 
  1777  0F55                     	;# 
  1778  0F56                     	;# 
  1779  0F57                     	;# 
  1780  0F59                     	;# 
  1781  0F5A                     	;# 
  1782  0F5B                     	;# 
  1783  0F5C                     	;# 
  1784  0F5D                     	;# 
  1785  0F61                     	;# 
  1786  0F62                     	;# 
  1787  0F64                     	;# 
  1788  0F65                     	;# 
  1789  0F66                     	;# 
  1790  0F67                     	;# 
  1791  0F68                     	;# 
  1792  0F69                     	;# 
  1793  0F6A                     	;# 
  1794  0F6B                     	;# 
  1795  0F6C                     	;# 
  1796  0F6D                     	;# 
  1797  0FE4                     	;# 
  1798  0FE5                     	;# 
  1799  0FE6                     	;# 
  1800  0FE7                     	;# 
  1801  0FE8                     	;# 
  1802  0FE9                     	;# 
  1803  0FEA                     	;# 
  1804  0FEB                     	;# 
  1805  0FED                     	;# 
  1806  0FEE                     	;# 
  1807  0FEF                     	;# 
  1808  0000                     	;# 
  1809  0001                     	;# 
  1810  0002                     	;# 
  1811  0003                     	;# 
  1812  0004                     	;# 
  1813  0005                     	;# 
  1814  0006                     	;# 
  1815  0007                     	;# 
  1816  0008                     	;# 
  1817  0009                     	;# 
  1818  000A                     	;# 
  1819  000B                     	;# 
  1820  000C                     	;# 
  1821  000D                     	;# 
  1822  000E                     	;# 
  1823  000F                     	;# 
  1824  0010                     	;# 
  1825  0011                     	;# 
  1826  0012                     	;# 
  1827  0013                     	;# 
  1828  0014                     	;# 
  1829  0015                     	;# 
  1830  0016                     	;# 
  1831  0017                     	;# 
  1832  0018                     	;# 
  1833  0019                     	;# 
  1834  001A                     	;# 
  1835  001C                     	;# 
  1836  001C                     	;# 
  1837  001D                     	;# 
  1838  001D                     	;# 
  1839  001E                     	;# 
  1840  001F                     	;# 
  1841  008C                     	;# 
  1842  008C                     	;# 
  1843  008D                     	;# 
  1844  008E                     	;# 
  1845  008E                     	;# 
  1846  008F                     	;# 
  1847  0090                     	;# 
  1848  0090                     	;# 
  1849  0091                     	;# 
  1850  0093                     	;# 
  1851  0094                     	;# 
  1852  0095                     	;# 
  1853  0096                     	;# 
  1854  0097                     	;# 
  1855  0098                     	;# 
  1856  0099                     	;# 
  1857  009A                     	;# 
  1858  009B                     	;# 
  1859  009C                     	;# 
  1860  009D                     	;# 
  1861  009E                     	;# 
  1862  010C                     	;# 
  1863  010D                     	;# 
  1864  010E                     	;# 
  1865  010E                     	;# 
  1866  010F                     	;# 
  1867  0110                     	;# 
  1868  0110                     	;# 
  1869  0111                     	;# 
  1870  0112                     	;# 
  1871  0112                     	;# 
  1872  0113                     	;# 
  1873  0114                     	;# 
  1874  0114                     	;# 
  1875  0115                     	;# 
  1876  0116                     	;# 
  1877  0116                     	;# 
  1878  0117                     	;# 
  1879  0119                     	;# 
  1880  0119                     	;# 
  1881  0119                     	;# 
  1882  011A                     	;# 
  1883  011A                     	;# 
  1884  011A                     	;# 
  1885  011B                     	;# 
  1886  011B                     	;# 
  1887  011B                     	;# 
  1888  011B                     	;# 
  1889  011B                     	;# 
  1890  011C                     	;# 
  1891  011C                     	;# 
  1892  011C                     	;# 
  1893  011D                     	;# 
  1894  011D                     	;# 
  1895  011D                     	;# 
  1896  011E                     	;# 
  1897  011E                     	;# 
  1898  011E                     	;# 
  1899  011F                     	;# 
  1900  011F                     	;# 
  1901  011F                     	;# 
  1902  011F                     	;# 
  1903  011F                     	;# 
  1904  018C                     	;# 
  1905  018D                     	;# 
  1906  018E                     	;# 
  1907  018F                     	;# 
  1908  0190                     	;# 
  1909  0191                     	;# 
  1910  0192                     	;# 
  1911  0196                     	;# 
  1912  0197                     	;# 
  1913  0198                     	;# 
  1914  0199                     	;# 
  1915  019A                     	;# 
  1916  019B                     	;# 
  1917  019C                     	;# 
  1918  020C                     	;# 
  1919  020C                     	;# 
  1920  020D                     	;# 
  1921  020E                     	;# 
  1922  020F                     	;# 
  1923  020F                     	;# 
  1924  0210                     	;# 
  1925  0210                     	;# 
  1926  0211                     	;# 
  1927  0211                     	;# 
  1928  0212                     	;# 
  1929  0212                     	;# 
  1930  0213                     	;# 
  1931  0214                     	;# 
  1932  0215                     	;# 
  1933  0215                     	;# 
  1934  0216                     	;# 
  1935  0216                     	;# 
  1936  0217                     	;# 
  1937  0217                     	;# 
  1938  0218                     	;# 
  1939  0218                     	;# 
  1940  0219                     	;# 
  1941  021A                     	;# 
  1942  021B                     	;# 
  1943  021B                     	;# 
  1944  021C                     	;# 
  1945  021C                     	;# 
  1946  021D                     	;# 
  1947  021D                     	;# 
  1948  021E                     	;# 
  1949  021F                     	;# 
  1950  028C                     	;# 
  1951  028C                     	;# 
  1952  028D                     	;# 
  1953  028D                     	;# 
  1954  028E                     	;# 
  1955  028F                     	;# 
  1956  0290                     	;# 
  1957  0290                     	;# 
  1958  0291                     	;# 
  1959  0292                     	;# 
  1960  0292                     	;# 
  1961  0293                     	;# 
  1962  0293                     	;# 
  1963  0294                     	;# 
  1964  0295                     	;# 
  1965  0296                     	;# 
  1966  0296                     	;# 
  1967  0297                     	;# 
  1968  0298                     	;# 
  1969  0298                     	;# 
  1970  0299                     	;# 
  1971  0299                     	;# 
  1972  029A                     	;# 
  1973  029B                     	;# 
  1974  029C                     	;# 
  1975  029C                     	;# 
  1976  029D                     	;# 
  1977  030C                     	;# 
  1978  030C                     	;# 
  1979  030D                     	;# 
  1980  030E                     	;# 
  1981  030F                     	;# 
  1982  0310                     	;# 
  1983  0310                     	;# 
  1984  0311                     	;# 
  1985  0312                     	;# 
  1986  0313                     	;# 
  1987  0314                     	;# 
  1988  0314                     	;# 
  1989  0315                     	;# 
  1990  0316                     	;# 
  1991  0317                     	;# 
  1992  0318                     	;# 
  1993  0318                     	;# 
  1994  0319                     	;# 
  1995  031A                     	;# 
  1996  031B                     	;# 
  1997  031C                     	;# 
  1998  031C                     	;# 
  1999  031D                     	;# 
  2000  031E                     	;# 
  2001  031F                     	;# 
  2002  038C                     	;# 
  2003  038C                     	;# 
  2004  038D                     	;# 
  2005  038E                     	;# 
  2006  0390                     	;# 
  2007  0390                     	;# 
  2008  0391                     	;# 
  2009  0392                     	;# 
  2010  040C                     	;# 
  2011  040D                     	;# 
  2012  040E                     	;# 
  2013  040F                     	;# 
  2014  0410                     	;# 
  2015  0411                     	;# 
  2016  0416                     	;# 
  2017  0416                     	;# 
  2018  0417                     	;# 
  2019  0418                     	;# 
  2020  0418                     	;# 
  2021  0419                     	;# 
  2022  041A                     	;# 
  2023  041A                     	;# 
  2024  041B                     	;# 
  2025  041C                     	;# 
  2026  041C                     	;# 
  2027  041D                     	;# 
  2028  041E                     	;# 
  2029  041F                     	;# 
  2030  048C                     	;# 
  2031  048C                     	;# 
  2032  048D                     	;# 
  2033  048E                     	;# 
  2034  048F                     	;# 
  2035  048F                     	;# 
  2036  0490                     	;# 
  2037  0491                     	;# 
  2038  0492                     	;# 
  2039  0492                     	;# 
  2040  0493                     	;# 
  2041  0494                     	;# 
  2042  0495                     	;# 
  2043  0495                     	;# 
  2044  0496                     	;# 
  2045  0497                     	;# 
  2046  0498                     	;# 
  2047  0499                     	;# 
  2048  049A                     	;# 
  2049  049B                     	;# 
  2050  049C                     	;# 
  2051  049D                     	;# 
  2052  050C                     	;# 
  2053  050C                     	;# 
  2054  050D                     	;# 
  2055  050E                     	;# 
  2056  050F                     	;# 
  2057  050F                     	;# 
  2058  0510                     	;# 
  2059  0511                     	;# 
  2060  0512                     	;# 
  2061  0512                     	;# 
  2062  0513                     	;# 
  2063  0514                     	;# 
  2064  0515                     	;# 
  2065  0515                     	;# 
  2066  0516                     	;# 
  2067  0517                     	;# 
  2068  0518                     	;# 
  2069  0519                     	;# 
  2070  051A                     	;# 
  2071  051B                     	;# 
  2072  051C                     	;# 
  2073  051D                     	;# 
  2074  058C                     	;# 
  2075  058C                     	;# 
  2076  058D                     	;# 
  2077  058E                     	;# 
  2078  058F                     	;# 
  2079  058F                     	;# 
  2080  0590                     	;# 
  2081  0591                     	;# 
  2082  0592                     	;# 
  2083  0593                     	;# 
  2084  060C                     	;# 
  2085  060D                     	;# 
  2086  060E                     	;# 
  2087  060F                     	;# 
  2088  0610                     	;# 
  2089  0611                     	;# 
  2090  0612                     	;# 
  2091  0613                     	;# 
  2092  0614                     	;# 
  2093  0616                     	;# 
  2094  0617                     	;# 
  2095  0618                     	;# 
  2096  0619                     	;# 
  2097  061A                     	;# 
  2098  061B                     	;# 
  2099  061C                     	;# 
  2100  061D                     	;# 
  2101  061E                     	;# 
  2102  068C                     	;# 
  2103  068D                     	;# 
  2104  068E                     	;# 
  2105  068F                     	;# 
  2106  0690                     	;# 
  2107  0691                     	;# 
  2108  0692                     	;# 
  2109  0693                     	;# 
  2110  0694                     	;# 
  2111  070C                     	;# 
  2112  070D                     	;# 
  2113  070E                     	;# 
  2114  070F                     	;# 
  2115  0710                     	;# 
  2116  0711                     	;# 
  2117  0712                     	;# 
  2118  0713                     	;# 
  2119  0714                     	;# 
  2120  0716                     	;# 
  2121  0717                     	;# 
  2122  0718                     	;# 
  2123  0719                     	;# 
  2124  071A                     	;# 
  2125  071B                     	;# 
  2126  071C                     	;# 
  2127  071D                     	;# 
  2128  071E                     	;# 
  2129  0796                     	;# 
  2130  0797                     	;# 
  2131  0798                     	;# 
  2132  0799                     	;# 
  2133  079A                     	;# 
  2134  079B                     	;# 
  2135  080C                     	;# 
  2136  080D                     	;# 
  2137  080E                     	;# 
  2138  080F                     	;# 
  2139  0810                     	;# 
  2140  0811                     	;# 
  2141  0812                     	;# 
  2142  0813                     	;# 
  2143  0814                     	;# 
  2144  081A                     	;# 
  2145  081B                     	;# 
  2146  081C                     	;# 
  2147  081D                     	;# 
  2148  081E                     	;# 
  2149  081F                     	;# 
  2150  088C                     	;# 
  2151  088D                     	;# 
  2152  088E                     	;# 
  2153  088F                     	;# 
  2154  0890                     	;# 
  2155  0891                     	;# 
  2156  0892                     	;# 
  2157  0893                     	;# 
  2158  0895                     	;# 
  2159  0896                     	;# 
  2160  0897                     	;# 
  2161  0898                     	;# 
  2162  0899                     	;# 
  2163  089A                     	;# 
  2164  089B                     	;# 
  2165  090C                     	;# 
  2166  090E                     	;# 
  2167  090F                     	;# 
  2168  091F                     	;# 
  2169  091F                     	;# 
  2170  098F                     	;# 
  2171  098F                     	;# 
  2172  0990                     	;# 
  2173  0991                     	;# 
  2174  0992                     	;# 
  2175  0993                     	;# 
  2176  0994                     	;# 
  2177  0995                     	;# 
  2178  0996                     	;# 
  2179  0997                     	;# 
  2180  0E0F                     	;# 
  2181  0E10                     	;# 
  2182  0E11                     	;# 
  2183  0E12                     	;# 
  2184  0E13                     	;# 
  2185  0E14                     	;# 
  2186  0E15                     	;# 
  2187  0E16                     	;# 
  2188  0E17                     	;# 
  2189  0E18                     	;# 
  2190  0E19                     	;# 
  2191  0E1A                     	;# 
  2192  0E1B                     	;# 
  2193  0E1C                     	;# 
  2194  0E1D                     	;# 
  2195  0E1E                     	;# 
  2196  0E1F                     	;# 
  2197  0E20                     	;# 
  2198  0E21                     	;# 
  2199  0E22                     	;# 
  2200  0E23                     	;# 
  2201  0E24                     	;# 
  2202  0E25                     	;# 
  2203  0E26                     	;# 
  2204  0E27                     	;# 
  2205  0E28                     	;# 
  2206  0E29                     	;# 
  2207  0E2A                     	;# 
  2208  0E2B                     	;# 
  2209  0E2C                     	;# 
  2210  0E2D                     	;# 
  2211  0E2E                     	;# 
  2212  0E2F                     	;# 
  2213  0E30                     	;# 
  2214  0E31                     	;# 
  2215  0E32                     	;# 
  2216  0E33                     	;# 
  2217  0E34                     	;# 
  2218  0E35                     	;# 
  2219  0E36                     	;# 
  2220  0E37                     	;# 
  2221  0E8F                     	;# 
  2222  0E90                     	;# 
  2223  0E91                     	;# 
  2224  0E92                     	;# 
  2225  0E93                     	;# 
  2226  0E94                     	;# 
  2227  0E95                     	;# 
  2228  0E96                     	;# 
  2229  0E97                     	;# 
  2230  0E9C                     	;# 
  2231  0E9D                     	;# 
  2232  0E9E                     	;# 
  2233  0EA1                     	;# 
  2234  0EA2                     	;# 
  2235  0EA3                     	;# 
  2236  0EA4                     	;# 
  2237  0EA5                     	;# 
  2238  0EA9                     	;# 
  2239  0EAA                     	;# 
  2240  0EAB                     	;# 
  2241  0EAC                     	;# 
  2242  0EB1                     	;# 
  2243  0EB2                     	;# 
  2244  0EB3                     	;# 
  2245  0EB8                     	;# 
  2246  0EB9                     	;# 
  2247  0EBA                     	;# 
  2248  0EBB                     	;# 
  2249  0EBC                     	;# 
  2250  0EBD                     	;# 
  2251  0EBE                     	;# 
  2252  0EC3                     	;# 
  2253  0EC5                     	;# 
  2254  0EC6                     	;# 
  2255  0EC7                     	;# 
  2256  0EC8                     	;# 
  2257  0EC9                     	;# 
  2258  0ECA                     	;# 
  2259  0ECB                     	;# 
  2260  0ECC                     	;# 
  2261  0F10                     	;# 
  2262  0F11                     	;# 
  2263  0F12                     	;# 
  2264  0F13                     	;# 
  2265  0F14                     	;# 
  2266  0F15                     	;# 
  2267  0F16                     	;# 
  2268  0F17                     	;# 
  2269  0F18                     	;# 
  2270  0F19                     	;# 
  2271  0F1A                     	;# 
  2272  0F1B                     	;# 
  2273  0F1C                     	;# 
  2274  0F1D                     	;# 
  2275  0F1E                     	;# 
  2276  0F1F                     	;# 
  2277  0F20                     	;# 
  2278  0F21                     	;# 
  2279  0F22                     	;# 
  2280  0F23                     	;# 
  2281  0F24                     	;# 
  2282  0F25                     	;# 
  2283  0F26                     	;# 
  2284  0F27                     	;# 
  2285  0F28                     	;# 
  2286  0F29                     	;# 
  2287  0F2A                     	;# 
  2288  0F2B                     	;# 
  2289  0F2C                     	;# 
  2290  0F2D                     	;# 
  2291  0F2E                     	;# 
  2292  0F2F                     	;# 
  2293  0F30                     	;# 
  2294  0F31                     	;# 
  2295  0F32                     	;# 
  2296  0F38                     	;# 
  2297  0F39                     	;# 
  2298  0F3A                     	;# 
  2299  0F3B                     	;# 
  2300  0F3C                     	;# 
  2301  0F3D                     	;# 
  2302  0F3E                     	;# 
  2303  0F3F                     	;# 
  2304  0F40                     	;# 
  2305  0F41                     	;# 
  2306  0F43                     	;# 
  2307  0F44                     	;# 
  2308  0F45                     	;# 
  2309  0F46                     	;# 
  2310  0F47                     	;# 
  2311  0F48                     	;# 
  2312  0F49                     	;# 
  2313  0F4A                     	;# 
  2314  0F4B                     	;# 
  2315  0F4C                     	;# 
  2316  0F4E                     	;# 
  2317  0F4F                     	;# 
  2318  0F50                     	;# 
  2319  0F51                     	;# 
  2320  0F52                     	;# 
  2321  0F53                     	;# 
  2322  0F54                     	;# 
  2323  0F55                     	;# 
  2324  0F56                     	;# 
  2325  0F57                     	;# 
  2326  0F59                     	;# 
  2327  0F5A                     	;# 
  2328  0F5B                     	;# 
  2329  0F5C                     	;# 
  2330  0F5D                     	;# 
  2331  0F61                     	;# 
  2332  0F62                     	;# 
  2333  0F64                     	;# 
  2334  0F65                     	;# 
  2335  0F66                     	;# 
  2336  0F67                     	;# 
  2337  0F68                     	;# 
  2338  0F69                     	;# 
  2339  0F6A                     	;# 
  2340  0F6B                     	;# 
  2341  0F6C                     	;# 
  2342  0F6D                     	;# 
  2343  0FE4                     	;# 
  2344  0FE5                     	;# 
  2345  0FE6                     	;# 
  2346  0FE7                     	;# 
  2347  0FE8                     	;# 
  2348  0FE9                     	;# 
  2349  0FEA                     	;# 
  2350  0FEB                     	;# 
  2351  0FED                     	;# 
  2352  0FEE                     	;# 
  2353  0FEF                     	;# 
  2354  0000                     	;# 
  2355  0001                     	;# 
  2356  0002                     	;# 
  2357  0003                     	;# 
  2358  0004                     	;# 
  2359  0005                     	;# 
  2360  0006                     	;# 
  2361  0007                     	;# 
  2362  0008                     	;# 
  2363  0009                     	;# 
  2364  000A                     	;# 
  2365  000B                     	;# 
  2366  000C                     	;# 
  2367  000D                     	;# 
  2368  000E                     	;# 
  2369  000F                     	;# 
  2370  0010                     	;# 
  2371  0011                     	;# 
  2372  0012                     	;# 
  2373  0013                     	;# 
  2374  0014                     	;# 
  2375  0015                     	;# 
  2376  0016                     	;# 
  2377  0017                     	;# 
  2378  0018                     	;# 
  2379  0019                     	;# 
  2380  001A                     	;# 
  2381  001C                     	;# 
  2382  001C                     	;# 
  2383  001D                     	;# 
  2384  001D                     	;# 
  2385  001E                     	;# 
  2386  001F                     	;# 
  2387  008C                     	;# 
  2388  008C                     	;# 
  2389  008D                     	;# 
  2390  008E                     	;# 
  2391  008E                     	;# 
  2392  008F                     	;# 
  2393  0090                     	;# 
  2394  0090                     	;# 
  2395  0091                     	;# 
  2396  0093                     	;# 
  2397  0094                     	;# 
  2398  0095                     	;# 
  2399  0096                     	;# 
  2400  0097                     	;# 
  2401  0098                     	;# 
  2402  0099                     	;# 
  2403  009A                     	;# 
  2404  009B                     	;# 
  2405  009C                     	;# 
  2406  009D                     	;# 
  2407  009E                     	;# 
  2408  010C                     	;# 
  2409  010D                     	;# 
  2410  010E                     	;# 
  2411  010E                     	;# 
  2412  010F                     	;# 
  2413  0110                     	;# 
  2414  0110                     	;# 
  2415  0111                     	;# 
  2416  0112                     	;# 
  2417  0112                     	;# 
  2418  0113                     	;# 
  2419  0114                     	;# 
  2420  0114                     	;# 
  2421  0115                     	;# 
  2422  0116                     	;# 
  2423  0116                     	;# 
  2424  0117                     	;# 
  2425  0119                     	;# 
  2426  0119                     	;# 
  2427  0119                     	;# 
  2428  011A                     	;# 
  2429  011A                     	;# 
  2430  011A                     	;# 
  2431  011B                     	;# 
  2432  011B                     	;# 
  2433  011B                     	;# 
  2434  011B                     	;# 
  2435  011B                     	;# 
  2436  011C                     	;# 
  2437  011C                     	;# 
  2438  011C                     	;# 
  2439  011D                     	;# 
  2440  011D                     	;# 
  2441  011D                     	;# 
  2442  011E                     	;# 
  2443  011E                     	;# 
  2444  011E                     	;# 
  2445  011F                     	;# 
  2446  011F                     	;# 
  2447  011F                     	;# 
  2448  011F                     	;# 
  2449  011F                     	;# 
  2450  018C                     	;# 
  2451  018D                     	;# 
  2452  018E                     	;# 
  2453  018F                     	;# 
  2454  0190                     	;# 
  2455  0191                     	;# 
  2456  0192                     	;# 
  2457  0196                     	;# 
  2458  0197                     	;# 
  2459  0198                     	;# 
  2460  0199                     	;# 
  2461  019A                     	;# 
  2462  019B                     	;# 
  2463  019C                     	;# 
  2464  020C                     	;# 
  2465  020C                     	;# 
  2466  020D                     	;# 
  2467  020E                     	;# 
  2468  020F                     	;# 
  2469  020F                     	;# 
  2470  0210                     	;# 
  2471  0210                     	;# 
  2472  0211                     	;# 
  2473  0211                     	;# 
  2474  0212                     	;# 
  2475  0212                     	;# 
  2476  0213                     	;# 
  2477  0214                     	;# 
  2478  0215                     	;# 
  2479  0215                     	;# 
  2480  0216                     	;# 
  2481  0216                     	;# 
  2482  0217                     	;# 
  2483  0217                     	;# 
  2484  0218                     	;# 
  2485  0218                     	;# 
  2486  0219                     	;# 
  2487  021A                     	;# 
  2488  021B                     	;# 
  2489  021B                     	;# 
  2490  021C                     	;# 
  2491  021C                     	;# 
  2492  021D                     	;# 
  2493  021D                     	;# 
  2494  021E                     	;# 
  2495  021F                     	;# 
  2496  028C                     	;# 
  2497  028C                     	;# 
  2498  028D                     	;# 
  2499  028D                     	;# 
  2500  028E                     	;# 
  2501  028F                     	;# 
  2502  0290                     	;# 
  2503  0290                     	;# 
  2504  0291                     	;# 
  2505  0292                     	;# 
  2506  0292                     	;# 
  2507  0293                     	;# 
  2508  0293                     	;# 
  2509  0294                     	;# 
  2510  0295                     	;# 
  2511  0296                     	;# 
  2512  0296                     	;# 
  2513  0297                     	;# 
  2514  0298                     	;# 
  2515  0298                     	;# 
  2516  0299                     	;# 
  2517  0299                     	;# 
  2518  029A                     	;# 
  2519  029B                     	;# 
  2520  029C                     	;# 
  2521  029C                     	;# 
  2522  029D                     	;# 
  2523  030C                     	;# 
  2524  030C                     	;# 
  2525  030D                     	;# 
  2526  030E                     	;# 
  2527  030F                     	;# 
  2528  0310                     	;# 
  2529  0310                     	;# 
  2530  0311                     	;# 
  2531  0312                     	;# 
  2532  0313                     	;# 
  2533  0314                     	;# 
  2534  0314                     	;# 
  2535  0315                     	;# 
  2536  0316                     	;# 
  2537  0317                     	;# 
  2538  0318                     	;# 
  2539  0318                     	;# 
  2540  0319                     	;# 
  2541  031A                     	;# 
  2542  031B                     	;# 
  2543  031C                     	;# 
  2544  031C                     	;# 
  2545  031D                     	;# 
  2546  031E                     	;# 
  2547  031F                     	;# 
  2548  038C                     	;# 
  2549  038C                     	;# 
  2550  038D                     	;# 
  2551  038E                     	;# 
  2552  0390                     	;# 
  2553  0390                     	;# 
  2554  0391                     	;# 
  2555  0392                     	;# 
  2556  040C                     	;# 
  2557  040D                     	;# 
  2558  040E                     	;# 
  2559  040F                     	;# 
  2560  0410                     	;# 
  2561  0411                     	;# 
  2562  0416                     	;# 
  2563  0416                     	;# 
  2564  0417                     	;# 
  2565  0418                     	;# 
  2566  0418                     	;# 
  2567  0419                     	;# 
  2568  041A                     	;# 
  2569  041A                     	;# 
  2570  041B                     	;# 
  2571  041C                     	;# 
  2572  041C                     	;# 
  2573  041D                     	;# 
  2574  041E                     	;# 
  2575  041F                     	;# 
  2576  048C                     	;# 
  2577  048C                     	;# 
  2578  048D                     	;# 
  2579  048E                     	;# 
  2580  048F                     	;# 
  2581  048F                     	;# 
  2582  0490                     	;# 
  2583  0491                     	;# 
  2584  0492                     	;# 
  2585  0492                     	;# 
  2586  0493                     	;# 
  2587  0494                     	;# 
  2588  0495                     	;# 
  2589  0495                     	;# 
  2590  0496                     	;# 
  2591  0497                     	;# 
  2592  0498                     	;# 
  2593  0499                     	;# 
  2594  049A                     	;# 
  2595  049B                     	;# 
  2596  049C                     	;# 
  2597  049D                     	;# 
  2598  050C                     	;# 
  2599  050C                     	;# 
  2600  050D                     	;# 
  2601  050E                     	;# 
  2602  050F                     	;# 
  2603  050F                     	;# 
  2604  0510                     	;# 
  2605  0511                     	;# 
  2606  0512                     	;# 
  2607  0512                     	;# 
  2608  0513                     	;# 
  2609  0514                     	;# 
  2610  0515                     	;# 
  2611  0515                     	;# 
  2612  0516                     	;# 
  2613  0517                     	;# 
  2614  0518                     	;# 
  2615  0519                     	;# 
  2616  051A                     	;# 
  2617  051B                     	;# 
  2618  051C                     	;# 
  2619  051D                     	;# 
  2620  058C                     	;# 
  2621  058C                     	;# 
  2622  058D                     	;# 
  2623  058E                     	;# 
  2624  058F                     	;# 
  2625  058F                     	;# 
  2626  0590                     	;# 
  2627  0591                     	;# 
  2628  0592                     	;# 
  2629  0593                     	;# 
  2630  060C                     	;# 
  2631  060D                     	;# 
  2632  060E                     	;# 
  2633  060F                     	;# 
  2634  0610                     	;# 
  2635  0611                     	;# 
  2636  0612                     	;# 
  2637  0613                     	;# 
  2638  0614                     	;# 
  2639  0616                     	;# 
  2640  0617                     	;# 
  2641  0618                     	;# 
  2642  0619                     	;# 
  2643  061A                     	;# 
  2644  061B                     	;# 
  2645  061C                     	;# 
  2646  061D                     	;# 
  2647  061E                     	;# 
  2648  068C                     	;# 
  2649  068D                     	;# 
  2650  068E                     	;# 
  2651  068F                     	;# 
  2652  0690                     	;# 
  2653  0691                     	;# 
  2654  0692                     	;# 
  2655  0693                     	;# 
  2656  0694                     	;# 
  2657  070C                     	;# 
  2658  070D                     	;# 
  2659  070E                     	;# 
  2660  070F                     	;# 
  2661  0710                     	;# 
  2662  0711                     	;# 
  2663  0712                     	;# 
  2664  0713                     	;# 
  2665  0714                     	;# 
  2666  0716                     	;# 
  2667  0717                     	;# 
  2668  0718                     	;# 
  2669  0719                     	;# 
  2670  071A                     	;# 
  2671  071B                     	;# 
  2672  071C                     	;# 
  2673  071D                     	;# 
  2674  071E                     	;# 
  2675  0796                     	;# 
  2676  0797                     	;# 
  2677  0798                     	;# 
  2678  0799                     	;# 
  2679  079A                     	;# 
  2680  079B                     	;# 
  2681  080C                     	;# 
  2682  080D                     	;# 
  2683  080E                     	;# 
  2684  080F                     	;# 
  2685  0810                     	;# 
  2686  0811                     	;# 
  2687  0812                     	;# 
  2688  0813                     	;# 
  2689  0814                     	;# 
  2690  081A                     	;# 
  2691  081B                     	;# 
  2692  081C                     	;# 
  2693  081D                     	;# 
  2694  081E                     	;# 
  2695  081F                     	;# 
  2696  088C                     	;# 
  2697  088D                     	;# 
  2698  088E                     	;# 
  2699  088F                     	;# 
  2700  0890                     	;# 
  2701  0891                     	;# 
  2702  0892                     	;# 
  2703  0893                     	;# 
  2704  0895                     	;# 
  2705  0896                     	;# 
  2706  0897                     	;# 
  2707  0898                     	;# 
  2708  0899                     	;# 
  2709  089A                     	;# 
  2710  089B                     	;# 
  2711  090C                     	;# 
  2712  090E                     	;# 
  2713  090F                     	;# 
  2714  091F                     	;# 
  2715  091F                     	;# 
  2716  098F                     	;# 
  2717  098F                     	;# 
  2718  0990                     	;# 
  2719  0991                     	;# 
  2720  0992                     	;# 
  2721  0993                     	;# 
  2722  0994                     	;# 
  2723  0995                     	;# 
  2724  0996                     	;# 
  2725  0997                     	;# 
  2726  0E0F                     	;# 
  2727  0E10                     	;# 
  2728  0E11                     	;# 
  2729  0E12                     	;# 
  2730  0E13                     	;# 
  2731  0E14                     	;# 
  2732  0E15                     	;# 
  2733  0E16                     	;# 
  2734  0E17                     	;# 
  2735  0E18                     	;# 
  2736  0E19                     	;# 
  2737  0E1A                     	;# 
  2738  0E1B                     	;# 
  2739  0E1C                     	;# 
  2740  0E1D                     	;# 
  2741  0E1E                     	;# 
  2742  0E1F                     	;# 
  2743  0E20                     	;# 
  2744  0E21                     	;# 
  2745  0E22                     	;# 
  2746  0E23                     	;# 
  2747  0E24                     	;# 
  2748  0E25                     	;# 
  2749  0E26                     	;# 
  2750  0E27                     	;# 
  2751  0E28                     	;# 
  2752  0E29                     	;# 
  2753  0E2A                     	;# 
  2754  0E2B                     	;# 
  2755  0E2C                     	;# 
  2756  0E2D                     	;# 
  2757  0E2E                     	;# 
  2758  0E2F                     	;# 
  2759  0E30                     	;# 
  2760  0E31                     	;# 
  2761  0E32                     	;# 
  2762  0E33                     	;# 
  2763  0E34                     	;# 
  2764  0E35                     	;# 
  2765  0E36                     	;# 
  2766  0E37                     	;# 
  2767  0E8F                     	;# 
  2768  0E90                     	;# 
  2769  0E91                     	;# 
  2770  0E92                     	;# 
  2771  0E93                     	;# 
  2772  0E94                     	;# 
  2773  0E95                     	;# 
  2774  0E96                     	;# 
  2775  0E97                     	;# 
  2776  0E9C                     	;# 
  2777  0E9D                     	;# 
  2778  0E9E                     	;# 
  2779  0EA1                     	;# 
  2780  0EA2                     	;# 
  2781  0EA3                     	;# 
  2782  0EA4                     	;# 
  2783  0EA5                     	;# 
  2784  0EA9                     	;# 
  2785  0EAA                     	;# 
  2786  0EAB                     	;# 
  2787  0EAC                     	;# 
  2788  0EB1                     	;# 
  2789  0EB2                     	;# 
  2790  0EB3                     	;# 
  2791  0EB8                     	;# 
  2792  0EB9                     	;# 
  2793  0EBA                     	;# 
  2794  0EBB                     	;# 
  2795  0EBC                     	;# 
  2796  0EBD                     	;# 
  2797  0EBE                     	;# 
  2798  0EC3                     	;# 
  2799  0EC5                     	;# 
  2800  0EC6                     	;# 
  2801  0EC7                     	;# 
  2802  0EC8                     	;# 
  2803  0EC9                     	;# 
  2804  0ECA                     	;# 
  2805  0ECB                     	;# 
  2806  0ECC                     	;# 
  2807  0F10                     	;# 
  2808  0F11                     	;# 
  2809  0F12                     	;# 
  2810  0F13                     	;# 
  2811  0F14                     	;# 
  2812  0F15                     	;# 
  2813  0F16                     	;# 
  2814  0F17                     	;# 
  2815  0F18                     	;# 
  2816  0F19                     	;# 
  2817  0F1A                     	;# 
  2818  0F1B                     	;# 
  2819  0F1C                     	;# 
  2820  0F1D                     	;# 
  2821  0F1E                     	;# 
  2822  0F1F                     	;# 
  2823  0F20                     	;# 
  2824  0F21                     	;# 
  2825  0F22                     	;# 
  2826  0F23                     	;# 
  2827  0F24                     	;# 
  2828  0F25                     	;# 
  2829  0F26                     	;# 
  2830  0F27                     	;# 
  2831  0F28                     	;# 
  2832  0F29                     	;# 
  2833  0F2A                     	;# 
  2834  0F2B                     	;# 
  2835  0F2C                     	;# 
  2836  0F2D                     	;# 
  2837  0F2E                     	;# 
  2838  0F2F                     	;# 
  2839  0F30                     	;# 
  2840  0F31                     	;# 
  2841  0F32                     	;# 
  2842  0F38                     	;# 
  2843  0F39                     	;# 
  2844  0F3A                     	;# 
  2845  0F3B                     	;# 
  2846  0F3C                     	;# 
  2847  0F3D                     	;# 
  2848  0F3E                     	;# 
  2849  0F3F                     	;# 
  2850  0F40                     	;# 
  2851  0F41                     	;# 
  2852  0F43                     	;# 
  2853  0F44                     	;# 
  2854  0F45                     	;# 
  2855  0F46                     	;# 
  2856  0F47                     	;# 
  2857  0F48                     	;# 
  2858  0F49                     	;# 
  2859  0F4A                     	;# 
  2860  0F4B                     	;# 
  2861  0F4C                     	;# 
  2862  0F4E                     	;# 
  2863  0F4F                     	;# 
  2864  0F50                     	;# 
  2865  0F51                     	;# 
  2866  0F52                     	;# 
  2867  0F53                     	;# 
  2868  0F54                     	;# 
  2869  0F55                     	;# 
  2870  0F56                     	;# 
  2871  0F57                     	;# 
  2872  0F59                     	;# 
  2873  0F5A                     	;# 
  2874  0F5B                     	;# 
  2875  0F5C                     	;# 
  2876  0F5D                     	;# 
  2877  0F61                     	;# 
  2878  0F62                     	;# 
  2879  0F64                     	;# 
  2880  0F65                     	;# 
  2881  0F66                     	;# 
  2882  0F67                     	;# 
  2883  0F68                     	;# 
  2884  0F69                     	;# 
  2885  0F6A                     	;# 
  2886  0F6B                     	;# 
  2887  0F6C                     	;# 
  2888  0F6D                     	;# 
  2889  0FE4                     	;# 
  2890  0FE5                     	;# 
  2891  0FE6                     	;# 
  2892  0FE7                     	;# 
  2893  0FE8                     	;# 
  2894  0FE9                     	;# 
  2895  0FEA                     	;# 
  2896  0FEB                     	;# 
  2897  0FED                     	;# 
  2898  0FEE                     	;# 
  2899  0FEF                     	;# 
  2900  0000                     	;# 
  2901  0001                     	;# 
  2902  0002                     	;# 
  2903  0003                     	;# 
  2904  0004                     	;# 
  2905  0005                     	;# 
  2906  0006                     	;# 
  2907  0007                     	;# 
  2908  0008                     	;# 
  2909  0009                     	;# 
  2910  000A                     	;# 
  2911  000B                     	;# 
  2912  000C                     	;# 
  2913  000D                     	;# 
  2914  000E                     	;# 
  2915  000F                     	;# 
  2916  0010                     	;# 
  2917  0011                     	;# 
  2918  0012                     	;# 
  2919  0013                     	;# 
  2920  0014                     	;# 
  2921  0015                     	;# 
  2922  0016                     	;# 
  2923  0017                     	;# 
  2924  0018                     	;# 
  2925  0019                     	;# 
  2926  001A                     	;# 
  2927  001C                     	;# 
  2928  001C                     	;# 
  2929  001D                     	;# 
  2930  001D                     	;# 
  2931  001E                     	;# 
  2932  001F                     	;# 
  2933  008C                     	;# 
  2934  008C                     	;# 
  2935  008D                     	;# 
  2936  008E                     	;# 
  2937  008E                     	;# 
  2938  008F                     	;# 
  2939  0090                     	;# 
  2940  0090                     	;# 
  2941  0091                     	;# 
  2942  0093                     	;# 
  2943  0094                     	;# 
  2944  0095                     	;# 
  2945  0096                     	;# 
  2946  0097                     	;# 
  2947  0098                     	;# 
  2948  0099                     	;# 
  2949  009A                     	;# 
  2950  009B                     	;# 
  2951  009C                     	;# 
  2952  009D                     	;# 
  2953  009E                     	;# 
  2954  010C                     	;# 
  2955  010D                     	;# 
  2956  010E                     	;# 
  2957  010E                     	;# 
  2958  010F                     	;# 
  2959  0110                     	;# 
  2960  0110                     	;# 
  2961  0111                     	;# 
  2962  0112                     	;# 
  2963  0112                     	;# 
  2964  0113                     	;# 
  2965  0114                     	;# 
  2966  0114                     	;# 
  2967  0115                     	;# 
  2968  0116                     	;# 
  2969  0116                     	;# 
  2970  0117                     	;# 
  2971  0119                     	;# 
  2972  0119                     	;# 
  2973  0119                     	;# 
  2974  011A                     	;# 
  2975  011A                     	;# 
  2976  011A                     	;# 
  2977  011B                     	;# 
  2978  011B                     	;# 
  2979  011B                     	;# 
  2980  011B                     	;# 
  2981  011B                     	;# 
  2982  011C                     	;# 
  2983  011C                     	;# 
  2984  011C                     	;# 
  2985  011D                     	;# 
  2986  011D                     	;# 
  2987  011D                     	;# 
  2988  011E                     	;# 
  2989  011E                     	;# 
  2990  011E                     	;# 
  2991  011F                     	;# 
  2992  011F                     	;# 
  2993  011F                     	;# 
  2994  011F                     	;# 
  2995  011F                     	;# 
  2996  018C                     	;# 
  2997  018D                     	;# 
  2998  018E                     	;# 
  2999  018F                     	;# 
  3000  0190                     	;# 
  3001  0191                     	;# 
  3002  0192                     	;# 
  3003  0196                     	;# 
  3004  0197                     	;# 
  3005  0198                     	;# 
  3006  0199                     	;# 
  3007  019A                     	;# 
  3008  019B                     	;# 
  3009  019C                     	;# 
  3010  020C                     	;# 
  3011  020C                     	;# 
  3012  020D                     	;# 
  3013  020E                     	;# 
  3014  020F                     	;# 
  3015  020F                     	;# 
  3016  0210                     	;# 
  3017  0210                     	;# 
  3018  0211                     	;# 
  3019  0211                     	;# 
  3020  0212                     	;# 
  3021  0212                     	;# 
  3022  0213                     	;# 
  3023  0214                     	;# 
  3024  0215                     	;# 
  3025  0215                     	;# 
  3026  0216                     	;# 
  3027  0216                     	;# 
  3028  0217                     	;# 
  3029  0217                     	;# 
  3030  0218                     	;# 
  3031  0218                     	;# 
  3032  0219                     	;# 
  3033  021A                     	;# 
  3034  021B                     	;# 
  3035  021B                     	;# 
  3036  021C                     	;# 
  3037  021C                     	;# 
  3038  021D                     	;# 
  3039  021D                     	;# 
  3040  021E                     	;# 
  3041  021F                     	;# 
  3042  028C                     	;# 
  3043  028C                     	;# 
  3044  028D                     	;# 
  3045  028D                     	;# 
  3046  028E                     	;# 
  3047  028F                     	;# 
  3048  0290                     	;# 
  3049  0290                     	;# 
  3050  0291                     	;# 
  3051  0292                     	;# 
  3052  0292                     	;# 
  3053  0293                     	;# 
  3054  0293                     	;# 
  3055  0294                     	;# 
  3056  0295                     	;# 
  3057  0296                     	;# 
  3058  0296                     	;# 
  3059  0297                     	;# 
  3060  0298                     	;# 
  3061  0298                     	;# 
  3062  0299                     	;# 
  3063  0299                     	;# 
  3064  029A                     	;# 
  3065  029B                     	;# 
  3066  029C                     	;# 
  3067  029C                     	;# 
  3068  029D                     	;# 
  3069  030C                     	;# 
  3070  030C                     	;# 
  3071  030D                     	;# 
  3072  030E                     	;# 
  3073  030F                     	;# 
  3074  0310                     	;# 
  3075  0310                     	;# 
  3076  0311                     	;# 
  3077  0312                     	;# 
  3078  0313                     	;# 
  3079  0314                     	;# 
  3080  0314                     	;# 
  3081  0315                     	;# 
  3082  0316                     	;# 
  3083  0317                     	;# 
  3084  0318                     	;# 
  3085  0318                     	;# 
  3086  0319                     	;# 
  3087  031A                     	;# 
  3088  031B                     	;# 
  3089  031C                     	;# 
  3090  031C                     	;# 
  3091  031D                     	;# 
  3092  031E                     	;# 
  3093  031F                     	;# 
  3094  038C                     	;# 
  3095  038C                     	;# 
  3096  038D                     	;# 
  3097  038E                     	;# 
  3098  0390                     	;# 
  3099  0390                     	;# 
  3100  0391                     	;# 
  3101  0392                     	;# 
  3102  040C                     	;# 
  3103  040D                     	;# 
  3104  040E                     	;# 
  3105  040F                     	;# 
  3106  0410                     	;# 
  3107  0411                     	;# 
  3108  0416                     	;# 
  3109  0416                     	;# 
  3110  0417                     	;# 
  3111  0418                     	;# 
  3112  0418                     	;# 
  3113  0419                     	;# 
  3114  041A                     	;# 
  3115  041A                     	;# 
  3116  041B                     	;# 
  3117  041C                     	;# 
  3118  041C                     	;# 
  3119  041D                     	;# 
  3120  041E                     	;# 
  3121  041F                     	;# 
  3122  048C                     	;# 
  3123  048C                     	;# 
  3124  048D                     	;# 
  3125  048E                     	;# 
  3126  048F                     	;# 
  3127  048F                     	;# 
  3128  0490                     	;# 
  3129  0491                     	;# 
  3130  0492                     	;# 
  3131  0492                     	;# 
  3132  0493                     	;# 
  3133  0494                     	;# 
  3134  0495                     	;# 
  3135  0495                     	;# 
  3136  0496                     	;# 
  3137  0497                     	;# 
  3138  0498                     	;# 
  3139  0499                     	;# 
  3140  049A                     	;# 
  3141  049B                     	;# 
  3142  049C                     	;# 
  3143  049D                     	;# 
  3144  050C                     	;# 
  3145  050C                     	;# 
  3146  050D                     	;# 
  3147  050E                     	;# 
  3148  050F                     	;# 
  3149  050F                     	;# 
  3150  0510                     	;# 
  3151  0511                     	;# 
  3152  0512                     	;# 
  3153  0512                     	;# 
  3154  0513                     	;# 
  3155  0514                     	;# 
  3156  0515                     	;# 
  3157  0515                     	;# 
  3158  0516                     	;# 
  3159  0517                     	;# 
  3160  0518                     	;# 
  3161  0519                     	;# 
  3162  051A                     	;# 
  3163  051B                     	;# 
  3164  051C                     	;# 
  3165  051D                     	;# 
  3166  058C                     	;# 
  3167  058C                     	;# 
  3168  058D                     	;# 
  3169  058E                     	;# 
  3170  058F                     	;# 
  3171  058F                     	;# 
  3172  0590                     	;# 
  3173  0591                     	;# 
  3174  0592                     	;# 
  3175  0593                     	;# 
  3176  060C                     	;# 
  3177  060D                     	;# 
  3178  060E                     	;# 
  3179  060F                     	;# 
  3180  0610                     	;# 
  3181  0611                     	;# 
  3182  0612                     	;# 
  3183  0613                     	;# 
  3184  0614                     	;# 
  3185  0616                     	;# 
  3186  0617                     	;# 
  3187  0618                     	;# 
  3188  0619                     	;# 
  3189  061A                     	;# 
  3190  061B                     	;# 
  3191  061C                     	;# 
  3192  061D                     	;# 
  3193  061E                     	;# 
  3194  068C                     	;# 
  3195  068D                     	;# 
  3196  068E                     	;# 
  3197  068F                     	;# 
  3198  0690                     	;# 
  3199  0691                     	;# 
  3200  0692                     	;# 
  3201  0693                     	;# 
  3202  0694                     	;# 
  3203  070C                     	;# 
  3204  070D                     	;# 
  3205  070E                     	;# 
  3206  070F                     	;# 
  3207  0710                     	;# 
  3208  0711                     	;# 
  3209  0712                     	;# 
  3210  0713                     	;# 
  3211  0714                     	;# 
  3212  0716                     	;# 
  3213  0717                     	;# 
  3214  0718                     	;# 
  3215  0719                     	;# 
  3216  071A                     	;# 
  3217  071B                     	;# 
  3218  071C                     	;# 
  3219  071D                     	;# 
  3220  071E                     	;# 
  3221  0796                     	;# 
  3222  0797                     	;# 
  3223  0798                     	;# 
  3224  0799                     	;# 
  3225  079A                     	;# 
  3226  079B                     	;# 
  3227  080C                     	;# 
  3228  080D                     	;# 
  3229  080E                     	;# 
  3230  080F                     	;# 
  3231  0810                     	;# 
  3232  0811                     	;# 
  3233  0812                     	;# 
  3234  0813                     	;# 
  3235  0814                     	;# 
  3236  081A                     	;# 
  3237  081B                     	;# 
  3238  081C                     	;# 
  3239  081D                     	;# 
  3240  081E                     	;# 
  3241  081F                     	;# 
  3242  088C                     	;# 
  3243  088D                     	;# 
  3244  088E                     	;# 
  3245  088F                     	;# 
  3246  0890                     	;# 
  3247  0891                     	;# 
  3248  0892                     	;# 
  3249  0893                     	;# 
  3250  0895                     	;# 
  3251  0896                     	;# 
  3252  0897                     	;# 
  3253  0898                     	;# 
  3254  0899                     	;# 
  3255  089A                     	;# 
  3256  089B                     	;# 
  3257  090C                     	;# 
  3258  090E                     	;# 
  3259  090F                     	;# 
  3260  091F                     	;# 
  3261  091F                     	;# 
  3262  098F                     	;# 
  3263  098F                     	;# 
  3264  0990                     	;# 
  3265  0991                     	;# 
  3266  0992                     	;# 
  3267  0993                     	;# 
  3268  0994                     	;# 
  3269  0995                     	;# 
  3270  0996                     	;# 
  3271  0997                     	;# 
  3272  0E0F                     	;# 
  3273  0E10                     	;# 
  3274  0E11                     	;# 
  3275  0E12                     	;# 
  3276  0E13                     	;# 
  3277  0E14                     	;# 
  3278  0E15                     	;# 
  3279  0E16                     	;# 
  3280  0E17                     	;# 
  3281  0E18                     	;# 
  3282  0E19                     	;# 
  3283  0E1A                     	;# 
  3284  0E1B                     	;# 
  3285  0E1C                     	;# 
  3286  0E1D                     	;# 
  3287  0E1E                     	;# 
  3288  0E1F                     	;# 
  3289  0E20                     	;# 
  3290  0E21                     	;# 
  3291  0E22                     	;# 
  3292  0E23                     	;# 
  3293  0E24                     	;# 
  3294  0E25                     	;# 
  3295  0E26                     	;# 
  3296  0E27                     	;# 
  3297  0E28                     	;# 
  3298  0E29                     	;# 
  3299  0E2A                     	;# 
  3300  0E2B                     	;# 
  3301  0E2C                     	;# 
  3302  0E2D                     	;# 
  3303  0E2E                     	;# 
  3304  0E2F                     	;# 
  3305  0E30                     	;# 
  3306  0E31                     	;# 
  3307  0E32                     	;# 
  3308  0E33                     	;# 
  3309  0E34                     	;# 
  3310  0E35                     	;# 
  3311  0E36                     	;# 
  3312  0E37                     	;# 
  3313  0E8F                     	;# 
  3314  0E90                     	;# 
  3315  0E91                     	;# 
  3316  0E92                     	;# 
  3317  0E93                     	;# 
  3318  0E94                     	;# 
  3319  0E95                     	;# 
  3320  0E96                     	;# 
  3321  0E97                     	;# 
  3322  0E9C                     	;# 
  3323  0E9D                     	;# 
  3324  0E9E                     	;# 
  3325  0EA1                     	;# 
  3326  0EA2                     	;# 
  3327  0EA3                     	;# 
  3328  0EA4                     	;# 
  3329  0EA5                     	;# 
  3330  0EA9                     	;# 
  3331  0EAA                     	;# 
  3332  0EAB                     	;# 
  3333  0EAC                     	;# 
  3334  0EB1                     	;# 
  3335  0EB2                     	;# 
  3336  0EB3                     	;# 
  3337  0EB8                     	;# 
  3338  0EB9                     	;# 
  3339  0EBA                     	;# 
  3340  0EBB                     	;# 
  3341  0EBC                     	;# 
  3342  0EBD                     	;# 
  3343  0EBE                     	;# 
  3344  0EC3                     	;# 
  3345  0EC5                     	;# 
  3346  0EC6                     	;# 
  3347  0EC7                     	;# 
  3348  0EC8                     	;# 
  3349  0EC9                     	;# 
  3350  0ECA                     	;# 
  3351  0ECB                     	;# 
  3352  0ECC                     	;# 
  3353  0F10                     	;# 
  3354  0F11                     	;# 
  3355  0F12                     	;# 
  3356  0F13                     	;# 
  3357  0F14                     	;# 
  3358  0F15                     	;# 
  3359  0F16                     	;# 
  3360  0F17                     	;# 
  3361  0F18                     	;# 
  3362  0F19                     	;# 
  3363  0F1A                     	;# 
  3364  0F1B                     	;# 
  3365  0F1C                     	;# 
  3366  0F1D                     	;# 
  3367  0F1E                     	;# 
  3368  0F1F                     	;# 
  3369  0F20                     	;# 
  3370  0F21                     	;# 
  3371  0F22                     	;# 
  3372  0F23                     	;# 
  3373  0F24                     	;# 
  3374  0F25                     	;# 
  3375  0F26                     	;# 
  3376  0F27                     	;# 
  3377  0F28                     	;# 
  3378  0F29                     	;# 
  3379  0F2A                     	;# 
  3380  0F2B                     	;# 
  3381  0F2C                     	;# 
  3382  0F2D                     	;# 
  3383  0F2E                     	;# 
  3384  0F2F                     	;# 
  3385  0F30                     	;# 
  3386  0F31                     	;# 
  3387  0F32                     	;# 
  3388  0F38                     	;# 
  3389  0F39                     	;# 
  3390  0F3A                     	;# 
  3391  0F3B                     	;# 
  3392  0F3C                     	;# 
  3393  0F3D                     	;# 
  3394  0F3E                     	;# 
  3395  0F3F                     	;# 
  3396  0F40                     	;# 
  3397  0F41                     	;# 
  3398  0F43                     	;# 
  3399  0F44                     	;# 
  3400  0F45                     	;# 
  3401  0F46                     	;# 
  3402  0F47                     	;# 
  3403  0F48                     	;# 
  3404  0F49                     	;# 
  3405  0F4A                     	;# 
  3406  0F4B                     	;# 
  3407  0F4C                     	;# 
  3408  0F4E                     	;# 
  3409  0F4F                     	;# 
  3410  0F50                     	;# 
  3411  0F51                     	;# 
  3412  0F52                     	;# 
  3413  0F53                     	;# 
  3414  0F54                     	;# 
  3415  0F55                     	;# 
  3416  0F56                     	;# 
  3417  0F57                     	;# 
  3418  0F59                     	;# 
  3419  0F5A                     	;# 
  3420  0F5B                     	;# 
  3421  0F5C                     	;# 
  3422  0F5D                     	;# 
  3423  0F61                     	;# 
  3424  0F62                     	;# 
  3425  0F64                     	;# 
  3426  0F65                     	;# 
  3427  0F66                     	;# 
  3428  0F67                     	;# 
  3429  0F68                     	;# 
  3430  0F69                     	;# 
  3431  0F6A                     	;# 
  3432  0F6B                     	;# 
  3433  0F6C                     	;# 
  3434  0F6D                     	;# 
  3435  0FE4                     	;# 
  3436  0FE5                     	;# 
  3437  0FE6                     	;# 
  3438  0FE7                     	;# 
  3439  0FE8                     	;# 
  3440  0FE9                     	;# 
  3441  0FEA                     	;# 
  3442  0FEB                     	;# 
  3443  0FED                     	;# 
  3444  0FEE                     	;# 
  3445  0FEF                     	;# 
  3446  0000                     	;# 
  3447  0001                     	;# 
  3448  0002                     	;# 
  3449  0003                     	;# 
  3450  0004                     	;# 
  3451  0005                     	;# 
  3452  0006                     	;# 
  3453  0007                     	;# 
  3454  0008                     	;# 
  3455  0009                     	;# 
  3456  000A                     	;# 
  3457  000B                     	;# 
  3458  000C                     	;# 
  3459  000D                     	;# 
  3460  000E                     	;# 
  3461  000F                     	;# 
  3462  0010                     	;# 
  3463  0011                     	;# 
  3464  0012                     	;# 
  3465  0013                     	;# 
  3466  0014                     	;# 
  3467  0015                     	;# 
  3468  0016                     	;# 
  3469  0017                     	;# 
  3470  0018                     	;# 
  3471  0019                     	;# 
  3472  001A                     	;# 
  3473  001C                     	;# 
  3474  001C                     	;# 
  3475  001D                     	;# 
  3476  001D                     	;# 
  3477  001E                     	;# 
  3478  001F                     	;# 
  3479  008C                     	;# 
  3480  008C                     	;# 
  3481  008D                     	;# 
  3482  008E                     	;# 
  3483  008E                     	;# 
  3484  008F                     	;# 
  3485  0090                     	;# 
  3486  0090                     	;# 
  3487  0091                     	;# 
  3488  0093                     	;# 
  3489  0094                     	;# 
  3490  0095                     	;# 
  3491  0096                     	;# 
  3492  0097                     	;# 
  3493  0098                     	;# 
  3494  0099                     	;# 
  3495  009A                     	;# 
  3496  009B                     	;# 
  3497  009C                     	;# 
  3498  009D                     	;# 
  3499  009E                     	;# 
  3500  010C                     	;# 
  3501  010D                     	;# 
  3502  010E                     	;# 
  3503  010E                     	;# 
  3504  010F                     	;# 
  3505  0110                     	;# 
  3506  0110                     	;# 
  3507  0111                     	;# 
  3508  0112                     	;# 
  3509  0112                     	;# 
  3510  0113                     	;# 
  3511  0114                     	;# 
  3512  0114                     	;# 
  3513  0115                     	;# 
  3514  0116                     	;# 
  3515  0116                     	;# 
  3516  0117                     	;# 
  3517  0119                     	;# 
  3518  0119                     	;# 
  3519  0119                     	;# 
  3520  011A                     	;# 
  3521  011A                     	;# 
  3522  011A                     	;# 
  3523  011B                     	;# 
  3524  011B                     	;# 
  3525  011B                     	;# 
  3526  011B                     	;# 
  3527  011B                     	;# 
  3528  011C                     	;# 
  3529  011C                     	;# 
  3530  011C                     	;# 
  3531  011D                     	;# 
  3532  011D                     	;# 
  3533  011D                     	;# 
  3534  011E                     	;# 
  3535  011E                     	;# 
  3536  011E                     	;# 
  3537  011F                     	;# 
  3538  011F                     	;# 
  3539  011F                     	;# 
  3540  011F                     	;# 
  3541  011F                     	;# 
  3542  018C                     	;# 
  3543  018D                     	;# 
  3544  018E                     	;# 
  3545  018F                     	;# 
  3546  0190                     	;# 
  3547  0191                     	;# 
  3548  0192                     	;# 
  3549  0196                     	;# 
  3550  0197                     	;# 
  3551  0198                     	;# 
  3552  0199                     	;# 
  3553  019A                     	;# 
  3554  019B                     	;# 
  3555  019C                     	;# 
  3556  020C                     	;# 
  3557  020C                     	;# 
  3558  020D                     	;# 
  3559  020E                     	;# 
  3560  020F                     	;# 
  3561  020F                     	;# 
  3562  0210                     	;# 
  3563  0210                     	;# 
  3564  0211                     	;# 
  3565  0211                     	;# 
  3566  0212                     	;# 
  3567  0212                     	;# 
  3568  0213                     	;# 
  3569  0214                     	;# 
  3570  0215                     	;# 
  3571  0215                     	;# 
  3572  0216                     	;# 
  3573  0216                     	;# 
  3574  0217                     	;# 
  3575  0217                     	;# 
  3576  0218                     	;# 
  3577  0218                     	;# 
  3578  0219                     	;# 
  3579  021A                     	;# 
  3580  021B                     	;# 
  3581  021B                     	;# 
  3582  021C                     	;# 
  3583  021C                     	;# 
  3584  021D                     	;# 
  3585  021D                     	;# 
  3586  021E                     	;# 
  3587  021F                     	;# 
  3588  028C                     	;# 
  3589  028C                     	;# 
  3590  028D                     	;# 
  3591  028D                     	;# 
  3592  028E                     	;# 
  3593  028F                     	;# 
  3594  0290                     	;# 
  3595  0290                     	;# 
  3596  0291                     	;# 
  3597  0292                     	;# 
  3598  0292                     	;# 
  3599  0293                     	;# 
  3600  0293                     	;# 
  3601  0294                     	;# 
  3602  0295                     	;# 
  3603  0296                     	;# 
  3604  0296                     	;# 
  3605  0297                     	;# 
  3606  0298                     	;# 
  3607  0298                     	;# 
  3608  0299                     	;# 
  3609  0299                     	;# 
  3610  029A                     	;# 
  3611  029B                     	;# 
  3612  029C                     	;# 
  3613  029C                     	;# 
  3614  029D                     	;# 
  3615  030C                     	;# 
  3616  030C                     	;# 
  3617  030D                     	;# 
  3618  030E                     	;# 
  3619  030F                     	;# 
  3620  0310                     	;# 
  3621  0310                     	;# 
  3622  0311                     	;# 
  3623  0312                     	;# 
  3624  0313                     	;# 
  3625  0314                     	;# 
  3626  0314                     	;# 
  3627  0315                     	;# 
  3628  0316                     	;# 
  3629  0317                     	;# 
  3630  0318                     	;# 
  3631  0318                     	;# 
  3632  0319                     	;# 
  3633  031A                     	;# 
  3634  031B                     	;# 
  3635  031C                     	;# 
  3636  031C                     	;# 
  3637  031D                     	;# 
  3638  031E                     	;# 
  3639  031F                     	;# 
  3640  038C                     	;# 
  3641  038C                     	;# 
  3642  038D                     	;# 
  3643  038E                     	;# 
  3644  0390                     	;# 
  3645  0390                     	;# 
  3646  0391                     	;# 
  3647  0392                     	;# 
  3648  040C                     	;# 
  3649  040D                     	;# 
  3650  040E                     	;# 
  3651  040F                     	;# 
  3652  0410                     	;# 
  3653  0411                     	;# 
  3654  0416                     	;# 
  3655  0416                     	;# 
  3656  0417                     	;# 
  3657  0418                     	;# 
  3658  0418                     	;# 
  3659  0419                     	;# 
  3660  041A                     	;# 
  3661  041A                     	;# 
  3662  041B                     	;# 
  3663  041C                     	;# 
  3664  041C                     	;# 
  3665  041D                     	;# 
  3666  041E                     	;# 
  3667  041F                     	;# 
  3668  048C                     	;# 
  3669  048C                     	;# 
  3670  048D                     	;# 
  3671  048E                     	;# 
  3672  048F                     	;# 
  3673  048F                     	;# 
  3674  0490                     	;# 
  3675  0491                     	;# 
  3676  0492                     	;# 
  3677  0492                     	;# 
  3678  0493                     	;# 
  3679  0494                     	;# 
  3680  0495                     	;# 
  3681  0495                     	;# 
  3682  0496                     	;# 
  3683  0497                     	;# 
  3684  0498                     	;# 
  3685  0499                     	;# 
  3686  049A                     	;# 
  3687  049B                     	;# 
  3688  049C                     	;# 
  3689  049D                     	;# 
  3690  050C                     	;# 
  3691  050C                     	;# 
  3692  050D                     	;# 
  3693  050E                     	;# 
  3694  050F                     	;# 
  3695  050F                     	;# 
  3696  0510                     	;# 
  3697  0511                     	;# 
  3698  0512                     	;# 
  3699  0512                     	;# 
  3700  0513                     	;# 
  3701  0514                     	;# 
  3702  0515                     	;# 
  3703  0515                     	;# 
  3704  0516                     	;# 
  3705  0517                     	;# 
  3706  0518                     	;# 
  3707  0519                     	;# 
  3708  051A                     	;# 
  3709  051B                     	;# 
  3710  051C                     	;# 
  3711  051D                     	;# 
  3712  058C                     	;# 
  3713  058C                     	;# 
  3714  058D                     	;# 
  3715  058E                     	;# 
  3716  058F                     	;# 
  3717  058F                     	;# 
  3718  0590                     	;# 
  3719  0591                     	;# 
  3720  0592                     	;# 
  3721  0593                     	;# 
  3722  060C                     	;# 
  3723  060D                     	;# 
  3724  060E                     	;# 
  3725  060F                     	;# 
  3726  0610                     	;# 
  3727  0611                     	;# 
  3728  0612                     	;# 
  3729  0613                     	;# 
  3730  0614                     	;# 
  3731  0616                     	;# 
  3732  0617                     	;# 
  3733  0618                     	;# 
  3734  0619                     	;# 
  3735  061A                     	;# 
  3736  061B                     	;# 
  3737  061C                     	;# 
  3738  061D                     	;# 
  3739  061E                     	;# 
  3740  068C                     	;# 
  3741  068D                     	;# 
  3742  068E                     	;# 
  3743  068F                     	;# 
  3744  0690                     	;# 
  3745  0691                     	;# 
  3746  0692                     	;# 
  3747  0693                     	;# 
  3748  0694                     	;# 
  3749  070C                     	;# 
  3750  070D                     	;# 
  3751  070E                     	;# 
  3752  070F                     	;# 
  3753  0710                     	;# 
  3754  0711                     	;# 
  3755  0712                     	;# 
  3756  0713                     	;# 
  3757  0714                     	;# 
  3758  0716                     	;# 
  3759  0717                     	;# 
  3760  0718                     	;# 
  3761  0719                     	;# 
  3762  071A                     	;# 
  3763  071B                     	;# 
  3764  071C                     	;# 
  3765  071D                     	;# 
  3766  071E                     	;# 
  3767  0796                     	;# 
  3768  0797                     	;# 
  3769  0798                     	;# 
  3770  0799                     	;# 
  3771  079A                     	;# 
  3772  079B                     	;# 
  3773  080C                     	;# 
  3774  080D                     	;# 
  3775  080E                     	;# 
  3776  080F                     	;# 
  3777  0810                     	;# 
  3778  0811                     	;# 
  3779  0812                     	;# 
  3780  0813                     	;# 
  3781  0814                     	;# 
  3782  081A                     	;# 
  3783  081B                     	;# 
  3784  081C                     	;# 
  3785  081D                     	;# 
  3786  081E                     	;# 
  3787  081F                     	;# 
  3788  088C                     	;# 
  3789  088D                     	;# 
  3790  088E                     	;# 
  3791  088F                     	;# 
  3792  0890                     	;# 
  3793  0891                     	;# 
  3794  0892                     	;# 
  3795  0893                     	;# 
  3796  0895                     	;# 
  3797  0896                     	;# 
  3798  0897                     	;# 
  3799  0898                     	;# 
  3800  0899                     	;# 
  3801  089A                     	;# 
  3802  089B                     	;# 
  3803  090C                     	;# 
  3804  090E                     	;# 
  3805  090F                     	;# 
  3806  091F                     	;# 
  3807  091F                     	;# 
  3808  098F                     	;# 
  3809  098F                     	;# 
  3810  0990                     	;# 
  3811  0991                     	;# 
  3812  0992                     	;# 
  3813  0993                     	;# 
  3814  0994                     	;# 
  3815  0995                     	;# 
  3816  0996                     	;# 
  3817  0997                     	;# 
  3818  0E0F                     	;# 
  3819  0E10                     	;# 
  3820  0E11                     	;# 
  3821  0E12                     	;# 
  3822  0E13                     	;# 
  3823  0E14                     	;# 
  3824  0E15                     	;# 
  3825  0E16                     	;# 
  3826  0E17                     	;# 
  3827  0E18                     	;# 
  3828  0E19                     	;# 
  3829  0E1A                     	;# 
  3830  0E1B                     	;# 
  3831  0E1C                     	;# 
  3832  0E1D                     	;# 
  3833  0E1E                     	;# 
  3834  0E1F                     	;# 
  3835  0E20                     	;# 
  3836  0E21                     	;# 
  3837  0E22                     	;# 
  3838  0E23                     	;# 
  3839  0E24                     	;# 
  3840  0E25                     	;# 
  3841  0E26                     	;# 
  3842  0E27                     	;# 
  3843  0E28                     	;# 
  3844  0E29                     	;# 
  3845  0E2A                     	;# 
  3846  0E2B                     	;# 
  3847  0E2C                     	;# 
  3848  0E2D                     	;# 
  3849  0E2E                     	;# 
  3850  0E2F                     	;# 
  3851  0E30                     	;# 
  3852  0E31                     	;# 
  3853  0E32                     	;# 
  3854  0E33                     	;# 
  3855  0E34                     	;# 
  3856  0E35                     	;# 
  3857  0E36                     	;# 
  3858  0E37                     	;# 
  3859  0E8F                     	;# 
  3860  0E90                     	;# 
  3861  0E91                     	;# 
  3862  0E92                     	;# 
  3863  0E93                     	;# 
  3864  0E94                     	;# 
  3865  0E95                     	;# 
  3866  0E96                     	;# 
  3867  0E97                     	;# 
  3868  0E9C                     	;# 
  3869  0E9D                     	;# 
  3870  0E9E                     	;# 
  3871  0EA1                     	;# 
  3872  0EA2                     	;# 
  3873  0EA3                     	;# 
  3874  0EA4                     	;# 
  3875  0EA5                     	;# 
  3876  0EA9                     	;# 
  3877  0EAA                     	;# 
  3878  0EAB                     	;# 
  3879  0EAC                     	;# 
  3880  0EB1                     	;# 
  3881  0EB2                     	;# 
  3882  0EB3                     	;# 
  3883  0EB8                     	;# 
  3884  0EB9                     	;# 
  3885  0EBA                     	;# 
  3886  0EBB                     	;# 
  3887  0EBC                     	;# 
  3888  0EBD                     	;# 
  3889  0EBE                     	;# 
  3890  0EC3                     	;# 
  3891  0EC5                     	;# 
  3892  0EC6                     	;# 
  3893  0EC7                     	;# 
  3894  0EC8                     	;# 
  3895  0EC9                     	;# 
  3896  0ECA                     	;# 
  3897  0ECB                     	;# 
  3898  0ECC                     	;# 
  3899  0F10                     	;# 
  3900  0F11                     	;# 
  3901  0F12                     	;# 
  3902  0F13                     	;# 
  3903  0F14                     	;# 
  3904  0F15                     	;# 
  3905  0F16                     	;# 
  3906  0F17                     	;# 
  3907  0F18                     	;# 
  3908  0F19                     	;# 
  3909  0F1A                     	;# 
  3910  0F1B                     	;# 
  3911  0F1C                     	;# 
  3912  0F1D                     	;# 
  3913  0F1E                     	;# 
  3914  0F1F                     	;# 
  3915  0F20                     	;# 
  3916  0F21                     	;# 
  3917  0F22                     	;# 
  3918  0F23                     	;# 
  3919  0F24                     	;# 
  3920  0F25                     	;# 
  3921  0F26                     	;# 
  3922  0F27                     	;# 
  3923  0F28                     	;# 
  3924  0F29                     	;# 
  3925  0F2A                     	;# 
  3926  0F2B                     	;# 
  3927  0F2C                     	;# 
  3928  0F2D                     	;# 
  3929  0F2E                     	;# 
  3930  0F2F                     	;# 
  3931  0F30                     	;# 
  3932  0F31                     	;# 
  3933  0F32                     	;# 
  3934  0F38                     	;# 
  3935  0F39                     	;# 
  3936  0F3A                     	;# 
  3937  0F3B                     	;# 
  3938  0F3C                     	;# 
  3939  0F3D                     	;# 
  3940  0F3E                     	;# 
  3941  0F3F                     	;# 
  3942  0F40                     	;# 
  3943  0F41                     	;# 
  3944  0F43                     	;# 
  3945  0F44                     	;# 
  3946  0F45                     	;# 
  3947  0F46                     	;# 
  3948  0F47                     	;# 
  3949  0F48                     	;# 
  3950  0F49                     	;# 
  3951  0F4A                     	;# 
  3952  0F4B                     	;# 
  3953  0F4C                     	;# 
  3954  0F4E                     	;# 
  3955  0F4F                     	;# 
  3956  0F50                     	;# 
  3957  0F51                     	;# 
  3958  0F52                     	;# 
  3959  0F53                     	;# 
  3960  0F54                     	;# 
  3961  0F55                     	;# 
  3962  0F56                     	;# 
  3963  0F57                     	;# 
  3964  0F59                     	;# 
  3965  0F5A                     	;# 
  3966  0F5B                     	;# 
  3967  0F5C                     	;# 
  3968  0F5D                     	;# 
  3969  0F61                     	;# 
  3970  0F62                     	;# 
  3971  0F64                     	;# 
  3972  0F65                     	;# 
  3973  0F66                     	;# 
  3974  0F67                     	;# 
  3975  0F68                     	;# 
  3976  0F69                     	;# 
  3977  0F6A                     	;# 
  3978  0F6B                     	;# 
  3979  0F6C                     	;# 
  3980  0F6D                     	;# 
  3981  0FE4                     	;# 
  3982  0FE5                     	;# 
  3983  0FE6                     	;# 
  3984  0FE7                     	;# 
  3985  0FE8                     	;# 
  3986  0FE9                     	;# 
  3987  0FEA                     	;# 
  3988  0FEB                     	;# 
  3989  0FED                     	;# 
  3990  0FEE                     	;# 
  3991  0FEF                     	;# 
  3992  0000                     	;# 
  3993  0001                     	;# 
  3994  0002                     	;# 
  3995  0003                     	;# 
  3996  0004                     	;# 
  3997  0005                     	;# 
  3998  0006                     	;# 
  3999  0007                     	;# 
  4000  0008                     	;# 
  4001  0009                     	;# 
  4002  000A                     	;# 
  4003  000B                     	;# 
  4004  000C                     	;# 
  4005  000D                     	;# 
  4006  000E                     	;# 
  4007  000F                     	;# 
  4008  0010                     	;# 
  4009  0011                     	;# 
  4010  0012                     	;# 
  4011  0013                     	;# 
  4012  0014                     	;# 
  4013  0015                     	;# 
  4014  0016                     	;# 
  4015  0017                     	;# 
  4016  0018                     	;# 
  4017  0019                     	;# 
  4018  001A                     	;# 
  4019  001C                     	;# 
  4020  001C                     	;# 
  4021  001D                     	;# 
  4022  001D                     	;# 
  4023  001E                     	;# 
  4024  001F                     	;# 
  4025  008C                     	;# 
  4026  008C                     	;# 
  4027  008D                     	;# 
  4028  008E                     	;# 
  4029  008E                     	;# 
  4030  008F                     	;# 
  4031  0090                     	;# 
  4032  0090                     	;# 
  4033  0091                     	;# 
  4034  0093                     	;# 
  4035  0094                     	;# 
  4036  0095                     	;# 
  4037  0096                     	;# 
  4038  0097                     	;# 
  4039  0098                     	;# 
  4040  0099                     	;# 
  4041  009A                     	;# 
  4042  009B                     	;# 
  4043  009C                     	;# 
  4044  009D                     	;# 
  4045  009E                     	;# 
  4046  010C                     	;# 
  4047  010D                     	;# 
  4048  010E                     	;# 
  4049  010E                     	;# 
  4050  010F                     	;# 
  4051  0110                     	;# 
  4052  0110                     	;# 
  4053  0111                     	;# 
  4054  0112                     	;# 
  4055  0112                     	;# 
  4056  0113                     	;# 
  4057  0114                     	;# 
  4058  0114                     	;# 
  4059  0115                     	;# 
  4060  0116                     	;# 
  4061  0116                     	;# 
  4062  0117                     	;# 
  4063  0119                     	;# 
  4064  0119                     	;# 
  4065  0119                     	;# 
  4066  011A                     	;# 
  4067  011A                     	;# 
  4068  011A                     	;# 
  4069  011B                     	;# 
  4070  011B                     	;# 
  4071  011B                     	;# 
  4072  011B                     	;# 
  4073  011B                     	;# 
  4074  011C                     	;# 
  4075  011C                     	;# 
  4076  011C                     	;# 
  4077  011D                     	;# 
  4078  011D                     	;# 
  4079  011D                     	;# 
  4080  011E                     	;# 
  4081  011E                     	;# 
  4082  011E                     	;# 
  4083  011F                     	;# 
  4084  011F                     	;# 
  4085  011F                     	;# 
  4086  011F                     	;# 
  4087  011F                     	;# 
  4088  018C                     	;# 
  4089  018D                     	;# 
  4090  018E                     	;# 
  4091  018F                     	;# 
  4092  0190                     	;# 
  4093  0191                     	;# 
  4094  0192                     	;# 
  4095  0196                     	;# 
  4096  0197                     	;# 
  4097  0198                     	;# 
  4098  0199                     	;# 
  4099  019A                     	;# 
  4100  019B                     	;# 
  4101  019C                     	;# 
  4102  020C                     	;# 
  4103  020C                     	;# 
  4104  020D                     	;# 
  4105  020E                     	;# 
  4106  020F                     	;# 
  4107  020F                     	;# 
  4108  0210                     	;# 
  4109  0210                     	;# 
  4110  0211                     	;# 
  4111  0211                     	;# 
  4112  0212                     	;# 
  4113  0212                     	;# 
  4114  0213                     	;# 
  4115  0214                     	;# 
  4116  0215                     	;# 
  4117  0215                     	;# 
  4118  0216                     	;# 
  4119  0216                     	;# 
  4120  0217                     	;# 
  4121  0217                     	;# 
  4122  0218                     	;# 
  4123  0218                     	;# 
  4124  0219                     	;# 
  4125  021A                     	;# 
  4126  021B                     	;# 
  4127  021B                     	;# 
  4128  021C                     	;# 
  4129  021C                     	;# 
  4130  021D                     	;# 
  4131  021D                     	;# 
  4132  021E                     	;# 
  4133  021F                     	;# 
  4134  028C                     	;# 
  4135  028C                     	;# 
  4136  028D                     	;# 
  4137  028D                     	;# 
  4138  028E                     	;# 
  4139  028F                     	;# 
  4140  0290                     	;# 
  4141  0290                     	;# 
  4142  0291                     	;# 
  4143  0292                     	;# 
  4144  0292                     	;# 
  4145  0293                     	;# 
  4146  0293                     	;# 
  4147  0294                     	;# 
  4148  0295                     	;# 
  4149  0296                     	;# 
  4150  0296                     	;# 
  4151  0297                     	;# 
  4152  0298                     	;# 
  4153  0298                     	;# 
  4154  0299                     	;# 
  4155  0299                     	;# 
  4156  029A                     	;# 
  4157  029B                     	;# 
  4158  029C                     	;# 
  4159  029C                     	;# 
  4160  029D                     	;# 
  4161  030C                     	;# 
  4162  030C                     	;# 
  4163  030D                     	;# 
  4164  030E                     	;# 
  4165  030F                     	;# 
  4166  0310                     	;# 
  4167  0310                     	;# 
  4168  0311                     	;# 
  4169  0312                     	;# 
  4170  0313                     	;# 
  4171  0314                     	;# 
  4172  0314                     	;# 
  4173  0315                     	;# 
  4174  0316                     	;# 
  4175  0317                     	;# 
  4176  0318                     	;# 
  4177  0318                     	;# 
  4178  0319                     	;# 
  4179  031A                     	;# 
  4180  031B                     	;# 
  4181  031C                     	;# 
  4182  031C                     	;# 
  4183  031D                     	;# 
  4184  031E                     	;# 
  4185  031F                     	;# 
  4186  038C                     	;# 
  4187  038C                     	;# 
  4188  038D                     	;# 
  4189  038E                     	;# 
  4190  0390                     	;# 
  4191  0390                     	;# 
  4192  0391                     	;# 
  4193  0392                     	;# 
  4194  040C                     	;# 
  4195  040D                     	;# 
  4196  040E                     	;# 
  4197  040F                     	;# 
  4198  0410                     	;# 
  4199  0411                     	;# 
  4200  0416                     	;# 
  4201  0416                     	;# 
  4202  0417                     	;# 
  4203  0418                     	;# 
  4204  0418                     	;# 
  4205  0419                     	;# 
  4206  041A                     	;# 
  4207  041A                     	;# 
  4208  041B                     	;# 
  4209  041C                     	;# 
  4210  041C                     	;# 
  4211  041D                     	;# 
  4212  041E                     	;# 
  4213  041F                     	;# 
  4214  048C                     	;# 
  4215  048C                     	;# 
  4216  048D                     	;# 
  4217  048E                     	;# 
  4218  048F                     	;# 
  4219  048F                     	;# 
  4220  0490                     	;# 
  4221  0491                     	;# 
  4222  0492                     	;# 
  4223  0492                     	;# 
  4224  0493                     	;# 
  4225  0494                     	;# 
  4226  0495                     	;# 
  4227  0495                     	;# 
  4228  0496                     	;# 
  4229  0497                     	;# 
  4230  0498                     	;# 
  4231  0499                     	;# 
  4232  049A                     	;# 
  4233  049B                     	;# 
  4234  049C                     	;# 
  4235  049D                     	;# 
  4236  050C                     	;# 
  4237  050C                     	;# 
  4238  050D                     	;# 
  4239  050E                     	;# 
  4240  050F                     	;# 
  4241  050F                     	;# 
  4242  0510                     	;# 
  4243  0511                     	;# 
  4244  0512                     	;# 
  4245  0512                     	;# 
  4246  0513                     	;# 
  4247  0514                     	;# 
  4248  0515                     	;# 
  4249  0515                     	;# 
  4250  0516                     	;# 
  4251  0517                     	;# 
  4252  0518                     	;# 
  4253  0519                     	;# 
  4254  051A                     	;# 
  4255  051B                     	;# 
  4256  051C                     	;# 
  4257  051D                     	;# 
  4258  058C                     	;# 
  4259  058C                     	;# 
  4260  058D                     	;# 
  4261  058E                     	;# 
  4262  058F                     	;# 
  4263  058F                     	;# 
  4264  0590                     	;# 
  4265  0591                     	;# 
  4266  0592                     	;# 
  4267  0593                     	;# 
  4268  060C                     	;# 
  4269  060D                     	;# 
  4270  060E                     	;# 
  4271  060F                     	;# 
  4272  0610                     	;# 
  4273  0611                     	;# 
  4274  0612                     	;# 
  4275  0613                     	;# 
  4276  0614                     	;# 
  4277  0616                     	;# 
  4278  0617                     	;# 
  4279  0618                     	;# 
  4280  0619                     	;# 
  4281  061A                     	;# 
  4282  061B                     	;# 
  4283  061C                     	;# 
  4284  061D                     	;# 
  4285  061E                     	;# 
  4286  068C                     	;# 
  4287  068D                     	;# 
  4288  068E                     	;# 
  4289  068F                     	;# 
  4290  0690                     	;# 
  4291  0691                     	;# 
  4292  0692                     	;# 
  4293  0693                     	;# 
  4294  0694                     	;# 
  4295  070C                     	;# 
  4296  070D                     	;# 
  4297  070E                     	;# 
  4298  070F                     	;# 
  4299  0710                     	;# 
  4300  0711                     	;# 
  4301  0712                     	;# 
  4302  0713                     	;# 
  4303  0714                     	;# 
  4304  0716                     	;# 
  4305  0717                     	;# 
  4306  0718                     	;# 
  4307  0719                     	;# 
  4308  071A                     	;# 
  4309  071B                     	;# 
  4310  071C                     	;# 
  4311  071D                     	;# 
  4312  071E                     	;# 
  4313  0796                     	;# 
  4314  0797                     	;# 
  4315  0798                     	;# 
  4316  0799                     	;# 
  4317  079A                     	;# 
  4318  079B                     	;# 
  4319  080C                     	;# 
  4320  080D                     	;# 
  4321  080E                     	;# 
  4322  080F                     	;# 
  4323  0810                     	;# 
  4324  0811                     	;# 
  4325  0812                     	;# 
  4326  0813                     	;# 
  4327  0814                     	;# 
  4328  081A                     	;# 
  4329  081B                     	;# 
  4330  081C                     	;# 
  4331  081D                     	;# 
  4332  081E                     	;# 
  4333  081F                     	;# 
  4334  088C                     	;# 
  4335  088D                     	;# 
  4336  088E                     	;# 
  4337  088F                     	;# 
  4338  0890                     	;# 
  4339  0891                     	;# 
  4340  0892                     	;# 
  4341  0893                     	;# 
  4342  0895                     	;# 
  4343  0896                     	;# 
  4344  0897                     	;# 
  4345  0898                     	;# 
  4346  0899                     	;# 
  4347  089A                     	;# 
  4348  089B                     	;# 
  4349  090C                     	;# 
  4350  090E                     	;# 
  4351  090F                     	;# 
  4352  091F                     	;# 
  4353  091F                     	;# 
  4354  098F                     	;# 
  4355  098F                     	;# 
  4356  0990                     	;# 
  4357  0991                     	;# 
  4358  0992                     	;# 
  4359  0993                     	;# 
  4360  0994                     	;# 
  4361  0995                     	;# 
  4362  0996                     	;# 
  4363  0997                     	;# 
  4364  0E0F                     	;# 
  4365  0E10                     	;# 
  4366  0E11                     	;# 
  4367  0E12                     	;# 
  4368  0E13                     	;# 
  4369  0E14                     	;# 
  4370  0E15                     	;# 
  4371  0E16                     	;# 
  4372  0E17                     	;# 
  4373  0E18                     	;# 
  4374  0E19                     	;# 
  4375  0E1A                     	;# 
  4376  0E1B                     	;# 
  4377  0E1C                     	;# 
  4378  0E1D                     	;# 
  4379  0E1E                     	;# 
  4380  0E1F                     	;# 
  4381  0E20                     	;# 
  4382  0E21                     	;# 
  4383  0E22                     	;# 
  4384  0E23                     	;# 
  4385  0E24                     	;# 
  4386  0E25                     	;# 
  4387  0E26                     	;# 
  4388  0E27                     	;# 
  4389  0E28                     	;# 
  4390  0E29                     	;# 
  4391  0E2A                     	;# 
  4392  0E2B                     	;# 
  4393  0E2C                     	;# 
  4394  0E2D                     	;# 
  4395  0E2E                     	;# 
  4396  0E2F                     	;# 
  4397  0E30                     	;# 
  4398  0E31                     	;# 
  4399  0E32                     	;# 
  4400  0E33                     	;# 
  4401  0E34                     	;# 
  4402  0E35                     	;# 
  4403  0E36                     	;# 
  4404  0E37                     	;# 
  4405  0E8F                     	;# 
  4406  0E90                     	;# 
  4407  0E91                     	;# 
  4408  0E92                     	;# 
  4409  0E93                     	;# 
  4410  0E94                     	;# 
  4411  0E95                     	;# 
  4412  0E96                     	;# 
  4413  0E97                     	;# 
  4414  0E9C                     	;# 
  4415  0E9D                     	;# 
  4416  0E9E                     	;# 
  4417  0EA1                     	;# 
  4418  0EA2                     	;# 
  4419  0EA3                     	;# 
  4420  0EA4                     	;# 
  4421  0EA5                     	;# 
  4422  0EA9                     	;# 
  4423  0EAA                     	;# 
  4424  0EAB                     	;# 
  4425  0EAC                     	;# 
  4426  0EB1                     	;# 
  4427  0EB2                     	;# 
  4428  0EB3                     	;# 
  4429  0EB8                     	;# 
  4430  0EB9                     	;# 
  4431  0EBA                     	;# 
  4432  0EBB                     	;# 
  4433  0EBC                     	;# 
  4434  0EBD                     	;# 
  4435  0EBE                     	;# 
  4436  0EC3                     	;# 
  4437  0EC5                     	;# 
  4438  0EC6                     	;# 
  4439  0EC7                     	;# 
  4440  0EC8                     	;# 
  4441  0EC9                     	;# 
  4442  0ECA                     	;# 
  4443  0ECB                     	;# 
  4444  0ECC                     	;# 
  4445  0F10                     	;# 
  4446  0F11                     	;# 
  4447  0F12                     	;# 
  4448  0F13                     	;# 
  4449  0F14                     	;# 
  4450  0F15                     	;# 
  4451  0F16                     	;# 
  4452  0F17                     	;# 
  4453  0F18                     	;# 
  4454  0F19                     	;# 
  4455  0F1A                     	;# 
  4456  0F1B                     	;# 
  4457  0F1C                     	;# 
  4458  0F1D                     	;# 
  4459  0F1E                     	;# 
  4460  0F1F                     	;# 
  4461  0F20                     	;# 
  4462  0F21                     	;# 
  4463  0F22                     	;# 
  4464  0F23                     	;# 
  4465  0F24                     	;# 
  4466  0F25                     	;# 
  4467  0F26                     	;# 
  4468  0F27                     	;# 
  4469  0F28                     	;# 
  4470  0F29                     	;# 
  4471  0F2A                     	;# 
  4472  0F2B                     	;# 
  4473  0F2C                     	;# 
  4474  0F2D                     	;# 
  4475  0F2E                     	;# 
  4476  0F2F                     	;# 
  4477  0F30                     	;# 
  4478  0F31                     	;# 
  4479  0F32                     	;# 
  4480  0F38                     	;# 
  4481  0F39                     	;# 
  4482  0F3A                     	;# 
  4483  0F3B                     	;# 
  4484  0F3C                     	;# 
  4485  0F3D                     	;# 
  4486  0F3E                     	;# 
  4487  0F3F                     	;# 
  4488  0F40                     	;# 
  4489  0F41                     	;# 
  4490  0F43                     	;# 
  4491  0F44                     	;# 
  4492  0F45                     	;# 
  4493  0F46                     	;# 
  4494  0F47                     	;# 
  4495  0F48                     	;# 
  4496  0F49                     	;# 
  4497  0F4A                     	;# 
  4498  0F4B                     	;# 
  4499  0F4C                     	;# 
  4500  0F4E                     	;# 
  4501  0F4F                     	;# 
  4502  0F50                     	;# 
  4503  0F51                     	;# 
  4504  0F52                     	;# 
  4505  0F53                     	;# 
  4506  0F54                     	;# 
  4507  0F55                     	;# 
  4508  0F56                     	;# 
  4509  0F57                     	;# 
  4510  0F59                     	;# 
  4511  0F5A                     	;# 
  4512  0F5B                     	;# 
  4513  0F5C                     	;# 
  4514  0F5D                     	;# 
  4515  0F61                     	;# 
  4516  0F62                     	;# 
  4517  0F64                     	;# 
  4518  0F65                     	;# 
  4519  0F66                     	;# 
  4520  0F67                     	;# 
  4521  0F68                     	;# 
  4522  0F69                     	;# 
  4523  0F6A                     	;# 
  4524  0F6B                     	;# 
  4525  0F6C                     	;# 
  4526  0F6D                     	;# 
  4527  0FE4                     	;# 
  4528  0FE5                     	;# 
  4529  0FE6                     	;# 
  4530  0FE7                     	;# 
  4531  0FE8                     	;# 
  4532  0FE9                     	;# 
  4533  0FEA                     	;# 
  4534  0FEB                     	;# 
  4535  0FED                     	;# 
  4536  0FEE                     	;# 
  4537  0FEF                     	;# 
  4538  0000                     	;# 
  4539  0001                     	;# 
  4540  0002                     	;# 
  4541  0003                     	;# 
  4542  0004                     	;# 
  4543  0005                     	;# 
  4544  0006                     	;# 
  4545  0007                     	;# 
  4546  0008                     	;# 
  4547  0009                     	;# 
  4548  000A                     	;# 
  4549  000B                     	;# 
  4550  000C                     	;# 
  4551  000D                     	;# 
  4552  000E                     	;# 
  4553  000F                     	;# 
  4554  0010                     	;# 
  4555  0011                     	;# 
  4556  0012                     	;# 
  4557  0013                     	;# 
  4558  0014                     	;# 
  4559  0015                     	;# 
  4560  0016                     	;# 
  4561  0017                     	;# 
  4562  0018                     	;# 
  4563  0019                     	;# 
  4564  001A                     	;# 
  4565  001C                     	;# 
  4566  001C                     	;# 
  4567  001D                     	;# 
  4568  001D                     	;# 
  4569  001E                     	;# 
  4570  001F                     	;# 
  4571  008C                     	;# 
  4572  008C                     	;# 
  4573  008D                     	;# 
  4574  008E                     	;# 
  4575  008E                     	;# 
  4576  008F                     	;# 
  4577  0090                     	;# 
  4578  0090                     	;# 
  4579  0091                     	;# 
  4580  0093                     	;# 
  4581  0094                     	;# 
  4582  0095                     	;# 
  4583  0096                     	;# 
  4584  0097                     	;# 
  4585  0098                     	;# 
  4586  0099                     	;# 
  4587  009A                     	;# 
  4588  009B                     	;# 
  4589  009C                     	;# 
  4590  009D                     	;# 
  4591  009E                     	;# 
  4592  010C                     	;# 
  4593  010D                     	;# 
  4594  010E                     	;# 
  4595  010E                     	;# 
  4596  010F                     	;# 
  4597  0110                     	;# 
  4598  0110                     	;# 
  4599  0111                     	;# 
  4600  0112                     	;# 
  4601  0112                     	;# 
  4602  0113                     	;# 
  4603  0114                     	;# 
  4604  0114                     	;# 
  4605  0115                     	;# 
  4606  0116                     	;# 
  4607  0116                     	;# 
  4608  0117                     	;# 
  4609  0119                     	;# 
  4610  0119                     	;# 
  4611  0119                     	;# 
  4612  011A                     	;# 
  4613  011A                     	;# 
  4614  011A                     	;# 
  4615  011B                     	;# 
  4616  011B                     	;# 
  4617  011B                     	;# 
  4618  011B                     	;# 
  4619  011B                     	;# 
  4620  011C                     	;# 
  4621  011C                     	;# 
  4622  011C                     	;# 
  4623  011D                     	;# 
  4624  011D                     	;# 
  4625  011D                     	;# 
  4626  011E                     	;# 
  4627  011E                     	;# 
  4628  011E                     	;# 
  4629  011F                     	;# 
  4630  011F                     	;# 
  4631  011F                     	;# 
  4632  011F                     	;# 
  4633  011F                     	;# 
  4634  018C                     	;# 
  4635  018D                     	;# 
  4636  018E                     	;# 
  4637  018F                     	;# 
  4638  0190                     	;# 
  4639  0191                     	;# 
  4640  0192                     	;# 
  4641  0196                     	;# 
  4642  0197                     	;# 
  4643  0198                     	;# 
  4644  0199                     	;# 
  4645  019A                     	;# 
  4646  019B                     	;# 
  4647  019C                     	;# 
  4648  020C                     	;# 
  4649  020C                     	;# 
  4650  020D                     	;# 
  4651  020E                     	;# 
  4652  020F                     	;# 
  4653  020F                     	;# 
  4654  0210                     	;# 
  4655  0210                     	;# 
  4656  0211                     	;# 
  4657  0211                     	;# 
  4658  0212                     	;# 
  4659  0212                     	;# 
  4660  0213                     	;# 
  4661  0214                     	;# 
  4662  0215                     	;# 
  4663  0215                     	;# 
  4664  0216                     	;# 
  4665  0216                     	;# 
  4666  0217                     	;# 
  4667  0217                     	;# 
  4668  0218                     	;# 
  4669  0218                     	;# 
  4670  0219                     	;# 
  4671  021A                     	;# 
  4672  021B                     	;# 
  4673  021B                     	;# 
  4674  021C                     	;# 
  4675  021C                     	;# 
  4676  021D                     	;# 
  4677  021D                     	;# 
  4678  021E                     	;# 
  4679  021F                     	;# 
  4680  028C                     	;# 
  4681  028C                     	;# 
  4682  028D                     	;# 
  4683  028D                     	;# 
  4684  028E                     	;# 
  4685  028F                     	;# 
  4686  0290                     	;# 
  4687  0290                     	;# 
  4688  0291                     	;# 
  4689  0292                     	;# 
  4690  0292                     	;# 
  4691  0293                     	;# 
  4692  0293                     	;# 
  4693  0294                     	;# 
  4694  0295                     	;# 
  4695  0296                     	;# 
  4696  0296                     	;# 
  4697  0297                     	;# 
  4698  0298                     	;# 
  4699  0298                     	;# 
  4700  0299                     	;# 
  4701  0299                     	;# 
  4702  029A                     	;# 
  4703  029B                     	;# 
  4704  029C                     	;# 
  4705  029C                     	;# 
  4706  029D                     	;# 
  4707  030C                     	;# 
  4708  030C                     	;# 
  4709  030D                     	;# 
  4710  030E                     	;# 
  4711  030F                     	;# 
  4712  0310                     	;# 
  4713  0310                     	;# 
  4714  0311                     	;# 
  4715  0312                     	;# 
  4716  0313                     	;# 
  4717  0314                     	;# 
  4718  0314                     	;# 
  4719  0315                     	;# 
  4720  0316                     	;# 
  4721  0317                     	;# 
  4722  0318                     	;# 
  4723  0318                     	;# 
  4724  0319                     	;# 
  4725  031A                     	;# 
  4726  031B                     	;# 
  4727  031C                     	;# 
  4728  031C                     	;# 
  4729  031D                     	;# 
  4730  031E                     	;# 
  4731  031F                     	;# 
  4732  038C                     	;# 
  4733  038C                     	;# 
  4734  038D                     	;# 
  4735  038E                     	;# 
  4736  0390                     	;# 
  4737  0390                     	;# 
  4738  0391                     	;# 
  4739  0392                     	;# 
  4740  040C                     	;# 
  4741  040D                     	;# 
  4742  040E                     	;# 
  4743  040F                     	;# 
  4744  0410                     	;# 
  4745  0411                     	;# 
  4746  0416                     	;# 
  4747  0416                     	;# 
  4748  0417                     	;# 
  4749  0418                     	;# 
  4750  0418                     	;# 
  4751  0419                     	;# 
  4752  041A                     	;# 
  4753  041A                     	;# 
  4754  041B                     	;# 
  4755  041C                     	;# 
  4756  041C                     	;# 
  4757  041D                     	;# 
  4758  041E                     	;# 
  4759  041F                     	;# 
  4760  048C                     	;# 
  4761  048C                     	;# 
  4762  048D                     	;# 
  4763  048E                     	;# 
  4764  048F                     	;# 
  4765  048F                     	;# 
  4766  0490                     	;# 
  4767  0491                     	;# 
  4768  0492                     	;# 
  4769  0492                     	;# 
  4770  0493                     	;# 
  4771  0494                     	;# 
  4772  0495                     	;# 
  4773  0495                     	;# 
  4774  0496                     	;# 
  4775  0497                     	;# 
  4776  0498                     	;# 
  4777  0499                     	;# 
  4778  049A                     	;# 
  4779  049B                     	;# 
  4780  049C                     	;# 
  4781  049D                     	;# 
  4782  050C                     	;# 
  4783  050C                     	;# 
  4784  050D                     	;# 
  4785  050E                     	;# 
  4786  050F                     	;# 
  4787  050F                     	;# 
  4788  0510                     	;# 
  4789  0511                     	;# 
  4790  0512                     	;# 
  4791  0512                     	;# 
  4792  0513                     	;# 
  4793  0514                     	;# 
  4794  0515                     	;# 
  4795  0515                     	;# 
  4796  0516                     	;# 
  4797  0517                     	;# 
  4798  0518                     	;# 
  4799  0519                     	;# 
  4800  051A                     	;# 
  4801  051B                     	;# 
  4802  051C                     	;# 
  4803  051D                     	;# 
  4804  058C                     	;# 
  4805  058C                     	;# 
  4806  058D                     	;# 
  4807  058E                     	;# 
  4808  058F                     	;# 
  4809  058F                     	;# 
  4810  0590                     	;# 
  4811  0591                     	;# 
  4812  0592                     	;# 
  4813  0593                     	;# 
  4814  060C                     	;# 
  4815  060D                     	;# 
  4816  060E                     	;# 
  4817  060F                     	;# 
  4818  0610                     	;# 
  4819  0611                     	;# 
  4820  0612                     	;# 
  4821  0613                     	;# 
  4822  0614                     	;# 
  4823  0616                     	;# 
  4824  0617                     	;# 
  4825  0618                     	;# 
  4826  0619                     	;# 
  4827  061A                     	;# 
  4828  061B                     	;# 
  4829  061C                     	;# 
  4830  061D                     	;# 
  4831  061E                     	;# 
  4832  068C                     	;# 
  4833  068D                     	;# 
  4834  068E                     	;# 
  4835  068F                     	;# 
  4836  0690                     	;# 
  4837  0691                     	;# 
  4838  0692                     	;# 
  4839  0693                     	;# 
  4840  0694                     	;# 
  4841  070C                     	;# 
  4842  070D                     	;# 
  4843  070E                     	;# 
  4844  070F                     	;# 
  4845  0710                     	;# 
  4846  0711                     	;# 
  4847  0712                     	;# 
  4848  0713                     	;# 
  4849  0714                     	;# 
  4850  0716                     	;# 
  4851  0717                     	;# 
  4852  0718                     	;# 
  4853  0719                     	;# 
  4854  071A                     	;# 
  4855  071B                     	;# 
  4856  071C                     	;# 
  4857  071D                     	;# 
  4858  071E                     	;# 
  4859  0796                     	;# 
  4860  0797                     	;# 
  4861  0798                     	;# 
  4862  0799                     	;# 
  4863  079A                     	;# 
  4864  079B                     	;# 
  4865  080C                     	;# 
  4866  080D                     	;# 
  4867  080E                     	;# 
  4868  080F                     	;# 
  4869  0810                     	;# 
  4870  0811                     	;# 
  4871  0812                     	;# 
  4872  0813                     	;# 
  4873  0814                     	;# 
  4874  081A                     	;# 
  4875  081B                     	;# 
  4876  081C                     	;# 
  4877  081D                     	;# 
  4878  081E                     	;# 
  4879  081F                     	;# 
  4880  088C                     	;# 
  4881  088D                     	;# 
  4882  088E                     	;# 
  4883  088F                     	;# 
  4884  0890                     	;# 
  4885  0891                     	;# 
  4886  0892                     	;# 
  4887  0893                     	;# 
  4888  0895                     	;# 
  4889  0896                     	;# 
  4890  0897                     	;# 
  4891  0898                     	;# 
  4892  0899                     	;# 
  4893  089A                     	;# 
  4894  089B                     	;# 
  4895  090C                     	;# 
  4896  090E                     	;# 
  4897  090F                     	;# 
  4898  091F                     	;# 
  4899  091F                     	;# 
  4900  098F                     	;# 
  4901  098F                     	;# 
  4902  0990                     	;# 
  4903  0991                     	;# 
  4904  0992                     	;# 
  4905  0993                     	;# 
  4906  0994                     	;# 
  4907  0995                     	;# 
  4908  0996                     	;# 
  4909  0997                     	;# 
  4910  0E0F                     	;# 
  4911  0E10                     	;# 
  4912  0E11                     	;# 
  4913  0E12                     	;# 
  4914  0E13                     	;# 
  4915  0E14                     	;# 
  4916  0E15                     	;# 
  4917  0E16                     	;# 
  4918  0E17                     	;# 
  4919  0E18                     	;# 
  4920  0E19                     	;# 
  4921  0E1A                     	;# 
  4922  0E1B                     	;# 
  4923  0E1C                     	;# 
  4924  0E1D                     	;# 
  4925  0E1E                     	;# 
  4926  0E1F                     	;# 
  4927  0E20                     	;# 
  4928  0E21                     	;# 
  4929  0E22                     	;# 
  4930  0E23                     	;# 
  4931  0E24                     	;# 
  4932  0E25                     	;# 
  4933  0E26                     	;# 
  4934  0E27                     	;# 
  4935  0E28                     	;# 
  4936  0E29                     	;# 
  4937  0E2A                     	;# 
  4938  0E2B                     	;# 
  4939  0E2C                     	;# 
  4940  0E2D                     	;# 
  4941  0E2E                     	;# 
  4942  0E2F                     	;# 
  4943  0E30                     	;# 
  4944  0E31                     	;# 
  4945  0E32                     	;# 
  4946  0E33                     	;# 
  4947  0E34                     	;# 
  4948  0E35                     	;# 
  4949  0E36                     	;# 
  4950  0E37                     	;# 
  4951  0E8F                     	;# 
  4952  0E90                     	;# 
  4953  0E91                     	;# 
  4954  0E92                     	;# 
  4955  0E93                     	;# 
  4956  0E94                     	;# 
  4957  0E95                     	;# 
  4958  0E96                     	;# 
  4959  0E97                     	;# 
  4960  0E9C                     	;# 
  4961  0E9D                     	;# 
  4962  0E9E                     	;# 
  4963  0EA1                     	;# 
  4964  0EA2                     	;# 
  4965  0EA3                     	;# 
  4966  0EA4                     	;# 
  4967  0EA5                     	;# 
  4968  0EA9                     	;# 
  4969  0EAA                     	;# 
  4970  0EAB                     	;# 
  4971  0EAC                     	;# 
  4972  0EB1                     	;# 
  4973  0EB2                     	;# 
  4974  0EB3                     	;# 
  4975  0EB8                     	;# 
  4976  0EB9                     	;# 
  4977  0EBA                     	;# 
  4978  0EBB                     	;# 
  4979  0EBC                     	;# 
  4980  0EBD                     	;# 
  4981  0EBE                     	;# 
  4982  0EC3                     	;# 
  4983  0EC5                     	;# 
  4984  0EC6                     	;# 
  4985  0EC7                     	;# 
  4986  0EC8                     	;# 
  4987  0EC9                     	;# 
  4988  0ECA                     	;# 
  4989  0ECB                     	;# 
  4990  0ECC                     	;# 
  4991  0F10                     	;# 
  4992  0F11                     	;# 
  4993  0F12                     	;# 
  4994  0F13                     	;# 
  4995  0F14                     	;# 
  4996  0F15                     	;# 
  4997  0F16                     	;# 
  4998  0F17                     	;# 
  4999  0F18                     	;# 
  5000  0F19                     	;# 
  5001  0F1A                     	;# 
  5002  0F1B                     	;# 
  5003  0F1C                     	;# 
  5004  0F1D                     	;# 
  5005  0F1E                     	;# 
  5006  0F1F                     	;# 
  5007  0F20                     	;# 
  5008  0F21                     	;# 
  5009  0F22                     	;# 
  5010  0F23                     	;# 
  5011  0F24                     	;# 
  5012  0F25                     	;# 
  5013  0F26                     	;# 
  5014  0F27                     	;# 
  5015  0F28                     	;# 
  5016  0F29                     	;# 
  5017  0F2A                     	;# 
  5018  0F2B                     	;# 
  5019  0F2C                     	;# 
  5020  0F2D                     	;# 
  5021  0F2E                     	;# 
  5022  0F2F                     	;# 
  5023  0F30                     	;# 
  5024  0F31                     	;# 
  5025  0F32                     	;# 
  5026  0F38                     	;# 
  5027  0F39                     	;# 
  5028  0F3A                     	;# 
  5029  0F3B                     	;# 
  5030  0F3C                     	;# 
  5031  0F3D                     	;# 
  5032  0F3E                     	;# 
  5033  0F3F                     	;# 
  5034  0F40                     	;# 
  5035  0F41                     	;# 
  5036  0F43                     	;# 
  5037  0F44                     	;# 
  5038  0F45                     	;# 
  5039  0F46                     	;# 
  5040  0F47                     	;# 
  5041  0F48                     	;# 
  5042  0F49                     	;# 
  5043  0F4A                     	;# 
  5044  0F4B                     	;# 
  5045  0F4C                     	;# 
  5046  0F4E                     	;# 
  5047  0F4F                     	;# 
  5048  0F50                     	;# 
  5049  0F51                     	;# 
  5050  0F52                     	;# 
  5051  0F53                     	;# 
  5052  0F54                     	;# 
  5053  0F55                     	;# 
  5054  0F56                     	;# 
  5055  0F57                     	;# 
  5056  0F59                     	;# 
  5057  0F5A                     	;# 
  5058  0F5B                     	;# 
  5059  0F5C                     	;# 
  5060  0F5D                     	;# 
  5061  0F61                     	;# 
  5062  0F62                     	;# 
  5063  0F64                     	;# 
  5064  0F65                     	;# 
  5065  0F66                     	;# 
  5066  0F67                     	;# 
  5067  0F68                     	;# 
  5068  0F69                     	;# 
  5069  0F6A                     	;# 
  5070  0F6B                     	;# 
  5071  0F6C                     	;# 
  5072  0F6D                     	;# 
  5073  0FE4                     	;# 
  5074  0FE5                     	;# 
  5075  0FE6                     	;# 
  5076  0FE7                     	;# 
  5077  0FE8                     	;# 
  5078  0FE9                     	;# 
  5079  0FEA                     	;# 
  5080  0FEB                     	;# 
  5081  0FED                     	;# 
  5082  0FEE                     	;# 
  5083  0FEF                     	;# 
  5084  0000                     	;# 
  5085  0001                     	;# 
  5086  0002                     	;# 
  5087  0003                     	;# 
  5088  0004                     	;# 
  5089  0005                     	;# 
  5090  0006                     	;# 
  5091  0007                     	;# 
  5092  0008                     	;# 
  5093  0009                     	;# 
  5094  000A                     	;# 
  5095  000B                     	;# 
  5096  000C                     	;# 
  5097  000D                     	;# 
  5098  000E                     	;# 
  5099  000F                     	;# 
  5100  0010                     	;# 
  5101  0011                     	;# 
  5102  0012                     	;# 
  5103  0013                     	;# 
  5104  0014                     	;# 
  5105  0015                     	;# 
  5106  0016                     	;# 
  5107  0017                     	;# 
  5108  0018                     	;# 
  5109  0019                     	;# 
  5110  001A                     	;# 
  5111  001C                     	;# 
  5112  001C                     	;# 
  5113  001D                     	;# 
  5114  001D                     	;# 
  5115  001E                     	;# 
  5116  001F                     	;# 
  5117  008C                     	;# 
  5118  008C                     	;# 
  5119  008D                     	;# 
  5120  008E                     	;# 
  5121  008E                     	;# 
  5122  008F                     	;# 
  5123  0090                     	;# 
  5124  0090                     	;# 
  5125  0091                     	;# 
  5126  0093                     	;# 
  5127  0094                     	;# 
  5128  0095                     	;# 
  5129  0096                     	;# 
  5130  0097                     	;# 
  5131  0098                     	;# 
  5132  0099                     	;# 
  5133  009A                     	;# 
  5134  009B                     	;# 
  5135  009C                     	;# 
  5136  009D                     	;# 
  5137  009E                     	;# 
  5138  010C                     	;# 
  5139  010D                     	;# 
  5140  010E                     	;# 
  5141  010E                     	;# 
  5142  010F                     	;# 
  5143  0110                     	;# 
  5144  0110                     	;# 
  5145  0111                     	;# 
  5146  0112                     	;# 
  5147  0112                     	;# 
  5148  0113                     	;# 
  5149  0114                     	;# 
  5150  0114                     	;# 
  5151  0115                     	;# 
  5152  0116                     	;# 
  5153  0116                     	;# 
  5154  0117                     	;# 
  5155  0119                     	;# 
  5156  0119                     	;# 
  5157  0119                     	;# 
  5158  011A                     	;# 
  5159  011A                     	;# 
  5160  011A                     	;# 
  5161  011B                     	;# 
  5162  011B                     	;# 
  5163  011B                     	;# 
  5164  011B                     	;# 
  5165  011B                     	;# 
  5166  011C                     	;# 
  5167  011C                     	;# 
  5168  011C                     	;# 
  5169  011D                     	;# 
  5170  011D                     	;# 
  5171  011D                     	;# 
  5172  011E                     	;# 
  5173  011E                     	;# 
  5174  011E                     	;# 
  5175  011F                     	;# 
  5176  011F                     	;# 
  5177  011F                     	;# 
  5178  011F                     	;# 
  5179  011F                     	;# 
  5180  018C                     	;# 
  5181  018D                     	;# 
  5182  018E                     	;# 
  5183  018F                     	;# 
  5184  0190                     	;# 
  5185  0191                     	;# 
  5186  0192                     	;# 
  5187  0196                     	;# 
  5188  0197                     	;# 
  5189  0198                     	;# 
  5190  0199                     	;# 
  5191  019A                     	;# 
  5192  019B                     	;# 
  5193  019C                     	;# 
  5194  020C                     	;# 
  5195  020C                     	;# 
  5196  020D                     	;# 
  5197  020E                     	;# 
  5198  020F                     	;# 
  5199  020F                     	;# 
  5200  0210                     	;# 
  5201  0210                     	;# 
  5202  0211                     	;# 
  5203  0211                     	;# 
  5204  0212                     	;# 
  5205  0212                     	;# 
  5206  0213                     	;# 
  5207  0214                     	;# 
  5208  0215                     	;# 
  5209  0215                     	;# 
  5210  0216                     	;# 
  5211  0216                     	;# 
  5212  0217                     	;# 
  5213  0217                     	;# 
  5214  0218                     	;# 
  5215  0218                     	;# 
  5216  0219                     	;# 
  5217  021A                     	;# 
  5218  021B                     	;# 
  5219  021B                     	;# 
  5220  021C                     	;# 
  5221  021C                     	;# 
  5222  021D                     	;# 
  5223  021D                     	;# 
  5224  021E                     	;# 
  5225  021F                     	;# 
  5226  028C                     	;# 
  5227  028C                     	;# 
  5228  028D                     	;# 
  5229  028D                     	;# 
  5230  028E                     	;# 
  5231  028F                     	;# 
  5232  0290                     	;# 
  5233  0290                     	;# 
  5234  0291                     	;# 
  5235  0292                     	;# 
  5236  0292                     	;# 
  5237  0293                     	;# 
  5238  0293                     	;# 
  5239  0294                     	;# 
  5240  0295                     	;# 
  5241  0296                     	;# 
  5242  0296                     	;# 
  5243  0297                     	;# 
  5244  0298                     	;# 
  5245  0298                     	;# 
  5246  0299                     	;# 
  5247  0299                     	;# 
  5248  029A                     	;# 
  5249  029B                     	;# 
  5250  029C                     	;# 
  5251  029C                     	;# 
  5252  029D                     	;# 
  5253  030C                     	;# 
  5254  030C                     	;# 
  5255  030D                     	;# 
  5256  030E                     	;# 
  5257  030F                     	;# 
  5258  0310                     	;# 
  5259  0310                     	;# 
  5260  0311                     	;# 
  5261  0312                     	;# 
  5262  0313                     	;# 
  5263  0314                     	;# 
  5264  0314                     	;# 
  5265  0315                     	;# 
  5266  0316                     	;# 
  5267  0317                     	;# 
  5268  0318                     	;# 
  5269  0318                     	;# 
  5270  0319                     	;# 
  5271  031A                     	;# 
  5272  031B                     	;# 
  5273  031C                     	;# 
  5274  031C                     	;# 
  5275  031D                     	;# 
  5276  031E                     	;# 
  5277  031F                     	;# 
  5278  038C                     	;# 
  5279  038C                     	;# 
  5280  038D                     	;# 
  5281  038E                     	;# 
  5282  0390                     	;# 
  5283  0390                     	;# 
  5284  0391                     	;# 
  5285  0392                     	;# 
  5286  040C                     	;# 
  5287  040D                     	;# 
  5288  040E                     	;# 
  5289  040F                     	;# 
  5290  0410                     	;# 
  5291  0411                     	;# 
  5292  0416                     	;# 
  5293  0416                     	;# 
  5294  0417                     	;# 
  5295  0418                     	;# 
  5296  0418                     	;# 
  5297  0419                     	;# 
  5298  041A                     	;# 
  5299  041A                     	;# 
  5300  041B                     	;# 
  5301  041C                     	;# 
  5302  041C                     	;# 
  5303  041D                     	;# 
  5304  041E                     	;# 
  5305  041F                     	;# 
  5306  048C                     	;# 
  5307  048C                     	;# 
  5308  048D                     	;# 
  5309  048E                     	;# 
  5310  048F                     	;# 
  5311  048F                     	;# 
  5312  0490                     	;# 
  5313  0491                     	;# 
  5314  0492                     	;# 
  5315  0492                     	;# 
  5316  0493                     	;# 
  5317  0494                     	;# 
  5318  0495                     	;# 
  5319  0495                     	;# 
  5320  0496                     	;# 
  5321  0497                     	;# 
  5322  0498                     	;# 
  5323  0499                     	;# 
  5324  049A                     	;# 
  5325  049B                     	;# 
  5326  049C                     	;# 
  5327  049D                     	;# 
  5328  050C                     	;# 
  5329  050C                     	;# 
  5330  050D                     	;# 
  5331  050E                     	;# 
  5332  050F                     	;# 
  5333  050F                     	;# 
  5334  0510                     	;# 
  5335  0511                     	;# 
  5336  0512                     	;# 
  5337  0512                     	;# 
  5338  0513                     	;# 
  5339  0514                     	;# 
  5340  0515                     	;# 
  5341  0515                     	;# 
  5342  0516                     	;# 
  5343  0517                     	;# 
  5344  0518                     	;# 
  5345  0519                     	;# 
  5346  051A                     	;# 
  5347  051B                     	;# 
  5348  051C                     	;# 
  5349  051D                     	;# 
  5350  058C                     	;# 
  5351  058C                     	;# 
  5352  058D                     	;# 
  5353  058E                     	;# 
  5354  058F                     	;# 
  5355  058F                     	;# 
  5356  0590                     	;# 
  5357  0591                     	;# 
  5358  0592                     	;# 
  5359  0593                     	;# 
  5360  060C                     	;# 
  5361  060D                     	;# 
  5362  060E                     	;# 
  5363  060F                     	;# 
  5364  0610                     	;# 
  5365  0611                     	;# 
  5366  0612                     	;# 
  5367  0613                     	;# 
  5368  0614                     	;# 
  5369  0616                     	;# 
  5370  0617                     	;# 
  5371  0618                     	;# 
  5372  0619                     	;# 
  5373  061A                     	;# 
  5374  061B                     	;# 
  5375  061C                     	;# 
  5376  061D                     	;# 
  5377  061E                     	;# 
  5378  068C                     	;# 
  5379  068D                     	;# 
  5380  068E                     	;# 
  5381  068F                     	;# 
  5382  0690                     	;# 
  5383  0691                     	;# 
  5384  0692                     	;# 
  5385  0693                     	;# 
  5386  0694                     	;# 
  5387  070C                     	;# 
  5388  070D                     	;# 
  5389  070E                     	;# 
  5390  070F                     	;# 
  5391  0710                     	;# 
  5392  0711                     	;# 
  5393  0712                     	;# 
  5394  0713                     	;# 
  5395  0714                     	;# 
  5396  0716                     	;# 
  5397  0717                     	;# 
  5398  0718                     	;# 
  5399  0719                     	;# 
  5400  071A                     	;# 
  5401  071B                     	;# 
  5402  071C                     	;# 
  5403  071D                     	;# 
  5404  071E                     	;# 
  5405  0796                     	;# 
  5406  0797                     	;# 
  5407  0798                     	;# 
  5408  0799                     	;# 
  5409  079A                     	;# 
  5410  079B                     	;# 
  5411  080C                     	;# 
  5412  080D                     	;# 
  5413  080E                     	;# 
  5414  080F                     	;# 
  5415  0810                     	;# 
  5416  0811                     	;# 
  5417  0812                     	;# 
  5418  0813                     	;# 
  5419  0814                     	;# 
  5420  081A                     	;# 
  5421  081B                     	;# 
  5422  081C                     	;# 
  5423  081D                     	;# 
  5424  081E                     	;# 
  5425  081F                     	;# 
  5426  088C                     	;# 
  5427  088D                     	;# 
  5428  088E                     	;# 
  5429  088F                     	;# 
  5430  0890                     	;# 
  5431  0891                     	;# 
  5432  0892                     	;# 
  5433  0893                     	;# 
  5434  0895                     	;# 
  5435  0896                     	;# 
  5436  0897                     	;# 
  5437  0898                     	;# 
  5438  0899                     	;# 
  5439  089A                     	;# 
  5440  089B                     	;# 
  5441  090C                     	;# 
  5442  090E                     	;# 
  5443  090F                     	;# 
  5444  091F                     	;# 
  5445  091F                     	;# 
  5446  098F                     	;# 
  5447  098F                     	;# 
  5448  0990                     	;# 
  5449  0991                     	;# 
  5450  0992                     	;# 
  5451  0993                     	;# 
  5452  0994                     	;# 
  5453  0995                     	;# 
  5454  0996                     	;# 
  5455  0997                     	;# 
  5456  0E0F                     	;# 
  5457  0E10                     	;# 
  5458  0E11                     	;# 
  5459  0E12                     	;# 
  5460  0E13                     	;# 
  5461  0E14                     	;# 
  5462  0E15                     	;# 
  5463  0E16                     	;# 
  5464  0E17                     	;# 
  5465  0E18                     	;# 
  5466  0E19                     	;# 
  5467  0E1A                     	;# 
  5468  0E1B                     	;# 
  5469  0E1C                     	;# 
  5470  0E1D                     	;# 
  5471  0E1E                     	;# 
  5472  0E1F                     	;# 
  5473  0E20                     	;# 
  5474  0E21                     	;# 
  5475  0E22                     	;# 
  5476  0E23                     	;# 
  5477  0E24                     	;# 
  5478  0E25                     	;# 
  5479  0E26                     	;# 
  5480  0E27                     	;# 
  5481  0E28                     	;# 
  5482  0E29                     	;# 
  5483  0E2A                     	;# 
  5484  0E2B                     	;# 
  5485  0E2C                     	;# 
  5486  0E2D                     	;# 
  5487  0E2E                     	;# 
  5488  0E2F                     	;# 
  5489  0E30                     	;# 
  5490  0E31                     	;# 
  5491  0E32                     	;# 
  5492  0E33                     	;# 
  5493  0E34                     	;# 
  5494  0E35                     	;# 
  5495  0E36                     	;# 
  5496  0E37                     	;# 
  5497  0E8F                     	;# 
  5498  0E90                     	;# 
  5499  0E91                     	;# 
  5500  0E92                     	;# 
  5501  0E93                     	;# 
  5502  0E94                     	;# 
  5503  0E95                     	;# 
  5504  0E96                     	;# 
  5505  0E97                     	;# 
  5506  0E9C                     	;# 
  5507  0E9D                     	;# 
  5508  0E9E                     	;# 
  5509  0EA1                     	;# 
  5510  0EA2                     	;# 
  5511  0EA3                     	;# 
  5512  0EA4                     	;# 
  5513  0EA5                     	;# 
  5514  0EA9                     	;# 
  5515  0EAA                     	;# 
  5516  0EAB                     	;# 
  5517  0EAC                     	;# 
  5518  0EB1                     	;# 
  5519  0EB2                     	;# 
  5520  0EB3                     	;# 
  5521  0EB8                     	;# 
  5522  0EB9                     	;# 
  5523  0EBA                     	;# 
  5524  0EBB                     	;# 
  5525  0EBC                     	;# 
  5526  0EBD                     	;# 
  5527  0EBE                     	;# 
  5528  0EC3                     	;# 
  5529  0EC5                     	;# 
  5530  0EC6                     	;# 
  5531  0EC7                     	;# 
  5532  0EC8                     	;# 
  5533  0EC9                     	;# 
  5534  0ECA                     	;# 
  5535  0ECB                     	;# 
  5536  0ECC                     	;# 
  5537  0F10                     	;# 
  5538  0F11                     	;# 
  5539  0F12                     	;# 
  5540  0F13                     	;# 
  5541  0F14                     	;# 
  5542  0F15                     	;# 
  5543  0F16                     	;# 
  5544  0F17                     	;# 
  5545  0F18                     	;# 
  5546  0F19                     	;# 
  5547  0F1A                     	;# 
  5548  0F1B                     	;# 
  5549  0F1C                     	;# 
  5550  0F1D                     	;# 
  5551  0F1E                     	;# 
  5552  0F1F                     	;# 
  5553  0F20                     	;# 
  5554  0F21                     	;# 
  5555  0F22                     	;# 
  5556  0F23                     	;# 
  5557  0F24                     	;# 
  5558  0F25                     	;# 
  5559  0F26                     	;# 
  5560  0F27                     	;# 
  5561  0F28                     	;# 
  5562  0F29                     	;# 
  5563  0F2A                     	;# 
  5564  0F2B                     	;# 
  5565  0F2C                     	;# 
  5566  0F2D                     	;# 
  5567  0F2E                     	;# 
  5568  0F2F                     	;# 
  5569  0F30                     	;# 
  5570  0F31                     	;# 
  5571  0F32                     	;# 
  5572  0F38                     	;# 
  5573  0F39                     	;# 
  5574  0F3A                     	;# 
  5575  0F3B                     	;# 
  5576  0F3C                     	;# 
  5577  0F3D                     	;# 
  5578  0F3E                     	;# 
  5579  0F3F                     	;# 
  5580  0F40                     	;# 
  5581  0F41                     	;# 
  5582  0F43                     	;# 
  5583  0F44                     	;# 
  5584  0F45                     	;# 
  5585  0F46                     	;# 
  5586  0F47                     	;# 
  5587  0F48                     	;# 
  5588  0F49                     	;# 
  5589  0F4A                     	;# 
  5590  0F4B                     	;# 
  5591  0F4C                     	;# 
  5592  0F4E                     	;# 
  5593  0F4F                     	;# 
  5594  0F50                     	;# 
  5595  0F51                     	;# 
  5596  0F52                     	;# 
  5597  0F53                     	;# 
  5598  0F54                     	;# 
  5599  0F55                     	;# 
  5600  0F56                     	;# 
  5601  0F57                     	;# 
  5602  0F59                     	;# 
  5603  0F5A                     	;# 
  5604  0F5B                     	;# 
  5605  0F5C                     	;# 
  5606  0F5D                     	;# 
  5607  0F61                     	;# 
  5608  0F62                     	;# 
  5609  0F64                     	;# 
  5610  0F65                     	;# 
  5611  0F66                     	;# 
  5612  0F67                     	;# 
  5613  0F68                     	;# 
  5614  0F69                     	;# 
  5615  0F6A                     	;# 
  5616  0F6B                     	;# 
  5617  0F6C                     	;# 
  5618  0F6D                     	;# 
  5619  0FE4                     	;# 
  5620  0FE5                     	;# 
  5621  0FE6                     	;# 
  5622  0FE7                     	;# 
  5623  0FE8                     	;# 
  5624  0FE9                     	;# 
  5625  0FEA                     	;# 
  5626  0FEB                     	;# 
  5627  0FED                     	;# 
  5628  0FEE                     	;# 
  5629  0FEF                     	;# 
  5630  0000                     	;# 
  5631  0001                     	;# 
  5632  0002                     	;# 
  5633  0003                     	;# 
  5634  0004                     	;# 
  5635  0005                     	;# 
  5636  0006                     	;# 
  5637  0007                     	;# 
  5638  0008                     	;# 
  5639  0009                     	;# 
  5640  000A                     	;# 
  5641  000B                     	;# 
  5642  000C                     	;# 
  5643  000D                     	;# 
  5644  000E                     	;# 
  5645  000F                     	;# 
  5646  0010                     	;# 
  5647  0011                     	;# 
  5648  0012                     	;# 
  5649  0013                     	;# 
  5650  0014                     	;# 
  5651  0015                     	;# 
  5652  0016                     	;# 
  5653  0017                     	;# 
  5654  0018                     	;# 
  5655  0019                     	;# 
  5656  001A                     	;# 
  5657  001C                     	;# 
  5658  001C                     	;# 
  5659  001D                     	;# 
  5660  001D                     	;# 
  5661  001E                     	;# 
  5662  001F                     	;# 
  5663  008C                     	;# 
  5664  008C                     	;# 
  5665  008D                     	;# 
  5666  008E                     	;# 
  5667  008E                     	;# 
  5668  008F                     	;# 
  5669  0090                     	;# 
  5670  0090                     	;# 
  5671  0091                     	;# 
  5672  0093                     	;# 
  5673  0094                     	;# 
  5674  0095                     	;# 
  5675  0096                     	;# 
  5676  0097                     	;# 
  5677  0098                     	;# 
  5678  0099                     	;# 
  5679  009A                     	;# 
  5680  009B                     	;# 
  5681  009C                     	;# 
  5682  009D                     	;# 
  5683  009E                     	;# 
  5684  010C                     	;# 
  5685  010D                     	;# 
  5686  010E                     	;# 
  5687  010E                     	;# 
  5688  010F                     	;# 
  5689  0110                     	;# 
  5690  0110                     	;# 
  5691  0111                     	;# 
  5692  0112                     	;# 
  5693  0112                     	;# 
  5694  0113                     	;# 
  5695  0114                     	;# 
  5696  0114                     	;# 
  5697  0115                     	;# 
  5698  0116                     	;# 
  5699  0116                     	;# 
  5700  0117                     	;# 
  5701  0119                     	;# 
  5702  0119                     	;# 
  5703  0119                     	;# 
  5704  011A                     	;# 
  5705  011A                     	;# 
  5706  011A                     	;# 
  5707  011B                     	;# 
  5708  011B                     	;# 
  5709  011B                     	;# 
  5710  011B                     	;# 
  5711  011B                     	;# 
  5712  011C                     	;# 
  5713  011C                     	;# 
  5714  011C                     	;# 
  5715  011D                     	;# 
  5716  011D                     	;# 
  5717  011D                     	;# 
  5718  011E                     	;# 
  5719  011E                     	;# 
  5720  011E                     	;# 
  5721  011F                     	;# 
  5722  011F                     	;# 
  5723  011F                     	;# 
  5724  011F                     	;# 
  5725  011F                     	;# 
  5726  018C                     	;# 
  5727  018D                     	;# 
  5728  018E                     	;# 
  5729  018F                     	;# 
  5730  0190                     	;# 
  5731  0191                     	;# 
  5732  0192                     	;# 
  5733  0196                     	;# 
  5734  0197                     	;# 
  5735  0198                     	;# 
  5736  0199                     	;# 
  5737  019A                     	;# 
  5738  019B                     	;# 
  5739  019C                     	;# 
  5740  020C                     	;# 
  5741  020C                     	;# 
  5742  020D                     	;# 
  5743  020E                     	;# 
  5744  020F                     	;# 
  5745  020F                     	;# 
  5746  0210                     	;# 
  5747  0210                     	;# 
  5748  0211                     	;# 
  5749  0211                     	;# 
  5750  0212                     	;# 
  5751  0212                     	;# 
  5752  0213                     	;# 
  5753  0214                     	;# 
  5754  0215                     	;# 
  5755  0215                     	;# 
  5756  0216                     	;# 
  5757  0216                     	;# 
  5758  0217                     	;# 
  5759  0217                     	;# 
  5760  0218                     	;# 
  5761  0218                     	;# 
  5762  0219                     	;# 
  5763  021A                     	;# 
  5764  021B                     	;# 
  5765  021B                     	;# 
  5766  021C                     	;# 
  5767  021C                     	;# 
  5768  021D                     	;# 
  5769  021D                     	;# 
  5770  021E                     	;# 
  5771  021F                     	;# 
  5772  028C                     	;# 
  5773  028C                     	;# 
  5774  028D                     	;# 
  5775  028D                     	;# 
  5776  028E                     	;# 
  5777  028F                     	;# 
  5778  0290                     	;# 
  5779  0290                     	;# 
  5780  0291                     	;# 
  5781  0292                     	;# 
  5782  0292                     	;# 
  5783  0293                     	;# 
  5784  0293                     	;# 
  5785  0294                     	;# 
  5786  0295                     	;# 
  5787  0296                     	;# 
  5788  0296                     	;# 
  5789  0297                     	;# 
  5790  0298                     	;# 
  5791  0298                     	;# 
  5792  0299                     	;# 
  5793  0299                     	;# 
  5794  029A                     	;# 
  5795  029B                     	;# 
  5796  029C                     	;# 
  5797  029C                     	;# 
  5798  029D                     	;# 
  5799  030C                     	;# 
  5800  030C                     	;# 
  5801  030D                     	;# 
  5802  030E                     	;# 
  5803  030F                     	;# 
  5804  0310                     	;# 
  5805  0310                     	;# 
  5806  0311                     	;# 
  5807  0312                     	;# 
  5808  0313                     	;# 
  5809  0314                     	;# 
  5810  0314                     	;# 
  5811  0315                     	;# 
  5812  0316                     	;# 
  5813  0317                     	;# 
  5814  0318                     	;# 
  5815  0318                     	;# 
  5816  0319                     	;# 
  5817  031A                     	;# 
  5818  031B                     	;# 
  5819  031C                     	;# 
  5820  031C                     	;# 
  5821  031D                     	;# 
  5822  031E                     	;# 
  5823  031F                     	;# 
  5824  038C                     	;# 
  5825  038C                     	;# 
  5826  038D                     	;# 
  5827  038E                     	;# 
  5828  0390                     	;# 
  5829  0390                     	;# 
  5830  0391                     	;# 
  5831  0392                     	;# 
  5832  040C                     	;# 
  5833  040D                     	;# 
  5834  040E                     	;# 
  5835  040F                     	;# 
  5836  0410                     	;# 
  5837  0411                     	;# 
  5838  0416                     	;# 
  5839  0416                     	;# 
  5840  0417                     	;# 
  5841  0418                     	;# 
  5842  0418                     	;# 
  5843  0419                     	;# 
  5844  041A                     	;# 
  5845  041A                     	;# 
  5846  041B                     	;# 
  5847  041C                     	;# 
  5848  041C                     	;# 
  5849  041D                     	;# 
  5850  041E                     	;# 
  5851  041F                     	;# 
  5852  048C                     	;# 
  5853  048C                     	;# 
  5854  048D                     	;# 
  5855  048E                     	;# 
  5856  048F                     	;# 
  5857  048F                     	;# 
  5858  0490                     	;# 
  5859  0491                     	;# 
  5860  0492                     	;# 
  5861  0492                     	;# 
  5862  0493                     	;# 
  5863  0494                     	;# 
  5864  0495                     	;# 
  5865  0495                     	;# 
  5866  0496                     	;# 
  5867  0497                     	;# 
  5868  0498                     	;# 
  5869  0499                     	;# 
  5870  049A                     	;# 
  5871  049B                     	;# 
  5872  049C                     	;# 
  5873  049D                     	;# 
  5874  050C                     	;# 
  5875  050C                     	;# 
  5876  050D                     	;# 
  5877  050E                     	;# 
  5878  050F                     	;# 
  5879  050F                     	;# 
  5880  0510                     	;# 
  5881  0511                     	;# 
  5882  0512                     	;# 
  5883  0512                     	;# 
  5884  0513                     	;# 
  5885  0514                     	;# 
  5886  0515                     	;# 
  5887  0515                     	;# 
  5888  0516                     	;# 
  5889  0517                     	;# 
  5890  0518                     	;# 
  5891  0519                     	;# 
  5892  051A                     	;# 
  5893  051B                     	;# 
  5894  051C                     	;# 
  5895  051D                     	;# 
  5896  058C                     	;# 
  5897  058C                     	;# 
  5898  058D                     	;# 
  5899  058E                     	;# 
  5900  058F                     	;# 
  5901  058F                     	;# 
  5902  0590                     	;# 
  5903  0591                     	;# 
  5904  0592                     	;# 
  5905  0593                     	;# 
  5906  060C                     	;# 
  5907  060D                     	;# 
  5908  060E                     	;# 
  5909  060F                     	;# 
  5910  0610                     	;# 
  5911  0611                     	;# 
  5912  0612                     	;# 
  5913  0613                     	;# 
  5914  0614                     	;# 
  5915  0616                     	;# 
  5916  0617                     	;# 
  5917  0618                     	;# 
  5918  0619                     	;# 
  5919  061A                     	;# 
  5920  061B                     	;# 
  5921  061C                     	;# 
  5922  061D                     	;# 
  5923  061E                     	;# 
  5924  068C                     	;# 
  5925  068D                     	;# 
  5926  068E                     	;# 
  5927  068F                     	;# 
  5928  0690                     	;# 
  5929  0691                     	;# 
  5930  0692                     	;# 
  5931  0693                     	;# 
  5932  0694                     	;# 
  5933  070C                     	;# 
  5934  070D                     	;# 
  5935  070E                     	;# 
  5936  070F                     	;# 
  5937  0710                     	;# 
  5938  0711                     	;# 
  5939  0712                     	;# 
  5940  0713                     	;# 
  5941  0714                     	;# 
  5942  0716                     	;# 
  5943  0717                     	;# 
  5944  0718                     	;# 
  5945  0719                     	;# 
  5946  071A                     	;# 
  5947  071B                     	;# 
  5948  071C                     	;# 
  5949  071D                     	;# 
  5950  071E                     	;# 
  5951  0796                     	;# 
  5952  0797                     	;# 
  5953  0798                     	;# 
  5954  0799                     	;# 
  5955  079A                     	;# 
  5956  079B                     	;# 
  5957  080C                     	;# 
  5958  080D                     	;# 
  5959  080E                     	;# 
  5960  080F                     	;# 
  5961  0810                     	;# 
  5962  0811                     	;# 
  5963  0812                     	;# 
  5964  0813                     	;# 
  5965  0814                     	;# 
  5966  081A                     	;# 
  5967  081B                     	;# 
  5968  081C                     	;# 
  5969  081D                     	;# 
  5970  081E                     	;# 
  5971  081F                     	;# 
  5972  088C                     	;# 
  5973  088D                     	;# 
  5974  088E                     	;# 
  5975  088F                     	;# 
  5976  0890                     	;# 
  5977  0891                     	;# 
  5978  0892                     	;# 
  5979  0893                     	;# 
  5980  0895                     	;# 
  5981  0896                     	;# 
  5982  0897                     	;# 
  5983  0898                     	;# 
  5984  0899                     	;# 
  5985  089A                     	;# 
  5986  089B                     	;# 
  5987  090C                     	;# 
  5988  090E                     	;# 
  5989  090F                     	;# 
  5990  091F                     	;# 
  5991  091F                     	;# 
  5992  098F                     	;# 
  5993  098F                     	;# 
  5994  0990                     	;# 
  5995  0991                     	;# 
  5996  0992                     	;# 
  5997  0993                     	;# 
  5998  0994                     	;# 
  5999  0995                     	;# 
  6000  0996                     	;# 
  6001  0997                     	;# 
  6002  0E0F                     	;# 
  6003  0E10                     	;# 
  6004  0E11                     	;# 
  6005  0E12                     	;# 
  6006  0E13                     	;# 
  6007  0E14                     	;# 
  6008  0E15                     	;# 
  6009  0E16                     	;# 
  6010  0E17                     	;# 
  6011  0E18                     	;# 
  6012  0E19                     	;# 
  6013  0E1A                     	;# 
  6014  0E1B                     	;# 
  6015  0E1C                     	;# 
  6016  0E1D                     	;# 
  6017  0E1E                     	;# 
  6018  0E1F                     	;# 
  6019  0E20                     	;# 
  6020  0E21                     	;# 
  6021  0E22                     	;# 
  6022  0E23                     	;# 
  6023  0E24                     	;# 
  6024  0E25                     	;# 
  6025  0E26                     	;# 
  6026  0E27                     	;# 
  6027  0E28                     	;# 
  6028  0E29                     	;# 
  6029  0E2A                     	;# 
  6030  0E2B                     	;# 
  6031  0E2C                     	;# 
  6032  0E2D                     	;# 
  6033  0E2E                     	;# 
  6034  0E2F                     	;# 
  6035  0E30                     	;# 
  6036  0E31                     	;# 
  6037  0E32                     	;# 
  6038  0E33                     	;# 
  6039  0E34                     	;# 
  6040  0E35                     	;# 
  6041  0E36                     	;# 
  6042  0E37                     	;# 
  6043  0E8F                     	;# 
  6044  0E90                     	;# 
  6045  0E91                     	;# 
  6046  0E92                     	;# 
  6047  0E93                     	;# 
  6048  0E94                     	;# 
  6049  0E95                     	;# 
  6050  0E96                     	;# 
  6051  0E97                     	;# 
  6052  0E9C                     	;# 
  6053  0E9D                     	;# 
  6054  0E9E                     	;# 
  6055  0EA1                     	;# 
  6056  0EA2                     	;# 
  6057  0EA3                     	;# 
  6058  0EA4                     	;# 
  6059  0EA5                     	;# 
  6060  0EA9                     	;# 
  6061  0EAA                     	;# 
  6062  0EAB                     	;# 
  6063  0EAC                     	;# 
  6064  0EB1                     	;# 
  6065  0EB2                     	;# 
  6066  0EB3                     	;# 
  6067  0EB8                     	;# 
  6068  0EB9                     	;# 
  6069  0EBA                     	;# 
  6070  0EBB                     	;# 
  6071  0EBC                     	;# 
  6072  0EBD                     	;# 
  6073  0EBE                     	;# 
  6074  0EC3                     	;# 
  6075  0EC5                     	;# 
  6076  0EC6                     	;# 
  6077  0EC7                     	;# 
  6078  0EC8                     	;# 
  6079  0EC9                     	;# 
  6080  0ECA                     	;# 
  6081  0ECB                     	;# 
  6082  0ECC                     	;# 
  6083  0F10                     	;# 
  6084  0F11                     	;# 
  6085  0F12                     	;# 
  6086  0F13                     	;# 
  6087  0F14                     	;# 
  6088  0F15                     	;# 
  6089  0F16                     	;# 
  6090  0F17                     	;# 
  6091  0F18                     	;# 
  6092  0F19                     	;# 
  6093  0F1A                     	;# 
  6094  0F1B                     	;# 
  6095  0F1C                     	;# 
  6096  0F1D                     	;# 
  6097  0F1E                     	;# 
  6098  0F1F                     	;# 
  6099  0F20                     	;# 
  6100  0F21                     	;# 
  6101  0F22                     	;# 
  6102  0F23                     	;# 
  6103  0F24                     	;# 
  6104  0F25                     	;# 
  6105  0F26                     	;# 
  6106  0F27                     	;# 
  6107  0F28                     	;# 
  6108  0F29                     	;# 
  6109  0F2A                     	;# 
  6110  0F2B                     	;# 
  6111  0F2C                     	;# 
  6112  0F2D                     	;# 
  6113  0F2E                     	;# 
  6114  0F2F                     	;# 
  6115  0F30                     	;# 
  6116  0F31                     	;# 
  6117  0F32                     	;# 
  6118  0F38                     	;# 
  6119  0F39                     	;# 
  6120  0F3A                     	;# 
  6121  0F3B                     	;# 
  6122  0F3C                     	;# 
  6123  0F3D                     	;# 
  6124  0F3E                     	;# 
  6125  0F3F                     	;# 
  6126  0F40                     	;# 
  6127  0F41                     	;# 
  6128  0F43                     	;# 
  6129  0F44                     	;# 
  6130  0F45                     	;# 
  6131  0F46                     	;# 
  6132  0F47                     	;# 
  6133  0F48                     	;# 
  6134  0F49                     	;# 
  6135  0F4A                     	;# 
  6136  0F4B                     	;# 
  6137  0F4C                     	;# 
  6138  0F4E                     	;# 
  6139  0F4F                     	;# 
  6140  0F50                     	;# 
  6141  0F51                     	;# 
  6142  0F52                     	;# 
  6143  0F53                     	;# 
  6144  0F54                     	;# 
  6145  0F55                     	;# 
  6146  0F56                     	;# 
  6147  0F57                     	;# 
  6148  0F59                     	;# 
  6149  0F5A                     	;# 
  6150  0F5B                     	;# 
  6151  0F5C                     	;# 
  6152  0F5D                     	;# 
  6153  0F61                     	;# 
  6154  0F62                     	;# 
  6155  0F64                     	;# 
  6156  0F65                     	;# 
  6157  0F66                     	;# 
  6158  0F67                     	;# 
  6159  0F68                     	;# 
  6160  0F69                     	;# 
  6161  0F6A                     	;# 
  6162  0F6B                     	;# 
  6163  0F6C                     	;# 
  6164  0F6D                     	;# 
  6165  0FE4                     	;# 
  6166  0FE5                     	;# 
  6167  0FE6                     	;# 
  6168  0FE7                     	;# 
  6169  0FE8                     	;# 
  6170  0FE9                     	;# 
  6171  0FEA                     	;# 
  6172  0FEB                     	;# 
  6173  0FED                     	;# 
  6174  0FEE                     	;# 
  6175  0FEF                     	;# 
  6176  0000                     	;# 
  6177  0001                     	;# 
  6178  0002                     	;# 
  6179  0003                     	;# 
  6180  0004                     	;# 
  6181  0005                     	;# 
  6182  0006                     	;# 
  6183  0007                     	;# 
  6184  0008                     	;# 
  6185  0009                     	;# 
  6186  000A                     	;# 
  6187  000B                     	;# 
  6188  000C                     	;# 
  6189  000D                     	;# 
  6190  000E                     	;# 
  6191  000F                     	;# 
  6192  0010                     	;# 
  6193  0011                     	;# 
  6194  0012                     	;# 
  6195  0013                     	;# 
  6196  0014                     	;# 
  6197  0015                     	;# 
  6198  0016                     	;# 
  6199  0017                     	;# 
  6200  0018                     	;# 
  6201  0019                     	;# 
  6202  001A                     	;# 
  6203  001C                     	;# 
  6204  001C                     	;# 
  6205  001D                     	;# 
  6206  001D                     	;# 
  6207  001E                     	;# 
  6208  001F                     	;# 
  6209  008C                     	;# 
  6210  008C                     	;# 
  6211  008D                     	;# 
  6212  008E                     	;# 
  6213  008E                     	;# 
  6214  008F                     	;# 
  6215  0090                     	;# 
  6216  0090                     	;# 
  6217  0091                     	;# 
  6218  0093                     	;# 
  6219  0094                     	;# 
  6220  0095                     	;# 
  6221  0096                     	;# 
  6222  0097                     	;# 
  6223  0098                     	;# 
  6224  0099                     	;# 
  6225  009A                     	;# 
  6226  009B                     	;# 
  6227  009C                     	;# 
  6228  009D                     	;# 
  6229  009E                     	;# 
  6230  010C                     	;# 
  6231  010D                     	;# 
  6232  010E                     	;# 
  6233  010E                     	;# 
  6234  010F                     	;# 
  6235  0110                     	;# 
  6236  0110                     	;# 
  6237  0111                     	;# 
  6238  0112                     	;# 
  6239  0112                     	;# 
  6240  0113                     	;# 
  6241  0114                     	;# 
  6242  0114                     	;# 
  6243  0115                     	;# 
  6244  0116                     	;# 
  6245  0116                     	;# 
  6246  0117                     	;# 
  6247  0119                     	;# 
  6248  0119                     	;# 
  6249  0119                     	;# 
  6250  011A                     	;# 
  6251  011A                     	;# 
  6252  011A                     	;# 
  6253  011B                     	;# 
  6254  011B                     	;# 
  6255  011B                     	;# 
  6256  011B                     	;# 
  6257  011B                     	;# 
  6258  011C                     	;# 
  6259  011C                     	;# 
  6260  011C                     	;# 
  6261  011D                     	;# 
  6262  011D                     	;# 
  6263  011D                     	;# 
  6264  011E                     	;# 
  6265  011E                     	;# 
  6266  011E                     	;# 
  6267  011F                     	;# 
  6268  011F                     	;# 
  6269  011F                     	;# 
  6270  011F                     	;# 
  6271  011F                     	;# 
  6272  018C                     	;# 
  6273  018D                     	;# 
  6274  018E                     	;# 
  6275  018F                     	;# 
  6276  0190                     	;# 
  6277  0191                     	;# 
  6278  0192                     	;# 
  6279  0196                     	;# 
  6280  0197                     	;# 
  6281  0198                     	;# 
  6282  0199                     	;# 
  6283  019A                     	;# 
  6284  019B                     	;# 
  6285  019C                     	;# 
  6286  020C                     	;# 
  6287  020C                     	;# 
  6288  020D                     	;# 
  6289  020E                     	;# 
  6290  020F                     	;# 
  6291  020F                     	;# 
  6292  0210                     	;# 
  6293  0210                     	;# 
  6294  0211                     	;# 
  6295  0211                     	;# 
  6296  0212                     	;# 
  6297  0212                     	;# 
  6298  0213                     	;# 
  6299  0214                     	;# 
  6300  0215                     	;# 
  6301  0215                     	;# 
  6302  0216                     	;# 
  6303  0216                     	;# 
  6304  0217                     	;# 
  6305  0217                     	;# 
  6306  0218                     	;# 
  6307  0218                     	;# 
  6308  0219                     	;# 
  6309  021A                     	;# 
  6310  021B                     	;# 
  6311  021B                     	;# 
  6312  021C                     	;# 
  6313  021C                     	;# 
  6314  021D                     	;# 
  6315  021D                     	;# 
  6316  021E                     	;# 
  6317  021F                     	;# 
  6318  028C                     	;# 
  6319  028C                     	;# 
  6320  028D                     	;# 
  6321  028D                     	;# 
  6322  028E                     	;# 
  6323  028F                     	;# 
  6324  0290                     	;# 
  6325  0290                     	;# 
  6326  0291                     	;# 
  6327  0292                     	;# 
  6328  0292                     	;# 
  6329  0293                     	;# 
  6330  0293                     	;# 
  6331  0294                     	;# 
  6332  0295                     	;# 
  6333  0296                     	;# 
  6334  0296                     	;# 
  6335  0297                     	;# 
  6336  0298                     	;# 
  6337  0298                     	;# 
  6338  0299                     	;# 
  6339  0299                     	;# 
  6340  029A                     	;# 
  6341  029B                     	;# 
  6342  029C                     	;# 
  6343  029C                     	;# 
  6344  029D                     	;# 
  6345  030C                     	;# 
  6346  030C                     	;# 
  6347  030D                     	;# 
  6348  030E                     	;# 
  6349  030F                     	;# 
  6350  0310                     	;# 
  6351  0310                     	;# 
  6352  0311                     	;# 
  6353  0312                     	;# 
  6354  0313                     	;# 
  6355  0314                     	;# 
  6356  0314                     	;# 
  6357  0315                     	;# 
  6358  0316                     	;# 
  6359  0317                     	;# 
  6360  0318                     	;# 
  6361  0318                     	;# 
  6362  0319                     	;# 
  6363  031A                     	;# 
  6364  031B                     	;# 
  6365  031C                     	;# 
  6366  031C                     	;# 
  6367  031D                     	;# 
  6368  031E                     	;# 
  6369  031F                     	;# 
  6370  038C                     	;# 
  6371  038C                     	;# 
  6372  038D                     	;# 
  6373  038E                     	;# 
  6374  0390                     	;# 
  6375  0390                     	;# 
  6376  0391                     	;# 
  6377  0392                     	;# 
  6378  040C                     	;# 
  6379  040D                     	;# 
  6380  040E                     	;# 
  6381  040F                     	;# 
  6382  0410                     	;# 
  6383  0411                     	;# 
  6384  0416                     	;# 
  6385  0416                     	;# 
  6386  0417                     	;# 
  6387  0418                     	;# 
  6388  0418                     	;# 
  6389  0419                     	;# 
  6390  041A                     	;# 
  6391  041A                     	;# 
  6392  041B                     	;# 
  6393  041C                     	;# 
  6394  041C                     	;# 
  6395  041D                     	;# 
  6396  041E                     	;# 
  6397  041F                     	;# 
  6398  048C                     	;# 
  6399  048C                     	;# 
  6400  048D                     	;# 
  6401  048E                     	;# 
  6402  048F                     	;# 
  6403  048F                     	;# 
  6404  0490                     	;# 
  6405  0491                     	;# 
  6406  0492                     	;# 
  6407  0492                     	;# 
  6408  0493                     	;# 
  6409  0494                     	;# 
  6410  0495                     	;# 
  6411  0495                     	;# 
  6412  0496                     	;# 
  6413  0497                     	;# 
  6414  0498                     	;# 
  6415  0499                     	;# 
  6416  049A                     	;# 
  6417  049B                     	;# 
  6418  049C                     	;# 
  6419  049D                     	;# 
  6420  050C                     	;# 
  6421  050C                     	;# 
  6422  050D                     	;# 
  6423  050E                     	;# 
  6424  050F                     	;# 
  6425  050F                     	;# 
  6426  0510                     	;# 
  6427  0511                     	;# 
  6428  0512                     	;# 
  6429  0512                     	;# 
  6430  0513                     	;# 
  6431  0514                     	;# 
  6432  0515                     	;# 
  6433  0515                     	;# 
  6434  0516                     	;# 
  6435  0517                     	;# 
  6436  0518                     	;# 
  6437  0519                     	;# 
  6438  051A                     	;# 
  6439  051B                     	;# 
  6440  051C                     	;# 
  6441  051D                     	;# 
  6442  058C                     	;# 
  6443  058C                     	;# 
  6444  058D                     	;# 
  6445  058E                     	;# 
  6446  058F                     	;# 
  6447  058F                     	;# 
  6448  0590                     	;# 
  6449  0591                     	;# 
  6450  0592                     	;# 
  6451  0593                     	;# 
  6452  060C                     	;# 
  6453  060D                     	;# 
  6454  060E                     	;# 
  6455  060F                     	;# 
  6456  0610                     	;# 
  6457  0611                     	;# 
  6458  0612                     	;# 
  6459  0613                     	;# 
  6460  0614                     	;# 
  6461  0616                     	;# 
  6462  0617                     	;# 
  6463  0618                     	;# 
  6464  0619                     	;# 
  6465  061A                     	;# 
  6466  061B                     	;# 
  6467  061C                     	;# 
  6468  061D                     	;# 
  6469  061E                     	;# 
  6470  068C                     	;# 
  6471  068D                     	;# 
  6472  068E                     	;# 
  6473  068F                     	;# 
  6474  0690                     	;# 
  6475  0691                     	;# 
  6476  0692                     	;# 
  6477  0693                     	;# 
  6478  0694                     	;# 
  6479  070C                     	;# 
  6480  070D                     	;# 
  6481  070E                     	;# 
  6482  070F                     	;# 
  6483  0710                     	;# 
  6484  0711                     	;# 
  6485  0712                     	;# 
  6486  0713                     	;# 
  6487  0714                     	;# 
  6488  0716                     	;# 
  6489  0717                     	;# 
  6490  0718                     	;# 
  6491  0719                     	;# 
  6492  071A                     	;# 
  6493  071B                     	;# 
  6494  071C                     	;# 
  6495  071D                     	;# 
  6496  071E                     	;# 
  6497  0796                     	;# 
  6498  0797                     	;# 
  6499  0798                     	;# 
  6500  0799                     	;# 
  6501  079A                     	;# 
  6502  079B                     	;# 
  6503  080C                     	;# 
  6504  080D                     	;# 
  6505  080E                     	;# 
  6506  080F                     	;# 
  6507  0810                     	;# 
  6508  0811                     	;# 
  6509  0812                     	;# 
  6510  0813                     	;# 
  6511  0814                     	;# 
  6512  081A                     	;# 
  6513  081B                     	;# 
  6514  081C                     	;# 
  6515  081D                     	;# 
  6516  081E                     	;# 
  6517  081F                     	;# 
  6518  088C                     	;# 
  6519  088D                     	;# 
  6520  088E                     	;# 
  6521  088F                     	;# 
  6522  0890                     	;# 
  6523  0891                     	;# 
  6524  0892                     	;# 
  6525  0893                     	;# 
  6526  0895                     	;# 
  6527  0896                     	;# 
  6528  0897                     	;# 
  6529  0898                     	;# 
  6530  0899                     	;# 
  6531  089A                     	;# 
  6532  089B                     	;# 
  6533  090C                     	;# 
  6534  090E                     	;# 
  6535  090F                     	;# 
  6536  091F                     	;# 
  6537  091F                     	;# 
  6538  098F                     	;# 
  6539  098F                     	;# 
  6540  0990                     	;# 
  6541  0991                     	;# 
  6542  0992                     	;# 
  6543  0993                     	;# 
  6544  0994                     	;# 
  6545  0995                     	;# 
  6546  0996                     	;# 
  6547  0997                     	;# 
  6548  0E0F                     	;# 
  6549  0E10                     	;# 
  6550  0E11                     	;# 
  6551  0E12                     	;# 
  6552  0E13                     	;# 
  6553  0E14                     	;# 
  6554  0E15                     	;# 
  6555  0E16                     	;# 
  6556  0E17                     	;# 
  6557  0E18                     	;# 
  6558  0E19                     	;# 
  6559  0E1A                     	;# 
  6560  0E1B                     	;# 
  6561  0E1C                     	;# 
  6562  0E1D                     	;# 
  6563  0E1E                     	;# 
  6564  0E1F                     	;# 
  6565  0E20                     	;# 
  6566  0E21                     	;# 
  6567  0E22                     	;# 
  6568  0E23                     	;# 
  6569  0E24                     	;# 
  6570  0E25                     	;# 
  6571  0E26                     	;# 
  6572  0E27                     	;# 
  6573  0E28                     	;# 
  6574  0E29                     	;# 
  6575  0E2A                     	;# 
  6576  0E2B                     	;# 
  6577  0E2C                     	;# 
  6578  0E2D                     	;# 
  6579  0E2E                     	;# 
  6580  0E2F                     	;# 
  6581  0E30                     	;# 
  6582  0E31                     	;# 
  6583  0E32                     	;# 
  6584  0E33                     	;# 
  6585  0E34                     	;# 
  6586  0E35                     	;# 
  6587  0E36                     	;# 
  6588  0E37                     	;# 
  6589  0E8F                     	;# 
  6590  0E90                     	;# 
  6591  0E91                     	;# 
  6592  0E92                     	;# 
  6593  0E93                     	;# 
  6594  0E94                     	;# 
  6595  0E95                     	;# 
  6596  0E96                     	;# 
  6597  0E97                     	;# 
  6598  0E9C                     	;# 
  6599  0E9D                     	;# 
  6600  0E9E                     	;# 
  6601  0EA1                     	;# 
  6602  0EA2                     	;# 
  6603  0EA3                     	;# 
  6604  0EA4                     	;# 
  6605  0EA5                     	;# 
  6606  0EA9                     	;# 
  6607  0EAA                     	;# 
  6608  0EAB                     	;# 
  6609  0EAC                     	;# 
  6610  0EB1                     	;# 
  6611  0EB2                     	;# 
  6612  0EB3                     	;# 
  6613  0EB8                     	;# 
  6614  0EB9                     	;# 
  6615  0EBA                     	;# 
  6616  0EBB                     	;# 
  6617  0EBC                     	;# 
  6618  0EBD                     	;# 
  6619  0EBE                     	;# 
  6620  0EC3                     	;# 
  6621  0EC5                     	;# 
  6622  0EC6                     	;# 
  6623  0EC7                     	;# 
  6624  0EC8                     	;# 
  6625  0EC9                     	;# 
  6626  0ECA                     	;# 
  6627  0ECB                     	;# 
  6628  0ECC                     	;# 
  6629  0F10                     	;# 
  6630  0F11                     	;# 
  6631  0F12                     	;# 
  6632  0F13                     	;# 
  6633  0F14                     	;# 
  6634  0F15                     	;# 
  6635  0F16                     	;# 
  6636  0F17                     	;# 
  6637  0F18                     	;# 
  6638  0F19                     	;# 
  6639  0F1A                     	;# 
  6640  0F1B                     	;# 
  6641  0F1C                     	;# 
  6642  0F1D                     	;# 
  6643  0F1E                     	;# 
  6644  0F1F                     	;# 
  6645  0F20                     	;# 
  6646  0F21                     	;# 
  6647  0F22                     	;# 
  6648  0F23                     	;# 
  6649  0F24                     	;# 
  6650  0F25                     	;# 
  6651  0F26                     	;# 
  6652  0F27                     	;# 
  6653  0F28                     	;# 
  6654  0F29                     	;# 
  6655  0F2A                     	;# 
  6656  0F2B                     	;# 
  6657  0F2C                     	;# 
  6658  0F2D                     	;# 
  6659  0F2E                     	;# 
  6660  0F2F                     	;# 
  6661  0F30                     	;# 
  6662  0F31                     	;# 
  6663  0F32                     	;# 
  6664  0F38                     	;# 
  6665  0F39                     	;# 
  6666  0F3A                     	;# 
  6667  0F3B                     	;# 
  6668  0F3C                     	;# 
  6669  0F3D                     	;# 
  6670  0F3E                     	;# 
  6671  0F3F                     	;# 
  6672  0F40                     	;# 
  6673  0F41                     	;# 
  6674  0F43                     	;# 
  6675  0F44                     	;# 
  6676  0F45                     	;# 
  6677  0F46                     	;# 
  6678  0F47                     	;# 
  6679  0F48                     	;# 
  6680  0F49                     	;# 
  6681  0F4A                     	;# 
  6682  0F4B                     	;# 
  6683  0F4C                     	;# 
  6684  0F4E                     	;# 
  6685  0F4F                     	;# 
  6686  0F50                     	;# 
  6687  0F51                     	;# 
  6688  0F52                     	;# 
  6689  0F53                     	;# 
  6690  0F54                     	;# 
  6691  0F55                     	;# 
  6692  0F56                     	;# 
  6693  0F57                     	;# 
  6694  0F59                     	;# 
  6695  0F5A                     	;# 
  6696  0F5B                     	;# 
  6697  0F5C                     	;# 
  6698  0F5D                     	;# 
  6699  0F61                     	;# 
  6700  0F62                     	;# 
  6701  0F64                     	;# 
  6702  0F65                     	;# 
  6703  0F66                     	;# 
  6704  0F67                     	;# 
  6705  0F68                     	;# 
  6706  0F69                     	;# 
  6707  0F6A                     	;# 
  6708  0F6B                     	;# 
  6709  0F6C                     	;# 
  6710  0F6D                     	;# 
  6711  0FE4                     	;# 
  6712  0FE5                     	;# 
  6713  0FE6                     	;# 
  6714  0FE7                     	;# 
  6715  0FE8                     	;# 
  6716  0FE9                     	;# 
  6717  0FEA                     	;# 
  6718  0FEB                     	;# 
  6719  0FED                     	;# 
  6720  0FEE                     	;# 
  6721  0FEF                     	;# 
  6722  0000                     	;# 
  6723  0001                     	;# 
  6724  0002                     	;# 
  6725  0003                     	;# 
  6726  0004                     	;# 
  6727  0005                     	;# 
  6728  0006                     	;# 
  6729  0007                     	;# 
  6730  0008                     	;# 
  6731  0009                     	;# 
  6732  000A                     	;# 
  6733  000B                     	;# 
  6734  000C                     	;# 
  6735  000D                     	;# 
  6736  000E                     	;# 
  6737  000F                     	;# 
  6738  0010                     	;# 
  6739  0011                     	;# 
  6740  0012                     	;# 
  6741  0013                     	;# 
  6742  0014                     	;# 
  6743  0015                     	;# 
  6744  0016                     	;# 
  6745  0017                     	;# 
  6746  0018                     	;# 
  6747  0019                     	;# 
  6748  001A                     	;# 
  6749  001C                     	;# 
  6750  001C                     	;# 
  6751  001D                     	;# 
  6752  001D                     	;# 
  6753  001E                     	;# 
  6754  001F                     	;# 
  6755  008C                     	;# 
  6756  008C                     	;# 
  6757  008D                     	;# 
  6758  008E                     	;# 
  6759  008E                     	;# 
  6760  008F                     	;# 
  6761  0090                     	;# 
  6762  0090                     	;# 
  6763  0091                     	;# 
  6764  0093                     	;# 
  6765  0094                     	;# 
  6766  0095                     	;# 
  6767  0096                     	;# 
  6768  0097                     	;# 
  6769  0098                     	;# 
  6770  0099                     	;# 
  6771  009A                     	;# 
  6772  009B                     	;# 
  6773  009C                     	;# 
  6774  009D                     	;# 
  6775  009E                     	;# 
  6776  010C                     	;# 
  6777  010D                     	;# 
  6778  010E                     	;# 
  6779  010E                     	;# 
  6780  010F                     	;# 
  6781  0110                     	;# 
  6782  0110                     	;# 
  6783  0111                     	;# 
  6784  0112                     	;# 
  6785  0112                     	;# 
  6786  0113                     	;# 
  6787  0114                     	;# 
  6788  0114                     	;# 
  6789  0115                     	;# 
  6790  0116                     	;# 
  6791  0116                     	;# 
  6792  0117                     	;# 
  6793  0119                     	;# 
  6794  0119                     	;# 
  6795  0119                     	;# 
  6796  011A                     	;# 
  6797  011A                     	;# 
  6798  011A                     	;# 
  6799  011B                     	;# 
  6800  011B                     	;# 
  6801  011B                     	;# 
  6802  011B                     	;# 
  6803  011B                     	;# 
  6804  011C                     	;# 
  6805  011C                     	;# 
  6806  011C                     	;# 
  6807  011D                     	;# 
  6808  011D                     	;# 
  6809  011D                     	;# 
  6810  011E                     	;# 
  6811  011E                     	;# 
  6812  011E                     	;# 
  6813  011F                     	;# 
  6814  011F                     	;# 
  6815  011F                     	;# 
  6816  011F                     	;# 
  6817  011F                     	;# 
  6818  018C                     	;# 
  6819  018D                     	;# 
  6820  018E                     	;# 
  6821  018F                     	;# 
  6822  0190                     	;# 
  6823  0191                     	;# 
  6824  0192                     	;# 
  6825  0196                     	;# 
  6826  0197                     	;# 
  6827  0198                     	;# 
  6828  0199                     	;# 
  6829  019A                     	;# 
  6830  019B                     	;# 
  6831  019C                     	;# 
  6832  020C                     	;# 
  6833  020C                     	;# 
  6834  020D                     	;# 
  6835  020E                     	;# 
  6836  020F                     	;# 
  6837  020F                     	;# 
  6838  0210                     	;# 
  6839  0210                     	;# 
  6840  0211                     	;# 
  6841  0211                     	;# 
  6842  0212                     	;# 
  6843  0212                     	;# 
  6844  0213                     	;# 
  6845  0214                     	;# 
  6846  0215                     	;# 
  6847  0215                     	;# 
  6848  0216                     	;# 
  6849  0216                     	;# 
  6850  0217                     	;# 
  6851  0217                     	;# 
  6852  0218                     	;# 
  6853  0218                     	;# 
  6854  0219                     	;# 
  6855  021A                     	;# 
  6856  021B                     	;# 
  6857  021B                     	;# 
  6858  021C                     	;# 
  6859  021C                     	;# 
  6860  021D                     	;# 
  6861  021D                     	;# 
  6862  021E                     	;# 
  6863  021F                     	;# 
  6864  028C                     	;# 
  6865  028C                     	;# 
  6866  028D                     	;# 
  6867  028D                     	;# 
  6868  028E                     	;# 
  6869  028F                     	;# 
  6870  0290                     	;# 
  6871  0290                     	;# 
  6872  0291                     	;# 
  6873  0292                     	;# 
  6874  0292                     	;# 
  6875  0293                     	;# 
  6876  0293                     	;# 
  6877  0294                     	;# 
  6878  0295                     	;# 
  6879  0296                     	;# 
  6880  0296                     	;# 
  6881  0297                     	;# 
  6882  0298                     	;# 
  6883  0298                     	;# 
  6884  0299                     	;# 
  6885  0299                     	;# 
  6886  029A                     	;# 
  6887  029B                     	;# 
  6888  029C                     	;# 
  6889  029C                     	;# 
  6890  029D                     	;# 
  6891  030C                     	;# 
  6892  030C                     	;# 
  6893  030D                     	;# 
  6894  030E                     	;# 
  6895  030F                     	;# 
  6896  0310                     	;# 
  6897  0310                     	;# 
  6898  0311                     	;# 
  6899  0312                     	;# 
  6900  0313                     	;# 
  6901  0314                     	;# 
  6902  0314                     	;# 
  6903  0315                     	;# 
  6904  0316                     	;# 
  6905  0317                     	;# 
  6906  0318                     	;# 
  6907  0318                     	;# 
  6908  0319                     	;# 
  6909  031A                     	;# 
  6910  031B                     	;# 
  6911  031C                     	;# 
  6912  031C                     	;# 
  6913  031D                     	;# 
  6914  031E                     	;# 
  6915  031F                     	;# 
  6916  038C                     	;# 
  6917  038C                     	;# 
  6918  038D                     	;# 
  6919  038E                     	;# 
  6920  0390                     	;# 
  6921  0390                     	;# 
  6922  0391                     	;# 
  6923  0392                     	;# 
  6924  040C                     	;# 
  6925  040D                     	;# 
  6926  040E                     	;# 
  6927  040F                     	;# 
  6928  0410                     	;# 
  6929  0411                     	;# 
  6930  0416                     	;# 
  6931  0416                     	;# 
  6932  0417                     	;# 
  6933  0418                     	;# 
  6934  0418                     	;# 
  6935  0419                     	;# 
  6936  041A                     	;# 
  6937  041A                     	;# 
  6938  041B                     	;# 
  6939  041C                     	;# 
  6940  041C                     	;# 
  6941  041D                     	;# 
  6942  041E                     	;# 
  6943  041F                     	;# 
  6944  048C                     	;# 
  6945  048C                     	;# 
  6946  048D                     	;# 
  6947  048E                     	;# 
  6948  048F                     	;# 
  6949  048F                     	;# 
  6950  0490                     	;# 
  6951  0491                     	;# 
  6952  0492                     	;# 
  6953  0492                     	;# 
  6954  0493                     	;# 
  6955  0494                     	;# 
  6956  0495                     	;# 
  6957  0495                     	;# 
  6958  0496                     	;# 
  6959  0497                     	;# 
  6960  0498                     	;# 
  6961  0499                     	;# 
  6962  049A                     	;# 
  6963  049B                     	;# 
  6964  049C                     	;# 
  6965  049D                     	;# 
  6966  050C                     	;# 
  6967  050C                     	;# 
  6968  050D                     	;# 
  6969  050E                     	;# 
  6970  050F                     	;# 
  6971  050F                     	;# 
  6972  0510                     	;# 
  6973  0511                     	;# 
  6974  0512                     	;# 
  6975  0512                     	;# 
  6976  0513                     	;# 
  6977  0514                     	;# 
  6978  0515                     	;# 
  6979  0515                     	;# 
  6980  0516                     	;# 
  6981  0517                     	;# 
  6982  0518                     	;# 
  6983  0519                     	;# 
  6984  051A                     	;# 
  6985  051B                     	;# 
  6986  051C                     	;# 
  6987  051D                     	;# 
  6988  058C                     	;# 
  6989  058C                     	;# 
  6990  058D                     	;# 
  6991  058E                     	;# 
  6992  058F                     	;# 
  6993  058F                     	;# 
  6994  0590                     	;# 
  6995  0591                     	;# 
  6996  0592                     	;# 
  6997  0593                     	;# 
  6998  060C                     	;# 
  6999  060D                     	;# 
  7000  060E                     	;# 
  7001  060F                     	;# 
  7002  0610                     	;# 
  7003  0611                     	;# 
  7004  0612                     	;# 
  7005  0613                     	;# 
  7006  0614                     	;# 
  7007  0616                     	;# 
  7008  0617                     	;# 
  7009  0618                     	;# 
  7010  0619                     	;# 
  7011  061A                     	;# 
  7012  061B                     	;# 
  7013  061C                     	;# 
  7014  061D                     	;# 
  7015  061E                     	;# 
  7016  068C                     	;# 
  7017  068D                     	;# 
  7018  068E                     	;# 
  7019  068F                     	;# 
  7020  0690                     	;# 
  7021  0691                     	;# 
  7022  0692                     	;# 
  7023  0693                     	;# 
  7024  0694                     	;# 
  7025  070C                     	;# 
  7026  070D                     	;# 
  7027  070E                     	;# 
  7028  070F                     	;# 
  7029  0710                     	;# 
  7030  0711                     	;# 
  7031  0712                     	;# 
  7032  0713                     	;# 
  7033  0714                     	;# 
  7034  0716                     	;# 
  7035  0717                     	;# 
  7036  0718                     	;# 
  7037  0719                     	;# 
  7038  071A                     	;# 
  7039  071B                     	;# 
  7040  071C                     	;# 
  7041  071D                     	;# 
  7042  071E                     	;# 
  7043  0796                     	;# 
  7044  0797                     	;# 
  7045  0798                     	;# 
  7046  0799                     	;# 
  7047  079A                     	;# 
  7048  079B                     	;# 
  7049  080C                     	;# 
  7050  080D                     	;# 
  7051  080E                     	;# 
  7052  080F                     	;# 
  7053  0810                     	;# 
  7054  0811                     	;# 
  7055  0812                     	;# 
  7056  0813                     	;# 
  7057  0814                     	;# 
  7058  081A                     	;# 
  7059  081B                     	;# 
  7060  081C                     	;# 
  7061  081D                     	;# 
  7062  081E                     	;# 
  7063  081F                     	;# 
  7064  088C                     	;# 
  7065  088D                     	;# 
  7066  088E                     	;# 
  7067  088F                     	;# 
  7068  0890                     	;# 
  7069  0891                     	;# 
  7070  0892                     	;# 
  7071  0893                     	;# 
  7072  0895                     	;# 
  7073  0896                     	;# 
  7074  0897                     	;# 
  7075  0898                     	;# 
  7076  0899                     	;# 
  7077  089A                     	;# 
  7078  089B                     	;# 
  7079  090C                     	;# 
  7080  090E                     	;# 
  7081  090F                     	;# 
  7082  091F                     	;# 
  7083  091F                     	;# 
  7084  098F                     	;# 
  7085  098F                     	;# 
  7086  0990                     	;# 
  7087  0991                     	;# 
  7088  0992                     	;# 
  7089  0993                     	;# 
  7090  0994                     	;# 
  7091  0995                     	;# 
  7092  0996                     	;# 
  7093  0997                     	;# 
  7094  0E0F                     	;# 
  7095  0E10                     	;# 
  7096  0E11                     	;# 
  7097  0E12                     	;# 
  7098  0E13                     	;# 
  7099  0E14                     	;# 
  7100  0E15                     	;# 
  7101  0E16                     	;# 
  7102  0E17                     	;# 
  7103  0E18                     	;# 
  7104  0E19                     	;# 
  7105  0E1A                     	;# 
  7106  0E1B                     	;# 
  7107  0E1C                     	;# 
  7108  0E1D                     	;# 
  7109  0E1E                     	;# 
  7110  0E1F                     	;# 
  7111  0E20                     	;# 
  7112  0E21                     	;# 
  7113  0E22                     	;# 
  7114  0E23                     	;# 
  7115  0E24                     	;# 
  7116  0E25                     	;# 
  7117  0E26                     	;# 
  7118  0E27                     	;# 
  7119  0E28                     	;# 
  7120  0E29                     	;# 
  7121  0E2A                     	;# 
  7122  0E2B                     	;# 
  7123  0E2C                     	;# 
  7124  0E2D                     	;# 
  7125  0E2E                     	;# 
  7126  0E2F                     	;# 
  7127  0E30                     	;# 
  7128  0E31                     	;# 
  7129  0E32                     	;# 
  7130  0E33                     	;# 
  7131  0E34                     	;# 
  7132  0E35                     	;# 
  7133  0E36                     	;# 
  7134  0E37                     	;# 
  7135  0E8F                     	;# 
  7136  0E90                     	;# 
  7137  0E91                     	;# 
  7138  0E92                     	;# 
  7139  0E93                     	;# 
  7140  0E94                     	;# 
  7141  0E95                     	;# 
  7142  0E96                     	;# 
  7143  0E97                     	;# 
  7144  0E9C                     	;# 
  7145  0E9D                     	;# 
  7146  0E9E                     	;# 
  7147  0EA1                     	;# 
  7148  0EA2                     	;# 
  7149  0EA3                     	;# 
  7150  0EA4                     	;# 
  7151  0EA5                     	;# 
  7152  0EA9                     	;# 
  7153  0EAA                     	;# 
  7154  0EAB                     	;# 
  7155  0EAC                     	;# 
  7156  0EB1                     	;# 
  7157  0EB2                     	;# 
  7158  0EB3                     	;# 
  7159  0EB8                     	;# 
  7160  0EB9                     	;# 
  7161  0EBA                     	;# 
  7162  0EBB                     	;# 
  7163  0EBC                     	;# 
  7164  0EBD                     	;# 
  7165  0EBE                     	;# 
  7166  0EC3                     	;# 
  7167  0EC5                     	;# 
  7168  0EC6                     	;# 
  7169  0EC7                     	;# 
  7170  0EC8                     	;# 
  7171  0EC9                     	;# 
  7172  0ECA                     	;# 
  7173  0ECB                     	;# 
  7174  0ECC                     	;# 
  7175  0F10                     	;# 
  7176  0F11                     	;# 
  7177  0F12                     	;# 
  7178  0F13                     	;# 
  7179  0F14                     	;# 
  7180  0F15                     	;# 
  7181  0F16                     	;# 
  7182  0F17                     	;# 
  7183  0F18                     	;# 
  7184  0F19                     	;# 
  7185  0F1A                     	;# 
  7186  0F1B                     	;# 
  7187  0F1C                     	;# 
  7188  0F1D                     	;# 
  7189  0F1E                     	;# 
  7190  0F1F                     	;# 
  7191  0F20                     	;# 
  7192  0F21                     	;# 
  7193  0F22                     	;# 
  7194  0F23                     	;# 
  7195  0F24                     	;# 
  7196  0F25                     	;# 
  7197  0F26                     	;# 
  7198  0F27                     	;# 
  7199  0F28                     	;# 
  7200  0F29                     	;# 
  7201  0F2A                     	;# 
  7202  0F2B                     	;# 
  7203  0F2C                     	;# 
  7204  0F2D                     	;# 
  7205  0F2E                     	;# 
  7206  0F2F                     	;# 
  7207  0F30                     	;# 
  7208  0F31                     	;# 
  7209  0F32                     	;# 
  7210  0F38                     	;# 
  7211  0F39                     	;# 
  7212  0F3A                     	;# 
  7213  0F3B                     	;# 
  7214  0F3C                     	;# 
  7215  0F3D                     	;# 
  7216  0F3E                     	;# 
  7217  0F3F                     	;# 
  7218  0F40                     	;# 
  7219  0F41                     	;# 
  7220  0F43                     	;# 
  7221  0F44                     	;# 
  7222  0F45                     	;# 
  7223  0F46                     	;# 
  7224  0F47                     	;# 
  7225  0F48                     	;# 
  7226  0F49                     	;# 
  7227  0F4A                     	;# 
  7228  0F4B                     	;# 
  7229  0F4C                     	;# 
  7230  0F4E                     	;# 
  7231  0F4F                     	;# 
  7232  0F50                     	;# 
  7233  0F51                     	;# 
  7234  0F52                     	;# 
  7235  0F53                     	;# 
  7236  0F54                     	;# 
  7237  0F55                     	;# 
  7238  0F56                     	;# 
  7239  0F57                     	;# 
  7240  0F59                     	;# 
  7241  0F5A                     	;# 
  7242  0F5B                     	;# 
  7243  0F5C                     	;# 
  7244  0F5D                     	;# 
  7245  0F61                     	;# 
  7246  0F62                     	;# 
  7247  0F64                     	;# 
  7248  0F65                     	;# 
  7249  0F66                     	;# 
  7250  0F67                     	;# 
  7251  0F68                     	;# 
  7252  0F69                     	;# 
  7253  0F6A                     	;# 
  7254  0F6B                     	;# 
  7255  0F6C                     	;# 
  7256  0F6D                     	;# 
  7257  0FE4                     	;# 
  7258  0FE5                     	;# 
  7259  0FE6                     	;# 
  7260  0FE7                     	;# 
  7261  0FE8                     	;# 
  7262  0FE9                     	;# 
  7263  0FEA                     	;# 
  7264  0FEB                     	;# 
  7265  0FED                     	;# 
  7266  0FEE                     	;# 
  7267  0FEF                     	;# 
  7268  0000                     	;# 
  7269  0001                     	;# 
  7270  0002                     	;# 
  7271  0003                     	;# 
  7272  0004                     	;# 
  7273  0005                     	;# 
  7274  0006                     	;# 
  7275  0007                     	;# 
  7276  0008                     	;# 
  7277  0009                     	;# 
  7278  000A                     	;# 
  7279  000B                     	;# 
  7280  000C                     	;# 
  7281  000D                     	;# 
  7282  000E                     	;# 
  7283  000F                     	;# 
  7284  0010                     	;# 
  7285  0011                     	;# 
  7286  0012                     	;# 
  7287  0013                     	;# 
  7288  0014                     	;# 
  7289  0015                     	;# 
  7290  0016                     	;# 
  7291  0017                     	;# 
  7292  0018                     	;# 
  7293  0019                     	;# 
  7294  001A                     	;# 
  7295  001C                     	;# 
  7296  001C                     	;# 
  7297  001D                     	;# 
  7298  001D                     	;# 
  7299  001E                     	;# 
  7300  001F                     	;# 
  7301  008C                     	;# 
  7302  008C                     	;# 
  7303  008D                     	;# 
  7304  008E                     	;# 
  7305  008E                     	;# 
  7306  008F                     	;# 
  7307  0090                     	;# 
  7308  0090                     	;# 
  7309  0091                     	;# 
  7310  0093                     	;# 
  7311  0094                     	;# 
  7312  0095                     	;# 
  7313  0096                     	;# 
  7314  0097                     	;# 
  7315  0098                     	;# 
  7316  0099                     	;# 
  7317  009A                     	;# 
  7318  009B                     	;# 
  7319  009C                     	;# 
  7320  009D                     	;# 
  7321  009E                     	;# 
  7322  010C                     	;# 
  7323  010D                     	;# 
  7324  010E                     	;# 
  7325  010E                     	;# 
  7326  010F                     	;# 
  7327  0110                     	;# 
  7328  0110                     	;# 
  7329  0111                     	;# 
  7330  0112                     	;# 
  7331  0112                     	;# 
  7332  0113                     	;# 
  7333  0114                     	;# 
  7334  0114                     	;# 
  7335  0115                     	;# 
  7336  0116                     	;# 
  7337  0116                     	;# 
  7338  0117                     	;# 
  7339  0119                     	;# 
  7340  0119                     	;# 
  7341  0119                     	;# 
  7342  011A                     	;# 
  7343  011A                     	;# 
  7344  011A                     	;# 
  7345  011B                     	;# 
  7346  011B                     	;# 
  7347  011B                     	;# 
  7348  011B                     	;# 
  7349  011B                     	;# 
  7350  011C                     	;# 
  7351  011C                     	;# 
  7352  011C                     	;# 
  7353  011D                     	;# 
  7354  011D                     	;# 
  7355  011D                     	;# 
  7356  011E                     	;# 
  7357  011E                     	;# 
  7358  011E                     	;# 
  7359  011F                     	;# 
  7360  011F                     	;# 
  7361  011F                     	;# 
  7362  011F                     	;# 
  7363  011F                     	;# 
  7364  018C                     	;# 
  7365  018D                     	;# 
  7366  018E                     	;# 
  7367  018F                     	;# 
  7368  0190                     	;# 
  7369  0191                     	;# 
  7370  0192                     	;# 
  7371  0196                     	;# 
  7372  0197                     	;# 
  7373  0198                     	;# 
  7374  0199                     	;# 
  7375  019A                     	;# 
  7376  019B                     	;# 
  7377  019C                     	;# 
  7378  020C                     	;# 
  7379  020C                     	;# 
  7380  020D                     	;# 
  7381  020E                     	;# 
  7382  020F                     	;# 
  7383  020F                     	;# 
  7384  0210                     	;# 
  7385  0210                     	;# 
  7386  0211                     	;# 
  7387  0211                     	;# 
  7388  0212                     	;# 
  7389  0212                     	;# 
  7390  0213                     	;# 
  7391  0214                     	;# 
  7392  0215                     	;# 
  7393  0215                     	;# 
  7394  0216                     	;# 
  7395  0216                     	;# 
  7396  0217                     	;# 
  7397  0217                     	;# 
  7398  0218                     	;# 
  7399  0218                     	;# 
  7400  0219                     	;# 
  7401  021A                     	;# 
  7402  021B                     	;# 
  7403  021B                     	;# 
  7404  021C                     	;# 
  7405  021C                     	;# 
  7406  021D                     	;# 
  7407  021D                     	;# 
  7408  021E                     	;# 
  7409  021F                     	;# 
  7410  028C                     	;# 
  7411  028C                     	;# 
  7412  028D                     	;# 
  7413  028D                     	;# 
  7414  028E                     	;# 
  7415  028F                     	;# 
  7416  0290                     	;# 
  7417  0290                     	;# 
  7418  0291                     	;# 
  7419  0292                     	;# 
  7420  0292                     	;# 
  7421  0293                     	;# 
  7422  0293                     	;# 
  7423  0294                     	;# 
  7424  0295                     	;# 
  7425  0296                     	;# 
  7426  0296                     	;# 
  7427  0297                     	;# 
  7428  0298                     	;# 
  7429  0298                     	;# 
  7430  0299                     	;# 
  7431  0299                     	;# 
  7432  029A                     	;# 
  7433  029B                     	;# 
  7434  029C                     	;# 
  7435  029C                     	;# 
  7436  029D                     	;# 
  7437  030C                     	;# 
  7438  030C                     	;# 
  7439  030D                     	;# 
  7440  030E                     	;# 
  7441  030F                     	;# 
  7442  0310                     	;# 
  7443  0310                     	;# 
  7444  0311                     	;# 
  7445  0312                     	;# 
  7446  0313                     	;# 
  7447  0314                     	;# 
  7448  0314                     	;# 
  7449  0315                     	;# 
  7450  0316                     	;# 
  7451  0317                     	;# 
  7452  0318                     	;# 
  7453  0318                     	;# 
  7454  0319                     	;# 
  7455  031A                     	;# 
  7456  031B                     	;# 
  7457  031C                     	;# 
  7458  031C                     	;# 
  7459  031D                     	;# 
  7460  031E                     	;# 
  7461  031F                     	;# 
  7462  038C                     	;# 
  7463  038C                     	;# 
  7464  038D                     	;# 
  7465  038E                     	;# 
  7466  0390                     	;# 
  7467  0390                     	;# 
  7468  0391                     	;# 
  7469  0392                     	;# 
  7470  040C                     	;# 
  7471  040D                     	;# 
  7472  040E                     	;# 
  7473  040F                     	;# 
  7474  0410                     	;# 
  7475  0411                     	;# 
  7476  0416                     	;# 
  7477  0416                     	;# 
  7478  0417                     	;# 
  7479  0418                     	;# 
  7480  0418                     	;# 
  7481  0419                     	;# 
  7482  041A                     	;# 
  7483  041A                     	;# 
  7484  041B                     	;# 
  7485  041C                     	;# 
  7486  041C                     	;# 
  7487  041D                     	;# 
  7488  041E                     	;# 
  7489  041F                     	;# 
  7490  048C                     	;# 
  7491  048C                     	;# 
  7492  048D                     	;# 
  7493  048E                     	;# 
  7494  048F                     	;# 
  7495  048F                     	;# 
  7496  0490                     	;# 
  7497  0491                     	;# 
  7498  0492                     	;# 
  7499  0492                     	;# 
  7500  0493                     	;# 
  7501  0494                     	;# 
  7502  0495                     	;# 
  7503  0495                     	;# 
  7504  0496                     	;# 
  7505  0497                     	;# 
  7506  0498                     	;# 
  7507  0499                     	;# 
  7508  049A                     	;# 
  7509  049B                     	;# 
  7510  049C                     	;# 
  7511  049D                     	;# 
  7512  050C                     	;# 
  7513  050C                     	;# 
  7514  050D                     	;# 
  7515  050E                     	;# 
  7516  050F                     	;# 
  7517  050F                     	;# 
  7518  0510                     	;# 
  7519  0511                     	;# 
  7520  0512                     	;# 
  7521  0512                     	;# 
  7522  0513                     	;# 
  7523  0514                     	;# 
  7524  0515                     	;# 
  7525  0515                     	;# 
  7526  0516                     	;# 
  7527  0517                     	;# 
  7528  0518                     	;# 
  7529  0519                     	;# 
  7530  051A                     	;# 
  7531  051B                     	;# 
  7532  051C                     	;# 
  7533  051D                     	;# 
  7534  058C                     	;# 
  7535  058C                     	;# 
  7536  058D                     	;# 
  7537  058E                     	;# 
  7538  058F                     	;# 
  7539  058F                     	;# 
  7540  0590                     	;# 
  7541  0591                     	;# 
  7542  0592                     	;# 
  7543  0593                     	;# 
  7544  060C                     	;# 
  7545  060D                     	;# 
  7546  060E                     	;# 
  7547  060F                     	;# 
  7548  0610                     	;# 
  7549  0611                     	;# 
  7550  0612                     	;# 
  7551  0613                     	;# 
  7552  0614                     	;# 
  7553  0616                     	;# 
  7554  0617                     	;# 
  7555  0618                     	;# 
  7556  0619                     	;# 
  7557  061A                     	;# 
  7558  061B                     	;# 
  7559  061C                     	;# 
  7560  061D                     	;# 
  7561  061E                     	;# 
  7562  068C                     	;# 
  7563  068D                     	;# 
  7564  068E                     	;# 
  7565  068F                     	;# 
  7566  0690                     	;# 
  7567  0691                     	;# 
  7568  0692                     	;# 
  7569  0693                     	;# 
  7570  0694                     	;# 
  7571  070C                     	;# 
  7572  070D                     	;# 
  7573  070E                     	;# 
  7574  070F                     	;# 
  7575  0710                     	;# 
  7576  0711                     	;# 
  7577  0712                     	;# 
  7578  0713                     	;# 
  7579  0714                     	;# 
  7580  0716                     	;# 
  7581  0717                     	;# 
  7582  0718                     	;# 
  7583  0719                     	;# 
  7584  071A                     	;# 
  7585  071B                     	;# 
  7586  071C                     	;# 
  7587  071D                     	;# 
  7588  071E                     	;# 
  7589  0796                     	;# 
  7590  0797                     	;# 
  7591  0798                     	;# 
  7592  0799                     	;# 
  7593  079A                     	;# 
  7594  079B                     	;# 
  7595  080C                     	;# 
  7596  080D                     	;# 
  7597  080E                     	;# 
  7598  080F                     	;# 
  7599  0810                     	;# 
  7600  0811                     	;# 
  7601  0812                     	;# 
  7602  0813                     	;# 
  7603  0814                     	;# 
  7604  081A                     	;# 
  7605  081B                     	;# 
  7606  081C                     	;# 
  7607  081D                     	;# 
  7608  081E                     	;# 
  7609  081F                     	;# 
  7610  088C                     	;# 
  7611  088D                     	;# 
  7612  088E                     	;# 
  7613  088F                     	;# 
  7614  0890                     	;# 
  7615  0891                     	;# 
  7616  0892                     	;# 
  7617  0893                     	;# 
  7618  0895                     	;# 
  7619  0896                     	;# 
  7620  0897                     	;# 
  7621  0898                     	;# 
  7622  0899                     	;# 
  7623  089A                     	;# 
  7624  089B                     	;# 
  7625  090C                     	;# 
  7626  090E                     	;# 
  7627  090F                     	;# 
  7628  091F                     	;# 
  7629  091F                     	;# 
  7630  098F                     	;# 
  7631  098F                     	;# 
  7632  0990                     	;# 
  7633  0991                     	;# 
  7634  0992                     	;# 
  7635  0993                     	;# 
  7636  0994                     	;# 
  7637  0995                     	;# 
  7638  0996                     	;# 
  7639  0997                     	;# 
  7640  0E0F                     	;# 
  7641  0E10                     	;# 
  7642  0E11                     	;# 
  7643  0E12                     	;# 
  7644  0E13                     	;# 
  7645  0E14                     	;# 
  7646  0E15                     	;# 
  7647  0E16                     	;# 
  7648  0E17                     	;# 
  7649  0E18                     	;# 
  7650  0E19                     	;# 
  7651  0E1A                     	;# 
  7652  0E1B                     	;# 
  7653  0E1C                     	;# 
  7654  0E1D                     	;# 
  7655  0E1E                     	;# 
  7656  0E1F                     	;# 
  7657  0E20                     	;# 
  7658  0E21                     	;# 
  7659  0E22                     	;# 
  7660  0E23                     	;# 
  7661  0E24                     	;# 
  7662  0E25                     	;# 
  7663  0E26                     	;# 
  7664  0E27                     	;# 
  7665  0E28                     	;# 
  7666  0E29                     	;# 
  7667  0E2A                     	;# 
  7668  0E2B                     	;# 
  7669  0E2C                     	;# 
  7670  0E2D                     	;# 
  7671  0E2E                     	;# 
  7672  0E2F                     	;# 
  7673  0E30                     	;# 
  7674  0E31                     	;# 
  7675  0E32                     	;# 
  7676  0E33                     	;# 
  7677  0E34                     	;# 
  7678  0E35                     	;# 
  7679  0E36                     	;# 
  7680  0E37                     	;# 
  7681  0E8F                     	;# 
  7682  0E90                     	;# 
  7683  0E91                     	;# 
  7684  0E92                     	;# 
  7685  0E93                     	;# 
  7686  0E94                     	;# 
  7687  0E95                     	;# 
  7688  0E96                     	;# 
  7689  0E97                     	;# 
  7690  0E9C                     	;# 
  7691  0E9D                     	;# 
  7692  0E9E                     	;# 
  7693  0EA1                     	;# 
  7694  0EA2                     	;# 
  7695  0EA3                     	;# 
  7696  0EA4                     	;# 
  7697  0EA5                     	;# 
  7698  0EA9                     	;# 
  7699  0EAA                     	;# 
  7700  0EAB                     	;# 
  7701  0EAC                     	;# 
  7702  0EB1                     	;# 
  7703  0EB2                     	;# 
  7704  0EB3                     	;# 
  7705  0EB8                     	;# 
  7706  0EB9                     	;# 
  7707  0EBA                     	;# 
  7708  0EBB                     	;# 
  7709  0EBC                     	;# 
  7710  0EBD                     	;# 
  7711  0EBE                     	;# 
  7712  0EC3                     	;# 
  7713  0EC5                     	;# 
  7714  0EC6                     	;# 
  7715  0EC7                     	;# 
  7716  0EC8                     	;# 
  7717  0EC9                     	;# 
  7718  0ECA                     	;# 
  7719  0ECB                     	;# 
  7720  0ECC                     	;# 
  7721  0F10                     	;# 
  7722  0F11                     	;# 
  7723  0F12                     	;# 
  7724  0F13                     	;# 
  7725  0F14                     	;# 
  7726  0F15                     	;# 
  7727  0F16                     	;# 
  7728  0F17                     	;# 
  7729  0F18                     	;# 
  7730  0F19                     	;# 
  7731  0F1A                     	;# 
  7732  0F1B                     	;# 
  7733  0F1C                     	;# 
  7734  0F1D                     	;# 
  7735  0F1E                     	;# 
  7736  0F1F                     	;# 
  7737  0F20                     	;# 
  7738  0F21                     	;# 
  7739  0F22                     	;# 
  7740  0F23                     	;# 
  7741  0F24                     	;# 
  7742  0F25                     	;# 
  7743  0F26                     	;# 
  7744  0F27                     	;# 
  7745  0F28                     	;# 
  7746  0F29                     	;# 
  7747  0F2A                     	;# 
  7748  0F2B                     	;# 
  7749  0F2C                     	;# 
  7750  0F2D                     	;# 
  7751  0F2E                     	;# 
  7752  0F2F                     	;# 
  7753  0F30                     	;# 
  7754  0F31                     	;# 
  7755  0F32                     	;# 
  7756  0F38                     	;# 
  7757  0F39                     	;# 
  7758  0F3A                     	;# 
  7759  0F3B                     	;# 
  7760  0F3C                     	;# 
  7761  0F3D                     	;# 
  7762  0F3E                     	;# 
  7763  0F3F                     	;# 
  7764  0F40                     	;# 
  7765  0F41                     	;# 
  7766  0F43                     	;# 
  7767  0F44                     	;# 
  7768  0F45                     	;# 
  7769  0F46                     	;# 
  7770  0F47                     	;# 
  7771  0F48                     	;# 
  7772  0F49                     	;# 
  7773  0F4A                     	;# 
  7774  0F4B                     	;# 
  7775  0F4C                     	;# 
  7776  0F4E                     	;# 
  7777  0F4F                     	;# 
  7778  0F50                     	;# 
  7779  0F51                     	;# 
  7780  0F52                     	;# 
  7781  0F53                     	;# 
  7782  0F54                     	;# 
  7783  0F55                     	;# 
  7784  0F56                     	;# 
  7785  0F57                     	;# 
  7786  0F59                     	;# 
  7787  0F5A                     	;# 
  7788  0F5B                     	;# 
  7789  0F5C                     	;# 
  7790  0F5D                     	;# 
  7791  0F61                     	;# 
  7792  0F62                     	;# 
  7793  0F64                     	;# 
  7794  0F65                     	;# 
  7795  0F66                     	;# 
  7796  0F67                     	;# 
  7797  0F68                     	;# 
  7798  0F69                     	;# 
  7799  0F6A                     	;# 
  7800  0F6B                     	;# 
  7801  0F6C                     	;# 
  7802  0F6D                     	;# 
  7803  0FE4                     	;# 
  7804  0FE5                     	;# 
  7805  0FE6                     	;# 
  7806  0FE7                     	;# 
  7807  0FE8                     	;# 
  7808  0FE9                     	;# 
  7809  0FEA                     	;# 
  7810  0FEB                     	;# 
  7811  0FED                     	;# 
  7812  0FEE                     	;# 
  7813  0FEF                     	;# 
  7814  0000                     	;# 
  7815  0001                     	;# 
  7816  0002                     	;# 
  7817  0003                     	;# 
  7818  0004                     	;# 
  7819  0005                     	;# 
  7820  0006                     	;# 
  7821  0007                     	;# 
  7822  0008                     	;# 
  7823  0009                     	;# 
  7824  000A                     	;# 
  7825  000B                     	;# 
  7826  000C                     	;# 
  7827  000D                     	;# 
  7828  000E                     	;# 
  7829  000F                     	;# 
  7830  0010                     	;# 
  7831  0011                     	;# 
  7832  0012                     	;# 
  7833  0013                     	;# 
  7834  0014                     	;# 
  7835  0015                     	;# 
  7836  0016                     	;# 
  7837  0017                     	;# 
  7838  0018                     	;# 
  7839  0019                     	;# 
  7840  001A                     	;# 
  7841  001C                     	;# 
  7842  001C                     	;# 
  7843  001D                     	;# 
  7844  001D                     	;# 
  7845  001E                     	;# 
  7846  001F                     	;# 
  7847  008C                     	;# 
  7848  008C                     	;# 
  7849  008D                     	;# 
  7850  008E                     	;# 
  7851  008E                     	;# 
  7852  008F                     	;# 
  7853  0090                     	;# 
  7854  0090                     	;# 
  7855  0091                     	;# 
  7856  0093                     	;# 
  7857  0094                     	;# 
  7858  0095                     	;# 
  7859  0096                     	;# 
  7860  0097                     	;# 
  7861  0098                     	;# 
  7862  0099                     	;# 
  7863  009A                     	;# 
  7864  009B                     	;# 
  7865  009C                     	;# 
  7866  009D                     	;# 
  7867  009E                     	;# 
  7868  010C                     	;# 
  7869  010D                     	;# 
  7870  010E                     	;# 
  7871  010E                     	;# 
  7872  010F                     	;# 
  7873  0110                     	;# 
  7874  0110                     	;# 
  7875  0111                     	;# 
  7876  0112                     	;# 
  7877  0112                     	;# 
  7878  0113                     	;# 
  7879  0114                     	;# 
  7880  0114                     	;# 
  7881  0115                     	;# 
  7882  0116                     	;# 
  7883  0116                     	;# 
  7884  0117                     	;# 
  7885  0119                     	;# 
  7886  0119                     	;# 
  7887  0119                     	;# 
  7888  011A                     	;# 
  7889  011A                     	;# 
  7890  011A                     	;# 
  7891  011B                     	;# 
  7892  011B                     	;# 
  7893  011B                     	;# 
  7894  011B                     	;# 
  7895  011B                     	;# 
  7896  011C                     	;# 
  7897  011C                     	;# 
  7898  011C                     	;# 
  7899  011D                     	;# 
  7900  011D                     	;# 
  7901  011D                     	;# 
  7902  011E                     	;# 
  7903  011E                     	;# 
  7904  011E                     	;# 
  7905  011F                     	;# 
  7906  011F                     	;# 
  7907  011F                     	;# 
  7908  011F                     	;# 
  7909  011F                     	;# 
  7910  018C                     	;# 
  7911  018D                     	;# 
  7912  018E                     	;# 
  7913  018F                     	;# 
  7914  0190                     	;# 
  7915  0191                     	;# 
  7916  0192                     	;# 
  7917  0196                     	;# 
  7918  0197                     	;# 
  7919  0198                     	;# 
  7920  0199                     	;# 
  7921  019A                     	;# 
  7922  019B                     	;# 
  7923  019C                     	;# 
  7924  020C                     	;# 
  7925  020C                     	;# 
  7926  020D                     	;# 
  7927  020E                     	;# 
  7928  020F                     	;# 
  7929  020F                     	;# 
  7930  0210                     	;# 
  7931  0210                     	;# 
  7932  0211                     	;# 
  7933  0211                     	;# 
  7934  0212                     	;# 
  7935  0212                     	;# 
  7936  0213                     	;# 
  7937  0214                     	;# 
  7938  0215                     	;# 
  7939  0215                     	;# 
  7940  0216                     	;# 
  7941  0216                     	;# 
  7942  0217                     	;# 
  7943  0217                     	;# 
  7944  0218                     	;# 
  7945  0218                     	;# 
  7946  0219                     	;# 
  7947  021A                     	;# 
  7948  021B                     	;# 
  7949  021B                     	;# 
  7950  021C                     	;# 
  7951  021C                     	;# 
  7952  021D                     	;# 
  7953  021D                     	;# 
  7954  021E                     	;# 
  7955  021F                     	;# 
  7956  028C                     	;# 
  7957  028C                     	;# 
  7958  028D                     	;# 
  7959  028D                     	;# 
  7960  028E                     	;# 
  7961  028F                     	;# 
  7962  0290                     	;# 
  7963  0290                     	;# 
  7964  0291                     	;# 
  7965  0292                     	;# 
  7966  0292                     	;# 
  7967  0293                     	;# 
  7968  0293                     	;# 
  7969  0294                     	;# 
  7970  0295                     	;# 
  7971  0296                     	;# 
  7972  0296                     	;# 
  7973  0297                     	;# 
  7974  0298                     	;# 
  7975  0298                     	;# 
  7976  0299                     	;# 
  7977  0299                     	;# 
  7978  029A                     	;# 
  7979  029B                     	;# 
  7980  029C                     	;# 
  7981  029C                     	;# 
  7982  029D                     	;# 
  7983  030C                     	;# 
  7984  030C                     	;# 
  7985  030D                     	;# 
  7986  030E                     	;# 
  7987  030F                     	;# 
  7988  0310                     	;# 
  7989  0310                     	;# 
  7990  0311                     	;# 
  7991  0312                     	;# 
  7992  0313                     	;# 
  7993  0314                     	;# 
  7994  0314                     	;# 
  7995  0315                     	;# 
  7996  0316                     	;# 
  7997  0317                     	;# 
  7998  0318                     	;# 
  7999  0318                     	;# 
  8000  0319                     	;# 
  8001  031A                     	;# 
  8002  031B                     	;# 
  8003  031C                     	;# 
  8004  031C                     	;# 
  8005  031D                     	;# 
  8006  031E                     	;# 
  8007  031F                     	;# 
  8008  038C                     	;# 
  8009  038C                     	;# 
  8010  038D                     	;# 
  8011  038E                     	;# 
  8012  0390                     	;# 
  8013  0390                     	;# 
  8014  0391                     	;# 
  8015  0392                     	;# 
  8016  040C                     	;# 
  8017  040D                     	;# 
  8018  040E                     	;# 
  8019  040F                     	;# 
  8020  0410                     	;# 
  8021  0411                     	;# 
  8022  0416                     	;# 
  8023  0416                     	;# 
  8024  0417                     	;# 
  8025  0418                     	;# 
  8026  0418                     	;# 
  8027  0419                     	;# 
  8028  041A                     	;# 
  8029  041A                     	;# 
  8030  041B                     	;# 
  8031  041C                     	;# 
  8032  041C                     	;# 
  8033  041D                     	;# 
  8034  041E                     	;# 
  8035  041F                     	;# 
  8036  048C                     	;# 
  8037  048C                     	;# 
  8038  048D                     	;# 
  8039  048E                     	;# 
  8040  048F                     	;# 
  8041  048F                     	;# 
  8042  0490                     	;# 
  8043  0491                     	;# 
  8044  0492                     	;# 
  8045  0492                     	;# 
  8046  0493                     	;# 
  8047  0494                     	;# 
  8048  0495                     	;# 
  8049  0495                     	;# 
  8050  0496                     	;# 
  8051  0497                     	;# 
  8052  0498                     	;# 
  8053  0499                     	;# 
  8054  049A                     	;# 
  8055  049B                     	;# 
  8056  049C                     	;# 
  8057  049D                     	;# 
  8058  050C                     	;# 
  8059  050C                     	;# 
  8060  050D                     	;# 
  8061  050E                     	;# 
  8062  050F                     	;# 
  8063  050F                     	;# 
  8064  0510                     	;# 
  8065  0511                     	;# 
  8066  0512                     	;# 
  8067  0512                     	;# 
  8068  0513                     	;# 
  8069  0514                     	;# 
  8070  0515                     	;# 
  8071  0515                     	;# 
  8072  0516                     	;# 
  8073  0517                     	;# 
  8074  0518                     	;# 
  8075  0519                     	;# 
  8076  051A                     	;# 
  8077  051B                     	;# 
  8078  051C                     	;# 
  8079  051D                     	;# 
  8080  058C                     	;# 
  8081  058C                     	;# 
  8082  058D                     	;# 
  8083  058E                     	;# 
  8084  058F                     	;# 
  8085  058F                     	;# 
  8086  0590                     	;# 
  8087  0591                     	;# 
  8088  0592                     	;# 
  8089  0593                     	;# 
  8090  060C                     	;# 
  8091  060D                     	;# 
  8092  060E                     	;# 
  8093  060F                     	;# 
  8094  0610                     	;# 
  8095  0611                     	;# 
  8096  0612                     	;# 
  8097  0613                     	;# 
  8098  0614                     	;# 
  8099  0616                     	;# 
  8100  0617                     	;# 
  8101  0618                     	;# 
  8102  0619                     	;# 
  8103  061A                     	;# 
  8104  061B                     	;# 
  8105  061C                     	;# 
  8106  061D                     	;# 
  8107  061E                     	;# 
  8108  068C                     	;# 
  8109  068D                     	;# 
  8110  068E                     	;# 
  8111  068F                     	;# 
  8112  0690                     	;# 
  8113  0691                     	;# 
  8114  0692                     	;# 
  8115  0693                     	;# 
  8116  0694                     	;# 
  8117  070C                     	;# 
  8118  070D                     	;# 
  8119  070E                     	;# 
  8120  070F                     	;# 
  8121  0710                     	;# 
  8122  0711                     	;# 
  8123  0712                     	;# 
  8124  0713                     	;# 
  8125  0714                     	;# 
  8126  0716                     	;# 
  8127  0717                     	;# 
  8128  0718                     	;# 
  8129  0719                     	;# 
  8130  071A                     	;# 
  8131  071B                     	;# 
  8132  071C                     	;# 
  8133  071D                     	;# 
  8134  071E                     	;# 
  8135  0796                     	;# 
  8136  0797                     	;# 
  8137  0798                     	;# 
  8138  0799                     	;# 
  8139  079A                     	;# 
  8140  079B                     	;# 
  8141  080C                     	;# 
  8142  080D                     	;# 
  8143  080E                     	;# 
  8144  080F                     	;# 
  8145  0810                     	;# 
  8146  0811                     	;# 
  8147  0812                     	;# 
  8148  0813                     	;# 
  8149  0814                     	;# 
  8150  081A                     	;# 
  8151  081B                     	;# 
  8152  081C                     	;# 
  8153  081D                     	;# 
  8154  081E                     	;# 
  8155  081F                     	;# 
  8156  088C                     	;# 
  8157  088D                     	;# 
  8158  088E                     	;# 
  8159  088F                     	;# 
  8160  0890                     	;# 
  8161  0891                     	;# 
  8162  0892                     	;# 
  8163  0893                     	;# 
  8164  0895                     	;# 
  8165  0896                     	;# 
  8166  0897                     	;# 
  8167  0898                     	;# 
  8168  0899                     	;# 
  8169  089A                     	;# 
  8170  089B                     	;# 
  8171  090C                     	;# 
  8172  090E                     	;# 
  8173  090F                     	;# 
  8174  091F                     	;# 
  8175  091F                     	;# 
  8176  098F                     	;# 
  8177  098F                     	;# 
  8178  0990                     	;# 
  8179  0991                     	;# 
  8180  0992                     	;# 
  8181  0993                     	;# 
  8182  0994                     	;# 
  8183  0995                     	;# 
  8184  0996                     	;# 
  8185  0997                     	;# 
  8186  0E0F                     	;# 
  8187  0E10                     	;# 
  8188  0E11                     	;# 
  8189  0E12                     	;# 
  8190  0E13                     	;# 
  8191  0E14                     	;# 
  8192  0E15                     	;# 
  8193  0E16                     	;# 
  8194  0E17                     	;# 
  8195  0E18                     	;# 
  8196  0E19                     	;# 
  8197  0E1A                     	;# 
  8198  0E1B                     	;# 
  8199  0E1C                     	;# 
  8200  0E1D                     	;# 
  8201  0E1E                     	;# 
  8202  0E1F                     	;# 
  8203  0E20                     	;# 
  8204  0E21                     	;# 
  8205  0E22                     	;# 
  8206  0E23                     	;# 
  8207  0E24                     	;# 
  8208  0E25                     	;# 
  8209  0E26                     	;# 
  8210  0E27                     	;# 
  8211  0E28                     	;# 
  8212  0E29                     	;# 
  8213  0E2A                     	;# 
  8214  0E2B                     	;# 
  8215  0E2C                     	;# 
  8216  0E2D                     	;# 
  8217  0E2E                     	;# 
  8218  0E2F                     	;# 
  8219  0E30                     	;# 
  8220  0E31                     	;# 
  8221  0E32                     	;# 
  8222  0E33                     	;# 
  8223  0E34                     	;# 
  8224  0E35                     	;# 
  8225  0E36                     	;# 
  8226  0E37                     	;# 
  8227  0E8F                     	;# 
  8228  0E90                     	;# 
  8229  0E91                     	;# 
  8230  0E92                     	;# 
  8231  0E93                     	;# 
  8232  0E94                     	;# 
  8233  0E95                     	;# 
  8234  0E96                     	;# 
  8235  0E97                     	;# 
  8236  0E9C                     	;# 
  8237  0E9D                     	;# 
  8238  0E9E                     	;# 
  8239  0EA1                     	;# 
  8240  0EA2                     	;# 
  8241  0EA3                     	;# 
  8242  0EA4                     	;# 
  8243  0EA5                     	;# 
  8244  0EA9                     	;# 
  8245  0EAA                     	;# 
  8246  0EAB                     	;# 
  8247  0EAC                     	;# 
  8248  0EB1                     	;# 
  8249  0EB2                     	;# 
  8250  0EB3                     	;# 
  8251  0EB8                     	;# 
  8252  0EB9                     	;# 
  8253  0EBA                     	;# 
  8254  0EBB                     	;# 
  8255  0EBC                     	;# 
  8256  0EBD                     	;# 
  8257  0EBE                     	;# 
  8258  0EC3                     	;# 
  8259  0EC5                     	;# 
  8260  0EC6                     	;# 
  8261  0EC7                     	;# 
  8262  0EC8                     	;# 
  8263  0EC9                     	;# 
  8264  0ECA                     	;# 
  8265  0ECB                     	;# 
  8266  0ECC                     	;# 
  8267  0F10                     	;# 
  8268  0F11                     	;# 
  8269  0F12                     	;# 
  8270  0F13                     	;# 
  8271  0F14                     	;# 
  8272  0F15                     	;# 
  8273  0F16                     	;# 
  8274  0F17                     	;# 
  8275  0F18                     	;# 
  8276  0F19                     	;# 
  8277  0F1A                     	;# 
  8278  0F1B                     	;# 
  8279  0F1C                     	;# 
  8280  0F1D                     	;# 
  8281  0F1E                     	;# 
  8282  0F1F                     	;# 
  8283  0F20                     	;# 
  8284  0F21                     	;# 
  8285  0F22                     	;# 
  8286  0F23                     	;# 
  8287  0F24                     	;# 
  8288  0F25                     	;# 
  8289  0F26                     	;# 
  8290  0F27                     	;# 
  8291  0F28                     	;# 
  8292  0F29                     	;# 
  8293  0F2A                     	;# 
  8294  0F2B                     	;# 
  8295  0F2C                     	;# 
  8296  0F2D                     	;# 
  8297  0F2E                     	;# 
  8298  0F2F                     	;# 
  8299  0F30                     	;# 
  8300  0F31                     	;# 
  8301  0F32                     	;# 
  8302  0F38                     	;# 
  8303  0F39                     	;# 
  8304  0F3A                     	;# 
  8305  0F3B                     	;# 
  8306  0F3C                     	;# 
  8307  0F3D                     	;# 
  8308  0F3E                     	;# 
  8309  0F3F                     	;# 
  8310  0F40                     	;# 
  8311  0F41                     	;# 
  8312  0F43                     	;# 
  8313  0F44                     	;# 
  8314  0F45                     	;# 
  8315  0F46                     	;# 
  8316  0F47                     	;# 
  8317  0F48                     	;# 
  8318  0F49                     	;# 
  8319  0F4A                     	;# 
  8320  0F4B                     	;# 
  8321  0F4C                     	;# 
  8322  0F4E                     	;# 
  8323  0F4F                     	;# 
  8324  0F50                     	;# 
  8325  0F51                     	;# 
  8326  0F52                     	;# 
  8327  0F53                     	;# 
  8328  0F54                     	;# 
  8329  0F55                     	;# 
  8330  0F56                     	;# 
  8331  0F57                     	;# 
  8332  0F59                     	;# 
  8333  0F5A                     	;# 
  8334  0F5B                     	;# 
  8335  0F5C                     	;# 
  8336  0F5D                     	;# 
  8337  0F61                     	;# 
  8338  0F62                     	;# 
  8339  0F64                     	;# 
  8340  0F65                     	;# 
  8341  0F66                     	;# 
  8342  0F67                     	;# 
  8343  0F68                     	;# 
  8344  0F69                     	;# 
  8345  0F6A                     	;# 
  8346  0F6B                     	;# 
  8347  0F6C                     	;# 
  8348  0F6D                     	;# 
  8349  0FE4                     	;# 
  8350  0FE5                     	;# 
  8351  0FE6                     	;# 
  8352  0FE7                     	;# 
  8353  0FE8                     	;# 
  8354  0FE9                     	;# 
  8355  0FEA                     	;# 
  8356  0FEB                     	;# 
  8357  0FED                     	;# 
  8358  0FEE                     	;# 
  8359  0FEF                     	;# 
  8360  0000                     	;# 
  8361  0001                     	;# 
  8362  0002                     	;# 
  8363  0003                     	;# 
  8364  0004                     	;# 
  8365  0005                     	;# 
  8366  0006                     	;# 
  8367  0007                     	;# 
  8368  0008                     	;# 
  8369  0009                     	;# 
  8370  000A                     	;# 
  8371  000B                     	;# 
  8372  000C                     	;# 
  8373  000D                     	;# 
  8374  000E                     	;# 
  8375  000F                     	;# 
  8376  0010                     	;# 
  8377  0011                     	;# 
  8378  0012                     	;# 
  8379  0013                     	;# 
  8380  0014                     	;# 
  8381  0015                     	;# 
  8382  0016                     	;# 
  8383  0017                     	;# 
  8384  0018                     	;# 
  8385  0019                     	;# 
  8386  001A                     	;# 
  8387  001C                     	;# 
  8388  001C                     	;# 
  8389  001D                     	;# 
  8390  001D                     	;# 
  8391  001E                     	;# 
  8392  001F                     	;# 
  8393  008C                     	;# 
  8394  008C                     	;# 
  8395  008D                     	;# 
  8396  008E                     	;# 
  8397  008E                     	;# 
  8398  008F                     	;# 
  8399  0090                     	;# 
  8400  0090                     	;# 
  8401  0091                     	;# 
  8402  0093                     	;# 
  8403  0094                     	;# 
  8404  0095                     	;# 
  8405  0096                     	;# 
  8406  0097                     	;# 
  8407  0098                     	;# 
  8408  0099                     	;# 
  8409  009A                     	;# 
  8410  009B                     	;# 
  8411  009C                     	;# 
  8412  009D                     	;# 
  8413  009E                     	;# 
  8414  010C                     	;# 
  8415  010D                     	;# 
  8416  010E                     	;# 
  8417  010E                     	;# 
  8418  010F                     	;# 
  8419  0110                     	;# 
  8420  0110                     	;# 
  8421  0111                     	;# 
  8422  0112                     	;# 
  8423  0112                     	;# 
  8424  0113                     	;# 
  8425  0114                     	;# 
  8426  0114                     	;# 
  8427  0115                     	;# 
  8428  0116                     	;# 
  8429  0116                     	;# 
  8430  0117                     	;# 
  8431  0119                     	;# 
  8432  0119                     	;# 
  8433  0119                     	;# 
  8434  011A                     	;# 
  8435  011A                     	;# 
  8436  011A                     	;# 
  8437  011B                     	;# 
  8438  011B                     	;# 
  8439  011B                     	;# 
  8440  011B                     	;# 
  8441  011B                     	;# 
  8442  011C                     	;# 
  8443  011C                     	;# 
  8444  011C                     	;# 
  8445  011D                     	;# 
  8446  011D                     	;# 
  8447  011D                     	;# 
  8448  011E                     	;# 
  8449  011E                     	;# 
  8450  011E                     	;# 
  8451  011F                     	;# 
  8452  011F                     	;# 
  8453  011F                     	;# 
  8454  011F                     	;# 
  8455  011F                     	;# 
  8456  018C                     	;# 
  8457  018D                     	;# 
  8458  018E                     	;# 
  8459  018F                     	;# 
  8460  0190                     	;# 
  8461  0191                     	;# 
  8462  0192                     	;# 
  8463  0196                     	;# 
  8464  0197                     	;# 
  8465  0198                     	;# 
  8466  0199                     	;# 
  8467  019A                     	;# 
  8468  019B                     	;# 
  8469  019C                     	;# 
  8470  020C                     	;# 
  8471  020C                     	;# 
  8472  020D                     	;# 
  8473  020E                     	;# 
  8474  020F                     	;# 
  8475  020F                     	;# 
  8476  0210                     	;# 
  8477  0210                     	;# 
  8478  0211                     	;# 
  8479  0211                     	;# 
  8480  0212                     	;# 
  8481  0212                     	;# 
  8482  0213                     	;# 
  8483  0214                     	;# 
  8484  0215                     	;# 
  8485  0215                     	;# 
  8486  0216                     	;# 
  8487  0216                     	;# 
  8488  0217                     	;# 
  8489  0217                     	;# 
  8490  0218                     	;# 
  8491  0218                     	;# 
  8492  0219                     	;# 
  8493  021A                     	;# 
  8494  021B                     	;# 
  8495  021B                     	;# 
  8496  021C                     	;# 
  8497  021C                     	;# 
  8498  021D                     	;# 
  8499  021D                     	;# 
  8500  021E                     	;# 
  8501  021F                     	;# 
  8502  028C                     	;# 
  8503  028C                     	;# 
  8504  028D                     	;# 
  8505  028D                     	;# 
  8506  028E                     	;# 
  8507  028F                     	;# 
  8508  0290                     	;# 
  8509  0290                     	;# 
  8510  0291                     	;# 
  8511  0292                     	;# 
  8512  0292                     	;# 
  8513  0293                     	;# 
  8514  0293                     	;# 
  8515  0294                     	;# 
  8516  0295                     	;# 
  8517  0296                     	;# 
  8518  0296                     	;# 
  8519  0297                     	;# 
  8520  0298                     	;# 
  8521  0298                     	;# 
  8522  0299                     	;# 
  8523  0299                     	;# 
  8524  029A                     	;# 
  8525  029B                     	;# 
  8526  029C                     	;# 
  8527  029C                     	;# 
  8528  029D                     	;# 
  8529  030C                     	;# 
  8530  030C                     	;# 
  8531  030D                     	;# 
  8532  030E                     	;# 
  8533  030F                     	;# 
  8534  0310                     	;# 
  8535  0310                     	;# 
  8536  0311                     	;# 
  8537  0312                     	;# 
  8538  0313                     	;# 
  8539  0314                     	;# 
  8540  0314                     	;# 
  8541  0315                     	;# 
  8542  0316                     	;# 
  8543  0317                     	;# 
  8544  0318                     	;# 
  8545  0318                     	;# 
  8546  0319                     	;# 
  8547  031A                     	;# 
  8548  031B                     	;# 
  8549  031C                     	;# 
  8550  031C                     	;# 
  8551  031D                     	;# 
  8552  031E                     	;# 
  8553  031F                     	;# 
  8554  038C                     	;# 
  8555  038C                     	;# 
  8556  038D                     	;# 
  8557  038E                     	;# 
  8558  0390                     	;# 
  8559  0390                     	;# 
  8560  0391                     	;# 
  8561  0392                     	;# 
  8562  040C                     	;# 
  8563  040D                     	;# 
  8564  040E                     	;# 
  8565  040F                     	;# 
  8566  0410                     	;# 
  8567  0411                     	;# 
  8568  0416                     	;# 
  8569  0416                     	;# 
  8570  0417                     	;# 
  8571  0418                     	;# 
  8572  0418                     	;# 
  8573  0419                     	;# 
  8574  041A                     	;# 
  8575  041A                     	;# 
  8576  041B                     	;# 
  8577  041C                     	;# 
  8578  041C                     	;# 
  8579  041D                     	;# 
  8580  041E                     	;# 
  8581  041F                     	;# 
  8582  048C                     	;# 
  8583  048C                     	;# 
  8584  048D                     	;# 
  8585  048E                     	;# 
  8586  048F                     	;# 
  8587  048F                     	;# 
  8588  0490                     	;# 
  8589  0491                     	;# 
  8590  0492                     	;# 
  8591  0492                     	;# 
  8592  0493                     	;# 
  8593  0494                     	;# 
  8594  0495                     	;# 
  8595  0495                     	;# 
  8596  0496                     	;# 
  8597  0497                     	;# 
  8598  0498                     	;# 
  8599  0499                     	;# 
  8600  049A                     	;# 
  8601  049B                     	;# 
  8602  049C                     	;# 
  8603  049D                     	;# 
  8604  050C                     	;# 
  8605  050C                     	;# 
  8606  050D                     	;# 
  8607  050E                     	;# 
  8608  050F                     	;# 
  8609  050F                     	;# 
  8610  0510                     	;# 
  8611  0511                     	;# 
  8612  0512                     	;# 
  8613  0512                     	;# 
  8614  0513                     	;# 
  8615  0514                     	;# 
  8616  0515                     	;# 
  8617  0515                     	;# 
  8618  0516                     	;# 
  8619  0517                     	;# 
  8620  0518                     	;# 
  8621  0519                     	;# 
  8622  051A                     	;# 
  8623  051B                     	;# 
  8624  051C                     	;# 
  8625  051D                     	;# 
  8626  058C                     	;# 
  8627  058C                     	;# 
  8628  058D                     	;# 
  8629  058E                     	;# 
  8630  058F                     	;# 
  8631  058F                     	;# 
  8632  0590                     	;# 
  8633  0591                     	;# 
  8634  0592                     	;# 
  8635  0593                     	;# 
  8636  060C                     	;# 
  8637  060D                     	;# 
  8638  060E                     	;# 
  8639  060F                     	;# 
  8640  0610                     	;# 
  8641  0611                     	;# 
  8642  0612                     	;# 
  8643  0613                     	;# 
  8644  0614                     	;# 
  8645  0616                     	;# 
  8646  0617                     	;# 
  8647  0618                     	;# 
  8648  0619                     	;# 
  8649  061A                     	;# 
  8650  061B                     	;# 
  8651  061C                     	;# 
  8652  061D                     	;# 
  8653  061E                     	;# 
  8654  068C                     	;# 
  8655  068D                     	;# 
  8656  068E                     	;# 
  8657  068F                     	;# 
  8658  0690                     	;# 
  8659  0691                     	;# 
  8660  0692                     	;# 
  8661  0693                     	;# 
  8662  0694                     	;# 
  8663  070C                     	;# 
  8664  070D                     	;# 
  8665  070E                     	;# 
  8666  070F                     	;# 
  8667  0710                     	;# 
  8668  0711                     	;# 
  8669  0712                     	;# 
  8670  0713                     	;# 
  8671  0714                     	;# 
  8672  0716                     	;# 
  8673  0717                     	;# 
  8674  0718                     	;# 
  8675  0719                     	;# 
  8676  071A                     	;# 
  8677  071B                     	;# 
  8678  071C                     	;# 
  8679  071D                     	;# 
  8680  071E                     	;# 
  8681  0796                     	;# 
  8682  0797                     	;# 
  8683  0798                     	;# 
  8684  0799                     	;# 
  8685  079A                     	;# 
  8686  079B                     	;# 
  8687  080C                     	;# 
  8688  080D                     	;# 
  8689  080E                     	;# 
  8690  080F                     	;# 
  8691  0810                     	;# 
  8692  0811                     	;# 
  8693  0812                     	;# 
  8694  0813                     	;# 
  8695  0814                     	;# 
  8696  081A                     	;# 
  8697  081B                     	;# 
  8698  081C                     	;# 
  8699  081D                     	;# 
  8700  081E                     	;# 
  8701  081F                     	;# 
  8702  088C                     	;# 
  8703  088D                     	;# 
  8704  088E                     	;# 
  8705  088F                     	;# 
  8706  0890                     	;# 
  8707  0891                     	;# 
  8708  0892                     	;# 
  8709  0893                     	;# 
  8710  0895                     	;# 
  8711  0896                     	;# 
  8712  0897                     	;# 
  8713  0898                     	;# 
  8714  0899                     	;# 
  8715  089A                     	;# 
  8716  089B                     	;# 
  8717  090C                     	;# 
  8718  090E                     	;# 
  8719  090F                     	;# 
  8720  091F                     	;# 
  8721  091F                     	;# 
  8722  098F                     	;# 
  8723  098F                     	;# 
  8724  0990                     	;# 
  8725  0991                     	;# 
  8726  0992                     	;# 
  8727  0993                     	;# 
  8728  0994                     	;# 
  8729  0995                     	;# 
  8730  0996                     	;# 
  8731  0997                     	;# 
  8732  0E0F                     	;# 
  8733  0E10                     	;# 
  8734  0E11                     	;# 
  8735  0E12                     	;# 
  8736  0E13                     	;# 
  8737  0E14                     	;# 
  8738  0E15                     	;# 
  8739  0E16                     	;# 
  8740  0E17                     	;# 
  8741  0E18                     	;# 
  8742  0E19                     	;# 
  8743  0E1A                     	;# 
  8744  0E1B                     	;# 
  8745  0E1C                     	;# 
  8746  0E1D                     	;# 
  8747  0E1E                     	;# 
  8748  0E1F                     	;# 
  8749  0E20                     	;# 
  8750  0E21                     	;# 
  8751  0E22                     	;# 
  8752  0E23                     	;# 
  8753  0E24                     	;# 
  8754  0E25                     	;# 
  8755  0E26                     	;# 
  8756  0E27                     	;# 
  8757  0E28                     	;# 
  8758  0E29                     	;# 
  8759  0E2A                     	;# 
  8760  0E2B                     	;# 
  8761  0E2C                     	;# 
  8762  0E2D                     	;# 
  8763  0E2E                     	;# 
  8764  0E2F                     	;# 
  8765  0E30                     	;# 
  8766  0E31                     	;# 
  8767  0E32                     	;# 
  8768  0E33                     	;# 
  8769  0E34                     	;# 
  8770  0E35                     	;# 
  8771  0E36                     	;# 
  8772  0E37                     	;# 
  8773  0E8F                     	;# 
  8774  0E90                     	;# 
  8775  0E91                     	;# 
  8776  0E92                     	;# 
  8777  0E93                     	;# 
  8778  0E94                     	;# 
  8779  0E95                     	;# 
  8780  0E96                     	;# 
  8781  0E97                     	;# 
  8782  0E9C                     	;# 
  8783  0E9D                     	;# 
  8784  0E9E                     	;# 
  8785  0EA1                     	;# 
  8786  0EA2                     	;# 
  8787  0EA3                     	;# 
  8788  0EA4                     	;# 
  8789  0EA5                     	;# 
  8790  0EA9                     	;# 
  8791  0EAA                     	;# 
  8792  0EAB                     	;# 
  8793  0EAC                     	;# 
  8794  0EB1                     	;# 
  8795  0EB2                     	;# 
  8796  0EB3                     	;# 
  8797  0EB8                     	;# 
  8798  0EB9                     	;# 
  8799  0EBA                     	;# 
  8800  0EBB                     	;# 
  8801  0EBC                     	;# 
  8802  0EBD                     	;# 
  8803  0EBE                     	;# 
  8804  0EC3                     	;# 
  8805  0EC5                     	;# 
  8806  0EC6                     	;# 
  8807  0EC7                     	;# 
  8808  0EC8                     	;# 
  8809  0EC9                     	;# 
  8810  0ECA                     	;# 
  8811  0ECB                     	;# 
  8812  0ECC                     	;# 
  8813  0F10                     	;# 
  8814  0F11                     	;# 
  8815  0F12                     	;# 
  8816  0F13                     	;# 
  8817  0F14                     	;# 
  8818  0F15                     	;# 
  8819  0F16                     	;# 
  8820  0F17                     	;# 
  8821  0F18                     	;# 
  8822  0F19                     	;# 
  8823  0F1A                     	;# 
  8824  0F1B                     	;# 
  8825  0F1C                     	;# 
  8826  0F1D                     	;# 
  8827  0F1E                     	;# 
  8828  0F1F                     	;# 
  8829  0F20                     	;# 
  8830  0F21                     	;# 
  8831  0F22                     	;# 
  8832  0F23                     	;# 
  8833  0F24                     	;# 
  8834  0F25                     	;# 
  8835  0F26                     	;# 
  8836  0F27                     	;# 
  8837  0F28                     	;# 
  8838  0F29                     	;# 
  8839  0F2A                     	;# 
  8840  0F2B                     	;# 
  8841  0F2C                     	;# 
  8842  0F2D                     	;# 
  8843  0F2E                     	;# 
  8844  0F2F                     	;# 
  8845  0F30                     	;# 
  8846  0F31                     	;# 
  8847  0F32                     	;# 
  8848  0F38                     	;# 
  8849  0F39                     	;# 
  8850  0F3A                     	;# 
  8851  0F3B                     	;# 
  8852  0F3C                     	;# 
  8853  0F3D                     	;# 
  8854  0F3E                     	;# 
  8855  0F3F                     	;# 
  8856  0F40                     	;# 
  8857  0F41                     	;# 
  8858  0F43                     	;# 
  8859  0F44                     	;# 
  8860  0F45                     	;# 
  8861  0F46                     	;# 
  8862  0F47                     	;# 
  8863  0F48                     	;# 
  8864  0F49                     	;# 
  8865  0F4A                     	;# 
  8866  0F4B                     	;# 
  8867  0F4C                     	;# 
  8868  0F4E                     	;# 
  8869  0F4F                     	;# 
  8870  0F50                     	;# 
  8871  0F51                     	;# 
  8872  0F52                     	;# 
  8873  0F53                     	;# 
  8874  0F54                     	;# 
  8875  0F55                     	;# 
  8876  0F56                     	;# 
  8877  0F57                     	;# 
  8878  0F59                     	;# 
  8879  0F5A                     	;# 
  8880  0F5B                     	;# 
  8881  0F5C                     	;# 
  8882  0F5D                     	;# 
  8883  0F61                     	;# 
  8884  0F62                     	;# 
  8885  0F64                     	;# 
  8886  0F65                     	;# 
  8887  0F66                     	;# 
  8888  0F67                     	;# 
  8889  0F68                     	;# 
  8890  0F69                     	;# 
  8891  0F6A                     	;# 
  8892  0F6B                     	;# 
  8893  0F6C                     	;# 
  8894  0F6D                     	;# 
  8895  0FE4                     	;# 
  8896  0FE5                     	;# 
  8897  0FE6                     	;# 
  8898  0FE7                     	;# 
  8899  0FE8                     	;# 
  8900  0FE9                     	;# 
  8901  0FEA                     	;# 
  8902  0FEB                     	;# 
  8903  0FED                     	;# 
  8904  0FEE                     	;# 
  8905  0FEF                     	;# 
  8906  0000                     	;# 
  8907  0001                     	;# 
  8908  0002                     	;# 
  8909  0003                     	;# 
  8910  0004                     	;# 
  8911  0005                     	;# 
  8912  0006                     	;# 
  8913  0007                     	;# 
  8914  0008                     	;# 
  8915  0009                     	;# 
  8916  000A                     	;# 
  8917  000B                     	;# 
  8918  000C                     	;# 
  8919  000D                     	;# 
  8920  000E                     	;# 
  8921  000F                     	;# 
  8922  0010                     	;# 
  8923  0011                     	;# 
  8924  0012                     	;# 
  8925  0013                     	;# 
  8926  0014                     	;# 
  8927  0015                     	;# 
  8928  0016                     	;# 
  8929  0017                     	;# 
  8930  0018                     	;# 
  8931  0019                     	;# 
  8932  001A                     	;# 
  8933  001C                     	;# 
  8934  001C                     	;# 
  8935  001D                     	;# 
  8936  001D                     	;# 
  8937  001E                     	;# 
  8938  001F                     	;# 
  8939  008C                     	;# 
  8940  008C                     	;# 
  8941  008D                     	;# 
  8942  008E                     	;# 
  8943  008E                     	;# 
  8944  008F                     	;# 
  8945  0090                     	;# 
  8946  0090                     	;# 
  8947  0091                     	;# 
  8948  0093                     	;# 
  8949  0094                     	;# 
  8950  0095                     	;# 
  8951  0096                     	;# 
  8952  0097                     	;# 
  8953  0098                     	;# 
  8954  0099                     	;# 
  8955  009A                     	;# 
  8956  009B                     	;# 
  8957  009C                     	;# 
  8958  009D                     	;# 
  8959  009E                     	;# 
  8960  010C                     	;# 
  8961  010D                     	;# 
  8962  010E                     	;# 
  8963  010E                     	;# 
  8964  010F                     	;# 
  8965  0110                     	;# 
  8966  0110                     	;# 
  8967  0111                     	;# 
  8968  0112                     	;# 
  8969  0112                     	;# 
  8970  0113                     	;# 
  8971  0114                     	;# 
  8972  0114                     	;# 
  8973  0115                     	;# 
  8974  0116                     	;# 
  8975  0116                     	;# 
  8976  0117                     	;# 
  8977  0119                     	;# 
  8978  0119                     	;# 
  8979  0119                     	;# 
  8980  011A                     	;# 
  8981  011A                     	;# 
  8982  011A                     	;# 
  8983  011B                     	;# 
  8984  011B                     	;# 
  8985  011B                     	;# 
  8986  011B                     	;# 
  8987  011B                     	;# 
  8988  011C                     	;# 
  8989  011C                     	;# 
  8990  011C                     	;# 
  8991  011D                     	;# 
  8992  011D                     	;# 
  8993  011D                     	;# 
  8994  011E                     	;# 
  8995  011E                     	;# 
  8996  011E                     	;# 
  8997  011F                     	;# 
  8998  011F                     	;# 
  8999  011F                     	;# 
  9000  011F                     	;# 
  9001  011F                     	;# 
  9002  018C                     	;# 
  9003  018D                     	;# 
  9004  018E                     	;# 
  9005  018F                     	;# 
  9006  0190                     	;# 
  9007  0191                     	;# 
  9008  0192                     	;# 
  9009  0196                     	;# 
  9010  0197                     	;# 
  9011  0198                     	;# 
  9012  0199                     	;# 
  9013  019A                     	;# 
  9014  019B                     	;# 
  9015  019C                     	;# 
  9016  020C                     	;# 
  9017  020C                     	;# 
  9018  020D                     	;# 
  9019  020E                     	;# 
  9020  020F                     	;# 
  9021  020F                     	;# 
  9022  0210                     	;# 
  9023  0210                     	;# 
  9024  0211                     	;# 
  9025  0211                     	;# 
  9026  0212                     	;# 
  9027  0212                     	;# 
  9028  0213                     	;# 
  9029  0214                     	;# 
  9030  0215                     	;# 
  9031  0215                     	;# 
  9032  0216                     	;# 
  9033  0216                     	;# 
  9034  0217                     	;# 
  9035  0217                     	;# 
  9036  0218                     	;# 
  9037  0218                     	;# 
  9038  0219                     	;# 
  9039  021A                     	;# 
  9040  021B                     	;# 
  9041  021B                     	;# 
  9042  021C                     	;# 
  9043  021C                     	;# 
  9044  021D                     	;# 
  9045  021D                     	;# 
  9046  021E                     	;# 
  9047  021F                     	;# 
  9048  028C                     	;# 
  9049  028C                     	;# 
  9050  028D                     	;# 
  9051  028D                     	;# 
  9052  028E                     	;# 
  9053  028F                     	;# 
  9054  0290                     	;# 
  9055  0290                     	;# 
  9056  0291                     	;# 
  9057  0292                     	;# 
  9058  0292                     	;# 
  9059  0293                     	;# 
  9060  0293                     	;# 
  9061  0294                     	;# 
  9062  0295                     	;# 
  9063  0296                     	;# 
  9064  0296                     	;# 
  9065  0297                     	;# 
  9066  0298                     	;# 
  9067  0298                     	;# 
  9068  0299                     	;# 
  9069  0299                     	;# 
  9070  029A                     	;# 
  9071  029B                     	;# 
  9072  029C                     	;# 
  9073  029C                     	;# 
  9074  029D                     	;# 
  9075  030C                     	;# 
  9076  030C                     	;# 
  9077  030D                     	;# 
  9078  030E                     	;# 
  9079  030F                     	;# 
  9080  0310                     	;# 
  9081  0310                     	;# 
  9082  0311                     	;# 
  9083  0312                     	;# 
  9084  0313                     	;# 
  9085  0314                     	;# 
  9086  0314                     	;# 
  9087  0315                     	;# 
  9088  0316                     	;# 
  9089  0317                     	;# 
  9090  0318                     	;# 
  9091  0318                     	;# 
  9092  0319                     	;# 
  9093  031A                     	;# 
  9094  031B                     	;# 
  9095  031C                     	;# 
  9096  031C                     	;# 
  9097  031D                     	;# 
  9098  031E                     	;# 
  9099  031F                     	;# 
  9100  038C                     	;# 
  9101  038C                     	;# 
  9102  038D                     	;# 
  9103  038E                     	;# 
  9104  0390                     	;# 
  9105  0390                     	;# 
  9106  0391                     	;# 
  9107  0392                     	;# 
  9108  040C                     	;# 
  9109  040D                     	;# 
  9110  040E                     	;# 
  9111  040F                     	;# 
  9112  0410                     	;# 
  9113  0411                     	;# 
  9114  0416                     	;# 
  9115  0416                     	;# 
  9116  0417                     	;# 
  9117  0418                     	;# 
  9118  0418                     	;# 
  9119  0419                     	;# 
  9120  041A                     	;# 
  9121  041A                     	;# 
  9122  041B                     	;# 
  9123  041C                     	;# 
  9124  041C                     	;# 
  9125  041D                     	;# 
  9126  041E                     	;# 
  9127  041F                     	;# 
  9128  048C                     	;# 
  9129  048C                     	;# 
  9130  048D                     	;# 
  9131  048E                     	;# 
  9132  048F                     	;# 
  9133  048F                     	;# 
  9134  0490                     	;# 
  9135  0491                     	;# 
  9136  0492                     	;# 
  9137  0492                     	;# 
  9138  0493                     	;# 
  9139  0494                     	;# 
  9140  0495                     	;# 
  9141  0495                     	;# 
  9142  0496                     	;# 
  9143  0497                     	;# 
  9144  0498                     	;# 
  9145  0499                     	;# 
  9146  049A                     	;# 
  9147  049B                     	;# 
  9148  049C                     	;# 
  9149  049D                     	;# 
  9150  050C                     	;# 
  9151  050C                     	;# 
  9152  050D                     	;# 
  9153  050E                     	;# 
  9154  050F                     	;# 
  9155  050F                     	;# 
  9156  0510                     	;# 
  9157  0511                     	;# 
  9158  0512                     	;# 
  9159  0512                     	;# 
  9160  0513                     	;# 
  9161  0514                     	;# 
  9162  0515                     	;# 
  9163  0515                     	;# 
  9164  0516                     	;# 
  9165  0517                     	;# 
  9166  0518                     	;# 
  9167  0519                     	;# 
  9168  051A                     	;# 
  9169  051B                     	;# 
  9170  051C                     	;# 
  9171  051D                     	;# 
  9172  058C                     	;# 
  9173  058C                     	;# 
  9174  058D                     	;# 
  9175  058E                     	;# 
  9176  058F                     	;# 
  9177  058F                     	;# 
  9178  0590                     	;# 
  9179  0591                     	;# 
  9180  0592                     	;# 
  9181  0593                     	;# 
  9182  060C                     	;# 
  9183  060D                     	;# 
  9184  060E                     	;# 
  9185  060F                     	;# 
  9186  0610                     	;# 
  9187  0611                     	;# 
  9188  0612                     	;# 
  9189  0613                     	;# 
  9190  0614                     	;# 
  9191  0616                     	;# 
  9192  0617                     	;# 
  9193  0618                     	;# 
  9194  0619                     	;# 
  9195  061A                     	;# 
  9196  061B                     	;# 
  9197  061C                     	;# 
  9198  061D                     	;# 
  9199  061E                     	;# 
  9200  068C                     	;# 
  9201  068D                     	;# 
  9202  068E                     	;# 
  9203  068F                     	;# 
  9204  0690                     	;# 
  9205  0691                     	;# 
  9206  0692                     	;# 
  9207  0693                     	;# 
  9208  0694                     	;# 
  9209  070C                     	;# 
  9210  070D                     	;# 
  9211  070E                     	;# 
  9212  070F                     	;# 
  9213  0710                     	;# 
  9214  0711                     	;# 
  9215  0712                     	;# 
  9216  0713                     	;# 
  9217  0714                     	;# 
  9218  0716                     	;# 
  9219  0717                     	;# 
  9220  0718                     	;# 
  9221  0719                     	;# 
  9222  071A                     	;# 
  9223  071B                     	;# 
  9224  071C                     	;# 
  9225  071D                     	;# 
  9226  071E                     	;# 
  9227  0796                     	;# 
  9228  0797                     	;# 
  9229  0798                     	;# 
  9230  0799                     	;# 
  9231  079A                     	;# 
  9232  079B                     	;# 
  9233  080C                     	;# 
  9234  080D                     	;# 
  9235  080E                     	;# 
  9236  080F                     	;# 
  9237  0810                     	;# 
  9238  0811                     	;# 
  9239  0812                     	;# 
  9240  0813                     	;# 
  9241  0814                     	;# 
  9242  081A                     	;# 
  9243  081B                     	;# 
  9244  081C                     	;# 
  9245  081D                     	;# 
  9246  081E                     	;# 
  9247  081F                     	;# 
  9248  088C                     	;# 
  9249  088D                     	;# 
  9250  088E                     	;# 
  9251  088F                     	;# 
  9252  0890                     	;# 
  9253  0891                     	;# 
  9254  0892                     	;# 
  9255  0893                     	;# 
  9256  0895                     	;# 
  9257  0896                     	;# 
  9258  0897                     	;# 
  9259  0898                     	;# 
  9260  0899                     	;# 
  9261  089A                     	;# 
  9262  089B                     	;# 
  9263  090C                     	;# 
  9264  090E                     	;# 
  9265  090F                     	;# 
  9266  091F                     	;# 
  9267  091F                     	;# 
  9268  098F                     	;# 
  9269  098F                     	;# 
  9270  0990                     	;# 
  9271  0991                     	;# 
  9272  0992                     	;# 
  9273  0993                     	;# 
  9274  0994                     	;# 
  9275  0995                     	;# 
  9276  0996                     	;# 
  9277  0997                     	;# 
  9278  0E0F                     	;# 
  9279  0E10                     	;# 
  9280  0E11                     	;# 
  9281  0E12                     	;# 
  9282  0E13                     	;# 
  9283  0E14                     	;# 
  9284  0E15                     	;# 
  9285  0E16                     	;# 
  9286  0E17                     	;# 
  9287  0E18                     	;# 
  9288  0E19                     	;# 
  9289  0E1A                     	;# 
  9290  0E1B                     	;# 
  9291  0E1C                     	;# 
  9292  0E1D                     	;# 
  9293  0E1E                     	;# 
  9294  0E1F                     	;# 
  9295  0E20                     	;# 
  9296  0E21                     	;# 
  9297  0E22                     	;# 
  9298  0E23                     	;# 
  9299  0E24                     	;# 
  9300  0E25                     	;# 
  9301  0E26                     	;# 
  9302  0E27                     	;# 
  9303  0E28                     	;# 
  9304  0E29                     	;# 
  9305  0E2A                     	;# 
  9306  0E2B                     	;# 
  9307  0E2C                     	;# 
  9308  0E2D                     	;# 
  9309  0E2E                     	;# 
  9310  0E2F                     	;# 
  9311  0E30                     	;# 
  9312  0E31                     	;# 
  9313  0E32                     	;# 
  9314  0E33                     	;# 
  9315  0E34                     	;# 
  9316  0E35                     	;# 
  9317  0E36                     	;# 
  9318  0E37                     	;# 
  9319  0E8F                     	;# 
  9320  0E90                     	;# 
  9321  0E91                     	;# 
  9322  0E92                     	;# 
  9323  0E93                     	;# 
  9324  0E94                     	;# 
  9325  0E95                     	;# 
  9326  0E96                     	;# 
  9327  0E97                     	;# 
  9328  0E9C                     	;# 
  9329  0E9D                     	;# 
  9330  0E9E                     	;# 
  9331  0EA1                     	;# 
  9332  0EA2                     	;# 
  9333  0EA3                     	;# 
  9334  0EA4                     	;# 
  9335  0EA5                     	;# 
  9336  0EA9                     	;# 
  9337  0EAA                     	;# 
  9338  0EAB                     	;# 
  9339  0EAC                     	;# 
  9340  0EB1                     	;# 
  9341  0EB2                     	;# 
  9342  0EB3                     	;# 
  9343  0EB8                     	;# 
  9344  0EB9                     	;# 
  9345  0EBA                     	;# 
  9346  0EBB                     	;# 
  9347  0EBC                     	;# 
  9348  0EBD                     	;# 
  9349  0EBE                     	;# 
  9350  0EC3                     	;# 
  9351  0EC5                     	;# 
  9352  0EC6                     	;# 
  9353  0EC7                     	;# 
  9354  0EC8                     	;# 
  9355  0EC9                     	;# 
  9356  0ECA                     	;# 
  9357  0ECB                     	;# 
  9358  0ECC                     	;# 
  9359  0F10                     	;# 
  9360  0F11                     	;# 
  9361  0F12                     	;# 
  9362  0F13                     	;# 
  9363  0F14                     	;# 
  9364  0F15                     	;# 
  9365  0F16                     	;# 
  9366  0F17                     	;# 
  9367  0F18                     	;# 
  9368  0F19                     	;# 
  9369  0F1A                     	;# 
  9370  0F1B                     	;# 
  9371  0F1C                     	;# 
  9372  0F1D                     	;# 
  9373  0F1E                     	;# 
  9374  0F1F                     	;# 
  9375  0F20                     	;# 
  9376  0F21                     	;# 
  9377  0F22                     	;# 
  9378  0F23                     	;# 
  9379  0F24                     	;# 
  9380  0F25                     	;# 
  9381  0F26                     	;# 
  9382  0F27                     	;# 
  9383  0F28                     	;# 
  9384  0F29                     	;# 
  9385  0F2A                     	;# 
  9386  0F2B                     	;# 
  9387  0F2C                     	;# 
  9388  0F2D                     	;# 
  9389  0F2E                     	;# 
  9390  0F2F                     	;# 
  9391  0F30                     	;# 
  9392  0F31                     	;# 
  9393  0F32                     	;# 
  9394  0F38                     	;# 
  9395  0F39                     	;# 
  9396  0F3A                     	;# 
  9397  0F3B                     	;# 
  9398  0F3C                     	;# 
  9399  0F3D                     	;# 
  9400  0F3E                     	;# 
  9401  0F3F                     	;# 
  9402  0F40                     	;# 
  9403  0F41                     	;# 
  9404  0F43                     	;# 
  9405  0F44                     	;# 
  9406  0F45                     	;# 
  9407  0F46                     	;# 
  9408  0F47                     	;# 
  9409  0F48                     	;# 
  9410  0F49                     	;# 
  9411  0F4A                     	;# 
  9412  0F4B                     	;# 
  9413  0F4C                     	;# 
  9414  0F4E                     	;# 
  9415  0F4F                     	;# 
  9416  0F50                     	;# 
  9417  0F51                     	;# 
  9418  0F52                     	;# 
  9419  0F53                     	;# 
  9420  0F54                     	;# 
  9421  0F55                     	;# 
  9422  0F56                     	;# 
  9423  0F57                     	;# 
  9424  0F59                     	;# 
  9425  0F5A                     	;# 
  9426  0F5B                     	;# 
  9427  0F5C                     	;# 
  9428  0F5D                     	;# 
  9429  0F61                     	;# 
  9430  0F62                     	;# 
  9431  0F64                     	;# 
  9432  0F65                     	;# 
  9433  0F66                     	;# 
  9434  0F67                     	;# 
  9435  0F68                     	;# 
  9436  0F69                     	;# 
  9437  0F6A                     	;# 
  9438  0F6B                     	;# 
  9439  0F6C                     	;# 
  9440  0F6D                     	;# 
  9441  0FE4                     	;# 
  9442  0FE5                     	;# 
  9443  0FE6                     	;# 
  9444  0FE7                     	;# 
  9445  0FE8                     	;# 
  9446  0FE9                     	;# 
  9447  0FEA                     	;# 
  9448  0FEB                     	;# 
  9449  0FED                     	;# 
  9450  0FEE                     	;# 
  9451  0FEF                     	;# 
  9452                           
  9453 ;; Function _limitTempThreshUnits is unused but had its address taken
  9454  0000                     
  9455 ;; Function _limitHoursUnits is unused but had its address taken
  9456  0000                     
  9457                           	psect	idataBANK0
  9458  0AAE                     __pidataBANK0:	
  9459                           
  9460                           ;initializer for _mode_field_subfield
  9461  0AAE  34FF               	retlw	255
  9462  0AAF  34FF               	retlw	255
  9463  0AB0  34FF               	retlw	255
  9464  0AB1  34FF               	retlw	255
  9465                           
  9466                           ;initializer for _lum_thresh
  9467  0AB2  3402               	retlw	2
  9468                           
  9469                           ;initializer for _temp_thresh
  9470  0AB3  3464               	retlw	100
  9471                           
  9472                           ;initializer for _tala
  9473  0AB4  3403               	retlw	3
  9474                           
  9475                           ;initializer for _pmon
  9476  0AB5  3405               	retlw	5
  9477                           
  9478                           ;initializer for _nreg
  9479  0AB6  341E               	retlw	30
  9480                           
  9481                           	psect	stringtext1
  9482  1000                     __pstringtext1:	
  9483  1000                     _fsmStateTable:	
  9484  1000  34F3               	retlw	low _do_I2C_IDLE
  9485  1001  3409               	retlw	high _do_I2C_IDLE
  9486  1002  346F               	retlw	low _do_I2C_SEND_ADR_READ
  9487  1003  340A               	retlw	high _do_I2C_SEND_ADR_READ
  9488  1004  3457               	retlw	low _do_I2C_SEND_ADR_WRITE
  9489  1005  340A               	retlw	high _do_I2C_SEND_ADR_WRITE
  9490  1006  341D               	retlw	low _do_I2C_TX
  9491  1007  3406               	retlw	high _do_I2C_TX
  9492  1008  340B               	retlw	low _do_I2C_RX
  9493  1009  3407               	retlw	high _do_I2C_RX
  9494  100A  3439               	retlw	low _do_I2C_RCEN
  9495  100B  340A               	retlw	high _do_I2C_RCEN
  9496  100C  345A               	retlw	low _do_I2C_TX_EMPTY
  9497  100D  340F               	retlw	high _do_I2C_TX_EMPTY
  9498  100E  34F8               	retlw	low _do_I2C_SEND_RESTART_READ
  9499  100F  3409               	retlw	high _do_I2C_SEND_RESTART_READ
  9500  1010  34FD               	retlw	low _do_I2C_SEND_RESTART_WRITE
  9501  1011  3409               	retlw	high _do_I2C_SEND_RESTART_WRITE
  9502  1012  3402               	retlw	low _do_I2C_SEND_RESTART
  9503  1013  340A               	retlw	high _do_I2C_SEND_RESTART
  9504  1014  3407               	retlw	low _do_I2C_SEND_STOP
  9505  1015  340A               	retlw	high _do_I2C_SEND_STOP
  9506  1016  340C               	retlw	low _do_I2C_DO_ACK
  9507  1017  340A               	retlw	high _do_I2C_DO_ACK
  9508  1018  3411               	retlw	low _do_I2C_DO_NACK_STOP
  9509  1019  340A               	retlw	high _do_I2C_DO_NACK_STOP
  9510  101A  3416               	retlw	low _do_I2C_DO_NACK_RESTART
  9511  101B  340A               	retlw	high _do_I2C_DO_NACK_RESTART
  9512  101C  344F               	retlw	low _do_I2C_RESET
  9513  101D  340A               	retlw	high _do_I2C_RESET
  9514  101E  3410               	retlw	low _do_I2C_DO_ADDRESS_NACK
  9515  101F  340E               	retlw	high _do_I2C_DO_ADDRESS_NACK
  9516  1020                     __end_of_fsmStateTable:	
  9517                           
  9518                           	psect	stringtext2
  9519  1020                     __pstringtext2:	
  9520  1020                     _num_subfields:	
  9521  1020  3400               	retlw	0
  9522  1021  3404               	retlw	4
  9523  1022  3401               	retlw	1
  9524  1023  3402               	retlw	2
  9525  1024  3401               	retlw	1
  9526  1025                     __end_of_num_subfields:	
  9527                           
  9528                           	psect	nvBANK0
  9529  0068                     __pnvBANK0:	
  9530  0068                     _timer1ReloadVal:	
  9531  0068                     	ds	2
  9532                           
  9533                           	psect	nvBANK1
  9534  00CC                     __pnvBANK1:	
  9535  00CC                     _TMR2_InterruptHandler:	
  9536  00CC                     	ds	2
  9537  00CE                     _TMR1_InterruptHandler:	
  9538  00CE                     	ds	2
  9539  00D0                     _TMR0_InterruptHandler:	
  9540  00D0                     	ds	2
  9541  00D2                     _INT_InterruptHandler:	
  9542  00D2                     	ds	2
  9543  001E                     _T0CON0bits	set	30
  9544  001E                     _T0CON0	set	30
  9545  001C                     _TMR0L	set	28
  9546  001D                     _TMR0H	set	29
  9547  001F                     _T0CON1	set	31
  9548  0014                     _TRISD	set	20
  9549  0013                     _TRISC	set	19
  9550  0012                     _TRISB	set	18
  9551  0011                     _TRISA	set	17
  9552  0015                     _TRISE	set	21
  9553  0018                     _LATC	set	24
  9554  0017                     _LATB	set	23
  9555  0019                     _LATD	set	25
  9556  001A                     _LATE	set	26
  9557  0016                     _LATAbits	set	22
  9558  0016                     _LATA	set	22
  9559  000E                     _PORTCbits	set	14
  9560  000B                     _INTCONbits	set	11
  9561  0013                     _TRISCbits	set	19
  9562  000D                     _PORTBbits	set	13
  9563  0094                     _ADCON1bits	set	148
  9564  008E                     _ADPREVL	set	142
  9565  008F                     _ADPREVH	set	143
  9566  0097                     _ADSTATbits	set	151
  9567  0090                     _ADACCL	set	144
  9568  0091                     _ADACCH	set	145
  9569  0095                     _ADCON2bits	set	149
  9570  009C                     _ADPRE	set	156
  9571  0096                     _ADCON3bits	set	150
  9572  008C                     _ADRESL	set	140
  9573  008D                     _ADRESH	set	141
  9574  0093                     _ADCON0bits	set	147
  9575  009D                     _ADACQ	set	157
  9576  0093                     _ADCON0	set	147
  9577  0098                     _ADCLK	set	152
  9578  0099                     _ADACT	set	153
  9579  009A                     _ADREF	set	154
  9580  0097                     _ADSTAT	set	151
  9581  0096                     _ADCON3	set	150
  9582  0095                     _ADCON2	set	149
  9583  0094                     _ADCON1	set	148
  9584  009B                     _ADCAP	set	155
  9585  009E                     _ADPCH	set	158
  9586  0116                     _ADERRL	set	278
  9587  0117                     _ADERRH	set	279
  9588  0114                     _ADFLTRL	set	276
  9589  0115                     _ADFLTRH	set	277
  9590  010C                     _ADCNT	set	268
  9591  010D                     _ADRPT	set	269
  9592  0113                     _ADSTPTH	set	275
  9593  0112                     _ADSTPTL	set	274
  9594  0111                     _ADUTHH	set	273
  9595  0110                     _ADUTHL	set	272
  9596  010F                     _ADLTHH	set	271
  9597  010E                     _ADLTHL	set	270
  9598  018E                     _SSP1MSK	set	398
  9599  018D                     _SSP1ADD	set	397
  9600  018F                     _SSP1STAT	set	399
  9601  0190                     _SSP1CON1bits	set	400
  9602  018C                     _SSP1BUF	set	396
  9603  0190                     _SSP1CON1	set	400
  9604  0191                     _SSP1CON2bits	set	401
  9605  018F                     _SSP1STATbits	set	399
  9606  0191                     _SSP1CON2	set	401
  9607  021F                     _CCPTMRS1bits	set	543
  9608  020F                     _T1GCONbits	set	527
  9609  020E                     _T1CONbits	set	526
  9610  020E                     _T1CON	set	526
  9611  020C                     _TMR1L	set	524
  9612  020D                     _TMR1H	set	525
  9613  0211                     _T1CLK	set	529
  9614  0210                     _T1GATE	set	528
  9615  020F                     _T1GCON	set	527
  9616  028D                     _PR2	set	653
  9617  028C                     _TMR2	set	652
  9618  028E                     _T2CONbits	set	654
  9619  0291                     _T2RSTbits	set	657
  9620  028F                     _T2HLTbits	set	655
  9621  028E                     _T2CON	set	654
  9622  028C                     _T2TMR	set	652
  9623  028D                     _T2PR	set	653
  9624  0291                     _T2RST	set	657
  9625  028F                     _T2HLT	set	655
  9626  0290                     _T2CLKCON	set	656
  9627  038C                     _PWM6DCL	set	908
  9628  038D                     _PWM6DCH	set	909
  9629  038E                     _PWM6CON	set	910
  9630  0710                     _PIR4bits	set	1808
  9631  0719                     _PIE3bits	set	1817
  9632  070C                     _PIR0bits	set	1804
  9633  070F                     _PIR3bits	set	1807
  9634  071A                     _PIE4bits	set	1818
  9635  0716                     _PIE0bits	set	1814
  9636  079B                     _PMD5	set	1947
  9637  079A                     _PMD4	set	1946
  9638  0799                     _PMD3	set	1945
  9639  0798                     _PMD2	set	1944
  9640  0797                     _PMD1	set	1943
  9641  0796                     _PMD0	set	1942
  9642  081F                     _NVMCON2	set	2079
  9643  081C                     _NVMDATL	set	2076
  9644  081D                     _NVMDATH	set	2077
  9645  081E                     _NVMCON1bits	set	2078
  9646  081B                     _NVMADRH	set	2075
  9647  081A                     _NVMADRL	set	2074
  9648  0892                     _OSCTUNE	set	2194
  9649  0893                     _OSCFRQ	set	2195
  9650  0891                     _OSCEN	set	2193
  9651  088F                     _OSCCON3	set	2191
  9652  088D                     _OSCCON1	set	2189
  9653  0EC6                     _SSP1DATPPS	set	3782
  9654  0EC5                     _SSP1CLKPPS	set	3781
  9655  0E90                     _INTPPS	set	3728
  9656  0F16                     _RA6PPS	set	3862
  9657  0F24                     _RC4PPS	set	3876
  9658  0F23                     _RC3PPS	set	3875
  9659  0F68                     _INLVLE	set	3944
  9660  0F5D                     _INLVLD	set	3933
  9661  0F52                     _INLVLC	set	3922
  9662  0F47                     _INLVLB	set	3911
  9663  0F3C                     _INLVLA	set	3900
  9664  0F67                     _SLRCONE	set	3943
  9665  0F5C                     _SLRCOND	set	3932
  9666  0F51                     _SLRCONC	set	3921
  9667  0F46                     _SLRCONB	set	3910
  9668  0F3B                     _SLRCONA	set	3899
  9669  0F5B                     _ODCOND	set	3931
  9670  0F50                     _ODCONC	set	3920
  9671  0F45                     _ODCONB	set	3909
  9672  0F3A                     _ODCONA	set	3898
  9673  0F66                     _ODCONE	set	3942
  9674  0F4F                     _WPUC	set	3919
  9675  0F39                     _WPUA	set	3897
  9676  0F44                     _WPUB	set	3908
  9677  0F65                     _WPUE	set	3941
  9678  0F5A                     _WPUD	set	3930
  9679  0F38                     _ANSELA	set	3896
  9680  0F64                     _ANSELE	set	3940
  9681  0F43                     _ANSELB	set	3907
  9682  0F4E                     _ANSELC	set	3918
  9683  0F59                     _ANSELD	set	3929
  9684  0F44                     _WPUBbits	set	3908
  9685  7A7C                     _WPUC4	set	31356
  9686  7A7B                     _WPUC3	set	31355
  9687                           
  9688                           ; #config settings
  9689  0000                     
  9690                           	psect	cinit
  9691  005D                     start_initialization:	
  9692  005D                     __initialization:	
  9693                           
  9694                           ; Initialize objects allocated to BANK0
  9695  005D  30AE               	movlw	low __pidataBANK0
  9696  005E  0084               	movwf	4
  9697  005F  308A               	movlw	(high __pidataBANK0)| (0+128)
  9698  0060  0085               	movwf	5
  9699  0061  305F               	movlw	low __pdataBANK0
  9700  0062  0086               	movwf	6
  9701  0063  3000               	movlw	high __pdataBANK0
  9702  0064  0087               	movwf	7
  9703  0065  3009               	movlw	9
  9704  0066  318A  2233  3180   	fcall	init_ram
  9705                           
  9706                           ; Clear objects allocated to COMMON
  9707  0069  01FD               	clrf	__pbssCOMMON& (0+127)
  9708                           
  9709                           ; Clear objects allocated to BANK0
  9710  006A  3041               	movlw	low __pbssBANK0
  9711  006B  0084               	movwf	4
  9712  006C  3000               	movlw	high __pbssBANK0
  9713  006D  0085               	movwf	5
  9714  006E  301E               	movlw	30
  9715  006F  318A  222D  3180   	fcall	clear_ram0
  9716                           
  9717                           ; Clear objects allocated to BANK1
  9718  0072  30A0               	movlw	low __pbssBANK1
  9719  0073  0084               	movwf	4
  9720  0074  3000               	movlw	high __pbssBANK1
  9721  0075  0085               	movwf	5
  9722  0076  302C               	movlw	44
  9723  0077  318A  222D  3180   	fcall	clear_ram0
  9724  007A                     end_of_initialization:	
  9725                           ;End of C runtime variable initialization code
  9726                           
  9727  007A                     __end_of__initialization:	
  9728  007A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9729  007B  0020               	movlb	0
  9730  007C  3180  287E         	ljmp	_main	;jump to C main() function
  9731                           
  9732                           	psect	bssCOMMON
  9733  007D                     __pbssCOMMON:	
  9734  007D                     _clkms:	
  9735  007D                     	ds	1
  9736                           
  9737                           	psect	bssBANK0
  9738  0041                     __pbssBANK0:	
  9739  0041                     _subfield_info:	
  9740  0041                     	ds	4
  9741  0045                     _lum_threshold:	
  9742  0045                     	ds	2
  9743  0047                     _lum_bin:	
  9744  0047                     	ds	2
  9745  0049                     _duty_cycle:	
  9746  0049                     	ds	2
  9747  004B                     _convertedValue:	
  9748  004B                     	ds	2
  9749  004D                     _i2c1_driver_i2cISR:	
  9750  004D                     	ds	2
  9751  004F                     _i2c1_driver_busCollisionISR:	
  9752  004F                     	ds	2
  9753  0051                     _alaf:	
  9754  0051                     	ds	1
  9755  0052                     _temp:	
  9756  0052                     	ds	1
  9757  0053                     _alarm:	
  9758  0053                     	ds	1
  9759  0054                     _config_mode:	
  9760  0054                     	ds	1
  9761  0055                     _set_mode:	
  9762  0055                     	ds	1
  9763  0056                     _last1m:	
  9764  0056                     	ds	1
  9765  0057                     _last5s:	
  9766  0057                     	ds	1
  9767  0058                     _last_ms2:	
  9768  0058                     	ds	1
  9769  0059                     _last_ms:	
  9770  0059                     	ds	1
  9771  005A                     _seg:	
  9772  005A                     	ds	1
  9773  005B                     _clkm:	
  9774  005B                     	ds	1
  9775  005C                     _clkh:	
  9776  005C                     	ds	1
  9777  005D                     _nreg_pt:	
  9778  005D                     	ds	1
  9779  005E                     _nreg_init:	
  9780  005E                     	ds	1
  9781                           
  9782                           	psect	dataBANK0
  9783  005F                     __pdataBANK0:	
  9784  005F                     _mode_field_subfield:	
  9785  005F                     	ds	4
  9786  0063                     _lum_thresh:	
  9787  0063                     	ds	1
  9788  0064                     _temp_thresh:	
  9789  0064                     	ds	1
  9790  0065                     _tala:	
  9791  0065                     	ds	1
  9792  0066                     _pmon:	
  9793  0066                     	ds	1
  9794  0067                     _nreg:	
  9795  0067                     	ds	1
  9796                           
  9797                           	psect	bssBANK1
  9798  00A0                     __pbssBANK1:	
  9799  00A0                     _i2c_status:	
  9800  00A0                     	ds	29
  9801  00BD                     _min_units:	
  9802  00BD                     	ds	2
  9803  00BF                     _min_tens:	
  9804  00BF                     	ds	2
  9805  00C1                     _hours_units:	
  9806  00C1                     	ds	2
  9807  00C3                     _hours_tens:	
  9808  00C3                     	ds	2
  9809  00C5                     _value:	
  9810  00C5                     	ds	2
  9811  00C7                     _ring_byte:	
  9812  00C7                     	ds	5
  9813                           
  9814                           	psect	inittext
  9815  0A33                     init_ram:	
  9816  0A33  00FE               	movwf	btemp
  9817  0A34                     initloop:	
  9818  0A34  0012               	moviw fsr0++
  9819  0A35  001E               	movwi fsr1++
  9820  0A36  0BFE               	decfsz	btemp,f
  9821  0A37  2A34               	goto	initloop
  9822  0A38  3400               	retlw	0
  9823                           
  9824                           	psect	clrtext
  9825  0A2D                     clear_ram0:	
  9826                           ;	Called with FSR0 containing the base address, and
  9827                           ;	WREG with the size to clear
  9828                           
  9829  0A2D  0064               	clrwdt	;clear the watchdog before getting into this loop
  9830  0A2E                     clrloop0:	
  9831  0A2E  0180               	clrf	0	;clear RAM location pointed to by FSR
  9832  0A2F  3101               	addfsr 0,1
  9833  0A30  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  9834  0A31  2A2E               	goto	clrloop0	;have we reached the end yet?
  9835  0A32  3400               	retlw	0	;all done for this memory range, return
  9836                           
  9837                           	psect	cstackBANK1
  9838  00D4                     __pcstackBANK1:	
  9839  00D4                     	ds	2
  9840  00D6                     main@t5s:	
  9841                           
  9842                           ; 1 bytes @ 0x2
  9843  00D6                     	ds	1
  9844  00D7                     main@t1m:	
  9845                           
  9846                           ; 1 bytes @ 0x3
  9847  00D7                     	ds	1
  9848  00D8                     _main$509:	
  9849                           
  9850                           ; 1 bytes @ 0x4
  9851  00D8                     	ds	1
  9852                           
  9853                           	psect	cstackCOMMON
  9854  0070                     __pcstackCOMMON:	
  9855  0070                     ?_i2c1_driver_open:	
  9856  0070                     ?_i2c1_driver_isNACK:	
  9857                           ; 1 bit 
  9858                           
  9859  0070                     ?_checkDebounceSW1:	
  9860                           ; 1 bit 
  9861                           
  9862  0070                     ?_TMR0_StopTimer:	
  9863                           ; 1 bytes @ 0x0
  9864                           
  9865  0070                     ??_TMR0_StopTimer:	
  9866                           ; 1 bytes @ 0x0
  9867                           
  9868  0070                     ?_SYSTEM_Initialize:	
  9869                           ; 1 bytes @ 0x0
  9870                           
  9871  0070                     ?_handler_clock_hms:	
  9872                           ; 1 bytes @ 0x0
  9873                           
  9874  0070                     ??_handler_clock_hms:	
  9875                           ; 1 bytes @ 0x0
  9876                           
  9877  0070                     ?_handler_clock_ms:	
  9878                           ; 1 bytes @ 0x0
  9879                           
  9880  0070                     ??_handler_clock_ms:	
  9881                           ; 1 bytes @ 0x0
  9882                           
  9883  0070                     ?_recoverData:	
  9884                           ; 1 bytes @ 0x0
  9885                           
  9886  0070                     ?_cksum_w:	
  9887                           ; 1 bytes @ 0x0
  9888                           
  9889  0070                     ?_TMR0_StartTimer:	
  9890                           ; 1 bytes @ 0x0
  9891                           
  9892  0070                     ?_config_routine:	
  9893                           ; 1 bytes @ 0x0
  9894                           
  9895  0070                     ?_save_recovery_params:	
  9896                           ; 1 bytes @ 0x0
  9897                           
  9898  0070                     ?_all_LED:	
  9899                           ; 1 bytes @ 0x0
  9900                           
  9901  0070                     ?_mod1_LED:	
  9902                           ; 1 bytes @ 0x0
  9903                           
  9904  0070                     ?_mod2_LED:	
  9905                           ; 1 bytes @ 0x0
  9906                           
  9907  0070                     ?_mod3_LED:	
  9908                           ; 1 bytes @ 0x0
  9909                           
  9910  0070                     ?_mod4_LED:	
  9911                           ; 1 bytes @ 0x0
  9912                           
  9913  0070                     ?_checkDebounceSW2:	
  9914                           ; 1 bytes @ 0x0
  9915                           
  9916  0070                     ?_mode_select_LED:	
  9917                           ; 1 bytes @ 0x0
  9918                           
  9919  0070                     ?_selectSubfield:	
  9920                           ; 1 bytes @ 0x0
  9921                           
  9922  0070                     ?_mode_LED:	
  9923                           ; 1 bytes @ 0x0
  9924                           
  9925  0070                     ?_getSubfieldInfo:	
  9926                           ; 1 bytes @ 0x0
  9927                           
  9928  0070                     ?_increment_subfield:	
  9929                           ; 1 bytes @ 0x0
  9930                           
  9931  0070                     ?_representLed:	
  9932                           ; 1 bytes @ 0x0
  9933                           
  9934  0070                     ?_ADCC_StartConversion:	
  9935                           ; 1 bytes @ 0x0
  9936                           
  9937  0070                     ?_ADCC_IsConversionDone:	
  9938                           ; 1 bytes @ 0x0
  9939                           
  9940  0070                     ?_cksum:	
  9941                           ; 1 bytes @ 0x0
  9942                           
  9943  0070                     ?_reset_recv:	
  9944                           ; 1 bytes @ 0x0
  9945                           
  9946  0070                     ?_INT_CallBack:	
  9947                           ; 1 bytes @ 0x0
  9948                           
  9949  0070                     ?_TMR0_ISR:	
  9950                           ; 1 bytes @ 0x0
  9951                           
  9952  0070                     ?_TMR1_ISR:	
  9953                           ; 1 bytes @ 0x0
  9954                           
  9955  0070                     ?_TMR2_ISR:	
  9956                           ; 1 bytes @ 0x0
  9957                           
  9958  0070                     ?_PMD_Initialize:	
  9959                           ; 1 bytes @ 0x0
  9960                           
  9961  0070                     ?_PIN_MANAGER_Initialize:	
  9962                           ; 1 bytes @ 0x0
  9963                           
  9964  0070                     ?_OSCILLATOR_Initialize:	
  9965                           ; 1 bytes @ 0x0
  9966                           
  9967  0070                     ?_PWM6_Initialize:	
  9968                           ; 1 bytes @ 0x0
  9969                           
  9970  0070                     ?_ADCC_Initialize:	
  9971                           ; 1 bytes @ 0x0
  9972                           
  9973  0070                     ?_TMR2_Initialize:	
  9974                           ; 1 bytes @ 0x0
  9975                           
  9976  0070                     ?_TMR1_Initialize:	
  9977                           ; 1 bytes @ 0x0
  9978                           
  9979  0070                     ?_TMR0_Initialize:	
  9980                           ; 1 bytes @ 0x0
  9981                           
  9982  0070                     ?_TMR0_DefaultInterruptHandler:	
  9983                           ; 1 bytes @ 0x0
  9984                           
  9985  0070                     ??_TMR0_DefaultInterruptHandler:	
  9986                           ; 1 bytes @ 0x0
  9987                           
  9988  0070                     ?_TMR1_DefaultInterruptHandler:	
  9989                           ; 1 bytes @ 0x0
  9990                           
  9991  0070                     ??_TMR1_DefaultInterruptHandler:	
  9992                           ; 1 bytes @ 0x0
  9993                           
  9994  0070                     ?_setCallBack:	
  9995                           ; 1 bytes @ 0x0
  9996                           
  9997  0070                     ?_i2c_busCollisionISR:	
  9998                           ; 1 bytes @ 0x0
  9999                           
 10000  0070                     ??_i2c_busCollisionISR:	
 10001                           ; 1 bytes @ 0x0
 10002                           
 10003  0070                     ?_i2c_ISR:	
 10004                           ; 1 bytes @ 0x0
 10005                           
 10006  0070                     ?_TMR2_DefaultInterruptHandler:	
 10007                           ; 1 bytes @ 0x0
 10008                           
 10009  0070                     ??_TMR2_DefaultInterruptHandler:	
 10010                           ; 1 bytes @ 0x0
 10011                           
 10012  0070                     ?_sw1_EXT:	
 10013                           ; 1 bytes @ 0x0
 10014                           
 10015  0070                     ?_ISR_3s:	
 10016                           ; 1 bytes @ 0x0
 10017                           
 10018  0070                     ?_main:	
 10019                           ; 1 bytes @ 0x0
 10020                           
 10021  0070                     ?_INT_ISR:	
 10022                           ; 1 bytes @ 0x0
 10023                           
 10024  0070                     ?_INT_DefaultInterruptHandler:	
 10025                           ; 1 bytes @ 0x0
 10026                           
 10027  0070                     ??_INT_DefaultInterruptHandler:	
 10028                           ; 1 bytes @ 0x0
 10029                           
 10030  0070                     ?_EXT_INT_Initialize:	
 10031                           ; 1 bytes @ 0x0
 10032                           
 10033  0070                     ?_INTERRUPT_InterruptManager:	
 10034                           ; 1 bytes @ 0x0
 10035                           
 10036  0070                     ?_mssp1_clearIRQ:	
 10037                           ; 1 bytes @ 0x0
 10038                           
 10039  0070                     ??_mssp1_clearIRQ:	
 10040                           ; 1 bytes @ 0x0
 10041                           
 10042  0070                     ?_mssp1_setIRQ:	
 10043                           ; 1 bytes @ 0x0
 10044                           
 10045  0070                     ??_mssp1_setIRQ:	
 10046                           ; 1 bytes @ 0x0
 10047                           
 10048  0070                     ?_i2c1_driver_resetBus:	
 10049                           ; 1 bytes @ 0x0
 10050                           
 10051  0070                     ??_i2c1_driver_resetBus:	
 10052                           ; 1 bytes @ 0x0
 10053                           
 10054  0070                     ?_i2c1_driver_restart:	
 10055                           ; 1 bytes @ 0x0
 10056                           
 10057  0070                     ??_i2c1_driver_restart:	
 10058                           ; 1 bytes @ 0x0
 10059                           
 10060  0070                     ?_i2c1_driver_stop:	
 10061                           ; 1 bytes @ 0x0
 10062                           
 10063  0070                     ??_i2c1_driver_stop:	
 10064                           ; 1 bytes @ 0x0
 10065                           
 10066  0070                     ??_i2c1_driver_isNACK:	
 10067                           ; 1 bytes @ 0x0
 10068                           
 10069  0070                     ?_i2c1_driver_startRX:	
 10070                           ; 1 bytes @ 0x0
 10071                           
 10072  0070                     ??_i2c1_driver_startRX:	
 10073                           ; 1 bytes @ 0x0
 10074                           
 10075  0070                     ?_i2c1_driver_getRXData:	
 10076                           ; 1 bytes @ 0x0
 10077                           
 10078  0070                     ??_i2c1_driver_getRXData:	
 10079                           ; 1 bytes @ 0x0
 10080                           
 10081  0070                     ?_i2c1_driver_TXData:	
 10082                           ; 1 bytes @ 0x0
 10083                           
 10084  0070                     ??_i2c1_driver_TXData:	
 10085                           ; 1 bytes @ 0x0
 10086                           
 10087  0070                     ?_i2c1_driver_sendACK:	
 10088                           ; 1 bytes @ 0x0
 10089                           
 10090  0070                     ??_i2c1_driver_sendACK:	
 10091                           ; 1 bytes @ 0x0
 10092                           
 10093  0070                     ?_i2c1_driver_sendNACK:	
 10094                           ; 1 bytes @ 0x0
 10095                           
 10096  0070                     ??_i2c1_driver_sendNACK:	
 10097                           ; 1 bytes @ 0x0
 10098                           
 10099  0070                     ?_i2c1_driver_clearBusCollision:	
 10100                           ; 1 bytes @ 0x0
 10101                           
 10102  0070                     ??_i2c1_driver_clearBusCollision:	
 10103                           ; 1 bytes @ 0x0
 10104                           
 10105  0070                     ?_TMR1_WriteTimer:	
 10106                           ; 1 bytes @ 0x0
 10107                           
 10108  0070                     ?_i2c_setBuffer:	
 10109                           ; 1 bytes @ 0x0
 10110                           
 10111  0070                     ?_do_I2C_RESET:	
 10112                           ; 1 bytes @ 0x0
 10113                           
 10114  0070                     ??_do_I2C_RESET:	
 10115                           ; 1 bytes @ 0x0
 10116                           
 10117  0070                     ?_do_I2C_IDLE:	
 10118                           ; 1 bytes @ 0x0
 10119                           
 10120  0070                     ??_do_I2C_IDLE:	
 10121                           ; 1 bytes @ 0x0
 10122                           
 10123  0070                     ?_do_I2C_SEND_RESTART_READ:	
 10124                           ; 1 bytes @ 0x0
 10125                           
 10126  0070                     ??_do_I2C_SEND_RESTART_READ:	
 10127                           ; 1 bytes @ 0x0
 10128                           
 10129  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
 10130                           ; 1 bytes @ 0x0
 10131                           
 10132  0070                     ??_do_I2C_SEND_RESTART_WRITE:	
 10133                           ; 1 bytes @ 0x0
 10134                           
 10135  0070                     ?_do_I2C_SEND_RESTART:	
 10136                           ; 1 bytes @ 0x0
 10137                           
 10138  0070                     ??_do_I2C_SEND_RESTART:	
 10139                           ; 1 bytes @ 0x0
 10140                           
 10141  0070                     ?_do_I2C_SEND_STOP:	
 10142                           ; 1 bytes @ 0x0
 10143                           
 10144  0070                     ??_do_I2C_SEND_STOP:	
 10145                           ; 1 bytes @ 0x0
 10146                           
 10147  0070                     ?_do_I2C_SEND_ADR_READ:	
 10148                           ; 1 bytes @ 0x0
 10149                           
 10150  0070                     ?_do_I2C_SEND_ADR_WRITE:	
 10151                           ; 1 bytes @ 0x0
 10152                           
 10153  0070                     ?_do_I2C_RCEN:	
 10154                           ; 1 bytes @ 0x0
 10155                           
 10156  0070                     ??_do_I2C_RCEN:	
 10157                           ; 1 bytes @ 0x0
 10158                           
 10159  0070                     ?_do_I2C_DO_ACK:	
 10160                           ; 1 bytes @ 0x0
 10161                           
 10162  0070                     ??_do_I2C_DO_ACK:	
 10163                           ; 1 bytes @ 0x0
 10164                           
 10165  0070                     ?_do_I2C_DO_NACK_STOP:	
 10166                           ; 1 bytes @ 0x0
 10167                           
 10168  0070                     ??_do_I2C_DO_NACK_STOP:	
 10169                           ; 1 bytes @ 0x0
 10170                           
 10171  0070                     ?_do_I2C_DO_NACK_RESTART:	
 10172                           ; 1 bytes @ 0x0
 10173                           
 10174  0070                     ??_do_I2C_DO_NACK_RESTART:	
 10175                           ; 1 bytes @ 0x0
 10176                           
 10177  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
 10178                           ; 1 bytes @ 0x0
 10179                           
 10180  0070                     ?_do_I2C_TX:	
 10181                           ; 1 bytes @ 0x0
 10182                           
 10183  0070                     ?_do_I2C_RX:	
 10184                           ; 1 bytes @ 0x0
 10185                           
 10186  0070                     ?_do_I2C_TX_EMPTY:	
 10187                           ; 1 bytes @ 0x0
 10188                           
 10189  0070                     ?i1_checkDebounceSW1:	
 10190                           ; 1 bytes @ 0x0
 10191                           
 10192  0070                     ??i1_checkDebounceSW1:	
 10193                           ; 1 bytes @ 0x0
 10194                           
 10195  0070                     ?i1_PWM6_LoadDutyValue:	
 10196                           ; 1 bytes @ 0x0
 10197                           
 10198  0070                     i2c1_driver_TXData@d:	
 10199                           ; 1 bytes @ 0x0
 10200                           
 10201  0070                     TMR1_WriteTimer@timerVal:	
 10202                           ; 1 bytes @ 0x0
 10203                           
 10204  0070                     i2c_setBuffer@bufferSize:	
 10205                           ; 2 bytes @ 0x0
 10206                           
 10207  0070                     setCallBack@cb:	
 10208                           ; 2 bytes @ 0x0
 10209                           
 10210  0070                     i1PWM6_LoadDutyValue@dutyValue:	
 10211                           ; 2 bytes @ 0x0
 10212                           
 10213                           
 10214                           ; 2 bytes @ 0x0
 10215  0070                     	ds	1
 10216  0071                     ??_TMR2_ISR:	
 10217  0071                     ??_do_I2C_SEND_ADR_READ:	
 10218                           ; 1 bytes @ 0x1
 10219                           
 10220  0071                     ??_do_I2C_SEND_ADR_WRITE:	
 10221                           ; 1 bytes @ 0x1
 10222                           
 10223                           
 10224                           ; 1 bytes @ 0x1
 10225  0071                     	ds	1
 10226  0072                     ??_TMR1_ISR:	
 10227  0072                     ??_TMR1_WriteTimer:	
 10228                           ; 1 bytes @ 0x2
 10229                           
 10230  0072                     ??_i2c_setBuffer:	
 10231                           ; 1 bytes @ 0x2
 10232                           
 10233  0072                     ??i1_PWM6_LoadDutyValue:	
 10234                           ; 1 bytes @ 0x2
 10235                           
 10236  0072                     setCallBack@p:	
 10237                           ; 1 bytes @ 0x2
 10238                           
 10239                           
 10240                           ; 1 bytes @ 0x2
 10241  0072                     	ds	1
 10242  0073                     ??_setCallBack:	
 10243  0073                     i2c_setBuffer@buffer:	
 10244                           ; 1 bytes @ 0x3
 10245                           
 10246                           
 10247                           ; 1 bytes @ 0x3
 10248  0073                     	ds	1
 10249  0074                     ??_ISR_3s:	
 10250  0074                     setCallBack@idx:	
 10251                           ; 1 bytes @ 0x4
 10252                           
 10253                           
 10254                           ; 1 bytes @ 0x4
 10255  0074                     	ds	1
 10256  0075                     ??_TMR0_ISR:	
 10257  0075                     ?_i2c_setDataCompleteCallback:	
 10258                           ; 1 bytes @ 0x5
 10259                           
 10260  0075                     i2c_setDataCompleteCallback@cb:	
 10261                           ; 1 bytes @ 0x5
 10262                           
 10263                           
 10264                           ; 2 bytes @ 0x5
 10265  0075                     	ds	2
 10266  0077                     ??_sw1_EXT:	
 10267  0077                     i2c_setDataCompleteCallback@p:	
 10268                           ; 1 bytes @ 0x7
 10269                           
 10270                           
 10271                           ; 1 bytes @ 0x7
 10272  0077                     	ds	1
 10273  0078                     ??_INT_CallBack:	
 10274  0078                     ??_INT_ISR:	
 10275                           ; 1 bytes @ 0x8
 10276                           
 10277  0078                     ??_i2c_setDataCompleteCallback:	
 10278                           ; 1 bytes @ 0x8
 10279                           
 10280                           
 10281                           ; 1 bytes @ 0x8
 10282  0078                     	ds	1
 10283  0079                     ?_returnStop:	
 10284  0079                     ?_returnReset:	
 10285                           ; 1 bytes @ 0x9
 10286                           
 10287  0079                     ?_i2c_restartWrite:	
 10288                           ; 1 bytes @ 0x9
 10289                           
 10290  0079                     ?_wr1RegCompleteHandler:	
 10291                           ; 1 bytes @ 0x9
 10292                           
 10293  0079                     ?_rd1RegCompleteHandler:	
 10294                           ; 1 bytes @ 0x9
 10295                           
 10296  0079                     ?_rd2RegCompleteHandler:	
 10297                           ; 1 bytes @ 0x9
 10298                           
 10299  0079                     ?_wr2RegCompleteHandler:	
 10300                           ; 1 bytes @ 0x9
 10301                           
 10302  0079                     ?_rdBlkRegCompleteHandler:	
 10303                           ; 1 bytes @ 0x9
 10304                           
 10305  0079                     i2c_restartWrite@p:	
 10306                           ; 1 bytes @ 0x9
 10307                           
 10308  0079                     returnStop@p:	
 10309                           ; 1 bytes @ 0x9
 10310                           
 10311  0079                     returnReset@p:	
 10312                           ; 1 bytes @ 0x9
 10313                           
 10314  0079                     wr1RegCompleteHandler@p:	
 10315                           ; 1 bytes @ 0x9
 10316                           
 10317  0079                     rd1RegCompleteHandler@p:	
 10318                           ; 1 bytes @ 0x9
 10319                           
 10320  0079                     rd2RegCompleteHandler@p:	
 10321                           ; 1 bytes @ 0x9
 10322                           
 10323  0079                     wr2RegCompleteHandler@p:	
 10324                           ; 1 bytes @ 0x9
 10325                           
 10326  0079                     rdBlkRegCompleteHandler@p:	
 10327                           ; 1 bytes @ 0x9
 10328                           
 10329                           
 10330                           ; 1 bytes @ 0x9
 10331  0079                     	ds	1
 10332  007A                     ??_returnStop:	
 10333  007A                     ??_returnReset:	
 10334                           ; 1 bytes @ 0xA
 10335                           
 10336  007A                     ??_i2c_restartWrite:	
 10337                           ; 1 bytes @ 0xA
 10338                           
 10339  007A                     ??_do_I2C_DO_ADDRESS_NACK:	
 10340                           ; 1 bytes @ 0xA
 10341                           
 10342  007A                     ??_do_I2C_TX:	
 10343                           ; 1 bytes @ 0xA
 10344                           
 10345  007A                     ??_do_I2C_RX:	
 10346                           ; 1 bytes @ 0xA
 10347                           
 10348  007A                     ??_do_I2C_TX_EMPTY:	
 10349                           ; 1 bytes @ 0xA
 10350                           
 10351  007A                     ??_wr1RegCompleteHandler:	
 10352                           ; 1 bytes @ 0xA
 10353                           
 10354  007A                     ??_rd1RegCompleteHandler:	
 10355                           ; 1 bytes @ 0xA
 10356                           
 10357  007A                     ??_rd2RegCompleteHandler:	
 10358                           ; 1 bytes @ 0xA
 10359                           
 10360  007A                     ??_wr2RegCompleteHandler:	
 10361                           ; 1 bytes @ 0xA
 10362                           
 10363  007A                     ??_rdBlkRegCompleteHandler:	
 10364                           ; 1 bytes @ 0xA
 10365                           
 10366                           
 10367                           ; 1 bytes @ 0xA
 10368  007A                     	ds	3
 10369  007D                     ??_INTERRUPT_InterruptManager:	
 10370                           
 10371                           	psect	cstackBANK0
 10372  0020                     __pcstackBANK0:	
 10373                           ; 1 bytes @ 0xD
 10374                           
 10375  0020                     ??_i2c_ISR:	
 10376                           
 10377                           ; 1 bytes @ 0x0
 10378  0020                     	ds	3
 10379  0023                     ??_checkDebounceSW1:	
 10380  0023                     ?_TMR0_SetInterruptHandler:	
 10381                           ; 1 bytes @ 0x3
 10382                           
 10383  0023                     ?_TMR1_SetInterruptHandler:	
 10384                           ; 1 bytes @ 0x3
 10385                           
 10386  0023                     ?_INT_SetInterruptHandler:	
 10387                           ; 1 bytes @ 0x3
 10388                           
 10389  0023                     ?_TMR2_SetInterruptHandler:	
 10390                           ; 1 bytes @ 0x3
 10391                           
 10392  0023                     ??_i2c1_driver_open:	
 10393                           ; 1 bytes @ 0x3
 10394                           
 10395  0023                     ?_LED_bin:	
 10396                           ; 1 bytes @ 0x3
 10397                           
 10398  0023                     ?_ring_buffer:	
 10399                           ; 1 bytes @ 0x3
 10400                           
 10401  0023                     ??_TMR0_StartTimer:	
 10402                           ; 1 bytes @ 0x3
 10403                           
 10404  0023                     ??_checkDebounceSW2:	
 10405                           ; 1 bytes @ 0x3
 10406                           
 10407  0023                     ??_getSubfieldInfo:	
 10408                           ; 1 bytes @ 0x3
 10409                           
 10410  0023                     ??_ADCC_StartConversion:	
 10411                           ; 1 bytes @ 0x3
 10412                           
 10413  0023                     ??_ADCC_IsConversionDone:	
 10414                           ; 1 bytes @ 0x3
 10415                           
 10416  0023                     ?_DATAEE_ReadByte:	
 10417                           ; 1 bytes @ 0x3
 10418                           
 10419  0023                     ??_PMD_Initialize:	
 10420                           ; 1 bytes @ 0x3
 10421                           
 10422  0023                     ??_PIN_MANAGER_Initialize:	
 10423                           ; 1 bytes @ 0x3
 10424                           
 10425  0023                     ??_OSCILLATOR_Initialize:	
 10426                           ; 1 bytes @ 0x3
 10427                           
 10428  0023                     ??_PWM6_Initialize:	
 10429                           ; 1 bytes @ 0x3
 10430                           
 10431  0023                     ??_ADCC_Initialize:	
 10432                           ; 1 bytes @ 0x3
 10433                           
 10434  0023                     ?___bmul:	
 10435                           ; 1 bytes @ 0x3
 10436                           
 10437  0023                     ?_ADCC_GetConversionResult:	
 10438                           ; 1 bytes @ 0x3
 10439                           
 10440  0023                     ?___wmul:	
 10441                           ; 2 bytes @ 0x3
 10442                           
 10443  0023                     ?___awdiv:	
 10444                           ; 2 bytes @ 0x3
 10445                           
 10446  0023                     ?___awmod:	
 10447                           ; 2 bytes @ 0x3
 10448                           
 10449  0023                     ring_buffer@clock_h:	
 10450                           ; 2 bytes @ 0x3
 10451                           
 10452  0023                     ADCC_StartConversion@channel:	
 10453                           ; 1 bytes @ 0x3
 10454                           
 10455  0023                     ___bmul@multiplicand:	
 10456                           ; 1 bytes @ 0x3
 10457                           
 10458  0023                     INT_SetInterruptHandler@InterruptHandler:	
 10459                           ; 1 bytes @ 0x3
 10460                           
 10461  0023                     TMR0_SetInterruptHandler@InterruptHandler:	
 10462                           ; 2 bytes @ 0x3
 10463                           
 10464  0023                     TMR1_SetInterruptHandler@InterruptHandler:	
 10465                           ; 2 bytes @ 0x3
 10466                           
 10467  0023                     DATAEE_ReadByte@bAdd:	
 10468                           ; 2 bytes @ 0x3
 10469                           
 10470  0023                     TMR2_SetInterruptHandler@InterruptHandler:	
 10471                           ; 2 bytes @ 0x3
 10472                           
 10473  0023                     LED_bin@value:	
 10474                           ; 2 bytes @ 0x3
 10475                           
 10476  0023                     ___wmul@multiplier:	
 10477                           ; 2 bytes @ 0x3
 10478                           
 10479  0023                     ___awdiv@divisor:	
 10480                           ; 2 bytes @ 0x3
 10481                           
 10482  0023                     ___awmod@divisor:	
 10483                           ; 2 bytes @ 0x3
 10484                           
 10485                           
 10486                           ; 2 bytes @ 0x3
 10487  0023                     	ds	1
 10488  0024                     ??___bmul:	
 10489  0024                     ring_buffer@clock_m:	
 10490                           ; 1 bytes @ 0x4
 10491                           
 10492                           
 10493                           ; 1 bytes @ 0x4
 10494  0024                     	ds	1
 10495  0025                     ??_SYSTEM_Initialize:	
 10496  0025                     ??_TMR0_SetInterruptHandler:	
 10497                           ; 1 bytes @ 0x5
 10498                           
 10499  0025                     ??_TMR1_SetInterruptHandler:	
 10500                           ; 1 bytes @ 0x5
 10501                           
 10502  0025                     ??_INT_SetInterruptHandler:	
 10503                           ; 1 bytes @ 0x5
 10504                           
 10505  0025                     ??_TMR2_SetInterruptHandler:	
 10506                           ; 1 bytes @ 0x5
 10507                           
 10508  0025                     ??_LED_bin:	
 10509                           ; 1 bytes @ 0x5
 10510                           
 10511  0025                     ??_ADCC_GetConversionResult:	
 10512                           ; 1 bytes @ 0x5
 10513                           
 10514  0025                     ??_DATAEE_ReadByte:	
 10515                           ; 1 bytes @ 0x5
 10516                           
 10517  0025                     ??_cksum:	
 10518                           ; 1 bytes @ 0x5
 10519                           
 10520  0025                     ??_TMR2_Initialize:	
 10521                           ; 1 bytes @ 0x5
 10522                           
 10523  0025                     ??_TMR1_Initialize:	
 10524                           ; 1 bytes @ 0x5
 10525                           
 10526  0025                     ??_TMR0_Initialize:	
 10527                           ; 1 bytes @ 0x5
 10528                           
 10529  0025                     ??_EXT_INT_Initialize:	
 10530                           ; 1 bytes @ 0x5
 10531                           
 10532  0025                     ?_ADC_read:	
 10533                           ; 1 bytes @ 0x5
 10534                           
 10535  0025                     ring_buffer@clock_s:	
 10536                           ; 2 bytes @ 0x5
 10537                           
 10538  0025                     ___bmul@product:	
 10539                           ; 1 bytes @ 0x5
 10540                           
 10541  0025                     ___wmul@multiplicand:	
 10542                           ; 1 bytes @ 0x5
 10543                           
 10544  0025                     ___awdiv@dividend:	
 10545                           ; 2 bytes @ 0x5
 10546                           
 10547  0025                     ___awmod@dividend:	
 10548                           ; 2 bytes @ 0x5
 10549                           
 10550                           
 10551                           ; 2 bytes @ 0x5
 10552  0025                     	ds	1
 10553  0026                     ring_buffer@tem:	
 10554  0026                     cksum@res:	
 10555                           ; 1 bytes @ 0x6
 10556                           
 10557  0026                     ___bmul@multiplier:	
 10558                           ; 1 bytes @ 0x6
 10559                           
 10560                           
 10561                           ; 1 bytes @ 0x6
 10562  0026                     	ds	1
 10563  0027                     ??_ADC_read:	
 10564  0027                     ?_read_ring:	
 10565                           ; 1 bytes @ 0x7
 10566                           
 10567  0027                     ??___wmul:	
 10568                           ; 1 bytes @ 0x7
 10569                           
 10570  0027                     ??___awdiv:	
 10571                           ; 1 bytes @ 0x7
 10572                           
 10573  0027                     ??___awmod:	
 10574                           ; 1 bytes @ 0x7
 10575                           
 10576  0027                     ring_buffer@lum:	
 10577                           ; 1 bytes @ 0x7
 10578                           
 10579  0027                     read_ring@nreg:	
 10580                           ; 1 bytes @ 0x7
 10581                           
 10582  0027                     cksum@i:	
 10583                           ; 1 bytes @ 0x7
 10584                           
 10585  0027                     ___wmul@product:	
 10586                           ; 2 bytes @ 0x7
 10587                           
 10588                           
 10589                           ; 2 bytes @ 0x7
 10590  0027                     	ds	1
 10591  0028                     ??_ring_buffer:	
 10592  0028                     read_ring@nreg_init:	
 10593                           ; 1 bytes @ 0x8
 10594                           
 10595  0028                     ___awdiv@counter:	
 10596                           ; 1 bytes @ 0x8
 10597                           
 10598  0028                     ___awmod@counter:	
 10599                           ; 1 bytes @ 0x8
 10600                           
 10601                           
 10602                           ; 1 bytes @ 0x8
 10603  0028                     	ds	1
 10604  0029                     ?_PWM6_LoadDutyValue:	
 10605  0029                     ?_DATAEE_WriteByte:	
 10606                           ; 1 bytes @ 0x9
 10607                           
 10608  0029                     ring_buffer@_ring_byte:	
 10609                           ; 1 bytes @ 0x9
 10610                           
 10611  0029                     read_ring@index:	
 10612                           ; 1 bytes @ 0x9
 10613                           
 10614  0029                     ___awdiv@sign:	
 10615                           ; 1 bytes @ 0x9
 10616                           
 10617  0029                     ___awmod@sign:	
 10618                           ; 1 bytes @ 0x9
 10619                           
 10620  0029                     PWM6_LoadDutyValue@dutyValue:	
 10621                           ; 1 bytes @ 0x9
 10622                           
 10623  0029                     DATAEE_WriteByte@bAdd:	
 10624                           ; 2 bytes @ 0x9
 10625                           
 10626                           
 10627                           ; 2 bytes @ 0x9
 10628  0029                     	ds	1
 10629  002A                     read_ring@subindex:	
 10630  002A                     ___awdiv@quotient:	
 10631                           ; 1 bytes @ 0xA
 10632                           
 10633                           
 10634                           ; 2 bytes @ 0xA
 10635  002A                     	ds	1
 10636  002B                     ??_PWM6_LoadDutyValue:	
 10637  002B                     ??_read_ring:	
 10638                           ; 1 bytes @ 0xB
 10639                           
 10640  002B                     DATAEE_WriteByte@bData:	
 10641                           ; 1 bytes @ 0xB
 10642                           
 10643                           
 10644                           ; 1 bytes @ 0xB
 10645  002B                     	ds	1
 10646  002C                     ??_DATAEE_WriteByte:	
 10647  002C                     ?_recHour:	
 10648                           ; 1 bytes @ 0xC
 10649                           
 10650  002C                     ?_recMinutes:	
 10651                           ; 1 bytes @ 0xC
 10652                           
 10653  002C                     ?_recAlarm:	
 10654                           ; 1 bytes @ 0xC
 10655                           
 10656  002C                     ?_recTempThresh:	
 10657                           ; 1 bytes @ 0xC
 10658                           
 10659  002C                     ?_recLumThresh:	
 10660                           ; 1 bytes @ 0xC
 10661                           
 10662  002C                     recLumThresh@_value:	
 10663                           ; 1 bytes @ 0xC
 10664                           
 10665  002C                     recTempThresh@_value:	
 10666                           ; 1 bytes @ 0xC
 10667                           
 10668  002C                     recAlarm@_value:	
 10669                           ; 1 bytes @ 0xC
 10670                           
 10671  002C                     recMinutes@_value:	
 10672                           ; 1 bytes @ 0xC
 10673                           
 10674  002C                     recHour@_value:	
 10675                           ; 1 bytes @ 0xC
 10676                           
 10677  002C                     DATAEE_WriteByte@GIEBitValue:	
 10678                           ; 1 bytes @ 0xC
 10679                           
 10680                           
 10681                           ; 1 bytes @ 0xC
 10682  002C                     	ds	1
 10683  002D                     ?_push_ring:	
 10684  002D                     ??_cksum_w:	
 10685                           ; 1 bytes @ 0xD
 10686                           
 10687  002D                     ??_all_LED:	
 10688                           ; 1 bytes @ 0xD
 10689                           
 10690  002D                     ??_mod1_LED:	
 10691                           ; 1 bytes @ 0xD
 10692                           
 10693  002D                     ??_mod2_LED:	
 10694                           ; 1 bytes @ 0xD
 10695                           
 10696  002D                     ??_mod3_LED:	
 10697                           ; 1 bytes @ 0xD
 10698                           
 10699  002D                     ??_mod4_LED:	
 10700                           ; 1 bytes @ 0xD
 10701                           
 10702  002D                     ??_mode_select_LED:	
 10703                           ; 1 bytes @ 0xD
 10704                           
 10705  002D                     ??_mode_LED:	
 10706                           ; 1 bytes @ 0xD
 10707                           
 10708  002D                     ??_recHour:	
 10709                           ; 1 bytes @ 0xD
 10710                           
 10711  002D                     ??_recMinutes:	
 10712                           ; 1 bytes @ 0xD
 10713                           
 10714  002D                     ??_recAlarm:	
 10715                           ; 1 bytes @ 0xD
 10716                           
 10717  002D                     ??_recTempThresh:	
 10718                           ; 1 bytes @ 0xD
 10719                           
 10720  002D                     ??_recLumThresh:	
 10721                           ; 1 bytes @ 0xD
 10722                           
 10723  002D                     ??_representLed:	
 10724                           ; 1 bytes @ 0xD
 10725                           
 10726  002D                     ??_reset_recv:	
 10727                           ; 1 bytes @ 0xD
 10728                           
 10729  002D                     push_ring@nreg:	
 10730                           ; 1 bytes @ 0xD
 10731                           
 10732  002D                     read_ring@i:	
 10733                           ; 1 bytes @ 0xD
 10734                           
 10735  002D                     reset_recv@i:	
 10736                           ; 1 bytes @ 0xD
 10737                           
 10738                           
 10739                           ; 2 bytes @ 0xD
 10740  002D                     	ds	1
 10741  002E                     ??_save_recovery_params:	
 10742  002E                     push_ring@nreg_init:	
 10743                           ; 1 bytes @ 0xE
 10744                           
 10745  002E                     read_ring@nreg_pt:	
 10746                           ; 1 bytes @ 0xE
 10747                           
 10748                           
 10749                           ; 1 bytes @ 0xE
 10750  002E                     	ds	1
 10751  002F                     ??_recoverData:	
 10752  002F                     save_recovery_params@aux:	
 10753                           ; 1 bytes @ 0xF
 10754                           
 10755  002F                     push_ring@ring_byte:	
 10756                           ; 1 bytes @ 0xF
 10757                           
 10758  002F                     read_ring@absindex:	
 10759                           ; 1 bytes @ 0xF
 10760                           
 10761  002F                     mode_LED@subfield:	
 10762                           ; 1 bytes @ 0xF
 10763                           
 10764                           
 10765                           ; 1 bytes @ 0xF
 10766  002F                     	ds	1
 10767  0030                     ??_push_ring:	
 10768  0030                     save_recovery_params@aux1:	
 10769                           ; 1 bytes @ 0x10
 10770                           
 10771  0030                     representLed@val:	
 10772                           ; 1 bytes @ 0x10
 10773                           
 10774                           
 10775                           ; 1 bytes @ 0x10
 10776  0030                     	ds	1
 10777  0031                     representLed@aux:	
 10778                           
 10779                           ; 1 bytes @ 0x11
 10780  0031                     	ds	1
 10781  0032                     ??_increment_subfield:	
 10782  0032                     push_ring@i:	
 10783                           ; 1 bytes @ 0x12
 10784                           
 10785                           
 10786                           ; 1 bytes @ 0x12
 10787  0032                     	ds	1
 10788  0033                     increment_subfield@exit:	
 10789  0033                     push_ring@nreg_pt:	
 10790                           ; 1 bytes @ 0x13
 10791                           
 10792                           
 10793                           ; 1 bytes @ 0x13
 10794  0033                     	ds	1
 10795  0034                     increment_subfield@_value:	
 10796                           
 10797                           ; 1 bytes @ 0x14
 10798  0034                     	ds	1
 10799  0035                     ??_selectSubfield:	
 10800                           
 10801                           ; 1 bytes @ 0x15
 10802  0035                     	ds	2
 10803  0037                     selectSubfield@subfield:	
 10804                           
 10805                           ; 2 bytes @ 0x17
 10806  0037                     	ds	2
 10807  0039                     ??_config_routine:	
 10808                           
 10809                           ; 1 bytes @ 0x19
 10810  0039                     	ds	1
 10811  003A                     config_routine@select_mode:	
 10812                           
 10813                           ; 2 bytes @ 0x1A
 10814  003A                     	ds	2
 10815  003C                     ??_main:	
 10816                           
 10817                           ; 1 bytes @ 0x1C
 10818  003C                     	ds	5
 10819                           
 10820                           	psect	maintext
 10821  007E                     __pmaintext:	
 10822 ;;
 10823 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
 10824 ;;
 10825 ;; *************** function _main *****************
 10826 ;; Defined at:
 10827 ;;		line 174 in file "main.c"
 10828 ;; Parameters:    Size  Location     Type
 10829 ;;		None
 10830 ;; Auto vars:     Size  Location     Type
 10831 ;;  t1m             1    3[BANK1 ] unsigned char 
 10832 ;;  t5s             1    2[BANK1 ] unsigned char 
 10833 ;; Return value:  Size  Location     Type
 10834 ;;                  1    wreg      void 
 10835 ;; Registers used:
 10836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10837 ;; Tracked objects:
 10838 ;;		On entry : B1F/0
 10839 ;;		On exit  : 0/0
 10840 ;;		Unchanged: 0/0
 10841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10843 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10844 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10845 ;;      Totals:         0       5       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10846 ;;Total ram usage:       10 bytes
 10847 ;; Hardware stack levels required when called:   11
 10848 ;; This function calls:
 10849 ;;		_ADC_read
 10850 ;;		_DATAEE_WriteByte
 10851 ;;		_INT_SetInterruptHandler
 10852 ;;		_LED_bin
 10853 ;;		_PWM6_LoadDutyValue
 10854 ;;		_SYSTEM_Initialize
 10855 ;;		_TMR0_SetInterruptHandler
 10856 ;;		_TMR0_StartTimer
 10857 ;;		_TMR1_SetInterruptHandler
 10858 ;;		_TMR2_SetInterruptHandler
 10859 ;;		_cksum_w
 10860 ;;		_config_routine
 10861 ;;		_i2c1_driver_open
 10862 ;;		_push_ring
 10863 ;;		_read_ring
 10864 ;;		_recoverData
 10865 ;;		_ring_buffer
 10866 ;;		_save_recovery_params
 10867 ;; This function is called by:
 10868 ;;		Startup code after reset
 10869 ;; This function uses a non-reentrant model
 10870 ;;
 10871                           
 10872                           
 10873                           ;psect for function _main
 10874  007E                     _main:	
 10875  007E                     l7168:	
 10876                           ;incstack = 0
 10877                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10878                           
 10879                           
 10880                           ;main.c: 176:     SYSTEM_Initialize();
 10881  007E  318C  24BB  3180   	fcall	_SYSTEM_Initialize
 10882                           
 10883                           ;main.c: 177:     TMR0_SetInterruptHandler(ISR_3s);
 10884  0081  306F               	movlw	low _ISR_3s
 10885  0082  0020               	movlb	0	; select bank0
 10886  0083  00A3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 10887  0084  300C               	movlw	high _ISR_3s
 10888  0085  00A4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 10889  0086  318A  2293  3180   	fcall	_TMR0_SetInterruptHandler
 10890                           
 10891                           ;main.c: 178:     TMR1_SetInterruptHandler(handler_clock_hms);
 10892  0089  308D               	movlw	low _handler_clock_hms
 10893  008A  0020               	movlb	0	; select bank0
 10894  008B  00A3               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 10895  008C  300F               	movlw	high _handler_clock_hms
 10896  008D  00A4               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 10897  008E  318A  229C  3180   	fcall	_TMR1_SetInterruptHandler
 10898                           
 10899                           ;main.c: 179:     INT_SetInterruptHandler(sw1_EXT);
 10900  0091  3069               	movlw	low _sw1_EXT
 10901  0092  0020               	movlb	0	; select bank0
 10902  0093  00A3               	movwf	INT_SetInterruptHandler@InterruptHandler
 10903  0094  300E               	movlw	high _sw1_EXT
 10904  0095  00A4               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 10905  0096  318A  2281  3180   	fcall	_INT_SetInterruptHandler
 10906                           
 10907                           ;main.c: 180:     TMR2_SetInterruptHandler(handler_clock_ms);
 10908  0099  30E2               	movlw	low _handler_clock_ms
 10909  009A  0020               	movlb	0	; select bank0
 10910  009B  00A3               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 10911  009C  300A               	movlw	high _handler_clock_ms
 10912  009D  00A4               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 10913  009E  318A  22A5  3180   	fcall	_TMR2_SetInterruptHandler
 10914  00A1                     l7170:	
 10915  00A1                     l7172:	
 10916  00A1                     l7174:	
 10917  00A1                     l204:	
 10918  00A1  3096               	movlw	150
 10919  00A2  0020               	movlb	0	; select bank0
 10920  00A3  00BC               	movwf	??_main
 10921  00A4  083C               	movf	??_main,w
 10922  00A5  00E7               	movwf	_nreg
 10923  00A6                     l7178:	
 10924                           
 10925                           ;main.c: 188:     nreg_pt = 0;
 10926  00A6  01DD               	clrf	_nreg_pt
 10927  00A7                     l7180:	
 10928                           
 10929                           ;main.c: 189:     nreg_init = 0;
 10930  00A7  01DE               	clrf	_nreg_init
 10931  00A8                     l7182:	
 10932                           
 10933                           ;main.c: 190:     alaf = 1;
 10934  00A8  01D1               	clrf	_alaf
 10935  00A9  0AD1               	incf	_alaf,f
 10936  00AA                     l7184:	
 10937                           
 10938                           ;main.c: 191:     temp = 0;
 10939  00AA  01D2               	clrf	_temp
 10940  00AB                     l7186:	
 10941                           
 10942                           ;main.c: 192:     lum_bin = 0;
 10943  00AB  01C7               	clrf	_lum_bin
 10944  00AC  01C8               	clrf	_lum_bin+1
 10945  00AD                     l7188:	
 10946                           
 10947                           ;main.c: 193:     lum_threshold = 0;
 10948  00AD  01C5               	clrf	_lum_threshold
 10949  00AE  01C6               	clrf	_lum_threshold+1
 10950  00AF                     l7190:	
 10951                           
 10952                           ;main.c: 194:     duty_cycle = 0;
 10953  00AF  01C9               	clrf	_duty_cycle
 10954  00B0  01CA               	clrf	_duty_cycle+1
 10955  00B1                     l7192:	
 10956                           
 10957                           ;main.c: 195:     set_mode= 0;
 10958  00B1  01D5               	clrf	_set_mode	;volatile
 10959  00B2                     l7194:	
 10960                           
 10961                           ;main.c: 198:     i2c1_driver_open();
 10962  00B2  318A  22EE  3180   	fcall	_i2c1_driver_open
 10963  00B5                     l7196:	
 10964                           
 10965                           ;main.c: 199:     TRISCbits.TRISC3 = 1;
 10966  00B5  0020               	movlb	0	; select bank0
 10967  00B6  1593               	bsf	19,3	;volatile
 10968  00B7                     l7198:	
 10969                           
 10970                           ;main.c: 200:     TRISCbits.TRISC4 = 1;
 10971  00B7  1613               	bsf	19,4	;volatile
 10972  00B8                     l7200:	
 10973                           
 10974                           ;main.c: 201:     WPUC3 = 1;
 10975  00B8  003E               	movlb	30	; select bank30
 10976  00B9  15CF               	bsf	79,3	;volatile
 10977  00BA                     l7202:	
 10978                           
 10979                           ;main.c: 202:     WPUC4 = 1;
 10980  00BA  164F               	bsf	79,4	;volatile
 10981  00BB                     l7204:	
 10982                           
 10983                           ;main.c: 205:     recoverData();
 10984  00BB  3181  21FE  3180   	fcall	_recoverData
 10985  00BE                     l7206:	
 10986                           
 10987                           ;main.c: 207:     PWM6_LoadDutyValue(0);
 10988  00BE  3000               	movlw	0
 10989  00BF  0020               	movlb	0	; select bank0
 10990  00C0  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 10991  00C1  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10992  00C2  318C  2488  3180   	fcall	_PWM6_LoadDutyValue
 10993  00C5                     l7208:	
 10994                           
 10995                           ;main.c: 208:     alarm = 0 ;
 10996  00C5  0020               	movlb	0	; select bank0
 10997  00C6  01D3               	clrf	_alarm	;volatile
 10998  00C7                     l7210:	
 10999  00C7  003E               	movlb	30	; select bank30
 11000  00C8  1644               	bsf	68,4	;volatile
 11001  00C9                     l7212:	
 11002                           
 11003                           ;main.c: 212:     (INTCONbits.GIE = 1);
 11004  00C9  178B               	bsf	11,7	;volatile
 11005  00CA                     l7214:	
 11006                           
 11007                           ;main.c: 214:     (INTCONbits.PEIE = 1);
 11008  00CA  170B               	bsf	11,6	;volatile
 11009  00CB                     l207:	
 11010                           ;main.c: 217:     while (1)
 11011                           
 11012  00CB  0063               	sleep	;# 
 11013  00CC                     l7216:	
 11014                           
 11015                           ;main.c: 221:         __nop();
 11016  00CC  0000               	nop
 11017  00CD                     l7218:	
 11018                           
 11019                           ;main.c: 223:         PIE4bits.TMR1IE = 0;
 11020  00CD  002E               	movlb	14	; select bank14
 11021  00CE  101A               	bcf	26,0	;volatile
 11022  00CF                     l7220:	
 11023                           
 11024                           ;main.c: 224:         t5s = last5s;
 11025  00CF  0020               	movlb	0	; select bank0
 11026  00D0  0857               	movf	_last5s,w	;volatile
 11027  00D1  00BC               	movwf	??_main
 11028  00D2  083C               	movf	??_main,w
 11029  00D3  0021               	movlb	1	; select bank1
 11030  00D4  00D6               	movwf	main@t5s^(0+128)
 11031  00D5                     l7222:	
 11032                           
 11033                           ;main.c: 225:         PIE4bits.TMR1IE = 1;
 11034  00D5  002E               	movlb	14	; select bank14
 11035  00D6  141A               	bsf	26,0	;volatile
 11036  00D7                     l7224:	
 11037                           
 11038                           ;main.c: 227:         if(t5s >= pmon){
 11039  00D7  0020               	movlb	0	; select bank0
 11040  00D8  0866               	movf	_pmon,w
 11041  00D9  0021               	movlb	1	; select bank1
 11042  00DA  0256               	subwf	main@t5s^(0+128),w
 11043  00DB  1C03               	skipc
 11044  00DC  28DE               	goto	u4151
 11045  00DD  28DF               	goto	u4150
 11046  00DE                     u4151:	
 11047  00DE  29E8               	goto	l208
 11048  00DF                     u4150:	
 11049  00DF                     l7226:	
 11050                           
 11051                           ;main.c: 228:             PIE4bits.TMR1IE = 0;
 11052  00DF  002E               	movlb	14	; select bank14
 11053  00E0  101A               	bcf	26,0	;volatile
 11054  00E1                     l7228:	
 11055                           
 11056                           ;main.c: 229:             last5s =0;
 11057  00E1  0020               	movlb	0	; select bank0
 11058  00E2  01D7               	clrf	_last5s	;volatile
 11059  00E3                     l7230:	
 11060                           
 11061                           ;main.c: 230:             PIE4bits.TMR1IE = 1;
 11062  00E3  002E               	movlb	14	; select bank14
 11063  00E4  141A               	bsf	26,0	;volatile
 11064  00E5                     l7232:	
 11065                           
 11066                           ;main.c: 233:                     if(!config_mode){
 11067  00E5  0020               	movlb	0	; select bank0
 11068  00E6  0854               	movf	_config_mode,w	;volatile
 11069  00E7  1D03               	btfss	3,2
 11070  00E8  28EA               	goto	u4161
 11071  00E9  28EB               	goto	u4160
 11072  00EA                     u4161:	
 11073  00EA  29CC               	goto	l7286
 11074  00EB                     u4160:	
 11075  00EB                     l7234:	
 11076                           
 11077                           ;main.c: 235:                             convertedValue = ADC_read();
 11078  00EB  318C  24A1  3180   	fcall	_ADC_read
 11079  00EE  0020               	movlb	0	; select bank0
 11080  00EF  0826               	movf	?_ADC_read+1,w
 11081  00F0  00CC               	movwf	_convertedValue+1
 11082  00F1  0825               	movf	?_ADC_read,w
 11083  00F2  00CB               	movwf	_convertedValue
 11084  00F3                     l7236:	
 11085                           
 11086                           ;main.c: 236:                             lum_bin = (convertedValue >> 8);
 11087  00F3  084C               	movf	_convertedValue+1,w
 11088  00F4  00BD               	movwf	??_main+1
 11089  00F5  084B               	movf	_convertedValue,w
 11090  00F6  00BC               	movwf	??_main
 11091  00F7  083D               	movf	??_main+1,w
 11092  00F8  00BC               	movwf	??_main
 11093  00F9  01BD               	clrf	??_main+1
 11094  00FA  083C               	movf	??_main,w
 11095  00FB  00C7               	movwf	_lum_bin
 11096  00FC  083D               	movf	??_main+1,w
 11097  00FD  00C8               	movwf	_lum_bin+1
 11098  00FE                     l7238:	
 11099                           
 11100                           ;main.c: 237:                             LED_bin(lum_bin);
 11101  00FE  0848               	movf	_lum_bin+1,w
 11102  00FF  00A4               	movwf	LED_bin@value+1
 11103  0100  0847               	movf	_lum_bin,w
 11104  0101  00A3               	movwf	LED_bin@value
 11105  0102  3187  27E5  3180   	fcall	_LED_bin
 11106  0105                     l7240:	
 11107                           
 11108                           ;main.c: 240:                             __nop();
 11109  0105  0000               	nop
 11110  0106                     l7242:	
 11111                           
 11112                           ;main.c: 242:                             __nop();
 11113  0106  0000               	nop
 11114  0107                     l7244:	
 11115                           
 11116                           ;main.c: 245:                             if (temp != read_ring(nreg_pt, nreg, nreg_init
      +                          , 0, 3) || lum_bin != read_ring(nreg_pt, nreg, nreg_init, 0, 4)) {
 11117  0107  0020               	movlb	0	; select bank0
 11118  0108  0867               	movf	_nreg,w
 11119  0109  00BC               	movwf	??_main
 11120  010A  083C               	movf	??_main,w
 11121  010B  00A7               	movwf	read_ring@nreg
 11122  010C  085E               	movf	_nreg_init,w
 11123  010D  00BD               	movwf	??_main+1
 11124  010E  083D               	movf	??_main+1,w
 11125  010F  00A8               	movwf	read_ring@nreg_init
 11126  0110  01A9               	clrf	read_ring@index
 11127  0111  3003               	movlw	3
 11128  0112  00BE               	movwf	??_main+2
 11129  0113  083E               	movf	??_main+2,w
 11130  0114  00AA               	movwf	read_ring@subindex
 11131  0115  085D               	movf	_nreg_pt,w
 11132  0116  318F  27C1  3180   	fcall	_read_ring
 11133  0119  0020               	movlb	0	; select bank0
 11134  011A  0652               	xorwf	_temp,w
 11135  011B  1D03               	skipz
 11136  011C  291E               	goto	u4171
 11137  011D  291F               	goto	u4170
 11138  011E                     u4171:	
 11139  011E  293D               	goto	l7248
 11140  011F                     u4170:	
 11141  011F                     l7246:	
 11142  011F  0867               	movf	_nreg,w
 11143  0120  00BC               	movwf	??_main
 11144  0121  083C               	movf	??_main,w
 11145  0122  00A7               	movwf	read_ring@nreg
 11146  0123  085E               	movf	_nreg_init,w
 11147  0124  00BD               	movwf	??_main+1
 11148  0125  083D               	movf	??_main+1,w
 11149  0126  00A8               	movwf	read_ring@nreg_init
 11150  0127  01A9               	clrf	read_ring@index
 11151  0128  3004               	movlw	4
 11152  0129  00BE               	movwf	??_main+2
 11153  012A  083E               	movf	??_main+2,w
 11154  012B  00AA               	movwf	read_ring@subindex
 11155  012C  085D               	movf	_nreg_pt,w
 11156  012D  318F  27C1  3180   	fcall	_read_ring
 11157  0130  0020               	movlb	0	; select bank0
 11158  0131  00BF               	movwf	??_main+3
 11159  0132  01C0               	clrf	??_main+4
 11160  0133  0848               	movf	_lum_bin+1,w
 11161  0134  0640               	xorwf	??_main+4,w
 11162  0135  1D03               	skipz
 11163  0136  2939               	goto	u4185
 11164  0137  0847               	movf	_lum_bin,w
 11165  0138  063F               	xorwf	??_main+3,w
 11166  0139                     u4185:	
 11167  0139  1903               	skipnz
 11168  013A  293C               	goto	u4181
 11169  013B  293D               	goto	u4180
 11170  013C                     u4181:	
 11171  013C  2975               	goto	l7254
 11172  013D                     u4180:	
 11173  013D                     l7248:	
 11174                           
 11175                           ;main.c: 246:                                 ring_buffer (ring_byte,clkh, clkm, seg, te
      +                          mp,lum_bin);
 11176  013D  085C               	movf	_clkh,w	;volatile
 11177  013E  00BC               	movwf	??_main
 11178  013F  083C               	movf	??_main,w
 11179  0140  00A3               	movwf	ring_buffer@clock_h
 11180  0141  085B               	movf	_clkm,w	;volatile
 11181  0142  00BD               	movwf	??_main+1
 11182  0143  083D               	movf	??_main+1,w
 11183  0144  00A4               	movwf	ring_buffer@clock_m
 11184  0145  085A               	movf	_seg,w	;volatile
 11185  0146  00BE               	movwf	??_main+2
 11186  0147  083E               	movf	??_main+2,w
 11187  0148  00A5               	movwf	ring_buffer@clock_s
 11188  0149  0852               	movf	_temp,w
 11189  014A  00BF               	movwf	??_main+3
 11190  014B  083F               	movf	??_main+3,w
 11191  014C  00A6               	movwf	ring_buffer@tem
 11192  014D  0847               	movf	_lum_bin,w
 11193  014E  00C0               	movwf	??_main+4
 11194  014F  0840               	movf	??_main+4,w
 11195  0150  00A7               	movwf	ring_buffer@lum
 11196  0151  30C7               	movlw	(low (_ring_byte| 0))& (0+255)
 11197  0152  318E  2697  3180   	fcall	_ring_buffer
 11198                           
 11199                           ;main.c: 247:                                 push_ring(&nreg_pt, nreg, &nreg_init, ring
      +                          _byte);
 11200  0155  0020               	movlb	0	; select bank0
 11201  0156  0867               	movf	_nreg,w
 11202  0157  00BC               	movwf	??_main
 11203  0158  083C               	movf	??_main,w
 11204  0159  00AD               	movwf	push_ring@nreg
 11205  015A  305E               	movlw	(low (_nreg_init| 0))& (0+255)
 11206  015B  00BD               	movwf	??_main+1
 11207  015C  083D               	movf	??_main+1,w
 11208  015D  00AE               	movwf	push_ring@nreg_init
 11209  015E  30C7               	movlw	(low (_ring_byte| 0))& (0+255)
 11210  015F  00BE               	movwf	??_main+2
 11211  0160  083E               	movf	??_main+2,w
 11212  0161  00AF               	movwf	push_ring@ring_byte
 11213  0162  305D               	movlw	(low (_nreg_pt| 0))& (0+255)
 11214  0163  3187  279E  3180   	fcall	_push_ring
 11215  0166                     l7250:	
 11216                           
 11217                           ;main.c: 248:                                 DATAEE_WriteByte(0xF0FF - 10 + 4, nreg_pt)
      +                          ;
 11218  0166  30F9               	movlw	249
 11219  0167  0020               	movlb	0	; select bank0
 11220  0168  00A9               	movwf	DATAEE_WriteByte@bAdd
 11221  0169  30F0               	movlw	240
 11222  016A  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11223  016B  085D               	movf	_nreg_pt,w
 11224  016C  00BC               	movwf	??_main
 11225  016D  083C               	movf	??_main,w
 11226  016E  00AB               	movwf	DATAEE_WriteByte@bData
 11227  016F  318D  2572  3180   	fcall	_DATAEE_WriteByte
 11228  0172                     l7252:	
 11229                           
 11230                           ;main.c: 249:                                 cksum_w();
 11231  0172  318B  236C  3180   	fcall	_cksum_w
 11232  0175                     l7254:	
 11233                           
 11234                           ;main.c: 253:                             lum_threshold = (lum_bin > 2 || temp > 100 ) &
      +                           alaf;
 11235  0175  0021               	movlb	1	; select bank1
 11236  0176  01D8               	clrf	_main$509^(0+128)
 11237  0177  0AD8               	incf	_main$509^(0+128),f
 11238  0178                     l7256:	
 11239  0178  3000               	movlw	0
 11240  0179  0020               	movlb	0	; select bank0
 11241  017A  0248               	subwf	_lum_bin+1,w
 11242  017B  3003               	movlw	3
 11243  017C  1903               	skipnz
 11244  017D  0247               	subwf	_lum_bin,w
 11245  017E  1803               	skipnc
 11246  017F  2981               	goto	u4191
 11247  0180  2982               	goto	u4190
 11248  0181                     u4191:	
 11249  0181  298A               	goto	l7262
 11250  0182                     u4190:	
 11251  0182                     l7258:	
 11252  0182  3065               	movlw	101
 11253  0183  0252               	subwf	_temp,w
 11254  0184  1803               	skipnc
 11255  0185  2987               	goto	u4201
 11256  0186  2988               	goto	u4200
 11257  0187                     u4201:	
 11258  0187  298A               	goto	l7262
 11259  0188                     u4200:	
 11260  0188                     l7260:	
 11261  0188  0021               	movlb	1	; select bank1
 11262  0189  01D8               	clrf	_main$509^(0+128)
 11263  018A                     l7262:	
 11264  018A  0021               	movlb	1	; select bank1
 11265  018B  0858               	movf	_main$509^(0+128),w
 11266  018C  0020               	movlb	0	; select bank0
 11267  018D  0551               	andwf	_alaf,w
 11268  018E  00BC               	movwf	??_main
 11269  018F  01BD               	clrf	??_main+1
 11270  0190  083C               	movf	??_main,w
 11271  0191  00C5               	movwf	_lum_threshold
 11272  0192  083D               	movf	??_main+1,w
 11273  0193  00C6               	movwf	_lum_threshold+1
 11274  0194                     l7264:	
 11275                           
 11276                           ;main.c: 255:                             if(lum_threshold){
 11277  0194  0845               	movf	_lum_threshold,w
 11278  0195  0446               	iorwf	_lum_threshold+1,w
 11279  0196  1903               	btfsc	3,2
 11280  0197  2999               	goto	u4211
 11281  0198  299A               	goto	u4210
 11282  0199                     u4211:	
 11283  0199  29BC               	goto	l7280
 11284  019A                     u4210:	
 11285  019A                     l7266:	
 11286                           
 11287                           ;main.c: 256:                                 if(alarm == 2){
 11288  019A  3002               	movlw	2
 11289  019B  0653               	xorwf	_alarm,w	;volatile
 11290  019C  1D03               	btfss	3,2
 11291  019D  299F               	goto	u4221
 11292  019E  29A0               	goto	u4220
 11293  019F                     u4221:	
 11294  019F  29AC               	goto	l7272
 11295  01A0                     u4220:	
 11296  01A0                     l7268:	
 11297                           
 11298                           ;main.c: 257:                                     duty_cycle +=1 ;
 11299  01A0  3001               	movlw	1
 11300  01A1  07C9               	addwf	_duty_cycle,f
 11301  01A2  3000               	movlw	0
 11302  01A3  3DCA               	addwfc	_duty_cycle+1,f
 11303  01A4                     l7270:	
 11304                           
 11305                           ;main.c: 258:                                     PWM6_LoadDutyValue(duty_cycle);
 11306  01A4  084A               	movf	_duty_cycle+1,w
 11307  01A5  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11308  01A6  0849               	movf	_duty_cycle,w
 11309  01A7  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 11310  01A8  318C  2488  3180   	fcall	_PWM6_LoadDutyValue
 11311                           
 11312                           ;main.c: 259:                                 }
 11313  01AB  29D8               	goto	l7294
 11314  01AC                     l7272:	
 11315  01AC  0853               	movf	_alarm,w	;volatile
 11316  01AD  1D03               	btfss	3,2
 11317  01AE  29B0               	goto	u4231
 11318  01AF  29B1               	goto	u4230
 11319  01B0                     u4231:	
 11320  01B0  29CB               	goto	l220
 11321  01B1                     u4230:	
 11322  01B1                     l7274:	
 11323                           
 11324                           ;main.c: 261:                                     PIE0bits.TMR0IE = 1;
 11325  01B1  002E               	movlb	14	; select bank14
 11326  01B2  1696               	bsf	22,5	;volatile
 11327  01B3                     l7276:	
 11328                           
 11329                           ;main.c: 262:                                     TMR0_StartTimer();
 11330  01B3  3189  21DF  3180   	fcall	_TMR0_StartTimer
 11331  01B6                     l7278:	
 11332                           
 11333                           ;main.c: 263:                                     alarm = 2 ;
 11334  01B6  3002               	movlw	2
 11335  01B7  0020               	movlb	0	; select bank0
 11336  01B8  00BC               	movwf	??_main
 11337  01B9  083C               	movf	??_main,w
 11338  01BA  00D3               	movwf	_alarm	;volatile
 11339  01BB  29D8               	goto	l7294
 11340  01BC                     l7280:	
 11341                           
 11342                           ;main.c: 267:                                 if(alarm == 2){
 11343  01BC  3002               	movlw	2
 11344  01BD  0653               	xorwf	_alarm,w	;volatile
 11345  01BE  1D03               	btfss	3,2
 11346  01BF  29C1               	goto	u4241
 11347  01C0  29C2               	goto	u4240
 11348  01C1                     u4241:	
 11349  01C1  29D8               	goto	l7294
 11350  01C2                     u4240:	
 11351  01C2                     l7282:	
 11352                           
 11353                           ;main.c: 268:                                     PWM6_LoadDutyValue(0);
 11354  01C2  3000               	movlw	0
 11355  01C3  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 11356  01C4  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11357  01C5  318C  2488  3180   	fcall	_PWM6_LoadDutyValue
 11358  01C8                     l7284:	
 11359                           
 11360                           ;main.c: 269:                                     alarm = 0 ;
 11361  01C8  0020               	movlb	0	; select bank0
 11362  01C9  01D3               	clrf	_alarm	;volatile
 11363  01CA  29D8               	goto	l7294
 11364  01CB                     l220:	
 11365                           ;main.c: 271:                             }
 11366                           
 11367                           
 11368                           ;main.c: 273:                     }
 11369  01CB  29D8               	goto	l7294
 11370  01CC                     l7286:	
 11371  01CC  0354               	decf	_config_mode,w	;volatile
 11372  01CD  1D03               	btfss	3,2
 11373  01CE  29D0               	goto	u4251
 11374  01CF  29D1               	goto	u4250
 11375  01D0                     u4251:	
 11376  01D0  29D8               	goto	l7294
 11377  01D1                     u4250:	
 11378  01D1                     l7288:	
 11379                           
 11380                           ;main.c: 277:                         (PIE0bits.INTE = 0);
 11381  01D1  002E               	movlb	14	; select bank14
 11382  01D2  1016               	bcf	22,0	;volatile
 11383  01D3                     l7290:	
 11384                           
 11385                           ;main.c: 278:                         config_routine();
 11386  01D3  3182  2296  3180   	fcall	_config_routine
 11387  01D6                     l7292:	
 11388                           
 11389                           ;main.c: 279:                         (PIE0bits.INTE = 1);
 11390  01D6  002E               	movlb	14	; select bank14
 11391  01D7  1416               	bsf	22,0	;volatile
 11392  01D8                     l7294:	
 11393                           
 11394                           ;main.c: 282:                     _delay((unsigned long)((10)*(1000000/4000.0)));
 11395  01D8  3004               	movlw	4
 11396  01D9  0020               	movlb	0	; select bank0
 11397  01DA  00BC               	movwf	??_main
 11398  01DB  303D               	movlw	61
 11399  01DC                     u4447:	
 11400  01DC  0B89               	decfsz	9,f
 11401  01DD  29DC               	goto	u4447
 11402  01DE  0BBC               	decfsz	??_main,f
 11403  01DF  29DC               	goto	u4447
 11404  01E0  3200               	nop2
 11405  01E1                     l7296:	
 11406                           
 11407                           ;main.c: 284:             }while(alarm == 2);
 11408  01E1  3002               	movlw	2
 11409  01E2  0020               	movlb	0	; select bank0
 11410  01E3  0653               	xorwf	_alarm,w	;volatile
 11411  01E4  1903               	btfsc	3,2
 11412  01E5  29E7               	goto	u4261
 11413  01E6  29E8               	goto	u4260
 11414  01E7                     u4261:	
 11415  01E7  28E5               	goto	l7232
 11416  01E8                     u4260:	
 11417  01E8                     l208:	
 11418                           ;main.c: 286:         }
 11419                           
 11420                           
 11421                           ;main.c: 288:        PIE4bits.TMR1IE = 0;
 11422  01E8  002E               	movlb	14	; select bank14
 11423  01E9  101A               	bcf	26,0	;volatile
 11424  01EA                     l7298:	
 11425                           
 11426                           ;main.c: 289:        t1m = last1m;
 11427  01EA  0020               	movlb	0	; select bank0
 11428  01EB  0856               	movf	_last1m,w	;volatile
 11429  01EC  00BC               	movwf	??_main
 11430  01ED  083C               	movf	??_main,w
 11431  01EE  0021               	movlb	1	; select bank1
 11432  01EF  00D7               	movwf	main@t1m^(0+128)
 11433  01F0                     l7300:	
 11434                           
 11435                           ;main.c: 290:        PIE4bits.TMR1IE = 1;
 11436  01F0  002E               	movlb	14	; select bank14
 11437  01F1  141A               	bsf	26,0	;volatile
 11438  01F2                     l7302:	
 11439                           
 11440                           ;main.c: 292:        if (t1m >= 1) {
 11441  01F2  0021               	movlb	1	; select bank1
 11442  01F3  0857               	movf	main@t1m^(0+128),w
 11443  01F4  1903               	btfsc	3,2
 11444  01F5  29F7               	goto	u4271
 11445  01F6  29F8               	goto	u4270
 11446  01F7                     u4271:	
 11447  01F7  28CB               	goto	l207
 11448  01F8                     u4270:	
 11449  01F8                     l7304:	
 11450                           
 11451                           ;main.c: 293:          save_recovery_params();
 11452  01F8  318D  25E6  3180   	fcall	_save_recovery_params
 11453  01FB  28CB               	goto	l207
 11454  01FC  3180  285B         	ljmp	start
 11455  01FE                     __end_of_main:	
 11456                           
 11457                           	psect	text1
 11458  0DE6                     __ptext1:	
 11459 ;; *************** function _save_recovery_params *****************
 11460 ;; Defined at:
 11461 ;;		line 696 in file "main.c"
 11462 ;; Parameters:    Size  Location     Type
 11463 ;;		None
 11464 ;; Auto vars:     Size  Location     Type
 11465 ;;  aux1            1   16[BANK0 ] unsigned char 
 11466 ;;  aux             1   15[BANK0 ] unsigned char 
 11467 ;; Return value:  Size  Location     Type
 11468 ;;                  1    wreg      void 
 11469 ;; Registers used:
 11470 ;;		wreg, status,2, status,0, pclath, cstack
 11471 ;; Tracked objects:
 11472 ;;		On entry : 0/0
 11473 ;;		On exit  : 0/0
 11474 ;;		Unchanged: 0/0
 11475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11477 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11478 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11479 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11480 ;;Total ram usage:        3 bytes
 11481 ;; Hardware stack levels used:    1
 11482 ;; Hardware stack levels required when called:    9
 11483 ;; This function calls:
 11484 ;;		_DATAEE_WriteByte
 11485 ;;		_cksum_w
 11486 ;; This function is called by:
 11487 ;;		_main
 11488 ;; This function uses a non-reentrant model
 11489 ;;
 11490                           
 11491                           
 11492                           ;psect for function _save_recovery_params
 11493  0DE6                     _save_recovery_params:	
 11494  0DE6                     l7116:	
 11495                           ;incstack = 0
 11496                           ; Regs used in _save_recovery_params: [wreg+status,2+status,0+pclath+cstack]
 11497                           
 11498                           
 11499                           ;main.c: 698:     unsigned char aux, aux1;;main.c: 699:     PIE4bits.TMR1IE = 0;
 11500  0DE6  002E               	movlb	14	; select bank14
 11501  0DE7  101A               	bcf	26,0	;volatile
 11502  0DE8                     l7118:	
 11503                           
 11504                           ;main.c: 700:     last1m = 0;
 11505  0DE8  0020               	movlb	0	; select bank0
 11506  0DE9  01D6               	clrf	_last1m	;volatile
 11507  0DEA                     l7120:	
 11508                           
 11509                           ;main.c: 701:     aux = clkh;
 11510  0DEA  085C               	movf	_clkh,w	;volatile
 11511  0DEB  00AE               	movwf	??_save_recovery_params
 11512  0DEC  082E               	movf	??_save_recovery_params,w
 11513  0DED  00AF               	movwf	save_recovery_params@aux
 11514  0DEE                     l7122:	
 11515                           
 11516                           ;main.c: 702:     aux1 = clkm;
 11517  0DEE  085B               	movf	_clkm,w	;volatile
 11518  0DEF  00AE               	movwf	??_save_recovery_params
 11519  0DF0  082E               	movf	??_save_recovery_params,w
 11520  0DF1  00B0               	movwf	save_recovery_params@aux1
 11521  0DF2                     l7124:	
 11522                           
 11523                           ;main.c: 703:     PIE4bits.TMR1IE = 1;
 11524  0DF2  002E               	movlb	14	; select bank14
 11525  0DF3  141A               	bsf	26,0	;volatile
 11526  0DF4                     l7126:	
 11527                           
 11528                           ;main.c: 704:     DATAEE_WriteByte(0xF0FF - 10 + 1, aux);
 11529  0DF4  30F6               	movlw	246
 11530  0DF5  0020               	movlb	0	; select bank0
 11531  0DF6  00A9               	movwf	DATAEE_WriteByte@bAdd
 11532  0DF7  30F0               	movlw	240
 11533  0DF8  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11534  0DF9  082F               	movf	save_recovery_params@aux,w
 11535  0DFA  00AE               	movwf	??_save_recovery_params
 11536  0DFB  082E               	movf	??_save_recovery_params,w
 11537  0DFC  00AB               	movwf	DATAEE_WriteByte@bData
 11538  0DFD  318D  2572  318D   	fcall	_DATAEE_WriteByte
 11539  0E00                     l7128:	
 11540                           
 11541                           ;main.c: 705:     DATAEE_WriteByte(0xF0FF - 10 + 2, aux1);
 11542  0E00  30F7               	movlw	247
 11543  0E01  0020               	movlb	0	; select bank0
 11544  0E02  00A9               	movwf	DATAEE_WriteByte@bAdd
 11545  0E03  30F0               	movlw	240
 11546  0E04  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11547  0E05  0830               	movf	save_recovery_params@aux1,w
 11548  0E06  00AE               	movwf	??_save_recovery_params
 11549  0E07  082E               	movf	??_save_recovery_params,w
 11550  0E08  00AB               	movwf	DATAEE_WriteByte@bData
 11551  0E09  318D  2572  318D   	fcall	_DATAEE_WriteByte
 11552  0E0C                     l7130:	
 11553                           
 11554                           ;main.c: 706:     cksum_w();
 11555  0E0C  318B  236C  318D   	fcall	_cksum_w
 11556  0E0F                     l353:	
 11557  0E0F  0008               	return
 11558  0E10                     __end_of_save_recovery_params:	
 11559                           
 11560                           	psect	text2
 11561  0E97                     __ptext2:	
 11562 ;; *************** function _ring_buffer *****************
 11563 ;; Defined at:
 11564 ;;		line 711 in file "main.c"
 11565 ;; Parameters:    Size  Location     Type
 11566 ;;  _ring_byte      1    wreg     PTR unsigned char 
 11567 ;;		 -> ring_byte(5), 
 11568 ;;  clock_h         1    3[BANK0 ] unsigned char 
 11569 ;;  clock_m         1    4[BANK0 ] unsigned char 
 11570 ;;  clock_s         1    5[BANK0 ] unsigned char 
 11571 ;;  tem             1    6[BANK0 ] unsigned char 
 11572 ;;  lum             1    7[BANK0 ] unsigned char 
 11573 ;; Auto vars:     Size  Location     Type
 11574 ;;  _ring_byte      1    9[BANK0 ] PTR unsigned char 
 11575 ;;		 -> ring_byte(5), 
 11576 ;; Return value:  Size  Location     Type
 11577 ;;                  1    wreg      void 
 11578 ;; Registers used:
 11579 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11580 ;; Tracked objects:
 11581 ;;		On entry : 0/0
 11582 ;;		On exit  : 0/0
 11583 ;;		Unchanged: 0/0
 11584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11585 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11586 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11587 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11588 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11589 ;;Total ram usage:        7 bytes
 11590 ;; Hardware stack levels used:    1
 11591 ;; Hardware stack levels required when called:    6
 11592 ;; This function calls:
 11593 ;;		Nothing
 11594 ;; This function is called by:
 11595 ;;		_main
 11596 ;; This function uses a non-reentrant model
 11597 ;;
 11598                           
 11599                           
 11600                           ;psect for function _ring_buffer
 11601  0E97                     _ring_buffer:	
 11602                           
 11603                           ;incstack = 0
 11604                           ; Regs used in _ring_buffer: [wreg+fsr1l+fsr1h+status,2+status,0]
 11605                           ;ring_buffer@_ring_byte stored from wreg
 11606  0E97  0020               	movlb	0	; select bank0
 11607  0E98  00A9               	movwf	ring_buffer@_ring_byte
 11608  0E99                     l7030:	
 11609                           
 11610                           ;main.c: 713:     PIE4bits.TMR1IE = 0;
 11611  0E99  002E               	movlb	14	; select bank14
 11612  0E9A  101A               	bcf	26,0	;volatile
 11613  0E9B                     l7032:	
 11614                           
 11615                           ;main.c: 714:     _ring_byte[0] = clock_h;
 11616  0E9B  0020               	movlb	0	; select bank0
 11617  0E9C  0823               	movf	ring_buffer@clock_h,w
 11618  0E9D  00A8               	movwf	??_ring_buffer
 11619  0E9E  0829               	movf	ring_buffer@_ring_byte,w
 11620  0E9F  0086               	movwf	6
 11621  0EA0  0187               	clrf	7
 11622  0EA1  0828               	movf	??_ring_buffer,w
 11623  0EA2  0081               	movwf	1
 11624                           
 11625                           ;main.c: 715:     _ring_byte[1] = clock_m;
 11626  0EA3  0824               	movf	ring_buffer@clock_m,w
 11627  0EA4  00A8               	movwf	??_ring_buffer
 11628  0EA5  0A29               	incf	ring_buffer@_ring_byte,w
 11629  0EA6  0086               	movwf	6
 11630  0EA7  0187               	clrf	7
 11631  0EA8  0828               	movf	??_ring_buffer,w
 11632  0EA9  0081               	movwf	1
 11633  0EAA                     l7034:	
 11634                           
 11635                           ;main.c: 716:     _ring_byte[2] = clock_s;
 11636  0EAA  0825               	movf	ring_buffer@clock_s,w
 11637  0EAB  00A8               	movwf	??_ring_buffer
 11638  0EAC  0829               	movf	ring_buffer@_ring_byte,w
 11639  0EAD  3E02               	addlw	2
 11640  0EAE  0086               	movwf	6
 11641  0EAF  0187               	clrf	7
 11642  0EB0  0828               	movf	??_ring_buffer,w
 11643  0EB1  0081               	movwf	1
 11644  0EB2                     l7036:	
 11645                           
 11646                           ;main.c: 717:     PIE4bits.TMR1IE = 1;
 11647  0EB2  002E               	movlb	14	; select bank14
 11648  0EB3  141A               	bsf	26,0	;volatile
 11649  0EB4                     l7038:	
 11650                           
 11651                           ;main.c: 718:     _ring_byte[3] = tem;
 11652  0EB4  0020               	movlb	0	; select bank0
 11653  0EB5  0826               	movf	ring_buffer@tem,w
 11654  0EB6  00A8               	movwf	??_ring_buffer
 11655  0EB7  0829               	movf	ring_buffer@_ring_byte,w
 11656  0EB8  3E03               	addlw	3
 11657  0EB9  0086               	movwf	6
 11658  0EBA  0187               	clrf	7
 11659  0EBB  0828               	movf	??_ring_buffer,w
 11660  0EBC  0081               	movwf	1
 11661  0EBD                     l7040:	
 11662                           
 11663                           ;main.c: 719:     _ring_byte[4] = lum;
 11664  0EBD  0827               	movf	ring_buffer@lum,w
 11665  0EBE  00A8               	movwf	??_ring_buffer
 11666  0EBF  0829               	movf	ring_buffer@_ring_byte,w
 11667  0EC0  3E04               	addlw	4
 11668  0EC1  0086               	movwf	6
 11669  0EC2  0187               	clrf	7
 11670  0EC3  0828               	movf	??_ring_buffer,w
 11671  0EC4  0081               	movwf	1
 11672  0EC5                     l356:	
 11673  0EC5  0008               	return
 11674  0EC6                     __end_of_ring_buffer:	
 11675                           
 11676                           	psect	text3
 11677  01FE                     __ptext3:	
 11678 ;; *************** function _recoverData *****************
 11679 ;; Defined at:
 11680 ;;		line 11 in file "eeprom_rw.c"
 11681 ;; Parameters:    Size  Location     Type
 11682 ;;		None
 11683 ;; Auto vars:     Size  Location     Type
 11684 ;;		None
 11685 ;; Return value:  Size  Location     Type
 11686 ;;                  1    wreg      void 
 11687 ;; Registers used:
 11688 ;;		wreg, status,2, status,0, pclath, cstack
 11689 ;; Tracked objects:
 11690 ;;		On entry : 0/0
 11691 ;;		On exit  : 0/0
 11692 ;;		Unchanged: 0/0
 11693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11696 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11697 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11698 ;;Total ram usage:        1 bytes
 11699 ;; Hardware stack levels used:    1
 11700 ;; Hardware stack levels required when called:    9
 11701 ;; This function calls:
 11702 ;;		_DATAEE_ReadByte
 11703 ;;		_DATAEE_WriteByte
 11704 ;;		_cksum
 11705 ;;		_cksum_w
 11706 ;;		_reset_recv
 11707 ;; This function is called by:
 11708 ;;		_main
 11709 ;; This function uses a non-reentrant model
 11710 ;;
 11711                           
 11712                           
 11713                           ;psect for function _recoverData
 11714  01FE                     _recoverData:	
 11715  01FE                     l6978:	
 11716                           ;incstack = 0
 11717                           ; Regs used in _recoverData: [wreg+status,2+status,0+pclath+cstack]
 11718                           
 11719                           
 11720                           ;eeprom_rw.c: 13:     if(DATAEE_ReadByte(0xF0FF - 10) == 0xAB){
 11721  01FE  30F5               	movlw	245
 11722  01FF  0020               	movlb	0	; select bank0
 11723  0200  00A3               	movwf	DATAEE_ReadByte@bAdd
 11724  0201  30F0               	movlw	240
 11725  0202  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11726  0203  318B  234D  3181   	fcall	_DATAEE_ReadByte
 11727  0206  3AAB               	xorlw	171
 11728  0207  1D03               	skipz
 11729  0208  2A0A               	goto	u3981
 11730  0209  2A0B               	goto	u3980
 11731  020A                     u3981:	
 11732  020A  2A5F               	goto	l6984
 11733  020B                     u3980:	
 11734  020B                     l6980:	
 11735                           
 11736                           ;eeprom_rw.c: 14:         if(DATAEE_ReadByte(0xF0FF) == cksum()){
 11737  020B  318D  2552  3181   	fcall	_cksum
 11738  020E  0020               	movlb	0	; select bank0
 11739  020F  00AF               	movwf	??_recoverData
 11740  0210  30FF               	movlw	255
 11741  0211  00A3               	movwf	DATAEE_ReadByte@bAdd
 11742  0212  30F0               	movlw	240
 11743  0213  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11744  0214  318B  234D  3181   	fcall	_DATAEE_ReadByte
 11745  0217  0020               	movlb	0	; select bank0
 11746  0218  062F               	xorwf	??_recoverData,w
 11747  0219  1D03               	skipz
 11748  021A  2A1C               	goto	u3991
 11749  021B  2A1D               	goto	u3990
 11750  021C                     u3991:	
 11751  021C  2A5F               	goto	l6984
 11752  021D                     u3990:	
 11753  021D                     l6982:	
 11754                           
 11755                           ;eeprom_rw.c: 15:             clkh = DATAEE_ReadByte(0xF0FF - 10 + 1);
 11756  021D  30F6               	movlw	246
 11757  021E  00A3               	movwf	DATAEE_ReadByte@bAdd
 11758  021F  30F0               	movlw	240
 11759  0220  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11760  0221  318B  234D  3181   	fcall	_DATAEE_ReadByte
 11761  0224  0020               	movlb	0	; select bank0
 11762  0225  00AF               	movwf	??_recoverData
 11763  0226  082F               	movf	??_recoverData,w
 11764  0227  00DC               	movwf	_clkh	;volatile
 11765                           
 11766                           ;eeprom_rw.c: 16:             clkm = DATAEE_ReadByte(0xF0FF - 10 + 2);
 11767  0228  30F7               	movlw	247
 11768  0229  00A3               	movwf	DATAEE_ReadByte@bAdd
 11769  022A  30F0               	movlw	240
 11770  022B  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11771  022C  318B  234D  3181   	fcall	_DATAEE_ReadByte
 11772  022F  0020               	movlb	0	; select bank0
 11773  0230  00AF               	movwf	??_recoverData
 11774  0231  082F               	movf	??_recoverData,w
 11775  0232  00DB               	movwf	_clkm	;volatile
 11776                           
 11777                           ;eeprom_rw.c: 17:             nreg = DATAEE_ReadByte(0xF0FF - 10 + 3);
 11778  0233  30F8               	movlw	248
 11779  0234  00A3               	movwf	DATAEE_ReadByte@bAdd
 11780  0235  30F0               	movlw	240
 11781  0236  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11782  0237  318B  234D  3181   	fcall	_DATAEE_ReadByte
 11783  023A  0020               	movlb	0	; select bank0
 11784  023B  00AF               	movwf	??_recoverData
 11785  023C  082F               	movf	??_recoverData,w
 11786  023D  00E7               	movwf	_nreg
 11787                           
 11788                           ;eeprom_rw.c: 18:             nreg_pt = DATAEE_ReadByte(0xF0FF - 10 + 4);
 11789  023E  30F9               	movlw	249
 11790  023F  00A3               	movwf	DATAEE_ReadByte@bAdd
 11791  0240  30F0               	movlw	240
 11792  0241  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11793  0242  318B  234D  3181   	fcall	_DATAEE_ReadByte
 11794  0245  0020               	movlb	0	; select bank0
 11795  0246  00AF               	movwf	??_recoverData
 11796  0247  082F               	movf	??_recoverData,w
 11797  0248  00DD               	movwf	_nreg_pt
 11798                           
 11799                           ;eeprom_rw.c: 19:             pmon = DATAEE_ReadByte(0xF0FF - 10 + 5);
 11800  0249  30FA               	movlw	250
 11801  024A  00A3               	movwf	DATAEE_ReadByte@bAdd
 11802  024B  30F0               	movlw	240
 11803  024C  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11804  024D  318B  234D  3181   	fcall	_DATAEE_ReadByte
 11805  0250  0020               	movlb	0	; select bank0
 11806  0251  00AF               	movwf	??_recoverData
 11807  0252  082F               	movf	??_recoverData,w
 11808  0253  00E6               	movwf	_pmon
 11809                           
 11810                           ;eeprom_rw.c: 20:             tala = DATAEE_ReadByte(0xF0FF - 10 + 6);
 11811  0254  30FB               	movlw	251
 11812  0255  00A3               	movwf	DATAEE_ReadByte@bAdd
 11813  0256  30F0               	movlw	240
 11814  0257  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11815  0258  318B  234D  3181   	fcall	_DATAEE_ReadByte
 11816  025B  0020               	movlb	0	; select bank0
 11817  025C  00AF               	movwf	??_recoverData
 11818  025D  082F               	movf	??_recoverData,w
 11819  025E  00E5               	movwf	_tala
 11820  025F                     l6984:	
 11821                           
 11822                           ;eeprom_rw.c: 24:     reset_recv();
 11823  025F  318C  24D7  3181   	fcall	_reset_recv
 11824  0262                     l6986:	
 11825                           
 11826                           ;eeprom_rw.c: 27:     DATAEE_WriteByte(0xF0FF - 10, 0xAB);
 11827  0262  30F5               	movlw	245
 11828  0263  0020               	movlb	0	; select bank0
 11829  0264  00A9               	movwf	DATAEE_WriteByte@bAdd
 11830  0265  30F0               	movlw	240
 11831  0266  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11832  0267  30AB               	movlw	171
 11833  0268  00AF               	movwf	??_recoverData
 11834  0269  082F               	movf	??_recoverData,w
 11835  026A  00AB               	movwf	DATAEE_WriteByte@bData
 11836  026B  318D  2572  3181   	fcall	_DATAEE_WriteByte
 11837  026E                     l6988:	
 11838                           
 11839                           ;eeprom_rw.c: 28:     DATAEE_WriteByte(0xF0FF - 10 + 3, nreg);
 11840  026E  30F8               	movlw	248
 11841  026F  0020               	movlb	0	; select bank0
 11842  0270  00A9               	movwf	DATAEE_WriteByte@bAdd
 11843  0271  30F0               	movlw	240
 11844  0272  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11845  0273  0867               	movf	_nreg,w
 11846  0274  00AF               	movwf	??_recoverData
 11847  0275  082F               	movf	??_recoverData,w
 11848  0276  00AB               	movwf	DATAEE_WriteByte@bData
 11849  0277  318D  2572  3181   	fcall	_DATAEE_WriteByte
 11850  027A                     l6990:	
 11851                           
 11852                           ;eeprom_rw.c: 29:     DATAEE_WriteByte(0xF0FF - 10 + 5, pmon);
 11853  027A  30FA               	movlw	250
 11854  027B  0020               	movlb	0	; select bank0
 11855  027C  00A9               	movwf	DATAEE_WriteByte@bAdd
 11856  027D  30F0               	movlw	240
 11857  027E  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11858  027F  0866               	movf	_pmon,w
 11859  0280  00AF               	movwf	??_recoverData
 11860  0281  082F               	movf	??_recoverData,w
 11861  0282  00AB               	movwf	DATAEE_WriteByte@bData
 11862  0283  318D  2572  3181   	fcall	_DATAEE_WriteByte
 11863  0286                     l6992:	
 11864                           
 11865                           ;eeprom_rw.c: 30:     DATAEE_WriteByte(0xF0FF - 10 + 6, tala);
 11866  0286  30FB               	movlw	251
 11867  0287  0020               	movlb	0	; select bank0
 11868  0288  00A9               	movwf	DATAEE_WriteByte@bAdd
 11869  0289  30F0               	movlw	240
 11870  028A  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11871  028B  0865               	movf	_tala,w
 11872  028C  00AF               	movwf	??_recoverData
 11873  028D  082F               	movf	??_recoverData,w
 11874  028E  00AB               	movwf	DATAEE_WriteByte@bData
 11875  028F  318D  2572  3181   	fcall	_DATAEE_WriteByte
 11876  0292                     l6994:	
 11877                           
 11878                           ;eeprom_rw.c: 31:     cksum_w();
 11879  0292  318B  236C  3181   	fcall	_cksum_w
 11880  0295                     l532:	
 11881  0295  0008               	return
 11882  0296                     __end_of_recoverData:	
 11883                           
 11884                           	psect	text4
 11885  0CD7                     __ptext4:	
 11886 ;; *************** function _reset_recv *****************
 11887 ;; Defined at:
 11888 ;;		line 75 in file "eeprom_rw.c"
 11889 ;; Parameters:    Size  Location     Type
 11890 ;;		None
 11891 ;; Auto vars:     Size  Location     Type
 11892 ;;  i               2   13[BANK0 ] unsigned int 
 11893 ;; Return value:  Size  Location     Type
 11894 ;;                  1    wreg      void 
 11895 ;; Registers used:
 11896 ;;		wreg, status,2, status,0, pclath, cstack
 11897 ;; Tracked objects:
 11898 ;;		On entry : 0/0
 11899 ;;		On exit  : 0/0
 11900 ;;		Unchanged: 0/0
 11901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11903 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11905 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11906 ;;Total ram usage:        2 bytes
 11907 ;; Hardware stack levels used:    1
 11908 ;; Hardware stack levels required when called:    7
 11909 ;; This function calls:
 11910 ;;		_DATAEE_WriteByte
 11911 ;; This function is called by:
 11912 ;;		_recoverData
 11913 ;; This function uses a non-reentrant model
 11914 ;;
 11915                           
 11916                           
 11917                           ;psect for function _reset_recv
 11918  0CD7                     _reset_recv:	
 11919  0CD7                     l6800:	
 11920                           ;incstack = 0
 11921                           ; Regs used in _reset_recv: [wreg+status,2+status,0+pclath+cstack]
 11922                           
 11923                           
 11924                           ;eeprom_rw.c: 77:     for(unsigned int i = 0xF0FF - 10; i <= 0xF0FF; i ++)
 11925  0CD7  30F5               	movlw	245
 11926  0CD8  0020               	movlb	0	; select bank0
 11927  0CD9  00AD               	movwf	reset_recv@i
 11928  0CDA  30F0               	movlw	240
 11929  0CDB  00AE               	movwf	reset_recv@i+1
 11930  0CDC                     l6804:	
 11931                           
 11932                           ;eeprom_rw.c: 78:         DATAEE_WriteByte(i, 0);
 11933  0CDC  082E               	movf	reset_recv@i+1,w
 11934  0CDD  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11935  0CDE  082D               	movf	reset_recv@i,w
 11936  0CDF  00A9               	movwf	DATAEE_WriteByte@bAdd
 11937  0CE0  01AB               	clrf	DATAEE_WriteByte@bData
 11938  0CE1  318D  2572  318C   	fcall	_DATAEE_WriteByte
 11939  0CE4                     l6806:	
 11940  0CE4  3001               	movlw	1
 11941  0CE5  0020               	movlb	0	; select bank0
 11942  0CE6  07AD               	addwf	reset_recv@i,f
 11943  0CE7  3000               	movlw	0
 11944  0CE8  3DAE               	addwfc	reset_recv@i+1,f
 11945  0CE9                     l6808:	
 11946  0CE9  30F1               	movlw	241
 11947  0CEA  022E               	subwf	reset_recv@i+1,w
 11948  0CEB  3000               	movlw	0
 11949  0CEC  1903               	skipnz
 11950  0CED  022D               	subwf	reset_recv@i,w
 11951  0CEE  1C03               	skipc
 11952  0CEF  2CF1               	goto	u3941
 11953  0CF0  2CF2               	goto	u3940
 11954  0CF1                     u3941:	
 11955  0CF1  2CDC               	goto	l6804
 11956  0CF2                     u3940:	
 11957  0CF2                     l559:	
 11958  0CF2  0008               	return
 11959  0CF3                     __end_of_reset_recv:	
 11960                           
 11961                           	psect	text5
 11962  0B6C                     __ptext5:	
 11963 ;; *************** function _cksum_w *****************
 11964 ;; Defined at:
 11965 ;;		line 61 in file "eeprom_rw.c"
 11966 ;; Parameters:    Size  Location     Type
 11967 ;;		None
 11968 ;; Auto vars:     Size  Location     Type
 11969 ;;		None
 11970 ;; Return value:  Size  Location     Type
 11971 ;;                  1    wreg      void 
 11972 ;; Registers used:
 11973 ;;		wreg, status,2, status,0, pclath, cstack
 11974 ;; Tracked objects:
 11975 ;;		On entry : 0/0
 11976 ;;		On exit  : 0/0
 11977 ;;		Unchanged: 0/0
 11978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11981 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11982 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11983 ;;Total ram usage:        1 bytes
 11984 ;; Hardware stack levels used:    1
 11985 ;; Hardware stack levels required when called:    8
 11986 ;; This function calls:
 11987 ;;		_DATAEE_WriteByte
 11988 ;;		_cksum
 11989 ;; This function is called by:
 11990 ;;		_main
 11991 ;;		_save_recovery_params
 11992 ;;		_recoverData
 11993 ;; This function uses a non-reentrant model
 11994 ;;
 11995                           
 11996                           
 11997                           ;psect for function _cksum_w
 11998  0B6C                     _cksum_w:	
 11999  0B6C                     l6738:	
 12000                           ;incstack = 0
 12001                           ; Regs used in _cksum_w: [wreg+status,2+status,0+pclath+cstack]
 12002                           
 12003                           
 12004                           ;eeprom_rw.c: 63:     DATAEE_WriteByte(0xF0FF, cksum());
 12005  0B6C  30FF               	movlw	255
 12006  0B6D  0020               	movlb	0	; select bank0
 12007  0B6E  00A9               	movwf	DATAEE_WriteByte@bAdd
 12008  0B6F  30F0               	movlw	240
 12009  0B70  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 12010  0B71  318D  2552  318B   	fcall	_cksum
 12011  0B74  0020               	movlb	0	; select bank0
 12012  0B75  00AD               	movwf	??_cksum_w
 12013  0B76  082D               	movf	??_cksum_w,w
 12014  0B77  00AB               	movwf	DATAEE_WriteByte@bData
 12015  0B78  318D  2572  318B   	fcall	_DATAEE_WriteByte
 12016  0B7B                     l549:	
 12017  0B7B  0008               	return
 12018  0B7C                     __end_of_cksum_w:	
 12019                           
 12020                           	psect	text6
 12021  0D52                     __ptext6:	
 12022 ;; *************** function _cksum *****************
 12023 ;; Defined at:
 12024 ;;		line 66 in file "eeprom_rw.c"
 12025 ;; Parameters:    Size  Location     Type
 12026 ;;		None
 12027 ;; Auto vars:     Size  Location     Type
 12028 ;;  i               2    7[BANK0 ] unsigned int 
 12029 ;;  res             1    6[BANK0 ] unsigned char 
 12030 ;; Return value:  Size  Location     Type
 12031 ;;                  1    wreg      unsigned char 
 12032 ;; Registers used:
 12033 ;;		wreg, status,2, status,0, pclath, cstack
 12034 ;; Tracked objects:
 12035 ;;		On entry : 0/0
 12036 ;;		On exit  : 0/0
 12037 ;;		Unchanged: 0/0
 12038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12040 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12041 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12042 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12043 ;;Total ram usage:        4 bytes
 12044 ;; Hardware stack levels used:    1
 12045 ;; Hardware stack levels required when called:    7
 12046 ;; This function calls:
 12047 ;;		_DATAEE_ReadByte
 12048 ;; This function is called by:
 12049 ;;		_recoverData
 12050 ;;		_cksum_w
 12051 ;; This function uses a non-reentrant model
 12052 ;;
 12053                           
 12054                           
 12055                           ;psect for function _cksum
 12056  0D52                     _cksum:	
 12057  0D52                     l6720:	
 12058                           ;incstack = 0
 12059                           ; Regs used in _cksum: [wreg+status,2+status,0+pclath+cstack]
 12060                           
 12061                           
 12062                           ;eeprom_rw.c: 68:     unsigned char res = 0;
 12063  0D52  0020               	movlb	0	; select bank0
 12064  0D53  01A6               	clrf	cksum@res
 12065  0D54                     l6722:	
 12066                           
 12067                           ;eeprom_rw.c: 69:     for(unsigned int i = 0xF0FF - 10; i < 0xF0FF; i ++) {
 12068  0D54  30F5               	movlw	245
 12069  0D55  00A7               	movwf	cksum@i
 12070  0D56  30F0               	movlw	240
 12071  0D57  00A8               	movwf	cksum@i+1
 12072  0D58                     l6728:	
 12073                           
 12074                           ;eeprom_rw.c: 70:         res += DATAEE_ReadByte(i);
 12075  0D58  0828               	movf	cksum@i+1,w
 12076  0D59  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 12077  0D5A  0827               	movf	cksum@i,w
 12078  0D5B  00A3               	movwf	DATAEE_ReadByte@bAdd
 12079  0D5C  318B  234D  318D   	fcall	_DATAEE_ReadByte
 12080  0D5F  0020               	movlb	0	; select bank0
 12081  0D60  00A5               	movwf	??_cksum
 12082  0D61  0825               	movf	??_cksum,w
 12083  0D62  07A6               	addwf	cksum@res,f
 12084  0D63                     l6730:	
 12085                           
 12086                           ;eeprom_rw.c: 71:     }
 12087  0D63  3001               	movlw	1
 12088  0D64  07A7               	addwf	cksum@i,f
 12089  0D65  3000               	movlw	0
 12090  0D66  3DA8               	addwfc	cksum@i+1,f
 12091  0D67                     l6732:	
 12092  0D67  30F0               	movlw	240
 12093  0D68  0228               	subwf	cksum@i+1,w
 12094  0D69  30FF               	movlw	255
 12095  0D6A  1903               	skipnz
 12096  0D6B  0227               	subwf	cksum@i,w
 12097  0D6C  1C03               	skipc
 12098  0D6D  2D6F               	goto	u3861
 12099  0D6E  2D70               	goto	u3860
 12100  0D6F                     u3861:	
 12101  0D6F  2D58               	goto	l6728
 12102  0D70                     u3860:	
 12103  0D70                     l6734:	
 12104                           
 12105                           ;eeprom_rw.c: 72:     return res;
 12106  0D70  0826               	movf	cksum@res,w
 12107  0D71                     l554:	
 12108  0D71  0008               	return
 12109  0D72                     __end_of_cksum:	
 12110                           
 12111                           	psect	text7
 12112  0FC1                     __ptext7:	
 12113 ;; *************** function _read_ring *****************
 12114 ;; Defined at:
 12115 ;;		line 43 in file "eeprom_rw.c"
 12116 ;; Parameters:    Size  Location     Type
 12117 ;;  nreg_pt         1    wreg     unsigned char 
 12118 ;;  nreg            1    7[BANK0 ] unsigned char 
 12119 ;;  nreg_init       1    8[BANK0 ] unsigned char 
 12120 ;;  index           1    9[BANK0 ] unsigned char 
 12121 ;;  subindex        1   10[BANK0 ] unsigned char 
 12122 ;; Auto vars:     Size  Location     Type
 12123 ;;  nreg_pt         1   14[BANK0 ] unsigned char 
 12124 ;;  absindex        1   15[BANK0 ] unsigned char 
 12125 ;;  i               1   13[BANK0 ] unsigned char 
 12126 ;; Return value:  Size  Location     Type
 12127 ;;                  1    wreg      unsigned char 
 12128 ;; Registers used:
 12129 ;;		wreg, status,2, status,0, pclath, cstack
 12130 ;; Tracked objects:
 12131 ;;		On entry : 0/0
 12132 ;;		On exit  : 0/0
 12133 ;;		Unchanged: 0/0
 12134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12135 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12136 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12137 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12138 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12139 ;;Total ram usage:        9 bytes
 12140 ;; Hardware stack levels used:    1
 12141 ;; Hardware stack levels required when called:    7
 12142 ;; This function calls:
 12143 ;;		_DATAEE_ReadByte
 12144 ;;		___bmul
 12145 ;; This function is called by:
 12146 ;;		_main
 12147 ;; This function uses a non-reentrant model
 12148 ;;
 12149                           
 12150                           
 12151                           ;psect for function _read_ring
 12152  0FC1                     _read_ring:	
 12153                           
 12154                           ;incstack = 0
 12155                           ; Regs used in _read_ring: [wreg+status,2+status,0+pclath+cstack]
 12156                           ;read_ring@nreg_pt stored from wreg
 12157  0FC1  0020               	movlb	0	; select bank0
 12158  0FC2  00AE               	movwf	read_ring@nreg_pt
 12159  0FC3                     l7008:	
 12160  0FC3                     l7010:	
 12161                           
 12162                           ;eeprom_rw.c: 48:     if(index <= nreg && nreg_init) {
 12163  0FC3  0829               	movf	read_ring@index,w
 12164  0FC4  0227               	subwf	read_ring@nreg,w
 12165  0FC5  1C03               	skipc
 12166  0FC6  2FC8               	goto	u4011
 12167  0FC7  2FC9               	goto	u4010
 12168  0FC8                     u4011:	
 12169  0FC8  2FF3               	goto	l7022
 12170  0FC9                     u4010:	
 12171  0FC9                     l7012:	
 12172  0FC9  0828               	movf	read_ring@nreg_init,w
 12173  0FCA  1903               	btfsc	3,2
 12174  0FCB  2FCD               	goto	u4021
 12175  0FCC  2FCE               	goto	u4020
 12176  0FCD                     u4021:	
 12177  0FCD  2FF3               	goto	l7022
 12178  0FCE                     u4020:	
 12179  0FCE                     l7014:	
 12180                           
 12181                           ;eeprom_rw.c: 49:         absindex = 5 * index + subindex;
 12182  0FCE  3005               	movlw	5
 12183  0FCF  00AB               	movwf	??_read_ring
 12184  0FD0  082B               	movf	??_read_ring,w
 12185  0FD1  00A3               	movwf	___bmul@multiplicand
 12186  0FD2  0829               	movf	read_ring@index,w
 12187  0FD3  318C  2412  318F   	fcall	___bmul
 12188  0FD6  0020               	movlb	0	; select bank0
 12189  0FD7  072A               	addwf	read_ring@subindex,w
 12190  0FD8  00AC               	movwf	??_read_ring+1
 12191  0FD9  082C               	movf	??_read_ring+1,w
 12192  0FDA  00AF               	movwf	read_ring@absindex
 12193  0FDB                     l7016:	
 12194                           
 12195                           ;eeprom_rw.c: 50:         if(absindex <= nreg_pt)
 12196  0FDB  082F               	movf	read_ring@absindex,w
 12197  0FDC  022E               	subwf	read_ring@nreg_pt,w
 12198  0FDD  1C03               	skipc
 12199  0FDE  2FE0               	goto	u4031
 12200  0FDF  2FE1               	goto	u4030
 12201  0FE0                     u4031:	
 12202  0FE0  2FE8               	goto	l7020
 12203  0FE1                     u4030:	
 12204  0FE1                     l7018:	
 12205                           
 12206                           ;eeprom_rw.c: 51:             i = nreg_pt - 5 + absindex;
 12207  0FE1  082E               	movf	read_ring@nreg_pt,w
 12208  0FE2  072F               	addwf	read_ring@absindex,w
 12209  0FE3  3EFB               	addlw	251
 12210  0FE4  00AB               	movwf	??_read_ring
 12211  0FE5  082B               	movf	??_read_ring,w
 12212  0FE6  00AD               	movwf	read_ring@i
 12213  0FE7  2FF5               	goto	l7026
 12214  0FE8                     l7020:	
 12215                           
 12216                           ;eeprom_rw.c: 53:             i = nreg - (nreg_pt - 5 + absindex);
 12217  0FE8  032E               	decf	read_ring@nreg_pt,w
 12218  0FE9  3AFF               	xorlw	255
 12219  0FEA  00AB               	movwf	??_read_ring
 12220  0FEB  082F               	movf	read_ring@absindex,w
 12221  0FEC  022B               	subwf	??_read_ring,w
 12222  0FED  0727               	addwf	read_ring@nreg,w
 12223  0FEE  3E05               	addlw	5
 12224  0FEF  00AC               	movwf	??_read_ring+1
 12225  0FF0  082C               	movf	??_read_ring+1,w
 12226  0FF1  00AD               	movwf	read_ring@i
 12227  0FF2  2FF5               	goto	l7026
 12228  0FF3                     l7022:	
 12229                           
 12230                           ;eeprom_rw.c: 56:         return 0;
 12231  0FF3  3000               	movlw	0
 12232  0FF4  2FFF               	goto	l546
 12233  0FF5                     l7026:	
 12234                           
 12235                           ;eeprom_rw.c: 58:     return DATAEE_ReadByte(0xF000 + i);
 12236  0FF5  082D               	movf	read_ring@i,w
 12237  0FF6  3E00               	addlw	0
 12238  0FF7  00A3               	movwf	DATAEE_ReadByte@bAdd
 12239  0FF8  30F0               	movlw	240
 12240  0FF9  1803               	skipnc
 12241  0FFA  30F1               	movlw	241
 12242  0FFB  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 12243  0FFC  318B  234D  318F   	fcall	_DATAEE_ReadByte
 12244  0FFF                     l546:	
 12245  0FFF  0008               	return
 12246  1000                     __end_of_read_ring:	
 12247                           
 12248                           	psect	text8
 12249  0C12                     __ptext8:	
 12250 ;; *************** function ___bmul *****************
 12251 ;; Defined at:
 12252 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul8.c"
 12253 ;; Parameters:    Size  Location     Type
 12254 ;;  multiplier      1    wreg     unsigned char 
 12255 ;;  multiplicand    1    3[BANK0 ] unsigned char 
 12256 ;; Auto vars:     Size  Location     Type
 12257 ;;  multiplier      1    6[BANK0 ] unsigned char 
 12258 ;;  product         1    5[BANK0 ] unsigned char 
 12259 ;; Return value:  Size  Location     Type
 12260 ;;                  1    wreg      unsigned char 
 12261 ;; Registers used:
 12262 ;;		wreg, status,2, status,0
 12263 ;; Tracked objects:
 12264 ;;		On entry : 0/0
 12265 ;;		On exit  : 0/0
 12266 ;;		Unchanged: 0/0
 12267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12268 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12269 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12270 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12271 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12272 ;;Total ram usage:        4 bytes
 12273 ;; Hardware stack levels used:    1
 12274 ;; Hardware stack levels required when called:    6
 12275 ;; This function calls:
 12276 ;;		Nothing
 12277 ;; This function is called by:
 12278 ;;		_read_ring
 12279 ;; This function uses a non-reentrant model
 12280 ;;
 12281                           
 12282                           
 12283                           ;psect for function ___bmul
 12284  0C12                     ___bmul:	
 12285                           
 12286                           ;incstack = 0
 12287                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 12288                           ;___bmul@multiplier stored from wreg
 12289  0C12  0020               	movlb	0	; select bank0
 12290  0C13  00A6               	movwf	___bmul@multiplier
 12291  0C14                     l6934:	
 12292  0C14  01A5               	clrf	___bmul@product
 12293  0C15                     l6936:	
 12294  0C15  1C26               	btfss	___bmul@multiplier,0
 12295  0C16  2C18               	goto	u3951
 12296  0C17  2C19               	goto	u3950
 12297  0C18                     u3951:	
 12298  0C18  2C1D               	goto	l6940
 12299  0C19                     u3950:	
 12300  0C19                     l6938:	
 12301  0C19  0823               	movf	___bmul@multiplicand,w
 12302  0C1A  00A4               	movwf	??___bmul
 12303  0C1B  0824               	movf	??___bmul,w
 12304  0C1C  07A5               	addwf	___bmul@product,f
 12305  0C1D                     l6940:	
 12306  0C1D  1003               	clrc
 12307  0C1E  0DA3               	rlf	___bmul@multiplicand,f
 12308  0C1F                     l6942:	
 12309  0C1F  1003               	clrc
 12310  0C20  0CA6               	rrf	___bmul@multiplier,f
 12311  0C21  0826               	movf	___bmul@multiplier,w
 12312  0C22  1D03               	btfss	3,2
 12313  0C23  2C25               	goto	u3961
 12314  0C24  2C26               	goto	u3960
 12315  0C25                     u3961:	
 12316  0C25  2C15               	goto	l6936
 12317  0C26                     u3960:	
 12318  0C26                     l6944:	
 12319  0C26  0825               	movf	___bmul@product,w
 12320  0C27                     l1902:	
 12321  0C27  0008               	return
 12322  0C28                     __end_of___bmul:	
 12323                           
 12324                           	psect	text9
 12325  0B4D                     __ptext9:	
 12326 ;; *************** function _DATAEE_ReadByte *****************
 12327 ;; Defined at:
 12328 ;;		line 202 in file "mcc_generated_files/memory.c"
 12329 ;; Parameters:    Size  Location     Type
 12330 ;;  bAdd            2    3[BANK0 ] unsigned short 
 12331 ;; Auto vars:     Size  Location     Type
 12332 ;;		None
 12333 ;; Return value:  Size  Location     Type
 12334 ;;                  1    wreg      unsigned char 
 12335 ;; Registers used:
 12336 ;;		wreg, status,2
 12337 ;; Tracked objects:
 12338 ;;		On entry : 0/0
 12339 ;;		On exit  : 0/0
 12340 ;;		Unchanged: 0/0
 12341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12342 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12345 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12346 ;;Total ram usage:        2 bytes
 12347 ;; Hardware stack levels used:    1
 12348 ;; Hardware stack levels required when called:    6
 12349 ;; This function calls:
 12350 ;;		Nothing
 12351 ;; This function is called by:
 12352 ;;		_recoverData
 12353 ;;		_read_ring
 12354 ;;		_cksum
 12355 ;; This function uses a non-reentrant model
 12356 ;;
 12357                           
 12358                           
 12359                           ;psect for function _DATAEE_ReadByte
 12360  0B4D                     _DATAEE_ReadByte:	
 12361  0B4D                     l6556:	
 12362                           ;incstack = 0
 12363                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 12364                           
 12365                           
 12366                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 12367  0B4D  0020               	movlb	0	; select bank0
 12368  0B4E  0824               	movf	DATAEE_ReadByte@bAdd+1,w
 12369  0B4F  0030               	movlb	16	; select bank16
 12370  0B50  009B               	movwf	27	;volatile
 12371  0B51                     l6558:	
 12372                           
 12373                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 12374  0B51  0020               	movlb	0	; select bank0
 12375  0B52  0823               	movf	DATAEE_ReadByte@bAdd,w
 12376  0B53  0030               	movlb	16	; select bank16
 12377  0B54  009A               	movwf	26	;volatile
 12378  0B55                     l6560:	
 12379                           
 12380                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 12381  0B55  171E               	bsf	30,6	;volsfr
 12382  0B56                     l6562:	
 12383                           
 12384                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 12385  0B56  141E               	bsf	30,0	;volsfr
 12386  0B57                     l6564:	
 12387                           
 12388                           ;mcc_generated_files/memory.c: 208:     __nop();
 12389  0B57  0000               	nop
 12390  0B58                     l6566:	
 12391                           
 12392                           ;mcc_generated_files/memory.c: 209:     __nop();
 12393  0B58  0000               	nop
 12394  0B59                     l6568:	
 12395                           
 12396                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 12397  0B59  0030               	movlb	16	; select bank16
 12398  0B5A  081C               	movf	28,w	;volatile
 12399  0B5B                     l1261:	
 12400  0B5B  0008               	return
 12401  0B5C                     __end_of_DATAEE_ReadByte:	
 12402                           
 12403                           	psect	text10
 12404  079E                     __ptext10:	
 12405 ;; *************** function _push_ring *****************
 12406 ;; Defined at:
 12407 ;;		line 34 in file "eeprom_rw.c"
 12408 ;; Parameters:    Size  Location     Type
 12409 ;;  nreg_pt         1    wreg     PTR unsigned char 
 12410 ;;		 -> nreg_pt(1), 
 12411 ;;  nreg            1   13[BANK0 ] unsigned char 
 12412 ;;  nreg_init       1   14[BANK0 ] PTR unsigned char 
 12413 ;;		 -> nreg_init(1), 
 12414 ;;  ring_byte       1   15[BANK0 ] PTR unsigned char 
 12415 ;;		 -> ring_byte(5), 
 12416 ;; Auto vars:     Size  Location     Type
 12417 ;;  nreg_pt         1   19[BANK0 ] PTR unsigned char 
 12418 ;;		 -> nreg_pt(1), 
 12419 ;;  i               1   18[BANK0 ] unsigned char 
 12420 ;; Return value:  Size  Location     Type
 12421 ;;                  1    wreg      void 
 12422 ;; Registers used:
 12423 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12424 ;; Tracked objects:
 12425 ;;		On entry : 0/0
 12426 ;;		On exit  : 0/0
 12427 ;;		Unchanged: 0/0
 12428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12429 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12430 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12431 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12432 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12433 ;;Total ram usage:        7 bytes
 12434 ;; Hardware stack levels used:    1
 12435 ;; Hardware stack levels required when called:    7
 12436 ;; This function calls:
 12437 ;;		_DATAEE_WriteByte
 12438 ;; This function is called by:
 12439 ;;		_main
 12440 ;; This function uses a non-reentrant model
 12441 ;;
 12442                           
 12443                           
 12444                           ;psect for function _push_ring
 12445  079E                     _push_ring:	
 12446                           
 12447                           ;incstack = 0
 12448                           ; Regs used in _push_ring: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12449                           ;push_ring@nreg_pt stored from wreg
 12450  079E  0020               	movlb	0	; select bank0
 12451  079F  00B3               	movwf	push_ring@nreg_pt
 12452  07A0                     l7042:	
 12453                           
 12454                           ;eeprom_rw.c: 34: void push_ring(unsigned char* nreg_pt, unsigned char nreg, unsigned ch
      +                          ar* nreg_init, unsigned char* ring_byte);eeprom_rw.c: 35: { if(!(*nreg_init)) (*nreg_ini
      +                          t) = 1;
 12455  07A0  082E               	movf	push_ring@nreg_init,w
 12456  07A1  0086               	movwf	6
 12457  07A2  0187               	clrf	7
 12458  07A3  0801               	movf	1,w
 12459  07A4  1D03               	btfss	3,2
 12460  07A5  2FA7               	goto	u4041
 12461  07A6  2FA8               	goto	u4040
 12462  07A7                     u4041:	
 12463  07A7  2FAD               	goto	l7046
 12464  07A8                     u4040:	
 12465  07A8                     l7044:	
 12466  07A8  082E               	movf	push_ring@nreg_init,w
 12467  07A9  0086               	movwf	6
 12468  07AA  0187               	clrf	7
 12469  07AB  0181               	clrf	1
 12470  07AC  0A81               	incf	1,f
 12471  07AD                     l7046:	
 12472                           
 12473                           ;eeprom_rw.c: 36:     for(unsigned char i = 0; i < 5; i++) {
 12474  07AD  01B2               	clrf	push_ring@i
 12475  07AE                     l7052:	
 12476                           
 12477                           ;eeprom_rw.c: 37:         if((*nreg_pt) >= nreg) (*nreg_pt) = 0;
 12478  07AE  0833               	movf	push_ring@nreg_pt,w
 12479  07AF  0086               	movwf	6
 12480  07B0  0187               	clrf	7
 12481  07B1  082D               	movf	push_ring@nreg,w
 12482  07B2  0201               	subwf	1,w
 12483  07B3  1C03               	skipc
 12484  07B4  2FB6               	goto	u4051
 12485  07B5  2FB7               	goto	u4050
 12486  07B6                     u4051:	
 12487  07B6  2FBB               	goto	l7056
 12488  07B7                     u4050:	
 12489  07B7                     l7054:	
 12490  07B7  0833               	movf	push_ring@nreg_pt,w
 12491  07B8  0086               	movwf	6
 12492  07B9  0187               	clrf	7
 12493  07BA  0181               	clrf	1
 12494  07BB                     l7056:	
 12495                           
 12496                           ;eeprom_rw.c: 38:         DATAEE_WriteByte(0xF000 + (*nreg_pt), ring_byte[i]);
 12497  07BB  0833               	movf	push_ring@nreg_pt,w
 12498  07BC  0086               	movwf	6
 12499  07BD  0187               	clrf	7
 12500  07BE  0801               	movf	1,w
 12501  07BF  3E00               	addlw	0
 12502  07C0  00A9               	movwf	DATAEE_WriteByte@bAdd
 12503  07C1  30F0               	movlw	240
 12504  07C2  1803               	skipnc
 12505  07C3  30F1               	movlw	241
 12506  07C4  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 12507  07C5  0832               	movf	push_ring@i,w
 12508  07C6  072F               	addwf	push_ring@ring_byte,w
 12509  07C7  00B0               	movwf	??_push_ring
 12510  07C8  0830               	movf	??_push_ring,w
 12511  07C9  0086               	movwf	6
 12512  07CA  0187               	clrf	7
 12513  07CB  0801               	movf	1,w
 12514  07CC  00B1               	movwf	??_push_ring+1
 12515  07CD  0831               	movf	??_push_ring+1,w
 12516  07CE  00AB               	movwf	DATAEE_WriteByte@bData
 12517  07CF  318D  2572  3187   	fcall	_DATAEE_WriteByte
 12518  07D2                     l7058:	
 12519                           
 12520                           ;eeprom_rw.c: 39:         (*nreg_pt)++;
 12521  07D2  3001               	movlw	1
 12522  07D3  0020               	movlb	0	; select bank0
 12523  07D4  00B0               	movwf	??_push_ring
 12524  07D5  0833               	movf	push_ring@nreg_pt,w
 12525  07D6  0086               	movwf	6
 12526  07D7  0187               	clrf	7
 12527  07D8  0830               	movf	??_push_ring,w
 12528  07D9  0781               	addwf	1,f
 12529  07DA                     l7060:	
 12530                           
 12531                           ;eeprom_rw.c: 40:     }
 12532  07DA  3001               	movlw	1
 12533  07DB  00B0               	movwf	??_push_ring
 12534  07DC  0830               	movf	??_push_ring,w
 12535  07DD  07B2               	addwf	push_ring@i,f
 12536  07DE                     l7062:	
 12537  07DE  3005               	movlw	5
 12538  07DF  0232               	subwf	push_ring@i,w
 12539  07E0  1C03               	skipc
 12540  07E1  2FE3               	goto	u4061
 12541  07E2  2FE4               	goto	u4060
 12542  07E3                     u4061:	
 12543  07E3  2FAE               	goto	l7052
 12544  07E4                     u4060:	
 12545  07E4                     l539:	
 12546  07E4  0008               	return
 12547  07E5                     __end_of_push_ring:	
 12548                           
 12549                           	psect	text11
 12550  0D72                     __ptext11:	
 12551 ;; *************** function _DATAEE_WriteByte *****************
 12552 ;; Defined at:
 12553 ;;		line 180 in file "mcc_generated_files/memory.c"
 12554 ;; Parameters:    Size  Location     Type
 12555 ;;  bAdd            2    9[BANK0 ] unsigned short 
 12556 ;;  bData           1   11[BANK0 ] unsigned char 
 12557 ;; Auto vars:     Size  Location     Type
 12558 ;;  GIEBitValue     1   12[BANK0 ] unsigned char 
 12559 ;; Return value:  Size  Location     Type
 12560 ;;                  1    wreg      void 
 12561 ;; Registers used:
 12562 ;;		wreg, status,2, status,0
 12563 ;; Tracked objects:
 12564 ;;		On entry : 0/0
 12565 ;;		On exit  : 0/0
 12566 ;;		Unchanged: 0/0
 12567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12568 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12569 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12571 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12572 ;;Total ram usage:        4 bytes
 12573 ;; Hardware stack levels used:    1
 12574 ;; Hardware stack levels required when called:    6
 12575 ;; This function calls:
 12576 ;;		Nothing
 12577 ;; This function is called by:
 12578 ;;		_main
 12579 ;;		_save_recovery_params
 12580 ;;		_recoverData
 12581 ;;		_push_ring
 12582 ;;		_cksum_w
 12583 ;;		_reset_recv
 12584 ;; This function uses a non-reentrant model
 12585 ;;
 12586                           
 12587                           
 12588                           ;psect for function _DATAEE_WriteByte
 12589  0D72                     _DATAEE_WriteByte:	
 12590  0D72                     l6580:	
 12591                           ;incstack = 0
 12592                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 12593                           
 12594                           
 12595                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 12596  0D72  3000               	movlw	0
 12597  0D73  1B8B               	btfsc	11,7	;volatile
 12598  0D74  3001               	movlw	1
 12599  0D75  0020               	movlb	0	; select bank0
 12600  0D76  00AC               	movwf	DATAEE_WriteByte@GIEBitValue
 12601                           
 12602                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 12603  0D77  082A               	movf	DATAEE_WriteByte@bAdd+1,w
 12604  0D78  0030               	movlb	16	; select bank16
 12605  0D79  009B               	movwf	27	;volatile
 12606  0D7A                     l6582:	
 12607                           
 12608                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 12609  0D7A  0020               	movlb	0	; select bank0
 12610  0D7B  0829               	movf	DATAEE_WriteByte@bAdd,w
 12611  0D7C  0030               	movlb	16	; select bank16
 12612  0D7D  009A               	movwf	26	;volatile
 12613  0D7E                     l6584:	
 12614                           
 12615                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 12616  0D7E  0020               	movlb	0	; select bank0
 12617  0D7F  082B               	movf	DATAEE_WriteByte@bData,w
 12618  0D80  0030               	movlb	16	; select bank16
 12619  0D81  009C               	movwf	28	;volatile
 12620  0D82                     l6586:	
 12621                           
 12622                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 12623  0D82  171E               	bsf	30,6	;volsfr
 12624  0D83                     l6588:	
 12625                           
 12626                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 12627  0D83  151E               	bsf	30,2	;volsfr
 12628  0D84                     l6590:	
 12629                           
 12630                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 12631  0D84  138B               	bcf	11,7	;volatile
 12632  0D85                     l6592:	
 12633                           
 12634                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 12635  0D85  3055               	movlw	85
 12636  0D86  009F               	movwf	31	;volsfr
 12637  0D87                     l6594:	
 12638                           
 12639                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 12640  0D87  30AA               	movlw	170
 12641  0D88  009F               	movwf	31	;volsfr
 12642  0D89                     l6596:	
 12643                           
 12644                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 12645  0D89  149E               	bsf	30,1	;volsfr
 12646  0D8A                     l1255:	
 12647                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 12648                           
 12649                           
 12650                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 12651  0D8A  189E               	btfsc	30,1	;volsfr
 12652  0D8B  2D8D               	goto	u3781
 12653  0D8C  2D8E               	goto	u3780
 12654  0D8D                     u3781:	
 12655  0D8D  2D8A               	goto	l1255
 12656  0D8E                     u3780:	
 12657  0D8E                     l1257:	
 12658                           
 12659                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 12660  0D8E  111E               	bcf	30,2	;volsfr
 12661  0D8F                     l6598:	
 12662                           
 12663                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 12664  0D8F  0020               	movlb	0	; select bank0
 12665  0D90  0C2C               	rrf	DATAEE_WriteByte@GIEBitValue,w
 12666  0D91  1C03               	skipc
 12667  0D92  138B               	bcf	11,7	;volatile
 12668  0D93  1803               	skipnc
 12669  0D94  178B               	bsf	11,7	;volatile
 12670  0D95                     l1258:	
 12671  0D95  0008               	return
 12672  0D96                     __end_of_DATAEE_WriteByte:	
 12673                           
 12674                           	psect	text12
 12675  0AEE                     __ptext12:	
 12676 ;; *************** function _i2c1_driver_open *****************
 12677 ;; Defined at:
 12678 ;;		line 84 in file "mcc_generated_files/i2c1_driver.c"
 12679 ;; Parameters:    Size  Location     Type
 12680 ;;		None
 12681 ;; Auto vars:     Size  Location     Type
 12682 ;;		None
 12683 ;; Return value:  Size  Location     Type
 12684 ;;		None               void
 12685 ;; Registers used:
 12686 ;;		wreg, status,2
 12687 ;; Tracked objects:
 12688 ;;		On entry : 0/0
 12689 ;;		On exit  : 0/0
 12690 ;;		Unchanged: 0/0
 12691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12696 ;;Total ram usage:        0 bytes
 12697 ;; Hardware stack levels used:    1
 12698 ;; Hardware stack levels required when called:    6
 12699 ;; This function calls:
 12700 ;;		Nothing
 12701 ;; This function is called by:
 12702 ;;		_main
 12703 ;;		_I2C_Initialize
 12704 ;;		_i2c_open
 12705 ;; This function uses a non-reentrant model
 12706 ;;
 12707                           
 12708                           
 12709                           ;psect for function _i2c1_driver_open
 12710  0AEE                     _i2c1_driver_open:	
 12711  0AEE                     l6966:	
 12712                           ;incstack = 0
 12713                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 12714                           
 12715  0AEE  0023               	movlb	3	; select bank3
 12716  0AEF  1A90               	btfsc	16,5	;volatile
 12717  0AF0  2AF2               	goto	u3971
 12718  0AF1  2AF3               	goto	u3970
 12719  0AF2                     u3971:	
 12720  0AF2  2AF9               	goto	l756
 12721  0AF3                     u3970:	
 12722  0AF3                     l6968:	
 12723  0AF3  018F               	clrf	15	;volatile
 12724  0AF4                     l6970:	
 12725  0AF4  3028               	movlw	40
 12726  0AF5  0090               	movwf	16	;volatile
 12727  0AF6                     l6972:	
 12728  0AF6  0191               	clrf	17	;volatile
 12729  0AF7  3003               	movlw	3
 12730  0AF8  008D               	movwf	13	;volatile
 12731  0AF9                     l756:	
 12732  0AF9  0008               	return
 12733  0AFA                     __end_of_i2c1_driver_open:	
 12734                           
 12735                           	psect	text13
 12736  0296                     __ptext13:	
 12737 ;; *************** function _config_routine *****************
 12738 ;; Defined at:
 12739 ;;		line 307 in file "main.c"
 12740 ;; Parameters:    Size  Location     Type
 12741 ;;		None
 12742 ;; Auto vars:     Size  Location     Type
 12743 ;;  select_mode     2   26[BANK0 ] unsigned int 
 12744 ;; Return value:  Size  Location     Type
 12745 ;;                  1    wreg      void 
 12746 ;; Registers used:
 12747 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12748 ;; Tracked objects:
 12749 ;;		On entry : 0/0
 12750 ;;		On exit  : 0/0
 12751 ;;		Unchanged: 0/0
 12752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12754 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12755 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12756 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12757 ;;Total ram usage:        3 bytes
 12758 ;; Hardware stack levels used:    1
 12759 ;; Hardware stack levels required when called:   10
 12760 ;; This function calls:
 12761 ;;		_all_LED
 12762 ;;		_checkDebounceSW1
 12763 ;;		_checkDebounceSW2
 12764 ;;		_mod1_LED
 12765 ;;		_mod2_LED
 12766 ;;		_mod3_LED
 12767 ;;		_mod4_LED
 12768 ;;		_mode_select_LED
 12769 ;;		_selectSubfield
 12770 ;; This function is called by:
 12771 ;;		_main
 12772 ;; This function uses a non-reentrant model
 12773 ;;
 12774                           
 12775                           
 12776                           ;psect for function _config_routine
 12777  0296                     _config_routine:	
 12778  0296                     l7066:	
 12779                           ;incstack = 0
 12780                           ; Regs used in _config_routine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12781                           
 12782                           
 12783                           ;main.c: 309:     unsigned int select_mode =0;
 12784  0296  0020               	movlb	0	; select bank0
 12785  0297  01BA               	clrf	config_routine@select_mode
 12786  0298  01BB               	clrf	config_routine@select_mode+1
 12787  0299                     l7068:	
 12788                           
 12789                           ;main.c: 310:     last_ms = clkms;
 12790  0299  087D               	movf	_clkms,w	;volatile
 12791  029A  00B9               	movwf	??_config_routine
 12792  029B  0839               	movf	??_config_routine,w
 12793  029C  00D9               	movwf	_last_ms
 12794  029D                     l7070:	
 12795                           
 12796                           ;main.c: 311:     last_ms2 = clkms;
 12797  029D  087D               	movf	_clkms,w	;volatile
 12798  029E  00B9               	movwf	??_config_routine
 12799  029F  0839               	movf	??_config_routine,w
 12800  02A0  00D8               	movwf	_last_ms2
 12801  02A1                     l7072:	
 12802                           
 12803                           ;main.c: 314:         if(mode_field_subfield[0] == -1 && select_mode == 0){
 12804  02A1  0A5F               	incf	_mode_field_subfield,w
 12805  02A2  1D03               	skipz
 12806  02A3  2AA8               	goto	u4071
 12807  02A4  0A60               	incf	_mode_field_subfield+1,w
 12808  02A5  1D03               	btfss	3,2
 12809  02A6  2AA8               	goto	u4071
 12810  02A7  2AA9               	goto	u4070
 12811  02A8                     u4071:	
 12812  02A8  2AB2               	goto	l7078
 12813  02A9                     u4070:	
 12814  02A9                     l7074:	
 12815  02A9  083A               	movf	config_routine@select_mode,w
 12816  02AA  043B               	iorwf	config_routine@select_mode+1,w
 12817  02AB  1D03               	btfss	3,2
 12818  02AC  2AAE               	goto	u4081
 12819  02AD  2AAF               	goto	u4080
 12820  02AE                     u4081:	
 12821  02AE  2AB2               	goto	l7078
 12822  02AF                     u4080:	
 12823  02AF                     l7076:	
 12824                           
 12825                           ;main.c: 315:             all_LED();
 12826  02AF  3184  24BA  3182   	fcall	_all_LED
 12827  02B2                     l7078:	
 12828                           
 12829                           ;main.c: 318:         if(!PORTBbits.RB4){
 12830  02B2  0020               	movlb	0	; select bank0
 12831  02B3  1A0D               	btfsc	13,4	;volatile
 12832  02B4  2AB6               	goto	u4091
 12833  02B5  2AB7               	goto	u4090
 12834  02B6                     u4091:	
 12835  02B6  2AED               	goto	l233
 12836  02B7                     u4090:	
 12837  02B7                     l7080:	
 12838                           
 12839                           ;main.c: 319:             if(checkDebounceSW1()){
 12840  02B7  3185  2515  3182   	fcall	_checkDebounceSW1
 12841  02BA  3A00               	xorlw	0
 12842  02BB  1903               	skipnz
 12843  02BC  2ABE               	goto	u4101
 12844  02BD  2ABF               	goto	u4100
 12845  02BE                     u4101:	
 12846  02BE  2AED               	goto	l233
 12847  02BF                     u4100:	
 12848  02BF                     l7082:	
 12849                           
 12850                           ;main.c: 321:                 select_mode +=1;
 12851  02BF  3001               	movlw	1
 12852  02C0  0020               	movlb	0	; select bank0
 12853  02C1  07BA               	addwf	config_routine@select_mode,f
 12854  02C2  3000               	movlw	0
 12855  02C3  3DBB               	addwfc	config_routine@select_mode+1,f
 12856                           
 12857                           ;main.c: 323:                 switch(select_mode){
 12858  02C4  2ADA               	goto	l7096
 12859  02C5                     l7084:	
 12860  02C5  318A  22C1  3182   	fcall	_mod1_LED
 12861  02C8  2AED               	goto	l233
 12862  02C9                     l7086:	
 12863  02C9  318A  22B7  3182   	fcall	_mod2_LED
 12864  02CC  2AED               	goto	l233
 12865  02CD                     l7088:	
 12866  02CD  318A  22CC  3182   	fcall	_mod3_LED
 12867  02D0  2AED               	goto	l233
 12868  02D1                     l7090:	
 12869  02D1  318A  22D7  3182   	fcall	_mod4_LED
 12870  02D4  2AED               	goto	l233
 12871  02D5                     l7092:	
 12872  02D5  01BA               	clrf	config_routine@select_mode
 12873  02D6  01BB               	clrf	config_routine@select_mode+1
 12874  02D7  01D4               	clrf	_config_mode	;volatile
 12875  02D8  01D3               	clrf	_alarm	;volatile
 12876                           
 12877                           ;main.c: 329:                     break;
 12878  02D9  2AED               	goto	l233
 12879  02DA                     l7096:	
 12880                           
 12881                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12882                           ; Switch size 1, requested type "simple"
 12883                           ; Number of cases is 1, Range of values is 0 to 0
 12884                           ; switch strategies available:
 12885                           ; Name         Instructions Cycles
 12886                           ; simple_byte            4     3 (average)
 12887                           ; direct_byte            8     6 (fixed)
 12888                           ; jumptable            260     6 (fixed)
 12889                           ;	Chosen strategy is simple_byte
 12890  02DA  083B               	movf	config_routine@select_mode+1,w
 12891  02DB  3A00               	xorlw	0	; case 0
 12892  02DC  1903               	skipnz
 12893  02DD  2ADF               	goto	l7652
 12894  02DE  2AD5               	goto	l7092
 12895  02DF                     l7652:	
 12896                           
 12897                           ; Switch size 1, requested type "simple"
 12898                           ; Number of cases is 4, Range of values is 1 to 4
 12899                           ; switch strategies available:
 12900                           ; Name         Instructions Cycles
 12901                           ; simple_byte           13     7 (average)
 12902                           ; direct_byte           17     9 (fixed)
 12903                           ; jumptable            263     9 (fixed)
 12904                           ;	Chosen strategy is simple_byte
 12905  02DF  083A               	movf	config_routine@select_mode,w
 12906  02E0  3A01               	xorlw	1	; case 1
 12907  02E1  1903               	skipnz
 12908  02E2  2AC5               	goto	l7084
 12909  02E3  3A03               	xorlw	3	; case 2
 12910  02E4  1903               	skipnz
 12911  02E5  2AC9               	goto	l7086
 12912  02E6  3A01               	xorlw	1	; case 3
 12913  02E7  1903               	skipnz
 12914  02E8  2ACD               	goto	l7088
 12915  02E9  3A07               	xorlw	7	; case 4
 12916  02EA  1903               	skipnz
 12917  02EB  2AD1               	goto	l7090
 12918  02EC  2AD5               	goto	l7092
 12919  02ED                     l233:	
 12920                           ;main.c: 333:         }
 12921                           
 12922                           
 12923                           ;main.c: 336:         if(!PORTCbits.RC5){
 12924  02ED  0020               	movlb	0	; select bank0
 12925  02EE  1A8E               	btfsc	14,5	;volatile
 12926  02EF  2AF1               	goto	u4111
 12927  02F0  2AF2               	goto	u4110
 12928  02F1                     u4111:	
 12929  02F1  2B05               	goto	l7106
 12930  02F2                     u4110:	
 12931  02F2                     l7098:	
 12932                           
 12933                           ;main.c: 337:             if(checkDebounceSW2()){
 12934  02F2  3186  26BE  3182   	fcall	_checkDebounceSW2
 12935  02F5  3A00               	xorlw	0
 12936  02F6  1903               	skipnz
 12937  02F7  2AF9               	goto	u4121
 12938  02F8  2AFA               	goto	u4120
 12939  02F9                     u4121:	
 12940  02F9  2B05               	goto	l7106
 12941  02FA                     u4120:	
 12942  02FA                     l7100:	
 12943                           
 12944                           ;main.c: 338:                 mode_field_subfield[0] = select_mode;
 12945  02FA  0020               	movlb	0	; select bank0
 12946  02FB  083B               	movf	config_routine@select_mode+1,w
 12947  02FC  00E0               	movwf	_mode_field_subfield+1
 12948  02FD  083A               	movf	config_routine@select_mode,w
 12949  02FE  00DF               	movwf	_mode_field_subfield
 12950  02FF                     l7102:	
 12951                           
 12952                           ;main.c: 339:                 mode_select_LED();
 12953  02FF  318D  2512  3182   	fcall	_mode_select_LED
 12954  0302                     l7104:	
 12955                           
 12956                           ;main.c: 340:                 selectSubfield();
 12957  0302  3183  2396  3182   	fcall	_selectSubfield
 12958  0305                     l7106:	
 12959                           
 12960                           ;main.c: 345:         _delay((unsigned long)((2)*(1000000/4000.0)));
 12961  0305  30A6               	movlw	166
 12962  0306                     u4457:	
 12963  0306  0B89               	decfsz	9,f
 12964  0307  2B06               	goto	u4457
 12965  0308  3200               	nop2
 12966  0309                     l7108:	
 12967                           
 12968                           ;main.c: 347:     }while(config_mode == 1);
 12969  0309  0020               	movlb	0	; select bank0
 12970  030A  0354               	decf	_config_mode,w	;volatile
 12971  030B  1903               	btfsc	3,2
 12972  030C  2B0E               	goto	u4131
 12973  030D  2B0F               	goto	u4130
 12974  030E                     u4131:	
 12975  030E  2AA1               	goto	l7072
 12976  030F                     u4130:	
 12977  030F                     l7110:	
 12978                           
 12979                           ;main.c: 349:     mode_field_subfield[0] = -1;
 12980  030F  30FF               	movlw	255
 12981  0310  00DF               	movwf	_mode_field_subfield
 12982  0311  30FF               	movlw	255
 12983  0312  00E0               	movwf	_mode_field_subfield+1
 12984                           
 12985                           ;main.c: 350:     mode_field_subfield[1] = -1;
 12986  0313  30FF               	movlw	255
 12987  0314  00E1               	movwf	_mode_field_subfield+2
 12988  0315  30FF               	movlw	255
 12989  0316  00E2               	movwf	_mode_field_subfield+3
 12990  0317                     l245:	
 12991  0317  0008               	return
 12992  0318                     __end_of_config_routine:	
 12993                           
 12994                           	psect	text14
 12995  0396                     __ptext14:	
 12996 ;; *************** function _selectSubfield *****************
 12997 ;; Defined at:
 12998 ;;		line 359 in file "main.c"
 12999 ;; Parameters:    Size  Location     Type
 13000 ;;		None
 13001 ;; Auto vars:     Size  Location     Type
 13002 ;;  subfield        2   23[BANK0 ] unsigned int 
 13003 ;; Return value:  Size  Location     Type
 13004 ;;                  1    wreg      void 
 13005 ;; Registers used:
 13006 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13007 ;; Tracked objects:
 13008 ;;		On entry : 0/0
 13009 ;;		On exit  : 0/0
 13010 ;;		Unchanged: 0/0
 13011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13013 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13014 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13015 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13016 ;;Total ram usage:        4 bytes
 13017 ;; Hardware stack levels used:    1
 13018 ;; Hardware stack levels required when called:    9
 13019 ;; This function calls:
 13020 ;;		_all_LED
 13021 ;;		_checkDebounceSW1
 13022 ;;		_checkDebounceSW2
 13023 ;;		_getSubfieldInfo
 13024 ;;		_increment_subfield
 13025 ;;		_mode_LED
 13026 ;; This function is called by:
 13027 ;;		_config_routine
 13028 ;; This function uses a non-reentrant model
 13029 ;;
 13030                           
 13031                           
 13032                           ;psect for function _selectSubfield
 13033  0396                     _selectSubfield:	
 13034  0396                     l6754:	
 13035                           ;incstack = 0
 13036                           ; Regs used in _selectSubfield: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13037                           
 13038                           
 13039                           ;main.c: 360:     unsigned int subfield = 1;
 13040  0396  3001               	movlw	1
 13041  0397  0020               	movlb	0	; select bank0
 13042  0398  00B7               	movwf	selectSubfield@subfield
 13043  0399  3000               	movlw	0
 13044  039A  00B8               	movwf	selectSubfield@subfield+1
 13045  039B                     l6756:	
 13046                           
 13047                           ;main.c: 362:     if(mode_field_subfield[0] == 1){
 13048  039B  035F               	decf	_mode_field_subfield,w
 13049  039C  0460               	iorwf	_mode_field_subfield+1,w
 13050  039D  1D03               	btfss	3,2
 13051  039E  2BA0               	goto	u3871
 13052  039F  2BA1               	goto	u3870
 13053  03A0                     u3871:	
 13054  03A0  2BA3               	goto	l249
 13055  03A1                     u3870:	
 13056  03A1                     l6758:	
 13057                           
 13058                           ;main.c: 363:         PIE4bits.TMR1IE = 0;
 13059  03A1  002E               	movlb	14	; select bank14
 13060  03A2  101A               	bcf	26,0	;volatile
 13061  03A3                     l249:	
 13062                           ;main.c: 366:     do{
 13063                           
 13064                           
 13065                           ;main.c: 367:         if(!PORTBbits.RB4){
 13066  03A3  0020               	movlb	0	; select bank0
 13067  03A4  1A0D               	btfsc	13,4	;volatile
 13068  03A5  2BA7               	goto	u3881
 13069  03A6  2BA8               	goto	u3880
 13070  03A7                     u3881:	
 13071  03A7  2BB5               	goto	l6764
 13072  03A8                     u3880:	
 13073  03A8                     l6760:	
 13074                           
 13075                           ;main.c: 368:             if(checkDebounceSW1()){
 13076  03A8  3185  2515  3183   	fcall	_checkDebounceSW1
 13077  03AB  3A00               	xorlw	0
 13078  03AC  1903               	skipnz
 13079  03AD  2BAF               	goto	u3891
 13080  03AE  2BB0               	goto	u3890
 13081  03AF                     u3891:	
 13082  03AF  2BB5               	goto	l6764
 13083  03B0                     u3890:	
 13084  03B0                     l6762:	
 13085                           
 13086                           ;main.c: 369:                 subfield +=1;
 13087  03B0  3001               	movlw	1
 13088  03B1  0020               	movlb	0	; select bank0
 13089  03B2  07B7               	addwf	selectSubfield@subfield,f
 13090  03B3  3000               	movlw	0
 13091  03B4  3DB8               	addwfc	selectSubfield@subfield+1,f
 13092  03B5                     l6764:	
 13093                           
 13094                           ;main.c: 374:         mode_LED( subfield);
 13095  03B5  0020               	movlb	0	; select bank0
 13096  03B6  0837               	movf	selectSubfield@subfield,w
 13097  03B7  318D  25BC  3183   	fcall	_mode_LED
 13098  03BA                     l6766:	
 13099                           
 13100                           ;main.c: 376:         if(!PORTCbits.RC5){
 13101  03BA  0020               	movlb	0	; select bank0
 13102  03BB  1A8E               	btfsc	14,5	;volatile
 13103  03BC  2BBE               	goto	u3901
 13104  03BD  2BBF               	goto	u3900
 13105  03BE                     u3901:	
 13106  03BE  2BD5               	goto	l6778
 13107  03BF                     u3900:	
 13108  03BF                     l6768:	
 13109                           
 13110                           ;main.c: 377:             if(checkDebounceSW2()){
 13111  03BF  3186  26BE  3183   	fcall	_checkDebounceSW2
 13112  03C2  3A00               	xorlw	0
 13113  03C3  1903               	skipnz
 13114  03C4  2BC6               	goto	u3911
 13115  03C5  2BC7               	goto	u3910
 13116  03C6                     u3911:	
 13117  03C6  2BD5               	goto	l6778
 13118  03C7                     u3910:	
 13119  03C7                     l6770:	
 13120                           
 13121                           ;main.c: 378:                 mode_field_subfield[1] = subfield;
 13122  03C7  0020               	movlb	0	; select bank0
 13123  03C8  0838               	movf	selectSubfield@subfield+1,w
 13124  03C9  00E2               	movwf	_mode_field_subfield+3
 13125  03CA  0837               	movf	selectSubfield@subfield,w
 13126  03CB  00E1               	movwf	_mode_field_subfield+2
 13127  03CC                     l6772:	
 13128                           
 13129                           ;main.c: 379:                 getSubfieldInfo();
 13130  03CC  3183  2318  3183   	fcall	_getSubfieldInfo
 13131  03CF                     l6774:	
 13132                           
 13133                           ;main.c: 380:                 all_LED();
 13134  03CF  3184  24BA  3183   	fcall	_all_LED
 13135  03D2                     l6776:	
 13136                           
 13137                           ;main.c: 381:                 increment_subfield();
 13138  03D2  3183  23F8  3183   	fcall	_increment_subfield
 13139  03D5                     l6778:	
 13140                           
 13141                           ;main.c: 386:         _delay((unsigned long)((2)*(1000000/4000.0)));
 13142  03D5  30A6               	movlw	166
 13143  03D6                     u4467:	
 13144  03D6  0B89               	decfsz	9,f
 13145  03D7  2BD6               	goto	u4467
 13146  03D8  3200               	nop2
 13147  03D9                     l6780:	
 13148                           
 13149                           ;main.c: 388:     }while(subfield <= num_subfields[mode_field_subfield[0]]);
 13150  03D9  0020               	movlb	0	; select bank0
 13151  03DA  0860               	movf	_mode_field_subfield+1,w
 13152  03DB  0085               	movwf	5
 13153  03DC  085F               	movf	_mode_field_subfield,w
 13154  03DD  0084               	movwf	4
 13155  03DE  3020               	movlw	low (_num_subfields| (0+32768))
 13156  03DF  0784               	addwf	4,f
 13157  03E0  3090               	movlw	high (_num_subfields| (0+32768))
 13158  03E1  3D85               	addwfc	5,f
 13159  03E2  0800               	movf	0,w	;code access
 13160  03E3  00B5               	movwf	??_selectSubfield
 13161  03E4  01B6               	clrf	??_selectSubfield+1
 13162  03E5  0838               	movf	selectSubfield@subfield+1,w
 13163  03E6  0236               	subwf	??_selectSubfield+1,w
 13164  03E7  1D03               	skipz
 13165  03E8  2BEB               	goto	u3925
 13166  03E9  0837               	movf	selectSubfield@subfield,w
 13167  03EA  0235               	subwf	??_selectSubfield,w
 13168  03EB                     u3925:	
 13169  03EB  1803               	skipnc
 13170  03EC  2BEE               	goto	u3921
 13171  03ED  2BEF               	goto	u3920
 13172  03EE                     u3921:	
 13173  03EE  2BA3               	goto	l249
 13174  03EF                     u3920:	
 13175  03EF                     l6782:	
 13176                           
 13177                           ;main.c: 390:     if(mode_field_subfield[0] == 1){
 13178  03EF  035F               	decf	_mode_field_subfield,w
 13179  03F0  0460               	iorwf	_mode_field_subfield+1,w
 13180  03F1  1D03               	btfss	3,2
 13181  03F2  2BF4               	goto	u3931
 13182  03F3  2BF5               	goto	u3930
 13183  03F4                     u3931:	
 13184  03F4  2BF7               	goto	l256
 13185  03F5                     u3930:	
 13186  03F5                     l6784:	
 13187                           
 13188                           ;main.c: 391:         PIE4bits.TMR1IE = 1;
 13189  03F5  002E               	movlb	14	; select bank14
 13190  03F6  141A               	bsf	26,0	;volatile
 13191  03F7                     l256:	
 13192  03F7  0008               	return
 13193  03F8                     __end_of_selectSubfield:	
 13194                           
 13195                           	psect	text15
 13196  0DBC                     __ptext15:	
 13197 ;; *************** function _mode_LED *****************
 13198 ;; Defined at:
 13199 ;;		line 113 in file "leds.c"
 13200 ;; Parameters:    Size  Location     Type
 13201 ;;  subfield        1    wreg     unsigned char 
 13202 ;; Auto vars:     Size  Location     Type
 13203 ;;  subfield        1   15[BANK0 ] unsigned char 
 13204 ;; Return value:  Size  Location     Type
 13205 ;;                  1    wreg      void 
 13206 ;; Registers used:
 13207 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13208 ;; Tracked objects:
 13209 ;;		On entry : 0/0
 13210 ;;		On exit  : 0/0
 13211 ;;		Unchanged: 0/0
 13212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13214 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13215 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13216 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13217 ;;Total ram usage:        3 bytes
 13218 ;; Hardware stack levels used:    1
 13219 ;; Hardware stack levels required when called:    8
 13220 ;; This function calls:
 13221 ;;		_mod1_LED
 13222 ;;		_mod2_LED
 13223 ;;		_mod3_LED
 13224 ;;		_mod4_LED
 13225 ;; This function is called by:
 13226 ;;		_selectSubfield
 13227 ;; This function uses a non-reentrant model
 13228 ;;
 13229                           
 13230                           
 13231                           ;psect for function _mode_LED
 13232  0DBC                     _mode_LED:	
 13233                           
 13234                           ;incstack = 0
 13235                           ; Regs used in _mode_LED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13236                           ;mode_LED@subfield stored from wreg
 13237  0DBC  0020               	movlb	0	; select bank0
 13238  0DBD  00AF               	movwf	mode_LED@subfield
 13239  0DBE                     l6624:	
 13240                           
 13241                           ;leds.c: 114:         switch(subfield){
 13242  0DBE  2DCF               	goto	l6636
 13243  0DBF                     l6626:	
 13244  0DBF  318A  22C1  318D   	fcall	_mod1_LED
 13245  0DC2  2DE5               	goto	l1720
 13246  0DC3                     l6628:	
 13247  0DC3  318A  22B7  318D   	fcall	_mod2_LED
 13248  0DC6  2DE5               	goto	l1720
 13249  0DC7                     l6630:	
 13250  0DC7  318A  22CC  318D   	fcall	_mod3_LED
 13251  0DCA  2DE5               	goto	l1720
 13252  0DCB                     l6632:	
 13253  0DCB  318A  22D7  318D   	fcall	_mod4_LED
 13254  0DCE  2DE5               	goto	l1720
 13255  0DCF                     l6636:	
 13256  0DCF  082F               	movf	mode_LED@subfield,w
 13257  0DD0  00AD               	movwf	??_mode_LED
 13258  0DD1  01AE               	clrf	??_mode_LED+1
 13259                           
 13260                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13261                           ; Switch size 1, requested type "simple"
 13262                           ; Number of cases is 1, Range of values is 0 to 0
 13263                           ; switch strategies available:
 13264                           ; Name         Instructions Cycles
 13265                           ; simple_byte            4     3 (average)
 13266                           ; direct_byte            8     6 (fixed)
 13267                           ; jumptable            260     6 (fixed)
 13268                           ;	Chosen strategy is simple_byte
 13269  0DD2  082E               	movf	??_mode_LED+1,w
 13270  0DD3  3A00               	xorlw	0	; case 0
 13271  0DD4  1903               	skipnz
 13272  0DD5  2DD7               	goto	l7654
 13273  0DD6  2DE5               	goto	l1720
 13274  0DD7                     l7654:	
 13275                           
 13276                           ; Switch size 1, requested type "simple"
 13277                           ; Number of cases is 4, Range of values is 1 to 4
 13278                           ; switch strategies available:
 13279                           ; Name         Instructions Cycles
 13280                           ; simple_byte           13     7 (average)
 13281                           ; direct_byte           17     9 (fixed)
 13282                           ; jumptable            263     9 (fixed)
 13283                           ;	Chosen strategy is simple_byte
 13284  0DD7  082D               	movf	??_mode_LED,w
 13285  0DD8  3A01               	xorlw	1	; case 1
 13286  0DD9  1903               	skipnz
 13287  0DDA  2DBF               	goto	l6626
 13288  0DDB  3A03               	xorlw	3	; case 2
 13289  0DDC  1903               	skipnz
 13290  0DDD  2DC3               	goto	l6628
 13291  0DDE  3A01               	xorlw	1	; case 3
 13292  0DDF  1903               	skipnz
 13293  0DE0  2DC7               	goto	l6630
 13294  0DE1  3A07               	xorlw	7	; case 4
 13295  0DE2  1903               	skipnz
 13296  0DE3  2DCB               	goto	l6632
 13297  0DE4  2DE5               	goto	l1720
 13298  0DE5                     l1720:	
 13299  0DE5  0008               	return
 13300  0DE6                     __end_of_mode_LED:	
 13301                           
 13302                           	psect	text16
 13303  0AD7                     __ptext16:	
 13304 ;; *************** function _mod4_LED *****************
 13305 ;; Defined at:
 13306 ;;		line 84 in file "leds.c"
 13307 ;; Parameters:    Size  Location     Type
 13308 ;;		None
 13309 ;; Auto vars:     Size  Location     Type
 13310 ;;		None
 13311 ;; Return value:  Size  Location     Type
 13312 ;;                  1    wreg      void 
 13313 ;; Registers used:
 13314 ;;		wreg, status,2, status,0, pclath, cstack
 13315 ;; Tracked objects:
 13316 ;;		On entry : 0/0
 13317 ;;		On exit  : 0/0
 13318 ;;		Unchanged: 0/0
 13319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13324 ;;Total ram usage:        0 bytes
 13325 ;; Hardware stack levels used:    1
 13326 ;; Hardware stack levels required when called:    7
 13327 ;; This function calls:
 13328 ;;		_PWM6_LoadDutyValue
 13329 ;; This function is called by:
 13330 ;;		_config_routine
 13331 ;;		_mode_LED
 13332 ;; This function uses a non-reentrant model
 13333 ;;
 13334                           
 13335                           
 13336                           ;psect for function _mod4_LED
 13337  0AD7                     _mod4_LED:	
 13338  0AD7                     l6496:	
 13339                           ;incstack = 0
 13340                           ; Regs used in _mod4_LED: [wreg+status,2+status,0+pclath+cstack]
 13341                           
 13342                           
 13343                           ;leds.c: 85:     LATA = 0;
 13344  0AD7  0020               	movlb	0	; select bank0
 13345  0AD8  0196               	clrf	22	;volatile
 13346  0AD9                     l6498:	
 13347                           
 13348                           ;leds.c: 86:     PWM6_LoadDutyValue(0);
 13349  0AD9  3000               	movlw	0
 13350  0ADA  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 13351  0ADB  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13352  0ADC  318C  2488  318A   	fcall	_PWM6_LoadDutyValue
 13353  0ADF                     l6500:	
 13354  0ADF  0020               	movlb	0	; select bank0
 13355  0AE0  1616               	bsf	22,4	;volatile
 13356  0AE1                     l1699:	
 13357  0AE1  0008               	return
 13358  0AE2                     __end_of_mod4_LED:	
 13359                           
 13360                           	psect	text17
 13361  0ACC                     __ptext17:	
 13362 ;; *************** function _mod3_LED *****************
 13363 ;; Defined at:
 13364 ;;		line 77 in file "leds.c"
 13365 ;; Parameters:    Size  Location     Type
 13366 ;;		None
 13367 ;; Auto vars:     Size  Location     Type
 13368 ;;		None
 13369 ;; Return value:  Size  Location     Type
 13370 ;;                  1    wreg      void 
 13371 ;; Registers used:
 13372 ;;		wreg, status,2, status,0, pclath, cstack
 13373 ;; Tracked objects:
 13374 ;;		On entry : 0/0
 13375 ;;		On exit  : 0/0
 13376 ;;		Unchanged: 0/0
 13377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13382 ;;Total ram usage:        0 bytes
 13383 ;; Hardware stack levels used:    1
 13384 ;; Hardware stack levels required when called:    7
 13385 ;; This function calls:
 13386 ;;		_PWM6_LoadDutyValue
 13387 ;; This function is called by:
 13388 ;;		_config_routine
 13389 ;;		_mode_LED
 13390 ;; This function uses a non-reentrant model
 13391 ;;
 13392                           
 13393                           
 13394                           ;psect for function _mod3_LED
 13395  0ACC                     _mod3_LED:	
 13396  0ACC                     l6490:	
 13397                           ;incstack = 0
 13398                           ; Regs used in _mod3_LED: [wreg+status,2+status,0+pclath+cstack]
 13399                           
 13400                           
 13401                           ;leds.c: 78:     LATA = 0;
 13402  0ACC  0020               	movlb	0	; select bank0
 13403  0ACD  0196               	clrf	22	;volatile
 13404  0ACE                     l6492:	
 13405                           
 13406                           ;leds.c: 79:     PWM6_LoadDutyValue(0);
 13407  0ACE  3000               	movlw	0
 13408  0ACF  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 13409  0AD0  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13410  0AD1  318C  2488  318A   	fcall	_PWM6_LoadDutyValue
 13411  0AD4                     l6494:	
 13412  0AD4  0020               	movlb	0	; select bank0
 13413  0AD5  1696               	bsf	22,5	;volatile
 13414  0AD6                     l1694:	
 13415  0AD6  0008               	return
 13416  0AD7                     __end_of_mod3_LED:	
 13417                           
 13418                           	psect	text18
 13419  0AB7                     __ptext18:	
 13420 ;; *************** function _mod2_LED *****************
 13421 ;; Defined at:
 13422 ;;		line 72 in file "leds.c"
 13423 ;; Parameters:    Size  Location     Type
 13424 ;;		None
 13425 ;; Auto vars:     Size  Location     Type
 13426 ;;		None
 13427 ;; Return value:  Size  Location     Type
 13428 ;;                  1    wreg      void 
 13429 ;; Registers used:
 13430 ;;		wreg, status,2, status,0, pclath, cstack
 13431 ;; Tracked objects:
 13432 ;;		On entry : 0/0
 13433 ;;		On exit  : 0/0
 13434 ;;		Unchanged: 0/0
 13435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13440 ;;Total ram usage:        0 bytes
 13441 ;; Hardware stack levels used:    1
 13442 ;; Hardware stack levels required when called:    7
 13443 ;; This function calls:
 13444 ;;		_PWM6_LoadDutyValue
 13445 ;; This function is called by:
 13446 ;;		_config_routine
 13447 ;;		_mode_LED
 13448 ;; This function uses a non-reentrant model
 13449 ;;
 13450                           
 13451                           
 13452                           ;psect for function _mod2_LED
 13453  0AB7                     _mod2_LED:	
 13454  0AB7                     l6486:	
 13455                           ;incstack = 0
 13456                           ; Regs used in _mod2_LED: [wreg+status,2+status,0+pclath+cstack]
 13457                           
 13458                           
 13459                           ;leds.c: 73:     LATA = 0;
 13460  0AB7  0020               	movlb	0	; select bank0
 13461  0AB8  0196               	clrf	22	;volatile
 13462  0AB9                     l6488:	
 13463                           
 13464                           ;leds.c: 74:     PWM6_LoadDutyValue(1023);
 13465  0AB9  30FF               	movlw	255
 13466  0ABA  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 13467  0ABB  3003               	movlw	3
 13468  0ABC  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13469  0ABD  318C  2488  318A   	fcall	_PWM6_LoadDutyValue
 13470  0AC0                     l1689:	
 13471  0AC0  0008               	return
 13472  0AC1                     __end_of_mod2_LED:	
 13473                           
 13474                           	psect	text19
 13475  0AC1                     __ptext19:	
 13476 ;; *************** function _mod1_LED *****************
 13477 ;; Defined at:
 13478 ;;		line 65 in file "leds.c"
 13479 ;; Parameters:    Size  Location     Type
 13480 ;;		None
 13481 ;; Auto vars:     Size  Location     Type
 13482 ;;		None
 13483 ;; Return value:  Size  Location     Type
 13484 ;;                  1    wreg      void 
 13485 ;; Registers used:
 13486 ;;		wreg, status,2, status,0, pclath, cstack
 13487 ;; Tracked objects:
 13488 ;;		On entry : 0/0
 13489 ;;		On exit  : 0/0
 13490 ;;		Unchanged: 0/0
 13491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13496 ;;Total ram usage:        0 bytes
 13497 ;; Hardware stack levels used:    1
 13498 ;; Hardware stack levels required when called:    7
 13499 ;; This function calls:
 13500 ;;		_PWM6_LoadDutyValue
 13501 ;; This function is called by:
 13502 ;;		_config_routine
 13503 ;;		_mode_LED
 13504 ;; This function uses a non-reentrant model
 13505 ;;
 13506                           
 13507                           
 13508                           ;psect for function _mod1_LED
 13509  0AC1                     _mod1_LED:	
 13510  0AC1                     l6480:	
 13511                           ;incstack = 0
 13512                           ; Regs used in _mod1_LED: [wreg+status,2+status,0+pclath+cstack]
 13513                           
 13514                           
 13515                           ;leds.c: 66:     LATA = 0;
 13516  0AC1  0020               	movlb	0	; select bank0
 13517  0AC2  0196               	clrf	22	;volatile
 13518  0AC3                     l6482:	
 13519                           
 13520                           ;leds.c: 67:     PWM6_LoadDutyValue(0);
 13521  0AC3  3000               	movlw	0
 13522  0AC4  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 13523  0AC5  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13524  0AC6  318C  2488  318A   	fcall	_PWM6_LoadDutyValue
 13525  0AC9                     l6484:	
 13526  0AC9  0020               	movlb	0	; select bank0
 13527  0ACA  1796               	bsf	22,7	;volatile
 13528  0ACB                     l1686:	
 13529  0ACB  0008               	return
 13530  0ACC                     __end_of_mod1_LED:	
 13531                           
 13532                           	psect	text20
 13533  03F8                     __ptext20:	
 13534 ;; *************** function _increment_subfield *****************
 13535 ;; Defined at:
 13536 ;;		line 549 in file "main.c"
 13537 ;; Parameters:    Size  Location     Type
 13538 ;;		None
 13539 ;; Auto vars:     Size  Location     Type
 13540 ;;  _value          1   20[BANK0 ] unsigned char 
 13541 ;;  exit            1   19[BANK0 ] unsigned char 
 13542 ;; Return value:  Size  Location     Type
 13543 ;;                  1    wreg      void 
 13544 ;; Registers used:
 13545 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13546 ;; Tracked objects:
 13547 ;;		On entry : 0/0
 13548 ;;		On exit  : 0/0
 13549 ;;		Unchanged: 0/0
 13550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13552 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13553 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13554 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13555 ;;Total ram usage:        3 bytes
 13556 ;; Hardware stack levels used:    1
 13557 ;; Hardware stack levels required when called:    8
 13558 ;; This function calls:
 13559 ;;		Absolute function
 13560 ;;		_PWM6_LoadDutyValue
 13561 ;;		_checkDebounceSW1
 13562 ;;		_checkDebounceSW2
 13563 ;;		_recAlarm
 13564 ;;		_recHour
 13565 ;;		_recLumThresh
 13566 ;;		_recMinutes
 13567 ;;		_recTempThresh
 13568 ;;		_representLed
 13569 ;; This function is called by:
 13570 ;;		_selectSubfield
 13571 ;; This function uses a non-reentrant model
 13572 ;;
 13573                           
 13574                           
 13575                           ;psect for function _increment_subfield
 13576  03F8                     _increment_subfield:	
 13577  03F8                     l6686:	
 13578                           ;incstack = 0
 13579                           ; Regs used in _increment_subfield: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13580                           
 13581                           
 13582                           ;main.c: 551:     unsigned char exit = 0;
 13583  03F8  0020               	movlb	0	; select bank0
 13584  03F9  01B3               	clrf	increment_subfield@exit
 13585                           
 13586                           ;main.c: 552:     unsigned char _value = 0;
 13587  03FA  01B4               	clrf	increment_subfield@_value
 13588  03FB                     l6688:	
 13589                           
 13590                           ;main.c: 554:     PWM6_LoadDutyValue(0);
 13591  03FB  3000               	movlw	0
 13592  03FC  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 13593  03FD  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13594  03FE  318C  2488  3183   	fcall	_PWM6_LoadDutyValue
 13595  0401                     l6690:	
 13596                           
 13597                           ;main.c: 555:     LATA = 0;
 13598  0401  0020               	movlb	0	; select bank0
 13599  0402  0196               	clrf	22	;volatile
 13600  0403                     l6692:	
 13601                           
 13602                           ;main.c: 556:     if(_value > (int)((int *) (unsigned char(*)(void))subfield_info.limit)
      +                          ) _value = 0;
 13603  0403  1FC2               	btfss	_subfield_info+1,7
 13604  0404  2C06               	goto	u3791
 13605  0405  2C07               	goto	u3790
 13606  0406                     u3791:	
 13607  0406  2C47               	goto	l6716
 13608  0407                     u3790:	
 13609  0407                     l6694:	
 13610  0407  01B4               	clrf	increment_subfield@_value
 13611  0408  2C47               	goto	l6716
 13612  0409                     l311:	
 13613                           
 13614                           ;main.c: 560:         if(!PORTCbits.RC5){
 13615  0409  1A8E               	btfsc	14,5	;volatile
 13616  040A  2C0C               	goto	u3801
 13617  040B  2C0D               	goto	u3800
 13618  040C                     u3801:	
 13619  040C  2C33               	goto	l6708
 13620  040D                     u3800:	
 13621  040D                     l6696:	
 13622                           
 13623                           ;main.c: 561:             if(checkDebounceSW2()){
 13624  040D  3186  26BE  3183   	fcall	_checkDebounceSW2
 13625  0410  3A00               	xorlw	0
 13626  0411  1903               	skipnz
 13627  0412  2C14               	goto	u3811
 13628  0413  2C15               	goto	u3810
 13629  0414                     u3811:	
 13630  0414  2C2E               	goto	l6706
 13631  0415                     u3810:	
 13632  0415                     l6698:	
 13633                           
 13634                           ;main.c: 563:                 _value++;
 13635  0415  3001               	movlw	1
 13636  0416  0020               	movlb	0	; select bank0
 13637  0417  00B2               	movwf	??_increment_subfield
 13638  0418  0832               	movf	??_increment_subfield,w
 13639  0419  07B4               	addwf	increment_subfield@_value,f
 13640  041A                     l6700:	
 13641                           
 13642                           ;main.c: 564:                 if(_value > (int)((int *) (unsigned char(*)(void))subfield
      +                          _info.limit)) _value = 0;
 13643  041A  0842               	movf	_subfield_info+1,w
 13644  041B  3A80               	xorlw	128
 13645  041C  00B2               	movwf	??_increment_subfield
 13646  041D  3080               	movlw	128
 13647  041E  0232               	subwf	??_increment_subfield,w
 13648  041F  1D03               	skipz
 13649  0420  2C23               	goto	u3825
 13650  0421  0834               	movf	increment_subfield@_value,w
 13651  0422  0241               	subwf	_subfield_info,w
 13652  0423                     u3825:	
 13653  0423  1803               	skipnc
 13654  0424  2C26               	goto	u3821
 13655  0425  2C27               	goto	u3820
 13656  0426                     u3821:	
 13657  0426  2C29               	goto	l6704
 13658  0427                     u3820:	
 13659  0427                     l6702:	
 13660  0427  0020               	movlb	0	; select bank0
 13661  0428  01B4               	clrf	increment_subfield@_value
 13662  0429                     l6704:	
 13663                           
 13664                           ;main.c: 565:                  representLed(_value);
 13665  0429  0020               	movlb	0	; select bank0
 13666  042A  0834               	movf	increment_subfield@_value,w
 13667  042B  3186  2671  3183   	fcall	_representLed
 13668  042E                     l6706:	
 13669                           
 13670                           ;main.c: 568:             last_ms2 = clkms;
 13671  042E  087D               	movf	_clkms,w	;volatile
 13672  042F  0020               	movlb	0	; select bank0
 13673  0430  00B2               	movwf	??_increment_subfield
 13674  0431  0832               	movf	??_increment_subfield,w
 13675  0432  00D8               	movwf	_last_ms2
 13676  0433                     l6708:	
 13677                           
 13678                           ;main.c: 571:         if(!PORTBbits.RB4){
 13679  0433  1A0D               	btfsc	13,4	;volatile
 13680  0434  2C36               	goto	u3831
 13681  0435  2C37               	goto	u3830
 13682  0436                     u3831:	
 13683  0436  2C47               	goto	l6716
 13684  0437                     u3830:	
 13685  0437                     l6710:	
 13686                           
 13687                           ;main.c: 572:             if(checkDebounceSW1()){
 13688  0437  3185  2515  3183   	fcall	_checkDebounceSW1
 13689  043A  3A00               	xorlw	0
 13690  043B  1903               	skipnz
 13691  043C  2C3E               	goto	u3841
 13692  043D  2C3F               	goto	u3840
 13693  043E                     u3841:	
 13694  043E  2C42               	goto	l6714
 13695  043F                     u3840:	
 13696  043F                     l6712:	
 13697                           
 13698                           ;main.c: 573:                 exit = 1;
 13699  043F  0020               	movlb	0	; select bank0
 13700  0440  01B3               	clrf	increment_subfield@exit
 13701  0441  0AB3               	incf	increment_subfield@exit,f
 13702  0442                     l6714:	
 13703                           
 13704                           ;main.c: 575:             last_ms = clkms;
 13705  0442  087D               	movf	_clkms,w	;volatile
 13706  0443  0020               	movlb	0	; select bank0
 13707  0444  00B2               	movwf	??_increment_subfield
 13708  0445  0832               	movf	??_increment_subfield,w
 13709  0446  00D9               	movwf	_last_ms
 13710  0447                     l6716:	
 13711                           
 13712                           ;main.c: 558:     while(exit == 0){
 13713  0447  0833               	movf	increment_subfield@exit,w
 13714  0448  1903               	btfsc	3,2
 13715  0449  2C4B               	goto	u3851
 13716  044A  2C4C               	goto	u3850
 13717  044B                     u3851:	
 13718  044B  2C09               	goto	l311
 13719  044C                     u3850:	
 13720  044C                     l6718:	
 13721                           
 13722                           ;main.c: 578:     subfield_info.reconstruct_subfield(_value);
 13723  044C  0834               	movf	increment_subfield@_value,w
 13724  044D  00B2               	movwf	??_increment_subfield
 13725  044E  0832               	movf	??_increment_subfield,w
 13726  044F  00AC               	movwf	recLumThresh@_value
 13727  0450  3002               	movlw	2
 13728  0451  3E41               	addlw	(low (_subfield_info| 0))& (0+255)
 13729  0452  0086               	movwf	6
 13730  0453  0187               	clrf	7
 13731  0454  3F41               	moviw [1]fsr1
 13732  0455  008A               	movwf	10
 13733  0456  3F40               	moviw [0]fsr1
 13734  0457  000A               	callw
 13735  0458  3183               	pagesel	$
 13736  0459                     l318:	
 13737  0459  0008               	return
 13738  045A                     __end_of_increment_subfield:	
 13739                           
 13740                           	psect	text21
 13741  0671                     __ptext21:	
 13742 ;; *************** function _representLed *****************
 13743 ;; Defined at:
 13744 ;;		line 134 in file "leds.c"
 13745 ;; Parameters:    Size  Location     Type
 13746 ;;  val             1    wreg     unsigned char 
 13747 ;; Auto vars:     Size  Location     Type
 13748 ;;  val             1   16[BANK0 ] unsigned char 
 13749 ;;  aux             1   17[BANK0 ] unsigned char 
 13750 ;; Return value:  Size  Location     Type
 13751 ;;                  1    wreg      void 
 13752 ;; Registers used:
 13753 ;;		wreg, status,2, status,0, pclath, cstack
 13754 ;; Tracked objects:
 13755 ;;		On entry : 0/0
 13756 ;;		On exit  : 0/0
 13757 ;;		Unchanged: 0/0
 13758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13760 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13761 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13762 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13763 ;;Total ram usage:        5 bytes
 13764 ;; Hardware stack levels used:    1
 13765 ;; Hardware stack levels required when called:    7
 13766 ;; This function calls:
 13767 ;;		_PWM6_LoadDutyValue
 13768 ;;		___wmul
 13769 ;; This function is called by:
 13770 ;;		_increment_subfield
 13771 ;; This function uses a non-reentrant model
 13772 ;;
 13773                           
 13774                           
 13775                           ;psect for function _representLed
 13776  0671                     _representLed:	
 13777                           
 13778                           ;incstack = 0
 13779                           ; Regs used in _representLed: [wreg+status,2+status,0+pclath+cstack]
 13780                           ;representLed@val stored from wreg
 13781  0671  0020               	movlb	0	; select bank0
 13782  0672  00B0               	movwf	representLed@val
 13783  0673                     l6544:	
 13784                           
 13785                           ;leds.c: 134: void representLed(unsigned char val);leds.c: 135: {;leds.c: 136:     unsig
      +                          ned char aux = val;
 13786  0673  0830               	movf	representLed@val,w
 13787  0674  00AD               	movwf	??_representLed
 13788  0675  082D               	movf	??_representLed,w
 13789  0676  00B1               	movwf	representLed@aux
 13790                           
 13791                           ;leds.c: 137:     if(val > 99)
 13792  0677  3064               	movlw	100
 13793  0678  0230               	subwf	representLed@val,w
 13794  0679  1C03               	skipc
 13795  067A  2E7C               	goto	u3751
 13796  067B  2E7D               	goto	u3750
 13797  067C                     u3751:	
 13798  067C  2E7E               	goto	l6548
 13799  067D                     u3750:	
 13800  067D  2EBD               	goto	l1724
 13801  067E                     l6548:	
 13802                           
 13803                           ;leds.c: 140:     LATAbits.LATA7 = aux >> 3;
 13804  067E  0831               	movf	representLed@aux,w
 13805  067F  00AD               	movwf	??_representLed
 13806  0680  3003               	movlw	3
 13807  0681                     u3765:	
 13808  0681  36AD               	lsrf	??_representLed,f
 13809  0682  0B89               	decfsz	9,f
 13810  0683  2E81               	goto	u3765
 13811  0684  082D               	movf	??_representLed,w
 13812  0685  00AE               	movwf	??_representLed+1
 13813  0686  0CAE               	rrf	??_representLed+1,f
 13814  0687  0CAE               	rrf	??_representLed+1,f
 13815  0688  0816               	movf	22,w	;volatile
 13816  0689  062E               	xorwf	??_representLed+1,w
 13817  068A  397F               	andlw	-129
 13818  068B  062E               	xorwf	??_representLed+1,w
 13819  068C  0096               	movwf	22	;volatile
 13820  068D                     l6550:	
 13821                           
 13822                           ;leds.c: 141:     PWM6_LoadDutyValue(((aux >> 2) & 1)*1023);
 13823  068D  0831               	movf	representLed@aux,w
 13824  068E  00AD               	movwf	??_representLed
 13825  068F  3002               	movlw	2
 13826  0690                     u3775:	
 13827  0690  36AD               	lsrf	??_representLed,f
 13828  0691  0B89               	decfsz	9,f
 13829  0692  2E90               	goto	u3775
 13830  0693  082D               	movf	??_representLed,w
 13831  0694  3901               	andlw	1
 13832  0695  00AE               	movwf	??_representLed+1
 13833  0696  01AF               	clrf	??_representLed+2
 13834  0697  082E               	movf	??_representLed+1,w
 13835  0698  00A3               	movwf	___wmul@multiplier
 13836  0699  082F               	movf	??_representLed+2,w
 13837  069A  00A4               	movwf	___wmul@multiplier+1
 13838  069B  30FF               	movlw	255
 13839  069C  00A5               	movwf	___wmul@multiplicand
 13840  069D  3003               	movlw	3
 13841  069E  00A6               	movwf	___wmul@multiplicand+1
 13842  069F  318D  2532  3186   	fcall	___wmul
 13843  06A2  0020               	movlb	0	; select bank0
 13844  06A3  0824               	movf	?___wmul+1,w
 13845  06A4  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13846  06A5  0823               	movf	?___wmul,w
 13847  06A6  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 13848  06A7  318C  2488  3186   	fcall	_PWM6_LoadDutyValue
 13849  06AA                     l6552:	
 13850                           
 13851                           ;leds.c: 142:     LATAbits.LATA5 = aux >> 1;
 13852  06AA  0020               	movlb	0	; select bank0
 13853  06AB  3631               	lsrf	representLed@aux,w
 13854  06AC  00AD               	movwf	??_representLed
 13855  06AD  0EAD               	swapf	??_representLed,f
 13856  06AE  0DAD               	rlf	??_representLed,f
 13857  06AF  0816               	movf	22,w	;volatile
 13858  06B0  062D               	xorwf	??_representLed,w
 13859  06B1  39DF               	andlw	-33
 13860  06B2  062D               	xorwf	??_representLed,w
 13861  06B3  0096               	movwf	22	;volatile
 13862  06B4                     l6554:	
 13863                           
 13864                           ;leds.c: 143:     LATAbits.LATA4 = aux & 1;
 13865  06B4  0831               	movf	representLed@aux,w
 13866  06B5  3901               	andlw	1
 13867  06B6  00AD               	movwf	??_representLed
 13868  06B7  0EAD               	swapf	??_representLed,f
 13869  06B8  0816               	movf	22,w	;volatile
 13870  06B9  062D               	xorwf	??_representLed,w
 13871  06BA  39EF               	andlw	-17
 13872  06BB  062D               	xorwf	??_representLed,w
 13873  06BC  0096               	movwf	22	;volatile
 13874  06BD                     l1724:	
 13875  06BD  0008               	return
 13876  06BE                     __end_of_representLed:	
 13877                           
 13878                           	psect	text22
 13879  0D32                     __ptext22:	
 13880 ;; *************** function ___wmul *****************
 13881 ;; Defined at:
 13882 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul16.c"
 13883 ;; Parameters:    Size  Location     Type
 13884 ;;  multiplier      2    3[BANK0 ] unsigned int 
 13885 ;;  multiplicand    2    5[BANK0 ] unsigned int 
 13886 ;; Auto vars:     Size  Location     Type
 13887 ;;  product         2    7[BANK0 ] unsigned int 
 13888 ;; Return value:  Size  Location     Type
 13889 ;;                  2    3[BANK0 ] unsigned int 
 13890 ;; Registers used:
 13891 ;;		wreg, status,2, status,0
 13892 ;; Tracked objects:
 13893 ;;		On entry : 0/0
 13894 ;;		On exit  : 0/0
 13895 ;;		Unchanged: 0/0
 13896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13897 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13898 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13900 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13901 ;;Total ram usage:        6 bytes
 13902 ;; Hardware stack levels used:    1
 13903 ;; Hardware stack levels required when called:    6
 13904 ;; This function calls:
 13905 ;;		Nothing
 13906 ;; This function is called by:
 13907 ;;		_representLed
 13908 ;; This function uses a non-reentrant model
 13909 ;;
 13910                           
 13911                           
 13912                           ;psect for function ___wmul
 13913  0D32                     ___wmul:	
 13914  0D32                     l6358:	
 13915                           ;incstack = 0
 13916                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13917                           
 13918  0D32  0020               	movlb	0	; select bank0
 13919  0D33  01A7               	clrf	___wmul@product
 13920  0D34  01A8               	clrf	___wmul@product+1
 13921  0D35                     l6360:	
 13922  0D35  1C23               	btfss	___wmul@multiplier,0
 13923  0D36  2D38               	goto	u3431
 13924  0D37  2D39               	goto	u3430
 13925  0D38                     u3431:	
 13926  0D38  2D3D               	goto	l1876
 13927  0D39                     u3430:	
 13928  0D39                     l6362:	
 13929  0D39  0825               	movf	___wmul@multiplicand,w
 13930  0D3A  07A7               	addwf	___wmul@product,f
 13931  0D3B  0826               	movf	___wmul@multiplicand+1,w
 13932  0D3C  3DA8               	addwfc	___wmul@product+1,f
 13933  0D3D                     l1876:	
 13934  0D3D  3001               	movlw	1
 13935  0D3E                     u3445:	
 13936  0D3E  35A5               	lslf	___wmul@multiplicand,f
 13937  0D3F  0DA6               	rlf	___wmul@multiplicand+1,f
 13938  0D40  0B89               	decfsz	9,f
 13939  0D41  2D3E               	goto	u3445
 13940  0D42                     l6364:	
 13941  0D42  3001               	movlw	1
 13942  0D43                     u3455:	
 13943  0D43  36A4               	lsrf	___wmul@multiplier+1,f
 13944  0D44  0CA3               	rrf	___wmul@multiplier,f
 13945  0D45  0B89               	decfsz	9,f
 13946  0D46  2D43               	goto	u3455
 13947  0D47                     l6366:	
 13948  0D47  0823               	movf	___wmul@multiplier,w
 13949  0D48  0424               	iorwf	___wmul@multiplier+1,w
 13950  0D49  1D03               	btfss	3,2
 13951  0D4A  2D4C               	goto	u3461
 13952  0D4B  2D4D               	goto	u3460
 13953  0D4C                     u3461:	
 13954  0D4C  2D35               	goto	l6360
 13955  0D4D                     u3460:	
 13956  0D4D                     l6368:	
 13957  0D4D  0828               	movf	___wmul@product+1,w
 13958  0D4E  00A4               	movwf	?___wmul+1
 13959  0D4F  0827               	movf	___wmul@product,w
 13960  0D50  00A3               	movwf	?___wmul
 13961  0D51                     l1878:	
 13962  0D51  0008               	return
 13963  0D52                     __end_of___wmul:	
 13964                           
 13965                           	psect	text23
 13966  0A27                     __ptext23:	
 13967 ;; *************** function _recLumThresh *****************
 13968 ;; Defined at:
 13969 ;;		line 457 in file "main.c"
 13970 ;; Parameters:    Size  Location     Type
 13971 ;;  _value          1   12[BANK0 ] unsigned char 
 13972 ;; Auto vars:     Size  Location     Type
 13973 ;;		None
 13974 ;; Return value:  Size  Location     Type
 13975 ;;                  1    wreg      void 
 13976 ;; Registers used:
 13977 ;;		wreg
 13978 ;; Tracked objects:
 13979 ;;		On entry : 0/0
 13980 ;;		On exit  : 0/0
 13981 ;;		Unchanged: 0/0
 13982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13983 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13985 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13986 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13987 ;;Total ram usage:        2 bytes
 13988 ;; Hardware stack levels used:    1
 13989 ;; Hardware stack levels required when called:    6
 13990 ;; This function calls:
 13991 ;;		Nothing
 13992 ;; This function is called by:
 13993 ;;		_getSubfieldInfo
 13994 ;;		_increment_subfield
 13995 ;; This function uses a non-reentrant model
 13996 ;;
 13997                           
 13998                           
 13999                           ;psect for function _recLumThresh
 14000  0A27                     _recLumThresh:	
 14001  0A27                     l6522:	
 14002                           ;incstack = 0
 14003                           ; Regs used in _recLumThresh: [wreg]
 14004                           
 14005                           
 14006                           ;main.c: 458:     lum_thresh = _value;
 14007  0A27  0020               	movlb	0	; select bank0
 14008  0A28  082C               	movf	recLumThresh@_value,w
 14009  0A29  00AD               	movwf	??_recLumThresh
 14010  0A2A  082D               	movf	??_recLumThresh,w
 14011  0A2B  00E3               	movwf	_lum_thresh
 14012  0A2C                     l278:	
 14013  0A2C  0008               	return
 14014  0A2D                     __end_of_recLumThresh:	
 14015                           
 14016                           	psect	text24
 14017  0A21                     __ptext24:	
 14018 ;; *************** function _recAlarm *****************
 14019 ;; Defined at:
 14020 ;;		line 472 in file "main.c"
 14021 ;; Parameters:    Size  Location     Type
 14022 ;;  _value          1   12[BANK0 ] unsigned char 
 14023 ;; Auto vars:     Size  Location     Type
 14024 ;;		None
 14025 ;; Return value:  Size  Location     Type
 14026 ;;                  1    wreg      void 
 14027 ;; Registers used:
 14028 ;;		wreg
 14029 ;; Tracked objects:
 14030 ;;		On entry : 0/0
 14031 ;;		On exit  : 0/0
 14032 ;;		Unchanged: 0/0
 14033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14034 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14036 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14037 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14038 ;;Total ram usage:        2 bytes
 14039 ;; Hardware stack levels used:    1
 14040 ;; Hardware stack levels required when called:    6
 14041 ;; This function calls:
 14042 ;;		Nothing
 14043 ;; This function is called by:
 14044 ;;		_getSubfieldInfo
 14045 ;;		_increment_subfield
 14046 ;; This function uses a non-reentrant model
 14047 ;;
 14048                           
 14049                           
 14050                           ;psect for function _recAlarm
 14051  0A21                     _recAlarm:	
 14052  0A21                     l6530:	
 14053                           ;incstack = 0
 14054                           ; Regs used in _recAlarm: [wreg]
 14055                           
 14056                           
 14057                           ;main.c: 473:     alarm = _value;
 14058  0A21  0020               	movlb	0	; select bank0
 14059  0A22  082C               	movf	recAlarm@_value,w
 14060  0A23  00AD               	movwf	??_recAlarm
 14061  0A24  082D               	movf	??_recAlarm,w
 14062  0A25  00D3               	movwf	_alarm	;volatile
 14063  0A26                     l286:	
 14064  0A26  0008               	return
 14065  0A27                     __end_of_recAlarm:	
 14066                           
 14067                           	psect	text25
 14068  0F28                     __ptext25:	
 14069 ;; *************** function _recMinutes *****************
 14070 ;; Defined at:
 14071 ;;		line 483 in file "main.c"
 14072 ;; Parameters:    Size  Location     Type
 14073 ;;  _value          1   12[BANK0 ] unsigned char 
 14074 ;; Auto vars:     Size  Location     Type
 14075 ;;		None
 14076 ;; Return value:  Size  Location     Type
 14077 ;;                  1    wreg      void 
 14078 ;; Registers used:
 14079 ;;		wreg, status,2, status,0, pclath, cstack
 14080 ;; Tracked objects:
 14081 ;;		On entry : 0/0
 14082 ;;		On exit  : 0/0
 14083 ;;		Unchanged: 0/0
 14084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14085 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14087 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14088 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14089 ;;Total ram usage:        4 bytes
 14090 ;; Hardware stack levels used:    1
 14091 ;; Hardware stack levels required when called:    7
 14092 ;; This function calls:
 14093 ;;		___awdiv
 14094 ;;		___awmod
 14095 ;; This function is called by:
 14096 ;;		_getSubfieldInfo
 14097 ;;		_increment_subfield
 14098 ;; This function uses a non-reentrant model
 14099 ;;
 14100                           
 14101                           
 14102                           ;psect for function _recMinutes
 14103  0F28                     _recMinutes:	
 14104  0F28                     l6532:	
 14105                           ;incstack = 0
 14106                           ; Regs used in _recMinutes: [wreg+status,2+status,0+pclath+cstack]
 14107                           
 14108                           
 14109                           ;main.c: 484:     if(mode_field_subfield[1] == 3){
 14110  0F28  3003               	movlw	3
 14111  0F29  0020               	movlb	0	; select bank0
 14112  0F2A  0661               	xorwf	_mode_field_subfield+2,w
 14113  0F2B  0462               	iorwf	_mode_field_subfield+3,w
 14114  0F2C  1D03               	btfss	3,2
 14115  0F2D  2F2F               	goto	u3731
 14116  0F2E  2F30               	goto	u3730
 14117  0F2F                     u3731:	
 14118  0F2F  2F45               	goto	l6536
 14119  0F30                     u3730:	
 14120  0F30                     l6534:	
 14121                           
 14122                           ;main.c: 486:         clkm = _value + (clkm % 10);
 14123  0F30  300A               	movlw	10
 14124  0F31  00A3               	movwf	___awmod@divisor
 14125  0F32  3000               	movlw	0
 14126  0F33  00A4               	movwf	___awmod@divisor+1
 14127  0F34  085B               	movf	_clkm,w	;volatile
 14128  0F35  00AD               	movwf	??_recMinutes
 14129  0F36  01AE               	clrf	??_recMinutes+1
 14130  0F37  082D               	movf	??_recMinutes,w
 14131  0F38  00A5               	movwf	___awmod@dividend
 14132  0F39  082E               	movf	??_recMinutes+1,w
 14133  0F3A  00A6               	movwf	___awmod@dividend+1
 14134  0F3B  3185  25C9  318F   	fcall	___awmod
 14135  0F3E  0020               	movlb	0	; select bank0
 14136  0F3F  0823               	movf	?___awmod,w
 14137  0F40  072C               	addwf	recMinutes@_value,w
 14138  0F41  00AF               	movwf	??_recMinutes+2
 14139  0F42  082F               	movf	??_recMinutes+2,w
 14140  0F43  00DB               	movwf	_clkm	;volatile
 14141                           
 14142                           ;main.c: 488:     }else{
 14143  0F44  2F59               	goto	l291
 14144  0F45                     l6536:	
 14145                           
 14146                           ;main.c: 489:         clkm = (clkm / 10) + _value;
 14147  0F45  300A               	movlw	10
 14148  0F46  00A3               	movwf	___awdiv@divisor
 14149  0F47  3000               	movlw	0
 14150  0F48  00A4               	movwf	___awdiv@divisor+1
 14151  0F49  085B               	movf	_clkm,w	;volatile
 14152  0F4A  00AD               	movwf	??_recMinutes
 14153  0F4B  01AE               	clrf	??_recMinutes+1
 14154  0F4C  082D               	movf	??_recMinutes,w
 14155  0F4D  00A5               	movwf	___awdiv@dividend
 14156  0F4E  082E               	movf	??_recMinutes+1,w
 14157  0F4F  00A6               	movwf	___awdiv@dividend+1
 14158  0F50  3184  245A  318F   	fcall	___awdiv
 14159  0F53  0020               	movlb	0	; select bank0
 14160  0F54  0823               	movf	?___awdiv,w
 14161  0F55  072C               	addwf	recMinutes@_value,w
 14162  0F56  00AF               	movwf	??_recMinutes+2
 14163  0F57  082F               	movf	??_recMinutes+2,w
 14164  0F58  00DB               	movwf	_clkm	;volatile
 14165  0F59                     l291:	
 14166  0F59  0008               	return
 14167  0F5A                     __end_of_recMinutes:	
 14168                           
 14169                           	psect	text26
 14170  0EF7                     __ptext26:	
 14171 ;; *************** function _recHour *****************
 14172 ;; Defined at:
 14173 ;;		line 500 in file "main.c"
 14174 ;; Parameters:    Size  Location     Type
 14175 ;;  _value          1   12[BANK0 ] unsigned char 
 14176 ;; Auto vars:     Size  Location     Type
 14177 ;;		None
 14178 ;; Return value:  Size  Location     Type
 14179 ;;                  1    wreg      void 
 14180 ;; Registers used:
 14181 ;;		wreg, status,2, status,0, pclath, cstack
 14182 ;; Tracked objects:
 14183 ;;		On entry : 0/0
 14184 ;;		On exit  : 0/0
 14185 ;;		Unchanged: 0/0
 14186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14187 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14189 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14190 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14191 ;;Total ram usage:        4 bytes
 14192 ;; Hardware stack levels used:    1
 14193 ;; Hardware stack levels required when called:    7
 14194 ;; This function calls:
 14195 ;;		___awdiv
 14196 ;;		___awmod
 14197 ;; This function is called by:
 14198 ;;		_getSubfieldInfo
 14199 ;;		_increment_subfield
 14200 ;; This function uses a non-reentrant model
 14201 ;;
 14202                           
 14203                           
 14204                           ;psect for function _recHour
 14205  0EF7                     _recHour:	
 14206  0EF7                     l6538:	
 14207                           ;incstack = 0
 14208                           ; Regs used in _recHour: [wreg+status,2+status,0+pclath+cstack]
 14209                           
 14210                           
 14211                           ;main.c: 501:     if(mode_field_subfield[1] == 1){
 14212  0EF7  0020               	movlb	0	; select bank0
 14213  0EF8  0361               	decf	_mode_field_subfield+2,w
 14214  0EF9  0462               	iorwf	_mode_field_subfield+3,w
 14215  0EFA  1D03               	btfss	3,2
 14216  0EFB  2EFD               	goto	u3741
 14217  0EFC  2EFE               	goto	u3740
 14218  0EFD                     u3741:	
 14219  0EFD  2F13               	goto	l6542
 14220  0EFE                     u3740:	
 14221  0EFE                     l6540:	
 14222                           
 14223                           ;main.c: 503:         clkh = _value + (clkh % 10);
 14224  0EFE  300A               	movlw	10
 14225  0EFF  00A3               	movwf	___awmod@divisor
 14226  0F00  3000               	movlw	0
 14227  0F01  00A4               	movwf	___awmod@divisor+1
 14228  0F02  085C               	movf	_clkh,w	;volatile
 14229  0F03  00AD               	movwf	??_recHour
 14230  0F04  01AE               	clrf	??_recHour+1
 14231  0F05  082D               	movf	??_recHour,w
 14232  0F06  00A5               	movwf	___awmod@dividend
 14233  0F07  082E               	movf	??_recHour+1,w
 14234  0F08  00A6               	movwf	___awmod@dividend+1
 14235  0F09  3185  25C9  318E   	fcall	___awmod
 14236  0F0C  0020               	movlb	0	; select bank0
 14237  0F0D  0823               	movf	?___awmod,w
 14238  0F0E  072C               	addwf	recHour@_value,w
 14239  0F0F  00AF               	movwf	??_recHour+2
 14240  0F10  082F               	movf	??_recHour+2,w
 14241  0F11  00DC               	movwf	_clkh	;volatile
 14242                           
 14243                           ;main.c: 505:     }else{
 14244  0F12  2F27               	goto	l296
 14245  0F13                     l6542:	
 14246                           
 14247                           ;main.c: 506:         clkh = (clkh / 10) + _value;
 14248  0F13  300A               	movlw	10
 14249  0F14  00A3               	movwf	___awdiv@divisor
 14250  0F15  3000               	movlw	0
 14251  0F16  00A4               	movwf	___awdiv@divisor+1
 14252  0F17  085C               	movf	_clkh,w	;volatile
 14253  0F18  00AD               	movwf	??_recHour
 14254  0F19  01AE               	clrf	??_recHour+1
 14255  0F1A  082D               	movf	??_recHour,w
 14256  0F1B  00A5               	movwf	___awdiv@dividend
 14257  0F1C  082E               	movf	??_recHour+1,w
 14258  0F1D  00A6               	movwf	___awdiv@dividend+1
 14259  0F1E  3184  245A  318E   	fcall	___awdiv
 14260  0F21  0020               	movlb	0	; select bank0
 14261  0F22  0823               	movf	?___awdiv,w
 14262  0F23  072C               	addwf	recHour@_value,w
 14263  0F24  00AF               	movwf	??_recHour+2
 14264  0F25  082F               	movf	??_recHour+2,w
 14265  0F26  00DC               	movwf	_clkh	;volatile
 14266  0F27                     l296:	
 14267  0F27  0008               	return
 14268  0F28                     __end_of_recHour:	
 14269                           
 14270                           	psect	text27
 14271  0EC6                     __ptext27:	
 14272 ;; *************** function _recTempThresh *****************
 14273 ;; Defined at:
 14274 ;;		line 461 in file "main.c"
 14275 ;; Parameters:    Size  Location     Type
 14276 ;;  _value          1   12[BANK0 ] unsigned char 
 14277 ;; Auto vars:     Size  Location     Type
 14278 ;;		None
 14279 ;; Return value:  Size  Location     Type
 14280 ;;                  1    wreg      void 
 14281 ;; Registers used:
 14282 ;;		wreg, status,2, status,0, pclath, cstack
 14283 ;; Tracked objects:
 14284 ;;		On entry : 0/0
 14285 ;;		On exit  : 0/0
 14286 ;;		Unchanged: 0/0
 14287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14288 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14290 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14291 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14292 ;;Total ram usage:        4 bytes
 14293 ;; Hardware stack levels used:    1
 14294 ;; Hardware stack levels required when called:    7
 14295 ;; This function calls:
 14296 ;;		___awdiv
 14297 ;;		___awmod
 14298 ;; This function is called by:
 14299 ;;		_getSubfieldInfo
 14300 ;;		_increment_subfield
 14301 ;; This function uses a non-reentrant model
 14302 ;;
 14303                           
 14304                           
 14305                           ;psect for function _recTempThresh
 14306  0EC6                     _recTempThresh:	
 14307  0EC6                     l6524:	
 14308                           ;incstack = 0
 14309                           ; Regs used in _recTempThresh: [wreg+status,2+status,0+pclath+cstack]
 14310                           
 14311                           
 14312                           ;main.c: 462:     if(mode_field_subfield[1] == 1){
 14313  0EC6  0020               	movlb	0	; select bank0
 14314  0EC7  0361               	decf	_mode_field_subfield+2,w
 14315  0EC8  0462               	iorwf	_mode_field_subfield+3,w
 14316  0EC9  1D03               	btfss	3,2
 14317  0ECA  2ECC               	goto	u3721
 14318  0ECB  2ECD               	goto	u3720
 14319  0ECC                     u3721:	
 14320  0ECC  2EE2               	goto	l6528
 14321  0ECD                     u3720:	
 14322  0ECD                     l6526:	
 14323                           
 14324                           ;main.c: 464:         temp_thresh = _value + (temp_thresh % 10);
 14325  0ECD  300A               	movlw	10
 14326  0ECE  00A3               	movwf	___awmod@divisor
 14327  0ECF  3000               	movlw	0
 14328  0ED0  00A4               	movwf	___awmod@divisor+1
 14329  0ED1  0864               	movf	_temp_thresh,w
 14330  0ED2  00AD               	movwf	??_recTempThresh
 14331  0ED3  01AE               	clrf	??_recTempThresh+1
 14332  0ED4  082D               	movf	??_recTempThresh,w
 14333  0ED5  00A5               	movwf	___awmod@dividend
 14334  0ED6  082E               	movf	??_recTempThresh+1,w
 14335  0ED7  00A6               	movwf	___awmod@dividend+1
 14336  0ED8  3185  25C9  318E   	fcall	___awmod
 14337  0EDB  0020               	movlb	0	; select bank0
 14338  0EDC  0823               	movf	?___awmod,w
 14339  0EDD  072C               	addwf	recTempThresh@_value,w
 14340  0EDE  00AF               	movwf	??_recTempThresh+2
 14341  0EDF  082F               	movf	??_recTempThresh+2,w
 14342  0EE0  00E4               	movwf	_temp_thresh
 14343                           
 14344                           ;main.c: 466:     }else{
 14345  0EE1  2EF6               	goto	l283
 14346  0EE2                     l6528:	
 14347                           
 14348                           ;main.c: 467:         temp_thresh = (temp_thresh / 10) + _value;
 14349  0EE2  300A               	movlw	10
 14350  0EE3  00A3               	movwf	___awdiv@divisor
 14351  0EE4  3000               	movlw	0
 14352  0EE5  00A4               	movwf	___awdiv@divisor+1
 14353  0EE6  0864               	movf	_temp_thresh,w
 14354  0EE7  00AD               	movwf	??_recTempThresh
 14355  0EE8  01AE               	clrf	??_recTempThresh+1
 14356  0EE9  082D               	movf	??_recTempThresh,w
 14357  0EEA  00A5               	movwf	___awdiv@dividend
 14358  0EEB  082E               	movf	??_recTempThresh+1,w
 14359  0EEC  00A6               	movwf	___awdiv@dividend+1
 14360  0EED  3184  245A  318E   	fcall	___awdiv
 14361  0EF0  0020               	movlb	0	; select bank0
 14362  0EF1  0823               	movf	?___awdiv,w
 14363  0EF2  072C               	addwf	recTempThresh@_value,w
 14364  0EF3  00AF               	movwf	??_recTempThresh+2
 14365  0EF4  082F               	movf	??_recTempThresh+2,w
 14366  0EF5  00E4               	movwf	_temp_thresh
 14367  0EF6                     l283:	
 14368  0EF6  0008               	return
 14369  0EF7                     __end_of_recTempThresh:	
 14370                           
 14371                           	psect	text28
 14372  05C9                     __ptext28:	
 14373 ;; *************** function ___awmod *****************
 14374 ;; Defined at:
 14375 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 14376 ;; Parameters:    Size  Location     Type
 14377 ;;  divisor         2    3[BANK0 ] int 
 14378 ;;  dividend        2    5[BANK0 ] int 
 14379 ;; Auto vars:     Size  Location     Type
 14380 ;;  sign            1    9[BANK0 ] unsigned char 
 14381 ;;  counter         1    8[BANK0 ] unsigned char 
 14382 ;; Return value:  Size  Location     Type
 14383 ;;                  2    3[BANK0 ] int 
 14384 ;; Registers used:
 14385 ;;		wreg, status,2, status,0
 14386 ;; Tracked objects:
 14387 ;;		On entry : 0/0
 14388 ;;		On exit  : 0/0
 14389 ;;		Unchanged: 0/0
 14390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14391 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14392 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14393 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14394 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14395 ;;Total ram usage:        7 bytes
 14396 ;; Hardware stack levels used:    1
 14397 ;; Hardware stack levels required when called:    6
 14398 ;; This function calls:
 14399 ;;		Nothing
 14400 ;; This function is called by:
 14401 ;;		_recTempThresh
 14402 ;;		_recMinutes
 14403 ;;		_recHour
 14404 ;; This function uses a non-reentrant model
 14405 ;;
 14406                           
 14407                           
 14408                           ;psect for function ___awmod
 14409  05C9                     ___awmod:	
 14410  05C9                     l6416:	
 14411                           ;incstack = 0
 14412                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 14413                           
 14414  05C9  0020               	movlb	0	; select bank0
 14415  05CA  01A9               	clrf	___awmod@sign
 14416  05CB                     l6418:	
 14417  05CB  1FA6               	btfss	___awmod@dividend+1,7
 14418  05CC  2DCE               	goto	u3571
 14419  05CD  2DCF               	goto	u3570
 14420  05CE                     u3571:	
 14421  05CE  2DD6               	goto	l6424
 14422  05CF                     u3570:	
 14423  05CF                     l6420:	
 14424  05CF  09A5               	comf	___awmod@dividend,f
 14425  05D0  09A6               	comf	___awmod@dividend+1,f
 14426  05D1  0AA5               	incf	___awmod@dividend,f
 14427  05D2  1903               	skipnz
 14428  05D3  0AA6               	incf	___awmod@dividend+1,f
 14429  05D4                     l6422:	
 14430  05D4  01A9               	clrf	___awmod@sign
 14431  05D5  0AA9               	incf	___awmod@sign,f
 14432  05D6                     l6424:	
 14433  05D6  1FA4               	btfss	___awmod@divisor+1,7
 14434  05D7  2DD9               	goto	u3581
 14435  05D8  2DDA               	goto	u3580
 14436  05D9                     u3581:	
 14437  05D9  2DDF               	goto	l6428
 14438  05DA                     u3580:	
 14439  05DA                     l6426:	
 14440  05DA  09A3               	comf	___awmod@divisor,f
 14441  05DB  09A4               	comf	___awmod@divisor+1,f
 14442  05DC  0AA3               	incf	___awmod@divisor,f
 14443  05DD  1903               	skipnz
 14444  05DE  0AA4               	incf	___awmod@divisor+1,f
 14445  05DF                     l6428:	
 14446  05DF  0823               	movf	___awmod@divisor,w
 14447  05E0  0424               	iorwf	___awmod@divisor+1,w
 14448  05E1  1903               	btfsc	3,2
 14449  05E2  2DE4               	goto	u3591
 14450  05E3  2DE5               	goto	u3590
 14451  05E4                     u3591:	
 14452  05E4  2E0E               	goto	l6446
 14453  05E5                     u3590:	
 14454  05E5                     l6430:	
 14455  05E5  01A8               	clrf	___awmod@counter
 14456  05E6  0AA8               	incf	___awmod@counter,f
 14457  05E7  2DF1               	goto	l6436
 14458  05E8                     l6432:	
 14459  05E8  3001               	movlw	1
 14460  05E9                     u3605:	
 14461  05E9  35A3               	lslf	___awmod@divisor,f
 14462  05EA  0DA4               	rlf	___awmod@divisor+1,f
 14463  05EB  0B89               	decfsz	9,f
 14464  05EC  2DE9               	goto	u3605
 14465  05ED                     l6434:	
 14466  05ED  3001               	movlw	1
 14467  05EE  00A7               	movwf	??___awmod
 14468  05EF  0827               	movf	??___awmod,w
 14469  05F0  07A8               	addwf	___awmod@counter,f
 14470  05F1                     l6436:	
 14471  05F1  1FA4               	btfss	___awmod@divisor+1,7
 14472  05F2  2DF4               	goto	u3611
 14473  05F3  2DF5               	goto	u3610
 14474  05F4                     u3611:	
 14475  05F4  2DE8               	goto	l6432
 14476  05F5                     u3610:	
 14477  05F5                     l6438:	
 14478  05F5  0824               	movf	___awmod@divisor+1,w
 14479  05F6  0226               	subwf	___awmod@dividend+1,w
 14480  05F7  1D03               	skipz
 14481  05F8  2DFB               	goto	u3625
 14482  05F9  0823               	movf	___awmod@divisor,w
 14483  05FA  0225               	subwf	___awmod@dividend,w
 14484  05FB                     u3625:	
 14485  05FB  1C03               	skipc
 14486  05FC  2DFE               	goto	u3621
 14487  05FD  2DFF               	goto	u3620
 14488  05FE                     u3621:	
 14489  05FE  2E03               	goto	l6442
 14490  05FF                     u3620:	
 14491  05FF                     l6440:	
 14492  05FF  0823               	movf	___awmod@divisor,w
 14493  0600  02A5               	subwf	___awmod@dividend,f
 14494  0601  0824               	movf	___awmod@divisor+1,w
 14495  0602  3BA6               	subwfb	___awmod@dividend+1,f
 14496  0603                     l6442:	
 14497  0603  3001               	movlw	1
 14498  0604                     u3635:	
 14499  0604  36A4               	lsrf	___awmod@divisor+1,f
 14500  0605  0CA3               	rrf	___awmod@divisor,f
 14501  0606  0B89               	decfsz	9,f
 14502  0607  2E04               	goto	u3635
 14503  0608                     l6444:	
 14504  0608  3001               	movlw	1
 14505  0609  02A8               	subwf	___awmod@counter,f
 14506  060A  1D03               	btfss	3,2
 14507  060B  2E0D               	goto	u3641
 14508  060C  2E0E               	goto	u3640
 14509  060D                     u3641:	
 14510  060D  2DF5               	goto	l6438
 14511  060E                     u3640:	
 14512  060E                     l6446:	
 14513  060E  0829               	movf	___awmod@sign,w
 14514  060F  1903               	btfsc	3,2
 14515  0610  2E12               	goto	u3651
 14516  0611  2E13               	goto	u3650
 14517  0612                     u3651:	
 14518  0612  2E18               	goto	l6450
 14519  0613                     u3650:	
 14520  0613                     l6448:	
 14521  0613  09A5               	comf	___awmod@dividend,f
 14522  0614  09A6               	comf	___awmod@dividend+1,f
 14523  0615  0AA5               	incf	___awmod@dividend,f
 14524  0616  1903               	skipnz
 14525  0617  0AA6               	incf	___awmod@dividend+1,f
 14526  0618                     l6450:	
 14527  0618  0826               	movf	___awmod@dividend+1,w
 14528  0619  00A4               	movwf	?___awmod+1
 14529  061A  0825               	movf	___awmod@dividend,w
 14530  061B  00A3               	movwf	?___awmod
 14531  061C                     l2042:	
 14532  061C  0008               	return
 14533  061D                     __end_of___awmod:	
 14534                           
 14535                           	psect	text29
 14536  045A                     __ptext29:	
 14537 ;; *************** function ___awdiv *****************
 14538 ;; Defined at:
 14539 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 14540 ;; Parameters:    Size  Location     Type
 14541 ;;  divisor         2    3[BANK0 ] int 
 14542 ;;  dividend        2    5[BANK0 ] int 
 14543 ;; Auto vars:     Size  Location     Type
 14544 ;;  quotient        2   10[BANK0 ] int 
 14545 ;;  sign            1    9[BANK0 ] unsigned char 
 14546 ;;  counter         1    8[BANK0 ] unsigned char 
 14547 ;; Return value:  Size  Location     Type
 14548 ;;                  2    3[BANK0 ] int 
 14549 ;; Registers used:
 14550 ;;		wreg, status,2, status,0
 14551 ;; Tracked objects:
 14552 ;;		On entry : 0/0
 14553 ;;		On exit  : 0/0
 14554 ;;		Unchanged: 0/0
 14555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14556 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14557 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14558 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14559 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14560 ;;Total ram usage:        9 bytes
 14561 ;; Hardware stack levels used:    1
 14562 ;; Hardware stack levels required when called:    6
 14563 ;; This function calls:
 14564 ;;		Nothing
 14565 ;; This function is called by:
 14566 ;;		_recTempThresh
 14567 ;;		_recMinutes
 14568 ;;		_recHour
 14569 ;;		_limitTempThreshUnits
 14570 ;;		_limitHoursUnits
 14571 ;; This function uses a non-reentrant model
 14572 ;;
 14573                           
 14574                           
 14575                           ;psect for function ___awdiv
 14576  045A                     ___awdiv:	
 14577  045A                     l6372:	
 14578                           ;incstack = 0
 14579                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 14580                           
 14581  045A  0020               	movlb	0	; select bank0
 14582  045B  01A9               	clrf	___awdiv@sign
 14583  045C                     l6374:	
 14584  045C  1FA4               	btfss	___awdiv@divisor+1,7
 14585  045D  2C5F               	goto	u3471
 14586  045E  2C60               	goto	u3470
 14587  045F                     u3471:	
 14588  045F  2C67               	goto	l6380
 14589  0460                     u3470:	
 14590  0460                     l6376:	
 14591  0460  09A3               	comf	___awdiv@divisor,f
 14592  0461  09A4               	comf	___awdiv@divisor+1,f
 14593  0462  0AA3               	incf	___awdiv@divisor,f
 14594  0463  1903               	skipnz
 14595  0464  0AA4               	incf	___awdiv@divisor+1,f
 14596  0465                     l6378:	
 14597  0465  01A9               	clrf	___awdiv@sign
 14598  0466  0AA9               	incf	___awdiv@sign,f
 14599  0467                     l6380:	
 14600  0467  1FA6               	btfss	___awdiv@dividend+1,7
 14601  0468  2C6A               	goto	u3481
 14602  0469  2C6B               	goto	u3480
 14603  046A                     u3481:	
 14604  046A  2C74               	goto	l6386
 14605  046B                     u3480:	
 14606  046B                     l6382:	
 14607  046B  09A5               	comf	___awdiv@dividend,f
 14608  046C  09A6               	comf	___awdiv@dividend+1,f
 14609  046D  0AA5               	incf	___awdiv@dividend,f
 14610  046E  1903               	skipnz
 14611  046F  0AA6               	incf	___awdiv@dividend+1,f
 14612  0470                     l6384:	
 14613  0470  3001               	movlw	1
 14614  0471  00A7               	movwf	??___awdiv
 14615  0472  0827               	movf	??___awdiv,w
 14616  0473  06A9               	xorwf	___awdiv@sign,f
 14617  0474                     l6386:	
 14618  0474  01AA               	clrf	___awdiv@quotient
 14619  0475  01AB               	clrf	___awdiv@quotient+1
 14620  0476                     l6388:	
 14621  0476  0823               	movf	___awdiv@divisor,w
 14622  0477  0424               	iorwf	___awdiv@divisor+1,w
 14623  0478  1903               	btfsc	3,2
 14624  0479  2C7B               	goto	u3491
 14625  047A  2C7C               	goto	u3490
 14626  047B                     u3491:	
 14627  047B  2CAB               	goto	l6408
 14628  047C                     u3490:	
 14629  047C                     l6390:	
 14630  047C  01A8               	clrf	___awdiv@counter
 14631  047D  0AA8               	incf	___awdiv@counter,f
 14632  047E  2C88               	goto	l6396
 14633  047F                     l6392:	
 14634  047F  3001               	movlw	1
 14635  0480                     u3505:	
 14636  0480  35A3               	lslf	___awdiv@divisor,f
 14637  0481  0DA4               	rlf	___awdiv@divisor+1,f
 14638  0482  0B89               	decfsz	9,f
 14639  0483  2C80               	goto	u3505
 14640  0484                     l6394:	
 14641  0484  3001               	movlw	1
 14642  0485  00A7               	movwf	??___awdiv
 14643  0486  0827               	movf	??___awdiv,w
 14644  0487  07A8               	addwf	___awdiv@counter,f
 14645  0488                     l6396:	
 14646  0488  1FA4               	btfss	___awdiv@divisor+1,7
 14647  0489  2C8B               	goto	u3511
 14648  048A  2C8C               	goto	u3510
 14649  048B                     u3511:	
 14650  048B  2C7F               	goto	l6392
 14651  048C                     u3510:	
 14652  048C                     l6398:	
 14653  048C  3001               	movlw	1
 14654  048D                     u3525:	
 14655  048D  35AA               	lslf	___awdiv@quotient,f
 14656  048E  0DAB               	rlf	___awdiv@quotient+1,f
 14657  048F  0B89               	decfsz	9,f
 14658  0490  2C8D               	goto	u3525
 14659  0491  0824               	movf	___awdiv@divisor+1,w
 14660  0492  0226               	subwf	___awdiv@dividend+1,w
 14661  0493  1D03               	skipz
 14662  0494  2C97               	goto	u3535
 14663  0495  0823               	movf	___awdiv@divisor,w
 14664  0496  0225               	subwf	___awdiv@dividend,w
 14665  0497                     u3535:	
 14666  0497  1C03               	skipc
 14667  0498  2C9A               	goto	u3531
 14668  0499  2C9B               	goto	u3530
 14669  049A                     u3531:	
 14670  049A  2CA0               	goto	l6404
 14671  049B                     u3530:	
 14672  049B                     l6400:	
 14673  049B  0823               	movf	___awdiv@divisor,w
 14674  049C  02A5               	subwf	___awdiv@dividend,f
 14675  049D  0824               	movf	___awdiv@divisor+1,w
 14676  049E  3BA6               	subwfb	___awdiv@dividend+1,f
 14677  049F                     l6402:	
 14678  049F  142A               	bsf	___awdiv@quotient,0
 14679  04A0                     l6404:	
 14680  04A0  3001               	movlw	1
 14681  04A1                     u3545:	
 14682  04A1  36A4               	lsrf	___awdiv@divisor+1,f
 14683  04A2  0CA3               	rrf	___awdiv@divisor,f
 14684  04A3  0B89               	decfsz	9,f
 14685  04A4  2CA1               	goto	u3545
 14686  04A5                     l6406:	
 14687  04A5  3001               	movlw	1
 14688  04A6  02A8               	subwf	___awdiv@counter,f
 14689  04A7  1D03               	btfss	3,2
 14690  04A8  2CAA               	goto	u3551
 14691  04A9  2CAB               	goto	u3550
 14692  04AA                     u3551:	
 14693  04AA  2C8C               	goto	l6398
 14694  04AB                     u3550:	
 14695  04AB                     l6408:	
 14696  04AB  0829               	movf	___awdiv@sign,w
 14697  04AC  1903               	btfsc	3,2
 14698  04AD  2CAF               	goto	u3561
 14699  04AE  2CB0               	goto	u3560
 14700  04AF                     u3561:	
 14701  04AF  2CB5               	goto	l6412
 14702  04B0                     u3560:	
 14703  04B0                     l6410:	
 14704  04B0  09AA               	comf	___awdiv@quotient,f
 14705  04B1  09AB               	comf	___awdiv@quotient+1,f
 14706  04B2  0AAA               	incf	___awdiv@quotient,f
 14707  04B3  1903               	skipnz
 14708  04B4  0AAB               	incf	___awdiv@quotient+1,f
 14709  04B5                     l6412:	
 14710  04B5  082B               	movf	___awdiv@quotient+1,w
 14711  04B6  00A4               	movwf	?___awdiv+1
 14712  04B7  082A               	movf	___awdiv@quotient,w
 14713  04B8  00A3               	movwf	?___awdiv
 14714  04B9                     l2029:	
 14715  04B9  0008               	return
 14716  04BA                     __end_of___awdiv:	
 14717                           
 14718                           	psect	text30
 14719  06BE                     __ptext30:	
 14720 ;; *************** function _checkDebounceSW2 *****************
 14721 ;; Defined at:
 14722 ;;		line 676 in file "main.c"
 14723 ;; Parameters:    Size  Location     Type
 14724 ;;		None
 14725 ;; Auto vars:     Size  Location     Type
 14726 ;;		None
 14727 ;; Return value:  Size  Location     Type
 14728 ;;                  1    wreg      unsigned char 
 14729 ;; Registers used:
 14730 ;;		wreg, status,2, status,0
 14731 ;; Tracked objects:
 14732 ;;		On entry : 0/0
 14733 ;;		On exit  : 0/0
 14734 ;;		Unchanged: 0/0
 14735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14738 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14739 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14740 ;;Total ram usage:        7 bytes
 14741 ;; Hardware stack levels used:    1
 14742 ;; Hardware stack levels required when called:    6
 14743 ;; This function calls:
 14744 ;;		Nothing
 14745 ;; This function is called by:
 14746 ;;		_config_routine
 14747 ;;		_selectSubfield
 14748 ;;		_increment_subfield
 14749 ;; This function uses a non-reentrant model
 14750 ;;
 14751                           
 14752                           
 14753                           ;psect for function _checkDebounceSW2
 14754  06BE                     _checkDebounceSW2:	
 14755  06BE                     l6502:	
 14756                           ;incstack = 0
 14757                           ; Regs used in _checkDebounceSW2: [wreg+status,2+status,0]
 14758                           
 14759                           
 14760                           ;main.c: 679:     if(clkms - last_ms2 < 0){
 14761  06BE  087D               	movf	_clkms,w	;volatile
 14762  06BF  0020               	movlb	0	; select bank0
 14763  06C0  00A3               	movwf	??_checkDebounceSW2
 14764  06C1  01A4               	clrf	??_checkDebounceSW2+1
 14765  06C2  0824               	movf	??_checkDebounceSW2+1,w
 14766  06C3  00A6               	movwf	??_checkDebounceSW2+3
 14767  06C4  0858               	movf	_last_ms2,w
 14768  06C5  0223               	subwf	??_checkDebounceSW2,w
 14769  06C6  00A5               	movwf	??_checkDebounceSW2+2
 14770  06C7  1C03               	skipc
 14771  06C8  03A6               	decf	??_checkDebounceSW2+3,f
 14772  06C9  1FA6               	btfss	??_checkDebounceSW2+3,7
 14773  06CA  2ECC               	goto	u3691
 14774  06CB  2ECD               	goto	u3690
 14775  06CC                     u3691:	
 14776  06CC  2EF1               	goto	l6510
 14777  06CD                     u3690:	
 14778  06CD                     l6504:	
 14779                           
 14780                           ;main.c: 681:         if ((200 - last_ms2)+ clkms > 25 ){
 14781  06CD  087D               	movf	_clkms,w	;volatile
 14782  06CE  00A3               	movwf	??_checkDebounceSW2
 14783  06CF  01A4               	clrf	??_checkDebounceSW2+1
 14784  06D0  0824               	movf	??_checkDebounceSW2+1,w
 14785  06D1  00A6               	movwf	??_checkDebounceSW2+3
 14786  06D2  0858               	movf	_last_ms2,w
 14787  06D3  0223               	subwf	??_checkDebounceSW2,w
 14788  06D4  00A5               	movwf	??_checkDebounceSW2+2
 14789  06D5  1C03               	skipc
 14790  06D6  03A6               	decf	??_checkDebounceSW2+3,f
 14791  06D7  0825               	movf	??_checkDebounceSW2+2,w
 14792  06D8  3EC8               	addlw	200
 14793  06D9  00A7               	movwf	??_checkDebounceSW2+4
 14794  06DA  3000               	movlw	0
 14795  06DB  3D26               	addwfc	??_checkDebounceSW2+3,w
 14796  06DC  00A8               	movwf	??_checkDebounceSW2+5
 14797  06DD  0828               	movf	??_checkDebounceSW2+5,w
 14798  06DE  3A80               	xorlw	128
 14799  06DF  00A9               	movwf	??_checkDebounceSW2+6
 14800  06E0  3080               	movlw	128
 14801  06E1  0229               	subwf	??_checkDebounceSW2+6,w
 14802  06E2  1D03               	skipz
 14803  06E3  2EE6               	goto	u3705
 14804  06E4  301A               	movlw	26
 14805  06E5  0227               	subwf	??_checkDebounceSW2+4,w
 14806  06E6                     u3705:	
 14807  06E6  1C03               	skipc
 14808  06E7  2EE9               	goto	u3701
 14809  06E8  2EEA               	goto	u3700
 14810  06E9                     u3701:	
 14811  06E9  2EF1               	goto	l6510
 14812  06EA                     u3700:	
 14813  06EA                     l6506:	
 14814                           
 14815                           ;main.c: 682:             last_ms2 = clkms;
 14816  06EA  087D               	movf	_clkms,w	;volatile
 14817  06EB  0020               	movlb	0	; select bank0
 14818  06EC  00A3               	movwf	??_checkDebounceSW2
 14819  06ED  0823               	movf	??_checkDebounceSW2,w
 14820  06EE  00D8               	movwf	_last_ms2
 14821                           
 14822                           ;main.c: 683:             return 1;
 14823  06EF  3001               	movlw	1
 14824  06F0  2F0A               	goto	l348
 14825  06F1                     l6510:	
 14826                           
 14827                           ;main.c: 687:     if(clkms - last_ms2 < 25){
 14828  06F1  087D               	movf	_clkms,w	;volatile
 14829  06F2  0020               	movlb	0	; select bank0
 14830  06F3  00A3               	movwf	??_checkDebounceSW2
 14831  06F4  01A4               	clrf	??_checkDebounceSW2+1
 14832  06F5  0824               	movf	??_checkDebounceSW2+1,w
 14833  06F6  00A6               	movwf	??_checkDebounceSW2+3
 14834  06F7  0858               	movf	_last_ms2,w
 14835  06F8  0223               	subwf	??_checkDebounceSW2,w
 14836  06F9  00A5               	movwf	??_checkDebounceSW2+2
 14837  06FA  1C03               	skipc
 14838  06FB  03A6               	decf	??_checkDebounceSW2+3,f
 14839  06FC  0826               	movf	??_checkDebounceSW2+3,w
 14840  06FD  3A80               	xorlw	128
 14841  06FE  00A7               	movwf	??_checkDebounceSW2+4
 14842  06FF  3080               	movlw	128
 14843  0700  0227               	subwf	??_checkDebounceSW2+4,w
 14844  0701  1D03               	skipz
 14845  0702  2F05               	goto	u3715
 14846  0703  3019               	movlw	25
 14847  0704  0225               	subwf	??_checkDebounceSW2+2,w
 14848  0705                     u3715:	
 14849  0705  1803               	skipnc
 14850  0706  2F08               	goto	u3711
 14851  0707  2F09               	goto	u3710
 14852  0708                     u3711:	
 14853  0708  2EEA               	goto	l6506
 14854  0709                     u3710:	
 14855  0709                     l6512:	
 14856                           
 14857                           ;main.c: 688:         return 0;
 14858  0709  3000               	movlw	0
 14859  070A                     l348:	
 14860  070A  0008               	return
 14861  070B                     __end_of_checkDebounceSW2:	
 14862                           
 14863                           	psect	text31
 14864  0515                     __ptext31:	
 14865 ;; *************** function _checkDebounceSW1 *****************
 14866 ;; Defined at:
 14867 ;;		line 647 in file "main.c"
 14868 ;; Parameters:    Size  Location     Type
 14869 ;;		None
 14870 ;; Auto vars:     Size  Location     Type
 14871 ;;		None
 14872 ;; Return value:  Size  Location     Type
 14873 ;;                  1    wreg      unsigned char 
 14874 ;; Registers used:
 14875 ;;		wreg, status,2, status,0
 14876 ;; Tracked objects:
 14877 ;;		On entry : 0/0
 14878 ;;		On exit  : 0/0
 14879 ;;		Unchanged: 0/0
 14880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14883 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14884 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14885 ;;Total ram usage:        7 bytes
 14886 ;; Hardware stack levels used:    1
 14887 ;; Hardware stack levels required when called:    6
 14888 ;; This function calls:
 14889 ;;		Nothing
 14890 ;; This function is called by:
 14891 ;;		_config_routine
 14892 ;;		_selectSubfield
 14893 ;;		_increment_subfield
 14894 ;; This function uses a non-reentrant model
 14895 ;;
 14896                           
 14897                           
 14898                           ;psect for function _checkDebounceSW1
 14899  0515                     _checkDebounceSW1:	
 14900  0515                     l6454:	
 14901                           ;incstack = 0
 14902                           ; Regs used in _checkDebounceSW1: [wreg+status,2+status,0]
 14903                           
 14904                           
 14905                           ;main.c: 648:     PIE4bits.TMR1IE = 0;
 14906  0515  002E               	movlb	14	; select bank14
 14907  0516  101A               	bcf	26,0	;volatile
 14908  0517                     l6456:	
 14909                           
 14910                           ;main.c: 650:     if(clkms - last_ms < 0){
 14911  0517  087D               	movf	_clkms,w	;volatile
 14912  0518  0020               	movlb	0	; select bank0
 14913  0519  00A3               	movwf	??_checkDebounceSW1
 14914  051A  01A4               	clrf	??_checkDebounceSW1+1
 14915  051B  0824               	movf	??_checkDebounceSW1+1,w
 14916  051C  00A6               	movwf	??_checkDebounceSW1+3
 14917  051D  0859               	movf	_last_ms,w
 14918  051E  0223               	subwf	??_checkDebounceSW1,w
 14919  051F  00A5               	movwf	??_checkDebounceSW1+2
 14920  0520  1C03               	skipc
 14921  0521  03A6               	decf	??_checkDebounceSW1+3,f
 14922  0522  1FA6               	btfss	??_checkDebounceSW1+3,7
 14923  0523  2D25               	goto	u3661
 14924  0524  2D26               	goto	u3660
 14925  0525                     u3661:	
 14926  0525  2D4C               	goto	l6466
 14927  0526                     u3660:	
 14928  0526                     l6458:	
 14929                           
 14930                           ;main.c: 652:         if ((200 - last_ms)+ clkms > 25 ){
 14931  0526  087D               	movf	_clkms,w	;volatile
 14932  0527  00A3               	movwf	??_checkDebounceSW1
 14933  0528  01A4               	clrf	??_checkDebounceSW1+1
 14934  0529  0824               	movf	??_checkDebounceSW1+1,w
 14935  052A  00A6               	movwf	??_checkDebounceSW1+3
 14936  052B  0859               	movf	_last_ms,w
 14937  052C  0223               	subwf	??_checkDebounceSW1,w
 14938  052D  00A5               	movwf	??_checkDebounceSW1+2
 14939  052E  1C03               	skipc
 14940  052F  03A6               	decf	??_checkDebounceSW1+3,f
 14941  0530  0825               	movf	??_checkDebounceSW1+2,w
 14942  0531  3EC8               	addlw	200
 14943  0532  00A7               	movwf	??_checkDebounceSW1+4
 14944  0533  3000               	movlw	0
 14945  0534  3D26               	addwfc	??_checkDebounceSW1+3,w
 14946  0535  00A8               	movwf	??_checkDebounceSW1+5
 14947  0536  0828               	movf	??_checkDebounceSW1+5,w
 14948  0537  3A80               	xorlw	128
 14949  0538  00A9               	movwf	??_checkDebounceSW1+6
 14950  0539  3080               	movlw	128
 14951  053A  0229               	subwf	??_checkDebounceSW1+6,w
 14952  053B  1D03               	skipz
 14953  053C  2D3F               	goto	u3675
 14954  053D  301A               	movlw	26
 14955  053E  0227               	subwf	??_checkDebounceSW1+4,w
 14956  053F                     u3675:	
 14957  053F  1C03               	skipc
 14958  0540  2D42               	goto	u3671
 14959  0541  2D43               	goto	u3670
 14960  0542                     u3671:	
 14961  0542  2D4C               	goto	l6466
 14962  0543                     u3670:	
 14963  0543                     l6460:	
 14964                           
 14965                           ;main.c: 653:             last_ms = clkms;
 14966  0543  087D               	movf	_clkms,w	;volatile
 14967  0544  0020               	movlb	0	; select bank0
 14968  0545  00A3               	movwf	??_checkDebounceSW1
 14969  0546  0823               	movf	??_checkDebounceSW1,w
 14970  0547  00D9               	movwf	_last_ms
 14971  0548                     l6462:	
 14972                           
 14973                           ;main.c: 654:             PIE4bits.TMR1IE = 1;
 14974  0548  002E               	movlb	14	; select bank14
 14975  0549  141A               	bsf	26,0	;volatile
 14976                           
 14977                           ;main.c: 655:             return 1;
 14978  054A  3001               	movlw	1
 14979  054B  2D6E               	goto	l341
 14980  054C                     l6466:	
 14981                           
 14982                           ;main.c: 659:     if(clkms - last_ms < 25){
 14983  054C  087D               	movf	_clkms,w	;volatile
 14984  054D  0020               	movlb	0	; select bank0
 14985  054E  00A3               	movwf	??_checkDebounceSW1
 14986  054F  01A4               	clrf	??_checkDebounceSW1+1
 14987  0550  0824               	movf	??_checkDebounceSW1+1,w
 14988  0551  00A6               	movwf	??_checkDebounceSW1+3
 14989  0552  0859               	movf	_last_ms,w
 14990  0553  0223               	subwf	??_checkDebounceSW1,w
 14991  0554  00A5               	movwf	??_checkDebounceSW1+2
 14992  0555  1C03               	skipc
 14993  0556  03A6               	decf	??_checkDebounceSW1+3,f
 14994  0557  0826               	movf	??_checkDebounceSW1+3,w
 14995  0558  3A80               	xorlw	128
 14996  0559  00A7               	movwf	??_checkDebounceSW1+4
 14997  055A  3080               	movlw	128
 14998  055B  0227               	subwf	??_checkDebounceSW1+4,w
 14999  055C  1D03               	skipz
 15000  055D  2D60               	goto	u3685
 15001  055E  3019               	movlw	25
 15002  055F  0225               	subwf	??_checkDebounceSW1+2,w
 15003  0560                     u3685:	
 15004  0560  1803               	skipnc
 15005  0561  2D63               	goto	u3681
 15006  0562  2D64               	goto	u3680
 15007  0563                     u3681:	
 15008  0563  2D66               	goto	l6474
 15009  0564                     u3680:	
 15010  0564                     l6468:	
 15011                           
 15012                           ;main.c: 660:         return 0;
 15013  0564  3000               	movlw	0
 15014  0565  2D6E               	goto	l341
 15015  0566                     l6474:	
 15016                           
 15017                           ;main.c: 663:         last_ms = clkms;
 15018  0566  087D               	movf	_clkms,w	;volatile
 15019  0567  0020               	movlb	0	; select bank0
 15020  0568  00A3               	movwf	??_checkDebounceSW1
 15021  0569  0823               	movf	??_checkDebounceSW1,w
 15022  056A  00D9               	movwf	_last_ms
 15023  056B                     l6476:	
 15024                           
 15025                           ;main.c: 664:         PIE4bits.TMR1IE = 1;
 15026  056B  002E               	movlb	14	; select bank14
 15027  056C  141A               	bsf	26,0	;volatile
 15028                           
 15029                           ;main.c: 665:         return 1;
 15030  056D  3001               	movlw	1
 15031  056E                     l341:	
 15032  056E  0008               	return
 15033  056F                     __end_of_checkDebounceSW1:	
 15034                           
 15035                           	psect	text32
 15036  0318                     __ptext32:	
 15037 ;; *************** function _getSubfieldInfo *****************
 15038 ;; Defined at:
 15039 ;;		line 401 in file "main.c"
 15040 ;; Parameters:    Size  Location     Type
 15041 ;;		None
 15042 ;; Auto vars:     Size  Location     Type
 15043 ;;		None
 15044 ;; Return value:  Size  Location     Type
 15045 ;;                  1    wreg      void 
 15046 ;; Registers used:
 15047 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 15048 ;; Tracked objects:
 15049 ;;		On entry : 0/0
 15050 ;;		On exit  : 0/0
 15051 ;;		Unchanged: 0/0
 15052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15057 ;;Total ram usage:        0 bytes
 15058 ;; Hardware stack levels used:    1
 15059 ;; Hardware stack levels required when called:    6
 15060 ;; This function calls:
 15061 ;;		Nothing
 15062 ;; This function is called by:
 15063 ;;		_selectSubfield
 15064 ;; This function uses a non-reentrant model
 15065 ;;
 15066                           
 15067                           
 15068                           ;psect for function _getSubfieldInfo
 15069  0318                     _getSubfieldInfo:	
 15070  0318                     l6644:	
 15071                           ;incstack = 0
 15072                           ; Regs used in _getSubfieldInfo: [wreg-fsr0h+status,2+status,0]
 15073                           
 15074                           
 15075                           ;main.c: 402:     switch(mode_field_subfield[0]){
 15076  0318  2B81               	goto	l6672
 15077  0319                     l6646:	
 15078                           
 15079                           ;main.c: 406:                     subfield_info.limit = (unsigned char(*)(void))2;
 15080  0319  3002               	movlw	2
 15081  031A  00C1               	movwf	_subfield_info
 15082  031B  3000               	movlw	0
 15083  031C  00C2               	movwf	_subfield_info+1
 15084                           
 15085                           ;main.c: 407:                     subfield_info.reconstruct_subfield = &recHour;
 15086  031D  30F7               	movlw	low _recHour
 15087  031E  00C3               	movwf	low ((_subfield_info| 0+2))
 15088  031F  300E               	movlw	high _recHour
 15089  0320  00C4               	movwf	(low ((_subfield_info| 0+2))+1)
 15090                           
 15091                           ;main.c: 409:                 break;
 15092  0321  2B95               	goto	l275
 15093  0322                     l6648:	
 15094                           
 15095                           ;main.c: 411:                     subfield_info.limit = &limitHoursUnits;
 15096  0322  3000               	movlw	0
 15097  0323  00C1               	movwf	_subfield_info
 15098  0324  3000               	movlw	0
 15099  0325  00C2               	movwf	_subfield_info+1
 15100                           
 15101                           ;main.c: 412:                     subfield_info.reconstruct_subfield = &recHour;
 15102  0326  30F7               	movlw	low _recHour
 15103  0327  00C3               	movwf	low ((_subfield_info| 0+2))
 15104  0328  300E               	movlw	high _recHour
 15105  0329  00C4               	movwf	(low ((_subfield_info| 0+2))+1)
 15106                           
 15107                           ;main.c: 413:                 break;
 15108  032A  2B95               	goto	l275
 15109  032B                     l6650:	
 15110                           
 15111                           ;main.c: 415:                     subfield_info.limit = (unsigned char(*)(void))5;
 15112  032B  3005               	movlw	5
 15113  032C  00C1               	movwf	_subfield_info
 15114  032D  3000               	movlw	0
 15115  032E  00C2               	movwf	_subfield_info+1
 15116                           
 15117                           ;main.c: 416:                     subfield_info.reconstruct_subfield = &recMinutes;
 15118  032F  3028               	movlw	low _recMinutes
 15119  0330  00C3               	movwf	low ((_subfield_info| 0+2))
 15120  0331  300F               	movlw	high _recMinutes
 15121  0332  00C4               	movwf	(low ((_subfield_info| 0+2))+1)
 15122                           
 15123                           ;main.c: 417:                 break;
 15124  0333  2B95               	goto	l275
 15125  0334                     l6652:	
 15126                           
 15127                           ;main.c: 419:                     subfield_info.limit = (unsigned char(*)(void))9;
 15128  0334  3009               	movlw	9
 15129  0335  00C1               	movwf	_subfield_info
 15130  0336  3000               	movlw	0
 15131  0337  00C2               	movwf	_subfield_info+1
 15132                           
 15133                           ;main.c: 420:                     subfield_info.reconstruct_subfield = &recMinutes;
 15134  0338  3028               	movlw	low _recMinutes
 15135  0339  00C3               	movwf	low ((_subfield_info| 0+2))
 15136  033A  300F               	movlw	high _recMinutes
 15137  033B  00C4               	movwf	(low ((_subfield_info| 0+2))+1)
 15138                           
 15139                           ;main.c: 421:                 break;
 15140  033C  2B95               	goto	l275
 15141  033D                     l6656:	
 15142                           
 15143                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15144                           ; Switch size 1, requested type "simple"
 15145                           ; Number of cases is 1, Range of values is 0 to 0
 15146                           ; switch strategies available:
 15147                           ; Name         Instructions Cycles
 15148                           ; simple_byte            4     3 (average)
 15149                           ; direct_byte            8     6 (fixed)
 15150                           ; jumptable            260     6 (fixed)
 15151                           ;	Chosen strategy is simple_byte
 15152  033D  0862               	movf	_mode_field_subfield+3,w
 15153  033E  3A00               	xorlw	0	; case 0
 15154  033F  1903               	skipnz
 15155  0340  2B42               	goto	l7656
 15156  0341  2B95               	goto	l275
 15157  0342                     l7656:	
 15158                           
 15159                           ; Switch size 1, requested type "simple"
 15160                           ; Number of cases is 4, Range of values is 1 to 4
 15161                           ; switch strategies available:
 15162                           ; Name         Instructions Cycles
 15163                           ; simple_byte           13     7 (average)
 15164                           ; direct_byte           17     9 (fixed)
 15165                           ; jumptable            263     9 (fixed)
 15166                           ;	Chosen strategy is simple_byte
 15167  0342  0861               	movf	_mode_field_subfield+2,w
 15168  0343  3A01               	xorlw	1	; case 1
 15169  0344  1903               	skipnz
 15170  0345  2B19               	goto	l6646
 15171  0346  3A03               	xorlw	3	; case 2
 15172  0347  1903               	skipnz
 15173  0348  2B22               	goto	l6648
 15174  0349  3A01               	xorlw	1	; case 3
 15175  034A  1903               	skipnz
 15176  034B  2B2B               	goto	l6650
 15177  034C  3A07               	xorlw	7	; case 4
 15178  034D  1903               	skipnz
 15179  034E  2B34               	goto	l6652
 15180  034F  2B95               	goto	l275
 15181  0350                     l6658:	
 15182                           
 15183                           ;main.c: 426:             subfield_info.limit = (unsigned char(*)(void))1;
 15184  0350  3001               	movlw	1
 15185  0351  00C1               	movwf	_subfield_info
 15186  0352  3000               	movlw	0
 15187  0353  00C2               	movwf	_subfield_info+1
 15188                           
 15189                           ;main.c: 427:             subfield_info.reconstruct_subfield = &recAlarm;
 15190  0354  3021               	movlw	low _recAlarm
 15191  0355  00C3               	movwf	low ((_subfield_info| 0+2))
 15192  0356  300A               	movlw	high _recAlarm
 15193  0357  00C4               	movwf	(low ((_subfield_info| 0+2))+1)
 15194                           
 15195                           ;main.c: 428:         break;
 15196  0358  2B95               	goto	l275
 15197  0359                     l6660:	
 15198                           
 15199                           ;main.c: 433:                     subfield_info.limit = (unsigned char(*)(void))5;
 15200  0359  3005               	movlw	5
 15201  035A  00C1               	movwf	_subfield_info
 15202  035B  3000               	movlw	0
 15203  035C  00C2               	movwf	_subfield_info+1
 15204                           
 15205                           ;main.c: 434:                     subfield_info.reconstruct_subfield = &recTempThresh;
 15206  035D  30C6               	movlw	low _recTempThresh
 15207  035E  00C3               	movwf	low ((_subfield_info| 0+2))
 15208  035F  300E               	movlw	high _recTempThresh
 15209  0360  00C4               	movwf	(low ((_subfield_info| 0+2))+1)
 15210                           
 15211                           ;main.c: 435:                 break;
 15212  0361  2B95               	goto	l275
 15213  0362                     l6662:	
 15214                           
 15215                           ;main.c: 437:                     subfield_info.limit = &limitTempThreshUnits;
 15216  0362  3000               	movlw	0
 15217  0363  00C1               	movwf	_subfield_info
 15218  0364  3000               	movlw	0
 15219  0365  00C2               	movwf	_subfield_info+1
 15220                           
 15221                           ;main.c: 438:                     subfield_info.reconstruct_subfield = &recTempThresh;
 15222  0366  30C6               	movlw	low _recTempThresh
 15223  0367  00C3               	movwf	low ((_subfield_info| 0+2))
 15224  0368  300E               	movlw	high _recTempThresh
 15225  0369  00C4               	movwf	(low ((_subfield_info| 0+2))+1)
 15226                           
 15227                           ;main.c: 439:                 break;
 15228  036A  2B95               	goto	l275
 15229  036B                     l6666:	
 15230                           
 15231                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15232                           ; Switch size 1, requested type "simple"
 15233                           ; Number of cases is 1, Range of values is 0 to 0
 15234                           ; switch strategies available:
 15235                           ; Name         Instructions Cycles
 15236                           ; simple_byte            4     3 (average)
 15237                           ; direct_byte            8     6 (fixed)
 15238                           ; jumptable            260     6 (fixed)
 15239                           ;	Chosen strategy is simple_byte
 15240  036B  0862               	movf	_mode_field_subfield+3,w
 15241  036C  3A00               	xorlw	0	; case 0
 15242  036D  1903               	skipnz
 15243  036E  2B70               	goto	l7658
 15244  036F  2B95               	goto	l275
 15245  0370                     l7658:	
 15246                           
 15247                           ; Switch size 1, requested type "simple"
 15248                           ; Number of cases is 2, Range of values is 1 to 2
 15249                           ; switch strategies available:
 15250                           ; Name         Instructions Cycles
 15251                           ; simple_byte            7     4 (average)
 15252                           ; direct_byte           13     9 (fixed)
 15253                           ; jumptable            263     9 (fixed)
 15254                           ;	Chosen strategy is simple_byte
 15255  0370  0861               	movf	_mode_field_subfield+2,w
 15256  0371  3A01               	xorlw	1	; case 1
 15257  0372  1903               	skipnz
 15258  0373  2B59               	goto	l6660
 15259  0374  3A03               	xorlw	3	; case 2
 15260  0375  1903               	skipnz
 15261  0376  2B62               	goto	l6662
 15262  0377  2B95               	goto	l275
 15263  0378                     l6668:	
 15264                           
 15265                           ;main.c: 444:             subfield_info.limit = (unsigned char(*)(void))3;
 15266  0378  3003               	movlw	3
 15267  0379  00C1               	movwf	_subfield_info
 15268  037A  3000               	movlw	0
 15269  037B  00C2               	movwf	_subfield_info+1
 15270                           
 15271                           ;main.c: 445:             subfield_info.reconstruct_subfield = &recLumThresh;
 15272  037C  3027               	movlw	low _recLumThresh
 15273  037D  00C3               	movwf	low ((_subfield_info| 0+2))
 15274  037E  300A               	movlw	high _recLumThresh
 15275  037F  00C4               	movwf	(low ((_subfield_info| 0+2))+1)
 15276                           
 15277                           ;main.c: 446:         break;
 15278  0380  2B95               	goto	l275
 15279  0381                     l6672:	
 15280                           
 15281                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15282                           ; Switch size 1, requested type "simple"
 15283                           ; Number of cases is 1, Range of values is 0 to 0
 15284                           ; switch strategies available:
 15285                           ; Name         Instructions Cycles
 15286                           ; simple_byte            4     3 (average)
 15287                           ; direct_byte            8     6 (fixed)
 15288                           ; jumptable            260     6 (fixed)
 15289                           ;	Chosen strategy is simple_byte
 15290  0381  0020               	movlb	0	; select bank0
 15291  0382  0860               	movf	_mode_field_subfield+1,w
 15292  0383  3A00               	xorlw	0	; case 0
 15293  0384  1903               	skipnz
 15294  0385  2B87               	goto	l7660
 15295  0386  2B95               	goto	l275
 15296  0387                     l7660:	
 15297                           
 15298                           ; Switch size 1, requested type "simple"
 15299                           ; Number of cases is 4, Range of values is 1 to 4
 15300                           ; switch strategies available:
 15301                           ; Name         Instructions Cycles
 15302                           ; simple_byte           13     7 (average)
 15303                           ; direct_byte           17     9 (fixed)
 15304                           ; jumptable            263     9 (fixed)
 15305                           ;	Chosen strategy is simple_byte
 15306  0387  085F               	movf	_mode_field_subfield,w
 15307  0388  3A01               	xorlw	1	; case 1
 15308  0389  1903               	skipnz
 15309  038A  2B3D               	goto	l6656
 15310  038B  3A03               	xorlw	3	; case 2
 15311  038C  1903               	skipnz
 15312  038D  2B50               	goto	l6658
 15313  038E  3A01               	xorlw	1	; case 3
 15314  038F  1903               	skipnz
 15315  0390  2B6B               	goto	l6666
 15316  0391  3A07               	xorlw	7	; case 4
 15317  0392  1903               	skipnz
 15318  0393  2B78               	goto	l6668
 15319  0394  2B95               	goto	l275
 15320  0395                     l275:	
 15321  0395  0008               	return
 15322  0396                     __end_of_getSubfieldInfo:	
 15323                           
 15324                           	psect	text33
 15325  04BA                     __ptext33:	
 15326 ;; *************** function _all_LED *****************
 15327 ;; Defined at:
 15328 ;;		line 20 in file "leds.c"
 15329 ;; Parameters:    Size  Location     Type
 15330 ;;		None
 15331 ;; Auto vars:     Size  Location     Type
 15332 ;;		None
 15333 ;; Return value:  Size  Location     Type
 15334 ;;                  1    wreg      void 
 15335 ;; Registers used:
 15336 ;;		wreg, status,2, status,0, pclath, cstack
 15337 ;; Tracked objects:
 15338 ;;		On entry : 0/0
 15339 ;;		On exit  : 0/0
 15340 ;;		Unchanged: 0/0
 15341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15344 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15345 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15346 ;;Total ram usage:        1 bytes
 15347 ;; Hardware stack levels used:    1
 15348 ;; Hardware stack levels required when called:    7
 15349 ;; This function calls:
 15350 ;;		_PWM6_LoadDutyValue
 15351 ;; This function is called by:
 15352 ;;		_config_routine
 15353 ;;		_selectSubfield
 15354 ;; This function uses a non-reentrant model
 15355 ;;
 15356                           
 15357                           
 15358                           ;psect for function _all_LED
 15359  04BA                     _all_LED:	
 15360  04BA                     l1666:	
 15361                           ;incstack = 0
 15362                           ; Regs used in _all_LED: [wreg+status,2+status,0+pclath+cstack]
 15363                           ;leds.c: 22:     do { LATAbits.LATA7 = 1; } while(0);
 15364                           
 15365  04BA  0020               	movlb	0	; select bank0
 15366  04BB  1796               	bsf	22,7	;volatile
 15367  04BC                     l6600:	
 15368                           
 15369                           ;leds.c: 23:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15370  04BC  3021               	movlw	33
 15371  04BD  0020               	movlb	0	; select bank0
 15372  04BE  00AD               	movwf	??_all_LED
 15373  04BF  3076               	movlw	118
 15374  04C0                     u4477:	
 15375  04C0  0B89               	decfsz	9,f
 15376  04C1  2CC0               	goto	u4477
 15377  04C2  0BAD               	decfsz	??_all_LED,f
 15378  04C3  2CC0               	goto	u4477
 15379  04C4  0000               	nop
 15380  04C5                     l6602:	
 15381  04C5  0020               	movlb	0	; select bank0
 15382  04C6  1396               	bcf	22,7	;volatile
 15383  04C7                     l1669:	
 15384                           
 15385                           ;leds.c: 25:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15386  04C7  3021               	movlw	33
 15387  04C8  0020               	movlb	0	; select bank0
 15388  04C9  00AD               	movwf	??_all_LED
 15389  04CA  3076               	movlw	118
 15390  04CB                     u4487:	
 15391  04CB  0B89               	decfsz	9,f
 15392  04CC  2CCB               	goto	u4487
 15393  04CD  0BAD               	decfsz	??_all_LED,f
 15394  04CE  2CCB               	goto	u4487
 15395  04CF  0000               	nop
 15396  04D0                     l6604:	
 15397                           
 15398                           ;leds.c: 26:     PWM6_LoadDutyValue(1023);
 15399  04D0  30FF               	movlw	255
 15400  04D1  0020               	movlb	0	; select bank0
 15401  04D2  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 15402  04D3  3003               	movlw	3
 15403  04D4  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 15404  04D5  318C  2488  3184   	fcall	_PWM6_LoadDutyValue
 15405  04D8                     l6606:	
 15406                           
 15407                           ;leds.c: 27:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15408  04D8  3021               	movlw	33
 15409  04D9  0020               	movlb	0	; select bank0
 15410  04DA  00AD               	movwf	??_all_LED
 15411  04DB  3076               	movlw	118
 15412  04DC                     u4497:	
 15413  04DC  0B89               	decfsz	9,f
 15414  04DD  2CDC               	goto	u4497
 15415  04DE  0BAD               	decfsz	??_all_LED,f
 15416  04DF  2CDC               	goto	u4497
 15417  04E0  0000               	nop
 15418                           
 15419                           ;leds.c: 28:     PWM6_LoadDutyValue(0);
 15420  04E1  3000               	movlw	0
 15421  04E2  0020               	movlb	0	; select bank0
 15422  04E3  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 15423  04E4  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 15424  04E5  318C  2488  3184   	fcall	_PWM6_LoadDutyValue
 15425  04E8                     l6608:	
 15426                           
 15427                           ;leds.c: 29:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15428  04E8  3021               	movlw	33
 15429  04E9  0020               	movlb	0	; select bank0
 15430  04EA  00AD               	movwf	??_all_LED
 15431  04EB  3076               	movlw	118
 15432  04EC                     u4507:	
 15433  04EC  0B89               	decfsz	9,f
 15434  04ED  2CEC               	goto	u4507
 15435  04EE  0BAD               	decfsz	??_all_LED,f
 15436  04EF  2CEC               	goto	u4507
 15437  04F0  0000               	nop
 15438  04F1                     l6610:	
 15439  04F1  0020               	movlb	0	; select bank0
 15440  04F2  1696               	bsf	22,5	;volatile
 15441  04F3                     l6612:	
 15442                           
 15443                           ;leds.c: 31:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15444  04F3  3021               	movlw	33
 15445  04F4  0020               	movlb	0	; select bank0
 15446  04F5  00AD               	movwf	??_all_LED
 15447  04F6  3076               	movlw	118
 15448  04F7                     u4517:	
 15449  04F7  0B89               	decfsz	9,f
 15450  04F8  2CF7               	goto	u4517
 15451  04F9  0BAD               	decfsz	??_all_LED,f
 15452  04FA  2CF7               	goto	u4517
 15453  04FB  0000               	nop
 15454  04FC                     l6614:	
 15455  04FC  0020               	movlb	0	; select bank0
 15456  04FD  1296               	bcf	22,5	;volatile
 15457  04FE                     l6616:	
 15458                           
 15459                           ;leds.c: 33:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15460  04FE  3021               	movlw	33
 15461  04FF  0020               	movlb	0	; select bank0
 15462  0500  00AD               	movwf	??_all_LED
 15463  0501  3076               	movlw	118
 15464  0502                     u4527:	
 15465  0502  0B89               	decfsz	9,f
 15466  0503  2D02               	goto	u4527
 15467  0504  0BAD               	decfsz	??_all_LED,f
 15468  0505  2D02               	goto	u4527
 15469  0506  0000               	nop
 15470  0507                     l6618:	
 15471  0507  0020               	movlb	0	; select bank0
 15472  0508  1616               	bsf	22,4	;volatile
 15473  0509                     l6620:	
 15474                           
 15475                           ;leds.c: 35:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15476  0509  3021               	movlw	33
 15477  050A  0020               	movlb	0	; select bank0
 15478  050B  00AD               	movwf	??_all_LED
 15479  050C  3076               	movlw	118
 15480  050D                     u4537:	
 15481  050D  0B89               	decfsz	9,f
 15482  050E  2D0D               	goto	u4537
 15483  050F  0BAD               	decfsz	??_all_LED,f
 15484  0510  2D0D               	goto	u4537
 15485  0511  0000               	nop
 15486  0512                     l6622:	
 15487  0512  0020               	movlb	0	; select bank0
 15488  0513  1216               	bcf	22,4	;volatile
 15489  0514                     l1678:	
 15490  0514  0008               	return
 15491  0515                     __end_of_all_LED:	
 15492                           
 15493                           	psect	text34
 15494  0D12                     __ptext34:	
 15495 ;; *************** function _mode_select_LED *****************
 15496 ;; Defined at:
 15497 ;;		line 98 in file "leds.c"
 15498 ;; Parameters:    Size  Location     Type
 15499 ;;		None
 15500 ;; Auto vars:     Size  Location     Type
 15501 ;;		None
 15502 ;; Return value:  Size  Location     Type
 15503 ;;                  1    wreg      void 
 15504 ;; Registers used:
 15505 ;;		wreg, status,2, status,0, pclath, cstack
 15506 ;; Tracked objects:
 15507 ;;		On entry : 0/0
 15508 ;;		On exit  : 0/0
 15509 ;;		Unchanged: 0/0
 15510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15513 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15514 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15515 ;;Total ram usage:        1 bytes
 15516 ;; Hardware stack levels used:    1
 15517 ;; Hardware stack levels required when called:    7
 15518 ;; This function calls:
 15519 ;;		_PWM6_LoadDutyValue
 15520 ;; This function is called by:
 15521 ;;		_config_routine
 15522 ;; This function uses a non-reentrant model
 15523 ;;
 15524                           
 15525                           
 15526                           ;psect for function _mode_select_LED
 15527  0D12                     _mode_select_LED:	
 15528  0D12                     l6740:	
 15529                           ;incstack = 0
 15530                           ; Regs used in _mode_select_LED: [wreg+status,2+status,0+pclath+cstack]
 15531                           
 15532                           
 15533                           ;leds.c: 101:     PWM6_LoadDutyValue(1023);
 15534  0D12  30FF               	movlw	255
 15535  0D13  0020               	movlb	0	; select bank0
 15536  0D14  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 15537  0D15  3003               	movlw	3
 15538  0D16  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 15539  0D17  318C  2488  318D   	fcall	_PWM6_LoadDutyValue
 15540  0D1A                     l6742:	
 15541  0D1A  0020               	movlb	0	; select bank0
 15542  0D1B  1616               	bsf	22,4	;volatile
 15543  0D1C                     l6744:	
 15544                           
 15545                           ;leds.c: 103:     _delay((unsigned long)((500)*(1000000/4000.0)));
 15546  0D1C  30A3               	movlw	163
 15547  0D1D  0020               	movlb	0	; select bank0
 15548  0D1E  00AD               	movwf	??_mode_select_LED
 15549  0D1F  3055               	movlw	85
 15550  0D20                     u4547:	
 15551  0D20  0B89               	decfsz	9,f
 15552  0D21  2D20               	goto	u4547
 15553  0D22  0BAD               	decfsz	??_mode_select_LED,f
 15554  0D23  2D20               	goto	u4547
 15555  0D24                     l6746:	
 15556  0D24  0020               	movlb	0	; select bank0
 15557  0D25  1696               	bsf	22,5	;volatile
 15558  0D26                     l6748:	
 15559                           
 15560                           ;leds.c: 105:     _delay((unsigned long)((500)*(1000000/4000.0)));
 15561  0D26  30A3               	movlw	163
 15562  0D27  0020               	movlb	0	; select bank0
 15563  0D28  00AD               	movwf	??_mode_select_LED
 15564  0D29  3055               	movlw	85
 15565  0D2A                     u4557:	
 15566  0D2A  0B89               	decfsz	9,f
 15567  0D2B  2D2A               	goto	u4557
 15568  0D2C  0BAD               	decfsz	??_mode_select_LED,f
 15569  0D2D  2D2A               	goto	u4557
 15570  0D2E                     l6750:	
 15571  0D2E  0020               	movlb	0	; select bank0
 15572  0D2F  1216               	bcf	22,4	;volatile
 15573  0D30                     l6752:	
 15574  0D30  1296               	bcf	22,5	;volatile
 15575  0D31                     l1710:	
 15576  0D31  0008               	return
 15577  0D32                     __end_of_mode_select_LED:	
 15578                           
 15579                           	psect	text35
 15580  0C88                     __ptext35:	
 15581 ;; *************** function _PWM6_LoadDutyValue *****************
 15582 ;; Defined at:
 15583 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 15584 ;; Parameters:    Size  Location     Type
 15585 ;;  dutyValue       2    9[BANK0 ] unsigned short 
 15586 ;; Auto vars:     Size  Location     Type
 15587 ;;		None
 15588 ;; Return value:  Size  Location     Type
 15589 ;;                  1    wreg      void 
 15590 ;; Registers used:
 15591 ;;		wreg, status,2, status,0
 15592 ;; Tracked objects:
 15593 ;;		On entry : 0/0
 15594 ;;		On exit  : 0/0
 15595 ;;		Unchanged: 0/0
 15596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15597 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15599 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15600 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15601 ;;Total ram usage:        4 bytes
 15602 ;; Hardware stack levels used:    1
 15603 ;; Hardware stack levels required when called:    6
 15604 ;; This function calls:
 15605 ;;		Nothing
 15606 ;; This function is called by:
 15607 ;;		_main
 15608 ;;		_increment_subfield
 15609 ;;		_all_LED
 15610 ;;		_mod1_LED
 15611 ;;		_mod2_LED
 15612 ;;		_mod3_LED
 15613 ;;		_mod4_LED
 15614 ;;		_mode_select_LED
 15615 ;;		_representLed
 15616 ;; This function uses a non-reentrant model
 15617 ;;
 15618                           
 15619                           
 15620                           ;psect for function _PWM6_LoadDutyValue
 15621  0C88                     _PWM6_LoadDutyValue:	
 15622  0C88                     l6356:	
 15623                           ;incstack = 0
 15624                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 15625                           
 15626                           
 15627                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 15628  0C88  0020               	movlb	0	; select bank0
 15629  0C89  082A               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 15630  0C8A  00AC               	movwf	??_PWM6_LoadDutyValue+1
 15631  0C8B  0829               	movf	PWM6_LoadDutyValue@dutyValue,w
 15632  0C8C  00AB               	movwf	??_PWM6_LoadDutyValue
 15633  0C8D  36AC               	lsrf	??_PWM6_LoadDutyValue+1,f
 15634  0C8E  0CAB               	rrf	??_PWM6_LoadDutyValue,f
 15635  0C8F  36AC               	lsrf	??_PWM6_LoadDutyValue+1,f
 15636  0C90  0CAB               	rrf	??_PWM6_LoadDutyValue,f
 15637  0C91  082B               	movf	??_PWM6_LoadDutyValue,w
 15638  0C92  0027               	movlb	7	; select bank7
 15639  0C93  008D               	movwf	13	;volatile
 15640                           
 15641                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 15642  0C94  0020               	movlb	0	; select bank0
 15643  0C95  0829               	movf	PWM6_LoadDutyValue@dutyValue,w
 15644  0C96  3903               	andlw	3
 15645  0C97  00AB               	movwf	??_PWM6_LoadDutyValue
 15646  0C98  3005               	movlw	5
 15647  0C99                     u3425:	
 15648  0C99  35AB               	lslf	??_PWM6_LoadDutyValue,f
 15649  0C9A  3EFF               	addlw	-1
 15650  0C9B  1D03               	skipz
 15651  0C9C  2C99               	goto	u3425
 15652  0C9D  352B               	lslf	??_PWM6_LoadDutyValue,w
 15653  0C9E  0027               	movlb	7	; select bank7
 15654  0C9F  008C               	movwf	12	;volatile
 15655  0CA0                     l1214:	
 15656  0CA0  0008               	return
 15657  0CA1                     __end_of_PWM6_LoadDutyValue:	
 15658                           
 15659                           	psect	text36
 15660  09DF                     __ptext36:	
 15661 ;; *************** function _TMR0_StartTimer *****************
 15662 ;; Defined at:
 15663 ;;		line 87 in file "mcc_generated_files/tmr0.c"
 15664 ;; Parameters:    Size  Location     Type
 15665 ;;		None
 15666 ;; Auto vars:     Size  Location     Type
 15667 ;;		None
 15668 ;; Return value:  Size  Location     Type
 15669 ;;                  1    wreg      void 
 15670 ;; Registers used:
 15671 ;;		None
 15672 ;; Tracked objects:
 15673 ;;		On entry : 0/0
 15674 ;;		On exit  : 0/0
 15675 ;;		Unchanged: 0/0
 15676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15681 ;;Total ram usage:        0 bytes
 15682 ;; Hardware stack levels used:    1
 15683 ;; Hardware stack levels required when called:    6
 15684 ;; This function calls:
 15685 ;;		Nothing
 15686 ;; This function is called by:
 15687 ;;		_main
 15688 ;; This function uses a non-reentrant model
 15689 ;;
 15690                           
 15691                           
 15692                           ;psect for function _TMR0_StartTimer
 15693  09DF                     _TMR0_StartTimer:	
 15694  09DF                     l7064:	
 15695                           ;incstack = 0
 15696                           ; Regs used in _TMR0_StartTimer: []
 15697                           
 15698                           
 15699                           ;mcc_generated_files/tmr0.c: 90:     T0CON0bits.T0EN = 1;
 15700  09DF  0020               	movlb	0	; select bank0
 15701  09E0  179E               	bsf	30,7	;volatile
 15702  09E1                     l1114:	
 15703  09E1  0008               	return
 15704  09E2                     __end_of_TMR0_StartTimer:	
 15705                           
 15706                           	psect	text37
 15707  0CBB                     __ptext37:	
 15708 ;; *************** function _SYSTEM_Initialize *****************
 15709 ;; Defined at:
 15710 ;;		line 50 in file "mcc_generated_files/mcc.c"
 15711 ;; Parameters:    Size  Location     Type
 15712 ;;		None
 15713 ;; Auto vars:     Size  Location     Type
 15714 ;;		None
 15715 ;; Return value:  Size  Location     Type
 15716 ;;                  1    wreg      void 
 15717 ;; Registers used:
 15718 ;;		wreg, status,2, status,0, pclath, cstack
 15719 ;; Tracked objects:
 15720 ;;		On entry : 0/0
 15721 ;;		On exit  : 0/0
 15722 ;;		Unchanged: 0/0
 15723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15728 ;;Total ram usage:        0 bytes
 15729 ;; Hardware stack levels used:    1
 15730 ;; Hardware stack levels required when called:    8
 15731 ;; This function calls:
 15732 ;;		_ADCC_Initialize
 15733 ;;		_EXT_INT_Initialize
 15734 ;;		_OSCILLATOR_Initialize
 15735 ;;		_PIN_MANAGER_Initialize
 15736 ;;		_PMD_Initialize
 15737 ;;		_PWM6_Initialize
 15738 ;;		_TMR0_Initialize
 15739 ;;		_TMR1_Initialize
 15740 ;;		_TMR2_Initialize
 15741 ;; This function is called by:
 15742 ;;		_main
 15743 ;; This function uses a non-reentrant model
 15744 ;;
 15745                           
 15746                           
 15747                           ;psect for function _SYSTEM_Initialize
 15748  0CBB                     _SYSTEM_Initialize:	
 15749  0CBB                     l6948:	
 15750                           ;incstack = 0
 15751                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15752                           
 15753                           
 15754                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 15755  0CBB  318A  2267  318C   	fcall	_PMD_Initialize
 15756  0CBE                     l6950:	
 15757                           
 15758                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 15759  0CBE  3187  2755  318C   	fcall	_PIN_MANAGER_Initialize
 15760  0CC1                     l6952:	
 15761                           
 15762                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 15763  0CC1  318A  228A  318C   	fcall	_OSCILLATOR_Initialize
 15764  0CC4                     l6954:	
 15765                           
 15766                           ;mcc_generated_files/mcc.c: 55:     PWM6_Initialize();
 15767  0CC4  318B  2314  318C   	fcall	_PWM6_Initialize
 15768  0CC7                     l6956:	
 15769                           
 15770                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 15771  0CC7  318B  23FC  318C   	fcall	_ADCC_Initialize
 15772  0CCA                     l6958:	
 15773                           
 15774                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
 15775  0CCA  318C  2457  318C   	fcall	_TMR2_Initialize
 15776  0CCD                     l6960:	
 15777                           
 15778                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
 15779  0CCD  318C  24F3  318C   	fcall	_TMR1_Initialize
 15780  0CD0                     l6962:	
 15781                           
 15782                           ;mcc_generated_files/mcc.c: 59:     EXT_INT_Initialize();
 15783  0CD0  318B  2321  318C   	fcall	_EXT_INT_Initialize
 15784  0CD3                     l6964:	
 15785                           
 15786                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
 15787  0CD3  318B  23D1  318C   	fcall	_TMR0_Initialize
 15788  0CD6                     l689:	
 15789  0CD6  0008               	return
 15790  0CD7                     __end_of_SYSTEM_Initialize:	
 15791                           
 15792                           	psect	text38
 15793  0C57                     __ptext38:	
 15794 ;; *************** function _TMR2_Initialize *****************
 15795 ;; Defined at:
 15796 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 15797 ;; Parameters:    Size  Location     Type
 15798 ;;		None
 15799 ;; Auto vars:     Size  Location     Type
 15800 ;;		None
 15801 ;; Return value:  Size  Location     Type
 15802 ;;                  1    wreg      void 
 15803 ;; Registers used:
 15804 ;;		wreg, status,2, status,0, pclath, cstack
 15805 ;; Tracked objects:
 15806 ;;		On entry : 0/0
 15807 ;;		On exit  : 0/0
 15808 ;;		Unchanged: 0/0
 15809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15814 ;;Total ram usage:        0 bytes
 15815 ;; Hardware stack levels used:    1
 15816 ;; Hardware stack levels required when called:    7
 15817 ;; This function calls:
 15818 ;;		_TMR2_SetInterruptHandler
 15819 ;; This function is called by:
 15820 ;;		_SYSTEM_Initialize
 15821 ;; This function uses a non-reentrant model
 15822 ;;
 15823                           
 15824                           
 15825                           ;psect for function _TMR2_Initialize
 15826  0C57                     _TMR2_Initialize:	
 15827  0C57                     l6890:	
 15828                           ;incstack = 0
 15829                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15830                           
 15831                           
 15832                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
 15833  0C57  3001               	movlw	1
 15834  0C58  0025               	movlb	5	; select bank5
 15835  0C59  0090               	movwf	16	;volatile
 15836                           
 15837                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x20;
 15838  0C5A  3020               	movlw	32
 15839  0C5B  008F               	movwf	15	;volatile
 15840  0C5C                     l6892:	
 15841                           
 15842                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
 15843  0C5C  0191               	clrf	17	;volatile
 15844  0C5D                     l6894:	
 15845                           
 15846                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x9B;
 15847  0C5D  309B               	movlw	155
 15848  0C5E  008D               	movwf	13	;volatile
 15849                           
 15850                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
 15851  0C5F  018C               	clrf	12	;volatile
 15852  0C60                     l6896:	
 15853                           
 15854                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
 15855  0C60  002E               	movlb	14	; select bank14
 15856  0C61  1090               	bcf	16,1	;volatile
 15857  0C62                     l6898:	
 15858                           
 15859                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
 15860  0C62  149A               	bsf	26,1	;volatile
 15861  0C63                     l6900:	
 15862                           
 15863                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 15864  0C63  30C2               	movlw	low _TMR2_DefaultInterruptHandler
 15865  0C64  0020               	movlb	0	; select bank0
 15866  0C65  00A3               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 15867  0C66  3009               	movlw	high _TMR2_DefaultInterruptHandler
 15868  0C67  00A4               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 15869  0C68  318A  22A5  318C   	fcall	_TMR2_SetInterruptHandler
 15870  0C6B                     l6902:	
 15871                           
 15872                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xB1;
 15873  0C6B  30B1               	movlw	177
 15874  0C6C  0025               	movlb	5	; select bank5
 15875  0C6D  008E               	movwf	14	;volatile
 15876  0C6E                     l1508:	
 15877  0C6E  0008               	return
 15878  0C6F                     __end_of_TMR2_Initialize:	
 15879                           
 15880                           	psect	text39
 15881  0AA5                     __ptext39:	
 15882 ;; *************** function _TMR2_SetInterruptHandler *****************
 15883 ;; Defined at:
 15884 ;;		line 178 in file "mcc_generated_files/tmr2.c"
 15885 ;; Parameters:    Size  Location     Type
 15886 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 15887 ;;		 -> TMR2_DefaultInterruptHandler(1), handler_clock_ms(1), 
 15888 ;; Auto vars:     Size  Location     Type
 15889 ;;		None
 15890 ;; Return value:  Size  Location     Type
 15891 ;;                  1    wreg      void 
 15892 ;; Registers used:
 15893 ;;		wreg
 15894 ;; Tracked objects:
 15895 ;;		On entry : 0/0
 15896 ;;		On exit  : 0/0
 15897 ;;		Unchanged: 0/0
 15898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15899 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15902 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15903 ;;Total ram usage:        2 bytes
 15904 ;; Hardware stack levels used:    1
 15905 ;; Hardware stack levels required when called:    6
 15906 ;; This function calls:
 15907 ;;		Nothing
 15908 ;; This function is called by:
 15909 ;;		_main
 15910 ;;		_TMR2_Initialize
 15911 ;; This function uses a non-reentrant model
 15912 ;;
 15913                           
 15914                           
 15915                           ;psect for function _TMR2_SetInterruptHandler
 15916  0AA5                     _TMR2_SetInterruptHandler:	
 15917  0AA5                     l6578:	
 15918                           ;incstack = 0
 15919                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 15920                           
 15921                           
 15922                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
 15923  0AA5  0020               	movlb	0	; select bank0
 15924  0AA6  0824               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 15925  0AA7  0021               	movlb	1	; select bank1
 15926  0AA8  00CD               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
 15927  0AA9  0020               	movlb	0	; select bank0
 15928  0AAA  0823               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 15929  0AAB  0021               	movlb	1	; select bank1
 15930  0AAC  00CC               	movwf	_TMR2_InterruptHandler^(0+128)
 15931  0AAD                     l1551:	
 15932  0AAD  0008               	return
 15933  0AAE                     __end_of_TMR2_SetInterruptHandler:	
 15934                           
 15935                           	psect	text40
 15936  0CF3                     __ptext40:	
 15937 ;; *************** function _TMR1_Initialize *****************
 15938 ;; Defined at:
 15939 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 15940 ;; Parameters:    Size  Location     Type
 15941 ;;		None
 15942 ;; Auto vars:     Size  Location     Type
 15943 ;;		None
 15944 ;; Return value:  Size  Location     Type
 15945 ;;                  1    wreg      void 
 15946 ;; Registers used:
 15947 ;;		wreg, status,2, status,0, pclath, cstack
 15948 ;; Tracked objects:
 15949 ;;		On entry : 0/0
 15950 ;;		On exit  : 0/0
 15951 ;;		Unchanged: 0/0
 15952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15957 ;;Total ram usage:        0 bytes
 15958 ;; Hardware stack levels used:    1
 15959 ;; Hardware stack levels required when called:    7
 15960 ;; This function calls:
 15961 ;;		_TMR1_SetInterruptHandler
 15962 ;; This function is called by:
 15963 ;;		_SYSTEM_Initialize
 15964 ;; This function uses a non-reentrant model
 15965 ;;
 15966                           
 15967                           
 15968                           ;psect for function _TMR1_Initialize
 15969  0CF3                     _TMR1_Initialize:	
 15970  0CF3                     l6904:	
 15971                           ;incstack = 0
 15972                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15973                           
 15974                           
 15975                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 15976  0CF3  0024               	movlb	4	; select bank4
 15977  0CF4  018F               	clrf	15	;volatile
 15978                           
 15979                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 15980  0CF5  0190               	clrf	16	;volatile
 15981  0CF6                     l6906:	
 15982                           
 15983                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
 15984  0CF6  3004               	movlw	4
 15985  0CF7  0091               	movwf	17	;volatile
 15986  0CF8                     l6908:	
 15987                           
 15988                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xE1;
 15989  0CF8  30E1               	movlw	225
 15990  0CF9  008D               	movwf	13	;volatile
 15991  0CFA                     l6910:	
 15992                           
 15993                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xBA;
 15994  0CFA  30BA               	movlw	186
 15995  0CFB  008C               	movwf	12	;volatile
 15996  0CFC                     l6912:	
 15997                           
 15998                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 15999  0CFC  080D               	movf	13,w	;volatile
 16000  0CFD  0020               	movlb	0	; select bank0
 16001  0CFE  00E9               	movwf	_timer1ReloadVal+1	;volatile
 16002  0CFF  0024               	movlb	4	; select bank4
 16003  0D00  080C               	movf	12,w	;volatile
 16004  0D01  0020               	movlb	0	; select bank0
 16005  0D02  00E8               	movwf	_timer1ReloadVal	;volatile
 16006  0D03                     l6914:	
 16007                           
 16008                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
 16009  0D03  002E               	movlb	14	; select bank14
 16010  0D04  1010               	bcf	16,0	;volatile
 16011  0D05                     l6916:	
 16012                           
 16013                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 16014  0D05  141A               	bsf	26,0	;volatile
 16015  0D06                     l6918:	
 16016                           
 16017                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 16018  0D06  30C1               	movlw	low _TMR1_DefaultInterruptHandler
 16019  0D07  0020               	movlb	0	; select bank0
 16020  0D08  00A3               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 16021  0D09  3009               	movlw	high _TMR1_DefaultInterruptHandler
 16022  0D0A  00A4               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 16023  0D0B  318A  229C  318C   	fcall	_TMR1_SetInterruptHandler
 16024  0D0E                     l6920:	
 16025                           
 16026                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x15;
 16027  0D0E  3015               	movlw	21
 16028  0D0F  0024               	movlb	4	; select bank4
 16029  0D10  008E               	movwf	14	;volatile
 16030  0D11                     l1167:	
 16031  0D11  0008               	return
 16032  0D12                     __end_of_TMR1_Initialize:	
 16033                           
 16034                           	psect	text41
 16035  0A9C                     __ptext41:	
 16036 ;; *************** function _TMR1_SetInterruptHandler *****************
 16037 ;; Defined at:
 16038 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 16039 ;; Parameters:    Size  Location     Type
 16040 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 16041 ;;		 -> TMR1_DefaultInterruptHandler(1), handler_clock_hms(1), 
 16042 ;; Auto vars:     Size  Location     Type
 16043 ;;		None
 16044 ;; Return value:  Size  Location     Type
 16045 ;;                  1    wreg      void 
 16046 ;; Registers used:
 16047 ;;		wreg
 16048 ;; Tracked objects:
 16049 ;;		On entry : 0/0
 16050 ;;		On exit  : 0/0
 16051 ;;		Unchanged: 0/0
 16052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16053 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16056 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16057 ;;Total ram usage:        2 bytes
 16058 ;; Hardware stack levels used:    1
 16059 ;; Hardware stack levels required when called:    6
 16060 ;; This function calls:
 16061 ;;		Nothing
 16062 ;; This function is called by:
 16063 ;;		_main
 16064 ;;		_TMR1_Initialize
 16065 ;; This function uses a non-reentrant model
 16066 ;;
 16067                           
 16068                           
 16069                           ;psect for function _TMR1_SetInterruptHandler
 16070  0A9C                     _TMR1_SetInterruptHandler:	
 16071  0A9C                     l6574:	
 16072                           ;incstack = 0
 16073                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 16074                           
 16075                           
 16076                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
 16077  0A9C  0020               	movlb	0	; select bank0
 16078  0A9D  0824               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 16079  0A9E  0021               	movlb	1	; select bank1
 16080  0A9F  00CF               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 16081  0AA0  0020               	movlb	0	; select bank0
 16082  0AA1  0823               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 16083  0AA2  0021               	movlb	1	; select bank1
 16084  0AA3  00CE               	movwf	_TMR1_InterruptHandler^(0+128)
 16085  0AA4                     l1197:	
 16086  0AA4  0008               	return
 16087  0AA5                     __end_of_TMR1_SetInterruptHandler:	
 16088                           
 16089                           	psect	text42
 16090  0BD1                     __ptext42:	
 16091 ;; *************** function _TMR0_Initialize *****************
 16092 ;; Defined at:
 16093 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 16094 ;; Parameters:    Size  Location     Type
 16095 ;;		None
 16096 ;; Auto vars:     Size  Location     Type
 16097 ;;		None
 16098 ;; Return value:  Size  Location     Type
 16099 ;;                  1    wreg      void 
 16100 ;; Registers used:
 16101 ;;		wreg, status,2, status,0, pclath, cstack
 16102 ;; Tracked objects:
 16103 ;;		On entry : 0/0
 16104 ;;		On exit  : 0/0
 16105 ;;		Unchanged: 0/0
 16106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16111 ;;Total ram usage:        0 bytes
 16112 ;; Hardware stack levels used:    1
 16113 ;; Hardware stack levels required when called:    7
 16114 ;; This function calls:
 16115 ;;		_TMR0_SetInterruptHandler
 16116 ;; This function is called by:
 16117 ;;		_SYSTEM_Initialize
 16118 ;; This function uses a non-reentrant model
 16119 ;;
 16120                           
 16121                           
 16122                           ;psect for function _TMR0_Initialize
 16123  0BD1                     _TMR0_Initialize:	
 16124  0BD1                     l6922:	
 16125                           ;incstack = 0
 16126                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16127                           
 16128                           
 16129                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x96;
 16130  0BD1  3096               	movlw	150
 16131  0BD2  0020               	movlb	0	; select bank0
 16132  0BD3  009F               	movwf	31	;volatile
 16133                           
 16134                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0x90;
 16135  0BD4  3090               	movlw	144
 16136  0BD5  009D               	movwf	29	;volatile
 16137  0BD6                     l6924:	
 16138                           
 16139                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 16140  0BD6  019C               	clrf	28	;volatile
 16141  0BD7                     l6926:	
 16142                           
 16143                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 16144  0BD7  002E               	movlb	14	; select bank14
 16145  0BD8  128C               	bcf	12,5	;volatile
 16146  0BD9                     l6928:	
 16147                           
 16148                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 16149  0BD9  1696               	bsf	22,5	;volatile
 16150  0BDA                     l6930:	
 16151                           
 16152                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 16153  0BDA  30C0               	movlw	low _TMR0_DefaultInterruptHandler
 16154  0BDB  0020               	movlb	0	; select bank0
 16155  0BDC  00A3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 16156  0BDD  3009               	movlw	high _TMR0_DefaultInterruptHandler
 16157  0BDE  00A4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 16158  0BDF  318A  2293  318B   	fcall	_TMR0_SetInterruptHandler
 16159  0BE2                     l6932:	
 16160                           
 16161                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x09;
 16162  0BE2  3009               	movlw	9
 16163  0BE3  0020               	movlb	0	; select bank0
 16164  0BE4  009E               	movwf	30	;volatile
 16165  0BE5                     l1111:	
 16166  0BE5  0008               	return
 16167  0BE6                     __end_of_TMR0_Initialize:	
 16168                           
 16169                           	psect	text43
 16170  0A93                     __ptext43:	
 16171 ;; *************** function _TMR0_SetInterruptHandler *****************
 16172 ;; Defined at:
 16173 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 16174 ;; Parameters:    Size  Location     Type
 16175 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 16176 ;;		 -> TMR0_DefaultInterruptHandler(1), ISR_3s(1), 
 16177 ;; Auto vars:     Size  Location     Type
 16178 ;;		None
 16179 ;; Return value:  Size  Location     Type
 16180 ;;                  1    wreg      void 
 16181 ;; Registers used:
 16182 ;;		wreg
 16183 ;; Tracked objects:
 16184 ;;		On entry : 0/0
 16185 ;;		On exit  : 0/0
 16186 ;;		Unchanged: 0/0
 16187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16188 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16191 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16192 ;;Total ram usage:        2 bytes
 16193 ;; Hardware stack levels used:    1
 16194 ;; Hardware stack levels required when called:    6
 16195 ;; This function calls:
 16196 ;;		Nothing
 16197 ;; This function is called by:
 16198 ;;		_main
 16199 ;;		_TMR0_Initialize
 16200 ;; This function uses a non-reentrant model
 16201 ;;
 16202                           
 16203                           
 16204                           ;psect for function _TMR0_SetInterruptHandler
 16205  0A93                     _TMR0_SetInterruptHandler:	
 16206  0A93                     l6572:	
 16207                           ;incstack = 0
 16208                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 16209                           
 16210                           
 16211                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 16212  0A93  0020               	movlb	0	; select bank0
 16213  0A94  0824               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 16214  0A95  0021               	movlb	1	; select bank1
 16215  0A96  00D1               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 16216  0A97  0020               	movlb	0	; select bank0
 16217  0A98  0823               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 16218  0A99  0021               	movlb	1	; select bank1
 16219  0A9A  00D0               	movwf	_TMR0_InterruptHandler^(0+128)
 16220  0A9B                     l1133:	
 16221  0A9B  0008               	return
 16222  0A9C                     __end_of_TMR0_SetInterruptHandler:	
 16223                           
 16224                           	psect	text44
 16225  0B14                     __ptext44:	
 16226 ;; *************** function _PWM6_Initialize *****************
 16227 ;; Defined at:
 16228 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 16229 ;; Parameters:    Size  Location     Type
 16230 ;;		None
 16231 ;; Auto vars:     Size  Location     Type
 16232 ;;		None
 16233 ;; Return value:  Size  Location     Type
 16234 ;;                  1    wreg      void 
 16235 ;; Registers used:
 16236 ;;		wreg, status,2, status,0
 16237 ;; Tracked objects:
 16238 ;;		On entry : 0/0
 16239 ;;		On exit  : 0/0
 16240 ;;		Unchanged: 0/0
 16241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16246 ;;Total ram usage:        0 bytes
 16247 ;; Hardware stack levels used:    1
 16248 ;; Hardware stack levels required when called:    6
 16249 ;; This function calls:
 16250 ;;		Nothing
 16251 ;; This function is called by:
 16252 ;;		_SYSTEM_Initialize
 16253 ;; This function uses a non-reentrant model
 16254 ;;
 16255                           
 16256                           
 16257                           ;psect for function _PWM6_Initialize
 16258  0B14                     _PWM6_Initialize:	
 16259  0B14                     l6880:	
 16260                           ;incstack = 0
 16261                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 16262                           
 16263                           
 16264                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 16265  0B14  3080               	movlw	128
 16266  0B15  0027               	movlb	7	; select bank7
 16267  0B16  008E               	movwf	14	;volatile
 16268                           
 16269                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x3E;
 16270  0B17  303E               	movlw	62
 16271  0B18  008D               	movwf	13	;volatile
 16272                           
 16273                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 16274  0B19  3040               	movlw	64
 16275  0B1A  008C               	movwf	12	;volatile
 16276  0B1B                     l6882:	
 16277                           
 16278                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 16279  0B1B  0024               	movlb	4	; select bank4
 16280  0B1C  081F               	movf	31,w	;volatile
 16281  0B1D  39F3               	andlw	-13
 16282  0B1E  3804               	iorlw	4
 16283  0B1F  009F               	movwf	31	;volatile
 16284  0B20                     l1211:	
 16285  0B20  0008               	return
 16286  0B21                     __end_of_PWM6_Initialize:	
 16287                           
 16288                           	psect	text45
 16289  0A67                     __ptext45:	
 16290 ;; *************** function _PMD_Initialize *****************
 16291 ;; Defined at:
 16292 ;;		line 77 in file "mcc_generated_files/mcc.c"
 16293 ;; Parameters:    Size  Location     Type
 16294 ;;		None
 16295 ;; Auto vars:     Size  Location     Type
 16296 ;;		None
 16297 ;; Return value:  Size  Location     Type
 16298 ;;                  1    wreg      void 
 16299 ;; Registers used:
 16300 ;;		status,2
 16301 ;; Tracked objects:
 16302 ;;		On entry : 0/0
 16303 ;;		On exit  : 0/0
 16304 ;;		Unchanged: 0/0
 16305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16310 ;;Total ram usage:        0 bytes
 16311 ;; Hardware stack levels used:    1
 16312 ;; Hardware stack levels required when called:    6
 16313 ;; This function calls:
 16314 ;;		Nothing
 16315 ;; This function is called by:
 16316 ;;		_SYSTEM_Initialize
 16317 ;; This function uses a non-reentrant model
 16318 ;;
 16319                           
 16320                           
 16321                           ;psect for function _PMD_Initialize
 16322  0A67                     _PMD_Initialize:	
 16323  0A67                     l6816:	
 16324                           ;incstack = 0
 16325                           ; Regs used in _PMD_Initialize: [status,2]
 16326                           
 16327                           
 16328                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 16329  0A67  002F               	movlb	15	; select bank15
 16330  0A68  0196               	clrf	22	;volatile
 16331                           
 16332                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 16333  0A69  0197               	clrf	23	;volatile
 16334                           
 16335                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 16336  0A6A  0198               	clrf	24	;volatile
 16337                           
 16338                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 16339  0A6B  0199               	clrf	25	;volatile
 16340                           
 16341                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 16342  0A6C  019A               	clrf	26	;volatile
 16343                           
 16344                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 16345  0A6D  019B               	clrf	27	;volatile
 16346  0A6E                     l695:	
 16347  0A6E  0008               	return
 16348  0A6F                     __end_of_PMD_Initialize:	
 16349                           
 16350                           	psect	text46
 16351  0755                     __ptext46:	
 16352 ;; *************** function _PIN_MANAGER_Initialize *****************
 16353 ;; Defined at:
 16354 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 16355 ;; Parameters:    Size  Location     Type
 16356 ;;		None
 16357 ;; Auto vars:     Size  Location     Type
 16358 ;;		None
 16359 ;; Return value:  Size  Location     Type
 16360 ;;                  1    wreg      void 
 16361 ;; Registers used:
 16362 ;;		wreg, status,2
 16363 ;; Tracked objects:
 16364 ;;		On entry : 0/0
 16365 ;;		On exit  : 0/0
 16366 ;;		Unchanged: 0/0
 16367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16372 ;;Total ram usage:        0 bytes
 16373 ;; Hardware stack levels used:    1
 16374 ;; Hardware stack levels required when called:    6
 16375 ;; This function calls:
 16376 ;;		Nothing
 16377 ;; This function is called by:
 16378 ;;		_SYSTEM_Initialize
 16379 ;; This function uses a non-reentrant model
 16380 ;;
 16381                           
 16382                           
 16383                           ;psect for function _PIN_MANAGER_Initialize
 16384  0755                     _PIN_MANAGER_Initialize:	
 16385  0755                     l6818:	
 16386                           ;incstack = 0
 16387                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 16388                           
 16389                           
 16390                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 16391  0755  0020               	movlb	0	; select bank0
 16392  0756  019A               	clrf	26	;volatile
 16393                           
 16394                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 16395  0757  0199               	clrf	25	;volatile
 16396                           
 16397                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 16398  0758  0196               	clrf	22	;volatile
 16399                           
 16400                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 16401  0759  0197               	clrf	23	;volatile
 16402                           
 16403                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 16404  075A  0198               	clrf	24	;volatile
 16405  075B                     l6820:	
 16406                           
 16407                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 16408  075B  3007               	movlw	7
 16409  075C  0095               	movwf	21	;volatile
 16410  075D                     l6822:	
 16411                           
 16412                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
 16413  075D  300F               	movlw	15
 16414  075E  0091               	movwf	17	;volatile
 16415  075F                     l6824:	
 16416                           
 16417                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 16418  075F  30FF               	movlw	255
 16419  0760  0092               	movwf	18	;volatile
 16420  0761                     l6826:	
 16421                           
 16422                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 16423  0761  30FF               	movlw	255
 16424  0762  0093               	movwf	19	;volatile
 16425  0763                     l6828:	
 16426                           
 16427                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 16428  0763  30FF               	movlw	255
 16429  0764  0094               	movwf	20	;volatile
 16430  0765                     l6830:	
 16431                           
 16432                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 16433  0765  30FF               	movlw	255
 16434  0766  003E               	movlb	30	; select bank30
 16435  0767  00D9               	movwf	89	;volatile
 16436  0768                     l6832:	
 16437                           
 16438                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC7;
 16439  0768  30C7               	movlw	199
 16440  0769  00CE               	movwf	78	;volatile
 16441  076A                     l6834:	
 16442                           
 16443                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
 16444  076A  30EF               	movlw	239
 16445  076B  00C3               	movwf	67	;volatile
 16446  076C                     l6836:	
 16447                           
 16448                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 16449  076C  3007               	movlw	7
 16450  076D  00E4               	movwf	100	;volatile
 16451  076E                     l6838:	
 16452                           
 16453                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
 16454  076E  30FF               	movlw	255
 16455  076F  00B8               	movwf	56	;volatile
 16456                           
 16457                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 16458  0770  01DA               	clrf	90	;volatile
 16459                           
 16460                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 16461  0771  01E5               	clrf	101	;volatile
 16462                           
 16463                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 16464  0772  01C4               	clrf	68	;volatile
 16465                           
 16466                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 16467  0773  01B9               	clrf	57	;volatile
 16468                           
 16469                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 16470  0774  01CF               	clrf	79	;volatile
 16471                           
 16472                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 16473  0775  01E6               	clrf	102	;volatile
 16474                           
 16475                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 16476  0776  01BA               	clrf	58	;volatile
 16477                           
 16478                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 16479  0777  01C5               	clrf	69	;volatile
 16480                           
 16481                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 16482  0778  01D0               	clrf	80	;volatile
 16483                           
 16484                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 16485  0779  01DB               	clrf	91	;volatile
 16486  077A                     l6840:	
 16487                           
 16488                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 16489  077A  30FF               	movlw	255
 16490  077B  00BB               	movwf	59	;volatile
 16491  077C                     l6842:	
 16492                           
 16493                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 16494  077C  30FF               	movlw	255
 16495  077D  00C6               	movwf	70	;volatile
 16496  077E                     l6844:	
 16497                           
 16498                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 16499  077E  30FF               	movlw	255
 16500  077F  00D1               	movwf	81	;volatile
 16501  0780                     l6846:	
 16502                           
 16503                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 16504  0780  30FF               	movlw	255
 16505  0781  00DC               	movwf	92	;volatile
 16506  0782                     l6848:	
 16507                           
 16508                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 16509  0782  3007               	movlw	7
 16510  0783  00E7               	movwf	103	;volatile
 16511  0784                     l6850:	
 16512                           
 16513                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 16514  0784  30FF               	movlw	255
 16515  0785  00BC               	movwf	60	;volatile
 16516  0786                     l6852:	
 16517                           
 16518                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 16519  0786  30FF               	movlw	255
 16520  0787  00C7               	movwf	71	;volatile
 16521  0788                     l6854:	
 16522                           
 16523                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 16524  0788  30FF               	movlw	255
 16525  0789  00D2               	movwf	82	;volatile
 16526  078A                     l6856:	
 16527                           
 16528                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 16529  078A  30FF               	movlw	255
 16530  078B  00DD               	movwf	93	;volatile
 16531  078C                     l6858:	
 16532                           
 16533                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 16534  078C  3007               	movlw	7
 16535  078D  00E8               	movwf	104	;volatile
 16536  078E                     l6860:	
 16537                           
 16538                           ;mcc_generated_files/pin_manager.c: 127:     INTPPS = 0x0C;
 16539  078E  300C               	movlw	12
 16540  078F  003D               	movlb	29	; select bank29
 16541  0790  0090               	movwf	16	;volatile
 16542  0791                     l6862:	
 16543                           
 16544                           ;mcc_generated_files/pin_manager.c: 128:     SSP1CLKPPS = 0x13;
 16545  0791  3013               	movlw	19
 16546  0792  00C5               	movwf	69	;volatile
 16547  0793                     l6864:	
 16548                           
 16549                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x14;
 16550  0793  3014               	movlw	20
 16551  0794  003E               	movlb	30	; select bank30
 16552  0795  00A3               	movwf	35	;volatile
 16553  0796                     l6866:	
 16554                           
 16555                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x15;
 16556  0796  3015               	movlw	21
 16557  0797  00A4               	movwf	36	;volatile
 16558  0798                     l6868:	
 16559                           
 16560                           ;mcc_generated_files/pin_manager.c: 131:     RA6PPS = 0x0E;
 16561  0798  300E               	movlw	14
 16562  0799  0096               	movwf	22	;volatile
 16563  079A                     l6870:	
 16564                           
 16565                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 16566  079A  3014               	movlw	20
 16567  079B  003D               	movlb	29	; select bank29
 16568  079C  00C6               	movwf	70	;volatile
 16569  079D                     l925:	
 16570  079D  0008               	return
 16571  079E                     __end_of_PIN_MANAGER_Initialize:	
 16572                           
 16573                           	psect	text47
 16574  0A8A                     __ptext47:	
 16575 ;; *************** function _OSCILLATOR_Initialize *****************
 16576 ;; Defined at:
 16577 ;;		line 63 in file "mcc_generated_files/mcc.c"
 16578 ;; Parameters:    Size  Location     Type
 16579 ;;		None
 16580 ;; Auto vars:     Size  Location     Type
 16581 ;;		None
 16582 ;; Return value:  Size  Location     Type
 16583 ;;                  1    wreg      void 
 16584 ;; Registers used:
 16585 ;;		wreg, status,2
 16586 ;; Tracked objects:
 16587 ;;		On entry : 0/0
 16588 ;;		On exit  : 0/0
 16589 ;;		Unchanged: 0/0
 16590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16595 ;;Total ram usage:        0 bytes
 16596 ;; Hardware stack levels used:    1
 16597 ;; Hardware stack levels required when called:    6
 16598 ;; This function calls:
 16599 ;;		Nothing
 16600 ;; This function is called by:
 16601 ;;		_SYSTEM_Initialize
 16602 ;; This function uses a non-reentrant model
 16603 ;;
 16604                           
 16605                           
 16606                           ;psect for function _OSCILLATOR_Initialize
 16607  0A8A                     _OSCILLATOR_Initialize:	
 16608  0A8A                     l6872:	
 16609                           ;incstack = 0
 16610                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 16611                           
 16612                           
 16613                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x62;
 16614  0A8A  3062               	movlw	98
 16615  0A8B  0031               	movlb	17	; select bank17
 16616  0A8C  008D               	movwf	13	;volatile
 16617  0A8D                     l6874:	
 16618                           
 16619                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
 16620  0A8D  018F               	clrf	15	;volatile
 16621  0A8E                     l6876:	
 16622                           
 16623                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
 16624  0A8E  0191               	clrf	17	;volatile
 16625                           
 16626                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x02;
 16627  0A8F  3002               	movlw	2
 16628  0A90  0093               	movwf	19	;volatile
 16629  0A91                     l6878:	
 16630                           
 16631                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 16632  0A91  0192               	clrf	18	;volatile
 16633  0A92                     l692:	
 16634  0A92  0008               	return
 16635  0A93                     __end_of_OSCILLATOR_Initialize:	
 16636                           
 16637                           	psect	text48
 16638  0B21                     __ptext48:	
 16639 ;; *************** function _EXT_INT_Initialize *****************
 16640 ;; Defined at:
 16641 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 16642 ;; Parameters:    Size  Location     Type
 16643 ;;		None
 16644 ;; Auto vars:     Size  Location     Type
 16645 ;;		None
 16646 ;; Return value:  Size  Location     Type
 16647 ;;                  1    wreg      void 
 16648 ;; Registers used:
 16649 ;;		wreg, status,2, status,0, pclath, cstack
 16650 ;; Tracked objects:
 16651 ;;		On entry : 0/0
 16652 ;;		On exit  : 0/0
 16653 ;;		Unchanged: 0/0
 16654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16659 ;;Total ram usage:        0 bytes
 16660 ;; Hardware stack levels used:    1
 16661 ;; Hardware stack levels required when called:    7
 16662 ;; This function calls:
 16663 ;;		_INT_SetInterruptHandler
 16664 ;; This function is called by:
 16665 ;;		_SYSTEM_Initialize
 16666 ;; This function uses a non-reentrant model
 16667 ;;
 16668                           
 16669                           
 16670                           ;psect for function _EXT_INT_Initialize
 16671  0B21                     _EXT_INT_Initialize:	
 16672  0B21                     l6810:	
 16673                           ;incstack = 0
 16674                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16675                           
 16676                           
 16677                           ;mcc_generated_files/ext_int.c: 64:     (PIR0bits.INTF = 0);
 16678  0B21  002E               	movlb	14	; select bank14
 16679  0B22  100C               	bcf	12,0	;volatile
 16680                           
 16681                           ;mcc_generated_files/ext_int.c: 65:     (INTCONbits.INTEDG = 1);
 16682  0B23  140B               	bsf	11,0	;volatile
 16683  0B24                     l6812:	
 16684                           
 16685                           ;mcc_generated_files/ext_int.c: 67:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
 16686  0B24  30BF               	movlw	low _INT_DefaultInterruptHandler
 16687  0B25  0020               	movlb	0	; select bank0
 16688  0B26  00A3               	movwf	INT_SetInterruptHandler@InterruptHandler
 16689  0B27  3009               	movlw	high _INT_DefaultInterruptHandler
 16690  0B28  00A4               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 16691  0B29  318A  2281  318B   	fcall	_INT_SetInterruptHandler
 16692  0B2C                     l6814:	
 16693                           
 16694                           ;mcc_generated_files/ext_int.c: 68:     (PIE0bits.INTE = 1);
 16695  0B2C  002E               	movlb	14	; select bank14
 16696  0B2D  1416               	bsf	22,0	;volatile
 16697  0B2E                     l585:	
 16698  0B2E  0008               	return
 16699  0B2F                     __end_of_EXT_INT_Initialize:	
 16700                           
 16701                           	psect	text49
 16702  0A81                     __ptext49:	
 16703 ;; *************** function _INT_SetInterruptHandler *****************
 16704 ;; Defined at:
 16705 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 16706 ;; Parameters:    Size  Location     Type
 16707 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 16708 ;;		 -> INT_DefaultInterruptHandler(1), sw1_EXT(1), 
 16709 ;; Auto vars:     Size  Location     Type
 16710 ;;		None
 16711 ;; Return value:  Size  Location     Type
 16712 ;;                  1    wreg      void 
 16713 ;; Registers used:
 16714 ;;		wreg
 16715 ;; Tracked objects:
 16716 ;;		On entry : 0/0
 16717 ;;		On exit  : 0/0
 16718 ;;		Unchanged: 0/0
 16719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16720 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16723 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16724 ;;Total ram usage:        2 bytes
 16725 ;; Hardware stack levels used:    1
 16726 ;; Hardware stack levels required when called:    6
 16727 ;; This function calls:
 16728 ;;		Nothing
 16729 ;; This function is called by:
 16730 ;;		_main
 16731 ;;		_EXT_INT_Initialize
 16732 ;; This function uses a non-reentrant model
 16733 ;;
 16734                           
 16735                           
 16736                           ;psect for function _INT_SetInterruptHandler
 16737  0A81                     _INT_SetInterruptHandler:	
 16738  0A81                     l6576:	
 16739                           ;incstack = 0
 16740                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 16741                           
 16742                           
 16743                           ;mcc_generated_files/ext_int.c: 51:     INT_InterruptHandler = InterruptHandler;
 16744  0A81  0020               	movlb	0	; select bank0
 16745  0A82  0824               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
 16746  0A83  0021               	movlb	1	; select bank1
 16747  0A84  00D3               	movwf	(_INT_InterruptHandler+1)^(0+128)
 16748  0A85  0020               	movlb	0	; select bank0
 16749  0A86  0823               	movf	INT_SetInterruptHandler@InterruptHandler,w
 16750  0A87  0021               	movlb	1	; select bank1
 16751  0A88  00D2               	movwf	_INT_InterruptHandler^(0+128)
 16752  0A89                     l579:	
 16753  0A89  0008               	return
 16754  0A8A                     __end_of_INT_SetInterruptHandler:	
 16755                           
 16756                           	psect	text50
 16757  0BFC                     __ptext50:	
 16758 ;; *************** function _ADCC_Initialize *****************
 16759 ;; Defined at:
 16760 ;;		line 63 in file "mcc_generated_files/adcc.c"
 16761 ;; Parameters:    Size  Location     Type
 16762 ;;		None
 16763 ;; Auto vars:     Size  Location     Type
 16764 ;;		None
 16765 ;; Return value:  Size  Location     Type
 16766 ;;                  1    wreg      void 
 16767 ;; Registers used:
 16768 ;;		wreg, status,2
 16769 ;; Tracked objects:
 16770 ;;		On entry : 0/0
 16771 ;;		On exit  : 0/0
 16772 ;;		Unchanged: 0/0
 16773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16778 ;;Total ram usage:        0 bytes
 16779 ;; Hardware stack levels used:    1
 16780 ;; Hardware stack levels required when called:    6
 16781 ;; This function calls:
 16782 ;;		Nothing
 16783 ;; This function is called by:
 16784 ;;		_SYSTEM_Initialize
 16785 ;; This function uses a non-reentrant model
 16786 ;;
 16787                           
 16788                           
 16789                           ;psect for function _ADCC_Initialize
 16790  0BFC                     _ADCC_Initialize:	
 16791  0BFC                     l6884:	
 16792                           ;incstack = 0
 16793                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 16794                           
 16795                           
 16796                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 16797  0BFC  0022               	movlb	2	; select bank2
 16798  0BFD  018E               	clrf	14	;volatile
 16799                           
 16800                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 16801  0BFE  018F               	clrf	15	;volatile
 16802                           
 16803                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 16804  0BFF  0190               	clrf	16	;volatile
 16805                           
 16806                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 16807  0C00  0191               	clrf	17	;volatile
 16808                           
 16809                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 16810  0C01  0192               	clrf	18	;volatile
 16811                           
 16812                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 16813  0C02  0193               	clrf	19	;volatile
 16814                           
 16815                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 16816  0C03  018D               	clrf	13	;volatile
 16817                           
 16818                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 16819  0C04  0021               	movlb	1	; select bank1
 16820  0C05  019E               	clrf	30	;volatile
 16821                           
 16822                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 16823  0C06  019B               	clrf	27	;volatile
 16824                           
 16825                           ;mcc_generated_files/adcc.c: 85:     ADCON1 = 0x00;
 16826  0C07  0194               	clrf	20	;volatile
 16827                           
 16828                           ;mcc_generated_files/adcc.c: 87:     ADCON2 = 0x00;
 16829  0C08  0195               	clrf	21	;volatile
 16830                           
 16831                           ;mcc_generated_files/adcc.c: 89:     ADCON3 = 0x00;
 16832  0C09  0196               	clrf	22	;volatile
 16833                           
 16834                           ;mcc_generated_files/adcc.c: 91:     ADSTAT = 0x00;
 16835  0C0A  0197               	clrf	23	;volatile
 16836                           
 16837                           ;mcc_generated_files/adcc.c: 93:     ADREF = 0x00;
 16838  0C0B  019A               	clrf	26	;volatile
 16839                           
 16840                           ;mcc_generated_files/adcc.c: 95:     ADACT = 0x00;
 16841  0C0C  0199               	clrf	25	;volatile
 16842                           
 16843                           ;mcc_generated_files/adcc.c: 97:     ADCLK = 0x00;
 16844  0C0D  0198               	clrf	24	;volatile
 16845  0C0E                     l6886:	
 16846                           
 16847                           ;mcc_generated_files/adcc.c: 99:     ADCON0 = 0x84;
 16848  0C0E  3084               	movlw	132
 16849  0C0F  0093               	movwf	19	;volatile
 16850  0C10                     l6888:	
 16851                           
 16852                           ;mcc_generated_files/adcc.c: 101:     ADACQ = 0x00;
 16853  0C10  019D               	clrf	29	;volatile
 16854  0C11                     l1007:	
 16855  0C11  0008               	return
 16856  0C12                     __end_of_ADCC_Initialize:	
 16857                           
 16858                           	psect	text51
 16859  07E5                     __ptext51:	
 16860 ;; *************** function _LED_bin *****************
 16861 ;; Defined at:
 16862 ;;		line 48 in file "leds.c"
 16863 ;; Parameters:    Size  Location     Type
 16864 ;;  value           2    3[BANK0 ] unsigned int 
 16865 ;; Auto vars:     Size  Location     Type
 16866 ;;		None
 16867 ;; Return value:  Size  Location     Type
 16868 ;;                  1    wreg      void 
 16869 ;; Registers used:
 16870 ;;		wreg, status,2, status,0
 16871 ;; Tracked objects:
 16872 ;;		On entry : 0/0
 16873 ;;		On exit  : 0/0
 16874 ;;		Unchanged: 0/0
 16875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16876 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16878 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16879 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16880 ;;Total ram usage:        5 bytes
 16881 ;; Hardware stack levels used:    1
 16882 ;; Hardware stack levels required when called:    6
 16883 ;; This function calls:
 16884 ;;		Nothing
 16885 ;; This function is called by:
 16886 ;;		_main
 16887 ;; This function uses a non-reentrant model
 16888 ;;
 16889                           
 16890                           
 16891                           ;psect for function _LED_bin
 16892  07E5                     _LED_bin:	
 16893  07E5                     l7006:	
 16894                           ;incstack = 0
 16895                           ; Regs used in _LED_bin: [wreg+status,2+status,0]
 16896                           
 16897                           
 16898                           ;leds.c: 50:     LATAbits.LATA4 = (value & 1);
 16899  07E5  0020               	movlb	0	; select bank0
 16900  07E6  0823               	movf	LED_bin@value,w
 16901  07E7  3901               	andlw	1
 16902  07E8  00A5               	movwf	??_LED_bin
 16903  07E9  0EA5               	swapf	??_LED_bin,f
 16904  07EA  0816               	movf	22,w	;volatile
 16905  07EB  0625               	xorwf	??_LED_bin,w
 16906  07EC  39EF               	andlw	-17
 16907  07ED  0625               	xorwf	??_LED_bin,w
 16908  07EE  0096               	movwf	22	;volatile
 16909                           
 16910                           ;leds.c: 51:     LATAbits.LATA5 = (value >>1);
 16911  07EF  0824               	movf	LED_bin@value+1,w
 16912  07F0  00A6               	movwf	??_LED_bin+1
 16913  07F1  0823               	movf	LED_bin@value,w
 16914  07F2  00A5               	movwf	??_LED_bin
 16915  07F3  36A6               	lsrf	??_LED_bin+1,f
 16916  07F4  0CA5               	rrf	??_LED_bin,f
 16917  07F5  0825               	movf	??_LED_bin,w
 16918  07F6  00A7               	movwf	??_LED_bin+2
 16919  07F7  0EA7               	swapf	??_LED_bin+2,f
 16920  07F8  0DA7               	rlf	??_LED_bin+2,f
 16921  07F9  0816               	movf	22,w	;volatile
 16922  07FA  0627               	xorwf	??_LED_bin+2,w
 16923  07FB  39DF               	andlw	-33
 16924  07FC  0627               	xorwf	??_LED_bin+2,w
 16925  07FD  0096               	movwf	22	;volatile
 16926  07FE                     l1681:	
 16927  07FE  0008               	return
 16928  07FF                     __end_of_LED_bin:	
 16929                           
 16930                           	psect	text52
 16931  0CA1                     __ptext52:	
 16932 ;; *************** function _ADC_read *****************
 16933 ;; Defined at:
 16934 ;;		line 590 in file "main.c"
 16935 ;; Parameters:    Size  Location     Type
 16936 ;;		None
 16937 ;; Auto vars:     Size  Location     Type
 16938 ;;		None
 16939 ;; Return value:  Size  Location     Type
 16940 ;;                  2    5[BANK0 ] unsigned int 
 16941 ;; Registers used:
 16942 ;;		wreg, status,2, status,0, pclath, cstack
 16943 ;; Tracked objects:
 16944 ;;		On entry : 0/0
 16945 ;;		On exit  : 0/0
 16946 ;;		Unchanged: 0/0
 16947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16948 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16951 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16952 ;;Total ram usage:        2 bytes
 16953 ;; Hardware stack levels used:    1
 16954 ;; Hardware stack levels required when called:    7
 16955 ;; This function calls:
 16956 ;;		_ADCC_GetConversionResult
 16957 ;;		_ADCC_IsConversionDone
 16958 ;;		_ADCC_StartConversion
 16959 ;; This function is called by:
 16960 ;;		_main
 16961 ;; This function uses a non-reentrant model
 16962 ;;
 16963                           
 16964                           
 16965                           ;psect for function _ADC_read
 16966  0CA1                     _ADC_read:	
 16967  0CA1                     l6996:	
 16968                           ;incstack = 0
 16969                           ; Regs used in _ADC_read: [wreg+status,2+status,0+pclath+cstack]
 16970                           
 16971                           
 16972                           ;main.c: 592:     ADCC_StartConversion(channel_ANA0);
 16973  0CA1  3000               	movlw	0
 16974  0CA2  318A  225F  318C   	fcall	_ADCC_StartConversion
 16975                           
 16976                           ;main.c: 593:     while(!ADCC_IsConversionDone()){
 16977  0CA5  2CAA               	goto	l7000
 16978  0CA6                     l6998:	
 16979                           
 16980                           ;main.c: 594:         _delay((unsigned long)((1)*(1000000/4000.0)));
 16981  0CA6  3053               	movlw	83
 16982  0CA7                     u4567:	
 16983  0CA7  0B89               	decfsz	9,f
 16984  0CA8  2CA7               	goto	u4567
 16985  0CA9  0000               	nop
 16986  0CAA                     l7000:	
 16987                           
 16988                           ;main.c: 593:     while(!ADCC_IsConversionDone()){
 16989  0CAA  318A  2240  318C   	fcall	_ADCC_IsConversionDone
 16990  0CAD  3A00               	xorlw	0
 16991  0CAE  1903               	skipnz
 16992  0CAF  2CB1               	goto	u4001
 16993  0CB0  2CB2               	goto	u4000
 16994  0CB1                     u4001:	
 16995  0CB1  2CA6               	goto	l6998
 16996  0CB2                     u4000:	
 16997  0CB2                     l7002:	
 16998                           
 16999                           ;main.c: 597:     return ADCC_GetConversionResult();
 17000  0CB2  318A  2278  318C   	fcall	_ADCC_GetConversionResult
 17001  0CB5  0020               	movlb	0	; select bank0
 17002  0CB6  0824               	movf	?_ADCC_GetConversionResult+1,w
 17003  0CB7  00A6               	movwf	?_ADC_read+1
 17004  0CB8  0823               	movf	?_ADCC_GetConversionResult,w
 17005  0CB9  00A5               	movwf	?_ADC_read
 17006  0CBA                     l324:	
 17007  0CBA  0008               	return
 17008  0CBB                     __end_of_ADC_read:	
 17009                           
 17010                           	psect	text53
 17011  0A5F                     __ptext53:	
 17012 ;; *************** function _ADCC_StartConversion *****************
 17013 ;; Defined at:
 17014 ;;		line 106 in file "mcc_generated_files/adcc.c"
 17015 ;; Parameters:    Size  Location     Type
 17016 ;;  channel         1    wreg     enum E12246
 17017 ;; Auto vars:     Size  Location     Type
 17018 ;;  channel         1    3[BANK0 ] enum E12246
 17019 ;; Return value:  Size  Location     Type
 17020 ;;                  1    wreg      void 
 17021 ;; Registers used:
 17022 ;;		wreg
 17023 ;; Tracked objects:
 17024 ;;		On entry : 0/0
 17025 ;;		On exit  : 0/0
 17026 ;;		Unchanged: 0/0
 17027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17029 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17031 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17032 ;;Total ram usage:        1 bytes
 17033 ;; Hardware stack levels used:    1
 17034 ;; Hardware stack levels required when called:    6
 17035 ;; This function calls:
 17036 ;;		Nothing
 17037 ;; This function is called by:
 17038 ;;		_ADC_read
 17039 ;; This function uses a non-reentrant model
 17040 ;;
 17041                           
 17042                           
 17043                           ;psect for function _ADCC_StartConversion
 17044  0A5F                     _ADCC_StartConversion:	
 17045                           
 17046                           ;incstack = 0
 17047                           ; Regs used in _ADCC_StartConversion: [wreg]
 17048                           ;ADCC_StartConversion@channel stored from wreg
 17049  0A5F  0020               	movlb	0	; select bank0
 17050  0A60  00A3               	movwf	ADCC_StartConversion@channel
 17051  0A61                     l6786:	
 17052                           
 17053                           ;mcc_generated_files/adcc.c: 106: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 107: {;mcc_generated_files/adcc.c: 109:     ADPCH = channel;
 17054  0A61  0823               	movf	ADCC_StartConversion@channel,w
 17055  0A62  0021               	movlb	1	; select bank1
 17056  0A63  009E               	movwf	30	;volatile
 17057  0A64                     l6788:	
 17058                           
 17059                           ;mcc_generated_files/adcc.c: 112:     ADCON0bits.ADON = 1;
 17060  0A64  1793               	bsf	19,7	;volatile
 17061  0A65                     l6790:	
 17062                           
 17063                           ;mcc_generated_files/adcc.c: 115:     ADCON0bits.ADGO = 1;
 17064  0A65  1413               	bsf	19,0	;volatile
 17065  0A66                     l1010:	
 17066  0A66  0008               	return
 17067  0A67                     __end_of_ADCC_StartConversion:	
 17068                           
 17069                           	psect	text54
 17070  0A40                     __ptext54:	
 17071 ;; *************** function _ADCC_IsConversionDone *****************
 17072 ;; Defined at:
 17073 ;;		line 118 in file "mcc_generated_files/adcc.c"
 17074 ;; Parameters:    Size  Location     Type
 17075 ;;		None
 17076 ;; Auto vars:     Size  Location     Type
 17077 ;;		None
 17078 ;; Return value:  Size  Location     Type
 17079 ;;                  1    wreg      _Bool 
 17080 ;; Registers used:
 17081 ;;		wreg, status,0
 17082 ;; Tracked objects:
 17083 ;;		On entry : 0/0
 17084 ;;		On exit  : 0/0
 17085 ;;		Unchanged: 0/0
 17086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17091 ;;Total ram usage:        0 bytes
 17092 ;; Hardware stack levels used:    1
 17093 ;; Hardware stack levels required when called:    6
 17094 ;; This function calls:
 17095 ;;		Nothing
 17096 ;; This function is called by:
 17097 ;;		_ADC_read
 17098 ;; This function uses a non-reentrant model
 17099 ;;
 17100                           
 17101                           
 17102                           ;psect for function _ADCC_IsConversionDone
 17103  0A40                     _ADCC_IsConversionDone:	
 17104  0A40                     l6792:	
 17105                           ;incstack = 0
 17106                           ; Regs used in _ADCC_IsConversionDone: [wreg+status,0]
 17107                           
 17108                           
 17109                           ;mcc_generated_files/adcc.c: 121:     return ((unsigned char)(!ADCON0bits.ADGO));
 17110  0A40  1003               	clrc
 17111  0A41  0021               	movlb	1	; select bank1
 17112  0A42  1C13               	btfss	19,0	;volatile
 17113  0A43  1403               	setc
 17114  0A44  3000               	movlw	0
 17115  0A45  3D09               	addwfc	9,w
 17116  0A46                     l1013:	
 17117  0A46  0008               	return
 17118  0A47                     __end_of_ADCC_IsConversionDone:	
 17119                           
 17120                           	psect	text55
 17121  0A78                     __ptext55:	
 17122 ;; *************** function _ADCC_GetConversionResult *****************
 17123 ;; Defined at:
 17124 ;;		line 124 in file "mcc_generated_files/adcc.c"
 17125 ;; Parameters:    Size  Location     Type
 17126 ;;		None
 17127 ;; Auto vars:     Size  Location     Type
 17128 ;;		None
 17129 ;; Return value:  Size  Location     Type
 17130 ;;                  2    3[BANK0 ] unsigned short 
 17131 ;; Registers used:
 17132 ;;		wreg
 17133 ;; Tracked objects:
 17134 ;;		On entry : 0/0
 17135 ;;		On exit  : 0/0
 17136 ;;		Unchanged: 0/0
 17137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17138 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17141 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17142 ;;Total ram usage:        2 bytes
 17143 ;; Hardware stack levels used:    1
 17144 ;; Hardware stack levels required when called:    6
 17145 ;; This function calls:
 17146 ;;		Nothing
 17147 ;; This function is called by:
 17148 ;;		_ADC_read
 17149 ;; This function uses a non-reentrant model
 17150 ;;
 17151                           
 17152                           
 17153                           ;psect for function _ADCC_GetConversionResult
 17154  0A78                     _ADCC_GetConversionResult:	
 17155  0A78                     l6796:	
 17156                           ;incstack = 0
 17157                           ; Regs used in _ADCC_GetConversionResult: [wreg]
 17158                           
 17159                           
 17160                           ;mcc_generated_files/adcc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 17161  0A78  0021               	movlb	1	; select bank1
 17162  0A79  080D               	movf	13,w	;volatile
 17163  0A7A  0020               	movlb	0	; select bank0
 17164  0A7B  00A4               	movwf	?_ADCC_GetConversionResult+1
 17165  0A7C  0021               	movlb	1	; select bank1
 17166  0A7D  080C               	movf	12,w	;volatile
 17167  0A7E  0020               	movlb	0	; select bank0
 17168  0A7F  00A3               	movwf	?_ADCC_GetConversionResult
 17169  0A80                     l1016:	
 17170  0A80  0008               	return
 17171  0A81                     __end_of_ADCC_GetConversionResult:	
 17172                           
 17173                           	psect	intentry
 17174  0004                     __pintentry:	
 17175 ;; *************** function _INTERRUPT_InterruptManager *****************
 17176 ;; Defined at:
 17177 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17178 ;; Parameters:    Size  Location     Type
 17179 ;;		None
 17180 ;; Auto vars:     Size  Location     Type
 17181 ;;		None
 17182 ;; Return value:  Size  Location     Type
 17183 ;;                  1    wreg      void 
 17184 ;; Registers used:
 17185 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17186 ;; Tracked objects:
 17187 ;;		On entry : 0/0
 17188 ;;		On exit  : 0/0
 17189 ;;		Unchanged: 0/0
 17190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17195 ;;Total ram usage:        0 bytes
 17196 ;; Hardware stack levels used:    1
 17197 ;; Hardware stack levels required when called:    5
 17198 ;; This function calls:
 17199 ;;		Absolute function
 17200 ;;		_INT_ISR
 17201 ;;		_TMR0_ISR
 17202 ;;		_TMR1_ISR
 17203 ;;		_TMR2_ISR
 17204 ;;		_i2c_ISR
 17205 ;;		_i2c_busCollisionISR
 17206 ;; This function is called by:
 17207 ;;		Interrupt level 1
 17208 ;; This function uses a non-reentrant model
 17209 ;;
 17210                           
 17211  0004                     _INTERRUPT_InterruptManager:	
 17212                           
 17213                           ;incstack = 0
 17214  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 17215                           
 17216                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17217  0005  3180               	pagesel	$
 17218  0006                     i1l5988:	
 17219                           
 17220                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.INTE == 1 && PIR0bits.INTF
      +                           == 1)
 17221  0006  002E               	movlb	14	; select bank14
 17222  0007  1C16               	btfss	22,0	;volatile
 17223  0008  280A               	goto	u313_21
 17224  0009  280B               	goto	u313_20
 17225  000A                     u313_21:	
 17226  000A  2813               	goto	i1l628
 17227  000B                     u313_20:	
 17228  000B                     i1l5990:	
 17229  000B  1C0C               	btfss	12,0	;volatile
 17230  000C  280E               	goto	u314_21
 17231  000D  280F               	goto	u314_20
 17232  000E                     u314_21:	
 17233  000E  2813               	goto	i1l628
 17234  000F                     u314_20:	
 17235  000F                     i1l5992:	
 17236                           
 17237                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         INT_ISR();
 17238  000F  318A  221B  3180   	fcall	_INT_ISR
 17239                           
 17240                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 17241  0012  2859               	goto	i1l642
 17242  0013                     i1l628:	
 17243                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.TMR0IE == 1 && PIR0bi
      +                          ts.TMR0IF == 1)
 17244                           
 17245  0013  1E96               	btfss	22,5	;volatile
 17246  0014  2816               	goto	u315_21
 17247  0015  2817               	goto	u315_20
 17248  0016                     u315_21:	
 17249  0016  281F               	goto	i1l630
 17250  0017                     u315_20:	
 17251  0017                     i1l5994:	
 17252  0017  1E8C               	btfss	12,5	;volatile
 17253  0018  281A               	goto	u316_21
 17254  0019  281B               	goto	u316_20
 17255  001A                     u316_21:	
 17256  001A  281F               	goto	i1l630
 17257  001B                     u316_20:	
 17258  001B                     i1l5996:	
 17259                           
 17260                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
 17261  001B  318B  232F  3180   	fcall	_TMR0_ISR
 17262                           
 17263                           ;mcc_generated_files/interrupt_manager.c: 62:     }
 17264  001E  2859               	goto	i1l642
 17265  001F                     i1l630:	
 17266                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
 17267                           
 17268  001F  1F0B               	btfss	11,6	;volatile
 17269  0020  2822               	goto	u317_21
 17270  0021  2823               	goto	u317_20
 17271  0022                     u317_21:	
 17272  0022  2859               	goto	i1l636
 17273  0023                     u317_20:	
 17274  0023                     i1l5998:	
 17275                           
 17276                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 17277  0023  1C99               	btfss	25,1	;volatile
 17278  0024  2826               	goto	u318_21
 17279  0025  2827               	goto	u318_20
 17280  0026                     u318_21:	
 17281  0026  2832               	goto	i1l633
 17282  0027                     u318_20:	
 17283  0027                     i1l6000:	
 17284  0027  1C8F               	btfss	15,1	;volatile
 17285  0028  282A               	goto	u319_21
 17286  0029  282B               	goto	u319_20
 17287  002A                     u319_21:	
 17288  002A  2832               	goto	i1l633
 17289  002B                     u319_20:	
 17290  002B                     i1l6002:	
 17291                           
 17292                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             i2c1_driver_busCollisionISR();
 17293  002B  0020               	movlb	0	; select bank0
 17294  002C  0850               	movf	_i2c1_driver_busCollisionISR+1,w
 17295  002D  008A               	movwf	10
 17296  002E  084F               	movf	_i2c1_driver_busCollisionISR,w
 17297  002F  000A               	callw
 17298  0030  3180               	pagesel	$
 17299                           
 17300                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 17301  0031  2859               	goto	i1l642
 17302  0032                     i1l633:	
 17303                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 17304                           
 17305  0032  1C19               	btfss	25,0	;volatile
 17306  0033  2835               	goto	u320_21
 17307  0034  2836               	goto	u320_20
 17308  0035                     u320_21:	
 17309  0035  2841               	goto	i1l635
 17310  0036                     u320_20:	
 17311  0036                     i1l6004:	
 17312  0036  1C0F               	btfss	15,0	;volatile
 17313  0037  2839               	goto	u321_21
 17314  0038  283A               	goto	u321_20
 17315  0039                     u321_21:	
 17316  0039  2841               	goto	i1l635
 17317  003A                     u321_20:	
 17318  003A                     i1l6006:	
 17319                           
 17320                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             i2c1_driver_i2cISR();
 17321  003A  0020               	movlb	0	; select bank0
 17322  003B  084E               	movf	_i2c1_driver_i2cISR+1,w
 17323  003C  008A               	movwf	10
 17324  003D  084D               	movf	_i2c1_driver_i2cISR,w
 17325  003E  000A               	callw
 17326  003F  3180               	pagesel	$
 17327                           
 17328                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 17329  0040  2859               	goto	i1l642
 17330  0041                     i1l635:	
 17331                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE4bits.TMR1IE == 1 && PI
      +                          R4bits.TMR1IF == 1)
 17332                           
 17333  0041  1C1A               	btfss	26,0	;volatile
 17334  0042  2844               	goto	u322_21
 17335  0043  2845               	goto	u322_20
 17336  0044                     u322_21:	
 17337  0044  284D               	goto	i1l637
 17338  0045                     u322_20:	
 17339  0045                     i1l6008:	
 17340  0045  1C10               	btfss	16,0	;volatile
 17341  0046  2848               	goto	u323_21
 17342  0047  2849               	goto	u323_20
 17343  0048                     u323_21:	
 17344  0048  284D               	goto	i1l637
 17345  0049                     u323_20:	
 17346  0049                     i1l6010:	
 17347                           
 17348                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             TMR1_ISR();
 17349  0049  318C  2428  3180   	fcall	_TMR1_ISR
 17350                           
 17351                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 17352  004C  2859               	goto	i1l642
 17353  004D                     i1l637:	
 17354                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE4bits.TMR2IE == 1 && PI
      +                          R4bits.TMR2IF == 1)
 17355                           
 17356  004D  1C9A               	btfss	26,1	;volatile
 17357  004E  2850               	goto	u324_21
 17358  004F  2851               	goto	u324_20
 17359  0050                     u324_21:	
 17360  0050  2859               	goto	i1l636
 17361  0051                     u324_20:	
 17362  0051                     i1l6012:	
 17363  0051  1C90               	btfss	16,1	;volatile
 17364  0052  2854               	goto	u325_21
 17365  0053  2855               	goto	u325_20
 17366  0054                     u325_21:	
 17367  0054  2859               	goto	i1l636
 17368  0055                     u325_20:	
 17369  0055                     i1l6014:	
 17370                           
 17371                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             TMR2_ISR();
 17372  0055  318B  233E  3180   	fcall	_TMR2_ISR
 17373                           
 17374                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 17375  0058  2859               	goto	i1l642
 17376  0059                     i1l636:	
 17377  0059                     i1l642:	
 17378  0059  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 17379  005A  0009               	retfie
 17380  005B                     __end_of_INTERRUPT_InterruptManager:	
 17381                           
 17382                           	psect	text57
 17383  09EA                     __ptext57:	
 17384 ;; *************** function _i2c_busCollisionISR *****************
 17385 ;; Defined at:
 17386 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 17387 ;; Parameters:    Size  Location     Type
 17388 ;;		None
 17389 ;; Auto vars:     Size  Location     Type
 17390 ;;		None
 17391 ;; Return value:  Size  Location     Type
 17392 ;;                  1    wreg      void 
 17393 ;; Registers used:
 17394 ;;		status,2, status,0, pclath, cstack
 17395 ;; Tracked objects:
 17396 ;;		On entry : 0/0
 17397 ;;		On exit  : 0/0
 17398 ;;		Unchanged: 0/0
 17399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17404 ;;Total ram usage:        0 bytes
 17405 ;; Hardware stack levels used:    1
 17406 ;; Hardware stack levels required when called:    1
 17407 ;; This function calls:
 17408 ;;		_i2c1_driver_clearBusCollision
 17409 ;; This function is called by:
 17410 ;;		_i2c_open
 17411 ;;		_INTERRUPT_InterruptManager
 17412 ;; This function uses a non-reentrant model
 17413 ;;
 17414                           
 17415                           
 17416                           ;psect for function _i2c_busCollisionISR
 17417  09EA                     _i2c_busCollisionISR:	
 17418  09EA                     i1l5826:	
 17419                           ;incstack = 0
 17420                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 17421                           
 17422                           
 17423                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
 17424  09EA  3189  21DC  3189   	fcall	_i2c1_driver_clearBusCollision
 17425  09ED                     i1l1462:	
 17426  09ED  0008               	return
 17427  09EE                     __end_of_i2c_busCollisionISR:	
 17428                           
 17429                           	psect	text58
 17430  09DC                     __ptext58:	
 17431 ;; *************** function _i2c1_driver_clearBusCollision *****************
 17432 ;; Defined at:
 17433 ;;		line 254 in file "mcc_generated_files/i2c1_driver.c"
 17434 ;; Parameters:    Size  Location     Type
 17435 ;;		None
 17436 ;; Auto vars:     Size  Location     Type
 17437 ;;		None
 17438 ;; Return value:  Size  Location     Type
 17439 ;;                  1    wreg      void 
 17440 ;; Registers used:
 17441 ;;		None
 17442 ;; Tracked objects:
 17443 ;;		On entry : 0/0
 17444 ;;		On exit  : 0/0
 17445 ;;		Unchanged: 0/0
 17446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17451 ;;Total ram usage:        0 bytes
 17452 ;; Hardware stack levels used:    1
 17453 ;; This function calls:
 17454 ;;		Nothing
 17455 ;; This function is called by:
 17456 ;;		_i2c_busCollisionISR
 17457 ;; This function uses a non-reentrant model
 17458 ;;
 17459                           
 17460                           
 17461                           ;psect for function _i2c1_driver_clearBusCollision
 17462  09DC                     _i2c1_driver_clearBusCollision:	
 17463  09DC                     i1l5332:	
 17464                           ;incstack = 0
 17465                           ; Regs used in _i2c1_driver_clearBusCollision: []
 17466                           
 17467                           
 17468                           ;mcc_generated_files/i2c1_driver.c: 256:     PIR3bits.BCL1IF = 0;
 17469  09DC  002E               	movlb	14	; select bank14
 17470  09DD  108F               	bcf	15,1	;volatile
 17471  09DE                     i1l834:	
 17472  09DE  0008               	return
 17473  09DF                     __end_of_i2c1_driver_clearBusCollision:	
 17474                           
 17475                           	psect	text59
 17476  0E3C                     __ptext59:	
 17477 ;; *************** function _i2c_ISR *****************
 17478 ;; Defined at:
 17479 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 17480 ;; Parameters:    Size  Location     Type
 17481 ;;		None
 17482 ;; Auto vars:     Size  Location     Type
 17483 ;;		None
 17484 ;; Return value:  Size  Location     Type
 17485 ;;                  1    wreg      void 
 17486 ;; Registers used:
 17487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17488 ;; Tracked objects:
 17489 ;;		On entry : 0/0
 17490 ;;		On exit  : 0/0
 17491 ;;		Unchanged: 0/0
 17492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17495 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17496 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17497 ;;Total ram usage:        3 bytes
 17498 ;; Hardware stack levels used:    1
 17499 ;; Hardware stack levels required when called:    4
 17500 ;; This function calls:
 17501 ;;		_do_I2C_DO_ACK
 17502 ;;		_do_I2C_DO_ADDRESS_NACK
 17503 ;;		_do_I2C_DO_NACK_RESTART
 17504 ;;		_do_I2C_DO_NACK_STOP
 17505 ;;		_do_I2C_IDLE
 17506 ;;		_do_I2C_RCEN
 17507 ;;		_do_I2C_RESET
 17508 ;;		_do_I2C_RX
 17509 ;;		_do_I2C_SEND_ADR_READ
 17510 ;;		_do_I2C_SEND_ADR_WRITE
 17511 ;;		_do_I2C_SEND_RESTART
 17512 ;;		_do_I2C_SEND_RESTART_READ
 17513 ;;		_do_I2C_SEND_RESTART_WRITE
 17514 ;;		_do_I2C_SEND_STOP
 17515 ;;		_do_I2C_TX
 17516 ;;		_do_I2C_TX_EMPTY
 17517 ;;		_i2c1_driver_isNACK
 17518 ;;		_mssp1_clearIRQ
 17519 ;; This function is called by:
 17520 ;;		_i2c_open
 17521 ;;		_i2c_poller
 17522 ;;		_INTERRUPT_InterruptManager
 17523 ;; This function uses a non-reentrant model
 17524 ;;
 17525                           
 17526                           
 17527                           ;psect for function _i2c_ISR
 17528  0E3C                     _i2c_ISR:	
 17529  0E3C                     i1l5816:	
 17530                           ;incstack = 0
 17531                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17532                           
 17533                           
 17534                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
 17535  0E3C  3189  21D9  318E   	fcall	_mssp1_clearIRQ
 17536  0E3F                     i1l5818:	
 17537                           
 17538                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
 17539  0E3F  0021               	movlb	1	; select bank1
 17540  0E40  1DA0               	btfss	_i2c_status^(0+128),3
 17541  0E41  2E43               	goto	u298_21
 17542  0E42  2E44               	goto	u298_20
 17543  0E43                     u298_21:	
 17544  0E43  2E51               	goto	i1l5824
 17545  0E44                     u298_20:	
 17546  0E44                     i1l5820:	
 17547  0E44  318A  2247  318E   	fcall	_i2c1_driver_isNACK
 17548  0E47  1C03               	btfss	3,0
 17549  0E48  2E4A               	goto	u299_21
 17550  0E49  2E4B               	goto	u299_20
 17551  0E4A                     u299_21:	
 17552  0E4A  2E51               	goto	i1l5824
 17553  0E4B                     u299_20:	
 17554  0E4B                     i1l5822:	
 17555                           
 17556                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
 17557  0E4B  300F               	movlw	15
 17558  0E4C  0020               	movlb	0	; select bank0
 17559  0E4D  00A0               	movwf	??_i2c_ISR
 17560  0E4E  0820               	movf	??_i2c_ISR,w
 17561  0E4F  0021               	movlb	1	; select bank1
 17562  0E50  00A9               	movwf	(_i2c_status^(0+128)+9)
 17563  0E51                     i1l5824:	
 17564                           
 17565                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
 17566  0E51  0021               	movlb	1	; select bank1
 17567  0E52  0829               	movf	(_i2c_status^(0+128)+9),w
 17568  0E53  0020               	movlb	0	; select bank0
 17569  0E54  00A0               	movwf	??_i2c_ISR
 17570  0E55  01A1               	clrf	??_i2c_ISR+1
 17571  0E56  35A0               	lslf	??_i2c_ISR,f
 17572  0E57  0DA1               	rlf	??_i2c_ISR+1,f
 17573  0E58  3000               	movlw	low (_fsmStateTable| (0+32768))
 17574  0E59  0720               	addwf	??_i2c_ISR,w
 17575  0E5A  0084               	movwf	4
 17576  0E5B  3090               	movlw	high (_fsmStateTable| (0+32768))
 17577  0E5C  3D21               	addwfc	??_i2c_ISR+1,w
 17578  0E5D  0085               	movwf	5
 17579  0E5E  3F01               	moviw [1]fsr0
 17580  0E5F  008A               	movwf	10
 17581  0E60  3F00               	moviw [0]fsr0
 17582  0E61  000A               	callw
 17583  0E62  318E               	pagesel	$
 17584  0E63  0020               	movlb	0	; select bank0
 17585  0E64  00A2               	movwf	??_i2c_ISR+2
 17586  0E65  0822               	movf	??_i2c_ISR+2,w
 17587  0E66  0021               	movlb	1	; select bank1
 17588  0E67  00A9               	movwf	(_i2c_status^(0+128)+9)
 17589  0E68                     i1l1459:	
 17590  0E68  0008               	return
 17591  0E69                     __end_of_i2c_ISR:	
 17592                           
 17593                           	psect	text60
 17594  09D9                     __ptext60:	
 17595 ;; *************** function _mssp1_clearIRQ *****************
 17596 ;; Defined at:
 17597 ;;		line 54 in file "mcc_generated_files/i2c1_driver.c"
 17598 ;; Parameters:    Size  Location     Type
 17599 ;;		None
 17600 ;; Auto vars:     Size  Location     Type
 17601 ;;		None
 17602 ;; Return value:  Size  Location     Type
 17603 ;;                  1    wreg      void 
 17604 ;; Registers used:
 17605 ;;		None
 17606 ;; Tracked objects:
 17607 ;;		On entry : 0/0
 17608 ;;		On exit  : 0/0
 17609 ;;		Unchanged: 0/0
 17610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17615 ;;Total ram usage:        0 bytes
 17616 ;; Hardware stack levels used:    1
 17617 ;; This function calls:
 17618 ;;		Nothing
 17619 ;; This function is called by:
 17620 ;;		_i2c_ISR
 17621 ;;		_i2c_open
 17622 ;;		_i2c_close
 17623 ;; This function uses a non-reentrant model
 17624 ;;
 17625                           
 17626                           
 17627                           ;psect for function _mssp1_clearIRQ
 17628  09D9                     _mssp1_clearIRQ:	
 17629  09D9                     i1l5330:	
 17630                           ;incstack = 0
 17631                           ; Regs used in _mssp1_clearIRQ: []
 17632                           
 17633                           
 17634                           ;mcc_generated_files/i2c1_driver.c: 56:         SSP1CON1 = 0x28;
 17635  09D9  002E               	movlb	14	; select bank14
 17636  09DA  100F               	bcf	15,0	;volatile
 17637  09DB                     i1l738:	
 17638  09DB  0008               	return
 17639  09DC                     __end_of_mssp1_clearIRQ:	
 17640                           
 17641                           	psect	text61
 17642  070B                     __ptext61:	
 17643 ;; *************** function _do_I2C_RX *****************
 17644 ;; Defined at:
 17645 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 17646 ;; Parameters:    Size  Location     Type
 17647 ;;		None
 17648 ;; Auto vars:     Size  Location     Type
 17649 ;;		None
 17650 ;; Return value:  Size  Location     Type
 17651 ;;                  1    wreg      enum E12722
 17652 ;; Registers used:
 17653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17654 ;; Tracked objects:
 17655 ;;		On entry : 0/0
 17656 ;;		On exit  : 0/0
 17657 ;;		Unchanged: 0/0
 17658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17661 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17662 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17663 ;;Total ram usage:        3 bytes
 17664 ;; Hardware stack levels used:    1
 17665 ;; Hardware stack levels required when called:    3
 17666 ;; This function calls:
 17667 ;;		Absolute function
 17668 ;;		_do_I2C_DO_NACK_RESTART
 17669 ;;		_do_I2C_DO_NACK_STOP
 17670 ;;		_i2c1_driver_getRXData
 17671 ;;		_i2c1_driver_sendACK
 17672 ;;		_i2c_restartWrite
 17673 ;;		_rd1RegCompleteHandler
 17674 ;;		_rd2RegCompleteHandler
 17675 ;;		_rdBlkRegCompleteHandler
 17676 ;;		_returnReset
 17677 ;;		_returnStop
 17678 ;;		_wr1RegCompleteHandler
 17679 ;;		_wr2RegCompleteHandler
 17680 ;; This function is called by:
 17681 ;;		_i2c_ISR
 17682 ;; This function uses a non-reentrant model
 17683 ;;
 17684                           
 17685                           
 17686                           ;psect for function _do_I2C_RX
 17687  070B                     _do_I2C_RX:	
 17688  070B                     i1l5476:	
 17689                           ;incstack = 0
 17690                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17691                           
 17692                           
 17693                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
 17694  070B  3189  21D3  3187   	fcall	_i2c1_driver_getRXData
 17695  070E  00FA               	movwf	??_do_I2C_RX
 17696  070F  0021               	movlb	1	; select bank1
 17697  0710  0822               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 17698  0711  0086               	movwf	6
 17699  0712  0187               	clrf	7
 17700  0713  087A               	movf	??_do_I2C_RX,w
 17701  0714  0081               	movwf	1
 17702  0715                     i1l5478:	
 17703  0715  3001               	movlw	1
 17704  0716  00FA               	movwf	??_do_I2C_RX
 17705  0717  087A               	movf	??_do_I2C_RX,w
 17706  0718  07A2               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 17707  0719                     i1l5480:	
 17708                           
 17709                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
 17710  0719  3001               	movlw	1
 17711  071A  02A3               	subwf	(_i2c_status^(0+128)+3),f
 17712  071B  3000               	movlw	0
 17713  071C  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 17714  071D  0823               	movf	(_i2c_status^(0+128)+3),w
 17715  071E  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 17716  071F  1903               	btfsc	3,2
 17717  0720  2F22               	goto	u273_21
 17718  0721  2F23               	goto	u273_20
 17719  0722                     u273_21:	
 17720  0722  2F28               	goto	i1l1434
 17721  0723                     u273_20:	
 17722  0723                     i1l5482:	
 17723                           
 17724                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
 17725  0723  3189  21E2  3187   	fcall	_i2c1_driver_sendACK
 17726  0726                     i1l5484:	
 17727                           
 17728                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
 17729  0726  3005               	movlw	5
 17730  0727  2F54               	goto	i1l1435
 17731  0728                     i1l1434:	
 17732                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
 17733                           
 17734                           
 17735                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
 17736  0728  1520               	bsf	_i2c_status^(0+128),2
 17737                           
 17738                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 17739  0729  2F32               	goto	i1l5500
 17740  072A                     i1l5490:	
 17741                           
 17742                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
 17743  072A  318A  2216  3187   	fcall	_do_I2C_DO_NACK_RESTART
 17744  072D  2F54               	goto	i1l1435
 17745  072E                     i1l5494:	
 17746                           
 17747                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
 17748  072E  318A  2211  3187   	fcall	_do_I2C_DO_NACK_STOP
 17749  0731  2F54               	goto	i1l1435
 17750  0732                     i1l5500:	
 17751  0732  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 17752  0733  00FA               	movwf	??_do_I2C_RX
 17753  0734  087A               	movf	??_do_I2C_RX,w
 17754  0735  00F9               	movwf	rdBlkRegCompleteHandler@p
 17755  0736  300B               	movlw	11
 17756  0737  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 17757  0738  0086               	movwf	6
 17758  0739  0187               	clrf	7
 17759  073A  3F41               	moviw [1]fsr1
 17760  073B  008A               	movwf	10
 17761  073C  3F40               	moviw [0]fsr1
 17762  073D  000A               	callw
 17763  073E  3187               	pagesel	$
 17764  073F  00FB               	movwf	??_do_I2C_RX+1
 17765  0740  01FC               	clrf	??_do_I2C_RX+2
 17766                           
 17767                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17768                           ; Switch size 1, requested type "simple"
 17769                           ; Number of cases is 1, Range of values is 0 to 0
 17770                           ; switch strategies available:
 17771                           ; Name         Instructions Cycles
 17772                           ; simple_byte            4     3 (average)
 17773                           ; direct_byte            8     6 (fixed)
 17774                           ; jumptable            260     6 (fixed)
 17775                           ;	Chosen strategy is simple_byte
 17776  0741  087C               	movf	??_do_I2C_RX+2,w
 17777  0742  3A00               	xorlw	0	; case 0
 17778  0743  1903               	skipnz
 17779  0744  2F46               	goto	i1l7662
 17780  0745  2F2E               	goto	i1l5494
 17781  0746                     i1l7662:	
 17782                           
 17783                           ; Switch size 1, requested type "simple"
 17784                           ; Number of cases is 4, Range of values is 1 to 4
 17785                           ; switch strategies available:
 17786                           ; Name         Instructions Cycles
 17787                           ; simple_byte           13     7 (average)
 17788                           ; direct_byte           17     9 (fixed)
 17789                           ; jumptable            263     9 (fixed)
 17790                           ;	Chosen strategy is simple_byte
 17791  0746  087B               	movf	??_do_I2C_RX+1,w
 17792  0747  3A01               	xorlw	1	; case 1
 17793  0748  1903               	skipnz
 17794  0749  2F2E               	goto	i1l5494
 17795  074A  3A03               	xorlw	3	; case 2
 17796  074B  1903               	skipnz
 17797  074C  2F2A               	goto	i1l5490
 17798  074D  3A01               	xorlw	1	; case 3
 17799  074E  1903               	skipnz
 17800  074F  2F2A               	goto	i1l5490
 17801  0750  3A07               	xorlw	7	; case 4
 17802  0751  1903               	skipnz
 17803  0752  2F2E               	goto	i1l5494
 17804  0753  2F2E               	goto	i1l5494
 17805  0754                     i1l1435:	
 17806  0754  0008               	return
 17807  0755                     __end_of_do_I2C_RX:	
 17808                           
 17809                           	psect	text62
 17810  061D                     __ptext62:	
 17811 ;; *************** function _do_I2C_TX *****************
 17812 ;; Defined at:
 17813 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 17814 ;; Parameters:    Size  Location     Type
 17815 ;;		None
 17816 ;; Auto vars:     Size  Location     Type
 17817 ;;		None
 17818 ;; Return value:  Size  Location     Type
 17819 ;;                  1    wreg      enum E12722
 17820 ;; Registers used:
 17821 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17822 ;; Tracked objects:
 17823 ;;		On entry : 0/0
 17824 ;;		On exit  : 0/0
 17825 ;;		Unchanged: 0/0
 17826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17829 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17830 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17831 ;;Total ram usage:        3 bytes
 17832 ;; Hardware stack levels used:    1
 17833 ;; Hardware stack levels required when called:    3
 17834 ;; This function calls:
 17835 ;;		Absolute function
 17836 ;;		_do_I2C_SEND_RESTART_READ
 17837 ;;		_do_I2C_SEND_RESTART_WRITE
 17838 ;;		_do_I2C_SEND_STOP
 17839 ;;		_i2c1_driver_TXData
 17840 ;;		_i2c1_driver_isNACK
 17841 ;;		_i2c_restartWrite
 17842 ;;		_rd1RegCompleteHandler
 17843 ;;		_rd2RegCompleteHandler
 17844 ;;		_rdBlkRegCompleteHandler
 17845 ;;		_returnReset
 17846 ;;		_returnStop
 17847 ;;		_wr1RegCompleteHandler
 17848 ;;		_wr2RegCompleteHandler
 17849 ;; This function is called by:
 17850 ;;		_i2c_ISR
 17851 ;; This function uses a non-reentrant model
 17852 ;;
 17853                           
 17854                           
 17855                           ;psect for function _do_I2C_TX
 17856  061D                     _do_I2C_TX:	
 17857  061D                     i1l5442:	
 17858                           ;incstack = 0
 17859                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17860                           
 17861                           
 17862                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
 17863  061D  318A  2247  3186   	fcall	_i2c1_driver_isNACK
 17864  0620  1C03               	btfss	3,0
 17865  0621  2E23               	goto	u271_21
 17866  0622  2E24               	goto	u271_20
 17867  0623                     u271_21:	
 17868  0623  2E54               	goto	i1l1418
 17869  0624                     u271_20:	
 17870  0624  2E31               	goto	i1l5460
 17871  0625                     i1l5446:	
 17872                           
 17873                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
 17874  0625  3189  21F8  3186   	fcall	_do_I2C_SEND_RESTART_READ
 17875  0628  2E70               	goto	i1l1421
 17876  0629                     i1l5450:	
 17877                           
 17878                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
 17879  0629  3189  21FD  3186   	fcall	_do_I2C_SEND_RESTART_WRITE
 17880  062C  2E70               	goto	i1l1421
 17881  062D                     i1l5454:	
 17882                           
 17883                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
 17884  062D  318A  2207  3186   	fcall	_do_I2C_SEND_STOP
 17885  0630  2E70               	goto	i1l1421
 17886  0631                     i1l5460:	
 17887  0631  0021               	movlb	1	; select bank1
 17888  0632  083A               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 17889  0633  00FA               	movwf	??_do_I2C_TX
 17890  0634  087A               	movf	??_do_I2C_TX,w
 17891  0635  00F9               	movwf	rdBlkRegCompleteHandler@p
 17892  0636  3011               	movlw	17
 17893  0637  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 17894  0638  0086               	movwf	6
 17895  0639  0187               	clrf	7
 17896  063A  3F41               	moviw [1]fsr1
 17897  063B  008A               	movwf	10
 17898  063C  3F40               	moviw [0]fsr1
 17899  063D  000A               	callw
 17900  063E  3186               	pagesel	$
 17901  063F  00FB               	movwf	??_do_I2C_TX+1
 17902  0640  01FC               	clrf	??_do_I2C_TX+2
 17903                           
 17904                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17905                           ; Switch size 1, requested type "simple"
 17906                           ; Number of cases is 1, Range of values is 0 to 0
 17907                           ; switch strategies available:
 17908                           ; Name         Instructions Cycles
 17909                           ; simple_byte            4     3 (average)
 17910                           ; direct_byte            8     6 (fixed)
 17911                           ; jumptable            260     6 (fixed)
 17912                           ;	Chosen strategy is simple_byte
 17913  0641  087C               	movf	??_do_I2C_TX+2,w
 17914  0642  3A00               	xorlw	0	; case 0
 17915  0643  1903               	skipnz
 17916  0644  2E46               	goto	i1l7664
 17917  0645  2E2D               	goto	i1l5454
 17918  0646                     i1l7664:	
 17919                           
 17920                           ; Switch size 1, requested type "simple"
 17921                           ; Number of cases is 4, Range of values is 1 to 4
 17922                           ; switch strategies available:
 17923                           ; Name         Instructions Cycles
 17924                           ; simple_byte           13     7 (average)
 17925                           ; direct_byte           17     9 (fixed)
 17926                           ; jumptable            263     9 (fixed)
 17927                           ;	Chosen strategy is simple_byte
 17928  0646  087B               	movf	??_do_I2C_TX+1,w
 17929  0647  3A01               	xorlw	1	; case 1
 17930  0648  1903               	skipnz
 17931  0649  2E2D               	goto	i1l5454
 17932  064A  3A03               	xorlw	3	; case 2
 17933  064B  1903               	skipnz
 17934  064C  2E25               	goto	i1l5446
 17935  064D  3A01               	xorlw	1	; case 3
 17936  064E  1903               	skipnz
 17937  064F  2E29               	goto	i1l5450
 17938  0650  3A07               	xorlw	7	; case 4
 17939  0651  1903               	skipnz
 17940  0652  2E2D               	goto	i1l5454
 17941  0653  2E2D               	goto	i1l5454
 17942  0654                     i1l1418:	
 17943                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
 17944                           
 17945                           
 17946                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
 17947  0654  0021               	movlb	1	; select bank1
 17948  0655  11A0               	bcf	_i2c_status^(0+128),3
 17949  0656                     i1l5462:	
 17950                           
 17951                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
 17952  0656  3002               	movlw	2
 17953  0657  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 17954  0658  0086               	movwf	6
 17955  0659  0187               	clrf	7
 17956  065A  3F40               	moviw [0]fsr1
 17957  065B  0084               	movwf	4
 17958  065C  0185               	clrf	5
 17959  065D  0A81               	incf	1,f
 17960  065E  0800               	movf	0,w
 17961  065F  3189  21EE  3186   	fcall	_i2c1_driver_TXData
 17962  0662                     i1l5464:	
 17963                           
 17964                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
 17965  0662  3001               	movlw	1
 17966  0663  0021               	movlb	1	; select bank1
 17967  0664  02A3               	subwf	(_i2c_status^(0+128)+3),f
 17968  0665  3000               	movlw	0
 17969  0666  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 17970  0667  0823               	movf	(_i2c_status^(0+128)+3),w
 17971  0668  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 17972  0669  1D03               	btfss	3,2
 17973  066A  2E6C               	goto	u272_21
 17974  066B  2E6D               	goto	u272_20
 17975  066C                     u272_21:	
 17976  066C  2E6F               	goto	i1l5468
 17977  066D                     u272_20:	
 17978  066D                     i1l5466:	
 17979  066D  3006               	movlw	6
 17980  066E  2E70               	goto	i1l1421
 17981  066F                     i1l5468:	
 17982  066F  3003               	movlw	3
 17983  0670                     i1l1421:	
 17984  0670  0008               	return
 17985  0671                     __end_of_do_I2C_TX:	
 17986                           
 17987                           	psect	text63
 17988  0E10                     __ptext63:	
 17989 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 17990 ;; Defined at:
 17991 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 17992 ;; Parameters:    Size  Location     Type
 17993 ;;		None
 17994 ;; Auto vars:     Size  Location     Type
 17995 ;;		None
 17996 ;; Return value:  Size  Location     Type
 17997 ;;                  1    wreg      enum E12722
 17998 ;; Registers used:
 17999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18000 ;; Tracked objects:
 18001 ;;		On entry : 0/0
 18002 ;;		On exit  : 0/0
 18003 ;;		Unchanged: 0/0
 18004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18007 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18008 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18009 ;;Total ram usage:        3 bytes
 18010 ;; Hardware stack levels used:    1
 18011 ;; Hardware stack levels required when called:    3
 18012 ;; This function calls:
 18013 ;;		Absolute function
 18014 ;;		_do_I2C_SEND_RESTART
 18015 ;;		_do_I2C_SEND_STOP
 18016 ;;		_i2c_restartWrite
 18017 ;;		_rd1RegCompleteHandler
 18018 ;;		_rd2RegCompleteHandler
 18019 ;;		_rdBlkRegCompleteHandler
 18020 ;;		_returnReset
 18021 ;;		_returnStop
 18022 ;;		_wr1RegCompleteHandler
 18023 ;;		_wr2RegCompleteHandler
 18024 ;; This function is called by:
 18025 ;;		_i2c_ISR
 18026 ;; This function uses a non-reentrant model
 18027 ;;
 18028                           
 18029                           
 18030                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 18031  0E10                     _do_I2C_DO_ADDRESS_NACK:	
 18032  0E10                     i1l5420:	
 18033                           ;incstack = 0
 18034                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18035                           
 18036                           
 18037                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
 18038  0E10  0021               	movlb	1	; select bank1
 18039  0E11  11A0               	bcf	_i2c_status^(0+128),3
 18040  0E12                     i1l5422:	
 18041                           
 18042                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
 18043  0E12  3002               	movlw	2
 18044  0E13  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 18045  0E14  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 18046  0E15  00AA               	movwf	(_i2c_status^(0+128)+10)
 18047                           
 18048                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
 18049  0E16  2E1F               	goto	i1l5434
 18050  0E17                     i1l5424:	
 18051                           
 18052                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
 18053  0E17  318A  2202  318E   	fcall	_do_I2C_SEND_RESTART
 18054  0E1A  2E3B               	goto	i1l1413
 18055  0E1B                     i1l5428:	
 18056                           
 18057                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
 18058  0E1B  318A  2207  318E   	fcall	_do_I2C_SEND_STOP
 18059  0E1E  2E3B               	goto	i1l1413
 18060  0E1F                     i1l5434:	
 18061  0E1F  0839               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 18062  0E20  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 18063  0E21  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 18064  0E22  00F9               	movwf	rdBlkRegCompleteHandler@p
 18065  0E23  300F               	movlw	15
 18066  0E24  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 18067  0E25  0086               	movwf	6
 18068  0E26  0187               	clrf	7
 18069  0E27  3F41               	moviw [1]fsr1
 18070  0E28  008A               	movwf	10
 18071  0E29  3F40               	moviw [0]fsr1
 18072  0E2A  000A               	callw
 18073  0E2B  318E               	pagesel	$
 18074  0E2C  00FB               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
 18075  0E2D  01FC               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
 18076                           
 18077                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18078                           ; Switch size 1, requested type "simple"
 18079                           ; Number of cases is 1, Range of values is 0 to 0
 18080                           ; switch strategies available:
 18081                           ; Name         Instructions Cycles
 18082                           ; simple_byte            4     3 (average)
 18083                           ; direct_byte            8     6 (fixed)
 18084                           ; jumptable            260     6 (fixed)
 18085                           ;	Chosen strategy is simple_byte
 18086  0E2E  087C               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
 18087  0E2F  3A00               	xorlw	0	; case 0
 18088  0E30  1903               	skipnz
 18089  0E31  2E33               	goto	i1l7666
 18090  0E32  2E1B               	goto	i1l5428
 18091  0E33                     i1l7666:	
 18092                           
 18093                           ; Switch size 1, requested type "simple"
 18094                           ; Number of cases is 2, Range of values is 2 to 3
 18095                           ; switch strategies available:
 18096                           ; Name         Instructions Cycles
 18097                           ; simple_byte            7     4 (average)
 18098                           ; direct_byte           13     9 (fixed)
 18099                           ; jumptable            263     9 (fixed)
 18100                           ;	Chosen strategy is simple_byte
 18101  0E33  087B               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
 18102  0E34  3A02               	xorlw	2	; case 2
 18103  0E35  1903               	skipnz
 18104  0E36  2E17               	goto	i1l5424
 18105  0E37  3A01               	xorlw	1	; case 3
 18106  0E38  1903               	skipnz
 18107  0E39  2E17               	goto	i1l5424
 18108  0E3A  2E1B               	goto	i1l5428
 18109  0E3B                     i1l1413:	
 18110  0E3B  0008               	return
 18111  0E3C                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 18112                           
 18113                           	psect	text64
 18114  0A16                     __ptext64:	
 18115 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 18116 ;; Defined at:
 18117 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 18118 ;; Parameters:    Size  Location     Type
 18119 ;;		None
 18120 ;; Auto vars:     Size  Location     Type
 18121 ;;		None
 18122 ;; Return value:  Size  Location     Type
 18123 ;;                  1    wreg      enum E12722
 18124 ;; Registers used:
 18125 ;;		wreg, status,2, status,0, pclath, cstack
 18126 ;; Tracked objects:
 18127 ;;		On entry : 0/0
 18128 ;;		On exit  : 0/0
 18129 ;;		Unchanged: 0/0
 18130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18135 ;;Total ram usage:        0 bytes
 18136 ;; Hardware stack levels used:    1
 18137 ;; Hardware stack levels required when called:    1
 18138 ;; This function calls:
 18139 ;;		_i2c1_driver_sendNACK
 18140 ;; This function is called by:
 18141 ;;		_do_I2C_RX
 18142 ;;		_i2c_ISR
 18143 ;; This function uses a non-reentrant model
 18144 ;;
 18145                           
 18146                           
 18147                           ;psect for function _do_I2C_DO_NACK_RESTART
 18148  0A16                     _do_I2C_DO_NACK_RESTART:	
 18149  0A16                     i1l5042:	
 18150                           ;incstack = 0
 18151                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 18152                           
 18153                           
 18154                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
 18155  0A16  3189  21E6  318A   	fcall	_i2c1_driver_sendNACK
 18156  0A19                     i1l5044:	
 18157                           
 18158                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
 18159  0A19  3009               	movlw	9
 18160  0A1A                     i1l1407:	
 18161  0A1A  0008               	return
 18162  0A1B                     __end_of_do_I2C_DO_NACK_RESTART:	
 18163                           
 18164                           	psect	text65
 18165  0A11                     __ptext65:	
 18166 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 18167 ;; Defined at:
 18168 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 18169 ;; Parameters:    Size  Location     Type
 18170 ;;		None
 18171 ;; Auto vars:     Size  Location     Type
 18172 ;;		None
 18173 ;; Return value:  Size  Location     Type
 18174 ;;                  1    wreg      enum E12722
 18175 ;; Registers used:
 18176 ;;		wreg, status,2, status,0, pclath, cstack
 18177 ;; Tracked objects:
 18178 ;;		On entry : 0/0
 18179 ;;		On exit  : 0/0
 18180 ;;		Unchanged: 0/0
 18181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18186 ;;Total ram usage:        0 bytes
 18187 ;; Hardware stack levels used:    1
 18188 ;; Hardware stack levels required when called:    1
 18189 ;; This function calls:
 18190 ;;		_i2c1_driver_sendNACK
 18191 ;; This function is called by:
 18192 ;;		_do_I2C_RX
 18193 ;;		_i2c_ISR
 18194 ;; This function uses a non-reentrant model
 18195 ;;
 18196                           
 18197                           
 18198                           ;psect for function _do_I2C_DO_NACK_STOP
 18199  0A11                     _do_I2C_DO_NACK_STOP:	
 18200  0A11                     i1l5036:	
 18201                           ;incstack = 0
 18202                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 18203                           
 18204                           
 18205                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
 18206  0A11  3189  21E6  318A   	fcall	_i2c1_driver_sendNACK
 18207  0A14                     i1l5038:	
 18208                           
 18209                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
 18210  0A14  300A               	movlw	10
 18211  0A15                     i1l1404:	
 18212  0A15  0008               	return
 18213  0A16                     __end_of_do_I2C_DO_NACK_STOP:	
 18214                           
 18215                           	psect	text66
 18216  0A0C                     __ptext66:	
 18217 ;; *************** function _do_I2C_DO_ACK *****************
 18218 ;; Defined at:
 18219 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 18220 ;; Parameters:    Size  Location     Type
 18221 ;;		None
 18222 ;; Auto vars:     Size  Location     Type
 18223 ;;		None
 18224 ;; Return value:  Size  Location     Type
 18225 ;;                  1    wreg      enum E12722
 18226 ;; Registers used:
 18227 ;;		wreg, status,2, status,0, pclath, cstack
 18228 ;; Tracked objects:
 18229 ;;		On entry : 0/0
 18230 ;;		On exit  : 0/0
 18231 ;;		Unchanged: 0/0
 18232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18237 ;;Total ram usage:        0 bytes
 18238 ;; Hardware stack levels used:    1
 18239 ;; Hardware stack levels required when called:    1
 18240 ;; This function calls:
 18241 ;;		_i2c1_driver_sendACK
 18242 ;; This function is called by:
 18243 ;;		_i2c_ISR
 18244 ;; This function uses a non-reentrant model
 18245 ;;
 18246                           
 18247                           
 18248                           ;psect for function _do_I2C_DO_ACK
 18249  0A0C                     _do_I2C_DO_ACK:	
 18250  0A0C                     i1l5414:	
 18251                           ;incstack = 0
 18252                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 18253                           
 18254                           
 18255                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
 18256  0A0C  3189  21E2  318A   	fcall	_i2c1_driver_sendACK
 18257  0A0F                     i1l5416:	
 18258                           
 18259                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
 18260  0A0F  3005               	movlw	5
 18261  0A10                     i1l1401:	
 18262  0A10  0008               	return
 18263  0A11                     __end_of_do_I2C_DO_ACK:	
 18264                           
 18265                           	psect	text67
 18266  0A39                     __ptext67:	
 18267 ;; *************** function _do_I2C_RCEN *****************
 18268 ;; Defined at:
 18269 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 18270 ;; Parameters:    Size  Location     Type
 18271 ;;		None
 18272 ;; Auto vars:     Size  Location     Type
 18273 ;;		None
 18274 ;; Return value:  Size  Location     Type
 18275 ;;                  1    wreg      enum E12722
 18276 ;; Registers used:
 18277 ;;		wreg, status,2, status,0, pclath, cstack
 18278 ;; Tracked objects:
 18279 ;;		On entry : 0/0
 18280 ;;		On exit  : 0/0
 18281 ;;		Unchanged: 0/0
 18282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18287 ;;Total ram usage:        0 bytes
 18288 ;; Hardware stack levels used:    1
 18289 ;; Hardware stack levels required when called:    1
 18290 ;; This function calls:
 18291 ;;		_i2c1_driver_startRX
 18292 ;; This function is called by:
 18293 ;;		_i2c_ISR
 18294 ;; This function uses a non-reentrant model
 18295 ;;
 18296                           
 18297                           
 18298                           ;psect for function _do_I2C_RCEN
 18299  0A39                     _do_I2C_RCEN:	
 18300  0A39                     i1l5406:	
 18301                           ;incstack = 0
 18302                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 18303                           
 18304                           
 18305                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
 18306  0A39  0021               	movlb	1	; select bank1
 18307  0A3A  11A0               	bcf	_i2c_status^(0+128),3
 18308  0A3B                     i1l5408:	
 18309                           
 18310                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
 18311  0A3B  3189  21D0  318A   	fcall	_i2c1_driver_startRX
 18312  0A3E                     i1l5410:	
 18313                           
 18314                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
 18315  0A3E  3004               	movlw	4
 18316  0A3F                     i1l1398:	
 18317  0A3F  0008               	return
 18318  0A40                     __end_of_do_I2C_RCEN:	
 18319                           
 18320                           	psect	text68
 18321  0A57                     __ptext68:	
 18322 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 18323 ;; Defined at:
 18324 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 18325 ;; Parameters:    Size  Location     Type
 18326 ;;		None
 18327 ;; Auto vars:     Size  Location     Type
 18328 ;;		None
 18329 ;; Return value:  Size  Location     Type
 18330 ;;                  1    wreg      enum E12722
 18331 ;; Registers used:
 18332 ;;		wreg, status,2, status,0, pclath, cstack
 18333 ;; Tracked objects:
 18334 ;;		On entry : 0/0
 18335 ;;		On exit  : 0/0
 18336 ;;		Unchanged: 0/0
 18337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18342 ;;Total ram usage:        0 bytes
 18343 ;; Hardware stack levels used:    1
 18344 ;; Hardware stack levels required when called:    1
 18345 ;; This function calls:
 18346 ;;		_i2c1_driver_TXData
 18347 ;; This function is called by:
 18348 ;;		_i2c_ISR
 18349 ;; This function uses a non-reentrant model
 18350 ;;
 18351                           
 18352                           
 18353                           ;psect for function _do_I2C_SEND_ADR_WRITE
 18354  0A57                     _do_I2C_SEND_ADR_WRITE:	
 18355  0A57                     i1l5398:	
 18356                           ;incstack = 0
 18357                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 18358                           
 18359                           
 18360                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
 18361  0A57  0021               	movlb	1	; select bank1
 18362  0A58  15A0               	bsf	_i2c_status^(0+128),3
 18363  0A59                     i1l5400:	
 18364                           
 18365                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
 18366  0A59  3521               	lslf	(_i2c_status^(0+128)+1),w
 18367  0A5A  3189  21EE  318A   	fcall	_i2c1_driver_TXData
 18368  0A5D                     i1l5402:	
 18369                           
 18370                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
 18371  0A5D  3003               	movlw	3
 18372  0A5E                     i1l1395:	
 18373  0A5E  0008               	return
 18374  0A5F                     __end_of_do_I2C_SEND_ADR_WRITE:	
 18375                           
 18376                           	psect	text69
 18377  0A6F                     __ptext69:	
 18378 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 18379 ;; Defined at:
 18380 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 18381 ;; Parameters:    Size  Location     Type
 18382 ;;		None
 18383 ;; Auto vars:     Size  Location     Type
 18384 ;;		None
 18385 ;; Return value:  Size  Location     Type
 18386 ;;                  1    wreg      enum E12722
 18387 ;; Registers used:
 18388 ;;		wreg, status,2, status,0, pclath, cstack
 18389 ;; Tracked objects:
 18390 ;;		On entry : 0/0
 18391 ;;		On exit  : 0/0
 18392 ;;		Unchanged: 0/0
 18393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18398 ;;Total ram usage:        0 bytes
 18399 ;; Hardware stack levels used:    1
 18400 ;; Hardware stack levels required when called:    1
 18401 ;; This function calls:
 18402 ;;		_i2c1_driver_TXData
 18403 ;; This function is called by:
 18404 ;;		_i2c_ISR
 18405 ;; This function uses a non-reentrant model
 18406 ;;
 18407                           
 18408                           
 18409                           ;psect for function _do_I2C_SEND_ADR_READ
 18410  0A6F                     _do_I2C_SEND_ADR_READ:	
 18411  0A6F                     i1l5390:	
 18412                           ;incstack = 0
 18413                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 18414                           
 18415                           
 18416                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
 18417  0A6F  0021               	movlb	1	; select bank1
 18418  0A70  15A0               	bsf	_i2c_status^(0+128),3
 18419  0A71                     i1l5392:	
 18420                           
 18421                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
 18422  0A71  1403               	setc
 18423  0A72  0D21               	rlf	(_i2c_status^(0+128)+1),w
 18424  0A73  3189  21EE  318A   	fcall	_i2c1_driver_TXData
 18425  0A76                     i1l5394:	
 18426                           
 18427                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
 18428  0A76  3005               	movlw	5
 18429  0A77                     i1l1392:	
 18430  0A77  0008               	return
 18431  0A78                     __end_of_do_I2C_SEND_ADR_READ:	
 18432                           
 18433                           	psect	text70
 18434  0A07                     __ptext70:	
 18435 ;; *************** function _do_I2C_SEND_STOP *****************
 18436 ;; Defined at:
 18437 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 18438 ;; Parameters:    Size  Location     Type
 18439 ;;		None
 18440 ;; Auto vars:     Size  Location     Type
 18441 ;;		None
 18442 ;; Return value:  Size  Location     Type
 18443 ;;                  1    wreg      enum E12722
 18444 ;; Registers used:
 18445 ;;		wreg, status,2, status,0, pclath, cstack
 18446 ;; Tracked objects:
 18447 ;;		On entry : 0/0
 18448 ;;		On exit  : 0/0
 18449 ;;		Unchanged: 0/0
 18450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18455 ;;Total ram usage:        0 bytes
 18456 ;; Hardware stack levels used:    1
 18457 ;; Hardware stack levels required when called:    1
 18458 ;; This function calls:
 18459 ;;		_i2c1_driver_stop
 18460 ;; This function is called by:
 18461 ;;		_do_I2C_DO_ADDRESS_NACK
 18462 ;;		_do_I2C_TX
 18463 ;;		_do_I2C_TX_EMPTY
 18464 ;;		_i2c_ISR
 18465 ;; This function uses a non-reentrant model
 18466 ;;
 18467                           
 18468                           
 18469                           ;psect for function _do_I2C_SEND_STOP
 18470  0A07                     _do_I2C_SEND_STOP:	
 18471  0A07                     i1l5030:	
 18472                           ;incstack = 0
 18473                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 18474                           
 18475                           
 18476                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
 18477  0A07  3189  21CD  318A   	fcall	_i2c1_driver_stop
 18478  0A0A                     i1l5032:	
 18479                           
 18480                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
 18481  0A0A  3000               	movlw	0
 18482  0A0B                     i1l1389:	
 18483  0A0B  0008               	return
 18484  0A0C                     __end_of_do_I2C_SEND_STOP:	
 18485                           
 18486                           	psect	text71
 18487  0A02                     __ptext71:	
 18488 ;; *************** function _do_I2C_SEND_RESTART *****************
 18489 ;; Defined at:
 18490 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 18491 ;; Parameters:    Size  Location     Type
 18492 ;;		None
 18493 ;; Auto vars:     Size  Location     Type
 18494 ;;		None
 18495 ;; Return value:  Size  Location     Type
 18496 ;;                  1    wreg      enum E12722
 18497 ;; Registers used:
 18498 ;;		wreg, status,2, status,0, pclath, cstack
 18499 ;; Tracked objects:
 18500 ;;		On entry : 0/0
 18501 ;;		On exit  : 0/0
 18502 ;;		Unchanged: 0/0
 18503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18508 ;;Total ram usage:        0 bytes
 18509 ;; Hardware stack levels used:    1
 18510 ;; Hardware stack levels required when called:    1
 18511 ;; This function calls:
 18512 ;;		_i2c1_driver_restart
 18513 ;; This function is called by:
 18514 ;;		_do_I2C_DO_ADDRESS_NACK
 18515 ;;		_do_I2C_TX_EMPTY
 18516 ;;		_i2c_ISR
 18517 ;; This function uses a non-reentrant model
 18518 ;;
 18519                           
 18520                           
 18521                           ;psect for function _do_I2C_SEND_RESTART
 18522  0A02                     _do_I2C_SEND_RESTART:	
 18523  0A02                     i1l5024:	
 18524                           ;incstack = 0
 18525                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 18526                           
 18527                           
 18528                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
 18529  0A02  3189  21CA  318A   	fcall	_i2c1_driver_restart
 18530  0A05                     i1l5026:	
 18531                           
 18532                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
 18533  0A05  3001               	movlw	1
 18534  0A06                     i1l1386:	
 18535  0A06  0008               	return
 18536  0A07                     __end_of_do_I2C_SEND_RESTART:	
 18537                           
 18538                           	psect	text72
 18539  09FD                     __ptext72:	
 18540 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 18541 ;; Defined at:
 18542 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 18543 ;; Parameters:    Size  Location     Type
 18544 ;;		None
 18545 ;; Auto vars:     Size  Location     Type
 18546 ;;		None
 18547 ;; Return value:  Size  Location     Type
 18548 ;;                  1    wreg      enum E12722
 18549 ;; Registers used:
 18550 ;;		wreg, status,2, status,0, pclath, cstack
 18551 ;; Tracked objects:
 18552 ;;		On entry : 0/0
 18553 ;;		On exit  : 0/0
 18554 ;;		Unchanged: 0/0
 18555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18560 ;;Total ram usage:        0 bytes
 18561 ;; Hardware stack levels used:    1
 18562 ;; Hardware stack levels required when called:    1
 18563 ;; This function calls:
 18564 ;;		_i2c1_driver_restart
 18565 ;; This function is called by:
 18566 ;;		_do_I2C_TX
 18567 ;;		_i2c_ISR
 18568 ;; This function uses a non-reentrant model
 18569 ;;
 18570                           
 18571                           
 18572                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 18573  09FD                     _do_I2C_SEND_RESTART_WRITE:	
 18574  09FD                     i1l5018:	
 18575                           ;incstack = 0
 18576                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 18577                           
 18578                           
 18579                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
 18580  09FD  3189  21CA  3189   	fcall	_i2c1_driver_restart
 18581  0A00                     i1l5020:	
 18582                           
 18583                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
 18584  0A00  3002               	movlw	2
 18585  0A01                     i1l1383:	
 18586  0A01  0008               	return
 18587  0A02                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 18588                           
 18589                           	psect	text73
 18590  09F8                     __ptext73:	
 18591 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 18592 ;; Defined at:
 18593 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 18594 ;; Parameters:    Size  Location     Type
 18595 ;;		None
 18596 ;; Auto vars:     Size  Location     Type
 18597 ;;		None
 18598 ;; Return value:  Size  Location     Type
 18599 ;;                  1    wreg      enum E12722
 18600 ;; Registers used:
 18601 ;;		wreg, status,2, status,0, pclath, cstack
 18602 ;; Tracked objects:
 18603 ;;		On entry : 0/0
 18604 ;;		On exit  : 0/0
 18605 ;;		Unchanged: 0/0
 18606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18611 ;;Total ram usage:        0 bytes
 18612 ;; Hardware stack levels used:    1
 18613 ;; Hardware stack levels required when called:    1
 18614 ;; This function calls:
 18615 ;;		_i2c1_driver_restart
 18616 ;; This function is called by:
 18617 ;;		_do_I2C_TX
 18618 ;;		_i2c_ISR
 18619 ;; This function uses a non-reentrant model
 18620 ;;
 18621                           
 18622                           
 18623                           ;psect for function _do_I2C_SEND_RESTART_READ
 18624  09F8                     _do_I2C_SEND_RESTART_READ:	
 18625  09F8                     i1l5012:	
 18626                           ;incstack = 0
 18627                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 18628                           
 18629                           
 18630                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
 18631  09F8  3189  21CA  3189   	fcall	_i2c1_driver_restart
 18632  09FB                     i1l5014:	
 18633                           
 18634                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
 18635  09FB  3001               	movlw	1
 18636  09FC                     i1l1380:	
 18637  09FC  0008               	return
 18638  09FD                     __end_of_do_I2C_SEND_RESTART_READ:	
 18639                           
 18640                           	psect	text74
 18641  09F3                     __ptext74:	
 18642 ;; *************** function _do_I2C_IDLE *****************
 18643 ;; Defined at:
 18644 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 18645 ;; Parameters:    Size  Location     Type
 18646 ;;		None
 18647 ;; Auto vars:     Size  Location     Type
 18648 ;;		None
 18649 ;; Return value:  Size  Location     Type
 18650 ;;                  1    wreg      enum E12722
 18651 ;; Registers used:
 18652 ;;		wreg, status,2
 18653 ;; Tracked objects:
 18654 ;;		On entry : 0/0
 18655 ;;		On exit  : 0/0
 18656 ;;		Unchanged: 0/0
 18657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18662 ;;Total ram usage:        0 bytes
 18663 ;; Hardware stack levels used:    1
 18664 ;; This function calls:
 18665 ;;		Nothing
 18666 ;; This function is called by:
 18667 ;;		_i2c_ISR
 18668 ;; This function uses a non-reentrant model
 18669 ;;
 18670                           
 18671                           
 18672                           ;psect for function _do_I2C_IDLE
 18673  09F3                     _do_I2C_IDLE:	
 18674  09F3                     i1l5382:	
 18675                           ;incstack = 0
 18676                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 18677                           
 18678                           
 18679                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
 18680  09F3  0021               	movlb	1	; select bank1
 18681  09F4  1020               	bcf	_i2c_status^(0+128),0
 18682  09F5                     i1l5384:	
 18683                           
 18684                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
 18685  09F5  01AA               	clrf	(_i2c_status^(0+128)+10)
 18686  09F6                     i1l5386:	
 18687                           
 18688                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
 18689  09F6  300E               	movlw	14
 18690  09F7                     i1l1377:	
 18691  09F7  0008               	return
 18692  09F8                     __end_of_do_I2C_IDLE:	
 18693                           
 18694                           	psect	text75
 18695  0A4F                     __ptext75:	
 18696 ;; *************** function _do_I2C_RESET *****************
 18697 ;; Defined at:
 18698 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 18699 ;; Parameters:    Size  Location     Type
 18700 ;;		None
 18701 ;; Auto vars:     Size  Location     Type
 18702 ;;		None
 18703 ;; Return value:  Size  Location     Type
 18704 ;;                  1    wreg      enum E12722
 18705 ;; Registers used:
 18706 ;;		wreg, status,2, status,0, pclath, cstack
 18707 ;; Tracked objects:
 18708 ;;		On entry : 0/0
 18709 ;;		On exit  : 0/0
 18710 ;;		Unchanged: 0/0
 18711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18716 ;;Total ram usage:        0 bytes
 18717 ;; Hardware stack levels used:    1
 18718 ;; Hardware stack levels required when called:    1
 18719 ;; This function calls:
 18720 ;;		_i2c1_driver_resetBus
 18721 ;; This function is called by:
 18722 ;;		_i2c_ISR
 18723 ;; This function uses a non-reentrant model
 18724 ;;
 18725                           
 18726                           
 18727                           ;psect for function _do_I2C_RESET
 18728  0A4F                     _do_I2C_RESET:	
 18729  0A4F                     i1l5372:	
 18730                           ;incstack = 0
 18731                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 18732                           
 18733                           
 18734                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
 18735  0A4F  3187  27FF  318A   	fcall	_i2c1_driver_resetBus
 18736  0A52                     i1l5374:	
 18737                           
 18738                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
 18739  0A52  0021               	movlb	1	; select bank1
 18740  0A53  1020               	bcf	_i2c_status^(0+128),0
 18741  0A54                     i1l5376:	
 18742                           
 18743                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
 18744  0A54  01AA               	clrf	(_i2c_status^(0+128)+10)
 18745  0A55                     i1l5378:	
 18746                           
 18747                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
 18748  0A55  300E               	movlw	14
 18749  0A56                     i1l1374:	
 18750  0A56  0008               	return
 18751  0A57                     __end_of_do_I2C_RESET:	
 18752                           
 18753                           	psect	text76
 18754  0F5A                     __ptext76:	
 18755 ;; *************** function _do_I2C_TX_EMPTY *****************
 18756 ;; Defined at:
 18757 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 18758 ;; Parameters:    Size  Location     Type
 18759 ;;		None
 18760 ;; Auto vars:     Size  Location     Type
 18761 ;;		None
 18762 ;; Return value:  Size  Location     Type
 18763 ;;                  1    wreg      enum E12722
 18764 ;; Registers used:
 18765 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18766 ;; Tracked objects:
 18767 ;;		On entry : 0/0
 18768 ;;		On exit  : 0/0
 18769 ;;		Unchanged: 0/0
 18770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18773 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18774 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18775 ;;Total ram usage:        3 bytes
 18776 ;; Hardware stack levels used:    1
 18777 ;; Hardware stack levels required when called:    3
 18778 ;; This function calls:
 18779 ;;		Absolute function
 18780 ;;		_do_I2C_SEND_RESTART
 18781 ;;		_do_I2C_SEND_STOP
 18782 ;;		_i2c_restartWrite
 18783 ;;		_mssp1_setIRQ
 18784 ;;		_rd1RegCompleteHandler
 18785 ;;		_rd2RegCompleteHandler
 18786 ;;		_rdBlkRegCompleteHandler
 18787 ;;		_returnReset
 18788 ;;		_returnStop
 18789 ;;		_wr1RegCompleteHandler
 18790 ;;		_wr2RegCompleteHandler
 18791 ;; This function is called by:
 18792 ;;		_i2c_ISR
 18793 ;; This function uses a non-reentrant model
 18794 ;;
 18795                           
 18796                           
 18797                           ;psect for function _do_I2C_TX_EMPTY
 18798  0F5A                     _do_I2C_TX_EMPTY:	
 18799  0F5A                     i1l5508:	
 18800                           ;incstack = 0
 18801                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18802                           
 18803                           
 18804                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
 18805  0F5A  0021               	movlb	1	; select bank1
 18806  0F5B  1520               	bsf	_i2c_status^(0+128),2
 18807                           
 18808                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 18809  0F5C  2F6A               	goto	i1l5526
 18810  0F5D                     i1l5510:	
 18811                           
 18812                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
 18813  0F5D  318A  2202  318F   	fcall	_do_I2C_SEND_RESTART
 18814  0F60  2F8C               	goto	i1l1449
 18815  0F61                     i1l5514:	
 18816                           
 18817                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
 18818  0F61  3189  21D6  318F   	fcall	_mssp1_setIRQ
 18819  0F64                     i1l5516:	
 18820                           
 18821                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
 18822  0F64  3003               	movlw	3
 18823  0F65  2F8C               	goto	i1l1449
 18824  0F66                     i1l5520:	
 18825                           
 18826                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
 18827  0F66  318A  2207  318F   	fcall	_do_I2C_SEND_STOP
 18828  0F69  2F8C               	goto	i1l1449
 18829  0F6A                     i1l5526:	
 18830  0F6A  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 18831  0F6B  00FA               	movwf	??_do_I2C_TX_EMPTY
 18832  0F6C  087A               	movf	??_do_I2C_TX_EMPTY,w
 18833  0F6D  00F9               	movwf	rdBlkRegCompleteHandler@p
 18834  0F6E  300B               	movlw	11
 18835  0F6F  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 18836  0F70  0086               	movwf	6
 18837  0F71  0187               	clrf	7
 18838  0F72  3F41               	moviw [1]fsr1
 18839  0F73  008A               	movwf	10
 18840  0F74  3F40               	moviw [0]fsr1
 18841  0F75  000A               	callw
 18842  0F76  318F               	pagesel	$
 18843  0F77  00FB               	movwf	??_do_I2C_TX_EMPTY+1
 18844  0F78  01FC               	clrf	??_do_I2C_TX_EMPTY+2
 18845                           
 18846                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18847                           ; Switch size 1, requested type "simple"
 18848                           ; Number of cases is 1, Range of values is 0 to 0
 18849                           ; switch strategies available:
 18850                           ; Name         Instructions Cycles
 18851                           ; simple_byte            4     3 (average)
 18852                           ; direct_byte            8     6 (fixed)
 18853                           ; jumptable            260     6 (fixed)
 18854                           ;	Chosen strategy is simple_byte
 18855  0F79  087C               	movf	??_do_I2C_TX_EMPTY+2,w
 18856  0F7A  3A00               	xorlw	0	; case 0
 18857  0F7B  1903               	skipnz
 18858  0F7C  2F7E               	goto	i1l7668
 18859  0F7D  2F66               	goto	i1l5520
 18860  0F7E                     i1l7668:	
 18861                           
 18862                           ; Switch size 1, requested type "simple"
 18863                           ; Number of cases is 4, Range of values is 1 to 4
 18864                           ; switch strategies available:
 18865                           ; Name         Instructions Cycles
 18866                           ; simple_byte           13     7 (average)
 18867                           ; direct_byte           17     9 (fixed)
 18868                           ; jumptable            263     9 (fixed)
 18869                           ;	Chosen strategy is simple_byte
 18870  0F7E  087B               	movf	??_do_I2C_TX_EMPTY+1,w
 18871  0F7F  3A01               	xorlw	1	; case 1
 18872  0F80  1903               	skipnz
 18873  0F81  2F66               	goto	i1l5520
 18874  0F82  3A03               	xorlw	3	; case 2
 18875  0F83  1903               	skipnz
 18876  0F84  2F5D               	goto	i1l5510
 18877  0F85  3A01               	xorlw	1	; case 3
 18878  0F86  1903               	skipnz
 18879  0F87  2F5D               	goto	i1l5510
 18880  0F88  3A07               	xorlw	7	; case 4
 18881  0F89  1903               	skipnz
 18882  0F8A  2F61               	goto	i1l5514
 18883  0F8B  2F66               	goto	i1l5520
 18884  0F8C                     i1l1449:	
 18885  0F8C  0008               	return
 18886  0F8D                     __end_of_do_I2C_TX_EMPTY:	
 18887                           
 18888                           	psect	text77
 18889  09D6                     __ptext77:	
 18890 ;; *************** function _mssp1_setIRQ *****************
 18891 ;; Defined at:
 18892 ;;		line 59 in file "mcc_generated_files/i2c1_driver.c"
 18893 ;; Parameters:    Size  Location     Type
 18894 ;;		None
 18895 ;; Auto vars:     Size  Location     Type
 18896 ;;		None
 18897 ;; Return value:  Size  Location     Type
 18898 ;;                  1    wreg      void 
 18899 ;; Registers used:
 18900 ;;		None
 18901 ;; Tracked objects:
 18902 ;;		On entry : 0/0
 18903 ;;		On exit  : 0/0
 18904 ;;		Unchanged: 0/0
 18905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18910 ;;Total ram usage:        0 bytes
 18911 ;; Hardware stack levels used:    1
 18912 ;; This function calls:
 18913 ;;		Nothing
 18914 ;; This function is called by:
 18915 ;;		_do_I2C_TX_EMPTY
 18916 ;; This function uses a non-reentrant model
 18917 ;;
 18918                           
 18919                           
 18920                           ;psect for function _mssp1_setIRQ
 18921  09D6                     _mssp1_setIRQ:	
 18922  09D6                     i1l4986:	
 18923                           ;incstack = 0
 18924                           ; Regs used in _mssp1_setIRQ: []
 18925                           
 18926                           
 18927                           ;mcc_generated_files/i2c1_driver.c: 61:     else
 18928  09D6  002E               	movlb	14	; select bank14
 18929  09D7  140F               	bsf	15,0	;volatile
 18930  09D8                     i1l741:	
 18931  09D8  0008               	return
 18932  09D9                     __end_of_mssp1_setIRQ:	
 18933                           
 18934                           	psect	text78
 18935  0A47                     __ptext78:	
 18936 ;; *************** function _i2c1_driver_isNACK *****************
 18937 ;; Defined at:
 18938 ;;		line 162 in file "mcc_generated_files/i2c1_driver.c"
 18939 ;; Parameters:    Size  Location     Type
 18940 ;;		None
 18941 ;; Auto vars:     Size  Location     Type
 18942 ;;		None
 18943 ;; Return value:  Size  Location     Type
 18944 ;;		None               void
 18945 ;; Registers used:
 18946 ;;		wreg, status,2, status,0
 18947 ;; Tracked objects:
 18948 ;;		On entry : 0/0
 18949 ;;		On exit  : 0/0
 18950 ;;		Unchanged: 0/0
 18951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18954 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18955 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18956 ;;Total ram usage:        1 bytes
 18957 ;; Hardware stack levels used:    1
 18958 ;; This function calls:
 18959 ;;		Nothing
 18960 ;; This function is called by:
 18961 ;;		_do_I2C_TX
 18962 ;;		_i2c_ISR
 18963 ;; This function uses a non-reentrant model
 18964 ;;
 18965                           
 18966                           
 18967                           ;psect for function _i2c1_driver_isNACK
 18968  0A47                     _i2c1_driver_isNACK:	
 18969  0A47                     i1l4990:	
 18970                           ;incstack = 0
 18971                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 18972                           
 18973                           
 18974                           ;mcc_generated_files/i2c1_driver.c: 164:     return SSP1CON2bits.ACKSTAT;
 18975  0A47  0023               	movlb	3	; select bank3
 18976  0A48  0E11               	swapf	17,w	;volatile
 18977  0A49  0C89               	rrf	9,f
 18978  0A4A  0C89               	rrf	9,f
 18979  0A4B  3901               	andlw	1
 18980  0A4C  00F0               	movwf	??_i2c1_driver_isNACK
 18981  0A4D  0C70               	rrf	??_i2c1_driver_isNACK,w
 18982  0A4E                     i1l776:	
 18983  0A4E  0008               	return
 18984  0A4F                     __end_of_i2c1_driver_isNACK:	
 18985                           
 18986                           	psect	text79
 18987  09EE                     __ptext79:	
 18988 ;; *************** function _i2c1_driver_TXData *****************
 18989 ;; Defined at:
 18990 ;;		line 187 in file "mcc_generated_files/i2c1_driver.c"
 18991 ;; Parameters:    Size  Location     Type
 18992 ;;  d               1    wreg     unsigned char 
 18993 ;; Auto vars:     Size  Location     Type
 18994 ;;  d               1    0[COMMON] unsigned char 
 18995 ;; Return value:  Size  Location     Type
 18996 ;;                  1    wreg      void 
 18997 ;; Registers used:
 18998 ;;		wreg
 18999 ;; Tracked objects:
 19000 ;;		On entry : 0/0
 19001 ;;		On exit  : 0/0
 19002 ;;		Unchanged: 0/0
 19003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19005 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19007 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19008 ;;Total ram usage:        1 bytes
 19009 ;; Hardware stack levels used:    1
 19010 ;; This function calls:
 19011 ;;		Nothing
 19012 ;; This function is called by:
 19013 ;;		_do_I2C_SEND_ADR_READ
 19014 ;;		_do_I2C_SEND_ADR_WRITE
 19015 ;;		_do_I2C_TX
 19016 ;; This function uses a non-reentrant model
 19017 ;;
 19018                           
 19019                           
 19020                           ;psect for function _i2c1_driver_TXData
 19021  09EE                     _i2c1_driver_TXData:	
 19022                           
 19023                           ;incstack = 0
 19024                           ; Regs used in _i2c1_driver_TXData: [wreg]
 19025                           ;i2c1_driver_TXData@d stored from wreg
 19026  09EE  00F0               	movwf	i2c1_driver_TXData@d
 19027  09EF                     i1l5000:	
 19028                           
 19029                           ;mcc_generated_files/i2c1_driver.c: 187: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 188: {;mcc_generated_files/i2c1_driver.c: 18
      +                          9:     SSP1BUF = d;
 19030  09EF  0870               	movf	i2c1_driver_TXData@d,w
 19031  09F0  0023               	movlb	3	; select bank3
 19032  09F1  008C               	movwf	12	;volatile
 19033  09F2                     i1l791:	
 19034  09F2  0008               	return
 19035  09F3                     __end_of_i2c1_driver_TXData:	
 19036                           
 19037                           	psect	text80
 19038  09D3                     __ptext80:	
 19039 ;; *************** function _i2c1_driver_getRXData *****************
 19040 ;; Defined at:
 19041 ;;		line 172 in file "mcc_generated_files/i2c1_driver.c"
 19042 ;; Parameters:    Size  Location     Type
 19043 ;;		None
 19044 ;; Auto vars:     Size  Location     Type
 19045 ;;		None
 19046 ;; Return value:  Size  Location     Type
 19047 ;;                  1    wreg      unsigned char 
 19048 ;; Registers used:
 19049 ;;		wreg
 19050 ;; Tracked objects:
 19051 ;;		On entry : 0/0
 19052 ;;		On exit  : 0/0
 19053 ;;		Unchanged: 0/0
 19054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19059 ;;Total ram usage:        0 bytes
 19060 ;; Hardware stack levels used:    1
 19061 ;; This function calls:
 19062 ;;		Nothing
 19063 ;; This function is called by:
 19064 ;;		_do_I2C_RX
 19065 ;; This function uses a non-reentrant model
 19066 ;;
 19067                           
 19068                           
 19069                           ;psect for function _i2c1_driver_getRXData
 19070  09D3                     _i2c1_driver_getRXData:	
 19071  09D3                     i1l4996:	
 19072                           ;incstack = 0
 19073                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 19074                           
 19075                           
 19076                           ;mcc_generated_files/i2c1_driver.c: 174:     return SSP1BUF;
 19077  09D3  0023               	movlb	3	; select bank3
 19078  09D4  080C               	movf	12,w	;volatile
 19079  09D5                     i1l782:	
 19080  09D5  0008               	return
 19081  09D6                     __end_of_i2c1_driver_getRXData:	
 19082                           
 19083                           	psect	text81
 19084  09E6                     __ptext81:	
 19085 ;; *************** function _i2c1_driver_sendNACK *****************
 19086 ;; Defined at:
 19087 ;;		line 203 in file "mcc_generated_files/i2c1_driver.c"
 19088 ;; Parameters:    Size  Location     Type
 19089 ;;		None
 19090 ;; Auto vars:     Size  Location     Type
 19091 ;;		None
 19092 ;; Return value:  Size  Location     Type
 19093 ;;                  1    wreg      void 
 19094 ;; Registers used:
 19095 ;;		None
 19096 ;; Tracked objects:
 19097 ;;		On entry : 0/0
 19098 ;;		On exit  : 0/0
 19099 ;;		Unchanged: 0/0
 19100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19105 ;;Total ram usage:        0 bytes
 19106 ;; Hardware stack levels used:    1
 19107 ;; This function calls:
 19108 ;;		Nothing
 19109 ;; This function is called by:
 19110 ;;		_do_I2C_DO_NACK_STOP
 19111 ;;		_do_I2C_DO_NACK_RESTART
 19112 ;; This function uses a non-reentrant model
 19113 ;;
 19114                           
 19115                           
 19116                           ;psect for function _i2c1_driver_sendNACK
 19117  09E6                     _i2c1_driver_sendNACK:	
 19118  09E6                     i1l4756:	
 19119                           ;incstack = 0
 19120                           ; Regs used in _i2c1_driver_sendNACK: []
 19121                           
 19122                           
 19123                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKDT = 1;
 19124  09E6  0023               	movlb	3	; select bank3
 19125  09E7  1691               	bsf	17,5	;volatile
 19126                           
 19127                           ;mcc_generated_files/i2c1_driver.c: 206:     SSP1CON2bits.ACKEN = 1;
 19128  09E8  1611               	bsf	17,4	;volatile
 19129  09E9                     i1l800:	
 19130  09E9  0008               	return
 19131  09EA                     __end_of_i2c1_driver_sendNACK:	
 19132                           
 19133                           	psect	text82
 19134  07FF                     __ptext82:	
 19135 ;; *************** function _i2c1_driver_resetBus *****************
 19136 ;; Defined at:
 19137 ;;		line 142 in file "mcc_generated_files/i2c1_driver.c"
 19138 ;; Parameters:    Size  Location     Type
 19139 ;;		None
 19140 ;; Auto vars:     Size  Location     Type
 19141 ;;		None
 19142 ;; Return value:  Size  Location     Type
 19143 ;;                  1    wreg      void 
 19144 ;; Registers used:
 19145 ;;		None
 19146 ;; Tracked objects:
 19147 ;;		On entry : 0/0
 19148 ;;		On exit  : 0/0
 19149 ;;		Unchanged: 0/0
 19150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19155 ;;Total ram usage:        0 bytes
 19156 ;; Hardware stack levels used:    1
 19157 ;; This function calls:
 19158 ;;		Nothing
 19159 ;; This function is called by:
 19160 ;;		_do_I2C_RESET
 19161 ;; This function uses a non-reentrant model
 19162 ;;
 19163                           
 19164                           
 19165                           ;psect for function _i2c1_driver_resetBus
 19166  07FF                     _i2c1_driver_resetBus:	
 19167  07FF                     i1l764:	
 19168                           ;incstack = 0
 19169                           ; Regs used in _i2c1_driver_resetBus: []
 19170                           
 19171  07FF  0008               	return
 19172  0800                     __end_of_i2c1_driver_resetBus:	
 19173                           
 19174                           	psect	text83
 19175  09D0                     __ptext83:	
 19176 ;; *************** function _i2c1_driver_startRX *****************
 19177 ;; Defined at:
 19178 ;;		line 167 in file "mcc_generated_files/i2c1_driver.c"
 19179 ;; Parameters:    Size  Location     Type
 19180 ;;		None
 19181 ;; Auto vars:     Size  Location     Type
 19182 ;;		None
 19183 ;; Return value:  Size  Location     Type
 19184 ;;                  1    wreg      void 
 19185 ;; Registers used:
 19186 ;;		None
 19187 ;; Tracked objects:
 19188 ;;		On entry : 0/0
 19189 ;;		On exit  : 0/0
 19190 ;;		Unchanged: 0/0
 19191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19196 ;;Total ram usage:        0 bytes
 19197 ;; Hardware stack levels used:    1
 19198 ;; This function calls:
 19199 ;;		Nothing
 19200 ;; This function is called by:
 19201 ;;		_do_I2C_RCEN
 19202 ;; This function uses a non-reentrant model
 19203 ;;
 19204                           
 19205                           
 19206                           ;psect for function _i2c1_driver_startRX
 19207  09D0                     _i2c1_driver_startRX:	
 19208  09D0                     i1l4994:	
 19209                           ;incstack = 0
 19210                           ; Regs used in _i2c1_driver_startRX: []
 19211                           
 19212                           
 19213                           ;mcc_generated_files/i2c1_driver.c: 169:     SSP1CON2bits.RCEN = 1;
 19214  09D0  0023               	movlb	3	; select bank3
 19215  09D1  1591               	bsf	17,3	;volatile
 19216  09D2                     i1l779:	
 19217  09D2  0008               	return
 19218  09D3                     __end_of_i2c1_driver_startRX:	
 19219                           
 19220                           	psect	text84
 19221  0C3F                     __ptext84:	
 19222 ;; *************** function _rdBlkRegCompleteHandler *****************
 19223 ;; Defined at:
 19224 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19225 ;; Parameters:    Size  Location     Type
 19226 ;;  p               1    9[COMMON] PTR void 
 19227 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19228 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19229 ;; Auto vars:     Size  Location     Type
 19230 ;;		None
 19231 ;; Return value:  Size  Location     Type
 19232 ;;                  1    wreg      enum E358
 19233 ;; Registers used:
 19234 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19235 ;; Tracked objects:
 19236 ;;		On entry : 0/0
 19237 ;;		On exit  : 0/0
 19238 ;;		Unchanged: 0/0
 19239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19240 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19243 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19244 ;;Total ram usage:        1 bytes
 19245 ;; Hardware stack levels used:    1
 19246 ;; Hardware stack levels required when called:    2
 19247 ;; This function calls:
 19248 ;;		_i2c_setBuffer
 19249 ;;		_i2c_setDataCompleteCallback
 19250 ;; This function is called by:
 19251 ;;		_i2c_readDataBlock
 19252 ;;		_do_I2C_DO_ADDRESS_NACK
 19253 ;;		_do_I2C_TX
 19254 ;;		_do_I2C_RX
 19255 ;;		_do_I2C_TX_EMPTY
 19256 ;; This function uses a non-reentrant model
 19257 ;;
 19258                           
 19259                           
 19260                           ;psect for function _rdBlkRegCompleteHandler
 19261  0C3F                     _rdBlkRegCompleteHandler:	
 19262  0C3F                     i1l5088:	
 19263                           ;incstack = 0
 19264                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 19265                           
 19266                           
 19267                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
 19268  0C3F  0879               	movf	rdBlkRegCompleteHandler@p,w
 19269  0C40  0086               	movwf	6
 19270  0C41  0187               	clrf	7
 19271  0C42  3F40               	moviw [0]fsr1
 19272  0C43  00F0               	movwf	i2c_setBuffer@bufferSize
 19273  0C44  3F41               	moviw [1]fsr1
 19274  0C45  00F1               	movwf	i2c_setBuffer@bufferSize+1
 19275  0C46  0879               	movf	rdBlkRegCompleteHandler@p,w
 19276  0C47  3E02               	addlw	2
 19277  0C48  0086               	movwf	6
 19278  0C49  0187               	clrf	7
 19279  0C4A  0801               	movf	1,w
 19280  0C4B  318B  235C  318C   	fcall	_i2c_setBuffer
 19281                           
 19282                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 19283  0C4E  3000               	movlw	0
 19284  0C4F  00F5               	movwf	i2c_setDataCompleteCallback@cb
 19285  0C50  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 19286  0C51  01F7               	clrf	i2c_setDataCompleteCallback@p
 19287  0C52  318B  2307  318C   	fcall	_i2c_setDataCompleteCallback
 19288  0C55                     i1l5090:	
 19289                           
 19290                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
 19291  0C55  3002               	movlw	2
 19292  0C56                     i1l1633:	
 19293  0C56  0008               	return
 19294  0C57                     __end_of_rdBlkRegCompleteHandler:	
 19295                           
 19296                           	psect	text85
 19297  0BC0                     __ptext85:	
 19298 ;; *************** function _rd2RegCompleteHandler *****************
 19299 ;; Defined at:
 19300 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19301 ;; Parameters:    Size  Location     Type
 19302 ;;  p               1    9[COMMON] PTR void 
 19303 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19304 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19305 ;; Auto vars:     Size  Location     Type
 19306 ;;		None
 19307 ;; Return value:  Size  Location     Type
 19308 ;;                  1    wreg      enum E358
 19309 ;; Registers used:
 19310 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19311 ;; Tracked objects:
 19312 ;;		On entry : 0/0
 19313 ;;		On exit  : 0/0
 19314 ;;		Unchanged: 0/0
 19315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19316 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19319 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19320 ;;Total ram usage:        1 bytes
 19321 ;; Hardware stack levels used:    1
 19322 ;; Hardware stack levels required when called:    2
 19323 ;; This function calls:
 19324 ;;		_i2c_setBuffer
 19325 ;;		_i2c_setDataCompleteCallback
 19326 ;; This function is called by:
 19327 ;;		_i2c_read2ByteRegister
 19328 ;;		_do_I2C_DO_ADDRESS_NACK
 19329 ;;		_do_I2C_TX
 19330 ;;		_do_I2C_RX
 19331 ;;		_do_I2C_TX_EMPTY
 19332 ;; This function uses a non-reentrant model
 19333 ;;
 19334                           
 19335                           
 19336                           ;psect for function _rd2RegCompleteHandler
 19337  0BC0                     _rd2RegCompleteHandler:	
 19338  0BC0                     i1l5072:	
 19339                           ;incstack = 0
 19340                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 19341                           
 19342                           
 19343                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
 19344  0BC0  3002               	movlw	2
 19345  0BC1  00F0               	movwf	i2c_setBuffer@bufferSize
 19346  0BC2  3000               	movlw	0
 19347  0BC3  00F1               	movwf	i2c_setBuffer@bufferSize+1
 19348  0BC4  0879               	movf	rd2RegCompleteHandler@p,w
 19349  0BC5  318B  235C  318B   	fcall	_i2c_setBuffer
 19350  0BC8                     i1l5074:	
 19351                           
 19352                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 19353  0BC8  3000               	movlw	0
 19354  0BC9  00F5               	movwf	i2c_setDataCompleteCallback@cb
 19355  0BCA  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 19356  0BCB  01F7               	clrf	i2c_setDataCompleteCallback@p
 19357  0BCC  318B  2307  318B   	fcall	_i2c_setDataCompleteCallback
 19358  0BCF                     i1l5076:	
 19359                           
 19360                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
 19361  0BCF  3002               	movlw	2
 19362  0BD0                     i1l1609:	
 19363  0BD0  0008               	return
 19364  0BD1                     __end_of_rd2RegCompleteHandler:	
 19365                           
 19366                           	psect	text86
 19367  0BAF                     __ptext86:	
 19368 ;; *************** function _rd1RegCompleteHandler *****************
 19369 ;; Defined at:
 19370 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19371 ;; Parameters:    Size  Location     Type
 19372 ;;  p               1    9[COMMON] PTR void 
 19373 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19374 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19375 ;; Auto vars:     Size  Location     Type
 19376 ;;		None
 19377 ;; Return value:  Size  Location     Type
 19378 ;;                  1    wreg      enum E358
 19379 ;; Registers used:
 19380 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19381 ;; Tracked objects:
 19382 ;;		On entry : 0/0
 19383 ;;		On exit  : 0/0
 19384 ;;		Unchanged: 0/0
 19385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19386 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19389 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19390 ;;Total ram usage:        1 bytes
 19391 ;; Hardware stack levels used:    1
 19392 ;; Hardware stack levels required when called:    2
 19393 ;; This function calls:
 19394 ;;		_i2c_setBuffer
 19395 ;;		_i2c_setDataCompleteCallback
 19396 ;; This function is called by:
 19397 ;;		_i2c_read1ByteRegister
 19398 ;;		_do_I2C_DO_ADDRESS_NACK
 19399 ;;		_do_I2C_TX
 19400 ;;		_do_I2C_RX
 19401 ;;		_do_I2C_TX_EMPTY
 19402 ;; This function uses a non-reentrant model
 19403 ;;
 19404                           
 19405                           
 19406                           ;psect for function _rd1RegCompleteHandler
 19407  0BAF                     _rd1RegCompleteHandler:	
 19408  0BAF                     i1l5064:	
 19409                           ;incstack = 0
 19410                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 19411                           
 19412                           
 19413                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
 19414  0BAF  3001               	movlw	1
 19415  0BB0  00F0               	movwf	i2c_setBuffer@bufferSize
 19416  0BB1  3000               	movlw	0
 19417  0BB2  00F1               	movwf	i2c_setBuffer@bufferSize+1
 19418  0BB3  0879               	movf	rd1RegCompleteHandler@p,w
 19419  0BB4  318B  235C  318B   	fcall	_i2c_setBuffer
 19420  0BB7                     i1l5066:	
 19421                           
 19422                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 19423  0BB7  3000               	movlw	0
 19424  0BB8  00F5               	movwf	i2c_setDataCompleteCallback@cb
 19425  0BB9  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 19426  0BBA  01F7               	clrf	i2c_setDataCompleteCallback@p
 19427  0BBB  318B  2307  318B   	fcall	_i2c_setDataCompleteCallback
 19428  0BBE                     i1l5068:	
 19429                           
 19430                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
 19431  0BBE  3002               	movlw	2
 19432  0BBF                     i1l1594:	
 19433  0BBF  0008               	return
 19434  0BC0                     __end_of_rd1RegCompleteHandler:	
 19435                           
 19436                           	psect	text87
 19437  0B9E                     __ptext87:	
 19438 ;; *************** function _wr1RegCompleteHandler *****************
 19439 ;; Defined at:
 19440 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19441 ;; Parameters:    Size  Location     Type
 19442 ;;  p               1    9[COMMON] PTR void 
 19443 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19444 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19445 ;; Auto vars:     Size  Location     Type
 19446 ;;		None
 19447 ;; Return value:  Size  Location     Type
 19448 ;;                  1    wreg      enum E358
 19449 ;; Registers used:
 19450 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19451 ;; Tracked objects:
 19452 ;;		On entry : 0/0
 19453 ;;		On exit  : 0/0
 19454 ;;		Unchanged: 0/0
 19455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19456 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19459 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19460 ;;Total ram usage:        1 bytes
 19461 ;; Hardware stack levels used:    1
 19462 ;; Hardware stack levels required when called:    2
 19463 ;; This function calls:
 19464 ;;		_i2c_setBuffer
 19465 ;;		_i2c_setDataCompleteCallback
 19466 ;; This function is called by:
 19467 ;;		_i2c_write1ByteRegister
 19468 ;;		_do_I2C_DO_ADDRESS_NACK
 19469 ;;		_do_I2C_TX
 19470 ;;		_do_I2C_RX
 19471 ;;		_do_I2C_TX_EMPTY
 19472 ;; This function uses a non-reentrant model
 19473 ;;
 19474                           
 19475                           
 19476                           ;psect for function _wr1RegCompleteHandler
 19477  0B9E                     _wr1RegCompleteHandler:	
 19478  0B9E                     i1l5056:	
 19479                           ;incstack = 0
 19480                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 19481                           
 19482                           
 19483                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
 19484  0B9E  3001               	movlw	1
 19485  0B9F  00F0               	movwf	i2c_setBuffer@bufferSize
 19486  0BA0  3000               	movlw	0
 19487  0BA1  00F1               	movwf	i2c_setBuffer@bufferSize+1
 19488  0BA2  0879               	movf	wr1RegCompleteHandler@p,w
 19489  0BA3  318B  235C  318B   	fcall	_i2c_setBuffer
 19490  0BA6                     i1l5058:	
 19491                           
 19492                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 19493  0BA6  3000               	movlw	0
 19494  0BA7  00F5               	movwf	i2c_setDataCompleteCallback@cb
 19495  0BA8  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 19496  0BA9  01F7               	clrf	i2c_setDataCompleteCallback@p
 19497  0BAA  318B  2307  318B   	fcall	_i2c_setDataCompleteCallback
 19498  0BAD                     i1l5060:	
 19499                           
 19500                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
 19501  0BAD  3004               	movlw	4
 19502  0BAE                     i1l1573:	
 19503  0BAE  0008               	return
 19504  0BAF                     __end_of_wr1RegCompleteHandler:	
 19505                           
 19506                           	psect	text88
 19507  0002                     __ptext88:	
 19508 ;; *************** function _returnReset *****************
 19509 ;; Defined at:
 19510 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 19511 ;; Parameters:    Size  Location     Type
 19512 ;;  p               1    9[COMMON] PTR void 
 19513 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19514 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19515 ;; Auto vars:     Size  Location     Type
 19516 ;;		None
 19517 ;; Return value:  Size  Location     Type
 19518 ;;                  1    wreg      enum E12568
 19519 ;; Registers used:
 19520 ;;		wreg
 19521 ;; Tracked objects:
 19522 ;;		On entry : 0/0
 19523 ;;		On exit  : 0/0
 19524 ;;		Unchanged: 0/0
 19525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19526 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19529 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19530 ;;Total ram usage:        1 bytes
 19531 ;; Hardware stack levels used:    1
 19532 ;; This function calls:
 19533 ;;		Nothing
 19534 ;; This function is called by:
 19535 ;;		_i2c_open
 19536 ;;		_do_I2C_DO_ADDRESS_NACK
 19537 ;;		_do_I2C_TX
 19538 ;;		_do_I2C_RX
 19539 ;;		_do_I2C_TX_EMPTY
 19540 ;; This function uses a non-reentrant model
 19541 ;;
 19542                           
 19543                           
 19544                           ;psect for function _returnReset
 19545  0002                     _returnReset:	
 19546  0002                     i1l5052:	
 19547                           ;incstack = 0
 19548                           ; Regs used in _returnReset: [wreg]
 19549                           
 19550                           
 19551                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 19552  0002  3005               	movlw	5
 19553  0003                     i1l1468:	
 19554  0003  0008               	return
 19555  0004                     __end_of_returnReset:	
 19556                           
 19557                           	psect	text89
 19558  09C5                     __ptext89:	
 19559 ;; *************** function _returnStop *****************
 19560 ;; Defined at:
 19561 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 19562 ;; Parameters:    Size  Location     Type
 19563 ;;  p               1    9[COMMON] PTR void 
 19564 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19565 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19566 ;; Auto vars:     Size  Location     Type
 19567 ;;		None
 19568 ;; Return value:  Size  Location     Type
 19569 ;;                  1    wreg      enum E12568
 19570 ;; Registers used:
 19571 ;;		wreg
 19572 ;; Tracked objects:
 19573 ;;		On entry : 0/0
 19574 ;;		On exit  : 0/0
 19575 ;;		Unchanged: 0/0
 19576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19577 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19580 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19581 ;;Total ram usage:        1 bytes
 19582 ;; Hardware stack levels used:    1
 19583 ;; This function calls:
 19584 ;;		Nothing
 19585 ;; This function is called by:
 19586 ;;		_setCallBack
 19587 ;;		_i2c_open
 19588 ;;		_do_I2C_DO_ADDRESS_NACK
 19589 ;;		_do_I2C_TX
 19590 ;;		_do_I2C_RX
 19591 ;;		_do_I2C_TX_EMPTY
 19592 ;; This function uses a non-reentrant model
 19593 ;;
 19594                           
 19595                           
 19596                           ;psect for function _returnStop
 19597  09C5                     _returnStop:	
 19598  09C5                     i1l5048:	
 19599                           ;incstack = 0
 19600                           ; Regs used in _returnStop: [wreg]
 19601                           
 19602                           
 19603                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
 19604  09C5  3001               	movlw	1
 19605  09C6                     i1l1465:	
 19606  09C6  0008               	return
 19607  09C7                     __end_of_returnStop:	
 19608                           
 19609                           	psect	text90
 19610  09C3                     __ptext90:	
 19611 ;; *************** function _i2c_restartWrite *****************
 19612 ;; Defined at:
 19613 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 19614 ;; Parameters:    Size  Location     Type
 19615 ;;  p               1    9[COMMON] PTR void 
 19616 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19617 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19618 ;; Auto vars:     Size  Location     Type
 19619 ;;		None
 19620 ;; Return value:  Size  Location     Type
 19621 ;;                  1    wreg      enum E358
 19622 ;; Registers used:
 19623 ;;		wreg
 19624 ;; Tracked objects:
 19625 ;;		On entry : 0/0
 19626 ;;		On exit  : 0/0
 19627 ;;		Unchanged: 0/0
 19628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19629 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19632 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19633 ;;Total ram usage:        1 bytes
 19634 ;; Hardware stack levels used:    1
 19635 ;; This function calls:
 19636 ;;		Nothing
 19637 ;; This function is called by:
 19638 ;;		_i2c_write1ByteRegister
 19639 ;;		_i2c_writeNBytes
 19640 ;;		_i2c_read1ByteRegister
 19641 ;;		_i2c_read2ByteRegister
 19642 ;;		_i2c_write2ByteRegister
 19643 ;;		_i2c_readDataBlock
 19644 ;;		_do_I2C_DO_ADDRESS_NACK
 19645 ;;		_do_I2C_TX
 19646 ;;		_do_I2C_RX
 19647 ;;		_do_I2C_TX_EMPTY
 19648 ;; This function uses a non-reentrant model
 19649 ;;
 19650                           
 19651                           
 19652                           ;psect for function _i2c_restartWrite
 19653  09C3                     _i2c_restartWrite:	
 19654  09C3                     i1l4978:	
 19655                           ;incstack = 0
 19656                           ; Regs used in _i2c_restartWrite: [wreg]
 19657                           
 19658                           
 19659                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
 19660  09C3  3003               	movlw	3
 19661  09C4                     i1l594:	
 19662  09C4  0008               	return
 19663  09C5                     __end_of_i2c_restartWrite:	
 19664                           
 19665                           	psect	text91
 19666  0B8D                     __ptext91:	
 19667 ;; *************** function _wr2RegCompleteHandler *****************
 19668 ;; Defined at:
 19669 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19670 ;; Parameters:    Size  Location     Type
 19671 ;;  p               1    9[COMMON] PTR void 
 19672 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19673 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19674 ;; Auto vars:     Size  Location     Type
 19675 ;;		None
 19676 ;; Return value:  Size  Location     Type
 19677 ;;                  1    wreg      enum E358
 19678 ;; Registers used:
 19679 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19680 ;; Tracked objects:
 19681 ;;		On entry : 0/0
 19682 ;;		On exit  : 0/0
 19683 ;;		Unchanged: 0/0
 19684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19685 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19688 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19689 ;;Total ram usage:        1 bytes
 19690 ;; Hardware stack levels used:    1
 19691 ;; Hardware stack levels required when called:    2
 19692 ;; This function calls:
 19693 ;;		_i2c_setBuffer
 19694 ;;		_i2c_setDataCompleteCallback
 19695 ;; This function is called by:
 19696 ;;		_i2c_write2ByteRegister
 19697 ;;		_do_I2C_DO_ADDRESS_NACK
 19698 ;;		_do_I2C_TX
 19699 ;;		_do_I2C_RX
 19700 ;;		_do_I2C_TX_EMPTY
 19701 ;; This function uses a non-reentrant model
 19702 ;;
 19703                           
 19704                           
 19705                           ;psect for function _wr2RegCompleteHandler
 19706  0B8D                     _wr2RegCompleteHandler:	
 19707  0B8D                     i1l5080:	
 19708                           ;incstack = 0
 19709                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 19710                           
 19711                           
 19712                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
 19713  0B8D  3002               	movlw	2
 19714  0B8E  00F0               	movwf	i2c_setBuffer@bufferSize
 19715  0B8F  3000               	movlw	0
 19716  0B90  00F1               	movwf	i2c_setBuffer@bufferSize+1
 19717  0B91  0879               	movf	wr2RegCompleteHandler@p,w
 19718  0B92  318B  235C  318B   	fcall	_i2c_setBuffer
 19719  0B95                     i1l5082:	
 19720                           
 19721                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 19722  0B95  3000               	movlw	0
 19723  0B96  00F5               	movwf	i2c_setDataCompleteCallback@cb
 19724  0B97  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 19725  0B98  01F7               	clrf	i2c_setDataCompleteCallback@p
 19726  0B99  318B  2307  318B   	fcall	_i2c_setDataCompleteCallback
 19727  0B9C                     i1l5084:	
 19728                           
 19729                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
 19730  0B9C  3004               	movlw	4
 19731  0B9D                     i1l1621:	
 19732  0B9D  0008               	return
 19733  0B9E                     __end_of_wr2RegCompleteHandler:	
 19734                           
 19735                           	psect	text92
 19736  0B07                     __ptext92:	
 19737 ;; *************** function _i2c_setDataCompleteCallback *****************
 19738 ;; Defined at:
 19739 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 19740 ;; Parameters:    Size  Location     Type
 19741 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 19742 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 19743 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 19744 ;;  p               1    7[COMMON] PTR void 
 19745 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19746 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19747 ;; Auto vars:     Size  Location     Type
 19748 ;;		None
 19749 ;; Return value:  Size  Location     Type
 19750 ;;                  1    wreg      void 
 19751 ;; Registers used:
 19752 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19753 ;; Tracked objects:
 19754 ;;		On entry : 0/0
 19755 ;;		On exit  : 0/0
 19756 ;;		Unchanged: 0/0
 19757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19758 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19760 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19761 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19762 ;;Total ram usage:        4 bytes
 19763 ;; Hardware stack levels used:    1
 19764 ;; Hardware stack levels required when called:    1
 19765 ;; This function calls:
 19766 ;;		_setCallBack
 19767 ;; This function is called by:
 19768 ;;		_wr1RegCompleteHandler
 19769 ;;		_rd1RegCompleteHandler
 19770 ;;		_rd2RegCompleteHandler
 19771 ;;		_wr2RegCompleteHandler
 19772 ;;		_rdBlkRegCompleteHandler
 19773 ;;		_i2c_write1ByteRegister
 19774 ;;		_i2c_read1ByteRegister
 19775 ;;		_i2c_read2ByteRegister
 19776 ;;		_i2c_write2ByteRegister
 19777 ;;		_i2c_readDataBlock
 19778 ;; This function uses a non-reentrant model
 19779 ;;
 19780                           
 19781                           
 19782                           ;psect for function _i2c_setDataCompleteCallback
 19783  0B07                     _i2c_setDataCompleteCallback:	
 19784  0B07                     i1l4758:	
 19785                           ;incstack = 0
 19786                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 19787                           
 19788                           
 19789                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
 19790  0B07  0876               	movf	i2c_setDataCompleteCallback@cb+1,w
 19791  0B08  00F1               	movwf	setCallBack@cb+1
 19792  0B09  0875               	movf	i2c_setDataCompleteCallback@cb,w
 19793  0B0A  00F0               	movwf	setCallBack@cb
 19794  0B0B  0877               	movf	i2c_setDataCompleteCallback@p,w
 19795  0B0C  00F8               	movwf	??_i2c_setDataCompleteCallback
 19796  0B0D  0878               	movf	??_i2c_setDataCompleteCallback,w
 19797  0B0E  00F2               	movwf	setCallBack@p
 19798  0B0F  3000               	movlw	0
 19799  0B10  318D  2596  318B   	fcall	_setCallBack
 19800  0B13                     i1l1322:	
 19801  0B13  0008               	return
 19802  0B14                     __end_of_i2c_setDataCompleteCallback:	
 19803                           
 19804                           	psect	text93
 19805  0D96                     __ptext93:	
 19806 ;; *************** function _setCallBack *****************
 19807 ;; Defined at:
 19808 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 19809 ;; Parameters:    Size  Location     Type
 19810 ;;  idx             1    wreg     enum E12740
 19811 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 19812 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 19813 ;;		 -> wr1RegCompleteHandler(1), i2c_restartWrite(1), Absolute function(1), 
 19814 ;;  p               1    2[COMMON] PTR void 
 19815 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19816 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19817 ;; Auto vars:     Size  Location     Type
 19818 ;;  idx             1    4[COMMON] enum E12740
 19819 ;; Return value:  Size  Location     Type
 19820 ;;                  1    wreg      void 
 19821 ;; Registers used:
 19822 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19823 ;; Tracked objects:
 19824 ;;		On entry : 0/0
 19825 ;;		On exit  : 0/0
 19826 ;;		Unchanged: 0/0
 19827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19828 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19829 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19830 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19831 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19832 ;;Total ram usage:        5 bytes
 19833 ;; Hardware stack levels used:    1
 19834 ;; This function calls:
 19835 ;;		Nothing
 19836 ;; This function is called by:
 19837 ;;		_i2c_setDataCompleteCallback
 19838 ;;		_i2c_setWriteCollisionCallback
 19839 ;;		_i2c_setAddressNACKCallback
 19840 ;;		_i2c_setDataNACKCallback
 19841 ;;		_i2c_setTimeOutCallback
 19842 ;; This function uses a non-reentrant model
 19843 ;;
 19844                           
 19845                           
 19846                           ;psect for function _setCallBack
 19847  0D96                     _setCallBack:	
 19848                           
 19849                           ;incstack = 0
 19850                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 19851                           ;setCallBack@idx stored from wreg
 19852  0D96  00F4               	movwf	setCallBack@idx
 19853  0D97                     i1l4526:	
 19854                           
 19855                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
 19856  0D97  0870               	movf	setCallBack@cb,w
 19857  0D98  0471               	iorwf	setCallBack@cb+1,w
 19858  0D99  1903               	btfsc	3,2
 19859  0D9A  2D9C               	goto	u194_21
 19860  0D9B  2D9D               	goto	u194_20
 19861  0D9C                     u194_21:	
 19862  0D9C  2DAE               	goto	i1l4530
 19863  0D9D                     u194_20:	
 19864  0D9D                     i1l4528:	
 19865                           
 19866                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
 19867  0D9D  3574               	lslf	setCallBack@idx,w
 19868  0D9E  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 19869  0D9F  0086               	movwf	6
 19870  0DA0  0187               	clrf	7
 19871  0DA1  0870               	movf	setCallBack@cb,w
 19872  0DA2  3FC0               	movwi [0]fsr1
 19873  0DA3  0871               	movf	setCallBack@cb+1,w
 19874  0DA4  3FC1               	movwi [1]fsr1
 19875                           
 19876                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
 19877  0DA5  0872               	movf	setCallBack@p,w
 19878  0DA6  00F3               	movwf	??_setCallBack
 19879  0DA7  0874               	movf	setCallBack@idx,w
 19880  0DA8  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 19881  0DA9  0086               	movwf	6
 19882  0DAA  0187               	clrf	7
 19883  0DAB  0873               	movf	??_setCallBack,w
 19884  0DAC  0081               	movwf	1
 19885                           
 19886                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
 19887  0DAD  2DBB               	goto	i1l1473
 19888  0DAE                     i1l4530:	
 19889                           
 19890                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
 19891  0DAE  3574               	lslf	setCallBack@idx,w
 19892  0DAF  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 19893  0DB0  0086               	movwf	6
 19894  0DB1  0187               	clrf	7
 19895  0DB2  30C5               	movlw	low _returnStop
 19896  0DB3  3FC0               	movwi [0]fsr1
 19897  0DB4  3009               	movlw	high _returnStop
 19898  0DB5  3FC1               	movwi [1]fsr1
 19899                           
 19900                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
 19901  0DB6  0874               	movf	setCallBack@idx,w
 19902  0DB7  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 19903  0DB8  0086               	movwf	6
 19904  0DB9  0187               	clrf	7
 19905  0DBA  0181               	clrf	1
 19906  0DBB                     i1l1473:	
 19907  0DBB  0008               	return
 19908  0DBC                     __end_of_setCallBack:	
 19909                           
 19910                           	psect	text94
 19911  0B5C                     __ptext94:	
 19912 ;; *************** function _i2c_setBuffer *****************
 19913 ;; Defined at:
 19914 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 19915 ;; Parameters:    Size  Location     Type
 19916 ;;  buffer          1    wreg     PTR void 
 19917 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 19918 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 19919 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 19920 ;;  bufferSize      2    0[COMMON] unsigned int 
 19921 ;; Auto vars:     Size  Location     Type
 19922 ;;  buffer          1    3[COMMON] PTR void 
 19923 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 19924 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 19925 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 19926 ;; Return value:  Size  Location     Type
 19927 ;;                  1    wreg      void 
 19928 ;; Registers used:
 19929 ;;		wreg
 19930 ;; Tracked objects:
 19931 ;;		On entry : 0/0
 19932 ;;		On exit  : 0/0
 19933 ;;		Unchanged: 0/0
 19934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19935 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19936 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19937 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19938 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19939 ;;Total ram usage:        4 bytes
 19940 ;; Hardware stack levels used:    1
 19941 ;; This function calls:
 19942 ;;		Nothing
 19943 ;; This function is called by:
 19944 ;;		_wr1RegCompleteHandler
 19945 ;;		_rd1RegCompleteHandler
 19946 ;;		_rd2RegCompleteHandler
 19947 ;;		_wr2RegCompleteHandler
 19948 ;;		_rdBlkRegCompleteHandler
 19949 ;;		_i2c_write1ByteRegister
 19950 ;;		_i2c_writeNBytes
 19951 ;;		_i2c_read1ByteRegister
 19952 ;;		_i2c_read2ByteRegister
 19953 ;;		_i2c_write2ByteRegister
 19954 ;;		_i2c_readDataBlock
 19955 ;;		_i2c_readNBytes
 19956 ;; This function uses a non-reentrant model
 19957 ;;
 19958                           
 19959                           
 19960                           ;psect for function _i2c_setBuffer
 19961  0B5C                     _i2c_setBuffer:	
 19962                           
 19963                           ;incstack = 0
 19964                           ; Regs used in _i2c_setBuffer: [wreg]
 19965                           ;i2c_setBuffer@buffer stored from wreg
 19966  0B5C  00F3               	movwf	i2c_setBuffer@buffer
 19967  0B5D                     i1l4760:	
 19968                           
 19969                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
 19970  0B5D  0021               	movlb	1	; select bank1
 19971  0B5E  1D20               	btfss	_i2c_status^(0+128),2
 19972  0B5F  2B61               	goto	u232_21
 19973  0B60  2B62               	goto	u232_20
 19974  0B61                     u232_21:	
 19975  0B61  2B6B               	goto	i1l1352
 19976  0B62                     u232_20:	
 19977  0B62                     i1l4762:	
 19978                           
 19979                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
 19980  0B62  0873               	movf	i2c_setBuffer@buffer,w
 19981  0B63  00F2               	movwf	??_i2c_setBuffer
 19982  0B64  0872               	movf	??_i2c_setBuffer,w
 19983  0B65  00A2               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 19984                           
 19985                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
 19986  0B66  0871               	movf	i2c_setBuffer@bufferSize+1,w
 19987  0B67  00A4               	movwf	((_i2c_status+1)^(0+128)+3)
 19988  0B68  0870               	movf	i2c_setBuffer@bufferSize,w
 19989  0B69  00A3               	movwf	(_i2c_status^(0+128)+3)
 19990  0B6A                     i1l4764:	
 19991                           
 19992                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
 19993  0B6A  1120               	bcf	_i2c_status^(0+128),2
 19994  0B6B                     i1l1352:	
 19995  0B6B  0008               	return
 19996  0B6C                     __end_of_i2c_setBuffer:	
 19997                           
 19998                           	psect	text95
 19999  09CD                     __ptext95:	
 20000 ;; *************** function _i2c1_driver_stop *****************
 20001 ;; Defined at:
 20002 ;;		line 157 in file "mcc_generated_files/i2c1_driver.c"
 20003 ;; Parameters:    Size  Location     Type
 20004 ;;		None
 20005 ;; Auto vars:     Size  Location     Type
 20006 ;;		None
 20007 ;; Return value:  Size  Location     Type
 20008 ;;                  1    wreg      void 
 20009 ;; Registers used:
 20010 ;;		None
 20011 ;; Tracked objects:
 20012 ;;		On entry : 0/0
 20013 ;;		On exit  : 0/0
 20014 ;;		Unchanged: 0/0
 20015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20020 ;;Total ram usage:        0 bytes
 20021 ;; Hardware stack levels used:    1
 20022 ;; This function calls:
 20023 ;;		Nothing
 20024 ;; This function is called by:
 20025 ;;		_do_I2C_SEND_STOP
 20026 ;; This function uses a non-reentrant model
 20027 ;;
 20028                           
 20029                           
 20030                           ;psect for function _i2c1_driver_stop
 20031  09CD                     _i2c1_driver_stop:	
 20032  09CD                     i1l4754:	
 20033                           ;incstack = 0
 20034                           ; Regs used in _i2c1_driver_stop: []
 20035                           
 20036                           
 20037                           ;mcc_generated_files/i2c1_driver.c: 159:     SSP1CON2bits.PEN = 1;
 20038  09CD  0023               	movlb	3	; select bank3
 20039  09CE  1511               	bsf	17,2	;volatile
 20040  09CF                     i1l773:	
 20041  09CF  0008               	return
 20042  09D0                     __end_of_i2c1_driver_stop:	
 20043                           
 20044                           	psect	text96
 20045  09CA                     __ptext96:	
 20046 ;; *************** function _i2c1_driver_restart *****************
 20047 ;; Defined at:
 20048 ;;		line 152 in file "mcc_generated_files/i2c1_driver.c"
 20049 ;; Parameters:    Size  Location     Type
 20050 ;;		None
 20051 ;; Auto vars:     Size  Location     Type
 20052 ;;		None
 20053 ;; Return value:  Size  Location     Type
 20054 ;;                  1    wreg      void 
 20055 ;; Registers used:
 20056 ;;		None
 20057 ;; Tracked objects:
 20058 ;;		On entry : 0/0
 20059 ;;		On exit  : 0/0
 20060 ;;		Unchanged: 0/0
 20061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20066 ;;Total ram usage:        0 bytes
 20067 ;; Hardware stack levels used:    1
 20068 ;; This function calls:
 20069 ;;		Nothing
 20070 ;; This function is called by:
 20071 ;;		_do_I2C_SEND_RESTART_READ
 20072 ;;		_do_I2C_SEND_RESTART_WRITE
 20073 ;;		_do_I2C_SEND_RESTART
 20074 ;; This function uses a non-reentrant model
 20075 ;;
 20076                           
 20077                           
 20078                           ;psect for function _i2c1_driver_restart
 20079  09CA                     _i2c1_driver_restart:	
 20080  09CA                     i1l4752:	
 20081                           ;incstack = 0
 20082                           ; Regs used in _i2c1_driver_restart: []
 20083                           
 20084                           
 20085                           ;mcc_generated_files/i2c1_driver.c: 154:     SSP1CON2bits.RSEN = 1;
 20086  09CA  0023               	movlb	3	; select bank3
 20087  09CB  1491               	bsf	17,1	;volatile
 20088  09CC                     i1l770:	
 20089  09CC  0008               	return
 20090  09CD                     __end_of_i2c1_driver_restart:	
 20091                           
 20092                           	psect	text97
 20093  09E2                     __ptext97:	
 20094 ;; *************** function _i2c1_driver_sendACK *****************
 20095 ;; Defined at:
 20096 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
 20097 ;; Parameters:    Size  Location     Type
 20098 ;;		None
 20099 ;; Auto vars:     Size  Location     Type
 20100 ;;		None
 20101 ;; Return value:  Size  Location     Type
 20102 ;;                  1    wreg      void 
 20103 ;; Registers used:
 20104 ;;		None
 20105 ;; Tracked objects:
 20106 ;;		On entry : 0/0
 20107 ;;		On exit  : 0/0
 20108 ;;		Unchanged: 0/0
 20109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20114 ;;Total ram usage:        0 bytes
 20115 ;; Hardware stack levels used:    1
 20116 ;; This function calls:
 20117 ;;		Nothing
 20118 ;; This function is called by:
 20119 ;;		_do_I2C_DO_ACK
 20120 ;;		_do_I2C_RX
 20121 ;; This function uses a non-reentrant model
 20122 ;;
 20123                           
 20124                           
 20125                           ;psect for function _i2c1_driver_sendACK
 20126  09E2                     _i2c1_driver_sendACK:	
 20127  09E2                     i1l5002:	
 20128                           ;incstack = 0
 20129                           ; Regs used in _i2c1_driver_sendACK: []
 20130                           
 20131                           
 20132                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKDT = 0;
 20133  09E2  0023               	movlb	3	; select bank3
 20134  09E3  1291               	bcf	17,5	;volatile
 20135                           
 20136                           ;mcc_generated_files/i2c1_driver.c: 200:     SSP1CON2bits.ACKEN = 1;
 20137  09E4  1611               	bsf	17,4	;volatile
 20138  09E5                     i1l797:	
 20139  09E5  0008               	return
 20140  09E6                     __end_of_i2c1_driver_sendACK:	
 20141                           
 20142                           	psect	text98
 20143  0B3E                     __ptext98:	
 20144 ;; *************** function _TMR2_ISR *****************
 20145 ;; Defined at:
 20146 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 20147 ;; Parameters:    Size  Location     Type
 20148 ;;		None
 20149 ;; Auto vars:     Size  Location     Type
 20150 ;;		None
 20151 ;; Return value:  Size  Location     Type
 20152 ;;                  1    wreg      void 
 20153 ;; Registers used:
 20154 ;;		wreg, status,2, status,0, pclath, cstack
 20155 ;; Tracked objects:
 20156 ;;		On entry : 0/0
 20157 ;;		On exit  : 0/0
 20158 ;;		Unchanged: 0/0
 20159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20164 ;;Total ram usage:        0 bytes
 20165 ;; Hardware stack levels used:    1
 20166 ;; Hardware stack levels required when called:    1
 20167 ;; This function calls:
 20168 ;;		Absolute function
 20169 ;;		_TMR2_DefaultInterruptHandler
 20170 ;;		_handler_clock_ms
 20171 ;; This function is called by:
 20172 ;;		_INTERRUPT_InterruptManager
 20173 ;; This function uses a non-reentrant model
 20174 ;;
 20175                           
 20176                           
 20177                           ;psect for function _TMR2_ISR
 20178  0B3E                     _TMR2_ISR:	
 20179  0B3E                     i1l5750:	
 20180                           ;incstack = 0
 20181                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 20182                           
 20183                           
 20184                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
 20185  0B3E  002E               	movlb	14	; select bank14
 20186  0B3F  1090               	bcf	16,1	;volatile
 20187  0B40                     i1l5752:	
 20188                           
 20189                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
 20190  0B40  0021               	movlb	1	; select bank1
 20191  0B41  084C               	movf	_TMR2_InterruptHandler^(0+128),w
 20192  0B42  044D               	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
 20193  0B43  1903               	btfsc	3,2
 20194  0B44  2B46               	goto	u295_21
 20195  0B45  2B47               	goto	u295_20
 20196  0B46                     u295_21:	
 20197  0B46  2B4C               	goto	i1l1548
 20198  0B47                     u295_20:	
 20199  0B47                     i1l5754:	
 20200                           
 20201                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
 20202  0B47  084D               	movf	(_TMR2_InterruptHandler+1)^(0+128),w
 20203  0B48  008A               	movwf	10
 20204  0B49  084C               	movf	_TMR2_InterruptHandler^(0+128),w
 20205  0B4A  000A               	callw
 20206  0B4B  318B               	pagesel	$
 20207  0B4C                     i1l1548:	
 20208  0B4C  0008               	return
 20209  0B4D                     __end_of_TMR2_ISR:	
 20210                           
 20211                           	psect	text99
 20212  09C2                     __ptext99:	
 20213 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 20214 ;; Defined at:
 20215 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 20216 ;; Parameters:    Size  Location     Type
 20217 ;;		None
 20218 ;; Auto vars:     Size  Location     Type
 20219 ;;		None
 20220 ;; Return value:  Size  Location     Type
 20221 ;;                  1    wreg      void 
 20222 ;; Registers used:
 20223 ;;		None
 20224 ;; Tracked objects:
 20225 ;;		On entry : 0/0
 20226 ;;		On exit  : 0/0
 20227 ;;		Unchanged: 0/0
 20228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20233 ;;Total ram usage:        0 bytes
 20234 ;; Hardware stack levels used:    1
 20235 ;; This function calls:
 20236 ;;		Nothing
 20237 ;; This function is called by:
 20238 ;;		_TMR2_Initialize
 20239 ;;		_TMR2_ISR
 20240 ;; This function uses a non-reentrant model
 20241 ;;
 20242                           
 20243                           
 20244                           ;psect for function _TMR2_DefaultInterruptHandler
 20245  09C2                     _TMR2_DefaultInterruptHandler:	
 20246  09C2                     i1l1554:	
 20247                           ;incstack = 0
 20248                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 20249                           
 20250  09C2  0008               	return
 20251  09C3                     __end_of_TMR2_DefaultInterruptHandler:	
 20252                           
 20253                           	psect	text100
 20254  0AE2                     __ptext100:	
 20255 ;; *************** function _handler_clock_ms *****************
 20256 ;; Defined at:
 20257 ;;		line 632 in file "main.c"
 20258 ;; Parameters:    Size  Location     Type
 20259 ;;		None
 20260 ;; Auto vars:     Size  Location     Type
 20261 ;;		None
 20262 ;; Return value:  Size  Location     Type
 20263 ;;                  1    wreg      void 
 20264 ;; Registers used:
 20265 ;;		wreg, status,2, status,0
 20266 ;; Tracked objects:
 20267 ;;		On entry : 0/0
 20268 ;;		On exit  : 0/0
 20269 ;;		Unchanged: 0/0
 20270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20273 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20274 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20275 ;;Total ram usage:        1 bytes
 20276 ;; Hardware stack levels used:    1
 20277 ;; This function calls:
 20278 ;;		Nothing
 20279 ;; This function is called by:
 20280 ;;		_main
 20281 ;;		_TMR2_ISR
 20282 ;; This function uses a non-reentrant model
 20283 ;;
 20284                           
 20285                           
 20286                           ;psect for function _handler_clock_ms
 20287  0AE2                     _handler_clock_ms:	
 20288  0AE2                     i1l5184:	
 20289                           ;incstack = 0
 20290                           ; Regs used in _handler_clock_ms: [wreg+status,2+status,0]
 20291                           
 20292                           
 20293                           ;main.c: 633:     clkms++;
 20294  0AE2  3001               	movlw	1
 20295  0AE3  00F0               	movwf	??_handler_clock_ms
 20296  0AE4  0870               	movf	??_handler_clock_ms,w
 20297  0AE5  07FD               	addwf	_clkms,f	;volatile
 20298  0AE6                     i1l5186:	
 20299                           
 20300                           ;main.c: 635:     if(clkms > 200){
 20301  0AE6  30C9               	movlw	201
 20302  0AE7  027D               	subwf	_clkms,w	;volatile
 20303  0AE8  1C03               	skipc
 20304  0AE9  2AEB               	goto	u264_21
 20305  0AEA  2AEC               	goto	u264_20
 20306  0AEB                     u264_21:	
 20307  0AEB  2AED               	goto	i1l336
 20308  0AEC                     u264_20:	
 20309  0AEC                     i1l5188:	
 20310                           
 20311                           ;main.c: 636:         clkms = 0;
 20312  0AEC  01FD               	clrf	_clkms	;volatile
 20313  0AED                     i1l336:	
 20314  0AED  0008               	return
 20315  0AEE                     __end_of_handler_clock_ms:	
 20316                           
 20317                           	psect	text101
 20318  0C28                     __ptext101:	
 20319 ;; *************** function _TMR1_ISR *****************
 20320 ;; Defined at:
 20321 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 20322 ;; Parameters:    Size  Location     Type
 20323 ;;		None
 20324 ;; Auto vars:     Size  Location     Type
 20325 ;;		None
 20326 ;; Return value:  Size  Location     Type
 20327 ;;                  1    wreg      void 
 20328 ;; Registers used:
 20329 ;;		wreg, status,2, status,0, pclath, cstack
 20330 ;; Tracked objects:
 20331 ;;		On entry : 0/0
 20332 ;;		On exit  : 0/0
 20333 ;;		Unchanged: 0/0
 20334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20339 ;;Total ram usage:        0 bytes
 20340 ;; Hardware stack levels used:    1
 20341 ;; Hardware stack levels required when called:    1
 20342 ;; This function calls:
 20343 ;;		Absolute function
 20344 ;;		_TMR1_DefaultInterruptHandler
 20345 ;;		_TMR1_WriteTimer
 20346 ;;		_handler_clock_hms
 20347 ;; This function is called by:
 20348 ;;		_INTERRUPT_InterruptManager
 20349 ;; This function uses a non-reentrant model
 20350 ;;
 20351                           
 20352                           
 20353                           ;psect for function _TMR1_ISR
 20354  0C28                     _TMR1_ISR:	
 20355  0C28                     i1l5742:	
 20356                           ;incstack = 0
 20357                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 20358                           
 20359                           
 20360                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 20361  0C28  002E               	movlb	14	; select bank14
 20362  0C29  1010               	bcf	16,0	;volatile
 20363  0C2A                     i1l5744:	
 20364                           
 20365                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 20366  0C2A  0020               	movlb	0	; select bank0
 20367  0C2B  0869               	movf	_timer1ReloadVal+1,w	;volatile
 20368  0C2C  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 20369  0C2D  0868               	movf	_timer1ReloadVal,w	;volatile
 20370  0C2E  00F0               	movwf	TMR1_WriteTimer@timerVal
 20371  0C2F  318B  237C  318C   	fcall	_TMR1_WriteTimer
 20372  0C32                     i1l5746:	
 20373                           
 20374                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 20375  0C32  0021               	movlb	1	; select bank1
 20376  0C33  084E               	movf	_TMR1_InterruptHandler^(0+128),w
 20377  0C34  044F               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 20378  0C35  1903               	btfsc	3,2
 20379  0C36  2C38               	goto	u294_21
 20380  0C37  2C39               	goto	u294_20
 20381  0C38                     u294_21:	
 20382  0C38  2C3E               	goto	i1l1194
 20383  0C39                     u294_20:	
 20384  0C39                     i1l5748:	
 20385                           
 20386                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 20387  0C39  084F               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 20388  0C3A  008A               	movwf	10
 20389  0C3B  084E               	movf	_TMR1_InterruptHandler^(0+128),w
 20390  0C3C  000A               	callw
 20391  0C3D  318C               	pagesel	$
 20392  0C3E                     i1l1194:	
 20393  0C3E  0008               	return
 20394  0C3F                     __end_of_TMR1_ISR:	
 20395                           
 20396                           	psect	text102
 20397  09C1                     __ptext102:	
 20398 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 20399 ;; Defined at:
 20400 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 20401 ;; Parameters:    Size  Location     Type
 20402 ;;		None
 20403 ;; Auto vars:     Size  Location     Type
 20404 ;;		None
 20405 ;; Return value:  Size  Location     Type
 20406 ;;                  1    wreg      void 
 20407 ;; Registers used:
 20408 ;;		None
 20409 ;; Tracked objects:
 20410 ;;		On entry : 0/0
 20411 ;;		On exit  : 0/0
 20412 ;;		Unchanged: 0/0
 20413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20418 ;;Total ram usage:        0 bytes
 20419 ;; Hardware stack levels used:    1
 20420 ;; This function calls:
 20421 ;;		Nothing
 20422 ;; This function is called by:
 20423 ;;		_TMR1_Initialize
 20424 ;;		_TMR1_ISR
 20425 ;; This function uses a non-reentrant model
 20426 ;;
 20427                           
 20428                           
 20429                           ;psect for function _TMR1_DefaultInterruptHandler
 20430  09C1                     _TMR1_DefaultInterruptHandler:	
 20431  09C1                     i1l1200:	
 20432                           ;incstack = 0
 20433                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 20434                           
 20435  09C1  0008               	return
 20436  09C2                     __end_of_TMR1_DefaultInterruptHandler:	
 20437                           
 20438                           	psect	text103
 20439  0F8D                     __ptext103:	
 20440 ;; *************** function _handler_clock_hms *****************
 20441 ;; Defined at:
 20442 ;;		line 606 in file "main.c"
 20443 ;; Parameters:    Size  Location     Type
 20444 ;;		None
 20445 ;; Auto vars:     Size  Location     Type
 20446 ;;		None
 20447 ;; Return value:  Size  Location     Type
 20448 ;;                  1    wreg      void 
 20449 ;; Registers used:
 20450 ;;		wreg, status,2, status,0
 20451 ;; Tracked objects:
 20452 ;;		On entry : 0/0
 20453 ;;		On exit  : 0/0
 20454 ;;		Unchanged: 0/0
 20455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20458 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20459 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20460 ;;Total ram usage:        1 bytes
 20461 ;; Hardware stack levels used:    1
 20462 ;; This function calls:
 20463 ;;		Nothing
 20464 ;; This function is called by:
 20465 ;;		_main
 20466 ;;		_TMR1_ISR
 20467 ;; This function uses a non-reentrant model
 20468 ;;
 20469                           
 20470                           
 20471                           ;psect for function _handler_clock_hms
 20472  0F8D                     _handler_clock_hms:	
 20473  0F8D                     i1l5164:	
 20474                           ;incstack = 0
 20475                           ; Regs used in _handler_clock_hms: [wreg+status,2+status,0]
 20476                           
 20477                           
 20478                           ;main.c: 608:     if(!config_mode){
 20479  0F8D  0020               	movlb	0	; select bank0
 20480  0F8E  0854               	movf	_config_mode,w	;volatile
 20481  0F8F  1D03               	btfss	3,2
 20482  0F90  2F92               	goto	u259_21
 20483  0F91  2F93               	goto	u259_20
 20484  0F92                     u259_21:	
 20485  0F92  2F9E               	goto	i1l5168
 20486  0F93                     u259_20:	
 20487  0F93                     i1l5166:	
 20488  0F93  1003               	clrc
 20489  0F94  1F96               	btfss	22,7	;volatile
 20490  0F95  1403               	setc
 20491  0F96  1803               	btfsc	3,0
 20492  0F97  2F99               	goto	u260_21
 20493  0F98  2F9C               	goto	u260_20
 20494  0F99                     u260_21:	
 20495  0F99  0020               	movlb	0	; select bank0
 20496  0F9A  1796               	bsf	22,7	;volatile
 20497  0F9B  2F9E               	goto	u261_24
 20498  0F9C                     u260_20:	
 20499  0F9C  0020               	movlb	0	; select bank0
 20500  0F9D  1396               	bcf	22,7	;volatile
 20501  0F9E                     u261_24:	
 20502  0F9E                     i1l5168:	
 20503                           
 20504                           ;main.c: 612:     last5s++;
 20505  0F9E  3001               	movlw	1
 20506  0F9F  00F0               	movwf	??_handler_clock_hms
 20507  0FA0  0870               	movf	??_handler_clock_hms,w
 20508  0FA1  07D7               	addwf	_last5s,f	;volatile
 20509  0FA2                     i1l5170:	
 20510                           
 20511                           ;main.c: 613:     seg++;
 20512  0FA2  3001               	movlw	1
 20513  0FA3  00F0               	movwf	??_handler_clock_hms
 20514  0FA4  0870               	movf	??_handler_clock_hms,w
 20515  0FA5  07DA               	addwf	_seg,f	;volatile
 20516  0FA6                     i1l5172:	
 20517                           
 20518                           ;main.c: 614:     if(seg >= 60) {
 20519  0FA6  303C               	movlw	60
 20520  0FA7  025A               	subwf	_seg,w	;volatile
 20521  0FA8  1C03               	skipc
 20522  0FA9  2FAB               	goto	u262_21
 20523  0FAA  2FAC               	goto	u262_20
 20524  0FAB                     u262_21:	
 20525  0FAB  2FC0               	goto	i1l332
 20526  0FAC                     u262_20:	
 20527  0FAC                     i1l5174:	
 20528                           
 20529                           ;main.c: 615:         clkm++;
 20530  0FAC  3001               	movlw	1
 20531  0FAD  00F0               	movwf	??_handler_clock_hms
 20532  0FAE  0870               	movf	??_handler_clock_hms,w
 20533  0FAF  07DB               	addwf	_clkm,f	;volatile
 20534                           
 20535                           ;main.c: 616:         last1m++;
 20536  0FB0  3001               	movlw	1
 20537  0FB1  00F0               	movwf	??_handler_clock_hms
 20538  0FB2  0870               	movf	??_handler_clock_hms,w
 20539  0FB3  07D6               	addwf	_last1m,f	;volatile
 20540  0FB4                     i1l5176:	
 20541                           
 20542                           ;main.c: 617:         seg = 0;
 20543  0FB4  01DA               	clrf	_seg	;volatile
 20544  0FB5                     i1l5178:	
 20545                           
 20546                           ;main.c: 618:         if(clkm >= 60) {
 20547  0FB5  303C               	movlw	60
 20548  0FB6  025B               	subwf	_clkm,w	;volatile
 20549  0FB7  1C03               	skipc
 20550  0FB8  2FBA               	goto	u263_21
 20551  0FB9  2FBB               	goto	u263_20
 20552  0FBA                     u263_21:	
 20553  0FBA  2FC0               	goto	i1l332
 20554  0FBB                     u263_20:	
 20555  0FBB                     i1l5180:	
 20556                           
 20557                           ;main.c: 619:             clkh++;
 20558  0FBB  3001               	movlw	1
 20559  0FBC  00F0               	movwf	??_handler_clock_hms
 20560  0FBD  0870               	movf	??_handler_clock_hms,w
 20561  0FBE  07DC               	addwf	_clkh,f	;volatile
 20562  0FBF                     i1l5182:	
 20563                           
 20564                           ;main.c: 620:             clkm = 0;
 20565  0FBF  01DB               	clrf	_clkm	;volatile
 20566  0FC0                     i1l332:	
 20567  0FC0  0008               	return
 20568  0FC1                     __end_of_handler_clock_hms:	
 20569                           
 20570                           	psect	text104
 20571  0B7C                     __ptext104:	
 20572 ;; *************** function _TMR1_WriteTimer *****************
 20573 ;; Defined at:
 20574 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 20575 ;; Parameters:    Size  Location     Type
 20576 ;;  timerVal        2    0[COMMON] unsigned short 
 20577 ;; Auto vars:     Size  Location     Type
 20578 ;;		None
 20579 ;; Return value:  Size  Location     Type
 20580 ;;                  1    wreg      void 
 20581 ;; Registers used:
 20582 ;;		wreg, status,2
 20583 ;; Tracked objects:
 20584 ;;		On entry : 0/0
 20585 ;;		On exit  : 0/0
 20586 ;;		Unchanged: 0/0
 20587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20588 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20591 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20592 ;;Total ram usage:        2 bytes
 20593 ;; Hardware stack levels used:    1
 20594 ;; This function calls:
 20595 ;;		Nothing
 20596 ;; This function is called by:
 20597 ;;		_TMR1_ISR
 20598 ;;		_TMR1_Reload
 20599 ;; This function uses a non-reentrant model
 20600 ;;
 20601                           
 20602                           
 20603                           ;psect for function _TMR1_WriteTimer
 20604  0B7C                     _TMR1_WriteTimer:	
 20605  0B7C                     i1l5338:	
 20606                           ;incstack = 0
 20607                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 20608                           
 20609                           
 20610                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 20611  0B7C  0024               	movlb	4	; select bank4
 20612  0B7D  1D0E               	btfss	14,2	;volatile
 20613  0B7E  2B80               	goto	u267_21
 20614  0B7F  2B81               	goto	u267_20
 20615  0B80                     u267_21:	
 20616  0B80  2B88               	goto	i1l5348
 20617  0B81                     u267_20:	
 20618  0B81                     i1l5340:	
 20619                           
 20620                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 20621  0B81  100E               	bcf	14,0	;volatile
 20622  0B82                     i1l5342:	
 20623                           
 20624                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 20625  0B82  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 20626  0B83  008D               	movwf	13	;volatile
 20627  0B84                     i1l5344:	
 20628                           
 20629                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 20630  0B84  0870               	movf	TMR1_WriteTimer@timerVal,w
 20631  0B85  008C               	movwf	12	;volatile
 20632  0B86                     i1l5346:	
 20633                           
 20634                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 20635  0B86  140E               	bsf	14,0	;volatile
 20636                           
 20637                           ;mcc_generated_files/tmr1.c: 140:     }
 20638  0B87  2B8C               	goto	i1l1181
 20639  0B88                     i1l5348:	
 20640                           
 20641                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 20642  0B88  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 20643  0B89  008D               	movwf	13	;volatile
 20644  0B8A                     i1l5350:	
 20645                           
 20646                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 20647  0B8A  0870               	movf	TMR1_WriteTimer@timerVal,w
 20648  0B8B  008C               	movwf	12	;volatile
 20649  0B8C                     i1l1181:	
 20650  0B8C  0008               	return
 20651  0B8D                     __end_of_TMR1_WriteTimer:	
 20652                           
 20653                           	psect	text105
 20654  0B2F                     __ptext105:	
 20655 ;; *************** function _TMR0_ISR *****************
 20656 ;; Defined at:
 20657 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 20658 ;; Parameters:    Size  Location     Type
 20659 ;;		None
 20660 ;; Auto vars:     Size  Location     Type
 20661 ;;		None
 20662 ;; Return value:  Size  Location     Type
 20663 ;;                  1    wreg      void 
 20664 ;; Registers used:
 20665 ;;		wreg, status,2, status,0, pclath, cstack
 20666 ;; Tracked objects:
 20667 ;;		On entry : 0/0
 20668 ;;		On exit  : 0/0
 20669 ;;		Unchanged: 0/0
 20670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20675 ;;Total ram usage:        0 bytes
 20676 ;; Hardware stack levels used:    1
 20677 ;; Hardware stack levels required when called:    2
 20678 ;; This function calls:
 20679 ;;		Absolute function
 20680 ;;		_ISR_3s
 20681 ;;		_TMR0_DefaultInterruptHandler
 20682 ;; This function is called by:
 20683 ;;		_INTERRUPT_InterruptManager
 20684 ;; This function uses a non-reentrant model
 20685 ;;
 20686                           
 20687                           
 20688                           ;psect for function _TMR0_ISR
 20689  0B2F                     _TMR0_ISR:	
 20690  0B2F                     i1l5736:	
 20691                           ;incstack = 0
 20692                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 20693                           
 20694                           
 20695                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 20696  0B2F  002E               	movlb	14	; select bank14
 20697  0B30  128C               	bcf	12,5	;volatile
 20698  0B31                     i1l5738:	
 20699                           
 20700                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 20701  0B31  0021               	movlb	1	; select bank1
 20702  0B32  0850               	movf	_TMR0_InterruptHandler^(0+128),w
 20703  0B33  0451               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 20704  0B34  1903               	btfsc	3,2
 20705  0B35  2B37               	goto	u293_21
 20706  0B36  2B38               	goto	u293_20
 20707  0B37                     u293_21:	
 20708  0B37  2B3D               	goto	i1l1130
 20709  0B38                     u293_20:	
 20710  0B38                     i1l5740:	
 20711                           
 20712                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 20713  0B38  0851               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 20714  0B39  008A               	movwf	10
 20715  0B3A  0850               	movf	_TMR0_InterruptHandler^(0+128),w
 20716  0B3B  000A               	callw
 20717  0B3C  318B               	pagesel	$
 20718  0B3D                     i1l1130:	
 20719  0B3D  0008               	return
 20720  0B3E                     __end_of_TMR0_ISR:	
 20721                           
 20722                           	psect	text106
 20723  0C6F                     __ptext106:	
 20724 ;; *************** function _ISR_3s *****************
 20725 ;; Defined at:
 20726 ;;		line 155 in file "main.c"
 20727 ;; Parameters:    Size  Location     Type
 20728 ;;		None
 20729 ;; Auto vars:     Size  Location     Type
 20730 ;;		None
 20731 ;; Return value:  Size  Location     Type
 20732 ;;                  1    wreg      void 
 20733 ;; Registers used:
 20734 ;;		wreg, status,2, status,0, pclath, cstack
 20735 ;; Tracked objects:
 20736 ;;		On entry : 0/0
 20737 ;;		On exit  : 0/0
 20738 ;;		Unchanged: 0/0
 20739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20742 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20743 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20744 ;;Total ram usage:        1 bytes
 20745 ;; Hardware stack levels used:    1
 20746 ;; Hardware stack levels required when called:    1
 20747 ;; This function calls:
 20748 ;;		_TMR0_StopTimer
 20749 ;;		i1_PWM6_LoadDutyValue
 20750 ;; This function is called by:
 20751 ;;		_main
 20752 ;;		_TMR0_ISR
 20753 ;; This function uses a non-reentrant model
 20754 ;;
 20755                           
 20756                           
 20757                           ;psect for function _ISR_3s
 20758  0C6F                     _ISR_3s:	
 20759  0C6F                     i1l5094:	
 20760                           ;incstack = 0
 20761                           ; Regs used in _ISR_3s: [wreg+status,2+status,0+pclath+cstack]
 20762                           
 20763                           
 20764                           ;main.c: 157:     if (lum_threshold){
 20765  0C6F  0020               	movlb	0	; select bank0
 20766  0C70  0845               	movf	_lum_threshold,w
 20767  0C71  0446               	iorwf	_lum_threshold+1,w
 20768  0C72  1903               	btfsc	3,2
 20769  0C73  2C75               	goto	u251_21
 20770  0C74  2C76               	goto	u251_20
 20771  0C75                     u251_21:	
 20772  0C75  2C82               	goto	i1l195
 20773  0C76                     u251_20:	
 20774  0C76                     i1l5096:	
 20775                           
 20776                           ;main.c: 158:         PWM6_LoadDutyValue(1023);
 20777  0C76  30FF               	movlw	255
 20778  0C77  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 20779  0C78  3003               	movlw	3
 20780  0C79  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 20781  0C7A  318B  23E6  318C   	fcall	i1_PWM6_LoadDutyValue
 20782  0C7D                     i1l5098:	
 20783                           
 20784                           ;main.c: 159:         alarm = 1;
 20785  0C7D  3001               	movlw	1
 20786  0C7E  00F4               	movwf	??_ISR_3s
 20787  0C7F  0874               	movf	??_ISR_3s,w
 20788  0C80  0020               	movlb	0	; select bank0
 20789  0C81  00D3               	movwf	_alarm	;volatile
 20790  0C82                     i1l195:	
 20791                           ;main.c: 161:     }
 20792                           
 20793                           
 20794                           ;main.c: 163:     TMR0_StopTimer();
 20795  0C82  3189  21C7  318C   	fcall	_TMR0_StopTimer
 20796  0C85                     i1l5100:	
 20797                           
 20798                           ;main.c: 164:     PIE0bits.TMR0IE = 0;
 20799  0C85  002E               	movlb	14	; select bank14
 20800  0C86  1296               	bcf	22,5	;volatile
 20801  0C87                     i1l196:	
 20802  0C87  0008               	return
 20803  0C88                     __end_of_ISR_3s:	
 20804                           
 20805                           	psect	text107
 20806  09C0                     __ptext107:	
 20807 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 20808 ;; Defined at:
 20809 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 20810 ;; Parameters:    Size  Location     Type
 20811 ;;		None
 20812 ;; Auto vars:     Size  Location     Type
 20813 ;;		None
 20814 ;; Return value:  Size  Location     Type
 20815 ;;                  1    wreg      void 
 20816 ;; Registers used:
 20817 ;;		None
 20818 ;; Tracked objects:
 20819 ;;		On entry : 0/0
 20820 ;;		On exit  : 0/0
 20821 ;;		Unchanged: 0/0
 20822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20827 ;;Total ram usage:        0 bytes
 20828 ;; Hardware stack levels used:    1
 20829 ;; This function calls:
 20830 ;;		Nothing
 20831 ;; This function is called by:
 20832 ;;		_TMR0_Initialize
 20833 ;;		_TMR0_ISR
 20834 ;; This function uses a non-reentrant model
 20835 ;;
 20836                           
 20837                           
 20838                           ;psect for function _TMR0_DefaultInterruptHandler
 20839  09C0                     _TMR0_DefaultInterruptHandler:	
 20840  09C0                     i1l1136:	
 20841                           ;incstack = 0
 20842                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 20843                           
 20844  09C0  0008               	return
 20845  09C1                     __end_of_TMR0_DefaultInterruptHandler:	
 20846                           
 20847                           	psect	text108
 20848  09C7                     __ptext108:	
 20849 ;; *************** function _TMR0_StopTimer *****************
 20850 ;; Defined at:
 20851 ;;		line 93 in file "mcc_generated_files/tmr0.c"
 20852 ;; Parameters:    Size  Location     Type
 20853 ;;		None
 20854 ;; Auto vars:     Size  Location     Type
 20855 ;;		None
 20856 ;; Return value:  Size  Location     Type
 20857 ;;                  1    wreg      void 
 20858 ;; Registers used:
 20859 ;;		None
 20860 ;; Tracked objects:
 20861 ;;		On entry : 0/0
 20862 ;;		On exit  : 0/0
 20863 ;;		Unchanged: 0/0
 20864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20869 ;;Total ram usage:        0 bytes
 20870 ;; Hardware stack levels used:    1
 20871 ;; This function calls:
 20872 ;;		Nothing
 20873 ;; This function is called by:
 20874 ;;		_ISR_3s
 20875 ;; This function uses a non-reentrant model
 20876 ;;
 20877                           
 20878                           
 20879                           ;psect for function _TMR0_StopTimer
 20880  09C7                     _TMR0_StopTimer:	
 20881  09C7                     i1l4810:	
 20882                           ;incstack = 0
 20883                           ; Regs used in _TMR0_StopTimer: []
 20884                           
 20885                           
 20886                           ;mcc_generated_files/tmr0.c: 96:     T0CON0bits.T0EN = 0;
 20887  09C7  0020               	movlb	0	; select bank0
 20888  09C8  139E               	bcf	30,7	;volatile
 20889  09C9                     i1l1117:	
 20890  09C9  0008               	return
 20891  09CA                     __end_of_TMR0_StopTimer:	
 20892                           
 20893                           	psect	text109
 20894  0A1B                     __ptext109:	
 20895 ;; *************** function _INT_ISR *****************
 20896 ;; Defined at:
 20897 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 20898 ;; Parameters:    Size  Location     Type
 20899 ;;		None
 20900 ;; Auto vars:     Size  Location     Type
 20901 ;;		None
 20902 ;; Return value:  Size  Location     Type
 20903 ;;                  1    wreg      void 
 20904 ;; Registers used:
 20905 ;;		wreg, status,2, status,0, pclath, cstack
 20906 ;; Tracked objects:
 20907 ;;		On entry : 0/0
 20908 ;;		On exit  : 0/0
 20909 ;;		Unchanged: 0/0
 20910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20915 ;;Total ram usage:        0 bytes
 20916 ;; Hardware stack levels used:    1
 20917 ;; Hardware stack levels required when called:    3
 20918 ;; This function calls:
 20919 ;;		_INT_CallBack
 20920 ;; This function is called by:
 20921 ;;		_INTERRUPT_InterruptManager
 20922 ;; This function uses a non-reentrant model
 20923 ;;
 20924                           
 20925                           
 20926                           ;psect for function _INT_ISR
 20927  0A1B                     _INT_ISR:	
 20928  0A1B                     i1l5732:	
 20929                           ;incstack = 0
 20930                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 20931                           
 20932                           
 20933                           ;mcc_generated_files/ext_int.c: 34:     (PIR0bits.INTF = 0);
 20934  0A1B  002E               	movlb	14	; select bank14
 20935  0A1C  100C               	bcf	12,0	;volatile
 20936  0A1D                     i1l5734:	
 20937                           
 20938                           ;mcc_generated_files/ext_int.c: 37:     INT_CallBack();
 20939  0A1D  318A  22FA  318A   	fcall	_INT_CallBack
 20940  0A20                     i1l572:	
 20941  0A20  0008               	return
 20942  0A21                     __end_of_INT_ISR:	
 20943                           
 20944                           	psect	text110
 20945  0AFA                     __ptext110:	
 20946 ;; *************** function _INT_CallBack *****************
 20947 ;; Defined at:
 20948 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 20949 ;; Parameters:    Size  Location     Type
 20950 ;;		None
 20951 ;; Auto vars:     Size  Location     Type
 20952 ;;		None
 20953 ;; Return value:  Size  Location     Type
 20954 ;;                  1    wreg      void 
 20955 ;; Registers used:
 20956 ;;		wreg, status,2, status,0, pclath, cstack
 20957 ;; Tracked objects:
 20958 ;;		On entry : 0/0
 20959 ;;		On exit  : 0/0
 20960 ;;		Unchanged: 0/0
 20961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20966 ;;Total ram usage:        0 bytes
 20967 ;; Hardware stack levels used:    1
 20968 ;; Hardware stack levels required when called:    2
 20969 ;; This function calls:
 20970 ;;		Absolute function
 20971 ;;		_INT_DefaultInterruptHandler
 20972 ;;		_sw1_EXT
 20973 ;; This function is called by:
 20974 ;;		_INT_ISR
 20975 ;; This function uses a non-reentrant model
 20976 ;;
 20977                           
 20978                           
 20979                           ;psect for function _INT_CallBack
 20980  0AFA                     _INT_CallBack:	
 20981  0AFA                     i1l5200:	
 20982                           ;incstack = 0
 20983                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 20984                           
 20985                           
 20986                           ;mcc_generated_files/ext_int.c: 44:     if(INT_InterruptHandler)
 20987  0AFA  0021               	movlb	1	; select bank1
 20988  0AFB  0852               	movf	_INT_InterruptHandler^(0+128),w
 20989  0AFC  0453               	iorwf	(_INT_InterruptHandler+1)^(0+128),w
 20990  0AFD  1903               	btfsc	3,2
 20991  0AFE  2B00               	goto	u266_21
 20992  0AFF  2B01               	goto	u266_20
 20993  0B00                     u266_21:	
 20994  0B00  2B06               	goto	i1l576
 20995  0B01                     u266_20:	
 20996  0B01                     i1l5202:	
 20997                           
 20998                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          _InterruptHandler();
 20999  0B01  0853               	movf	(_INT_InterruptHandler+1)^(0+128),w
 21000  0B02  008A               	movwf	10
 21001  0B03  0852               	movf	_INT_InterruptHandler^(0+128),w
 21002  0B04  000A               	callw
 21003  0B05  318A               	pagesel	$
 21004  0B06                     i1l576:	
 21005  0B06  0008               	return
 21006  0B07                     __end_of_INT_CallBack:	
 21007                           
 21008                           	psect	text111
 21009  09BF                     __ptext111:	
 21010 ;; *************** function _INT_DefaultInterruptHandler *****************
 21011 ;; Defined at:
 21012 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 21013 ;; Parameters:    Size  Location     Type
 21014 ;;		None
 21015 ;; Auto vars:     Size  Location     Type
 21016 ;;		None
 21017 ;; Return value:  Size  Location     Type
 21018 ;;                  1    wreg      void 
 21019 ;; Registers used:
 21020 ;;		None
 21021 ;; Tracked objects:
 21022 ;;		On entry : 0/0
 21023 ;;		On exit  : 0/0
 21024 ;;		Unchanged: 0/0
 21025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21030 ;;Total ram usage:        0 bytes
 21031 ;; Hardware stack levels used:    1
 21032 ;; This function calls:
 21033 ;;		Nothing
 21034 ;; This function is called by:
 21035 ;;		_EXT_INT_Initialize
 21036 ;;		_INT_CallBack
 21037 ;; This function uses a non-reentrant model
 21038 ;;
 21039                           
 21040                           
 21041                           ;psect for function _INT_DefaultInterruptHandler
 21042  09BF                     _INT_DefaultInterruptHandler:	
 21043  09BF                     i1l582:	
 21044                           ;incstack = 0
 21045                           ; Regs used in _INT_DefaultInterruptHandler: []
 21046                           
 21047  09BF  0008               	return
 21048  09C0                     __end_of_INT_DefaultInterruptHandler:	
 21049                           
 21050                           	psect	text112
 21051  0E69                     __ptext112:	
 21052 ;; *************** function _sw1_EXT *****************
 21053 ;; Defined at:
 21054 ;;		line 128 in file "main.c"
 21055 ;; Parameters:    Size  Location     Type
 21056 ;;		None
 21057 ;; Auto vars:     Size  Location     Type
 21058 ;;		None
 21059 ;; Return value:  Size  Location     Type
 21060 ;;                  1    wreg      void 
 21061 ;; Registers used:
 21062 ;;		wreg, status,2, status,0, pclath, cstack
 21063 ;; Tracked objects:
 21064 ;;		On entry : 0/0
 21065 ;;		On exit  : 0/0
 21066 ;;		Unchanged: 0/0
 21067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21070 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21071 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21072 ;;Total ram usage:        1 bytes
 21073 ;; Hardware stack levels used:    1
 21074 ;; Hardware stack levels required when called:    1
 21075 ;; This function calls:
 21076 ;;		i1_PWM6_LoadDutyValue
 21077 ;;		i1_checkDebounceSW1
 21078 ;; This function is called by:
 21079 ;;		_main
 21080 ;;		_INT_CallBack
 21081 ;; This function uses a non-reentrant model
 21082 ;;
 21083                           
 21084                           
 21085                           ;psect for function _sw1_EXT
 21086  0E69                     _sw1_EXT:	
 21087  0E69                     i1l4794:	
 21088                           ;incstack = 0
 21089                           ; Regs used in _sw1_EXT: [wreg+status,2+status,0+pclath+cstack]
 21090                           
 21091                           
 21092                           ;main.c: 130:     _delay((unsigned long)((5)*(1000000/4000.0)));
 21093  0E69  30FA               	movlw	250
 21094  0E6A                     u457_27:	
 21095  0E6A  3200               	nop2
 21096  0E6B  0B89               	decfsz	9,f
 21097  0E6C  2E6A               	goto	u457_27
 21098  0E6D                     i1l4796:	
 21099                           
 21100                           ;main.c: 131:     if(checkDebounceSW1()){
 21101  0E6D  3185  256F  318E   	fcall	i1_checkDebounceSW1
 21102  0E70  3A00               	xorlw	0
 21103  0E71  1903               	skipnz
 21104  0E72  2E74               	goto	u237_21
 21105  0E73  2E75               	goto	u237_20
 21106  0E74                     u237_21:	
 21107  0E74  2E96               	goto	i1l192
 21108  0E75                     u237_20:	
 21109  0E75                     i1l4798:	
 21110                           
 21111                           ;main.c: 132:         if (alarm == 1){
 21112  0E75  0020               	movlb	0	; select bank0
 21113  0E76  0353               	decf	_alarm,w	;volatile
 21114  0E77  1D03               	btfss	3,2
 21115  0E78  2E7A               	goto	u238_21
 21116  0E79  2E7B               	goto	u238_20
 21117  0E7A                     u238_21:	
 21118  0E7A  2E88               	goto	i1l188
 21119  0E7B                     u238_20:	
 21120  0E7B                     i1l4800:	
 21121                           
 21122                           ;main.c: 133:             alarm = 0;
 21123  0E7B  01D3               	clrf	_alarm	;volatile
 21124  0E7C                     i1l4802:	
 21125                           
 21126                           ;main.c: 134:             PWM6_LoadDutyValue(0);
 21127  0E7C  3000               	movlw	0
 21128  0E7D  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 21129  0E7E  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 21130  0E7F  318B  23E6  318E   	fcall	i1_PWM6_LoadDutyValue
 21131  0E82                     i1l4804:	
 21132                           
 21133                           ;main.c: 135:             last_ms = clkms;
 21134  0E82  087D               	movf	_clkms,w	;volatile
 21135  0E83  00F7               	movwf	??_sw1_EXT
 21136  0E84  0877               	movf	??_sw1_EXT,w
 21137  0E85  0020               	movlb	0	; select bank0
 21138  0E86  00D9               	movwf	_last_ms
 21139                           
 21140                           ;main.c: 136:         }
 21141  0E87  2E96               	goto	i1l192
 21142  0E88                     i1l188:	
 21143                           ;main.c: 137:         else{
 21144                           
 21145                           
 21146                           ;main.c: 138:             if(!PORTBbits.RB4){
 21147  0E88  1A0D               	btfsc	13,4	;volatile
 21148  0E89  2E8B               	goto	u239_21
 21149  0E8A  2E8C               	goto	u239_20
 21150  0E8B                     u239_21:	
 21151  0E8B  2E96               	goto	i1l192
 21152  0E8C                     u239_20:	
 21153  0E8C                     i1l4806:	
 21154                           
 21155                           ;main.c: 140:                 if(config_mode == 0){
 21156  0E8C  0854               	movf	_config_mode,w	;volatile
 21157  0E8D  1D03               	btfss	3,2
 21158  0E8E  2E90               	goto	u240_21
 21159  0E8F  2E91               	goto	u240_20
 21160  0E90                     u240_21:	
 21161  0E90  2E96               	goto	i1l189
 21162  0E91                     u240_20:	
 21163  0E91                     i1l4808:	
 21164                           
 21165                           ;main.c: 141:                     config_mode = 1;
 21166  0E91  3001               	movlw	1
 21167  0E92  00F7               	movwf	??_sw1_EXT
 21168  0E93  0877               	movf	??_sw1_EXT,w
 21169  0E94  00D4               	movwf	_config_mode	;volatile
 21170  0E95  2E96               	goto	i1l192
 21171  0E96                     i1l189:	
 21172                           ;main.c: 144:         }
 21173                           
 21174  0E96                     i1l192:	
 21175  0E96  0008               	return
 21176  0E97                     __end_of_sw1_EXT:	
 21177                           
 21178                           	psect	text113
 21179  056F                     __ptext113:	
 21180 ;; *************** function i1_checkDebounceSW1 *****************
 21181 ;; Defined at:
 21182 ;;		line 647 in file "main.c"
 21183 ;; Parameters:    Size  Location     Type
 21184 ;;		None
 21185 ;; Auto vars:     Size  Location     Type
 21186 ;;		None
 21187 ;; Return value:  Size  Location     Type
 21188 ;;                  1    wreg      unsigned char 
 21189 ;; Registers used:
 21190 ;;		wreg, status,2, status,0
 21191 ;; Tracked objects:
 21192 ;;		On entry : 0/0
 21193 ;;		On exit  : 0/0
 21194 ;;		Unchanged: 0/0
 21195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21198 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21199 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21200 ;;Total ram usage:        7 bytes
 21201 ;; Hardware stack levels used:    1
 21202 ;; This function calls:
 21203 ;;		Nothing
 21204 ;; This function is called by:
 21205 ;;		_sw1_EXT
 21206 ;; This function uses a non-reentrant model
 21207 ;;
 21208                           
 21209                           
 21210                           ;psect for function i1_checkDebounceSW1
 21211  056F                     i1_checkDebounceSW1:	
 21212  056F                     i1l4766:	
 21213                           ;incstack = 0
 21214                           ; Regs used in i1_checkDebounceSW1: [wreg+status,2+status,0]
 21215                           
 21216                           
 21217                           ;main.c: 648:     PIE4bits.TMR1IE = 0;
 21218  056F  002E               	movlb	14	; select bank14
 21219  0570  101A               	bcf	26,0	;volatile
 21220  0571                     i1l4768:	
 21221                           
 21222                           ;main.c: 650:     if(clkms - last_ms < 0){
 21223  0571  087D               	movf	_clkms,w	;volatile
 21224  0572  00F0               	movwf	??i1_checkDebounceSW1
 21225  0573  01F1               	clrf	??i1_checkDebounceSW1+1
 21226  0574  0871               	movf	??i1_checkDebounceSW1+1,w
 21227  0575  00F3               	movwf	??i1_checkDebounceSW1+3
 21228  0576  0020               	movlb	0	; select bank0
 21229  0577  0859               	movf	_last_ms,w
 21230  0578  0270               	subwf	??i1_checkDebounceSW1,w
 21231  0579  00F2               	movwf	??i1_checkDebounceSW1+2
 21232  057A  1C03               	skipc
 21233  057B  03F3               	decf	??i1_checkDebounceSW1+3,f
 21234  057C  1FF3               	btfss	??i1_checkDebounceSW1+3,7
 21235  057D  2D7F               	goto	u233_21
 21236  057E  2D80               	goto	u233_20
 21237  057F                     u233_21:	
 21238  057F  2DA6               	goto	i1l4778
 21239  0580                     u233_20:	
 21240  0580                     i1l4770:	
 21241                           
 21242                           ;main.c: 652:         if ((200 - last_ms)+ clkms > 25 ){
 21243  0580  087D               	movf	_clkms,w	;volatile
 21244  0581  00F0               	movwf	??i1_checkDebounceSW1
 21245  0582  01F1               	clrf	??i1_checkDebounceSW1+1
 21246  0583  0871               	movf	??i1_checkDebounceSW1+1,w
 21247  0584  00F3               	movwf	??i1_checkDebounceSW1+3
 21248  0585  0859               	movf	_last_ms,w
 21249  0586  0270               	subwf	??i1_checkDebounceSW1,w
 21250  0587  00F2               	movwf	??i1_checkDebounceSW1+2
 21251  0588  1C03               	skipc
 21252  0589  03F3               	decf	??i1_checkDebounceSW1+3,f
 21253  058A  0872               	movf	??i1_checkDebounceSW1+2,w
 21254  058B  3EC8               	addlw	200
 21255  058C  00F4               	movwf	??i1_checkDebounceSW1+4
 21256  058D  3000               	movlw	0
 21257  058E  3D73               	addwfc	??i1_checkDebounceSW1+3,w
 21258  058F  00F5               	movwf	??i1_checkDebounceSW1+5
 21259  0590  0875               	movf	??i1_checkDebounceSW1+5,w
 21260  0591  3A80               	xorlw	128
 21261  0592  00F6               	movwf	??i1_checkDebounceSW1+6
 21262  0593  3080               	movlw	128
 21263  0594  0276               	subwf	??i1_checkDebounceSW1+6,w
 21264  0595  1D03               	skipz
 21265  0596  2D99               	goto	u234_25
 21266  0597  301A               	movlw	26
 21267  0598  0274               	subwf	??i1_checkDebounceSW1+4,w
 21268  0599                     u234_25:	
 21269  0599  1C03               	skipc
 21270  059A  2D9C               	goto	u234_21
 21271  059B  2D9D               	goto	u234_20
 21272  059C                     u234_21:	
 21273  059C  2DA6               	goto	i1l4778
 21274  059D                     u234_20:	
 21275  059D                     i1l4772:	
 21276                           
 21277                           ;main.c: 653:             last_ms = clkms;
 21278  059D  087D               	movf	_clkms,w	;volatile
 21279  059E  00F0               	movwf	??i1_checkDebounceSW1
 21280  059F  0870               	movf	??i1_checkDebounceSW1,w
 21281  05A0  0020               	movlb	0	; select bank0
 21282  05A1  00D9               	movwf	_last_ms
 21283  05A2                     i1l4774:	
 21284                           
 21285                           ;main.c: 654:             PIE4bits.TMR1IE = 1;
 21286  05A2  002E               	movlb	14	; select bank14
 21287  05A3  141A               	bsf	26,0	;volatile
 21288                           
 21289                           ;main.c: 655:             return 1;
 21290  05A4  3001               	movlw	1
 21291  05A5  2DC8               	goto	i1l341
 21292  05A6                     i1l4778:	
 21293                           
 21294                           ;main.c: 659:     if(clkms - last_ms < 25){
 21295  05A6  087D               	movf	_clkms,w	;volatile
 21296  05A7  00F0               	movwf	??i1_checkDebounceSW1
 21297  05A8  01F1               	clrf	??i1_checkDebounceSW1+1
 21298  05A9  0871               	movf	??i1_checkDebounceSW1+1,w
 21299  05AA  00F3               	movwf	??i1_checkDebounceSW1+3
 21300  05AB  0020               	movlb	0	; select bank0
 21301  05AC  0859               	movf	_last_ms,w
 21302  05AD  0270               	subwf	??i1_checkDebounceSW1,w
 21303  05AE  00F2               	movwf	??i1_checkDebounceSW1+2
 21304  05AF  1C03               	skipc
 21305  05B0  03F3               	decf	??i1_checkDebounceSW1+3,f
 21306  05B1  0873               	movf	??i1_checkDebounceSW1+3,w
 21307  05B2  3A80               	xorlw	128
 21308  05B3  00F4               	movwf	??i1_checkDebounceSW1+4
 21309  05B4  3080               	movlw	128
 21310  05B5  0274               	subwf	??i1_checkDebounceSW1+4,w
 21311  05B6  1D03               	skipz
 21312  05B7  2DBA               	goto	u235_25
 21313  05B8  3019               	movlw	25
 21314  05B9  0272               	subwf	??i1_checkDebounceSW1+2,w
 21315  05BA                     u235_25:	
 21316  05BA  1803               	skipnc
 21317  05BB  2DBD               	goto	u235_21
 21318  05BC  2DBE               	goto	u235_20
 21319  05BD                     u235_21:	
 21320  05BD  2DC0               	goto	i1l4786
 21321  05BE                     u235_20:	
 21322  05BE                     i1l4780:	
 21323                           
 21324                           ;main.c: 660:         return 0;
 21325  05BE  3000               	movlw	0
 21326  05BF  2DC8               	goto	i1l341
 21327  05C0                     i1l4786:	
 21328                           
 21329                           ;main.c: 663:         last_ms = clkms;
 21330  05C0  087D               	movf	_clkms,w	;volatile
 21331  05C1  00F0               	movwf	??i1_checkDebounceSW1
 21332  05C2  0870               	movf	??i1_checkDebounceSW1,w
 21333  05C3  0020               	movlb	0	; select bank0
 21334  05C4  00D9               	movwf	_last_ms
 21335  05C5                     i1l4788:	
 21336                           
 21337                           ;main.c: 664:         PIE4bits.TMR1IE = 1;
 21338  05C5  002E               	movlb	14	; select bank14
 21339  05C6  141A               	bsf	26,0	;volatile
 21340                           
 21341                           ;main.c: 665:         return 1;
 21342  05C7  3001               	movlw	1
 21343  05C8                     i1l341:	
 21344  05C8  0008               	return
 21345  05C9                     __end_ofi1_checkDebounceSW1:	
 21346                           
 21347                           	psect	text114
 21348  0BE6                     __ptext114:	
 21349 ;; *************** function i1_PWM6_LoadDutyValue *****************
 21350 ;; Defined at:
 21351 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 21352 ;; Parameters:    Size  Location     Type
 21353 ;;  dutyValue       2    0[COMMON] unsigned short 
 21354 ;; Auto vars:     Size  Location     Type
 21355 ;;		None
 21356 ;; Return value:  Size  Location     Type
 21357 ;;                  1    wreg      void 
 21358 ;; Registers used:
 21359 ;;		wreg, status,2, status,0
 21360 ;; Tracked objects:
 21361 ;;		On entry : 0/0
 21362 ;;		On exit  : 0/0
 21363 ;;		Unchanged: 0/0
 21364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21365 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21367 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21368 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21369 ;;Total ram usage:        4 bytes
 21370 ;; Hardware stack levels used:    1
 21371 ;; This function calls:
 21372 ;;		Nothing
 21373 ;; This function is called by:
 21374 ;;		_sw1_EXT
 21375 ;;		_ISR_3s
 21376 ;; This function uses a non-reentrant model
 21377 ;;
 21378                           
 21379                           
 21380                           ;psect for function i1_PWM6_LoadDutyValue
 21381  0BE6                     i1_PWM6_LoadDutyValue:	
 21382  0BE6                     i1l4792:	
 21383                           ;incstack = 0
 21384                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 21385                           
 21386                           
 21387                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 21388  0BE6  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 21389  0BE7  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 21390  0BE8  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 21391  0BE9  00F2               	movwf	??i1_PWM6_LoadDutyValue
 21392  0BEA  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 21393  0BEB  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 21394  0BEC  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 21395  0BED  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 21396  0BEE  0872               	movf	??i1_PWM6_LoadDutyValue,w
 21397  0BEF  0027               	movlb	7	; select bank7
 21398  0BF0  008D               	movwf	13	;volatile
 21399                           
 21400                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 21401  0BF1  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 21402  0BF2  3903               	andlw	3
 21403  0BF3  00F2               	movwf	??i1_PWM6_LoadDutyValue
 21404  0BF4  3005               	movlw	5
 21405  0BF5                     u236_25:	
 21406  0BF5  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 21407  0BF6  3EFF               	addlw	-1
 21408  0BF7  1D03               	skipz
 21409  0BF8  2BF5               	goto	u236_25
 21410  0BF9  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 21411  0BFA  008C               	movwf	12	;volatile
 21412  0BFB                     i1l1214:	
 21413  0BFB  0008               	return
 21414  0BFC                     __end_ofi1_PWM6_LoadDutyValue:	
 21415  007E                     btemp	set	126	;btemp
 21416  007E                     int$flags	set	126
 21417  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    37
    Data        9
    BSS         75
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     33      74
    BANK1            80      5      57
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$3781$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$3787	const PTR FTN()enum E12722 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX$3786	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$3781	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), returnReset(), returnStop(), i2c_restartWrite(), 
		 -> Absolute function(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S2215$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S2748$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), handler_clock_ms(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), handler_clock_ms(), Absolute function(), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 

    fsmStateTable	const PTR FTN()enum E12722[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S2215$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S2215$callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), returnReset(), returnStop(), i2c_restartWrite(), 
		 -> Absolute function(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), returnReset(), returnStop(), i2c_restartWrite(), 
		 -> Absolute function(), 

    S2215$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), handler_clock_hms(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), handler_clock_hms(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), ISR_3s(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), ISR_3s(), Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_ISR(), Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), Absolute function(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), sw1_EXT(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), sw1_EXT(), Absolute function(), 

    push_ring@ring_byte	PTR unsigned char  size(1) Largest target is 5
		 -> ring_byte(BANK1[5]), 

    push_ring@nreg_pt	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_pt(BANK0[1]), 

    push_ring@nreg_init	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_init(BANK0[1]), 

    ring_buffer@_ring_byte	PTR unsigned char  size(1) Largest target is 5
		 -> ring_byte(BANK1[5]), 

    S26Subfield_Info_Struct$reconstruct_subfield	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> recLumThresh(), recTempThresh(), recAlarm(), recMinutes(), 
		 -> recHour(), Absolute function(), 

    subfield_info.reconstruct_subfield	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> recLumThresh(), recTempThresh(), recAlarm(), recMinutes(), 
		 -> recHour(), Absolute function(), 

    S26Subfield_Info_Struct$limit	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), limitTempThreshUnits(), Absolute function(), Absolute function(), 
		 -> Absolute function(), limitHoursUnits(), Absolute function(), Absolute function(), 

    subfield_info.limit	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), limitTempThreshUnits(), Absolute function(), Absolute function(), 
		 -> Absolute function(), limitHoursUnits(), Absolute function(), Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _i2c_ISR->_do_I2C_DO_ADDRESS_NACK
    _i2c_ISR->_do_I2C_RX
    _i2c_ISR->_do_I2C_TX
    _i2c_ISR->_do_I2C_TX_EMPTY
    _do_I2C_TX_EMPTY->_i2c_restartWrite
    _do_I2C_TX_EMPTY->_rd1RegCompleteHandler
    _do_I2C_TX_EMPTY->_rd2RegCompleteHandler
    _do_I2C_TX_EMPTY->_rdBlkRegCompleteHandler
    _do_I2C_TX_EMPTY->_returnReset
    _do_I2C_TX_EMPTY->_returnStop
    _do_I2C_TX_EMPTY->_wr1RegCompleteHandler
    _do_I2C_TX_EMPTY->_wr2RegCompleteHandler
    _do_I2C_TX->_i2c_restartWrite
    _do_I2C_TX->_rd1RegCompleteHandler
    _do_I2C_TX->_rd2RegCompleteHandler
    _do_I2C_TX->_rdBlkRegCompleteHandler
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_TX->_wr1RegCompleteHandler
    _do_I2C_TX->_wr2RegCompleteHandler
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_SEND_ADR_READ->_i2c1_driver_TXData
    _do_I2C_RX->_i2c_restartWrite
    _do_I2C_RX->_rd1RegCompleteHandler
    _do_I2C_RX->_rd2RegCompleteHandler
    _do_I2C_RX->_rdBlkRegCompleteHandler
    _do_I2C_RX->_returnReset
    _do_I2C_RX->_returnStop
    _do_I2C_RX->_wr1RegCompleteHandler
    _do_I2C_RX->_wr2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_i2c_restartWrite
    _do_I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_returnReset
    _do_I2C_DO_ADDRESS_NACK->_returnStop
    _do_I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _TMR2_ISR->_handler_clock_ms
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR0_ISR->_ISR_3s
    _ISR_3s->i1_PWM6_LoadDutyValue
    _INT_CallBack->_sw1_EXT
    _sw1_EXT->i1_checkDebounceSW1

Critical Paths under _main in BANK0

    _main->_config_routine
    _save_recovery_params->_cksum_w
    _recoverData->_reset_recv
    _reset_recv->_DATAEE_WriteByte
    _cksum_w->_DATAEE_WriteByte
    _cksum->_DATAEE_ReadByte
    _read_ring->___bmul
    _push_ring->_DATAEE_WriteByte
    _DATAEE_WriteByte->_cksum
    _config_routine->_selectSubfield
    _selectSubfield->_increment_subfield
    _mod4_LED->_PWM6_LoadDutyValue
    _mod3_LED->_PWM6_LoadDutyValue
    _mod2_LED->_PWM6_LoadDutyValue
    _mod1_LED->_PWM6_LoadDutyValue
    _increment_subfield->_representLed
    _representLed->_PWM6_LoadDutyValue
    _recTempThresh->___awdiv
    _recMinutes->___awdiv
    _recHour->___awdiv
    _all_LED->_PWM6_LoadDutyValue
    _mode_select_LED->_PWM6_LoadDutyValue
    _PWM6_LoadDutyValue->___wmul
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _ADC_read->_ADCC_GetConversionResult

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_i2c_ISR

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   53423
                                             28 BANK0      5     5      0
                                              0 BANK1      5     5      0
                           _ADC_read
                   _DATAEE_WriteByte
            _INT_SetInterruptHandler
                            _LED_bin
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
           _TMR1_SetInterruptHandler
           _TMR2_SetInterruptHandler
                            _cksum_w
                     _config_routine
                   _i2c1_driver_open
                          _push_ring
                          _read_ring
                        _recoverData
                        _ring_buffer
               _save_recovery_params
 ---------------------------------------------------------------------------------
 (1) _save_recovery_params                                 3     3      0    5020
                                             14 BANK0      3     3      0
                   _DATAEE_WriteByte
                            _cksum_w
 ---------------------------------------------------------------------------------
 (1) _ring_buffer                                          7     2      5     796
                                              3 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (1) _recoverData                                          1     1      0    9038
                                             15 BANK0      1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                              _cksum
                            _cksum_w
                         _reset_recv
 ---------------------------------------------------------------------------------
 (2) _reset_recv                                           2     2      0    2026
                                             13 BANK0      2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _cksum_w                                              1     1      0    3025
                                             13 BANK0      1     1      0
                   _DATAEE_WriteByte
                              _cksum
 ---------------------------------------------------------------------------------
 (3) _cksum                                                4     4      0    1098
                                              5 BANK0      4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (1) _read_ring                                            9     5      4    2323
                                              7 BANK0      9     5      4
                    _DATAEE_ReadByte
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     226
                                              3 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2     962
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _push_ring                                            7     4      3    2580
                                             13 BANK0      7     4      3
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3    1927
                                              9 BANK0      4     1      3
                              _cksum (ARG)
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_routine                                       3     3      0   25443
                                             25 BANK0      3     3      0
                            _all_LED
                   _checkDebounceSW1
                   _checkDebounceSW2
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
                    _mode_select_LED
                     _selectSubfield
 ---------------------------------------------------------------------------------
 (2) _selectSubfield                                       4     4      0   17829
                                             21 BANK0      4     4      0
                            _all_LED
                   _checkDebounceSW1
                   _checkDebounceSW2
                    _getSubfieldInfo
                 _increment_subfield
                           _mode_LED
 ---------------------------------------------------------------------------------
 (3) _mode_LED                                             3     3      0    5039
                                             13 BANK0      3     3      0
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
 ---------------------------------------------------------------------------------
 (4) _mod4_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _mod3_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _mod2_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _mod1_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _increment_subfield                                   3     3      0   11439
                                             18 BANK0      3     3      0
                   Absolute function *
                 _PWM6_LoadDutyValue
                   _checkDebounceSW1
                   _checkDebounceSW2
                           _recAlarm *
                            _recHour *
                       _recLumThresh *
                         _recMinutes *
                      _recTempThresh *
                       _representLed
 ---------------------------------------------------------------------------------
 (4) _representLed                                         5     5      0    2747
                                             13 BANK0      5     5      0
                 _PWM6_LoadDutyValue
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1306
                                              3 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _recTempThresh                                        4     3      1    2380
                                             12 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) _recMinutes                                           4     3      1    2380
                                             12 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) _recLumThresh                                         2     1      1      96
                                             12 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (4) _recHour                                              4     3      1    2380
                                             12 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     973
                                              3 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4    1345
                                              3 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) _recAlarm                                             2     1      1      31
                                             12 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (4) _checkDebounceSW2                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (4) _checkDebounceSW1                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _getSubfieldInfo                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _all_LED                                              1     1      0    1252
                                             13 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_select_LED                                      1     1      0    1252
                                             13 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (5) _PWM6_LoadDutyValue                                   4     2      2    1252
                                              9 BANK0      4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     844
                    _ADCC_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_bin                                              5     3      2     152
                                              3 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             2     0      2      31
                                              5 BANK0      2     0      2
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             2     0      2       0
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0   78474
                   Absolute function *
                            _INT_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (7) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _i2c_ISR                                              3     3      0   78042
                                              0 BANK0      3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (8) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_TX_EMPTY                                      3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_TX                                            3     3      0   19516
                                             10 COMMON     3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_TXData                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_RX                                            3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (9) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_sendNACK                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_ADDRESS_NACK                               3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _wr2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _wr1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _returnStop                                           1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (9) _returnReset                                          1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (9) _rdBlkRegCompleteHandler                              1     0      1    4086
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _i2c_setDataCompleteCallback                         4     1      3    2478
                                              5 COMMON     4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (11) _setCallBack                                         5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (10) _i2c_setBuffer                                       4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (9) _i2c_restartWrite                                     1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_stop                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_restart                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                   _handler_clock_ms *
 ---------------------------------------------------------------------------------
 (8) _handler_clock_ms                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _handler_clock_hms *
 ---------------------------------------------------------------------------------
 (8) _handler_clock_hms                                    1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0      96
                   Absolute function *
                             _ISR_3s *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ISR_3s                                               1     1      0      96
                                              4 COMMON     1     1      0
                     _TMR0_StopTimer
               i1_PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (9) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _INT_ISR                                              0     0      0      96
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (8) _INT_CallBack                                         0     0      0      96
                   Absolute function *
        _INT_DefaultInterruptHandler *
                            _sw1_EXT *
 ---------------------------------------------------------------------------------
 (9) _sw1_EXT                                              1     1      0      96
                                              7 COMMON     1     1      0
               i1_PWM6_LoadDutyValue
                 i1_checkDebounceSW1
 ---------------------------------------------------------------------------------
 (10) i1_checkDebounceSW1                                  7     7      0       0
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (9) i1_PWM6_LoadDutyValue                                 4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (9) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_read
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
   _DATAEE_WriteByte
     _cksum (ARG)
       _DATAEE_ReadByte
   _INT_SetInterruptHandler
   _LED_bin
   _PWM6_LoadDutyValue
     ___wmul (ARG)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _TMR1_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _cksum_w
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
   _config_routine
     _all_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _checkDebounceSW1
     _checkDebounceSW2
     _mod1_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _mod2_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _mod3_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _mod4_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _mode_select_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _selectSubfield
       _all_LED
         _PWM6_LoadDutyValue
           ___wmul (ARG)
       _checkDebounceSW1
       _checkDebounceSW2
       _getSubfieldInfo
       _increment_subfield
         Absolute function(Fake) *
         _PWM6_LoadDutyValue *
           ___wmul (ARG)
         _checkDebounceSW1 *
         _checkDebounceSW2 *
         _recAlarm *
         _recHour *
           ___awdiv
           ___awmod
         _recLumThresh *
         _recMinutes *
           ___awdiv
           ___awmod
         _recTempThresh *
           ___awdiv
           ___awmod
         _representLed *
           _PWM6_LoadDutyValue
             ___wmul (ARG)
           ___wmul
       _mode_LED
         _mod1_LED
           _PWM6_LoadDutyValue
             ___wmul (ARG)
         _mod2_LED
           _PWM6_LoadDutyValue
             ___wmul (ARG)
         _mod3_LED
           _PWM6_LoadDutyValue
             ___wmul (ARG)
         _mod4_LED
           _PWM6_LoadDutyValue
             ___wmul (ARG)
   _i2c1_driver_open
   _push_ring
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
   _read_ring
     _DATAEE_ReadByte
     ___bmul
   _recoverData
     _DATAEE_ReadByte
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
     _cksum_w
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
       _cksum
         _DATAEE_ReadByte
     _reset_recv
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
   _ring_buffer
   _save_recovery_params
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum_w
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
       _cksum
         _DATAEE_ReadByte

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _INT_ISR *
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _sw1_EXT *
         i1_PWM6_LoadDutyValue
         i1_checkDebounceSW1
   _TMR0_ISR *
     Absolute function(Fake) *
     _ISR_3s *
       _TMR0_StopTimer
       i1_PWM6_LoadDutyValue
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _handler_clock_hms *
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _handler_clock_ms *
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c1_driver_sendNACK
       _i2c1_driver_getRXData *
       _i2c1_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c1_driver_restart
     _do_I2C_SEND_STOP *
       _i2c1_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c1_driver_TXData *
       _i2c1_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _mssp1_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     21      4A       5       92.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      5      39       7       71.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      91      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      91      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Nov 28 19:54:25 2019

                            returnReset@p 0079          __end_of_TMR2_SetInterruptHandler 0AAE  
                          ___bmul@product 0025                               __CFG_CP$OFF 0000  
                            ___awdiv@sign 0029                      __size_of_do_I2C_IDLE 0005  
                           _subfield_info 0041                       _do_I2C_SEND_RESTART 0A02  
                    __size_of_do_I2C_RCEN 0007                       ___wmul@multiplicand 0025  
             __size_of_PWM6_LoadDutyValue 0019                    increment_subfield@exit 0033  
                             __CFG_LVP$ON 0000                                       l220 01CB  
                                     l204 00A1                                       l311 0409  
                                     l207 00CB                                       l208 01E8  
                                     l233 02ED                                       l324 0CBA  
                                     l341 056E                                       l245 0317  
                                     l318 0459                                       l256 03F7  
                                     l249 03A3                                       l353 0E0F  
                                     l275 0395                                       l283 0EF6  
                                     l291 0F59                                       l348 070A  
                                     l532 0295                                       l356 0EC5  
                                     l286 0A26                                       l278 0A2C  
                                     l296 0F27                                       l546 0FFF  
                                     l554 0D71                                       l539 07E4  
                                     l549 0B7B                                       l559 0CF2  
                                     l585 0B2E                                       l579 0A89  
                                     l692 0A92                                       l756 0AF9  
                                     l925 079D                                       l695 0A6E  
                                     l689 0CD6                                       _PR2 028D  
                            __CFG_CPD$OFF 0000                           _timer1ReloadVal 0068  
                                     _seg 005A             i2c_setDataCompleteCallback@cb 0075  
                 __size_of_PMD_Initialize 0008                              ___awmod@sign 0029  
                         _TMR2_Initialize 0C57                     __size_of_do_I2C_RESET 0008  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                            __CFG_ZCD$OFF 0000                           __end_of_LED_bin 07FF  
                                    l1010 0A66                                      l1013 0A46  
                                    l1007 0C11                                      l1111 0BE5  
                                    l1016 0A80                                      l1114 09E1  
                                    l1211 0B20                   ??_rd2RegCompleteHandler 007A  
                                    l1133 0A9B                                      l1214 0CA0  
                                    l2042 061C                                      l2029 04B9  
                                    l1261 0B5B                                      l1167 0D11  
                                    l1255 0D8A                                      l1257 0D8E  
                                    l1258 0D95                                      l1508 0C6E  
                                    l1197 0AA4                                      l1710 0D31  
                                    l1551 0AAD                                      l1720 0DE5  
                                    l1724 06BD                                      l1902 0C27  
                                    l1681 07FE                                      l1666 04BA  
                                    l1669 04C7                                      l1678 0514  
                                    l1686 0ACB                                      l1694 0AD6  
                    _ADCC_StartConversion 0A5F                                      l7000 0CAA  
                                    l1689 0AC0                                      l7002 0CB2  
                                    l7010 0FC3                                      l1699 0AE1  
                                    l1876 0D3D                                      l7100 02FA  
                                    l7020 0FE8                                      l7012 0FC9  
                                    l7006 07E5                                      l1878 0D51  
                                    l7110 030F                                      l7102 02FF  
                                    l7014 0FCE                                      l7022 0FF3  
                                    l7030 0E99                                      l6400 049B  
                                    l7104 0302                                      l7016 0FDB  
                                    l7008 0FC3                                      l7040 0EBD  
                                    l7032 0E9B                                      l7120 0DEA  
                                    l7200 00B8                                      l6410 04B0  
                                    l6402 049F                                      l7106 0305  
                                    l7042 07A0                                      l7026 0FF5  
                                    l7018 0FE1                                      l7034 0EAA  
                                    l7130 0E0C                                      l7122 0DEE  
                                    l7210 00C7                                      l7202 00BA  
                                    l6412 04B5                                      l6404 04A0  
                                    l6420 05CF                                      l6500 0ADF  
                                    l7108 0309                                      l7060 07DA  
                                    l7052 07AE                                      l7044 07A8  
                                    l7036 0EB2                                      l7124 0DF2  
                                    l7116 0DE6                                      l7300 01F0  
                                    l7220 00CF                                      l7212 00C9  
                                    l7204 00BB                                      l6510 06F1  
                                    l6502 06BE                                      l6406 04A5  
                                    l6430 05E5                                      l6422 05D4  
                                    l7070 029D                                      l7062 07DE  
                                    l7054 07B7                                      l7046 07AD  
                                    l7038 0EB4                                      l7126 0DF4  
                                    l7118 0DE8                                      l7302 01F2  
                                    l7230 00E3                                      l7222 00D5  
                                    l7214 00CA                                      l7206 00BE  
                                    l7064 09DF                                      l6600 04BC  
                                    l6512 0709                                      l6504 06CD  
                                    l6408 04AB                                      l6440 05FF  
                                    l6432 05E8                                      l6424 05D6  
                                    l6416 05C9                                      l6360 0D35  
                                    l7080 02B7                                      l7072 02A1  
                                    l7056 07BB                                      l7128 0E00  
                                    l7304 01F8                                      l7240 0105  
                                    l7232 00E5                                      l7224 00D7  
                                    l7216 00CC                                      l7208 00C5  
                                    l6610 04F1                                      l6602 04C5  
                                    l6506 06EA                                      l6450 0618  
                                    l6442 0603                                      l6434 05ED  
                                    l6426 05DA                                      l6418 05CB  
                                    l6530 0A21                                      l6522 0A27  
                                    l6362 0D39                                      l7090 02D1  
                                    l7082 02BF                                      l7074 02A9  
                                    l7066 0296                                      l7058 07D2  
                                    l7250 0166                                      l7242 0106  
                                    l7234 00EB                                      l7226 00DF  
                                    l7218 00CD                                      l7170 00A1  
                                    l6356 0C88                                      l6620 0509  
                                    l6612 04F3                                      l6604 04D0  
                                    l6460 0543                                      l6380 0467  
                                    l6372 045A                                      l6444 0608  
                                    l6436 05F1                                      l6428 05DF  
                                    l6524 0EC6                                      l6540 0EFE  
                                    l6532 0F28                                      l6364 0D42  
                                    l6700 041A                                      l7092 02D5  
                                    l7084 02C5                                      l7076 02AF  
                                    l7068 0299                                      l7260 0188  
                                    l7252 0172                                      l7244 0107  
                                    l7236 00F3                                      l7228 00E1  
                                    l7180 00A7                                      l7172 00A1  
                                    l6622 0512                                      l6614 04FC  
                                    l6606 04D8                                      l6462 0548  
                                    l6454 0515                                      l6390 047C  
                                    l6382 046B                                      l6374 045C  
                                    l6438 05F5                                      l6446 060E  
                                    l6526 0ECD                                      l6542 0F13  
                                    l6534 0F30                                      l6366 0D47  
                                    l6358 0D32                                      l6550 068D  
                                    l6710 0437                                      l6702 0427  
                                    l6630 0DC7                                      l7086 02C9  
                                    l7078 02B2                                      l7270 01A4  
                                    l7262 018A                                      l7254 0175  
                                    l7246 011F                                      l7238 00FE  
                                    l7190 00AF                                      l7182 00A8  
                                    l7174 00A1                                      l6616 04FE  
                                    l6608 04E8                                      l6456 0517  
                                    l6392 047F                                      l6384 0470  
                                    l6376 0460                                      l6448 0613  
                                    l6528 0EE2                                      l6536 0F45  
                                    l6368 0D4D                                      l6552 06AA  
                                    l6544 0673                                      l6712 043F  
                                    l6704 0429                                      l6480 0AC1  
                                    l6632 0DCB                                      l6624 0DBE  
                                    l7088 02CD                                      l7096 02DA  
                                    l6560 0B55                                      l6720 0D52  
                                    l6800 0CD7                                      l7272 01AC  
                                    l7280 01BC                                      l7264 0194  
                                    l7256 0178                                      l7248 013D  
                                    l7192 00B1                                      l7184 00AA  
                                    l7168 007E                                      l6810 0B21  
                                    l6618 0507                                      l6650 032B  
                                    l6474 0566                                      l6458 0526  
                                    l6466 054C                                      l6394 0484  
                                    l6386 0474                                      l6378 0465  
                                    l6538 0EF7                                      l6554 06B4  
                                    l6714 0442                                      l6706 042E  
                                    l6482 0AC3                                      l6490 0ACC  
                                    l6626 0DBF                                      l7098 02F2  
                                    l6562 0B56                                      l6730 0D63  
                                    l6722 0D54                                      l7290 01D3  
                                    l7282 01C2                                      l7274 01B1  
                                    l7266 019A                                      l7258 0182  
                                    l7194 00B2                                      l7186 00AB  
                                    l7178 00A6                                      l6812 0B24  
                                    l6820 075B                                      l6572 0A93  
                                    l6900 0C63                                      l6740 0D12  
                                    l6660 0359                                      l6652 0334  
                                    l6644 0318                                      l6476 056B  
                                    l6468 0564                                      l6396 0488  
                                    l6388 0476                                      l6548 067E  
                                    l6708 0433                                      l6716 0447  
                                    l6484 0AC9                                      l6492 0ACE  
                                    l6628 0DC3                                      l6636 0DCF  
                                    l6580 0D72                                      l6564 0B57  
                                    l6556 0B4D                                      l6732 0D67  
                                    l6804 0CDC                                      l7292 01D6  
                                    l7284 01C8                                      l7276 01B3  
                                    l7268 01A0                                      l7196 00B5  
                                    l7188 00AD                                      l6814 0B2C  
                                    l6830 0765                                      l6822 075D  
                                    l6574 0A9C                                      l6910 0CFA  
                                    l6902 0C6B                                      l6750 0D2E  
                                    l6742 0D1A                                      l6662 0362  
                                    l6646 0319                                      l6398 048C  
                                    l6718 044C                                      l6486 0AB7  
                                    l6494 0AD4                                      l6590 0D84  
                                    l6582 0D7A                                      l6566 0B58  
                                    l6558 0B51                                      l6734 0D70  
                                    l6806 0CE4                                      l7278 01B6  
                                    l7294 01D8                                      l7286 01CC  
                                    l7198 00B7                                      l6576 0A81  
                                    l6840 077A                                      l6832 0768  
                                    l6824 075F                                      l6816 0A67  
                                    l6920 0D0E                                      l6912 0CFC  
                                    l6904 0CF3                                      l6752 0D30  
                                    l6744 0D1C                                      l6656 033D  
                                    l6648 0322                                      l6672 0381  
                                    l6488 0AB9                                      l6496 0AD7  
                                    l6760 03A8                                      l6592 0D85  
                                    l6584 0D7E                                      l6568 0B59  
                                    l6728 0D58                                      l6808 0CE9  
                                    l7296 01E1                                      l7288 01D1  
                                    l6850 0784                                      l6842 077C  
                                    l6834 076A                                      l6826 0761  
                                    l6818 0755                                      l6930 0BDA  
                                    l6922 0BD1                                      l6914 0D03  
                                    l6906 0CF6                                      l6578 0AA5  
                                    l6746 0D24                                      l6666 036B  
                                    l6658 0350                                      l6690 0401  
                                    l6498 0AD9                                      l6770 03C7  
                                    l6762 03B0                                      l6754 0396  
                                    l6594 0D87                                      l6586 0D82  
                                    l6738 0B6C                                      l7298 01EA  
                                    l6860 078E                                      l6852 0786  
                                    l6844 077E                                      l6836 076C  
                                    l6828 0763                                      l6932 0BE2  
                                    l6924 0BD6                                      l6916 0D05  
                                    l6908 0CF8                                      l6748 0D26  
                                    l7660 0387                                      l6668 0378  
                                    l6692 0403                                      l6780 03D9  
                                    l6772 03CC                                      l6764 03B5  
                                    l6756 039B                                      l7652 02DF  
                                    l6596 0D89                                      l6588 0D83  
                                    l6940 0C1D                                      l6790 0A65  
                                    l6870 079A                                      l6862 0791  
                                    l6854 0788                                      l6846 0780  
                                    l6838 076E                                      l6926 0BD7  
                                    l6918 0D06                                      l6950 0CBE  
                                    l6694 0407                                      l6686 03F8  
                                    l7654 0DD7                                      l6782 03EF  
                                    l6774 03CF                                      l6766 03BA  
                                    l6758 03A1                                      l6598 0D8F  
                                    l6942 0C1F                                      l6934 0C14  
                                    l6792 0A40                                      l6872 0A8A  
                                    l6864 0793                                      l6856 078A  
                                    l6848 0782                                      l6880 0B14  
                                    l6928 0BD9                                      l6960 0CCD  
                                    l6952 0CC1                                      l7656 0342  
                                    l6696 040D                                      l6688 03FB  
                                    l6784 03F5                                      l6776 03D2  
                                    l6768 03BF                                      l6944 0C26  
                                    l6936 0C15                                      l6786 0A61  
                                    l6874 0A8D                                      l6866 0796  
                                    l6858 078C                                      l6882 0B1B  
                                    l6890 0C57                                      l6962 0CD0  
                                    l6954 0CC4                                      l7658 0370  
                                    l6698 0415                                      l6778 03D5  
                                    l6970 0AF4                                      l6938 0C19  
                                    l6796 0A78                                      l6788 0A64  
                                    l6884 0BFC                                      l6876 0A8E  
                                    l6868 0798                                      l6892 0C5C  
                                    l6964 0CD3                                      l6956 0CC7  
                                    l6948 0CBB                                      l6972 0AF6  
                                    l6980 020B                                      l6886 0C0E  
                                    l6878 0A91                                      l6894 0C5D  
                                    l6958 0CCA                                      l6966 0AEE  
                                    l6990 027A                                      l6982 021D  
                                    l6888 0C10                                      l6896 0C60  
                                    l6968 0AF3                                      l6992 0286  
                                    l6984 025F                                      l6898 0C62  
                                    l6994 0292                                      l6986 0262  
                                    l6978 01FE                                      l6996 0CA1  
                                    l6988 026E                                      l6998 0CA6  
                                    _LATA 0016                                      _LATB 0017  
                         __end_of_INT_ISR 0A21                                      _LATC 0018  
                                    u4000 0CB2                                      _LATD 0019  
                                    u4001 0CB1                                      _LATE 001A  
                                    u4010 0FC9                                      u4011 0FC8  
                                    u4100 02BF                                      u4020 0FCE  
                                    u4101 02BE                                      u4021 0FCD  
                                    u4110 02F2                                      u4030 0FE1  
                                    u4111 02F1                                      u4031 0FE0  
                                    u4120 02FA                                      u4040 07A8  
                                    u4200 0188                   __size_of_selectSubfield 0062  
                                    u4121 02F9                                      u4041 07A7  
                                    u4201 0187                                      u4130 030F  
                                    u4050 07B7                                      u4210 019A  
                                    _T2PR 028D                                      u4131 030E  
                                    u4051 07B6                                      u4211 0199  
                                    u4060 07E4                                      u4220 01A0  
                                    u4061 07E3                                      u4221 019F  
                                    u3510 048C                                      u3430 0D39  
                                    u4070 02A9                                      u4230 01B1  
                                    u4150 00DF                                      u3511 048B  
                                    u3431 0D38                                      u4071 02A8  
                                    u4231 01B0                                      u4151 00DE  
                                    u4080 02AF                                      u4240 01C2  
                                    u4160 00EB                                      u3425 0C99  
                                    u3505 0480                                      u4081 02AE  
                                    u4241 01C1                                      u4161 00EA  
                                    u3530 049B                                      u3610 05F5  
                                    u4090 02B7                                      u4250 01D1  
                                    u4170 011F                                      u3531 049A  
                                    u3611 05F4                                      u4091 02B6  
                                    u4251 01D0                                      u4171 011E  
                                    u3700 06EA                                      u3620 05FF  
                                    u3460 0D4D                                      u4260 01E8  
                                    u4180 013D                                      u3701 06E9  
                                    u3525 048D                                      u3621 05FE  
                                    u3605 05E9                                      u3461 0D4C  
                                    u3445 0D3E                                      u4261 01E7  
                                    u4181 013C                                      u3710 0709  
                                    u3550 04AB                                      u3470 0460  
                                    u4270 01F8                                      u4190 0182  
                                    u3711 0708                                      u3551 04AA  
                                    u3535 0497                                      u3471 045F  
                                    u3455 0D43                                      u4271 01F7  
                                    u4191 0181                                      u3560 04B0  
                                    u3480 046B                                      u3640 060E  
                                    u3720 0ECD                                      u3800 040D  
                                    u3705 06E6                                      u3561 04AF  
                                    u3545 04A1                                      u3481 046A  
                                    u3641 060D                                      u3625 05FB  
                                    u3721 0ECC                                      u3801 040C  
                                    u4185 0139                                      u3490 047C  
                                    u3650 0613                                      u3570 05CF  
                                    u3730 0F30                                      u3810 0415  
                                    u4507 04EC                                      u3715 0705  
                                    u3491 047B                                      u3651 0612  
                                    u3635 0604                                      u3571 05CE  
                                    u3731 0F2F                                      u3811 0414  
                                    u3660 0526                                      u3580 05DA  
                                    u3740 0EFE                                      u3820 0427  
                                    u3900 03BF                                      _PMD0 0796  
                                    u4517 04F7                                      u3661 0525  
                                    u3581 05D9                                      u3741 0EFD  
                                    u3821 0426                                      u3901 03BE  
                                    _PMD1 0797                                      u3670 0543  
                                    u3590 05E5                                      u3750 067D  
                                    u3830 0437                                      u3910 03C7  
                                    _PMD2 0798                                      u4527 0502  
                                    u3671 0542                                      u3591 05E4  
                                    u3751 067C                                      u3831 0436  
                                    u3911 03C6                                      u4447 01DC  
                                    _PMD3 0799                                      u3680 0564  
                                    u3840 043F                                      u3920 03EF  
                                    _PMD4 079A                                      u4537 050D  
                                    u3681 0563                                      u3841 043E  
                                    u3825 0423                                      u3921 03EE  
                                    u4457 0306                                      _PMD5 079B  
                                    u3690 06CD                                      u3850 044C  
                                    u3930 03F5                                      u4547 0D20  
                                    u3675 053F                                      u3691 06CC  
                                    u3851 044B                                      u3931 03F4  
                                    u4467 03D6                                      u3780 0D8E  
                                    u3860 0D70                                      u3940 0CF2  
                                    u4557 0D2A                                      u4477 04C0  
                                    u3685 0560                                      u3765 0681  
                                    u3925 03EB                                      u3781 0D8D  
                                    u3861 0D6F                                      u3941 0CF1  
                                    u3790 0407                                      u3870 03A1  
                                    u3950 0C19                                      u4567 0CA7  
                                    u4487 04CB                                      u3775 0690  
                                    u3791 0406                                      u3871 03A0  
                                    u3951 0C18                                      u3880 03A8  
                                    u3960 0C26                                      u4497 04DC  
                                    u3881 03A7                                      u3961 0C25  
                                    u3890 03B0                                      u3970 0AF3  
                                    u3891 03AF                                      u3971 0AF2  
                                    u3980 020B                                      u3981 020A  
                                    u3990 021D                                      u3991 021C  
                    ?_do_I2C_SEND_RESTART 0070                                      _TMR2 028C  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                                      _WPUD 0F5A  
                                    _WPUE 0F65                   ??_wr2RegCompleteHandler 007A  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
       __size_of_do_I2C_SEND_RESTART_READ 0005                                      _alaf 0051  
                                    _clkh 005C                 ?_do_I2C_SEND_RESTART_READ 0070  
                                    _clkm 005B                                      _main 007E  
                                    _tala 0065                 __size_of_do_I2C_SEND_STOP 0005  
                  __size_of_do_I2C_DO_ACK 0005                                      _nreg 0067  
                         _TMR0_StartTimer 09DF                                      _temp 0052  
                                    _pmon 0066                        _increment_subfield 03F8  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
     __end_of_INT_DefaultInterruptHandler 09C0               _INT_DefaultInterruptHandler 09BF  
                   ?_do_I2C_SEND_ADR_READ 0070           ??_i2c1_driver_clearBusCollision 0070  
                                    start 005B                          __end_of_ADC_read 0CBB  
         __end_of_INT_SetInterruptHandler 0A8A                             _i2c_setBuffer 0B5C  
              ??_TMR1_SetInterruptHandler 0025                             __CFG_CSWEN$ON 0000  
                       ___bmul@multiplier 0026                             __CFG_MCLRE$ON 0000  
                increment_subfield@_value 0034                           __end_of_i2c_ISR 0E69  
                     ?_increment_subfield 0070          __size_of_rdBlkRegCompleteHandler 0018  
                ??_do_I2C_DO_NACK_RESTART 0070                 config_routine@select_mode 003A  
               __size_of_DATAEE_WriteByte 0024                   __end_of_TMR0_Initialize 0BE6  
                            _do_I2C_RESET 0A4F            ??_TMR0_DefaultInterruptHandler 0070  
          __size_of_OSCILLATOR_Initialize 0009             __end_of_OSCILLATOR_Initialize 0A93  
                                   _ADACQ 009D                                     _ADCAP 009B  
                                   _ADACT 0099                  __end_of_i2c1_driver_open 0AFA  
                                   ?_main 0070                                     _ADCLK 0098  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                           __end_of___awdiv 04BA  
                __end_of_i2c1_driver_stop 09D0                                     _ADPRE 009C  
                           __CFG_WDTE$OFF 0000                           __end_of___awmod 061D  
                                   _ADRPT 010D                                     _T1CLK 0211  
                         ___awdiv@divisor 0023                                     _T1CON 020E  
                                   _T2CON 028E                                     _T2HLT 028F  
              __end_of_i2c1_driver_TXData 09F3                            __CFG_DEBUG$OFF 0000  
                                   _T2TMR 028C                                     _T2RST 0291  
                                   i1l332 0FC0                                     i1l341 05C8  
                                   i1l192 0E96                                     i1l336 0AED  
                                   i1l195 0C82                                     i1l188 0E88  
                                   i1l196 0C87                                     i1l189 0E96  
                                   i1l630 001F                                     i1l800 09E9  
                                   i1l633 0032                                     i1l642 0059  
                                   i1l635 0041                                     i1l572 0A20  
                                   i1l636 0059                                     i1l628 0013  
                                   i1l741 09D8                                     i1l637 004D  
                                   i1l582 09BF                                     i1l576 0B06  
                                   i1l770 09CC                                     i1l594 09C4  
                                   i1l738 09DB                                     i1l834 09DE  
                                   i1l764 07FF                                     i1l773 09CF  
                                   i1l782 09D5                                     i1l791 09F2  
                                   i1l776 0A4E                                     i1l779 09D2  
                                   i1l797 09E5                           ___awdiv@counter 0028  
                                   _OSCEN 0891                           __end_of_all_LED 0515  
                                   _TMR0H 001D                                     _TMR1H 020D  
                                   _TMR0L 001C                                     _TMR1L 020C  
                                   _TRISA 0011                                     _TRISB 0012  
                                   _TRISC 0013                                     _TRISD 0014  
                                   _TRISE 0015                                     _WPUC3 7A7B  
                                   _WPUC4 7A7C         __size_of_TMR0_SetInterruptHandler 0009  
                         _PWM6_Initialize 0B14                          recMinutes@_value 002C  
               ?_TMR0_SetInterruptHandler 0023                   ??_ADCC_IsConversionDone 0023  
                        __end_of_TMR0_ISR 0B3E                          __end_of_TMR1_ISR 0C3F  
                        __end_of_TMR2_ISR 0B4D                           __end_of_sw1_EXT 0E97  
                         __end_of_cksum_w 0B7C                      ??_increment_subfield 0032  
                         _DATAEE_ReadByte 0B4D                                     _alarm 0053  
                                   _clkms 007D                __end_of_i2c1_driver_isNACK 0A4F  
                                   _cksum 0D52                           __end_of_recHour 0F28  
                   ?_ADCC_StartConversion 0070                           representLed@aux 0031  
                         representLed@val 0030                ?_do_I2C_SEND_RESTART_WRITE 0070  
                                   _value 00C5                         ?_checkDebounceSW1 0070  
                       ?_checkDebounceSW2 0070                     ??_do_I2C_SEND_RESTART 0070  
                 __end_of_TMR1_Initialize 0D12                                     pclath 000A  
                 __size_of_mssp1_clearIRQ 0003                        ??_checkDebounceSW1 0023  
                      ??_checkDebounceSW2 0023                    ?_do_I2C_SEND_ADR_WRITE 0070  
                                   status 0003                                     wtemp0 007E  
                         _TMR1_WriteTimer 0B7C                            ?_i2c_setBuffer 0070  
                            ?_setCallBack 0070                      _save_recovery_params 0DE6  
                       ??_getSubfieldInfo 0023                             _fsmStateTable 1000  
                         __initialization 005D                                _i2c_status 00A0  
                            __end_of_main 01FE                   __end_of_TMR2_Initialize 0C6F  
             ?_INTERRUPT_InterruptManager 0070                              ?_recoverData 0070  
                           setCallBack@cb 0070                             _do_I2C_DO_ACK 0A0C  
                _TMR2_SetInterruptHandler 0AA5                                    ??_main 003C  
                       ?_i2c_restartWrite 0079             __size_of_i2c1_driver_sendNACK 0004  
                           ?_recLumThresh 002C                                 ??_LED_bin 0025  
                      ??_i2c_restartWrite 007A                 __size_of_handler_clock_ms 000C  
           __size_of_i2c1_driver_resetBus 0001                                 ??_INT_ISR 0078  
                 ?_do_I2C_DO_ADDRESS_NACK 0070                            _convertedValue 004B  
                  __size_of_recTempThresh 0031                                    _ADACCH 0091  
                                  _ADACCL 0090                   __end_of_TMR0_StartTimer 09E2  
             __size_ofi1_checkDebounceSW1 005A                                    _ADCON0 0093  
                                  _ADCON1 0094                                    _ADCON2 0095  
                                  _ADCON3 0096                                    ?_cksum 0070  
                                  _ADERRH 0117                                    _ADERRL 0116  
                                  _ADLTHH 010F                                    _ADLTHL 010E  
                                  _ADRESH 008D                                    _ADRESL 008C  
                                  _ADSTAT 0097                                    _ADUTHH 0111  
                        ___awdiv@dividend 0025                                    _ADUTHL 0110  
                                  _ANSELA 0F38                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                                    _ANSELD 0F59  
                                  _ANSELE 0F64                        __CFG_RSTOSC$HFINT1 0000  
                                  _T0CON0 001E                                    _T0CON1 001F  
                                  _T1GATE 0210                                    _T1GCON 020F  
                                  _RA6PPS 0F16                                    _RC3PPS 0F23  
                                  i1l1200 09C1                                    i1l1130 0B3D  
                 TMR1_WriteTimer@timerVal 0070                                    _RC4PPS 0F24  
                                  i1l1117 09C9                                    i1l1214 0BFB  
                                  i1l1136 09C0                                    i1l1401 0A10  
                                  i1l1322 0B13                                    i1l1404 0A15  
                                  i1l1181 0B8C                                    i1l1413 0E3B  
                                  i1l1421 0670                                    i1l1407 0A1A  
                                  i1l1352 0B6B                                    _ODCONA 0F3A  
                                  i1l1194 0C3E                                    i1l1418 0654  
                                  i1l1434 0728                                    _ODCONB 0F45  
                                  i1l1435 0754                                    _ODCONC 0F50  
                                  i1l1380 09FC                                    _ODCOND 0F5B  
                                  i1l1621 0B9D                                    _ODCONE 0F66  
                                  i1l1374 0A56                                    i1l1462 09ED  
                                  i1l1383 0A01                                    i1l5000 09EF  
                                  i1l1392 0A77                                    i1l1473 0DBB  
                                  i1l1465 09C6                                    i1l1609 0BD0  
                                  i1l1633 0C56                                    i1l1449 0F8C  
                                  i1l1377 09F7                                    i1l1554 09C2  
                                  i1l5002 09E2                                    i1l1386 0A06  
                                  i1l1395 0A5E                                    i1l1459 0E68  
                                  i1l5100 0C85                                    i1l1548 0B4C  
                                  i1l1468 0003                                    i1l5012 09F8  
                                  i1l5020 0A00                                    i1l1573 0BAE  
                                  i1l1389 0A0B                                    i1l5014 09FB  
                                  i1l5030 0A07                                    i1l1398 0A3F  
                                  i1l5200 0AFA                                    i1l5024 0A02  
                                  i1l5032 0A0A                                    i1l6000 0027  
                                  i1l5202 0B01                                    i1l1594 0BBF  
                                  i1l5018 09FD                                    i1l5026 0A05  
                                  i1l5042 0A16                                    i1l6010 0049  
                                  i1l6002 002B                                    i1l5052 0002  
                                  i1l5060 0BAD                                    i1l5036 0A11  
                                  i1l5044 0A19                                    i1l6012 0051  
                                  i1l6004 0036                                    i1l5038 0A14  
                                  i1l6014 0055                                    i1l6006 003A  
                                  i1l5080 0B8D                                    i1l5048 09C5  
                                  i1l5056 0B9E                                    i1l5064 0BAF  
                                  i1l5072 0BC0                                    i1l5400 0A59  
                                  i1l6008 0045                                    i1l5170 0FA2  
                                  i1l4530 0DAE                                    i1l5082 0B95  
                                  i1l5058 0BA6                                    i1l5066 0BB7  
                                  i1l5074 0BC8                                    i1l5090 0C55  
                                  i1l5402 0A5D                                    i1l5410 0A3E  
                                  i1l5330 09D9                                    i1l5340 0B81  
                                  i1l5180 0FBB                                    i1l5172 0FA6  
                                  i1l5164 0F8D                                    i1l5084 0B9C  
                                  i1l5068 0BBE                                    i1l5076 0BCF  
                                  i1l5420 0E10                                    i1l5500 0732  
                                  i1l5332 09DC                                    i1l5094 0C6F  
                                  i1l5350 0B8A                                    i1l5342 0B82  
                                  i1l5182 0FBF                                    i1l5174 0FAC  
                                  i1l5166 0F93                                    i1l4526 0D97  
                                  i1l5510 0F5D                                    i1l5406 0A39  
                                  i1l5414 0A0C                                    i1l5422 0E12  
                                  i1l4800 0E7B                                    i1l5096 0C76  
                                  i1l5344 0B84                                    i1l5176 0FB4  
                                  i1l5168 0F9E                                    i1l5184 0AE2  
                                  i1l4528 0D9D                                    i1l5088 0C3F  
                                  i1l5520 0F66                                    i1l5408 0A3B  
                                  i1l5416 0A0F                                    i1l5424 0E17  
                                  i1l4802 0E7C                                    i1l4810 09C7  
                                  i1l5098 0C7D                                    i1l5346 0B86  
                                  i1l5338 0B7C                                    i1l5178 0FB5  
                                  i1l5186 0AE6                                    i1l5514 0F61  
                                  i1l5434 0E1F                                    i1l5450 0629  
                                  i1l5442 061D                                    i1l4804 0E82  
                                  i1l5348 0B88                                    i1l5188 0AEC  
                                  i1l5516 0F64                                    i1l5508 0F5A  
                                  i1l5372 0A4F                                    i1l5428 0E1B  
                                  i1l5460 0631                                    i1l4806 0E8C  
                                  i1l5526 0F6A                                    i1l5374 0A52  
                                  i1l5382 09F3                                    i1l5390 0A6F  
                                  i1l5462 0656                                    i1l5454 062D  
                                  i1l5446 0625                                    i1l4808 0E91  
                                  i1l4752 09CA                                    i1l4760 0B5D  
                                  i1l5376 0A54                                    i1l5384 09F5  
                                  i1l5392 0A71                                    i1l5464 0662  
                                  i1l5480 0719                                    i1l4770 0580  
                                  i1l4754 09CD                                    i1l4762 0B62  
                                  i1l5378 0A55                                    i1l5386 09F6  
                                  i1l5394 0A76                                    i1l5466 066D  
                                  i1l5490 072A                                    i1l5482 0723  
                                  i1l4780 05BE                                    i1l4772 059D  
                                  i1l5732 0A1B                                    i1l5740 0B38  
                                  i1l4764 0B6A                                    i1l4756 09E6  
                                  i1l5468 066F                                    i1l5484 0726  
                                  i1l5476 070B                                    i1l5820 0E44  
                                  i1l4774 05A2                                    i1l4766 056F  
                                  i1l5734 0A1D                                    i1l5742 0C28  
                                  i1l5750 0B3E                                    i1l4758 0B07  
                                  i1l5398 0A57                                    i1l5494 072E  
                                  i1l5478 0715                                    i1l5822 0E4B  
                                  i1l4792 0BE6                                    i1l4768 0571  
                                  i1l5736 0B2F                                    i1l5744 0C2A  
                                  i1l5752 0B40                                    i1l5824 0E51  
                                  i1l5816 0E3C                                    i1l4786 05C0  
                                  i1l4778 05A6                                    i1l4794 0E69  
                                  i1l5738 0B31                                    i1l5746 0C32  
                                  i1l5754 0B47                                    i1l5818 0E3F  
                                  i1l5826 09EA                                    i1l4788 05C5  
                                  i1l4796 0E6D                                    i1l5748 0C39  
                                  i1l4798 0E75                                    i1l4990 0A47  
                                  i1l4978 09C3                                    i1l4994 09D0  
                                  i1l4986 09D6                                    i1l4996 09D3  
                                  i1l7662 0746                                    i1l5990 000B  
                                  u240_20 0E91                                    u232_20 0B62  
                                  i1l7664 0646                                    u320_20 0036  
                                  i1l5992 000F                                    u240_21 0E90  
                                  u232_21 0B61                                    u320_21 0035  
                                  _INLVLA 0F3C                                    i1l7666 0E33  
                                  i1l5994 0017                                    _INLVLB 0F47  
                                  _INLVLC 0F52                                    i1l7668 0F7E  
                                  i1l5996 001B                                    i1l5988 0006  
                                  _INLVLD 0F5D                                    _INLVLE 0F68  
                                  i1l5998 0023                                    u233_20 0580  
                                  u321_20 003A                                    u313_20 000B  
                                  u233_21 057F                                    u321_21 0039  
                                  u313_21 000A                                    u234_20 059D  
                                  u322_20 0045                                    u314_20 000F  
                                  u234_21 059C                                    u322_21 0044  
                                  u314_21 000E                                    u234_25 0599  
                                  u235_20 05BE                                    u251_20 0C76  
                                  u323_20 0049                                    u315_20 0017  
                                  u235_21 05BD                                    u251_21 0C75  
                                  u323_21 0048                                    u315_21 0016  
                                  u235_25 05BA                                    u260_20 0F9C  
                                  u324_20 0051                                    u316_20 001B  
                                  u260_21 0F99                                    u324_21 0050  
                                  u316_21 001A                                    u236_25 0BF5  
                                  u237_20 0E75                                    u325_20 0055  
                                  u317_20 0023                                    u237_21 0E74  
                                  u325_21 0054                                    u317_21 0022  
                                  u261_24 0F9E                                    u238_20 0E7B  
                                  u262_20 0FAC                                    u318_20 0027  
                                  u238_21 0E7A                                    u262_21 0FAB  
                                  u318_21 0026                                    u239_20 0E8C  
                                  u263_20 0FBB                                    u271_20 0624  
                                  u319_20 002B                                    u239_21 0E8B  
                                  u263_21 0FBA                                    u271_21 0623  
                                  u319_21 002A                                    u264_20 0AEC  
                                  u272_20 066D                                    u264_21 0AEB  
                                  u272_21 066C                                    _INTPPS 0E90  
                                  u273_20 0723                                    u273_21 0722  
                                  u266_20 0B01                                    u194_20 0D9D  
                                  u266_21 0B00                                    u194_21 0D9C  
                                  u267_20 0B81                                    u259_20 0F93  
                                  u267_21 0B80                                    u259_21 0F92  
                                  u293_20 0B38                                    u293_21 0B37  
                                  u294_20 0C39                                    u294_21 0C38  
                                  u295_20 0B47                                    u295_21 0B46  
                                  u457_27 0E6A                                    u298_20 0E44  
                                  u298_21 0E43                                    u299_20 0E4B  
                                  u299_21 0E4A                                    _OSCFRQ 0893  
                                  _ISR_3s 0C6F                    ??_do_I2C_SEND_ADR_READ 0071  
                rdBlkRegCompleteHandler@p 0079                                 ??_i2c_ISR 0020  
              ??_ADCC_GetConversionResult 0025                     ?_save_recovery_params 0070  
                            ?_ring_buffer 0023                            __CFG_PWRTE$OFF 0000  
            __end_ofi1_PWM6_LoadDutyValue 0BFC                     _i2c1_driver_getRXData 09D3  
                        __end_of_mod1_LED 0ACC                          __end_of_mod2_LED 0AC1  
                        __end_of_mod3_LED 0AD7                          __end_of_mod4_LED 0AE2  
    __end_of_TMR1_DefaultInterruptHandler 09C2     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 09C1                              _CCPTMRS1bits 021F  
                                  ___bmul 0C12               __end_of_do_I2C_DO_NACK_STOP 0A16  
     __end_of_i2c_setDataCompleteCallback 0B14               _i2c_setDataCompleteCallback 0B07  
                                  ___wmul 0D32                                 ??___awdiv 0027  
   __end_of_i2c1_driver_clearBusCollision 09DF    __size_of_i2c1_driver_clearBusCollision 0003  
           _i2c1_driver_clearBusCollision 09DC                            __CFG_STVREN$ON 0000  
                               ??___awmod 0027                          __end_of_recAlarm 0A27  
         __size_of_do_I2C_DO_NACK_RESTART 0005                                    _last1m 0056  
                                  _last5s 0057                                 ??_all_LED 002D  
                        __end_of_mode_LED 0DE6                          ?_TMR0_Initialize 0070  
                 __end_of_PWM6_Initialize 0B21                          ___awdiv@quotient 002A  
                   ring_buffer@_ring_byte 0029                            ?_do_I2C_DO_ACK 0070  
                         ___awmod@divisor 0023                           ___awmod@counter 0028  
                          ??_recLumThresh 002D                                    cksum@i 0027  
                           ?_INT_CallBack 0070                   __end_of_DATAEE_ReadByte 0B5C  
                               ??_sw1_EXT 0077                                 ??_cksum_w 002D  
                         _ADCC_Initialize 0BFC                                 ??_recHour 002D  
             __end_of_i2c1_driver_sendACK 09E6                            _PMD_Initialize 0A67  
          __end_of_do_I2C_DO_ADDRESS_NACK 0E3C               __end_of_i2c1_driver_restart 09CD  
                            ?_returnReset 0079                                 ?_ADC_read 0025  
                  ??_ADCC_StartConversion 0023               __end_of_i2c1_driver_startRX 09D3  
        __size_of_INT_SetInterruptHandler 0009  TMR2_SetInterruptHandler@InterruptHandler 0023  
TMR1_SetInterruptHandler@InterruptHandler 0023  TMR0_SetInterruptHandler@InterruptHandler 0023  
 INT_SetInterruptHandler@InterruptHandler 0023                   __end_of_TMR1_WriteTimer 0B8D  
                          _selectSubfield 0396                          ??_config_routine 0039  
                        ?_TMR1_Initialize 0070                         _SYSTEM_Initialize 0CBB  
                 __end_of__initialization 007A                           ??_i2c_setBuffer 0072  
                        _do_I2C_SEND_STOP 0A07                        __size_of_do_I2C_RX 004A  
                      __size_of_do_I2C_TX 0054                        ?_SYSTEM_Initialize 0070  
                __size_of_mode_select_LED 0020                  __size_of_do_I2C_TX_EMPTY 0033  
                save_recovery_params@aux1 0030                       ___bmul@multiplicand 0023  
                 _rdBlkRegCompleteHandler 0C3F                             _recTempThresh 0EC6  
                          __pcstackCOMMON 0070                              __pidataBANK0 0AAE  
                     ??_SYSTEM_Initialize 0025                                 ?_TMR0_ISR 0070  
                               ?_TMR1_ISR 0070                                 ?_TMR2_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                             __end_of_cksum 0D72  
                        _DATAEE_WriteByte 0D72                        ring_buffer@clock_h 0023  
                      ring_buffer@clock_m 0024                        ring_buffer@clock_s 0025  
                        ?_TMR2_Initialize 0070                              LED_bin@value 0023  
                          ??_INT_CallBack 0078                    __end_of_PMD_Initialize 0A6F  
             __size_of_EXT_INT_Initialize 000E                                ??_ADC_read 0027  
                  __end_of_selectSubfield 03F8               ADCC_StartConversion@channel 0023  
                          setCallBack@idx 0074                                   ??_cksum 0025  
                        ?_TMR0_StartTimer 0070                    _do_I2C_DO_NACK_RESTART 0A16  
               __end_of_SYSTEM_Initialize 0CD7                            _mssp1_clearIRQ 09D9  
                              __pbssBANK0 0041                                __pbssBANK1 00A0  
          __size_of_rd2RegCompleteHandler 0011                                   ?_ISR_3s 0070  
           __end_of_rd2RegCompleteHandler 0BD1                        read_ring@nreg_init 0028  
                  ??_save_recovery_params 002E            __size_of_wr2RegCompleteHandler 0011  
           __end_of_wr2RegCompleteHandler 0B9E                     _rd1RegCompleteHandler 0BAF  
                  ?_i2c1_driver_getRXData 0070                        __size_of_read_ring 003F  
                          ?_recTempThresh 002C                     _wr1RegCompleteHandler 0B9E  
            __size_of_i2c_busCollisionISR 0004                                __pmaintext 007E  
                           ??_do_I2C_IDLE 0070                      __size_of_setCallBack 0026  
                           ??_do_I2C_RCEN 0070                                   ?___bmul 0023  
        __end_of_TMR0_SetInterruptHandler 0A9C                   __size_of_TMR0_StopTimer 0003  
                                 ?___wmul 0023                                ??_TMR0_ISR 0075  
                              ??_TMR1_ISR 0072                           __CFG_PPS1WAY$ON 0000  
                              ??_TMR2_ISR 0071                   __end_of_ADCC_Initialize 0C12  
              __end_of_PWM6_LoadDutyValue 0CA1                           ??_do_I2C_DO_ACK 0070  
                              __pintentry 0004                      _limitTempThreshUnits 0000  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                                 _ADPREVH 008F                                   _ADPREVL 008E  
                        ?_PWM6_Initialize 0070                       i2c_setBuffer@buffer 0073  
                                 _ADSTPTH 0113                                   _ADSTPTL 0112  
                         ?_PMD_Initialize 0070            ?_i2c1_driver_clearBusCollision 0070  
                        ?_DATAEE_ReadByte 0023                         ?_i2c1_driver_open 0070  
                       __end_of_do_I2C_RX 0755                         __end_of_do_I2C_TX 0671  
                       ?_i2c1_driver_stop 0070             i1PWM6_LoadDutyValue@dutyValue 0070  
                    __size_of_recoverData 0098                                   _LED_bin 07E5  
                        _handler_clock_ms 0AE2                        ??_i2c1_driver_open 0023  
                                 _INT_ISR 0A1B                        ??_i2c1_driver_stop 0070  
                                 _OSCCON1 088D                                   _OSCCON3 088F  
                           ?_mssp1_setIRQ 0070                      i1_PWM6_LoadDutyValue 0BE6  
                                 _NVMADRH 081B                                   _NVMADRL 081A  
                                 _NVMDATH 081D                                   _OSCTUNE 0892  
                                 _NVMDATL 081C                    selectSubfield@subfield 0037  
                                 _NVMCON2 081F                           ?_selectSubfield 0070  
                                 _PWM6DCH 038D                                   _PWM6DCL 038C  
                                 _PWM6CON 038E                                   _SSP1ADD 018D  
                                 _SLRCONA 0F3B                                   _SLRCONB 0F46  
                                 _SLRCONC 0F51                                   _SLRCOND 0F5C  
                                 _SLRCONE 0F67                                   _SSP1BUF 018C  
                  __end_of_mssp1_clearIRQ 09DC                                   _SSP1MSK 018E  
          __size_of_ADCC_IsConversionDone 0007                                 ?_mod1_LED 0070  
                               ?_mod2_LED 0070                                 ?_mod3_LED 0070  
                               ?_mod4_LED 0070             __end_of_ADCC_IsConversionDone 0A47  
                 ??_do_I2C_SEND_ADR_WRITE 0071                        __size_of_push_ring 0047  
                         _getSubfieldInfo 0318                          ?_TMR1_WriteTimer 0070  
             ??_do_I2C_SEND_RESTART_WRITE 0070                                 ?_recAlarm 002C  
                      _i2c1_driver_TXData 09EE                      DATAEE_WriteByte@bAdd 0029  
                      _i2c1_driver_i2cISR 004D                                 ?_mode_LED 0070  
                         __size_of_ISR_3s 0019                                   _i2c_ISR 0E3C  
                         _limitHoursUnits 0000                 ??_rdBlkRegCompleteHandler 007A  
                    __end_of_recLumThresh 0A2D                            ring_buffer@lum 0027  
                          ring_buffer@tem 0026                        _i2c1_driver_isNACK 0A47  
                     ?_i2c1_driver_TXData 0070                ??_TMR2_SetInterruptHandler 0025  
                   __end_of_num_subfields 1025                      __size_of_ring_buffer 002F  
                    __CFG_SCANE$available 0000                 __size_of_checkDebounceSW1 005A  
               __size_of_checkDebounceSW2 004D                           __size_of___bmul 0016  
                              _recMinutes 0F28                                   ___awdiv 045A  
                                 ___awmod 05C9                             ?_representLed 0070  
                         __size_of___wmul 0020                         ??_mode_select_LED 002D  
                       ??_do_I2C_TX_EMPTY 007A                                   _all_LED 04BA  
                     ?_i2c1_driver_isNACK 0070                                   __ptext1 0DE6  
                                 __ptext2 0E97                                   __ptext3 01FE  
                                 __ptext4 0CD7                                   __ptext5 0B6C  
                                 __ptext6 0D52                                   __ptext7 0FC1  
                                 __ptext8 0C12                                   __ptext9 0B4D  
                     __end_of_do_I2C_IDLE 09F8                       __end_of_do_I2C_RCEN 0A40  
                                 _sw1_EXT 0E69            ??_TMR1_DefaultInterruptHandler 0070  
                                 _cksum_w 0B6C                                 _T1CONbits 020E  
                                 _recHour 0EF7                     _OSCILLATOR_Initialize 0A8A  
                                 _last_ms 0059                                 _T2CONbits 028E  
             __end_of_do_I2C_SEND_RESTART 0A07                            ??_mssp1_setIRQ 0070  
                        ___awmod@dividend 0025                                _duty_cycle 0049  
                             reset_recv@i 002D         __size_of_TMR1_SetInterruptHandler 0009  
                   ?i1_PWM6_LoadDutyValue 0070                      ??_i2c1_driver_TXData 0070  
                       __end_of_read_ring 1000                  ??_PIN_MANAGER_Initialize 0023  
               ?_TMR1_SetInterruptHandler 0023                                 _T2HLTbits 028F  
                                 _nreg_pt 005D                   _INT_SetInterruptHandler 0A81  
                                 _lum_bin 0047               __size_of_increment_subfield 0062  
                         ?_mssp1_clearIRQ 0070                                ??_mod1_LED 002D  
                              ??_mod2_LED 002D                                ??_mod3_LED 002D  
                              ??_mod4_LED 002D                                   main@t1m 00D7  
                                 main@t5s 00D6                  _do_I2C_SEND_RESTART_READ 09F8  
              __size_of_SYSTEM_Initialize 001C                                   clrloop0 0A2E  
                              _hours_tens 00C3                      __size_of_returnReset 0002  
                    end_of_initialization 007A                                 _T2RSTbits 0291  
                    ??_i2c1_driver_isNACK 0070                                ??_recAlarm 002D  
               __size_of_i2c_restartWrite 0002                                   init_ram 0A33  
                              ??_mode_LED 002D              __end_of_i2c1_driver_sendNACK 09EA  
                  ?_rd1RegCompleteHandler 0079                                   initloop 0A34  
                    __end_of_INT_CallBack 0B07                           ??_recTempThresh 002D  
                  ?_wr1RegCompleteHandler 0079              __end_of_i2c1_driver_resetBus 0800  
                              _reset_recv 0CD7                                _lum_thresh 0063  
                           push_ring@nreg 002D                          mode_LED@subfield 002F  
                          ??_representLed 002D                 _do_I2C_SEND_RESTART_WRITE 09FD  
                        ?_ADCC_Initialize 0070                         __end_of_push_ring 07E5  
                   __CFG_WDTCPS$WDTCPS_14 0000                                _returnStop 09C5  
                _TMR0_SetInterruptHandler 0A93                                 _PORTBbits 000D  
                               _PORTCbits 000E           __end_of_rdBlkRegCompleteHandler 0C57  
                __end_of_do_I2C_SEND_STOP 0A0C                      __CFG_WDTCCS$HFINTOSC 0000  
                     recTempThresh@_value 002C                   __end_of_getSubfieldInfo 0396  
              __end_ofi1_checkDebounceSW1 05C9                                 _TRISCbits 0013  
    __size_of_i2c_setDataCompleteCallback 000D                               returnStop@p 0079  
                        __CFG_FEXTOSC$OFF 0000                         __size_of_ADC_read 001A  
                __end_of_DATAEE_WriteByte 0D96              i2c_setDataCompleteCallback@p 0077  
                          __end_of_ISR_3s 0C88             __size_of_do_I2C_SEND_ADR_READ 0009  
                          _TMR0_StopTimer 09C7                               _do_I2C_IDLE 09F3  
                             ?_recMinutes 002C                               _do_I2C_RCEN 0A39  
    __end_of_TMR2_DefaultInterruptHandler 09C3     __size_of_TMR2_DefaultInterruptHandler 0001  
            _TMR2_DefaultInterruptHandler 09C2                            __end_of___bmul 0C28  
                          __end_of___wmul 0D52                         __size_of_TMR0_ISR 000F  
                       __size_of_TMR1_ISR 0017                         __size_of_TMR2_ISR 000F  
                  ?_OSCILLATOR_Initialize 0070         __size_of_ADCC_GetConversionResult 0009  
               ??_INT_SetInterruptHandler 0025              __size_of_do_I2C_DO_NACK_STOP 0005  
               ?_ADCC_GetConversionResult 0023                    ??i1_PWM6_LoadDutyValue 0072  
                 ?_do_I2C_DO_NACK_RESTART 0070                       start_initialization 005D  
                     _i2c_busCollisionISR 09EA                  __size_of_TMR0_Initialize 0015  
         __size_of_PIN_MANAGER_Initialize 0049                     __size_of_recLumThresh 0006  
           __size_of_ADCC_StartConversion 0008                              setCallBack@p 0072  
            __size_of_i2c1_driver_sendACK 0004                   i2c_setBuffer@bufferSize 0070  
                 ??_i2c1_driver_getRXData 0070                    rd1RegCompleteHandler@p 0079  
                                ??_ISR_3s 0074              __size_of_i2c1_driver_restart 0003  
            __size_of_i2c1_driver_startRX 0003                       DATAEE_ReadByte@bAdd 0023  
                   __end_of_i2c_setBuffer 0B6C              ?_INT_DefaultInterruptHandler 0070  
                  __end_of_TMR0_StopTimer 09CA                  __end_of_handler_clock_ms 0AEE  
                    ?_i2c_busCollisionISR 0070                          __CFG_LPBOREN$OFF 0000  
                             ?_reset_recv 0070                      __end_of_mssp1_setIRQ 09D9  
                __size_of_TMR1_Initialize 001F                        recLumThresh@_value 002C  
                                ??___bmul 0024                          ??_PMD_Initialize 0023  
                        _checkDebounceSW1 0515                          _checkDebounceSW2 06BE  
                                ??___wmul 0027                    wr1RegCompleteHandler@p 0079  
                           ?_do_I2C_RESET 0070                               __pdataBANK0 005F  
              __end_of_EXT_INT_Initialize 0B2F             ?_TMR2_DefaultInterruptHandler 0070  
                             ?_returnStop 0079                          ??_selectSubfield 0035  
          __end_of_do_I2C_DO_NACK_RESTART 0A1B                                read_ring@i 002D  
                    _i2c1_driver_sendNACK 09E6                         read_ring@absindex 002F  
                            _recLumThresh 0A27                          ?_getSubfieldInfo 0070  
                                ?_LED_bin 0023                               __pbssCOMMON 007D  
                               ___latbits 0002                      _i2c1_driver_resetBus 07FF  
                                ?_INT_ISR 0070                   save_recovery_params@aux 002F  
                           __pcstackBANK0 0020                             __pcstackBANK1 00D4  
                      _PWM6_LoadDutyValue 0C88                  __size_of_TMR2_Initialize 0018  
                               _do_I2C_RX 070B                                 _do_I2C_TX 061D  
                   __size_of_INT_CallBack 000D                      __end_of_representLed 06BE  
                     __size_of_recMinutes 0032            __size_of_do_I2C_SEND_ADR_WRITE 0008  
                       __size_of_mod1_LED 000B                         __size_of_mod2_LED 000A  
           __end_of_do_I2C_SEND_ADR_WRITE 0A5F                         __size_of_mod3_LED 000B  
                       __size_of_mod4_LED 000B                       ?_PWM6_LoadDutyValue 0029  
                        _i2c_restartWrite 09C3                 __size_of_i2c1_driver_open 000C  
                         _mode_select_LED 0D12                 __size_of_i2c1_driver_stop 0003  
                                ?_i2c_ISR 0070                           _do_I2C_TX_EMPTY 0F5A  
                       __size_of_recAlarm 0006                     _TMR0_InterruptHandler 00D0  
                           ??_setCallBack 0073                                 __pnvBANK0 0068  
                               __pnvBANK1 00CC                     _rd2RegCompleteHandler 0BC0  
                __size_of_TMR0_StartTimer 0003                           ?_TMR0_StopTimer 0070  
                   ??_i2c_busCollisionISR 0070                         __size_of_mode_LED 002A  
                   __end_of_fsmStateTable 1020             __size_of_save_recovery_params 002A  
                  _PIN_MANAGER_Initialize 0755                     _wr2RegCompleteHandler 0B8D  
           ??_INT_DefaultInterruptHandler 0070                   __size_of_config_routine 0082  
        __end_of_TMR1_SetInterruptHandler 0AA5                         read_ring@subindex 002A  
                          ??_do_I2C_RESET 0070                                  ?___awdiv 0023  
                               __ptext100 0AE2                                 __ptext101 0C28  
                               __ptext110 0AFA                                 __ptext102 09C1  
                               __ptext111 09BF                                 __ptext103 0F8D  
                               __ptext112 0E69                                 __ptext104 0B7C  
                               __ptext113 056F                                 __ptext105 0B2F  
                               __ptext114 0BE6                                 __ptext106 0C6F  
                               __ptext107 09C0                                 __ptext108 09C7  
                               __ptext109 0A1B                                  ?___awmod 0023  
                ??_do_I2C_DO_ADDRESS_NACK 007A               _i2c1_driver_busCollisionISR 004F  
                                ?_all_LED 0070                     __end_of_do_I2C_DO_ACK 0A11  
                    ??_PWM6_LoadDutyValue 002B                             ??_recoverData 002F  
            ??_INTERRUPT_InterruptManager 007D                ??_do_I2C_SEND_RESTART_READ 0070  
                   ?_i2c1_driver_sendNACK 0070                                  ?_sw1_EXT 0070  
                                ?_cksum_w 0070                              _INT_CallBack 0AFA  
                        ??_mssp1_clearIRQ 0070                                  ?_recHour 002C  
                   ?_i2c1_driver_resetBus 0070        __size_of_do_I2C_SEND_RESTART_WRITE 0005  
                           recHour@_value 002C                                  _ADC_read 0CA1  
                              ?_do_I2C_RX 0070                                ?_do_I2C_TX 0070  
                __size_of_PWM6_Initialize 000D                       __size_of_reset_recv 001C  
                          __size_of_cksum 0020                                  _T2CLKCON 0290  
                __size_of_DATAEE_ReadByte 000F                   ??_rd1RegCompleteHandler 007A  
                               _read_ring 0FC1                                 _min_units 00BD  
                 ??_wr1RegCompleteHandler 007A                     _ADCC_IsConversionDone 0A40  
                       ??_TMR0_Initialize 0025                            ___wmul@product 0027  
                                _LATAbits 0016                       __size_of_returnStop 0002  
                               clear_ram0 0A2D                                  _PIE0bits 0716  
                       _handler_clock_hms 0F8D                                 _nreg_init 005E  
                           ??_ring_buffer 0028                                  _PIE3bits 0719  
                                _PIE4bits 071A                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 0057                             _lum_threshold 0045  
              ??_TMR0_SetInterruptHandler 0025                                  _PIR0bits 070C  
                             _config_mode 0054                                  _PIR3bits 070F  
                               _ring_byte 00C7                                  _PIR4bits 0710  
                      ?_handler_clock_hms 0070                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR0_ISR 0B2F  
                                _TMR1_ISR 0C28                                  _TMR2_ISR 0B3E  
            ?_i2c_setDataCompleteCallback 0075                                  _SSP1STAT 018F  
                     __end_of_setCallBack 0DBC                          push_ring@nreg_pt 0033  
                     ??_handler_clock_hms 0070                         ??_TMR1_Initialize 0025  
                              _ADCON0bits 0093                                _ADCON1bits 0094  
                              _ADCON2bits 0095                                _ADCON3bits 0096  
                       ___wmul@multiplier 0023                                 _push_ring 079E  
                       ?_do_I2C_SEND_STOP 0070                                  _WPUBbits 0F44  
              __end_of_increment_subfield 045A      __size_of_INT_DefaultInterruptHandler 0001  
          ??_TMR2_DefaultInterruptHandler 0070         __size_of_TMR2_SetInterruptHandler 0009  
                           ??_returnReset 007A                 ?_TMR2_SetInterruptHandler 0023  
                      ??_do_I2C_SEND_STOP 0070               __size_of_i2c1_driver_TXData 0005  
                        __size_of_LED_bin 001A                     DATAEE_WriteByte@bData 002B  
                     __end_of_recoverData 0296         __end_of_do_I2C_SEND_RESTART_WRITE 0A02  
                        __size_of_INT_ISR 0006                   __end_of_mode_select_LED 0D32  
                 __end_of_do_I2C_TX_EMPTY 0F8D                                ?_read_ring 0027  
                ?_rdBlkRegCompleteHandler 0079                         ?_DATAEE_WriteByte 0029  
            __size_of_do_I2C_SEND_RESTART 0005               __size_of_i2c1_driver_isNACK 0008  
               __end_of_handler_clock_hms 0FC1                     __size_of_mssp1_setIRQ 0003  
                       ??_TMR2_Initialize 0025                    ?_rd2RegCompleteHandler 0079  
                      ??_DATAEE_WriteByte 002C                        i1_checkDebounceSW1 056F  
                     _do_I2C_DO_NACK_STOP 0A11                          __size_of_i2c_ISR 002D  
                  ?_wr2RegCompleteHandler 0079                                _ADSTATbits 0097  
        __end_of_ADCC_GetConversionResult 0A81                     __end_of_recTempThresh 0EF7  
                            ?_do_I2C_IDLE 0070                       ?i1_checkDebounceSW1 0070  
                            ??_recMinutes 002D                              ?_do_I2C_RCEN 0070  
                              push_ring@i 0032                   ??_OSCILLATOR_Initialize 0023  
                       ??_TMR0_StartTimer 0023                       __end_of_ring_buffer 0EC6  
                     _i2c1_driver_sendACK 09E2                          __size_of___awdiv 0060  
                        __size_of___awmod 0054           __size_of_do_I2C_DO_ADDRESS_NACK 002C  
                     i2c1_driver_TXData@d 0070                    ??_i2c1_driver_sendNACK 0070  
           ??_i2c_setDataCompleteCallback 0078                          __size_of_all_LED 005B  
                     _i2c1_driver_restart 09CA                  _TMR1_SetInterruptHandler 0A9C  
                    ?_do_I2C_DO_NACK_STOP 0070                       _i2c1_driver_startRX 09D0  
            __end_of_do_I2C_SEND_ADR_READ 0A78                                ?_push_ring 002D  
                  ??_i2c1_driver_resetBus 0070                     _TMR1_InterruptHandler 00CE  
                        __size_of_sw1_EXT 002E                          __size_of_cksum_w 0010  
                   __size_of_representLed 004D                                _T0CON0bits 001E  
                __size_of_ADCC_Initialize 0016                          read_ring@nreg_pt 002E  
                        __size_of_recHour 0031                                  _main$509 00D8  
                            _mssp1_setIRQ 09D6                               ??_do_I2C_RX 007A  
                             ??_do_I2C_TX 007A                      ??i1_checkDebounceSW1 0070  
                                __ptext10 079E                                  __ptext11 0D72  
                                __ptext20 03F8                                  __ptext12 0AEE  
                                __ptext21 0671                                  __ptext13 0296  
                              _T1GCONbits 020F                                  __ptext30 06BE  
                                __ptext22 0D32                                  __ptext14 0396  
                                __ptext31 0515                                  __ptext23 0A27  
                                __ptext15 0DBC                                  __ptext40 0CF3  
                                __ptext32 0318                                  __ptext24 0A21  
                                __ptext16 0AD7                                  __ptext41 0A9C  
                                __ptext33 04BA                                  __ptext25 0F28  
                                __ptext17 0ACC                                  __ptext50 0BFC  
                                __ptext42 0BD1                                  __ptext34 0D12  
                                __ptext26 0EF7                                  __ptext18 0AB7  
                                __ptext51 07E5                                  __ptext43 0A93  
                                __ptext35 0C88                                  __ptext27 0EC6  
                                __ptext19 0AC1                                  __ptext60 09D9  
                                __ptext52 0CA1                                  __ptext44 0B14  
                                __ptext36 09DF                                  __ptext28 05C9  
                                __ptext61 070B                                  __ptext53 0A5F  
                                __ptext45 0A67                                  __ptext37 0CBB  
                                __ptext29 045A                                  __ptext70 0A07  
                                __ptext62 061D                                  __ptext54 0A40  
                                __ptext46 0755                                  __ptext38 0C57  
                                __ptext71 0A02                                  __ptext63 0E10  
                                __ptext55 0A78                                  __ptext47 0A8A  
                                __ptext39 0AA5                                  __ptext80 09D3  
                                __ptext72 09FD                                  __ptext64 0A16  
                                __ptext48 0B21                                  __ptext81 09E6  
                                __ptext73 09F8                                  __ptext65 0A11  
                                __ptext57 09EA                                  __ptext49 0A81  
                                __ptext90 09C3                                  __ptext82 07FF  
                                __ptext74 09F3                                  __ptext66 0A0C  
                                __ptext58 09DC                                  __ptext91 0B8D  
                                __ptext83 09D0                                  __ptext75 0A4F  
                                __ptext67 0A39                                  __ptext59 0E3C  
                                __ptext92 0B07                                  __ptext84 0C3F  
                                __ptext76 0F5A                                  __ptext68 0A57  
                                __ptext93 0D96                                  __ptext85 0BC0  
                                __ptext77 09D6                                  __ptext69 0A6F  
                                __ptext94 0B5C                                  __ptext86 0BAF  
                                __ptext78 0A47                                  __ptext95 09CD  
                                __ptext87 0B9E                                  __ptext79 09EE  
                                __ptext96 09CA                                  __ptext88 0002  
                                __ptext97 09E2                                  __ptext89 09C5  
                                __ptext98 0B3E                                  __ptext99 09C2  
                                _mod1_LED 0AC1                              _SSP1CON1bits 0190  
                                _mod2_LED 0AB7                  __end_of_checkDebounceSW1 056F  
                            _SSP1CON2bits 0191                  __end_of_checkDebounceSW2 070B  
                                _mod3_LED 0ACC                                  _mod4_LED 0AD7  
                  ?_ADCC_IsConversionDone 0070                      ?_i2c1_driver_sendACK 0070  
                    __end_of_do_I2C_RESET 0A57               DATAEE_WriteByte@GIEBitValue 002C  
                      __end_of_recMinutes 0F5A                                  _recAlarm 0A21  
                    ?_i2c1_driver_restart 0070                       __end_of_returnReset 0004  
                                _last_ms2 0058                          _i2c1_driver_open 0AEE  
                                _mode_LED 0DBC                         ??_PWM6_Initialize 0023  
                        _i2c1_driver_stop 09CD                             __size_of_main 0180  
                    ?_i2c1_driver_startRX 0070            __size_of_i2c1_driver_getRXData 0003  
                                _min_tens 00BF             __end_of_i2c1_driver_getRXData 09D6  
    __end_of_TMR0_DefaultInterruptHandler 09C1     __size_of_TMR0_DefaultInterruptHandler 0001  
            _TMR0_DefaultInterruptHandler 09C0                         ??_DATAEE_ReadByte 0025  
                    __CFG_WDTCWS$WDTCWS_7 0000                               _setCallBack 0D96  
                            ??_reset_recv 002D                         ?_handler_clock_ms 0070  
                                _set_mode 0055                            _config_routine 0296  
                           _num_subfields 1020              __end_of_ADCC_StartConversion 0A67  
                                int$flags 007E                        ??_handler_clock_ms 0070  
                            _representLed 0671        __end_of_INTERRUPT_InterruptManager 005B  
              _INTERRUPT_InterruptManager 0004                       _mode_field_subfield 005F  
                            _SSP1STATbits 018F                         ??_TMR1_WriteTimer 0072  
                                cksum@res 0026          __end_of_do_I2C_SEND_RESTART_READ 09FD  
                            ??_returnStop 007A                               _hours_units 00C1  
                __end_of_i2c_restartWrite 09C5                     ??_do_I2C_DO_NACK_STOP 0070  
                             _recoverData 01FE                                _INTCONbits 000B  
                             _NVMCON1bits 081E             __size_ofi1_PWM6_LoadDutyValue 0016  
                    _INT_InterruptHandler 00D2                          ?_mode_select_LED 0070  
                      __end_of_reset_recv 0CF3                     ??_i2c1_driver_sendACK 0070  
                      _EXT_INT_Initialize 0B21                          ?_do_I2C_TX_EMPTY 0070  
                             ??_read_ring 002B                    _do_I2C_DO_ADDRESS_NACK 0E10  
                                intlevel1 0000                          ??_TMR0_StopTimer 0070  
                   ??_i2c1_driver_restart 0070                __size_of_handler_clock_hms 0034  
                  rd2RegCompleteHandler@p 0079                     ??_i2c1_driver_startRX 0070  
                 ?_PIN_MANAGER_Initialize 0070                         i2c_restartWrite@p 0079  
                       __CFG_CLKOUTEN$OFF 0000                       ?_EXT_INT_Initialize 0070  
                      __end_of_returnStop 09C7                    __end_of_config_routine 0318  
                             _ring_buffer 0E97             ?_TMR0_DefaultInterruptHandler 0070  
                  wr2RegCompleteHandler@p 0079                  ?_INT_SetInterruptHandler 0023  
                _ADCC_GetConversionResult 0A78                               _temp_thresh 0064  
                           __pstringtext1 1000                             __pstringtext2 1020  
                    ??_EXT_INT_Initialize 0025                            read_ring@index 0029  
                             ??_push_ring 0030                                _SSP1DATPPS 0EC6  
            __end_of_save_recovery_params 0E10                                _SSP1CLKPPS 0EC5  
                         _TMR0_Initialize 0BD1                    __size_of_i2c_setBuffer 0010  
                             _returnReset 0002               PWM6_LoadDutyValue@dutyValue 0029  
                           read_ring@nreg 0027            __end_of_PIN_MANAGER_Initialize 079E  
                       ??_ADCC_Initialize 0023               __end_of_i2c_busCollisionISR 09EE  
                __size_of_getSubfieldInfo 007E            __size_of_rd1RegCompleteHandler 0011  
           __end_of_rd1RegCompleteHandler 0BC0                        push_ring@nreg_init 002E  
          __size_of_wr1RegCompleteHandler 0011             __end_of_wr1RegCompleteHandler 0BAF  
                   _TMR2_InterruptHandler 00CC                     _do_I2C_SEND_ADR_WRITE 0A57  
                      push_ring@ring_byte 002F                      _do_I2C_SEND_ADR_READ 0A6F  
                         ?_config_routine 0070                           _TMR1_Initialize 0CF3  
                          recAlarm@_value 002C  
